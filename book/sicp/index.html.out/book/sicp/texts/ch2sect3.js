// Compiled by ClojureScript 1.7.48 {:static-fns true, :optimize-constants true}
goog.provide('book.sicp.texts.ch2sect3');
goog.require('cljs.core');
goog.require('tailrecursion.hoplon.markdown');
goog.require('book.sicp.book_data');
goog.require('tailrecursion.hoplon');
goog.require('tailrecursion.javelin');
/**
 * @param {...*} var_args
 */
book.sicp.texts.ch2sect3.content = (function() { 
var book$sicp$texts$ch2sect3$content__delegate = function (args__8082__auto__){
var vec__319868 = tailrecursion.hoplon.parse_args(args__8082__auto__);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__319868,(0),null);
var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__319868,(1),null);
var G__319869 = cljs.core.PersistentArrayMap.EMPTY;
var G__319870 = book.sicp.book_data.sect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Symbolic Data"], null),(function (){var _STAR_references_STAR_319913 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_319914 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_319915 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_319916 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__319917 = cljs.core.PersistentArrayMap.EMPTY;
var G__319918 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["All the compound data objects we have used so far were constructed ultimately from numbers. In this section we extend the representational capability of our language by introducing the ability to work with arbitrary symbols as data."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__319917,G__319918) : tailrecursion.hoplon.markdown.para_node.call(null,G__319917,G__319918));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_319916;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_319915;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_319914;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_319913;
}})()], 0));
var G__319871 = "";
var G__319872 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Quotation"], null),(function (){var _STAR_references_STAR_319919 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_319920 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_319921 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_319922 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__319923 = cljs.core.PersistentArrayMap.EMPTY;
var G__319924 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If we can form compound data using symbols, we can have lists such as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__319923,G__319924) : tailrecursion.hoplon.markdown.para_node.call(null,G__319923,G__319924));
})(),(function (){var G__319997 = (function (){var G__319998 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__319999 = (function (){var G__320000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__320001 = "(";
var G__320002 = (function (){var G__320036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320037 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320036,G__320037) : tailrecursion.hoplon.span.call(null,G__320036,G__320037));
})();
var G__320003 = " ";
var G__320004 = (function (){var G__320038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320039 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320038,G__320039) : tailrecursion.hoplon.span.call(null,G__320038,G__320039));
})();
var G__320005 = " ";
var G__320006 = (function (){var G__320040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320041 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320040,G__320041) : tailrecursion.hoplon.span.call(null,G__320040,G__320041));
})();
var G__320007 = " ";
var G__320008 = (function (){var G__320042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320043 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320042,G__320043) : tailrecursion.hoplon.span.call(null,G__320042,G__320043));
})();
var G__320009 = ")\n(";
var G__320010 = (function (){var G__320044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320045 = "12";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320044,G__320045) : tailrecursion.hoplon.span.call(null,G__320044,G__320045));
})();
var G__320011 = " ";
var G__320012 = (function (){var G__320046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320047 = "45";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320046,G__320047) : tailrecursion.hoplon.span.call(null,G__320046,G__320047));
})();
var G__320013 = " ";
var G__320014 = (function (){var G__320048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320049 = "17";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320048,G__320049) : tailrecursion.hoplon.span.call(null,G__320048,G__320049));
})();
var G__320015 = ")\n((";
var G__320016 = (function (){var G__320050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320051 = "Norah";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320050,G__320051) : tailrecursion.hoplon.span.call(null,G__320050,G__320051));
})();
var G__320017 = " ";
var G__320018 = (function (){var G__320052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320053 = "12";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320052,G__320053) : tailrecursion.hoplon.span.call(null,G__320052,G__320053));
})();
var G__320019 = ") (";
var G__320020 = (function (){var G__320054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320055 = "Molly";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320054,G__320055) : tailrecursion.hoplon.span.call(null,G__320054,G__320055));
})();
var G__320021 = " ";
var G__320022 = (function (){var G__320056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320057 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320056,G__320057) : tailrecursion.hoplon.span.call(null,G__320056,G__320057));
})();
var G__320023 = ") (";
var G__320024 = (function (){var G__320058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320059 = "Anna";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320058,G__320059) : tailrecursion.hoplon.span.call(null,G__320058,G__320059));
})();
var G__320025 = " ";
var G__320026 = (function (){var G__320060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320061 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320060,G__320061) : tailrecursion.hoplon.span.call(null,G__320060,G__320061));
})();
var G__320027 = ") (";
var G__320028 = (function (){var G__320062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320063 = "Lauren";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320062,G__320063) : tailrecursion.hoplon.span.call(null,G__320062,G__320063));
})();
var G__320029 = " ";
var G__320030 = (function (){var G__320064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320065 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320064,G__320065) : tailrecursion.hoplon.span.call(null,G__320064,G__320065));
})();
var G__320031 = ") (";
var G__320032 = (function (){var G__320066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320067 = "Charlotte";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320066,G__320067) : tailrecursion.hoplon.span.call(null,G__320066,G__320067));
})();
var G__320033 = " ";
var G__320034 = (function (){var G__320068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320069 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320068,G__320069) : tailrecursion.hoplon.span.call(null,G__320068,G__320069));
})();
var G__320035 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__320000,G__320001,G__320002,G__320003,G__320004,G__320005,G__320006,G__320007,G__320008,G__320009,G__320010,G__320011,G__320012,G__320013,G__320014,G__320015,G__320016,G__320017,G__320018,G__320019,G__320020,G__320021,G__320022,G__320023,G__320024,G__320025,G__320026,G__320027,G__320028,G__320029,G__320030,G__320031,G__320032,G__320033,G__320034,G__320035) : tailrecursion.hoplon.pre.call(null,G__320000,G__320001,G__320002,G__320003,G__320004,G__320005,G__320006,G__320007,G__320008,G__320009,G__320010,G__320011,G__320012,G__320013,G__320014,G__320015,G__320016,G__320017,G__320018,G__320019,G__320020,G__320021,G__320022,G__320023,G__320024,G__320025,G__320026,G__320027,G__320028,G__320029,G__320030,G__320031,G__320032,G__320033,G__320034,G__320035));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__319998,G__319999) : tailrecursion.hoplon.div.call(null,G__319998,G__319999));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__319997) : tailrecursion.hoplon.div.call(null,G__319997));
})(),(function (){var G__320070 = cljs.core.PersistentArrayMap.EMPTY;
var G__320071 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lists containing symbols can look just like the exressions of our language:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__320070,G__320071) : tailrecursion.hoplon.markdown.para_node.call(null,G__320070,G__320071));
})(),(function (){var G__320154 = (function (){var G__320155 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__320156 = (function (){var G__320157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__320158 = "(";
var G__320159 = (function (){var G__320195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320196 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320195,G__320196) : tailrecursion.hoplon.span.call(null,G__320195,G__320196));
})();
var G__320160 = "(";
var G__320161 = (function (){var G__320197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320198 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320197,G__320198) : tailrecursion.hoplon.span.call(null,G__320197,G__320198));
})();
var G__320162 = (function (){var G__320199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320200 = "23";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320199,G__320200) : tailrecursion.hoplon.span.call(null,G__320199,G__320200));
})();
var G__320163 = " ";
var G__320164 = (function (){var G__320201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320202 = "45";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320201,G__320202) : tailrecursion.hoplon.span.call(null,G__320201,G__320202));
})();
var G__320165 = ") (";
var G__320166 = (function (){var G__320203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320204 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320203,G__320204) : tailrecursion.hoplon.span.call(null,G__320203,G__320204));
})();
var G__320167 = (function (){var G__320205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320206 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320205,G__320206) : tailrecursion.hoplon.span.call(null,G__320205,G__320206));
})();
var G__320168 = " ";
var G__320169 = (function (){var G__320207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320208 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320207,G__320208) : tailrecursion.hoplon.span.call(null,G__320207,G__320208));
})();
var G__320170 = "))\n(";
var G__320171 = (function (){var G__320209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__320210 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320209,G__320210) : tailrecursion.hoplon.span.call(null,G__320209,G__320210));
})();
var G__320172 = (function (){var G__320211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320212 = "fact";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320211,G__320212) : tailrecursion.hoplon.span.call(null,G__320211,G__320212));
})();
var G__320173 = " [";
var G__320174 = (function (){var G__320213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320214 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320213,G__320214) : tailrecursion.hoplon.span.call(null,G__320213,G__320214));
})();
var G__320175 = "] (";
var G__320176 = (function (){var G__320215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__320216 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320215,G__320216) : tailrecursion.hoplon.span.call(null,G__320215,G__320216));
})();
var G__320177 = "(";
var G__320178 = (function (){var G__320217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320218 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320217,G__320218) : tailrecursion.hoplon.span.call(null,G__320217,G__320218));
})();
var G__320179 = (function (){var G__320219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320220 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320219,G__320220) : tailrecursion.hoplon.span.call(null,G__320219,G__320220));
})();
var G__320180 = " ";
var G__320181 = (function (){var G__320221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320222 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320221,G__320222) : tailrecursion.hoplon.span.call(null,G__320221,G__320222));
})();
var G__320182 = ") ";
var G__320183 = (function (){var G__320223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320224 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320223,G__320224) : tailrecursion.hoplon.span.call(null,G__320223,G__320224));
})();
var G__320184 = " (";
var G__320185 = (function (){var G__320225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320226 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320225,G__320226) : tailrecursion.hoplon.span.call(null,G__320225,G__320226));
})();
var G__320186 = (function (){var G__320227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320228 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320227,G__320228) : tailrecursion.hoplon.span.call(null,G__320227,G__320228));
})();
var G__320187 = " (";
var G__320188 = (function (){var G__320229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320230 = "fact";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320229,G__320230) : tailrecursion.hoplon.span.call(null,G__320229,G__320230));
})();
var G__320189 = " (";
var G__320190 = (function (){var G__320231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320232 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320231,G__320232) : tailrecursion.hoplon.span.call(null,G__320231,G__320232));
})();
var G__320191 = (function (){var G__320233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320234 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320233,G__320234) : tailrecursion.hoplon.span.call(null,G__320233,G__320234));
})();
var G__320192 = " ";
var G__320193 = (function (){var G__320235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320236 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320235,G__320236) : tailrecursion.hoplon.span.call(null,G__320235,G__320236));
})();
var G__320194 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38(G__320157,G__320158,G__320159,G__320160,G__320161,G__320162,G__320163,G__320164,G__320165,G__320166,G__320167,G__320168,G__320169,G__320170,G__320171,G__320172,G__320173,G__320174,G__320175,G__320176,G__320177,G__320178,G__320179,G__320180,G__320181,G__320182,G__320183,G__320184,G__320185,G__320186,G__320187,G__320188,G__320189,G__320190,G__320191,G__320192,G__320193,G__320194) : tailrecursion.hoplon.pre.call(null,G__320157,G__320158,G__320159,G__320160,G__320161,G__320162,G__320163,G__320164,G__320165,G__320166,G__320167,G__320168,G__320169,G__320170,G__320171,G__320172,G__320173,G__320174,G__320175,G__320176,G__320177,G__320178,G__320179,G__320180,G__320181,G__320182,G__320183,G__320184,G__320185,G__320186,G__320187,G__320188,G__320189,G__320190,G__320191,G__320192,G__320193,G__320194));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__320155,G__320156) : tailrecursion.hoplon.div.call(null,G__320155,G__320156));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__320154) : tailrecursion.hoplon.div.call(null,G__320154));
})(),(function (){var G__320237 = cljs.core.PersistentArrayMap.EMPTY;
var G__320238 = new cljs.core.PersistentVector(null, 28, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In order to manipulate symbols we need a new element in our language: the ability to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["quote"], null)], 0))," a data object. Suppose we want to construct the list ",(function (){var G__320239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(a b)"], null);
var G__320240 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320239,G__320240) : tailrecursion.hoplon.markdown.code_node.call(null,G__320239,G__320240));
})(),". We can",(function (){var G__320241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__320242 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__320241,G__320242) : tailrecursion.hoplon.markdown.simple_node.call(null,G__320241,G__320242));
})(),"t accomplish this with ",(function (){var G__320243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(list a b)"], null);
var G__320244 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320243,G__320244) : tailrecursion.hoplon.markdown.code_node.call(null,G__320243,G__320244));
})(),", because this expression constructs a list of the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["values"], null)], 0))," of ",(function (){var G__320245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"a"], null);
var G__320246 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320245,G__320246) : tailrecursion.hoplon.markdown.code_node.call(null,G__320245,G__320246));
})()," and ",(function (){var G__320247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"b"], null);
var G__320248 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320247,G__320248) : tailrecursion.hoplon.markdown.code_node.call(null,G__320247,G__320248));
})()," rather than the symbols themselves. This issue is well known in the context of natural languages, where words and sentences may be regarded either as semantic entities or as character strings (syntactic entities). The common practice in natural languages is to use quotation marks to indicate that a word or a sentence is to be treated literally as a string of characters. For instance, the first letter of ",(function (){var G__320249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320250 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["John"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320249,G__320250) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320249,G__320250));
})()," is clearly a ",(function (){var G__320251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320252 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["J."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320251,G__320252) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320251,G__320252));
})()," If we tell somebody, ",(function (){var G__320253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320254 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["say your name aloud,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320253,G__320254) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320253,G__320254));
})()," we expect to hear that person",(function (){var G__320255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__320256 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__320255,G__320256) : tailrecursion.hoplon.markdown.simple_node.call(null,G__320255,G__320256));
})(),"s name. However, if we tell somebody ",(function (){var G__320257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320258 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["say 'your name' aloud,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320257,G__320258) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320257,G__320258));
})()," we expect to hear the words ",(function (){var G__320259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320260 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["your name."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320259,G__320260) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320259,G__320260));
})()," Note that we are forced to nest quotation marks to describe what somebody else might say.",(function (){var G__320261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__320262 = new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Allowing quotation in a language wreaks havoc with the ability to reason about the language in simple terms, because it destroys the notion that equals can be substituted for equals. For example, three is one plus two, but the word ",(function (){var G__320263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320264 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["three"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320263,G__320264) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320263,G__320264));
})()," is not the phrase ",(function (){var G__320265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320266 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["one plus two."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320265,G__320266) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320265,G__320266));
})()," Quotation is powerful because it gives us a way to build expressions that manipulate other expressions (as we will see when we write an interpreter in chapter 4). But allowing statements in a language that talk about other statements in that language makes it very difficult to maintain any coherent principle of what ",(function (){var G__320267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320268 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["equals can be substituted for equals"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320267,G__320268) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320267,G__320268));
})()," should mean. For example, if we know that the evening star is the morning star, then from the statement ",(function (){var G__320269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320270 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the evening star is Venus"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320269,G__320270) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320269,G__320270));
})()," we can deduce ",(function (){var G__320271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320272 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the morning star is Venus."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320271,G__320272) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320271,G__320272));
})()," However, given that ",(function (){var G__320273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320274 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["John knows that the evening star is Venus"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320273,G__320274) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320273,G__320274));
})()," we cannot infer that ",(function (){var G__320275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320276 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["John knows that the morning star is Venus."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320275,G__320276) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320275,G__320276));
})()], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320261,G__320262) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320261,G__320262));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__320237,G__320238) : tailrecursion.hoplon.markdown.para_node.call(null,G__320237,G__320238));
})(),(function (){var G__320277 = cljs.core.PersistentArrayMap.EMPTY;
var G__320278 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["w this same practice to identify lists and symbols that are to be treated as data objects rather than as expressions to be evaluated. However, our format for quoting differs from that of natural languages in that we place a quotation mark (traditionally, the single quote symbol ",(function (){var G__320279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__320280 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__320279,G__320280) : tailrecursion.hoplon.markdown.simple_node.call(null,G__320279,G__320280));
})(),") only at the beginning of the object to be quoted. We can get away with this in Scheme syntax because we rely on blanks and parentheses to delimit objects. Thus, the meaning of the single quote character is to quote the next object.",(function (){var G__320281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__320282 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The single quote is different from the double quote we have been using to enclose character strings to be printed. Whereas the single quote can be used to denote lists or symbols, the double quote is used only with character strings. In this book, the only use for character strings is as items to be printed."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320281,G__320282) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320281,G__320282));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__320277,G__320278) : tailrecursion.hoplon.markdown.para_node.call(null,G__320277,G__320278));
})(),(function (){var G__320283 = cljs.core.PersistentArrayMap.EMPTY;
var G__320284 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we can distinguish between simbols and their values:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__320283,G__320284) : tailrecursion.hoplon.markdown.para_node.call(null,G__320283,G__320284));
})(),(function (){var G__320380 = (function (){var G__320381 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__320382 = (function (){var G__320383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__320384 = "(";
var G__320385 = (function (){var G__320428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__320429 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320428,G__320429) : tailrecursion.hoplon.span.call(null,G__320428,G__320429));
})();
var G__320386 = (function (){var G__320430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320431 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320430,G__320431) : tailrecursion.hoplon.span.call(null,G__320430,G__320431));
})();
var G__320387 = " ";
var G__320388 = (function (){var G__320432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320433 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320432,G__320433) : tailrecursion.hoplon.span.call(null,G__320432,G__320433));
})();
var G__320389 = ")\n\n(";
var G__320390 = (function (){var G__320434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__320435 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320434,G__320435) : tailrecursion.hoplon.span.call(null,G__320434,G__320435));
})();
var G__320391 = (function (){var G__320436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320437 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320436,G__320437) : tailrecursion.hoplon.span.call(null,G__320436,G__320437));
})();
var G__320392 = " ";
var G__320393 = (function (){var G__320438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320439 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320438,G__320439) : tailrecursion.hoplon.span.call(null,G__320438,G__320439));
})();
var G__320394 = ")\n\n(";
var G__320395 = (function (){var G__320440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320441 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320440,G__320441) : tailrecursion.hoplon.span.call(null,G__320440,G__320441));
})();
var G__320396 = (function (){var G__320442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320443 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320442,G__320443) : tailrecursion.hoplon.span.call(null,G__320442,G__320443));
})();
var G__320397 = " ";
var G__320398 = (function (){var G__320444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320445 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320444,G__320445) : tailrecursion.hoplon.span.call(null,G__320444,G__320445));
})();
var G__320399 = ")\n";
var G__320400 = (function (){var G__320446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320447 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320446,G__320447) : tailrecursion.hoplon.span.call(null,G__320446,G__320447));
})();
var G__320401 = "(";
var G__320402 = (function (){var G__320448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320449 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320448,G__320449) : tailrecursion.hoplon.span.call(null,G__320448,G__320449));
})();
var G__320403 = " ";
var G__320404 = (function (){var G__320450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320451 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320450,G__320451) : tailrecursion.hoplon.span.call(null,G__320450,G__320451));
})();
var G__320405 = ")\n\n(";
var G__320406 = (function (){var G__320452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320453 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320452,G__320453) : tailrecursion.hoplon.span.call(null,G__320452,G__320453));
})();
var G__320407 = (function (){var G__320454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320455 = "'a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320454,G__320455) : tailrecursion.hoplon.span.call(null,G__320454,G__320455));
})();
var G__320408 = " ";
var G__320409 = (function (){var G__320456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320457 = "'b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320456,G__320457) : tailrecursion.hoplon.span.call(null,G__320456,G__320457));
})();
var G__320410 = ")\n";
var G__320411 = (function (){var G__320458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320459 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320458,G__320459) : tailrecursion.hoplon.span.call(null,G__320458,G__320459));
})();
var G__320412 = "(";
var G__320413 = (function (){var G__320460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320461 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320460,G__320461) : tailrecursion.hoplon.span.call(null,G__320460,G__320461));
})();
var G__320414 = " ";
var G__320415 = (function (){var G__320462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320463 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320462,G__320463) : tailrecursion.hoplon.span.call(null,G__320462,G__320463));
})();
var G__320416 = ")\n\n(";
var G__320417 = (function (){var G__320464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320465 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320464,G__320465) : tailrecursion.hoplon.span.call(null,G__320464,G__320465));
})();
var G__320418 = (function (){var G__320466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320467 = "'a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320466,G__320467) : tailrecursion.hoplon.span.call(null,G__320466,G__320467));
})();
var G__320419 = " ";
var G__320420 = (function (){var G__320468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320469 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320468,G__320469) : tailrecursion.hoplon.span.call(null,G__320468,G__320469));
})();
var G__320421 = ")\n";
var G__320422 = (function (){var G__320470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320471 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320470,G__320471) : tailrecursion.hoplon.span.call(null,G__320470,G__320471));
})();
var G__320423 = "(";
var G__320424 = (function (){var G__320472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320473 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320472,G__320473) : tailrecursion.hoplon.span.call(null,G__320472,G__320473));
})();
var G__320425 = " ";
var G__320426 = (function (){var G__320474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320475 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320474,G__320475) : tailrecursion.hoplon.span.call(null,G__320474,G__320475));
})();
var G__320427 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45(G__320383,G__320384,G__320385,G__320386,G__320387,G__320388,G__320389,G__320390,G__320391,G__320392,G__320393,G__320394,G__320395,G__320396,G__320397,G__320398,G__320399,G__320400,G__320401,G__320402,G__320403,G__320404,G__320405,G__320406,G__320407,G__320408,G__320409,G__320410,G__320411,G__320412,G__320413,G__320414,G__320415,G__320416,G__320417,G__320418,G__320419,G__320420,G__320421,G__320422,G__320423,G__320424,G__320425,G__320426,G__320427) : tailrecursion.hoplon.pre.call(null,G__320383,G__320384,G__320385,G__320386,G__320387,G__320388,G__320389,G__320390,G__320391,G__320392,G__320393,G__320394,G__320395,G__320396,G__320397,G__320398,G__320399,G__320400,G__320401,G__320402,G__320403,G__320404,G__320405,G__320406,G__320407,G__320408,G__320409,G__320410,G__320411,G__320412,G__320413,G__320414,G__320415,G__320416,G__320417,G__320418,G__320419,G__320420,G__320421,G__320422,G__320423,G__320424,G__320425,G__320426,G__320427));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__320381,G__320382) : tailrecursion.hoplon.div.call(null,G__320381,G__320382));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__320380) : tailrecursion.hoplon.div.call(null,G__320380));
})(),(function (){var G__320476 = cljs.core.PersistentArrayMap.EMPTY;
var G__320477 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Quotation also allows us to type in compound objects, using the conventional printed representation for lists:",(function (){var G__320478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__320479 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Strictly, our use of the quotation mark violates the general rule that all compound expressions in our language should be delimited by parentheses and look like lists. We can recover this consistency by introducing a special form quote, which serves the same purpose as the quotation mark. Thus, we would type ",(function (){var G__320480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(quote a)"], null);
var G__320481 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320480,G__320481) : tailrecursion.hoplon.markdown.code_node.call(null,G__320480,G__320481));
})()," instead of ",(function (){var G__320482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"'a"], null);
var G__320483 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320482,G__320483) : tailrecursion.hoplon.markdown.code_node.call(null,G__320482,G__320483));
})(),", and we would type ",(function (){var G__320484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(quote (a\nb c))"], null);
var G__320485 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320484,G__320485) : tailrecursion.hoplon.markdown.code_node.call(null,G__320484,G__320485));
})()," instead of ",(function (){var G__320486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"'(a b c)"], null);
var G__320487 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320486,G__320487) : tailrecursion.hoplon.markdown.code_node.call(null,G__320486,G__320487));
})(),". This is precisely how the interpreter works. The quotation mark is just a single-character abbreviation for wrapping the next complete expression with quote to form ",(function (){var G__320488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(quote\n<expression>)"], null);
var G__320489 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320488,G__320489) : tailrecursion.hoplon.markdown.code_node.call(null,G__320488,G__320489));
})(),". This is important because it maintains the principle that any expression seen by the interpreter can be manipulated as a data object. For instance, we could construct the expression ",(function (){var G__320490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first '(a\nb c))"], null);
var G__320491 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320490,G__320491) : tailrecursion.hoplon.markdown.code_node.call(null,G__320490,G__320491));
})(),", which is the same as ",(function (){var G__320492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first (quote (a b c)))"], null);
var G__320493 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320492,G__320493) : tailrecursion.hoplon.markdown.code_node.call(null,G__320492,G__320493));
})(),", by evaluating ",(function (){var G__320494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(list 'first (list 'quote '(a b c)))"], null);
var G__320495 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320494,G__320495) : tailrecursion.hoplon.markdown.code_node.call(null,G__320494,G__320495));
})(),"."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320478,G__320479) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320478,G__320479));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__320476,G__320477) : tailrecursion.hoplon.markdown.para_node.call(null,G__320476,G__320477));
})(),(function (){var G__320558 = (function (){var G__320559 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__320560 = (function (){var G__320561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__320562 = "(";
var G__320563 = (function (){var G__320591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320592 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320591,G__320592) : tailrecursion.hoplon.span.call(null,G__320591,G__320592));
})();
var G__320564 = (function (){var G__320593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320594 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320593,G__320594) : tailrecursion.hoplon.span.call(null,G__320593,G__320594));
})();
var G__320565 = "(";
var G__320566 = (function (){var G__320595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320596 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320595,G__320596) : tailrecursion.hoplon.span.call(null,G__320595,G__320596));
})();
var G__320567 = " ";
var G__320568 = (function (){var G__320597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320598 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320597,G__320598) : tailrecursion.hoplon.span.call(null,G__320597,G__320598));
})();
var G__320569 = " ";
var G__320570 = (function (){var G__320599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320600 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320599,G__320600) : tailrecursion.hoplon.span.call(null,G__320599,G__320600));
})();
var G__320571 = "))\n";
var G__320572 = (function (){var G__320601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320602 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320601,G__320602) : tailrecursion.hoplon.span.call(null,G__320601,G__320602));
})();
var G__320573 = " ";
var G__320574 = (function (){var G__320603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320604 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320603,G__320604) : tailrecursion.hoplon.span.call(null,G__320603,G__320604));
})();
var G__320575 = "\n\n(";
var G__320576 = (function (){var G__320605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320606 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320605,G__320606) : tailrecursion.hoplon.span.call(null,G__320605,G__320606));
})();
var G__320577 = (function (){var G__320607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320608 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320607,G__320608) : tailrecursion.hoplon.span.call(null,G__320607,G__320608));
})();
var G__320578 = "(";
var G__320579 = (function (){var G__320609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320610 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320609,G__320610) : tailrecursion.hoplon.span.call(null,G__320609,G__320610));
})();
var G__320580 = " ";
var G__320581 = (function (){var G__320611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320612 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320611,G__320612) : tailrecursion.hoplon.span.call(null,G__320611,G__320612));
})();
var G__320582 = " ";
var G__320583 = (function (){var G__320613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320614 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320613,G__320614) : tailrecursion.hoplon.span.call(null,G__320613,G__320614));
})();
var G__320584 = "))\n";
var G__320585 = (function (){var G__320615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320616 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320615,G__320616) : tailrecursion.hoplon.span.call(null,G__320615,G__320616));
})();
var G__320586 = " (";
var G__320587 = (function (){var G__320617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320618 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320617,G__320618) : tailrecursion.hoplon.span.call(null,G__320617,G__320618));
})();
var G__320588 = " ";
var G__320589 = (function (){var G__320619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320620 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320619,G__320620) : tailrecursion.hoplon.span.call(null,G__320619,G__320620));
})();
var G__320590 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30(G__320561,G__320562,G__320563,G__320564,G__320565,G__320566,G__320567,G__320568,G__320569,G__320570,G__320571,G__320572,G__320573,G__320574,G__320575,G__320576,G__320577,G__320578,G__320579,G__320580,G__320581,G__320582,G__320583,G__320584,G__320585,G__320586,G__320587,G__320588,G__320589,G__320590) : tailrecursion.hoplon.pre.call(null,G__320561,G__320562,G__320563,G__320564,G__320565,G__320566,G__320567,G__320568,G__320569,G__320570,G__320571,G__320572,G__320573,G__320574,G__320575,G__320576,G__320577,G__320578,G__320579,G__320580,G__320581,G__320582,G__320583,G__320584,G__320585,G__320586,G__320587,G__320588,G__320589,G__320590));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__320559,G__320560) : tailrecursion.hoplon.div.call(null,G__320559,G__320560));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__320558) : tailrecursion.hoplon.div.call(null,G__320558));
})(),(function (){var G__320621 = cljs.core.PersistentArrayMap.EMPTY;
var G__320622 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In keeping with this, we can obtain the empty list by evaluating ",(function (){var G__320623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"'()"], null);
var G__320624 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320623,G__320624) : tailrecursion.hoplon.markdown.code_node.call(null,G__320623,G__320624));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__320621,G__320622) : tailrecursion.hoplon.markdown.para_node.call(null,G__320621,G__320622));
})(),(function (){var G__320625 = cljs.core.PersistentArrayMap.EMPTY;
var G__320626 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To test whether two symbols are the same, we can use Clojure",(function (){var G__320627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__320628 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__320627,G__320628) : tailrecursion.hoplon.markdown.simple_node.call(null,G__320627,G__320628));
})(),"s ",(function (){var G__320629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__320630 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320629,G__320630) : tailrecursion.hoplon.markdown.code_node.call(null,G__320629,G__320630));
})()," primative. In Scheme, due to the lack of the protocol abstraction, this primative had to be a new primative (one which they called ",(function (){var G__320631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"eq?"], null);
var G__320632 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320631,G__320632) : tailrecursion.hoplon.markdown.code_node.call(null,G__320631,G__320632));
})(),").",(function (){var G__320633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__320634 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__320635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$nbsp], null);
var G__320636 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__320635,G__320636) : tailrecursion.hoplon.markdown.simple_node.call(null,G__320635,G__320636));
})(),"We can consider two symbols to be ",(function (){var G__320637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320638 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the same"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320637,G__320638) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320637,G__320638));
})()," if they consist of the same characters in the same order. Such a definition skirts a deep issue that we are not yet ready to address: the meaning of ",(function (){var G__320639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__320640 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sameness"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320639,G__320640) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320639,G__320640));
})()," in a programming language. We will return to this in chapter 3 (section 3.1.3)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__320633,G__320634) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__320633,G__320634));
})()," Using ",(function (){var G__320641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__320642 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320641,G__320642) : tailrecursion.hoplon.markdown.code_node.call(null,G__320641,G__320642));
})(),", we can implement a useful procedure called ",(function (){var G__320643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"memq"], null);
var G__320644 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320643,G__320644) : tailrecursion.hoplon.markdown.code_node.call(null,G__320643,G__320644));
})(),". This takes two arguments, a symbol and a list. If the symbol is not contained in the list (i.e., is not ",(function (){var G__320645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__320646 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320645,G__320646) : tailrecursion.hoplon.markdown.code_node.call(null,G__320645,G__320646));
})()," to any item in the list), then ",(function (){var G__320647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"memq"], null);
var G__320648 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__320647,G__320648) : tailrecursion.hoplon.markdown.code_node.call(null,G__320647,G__320648));
})()," returns false. Otherwise it returns the sublist of the list beginning with the first occurrence of the symbol:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__320625,G__320626) : tailrecursion.hoplon.markdown.para_node.call(null,G__320625,G__320626));
})(),(function (){var G__320729 = (function (){var G__320730 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__320731 = (function (){var G__320732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__320733 = "(";
var G__320734 = (function (){var G__320770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__320771 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320770,G__320771) : tailrecursion.hoplon.span.call(null,G__320770,G__320771));
})();
var G__320735 = (function (){var G__320772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320773 = "memq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320772,G__320773) : tailrecursion.hoplon.span.call(null,G__320772,G__320773));
})();
var G__320736 = " [";
var G__320737 = (function (){var G__320774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320775 = "item";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320774,G__320775) : tailrecursion.hoplon.span.call(null,G__320774,G__320775));
})();
var G__320738 = " ";
var G__320739 = (function (){var G__320776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320777 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320776,G__320777) : tailrecursion.hoplon.span.call(null,G__320776,G__320777));
})();
var G__320740 = "]\n  (";
var G__320741 = (function (){var G__320778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__320779 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320778,G__320779) : tailrecursion.hoplon.span.call(null,G__320778,G__320779));
})();
var G__320742 = "[";
var G__320743 = (function (){var G__320780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320781 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320780,G__320781) : tailrecursion.hoplon.span.call(null,G__320780,G__320781));
})();
var G__320744 = " ";
var G__320745 = (function (){var G__320782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320783 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320782,G__320783) : tailrecursion.hoplon.span.call(null,G__320782,G__320783));
})();
var G__320746 = "]\n    (";
var G__320747 = (function (){var G__320784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320785 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320784,G__320785) : tailrecursion.hoplon.span.call(null,G__320784,G__320785));
})();
var G__320748 = "(";
var G__320749 = (function (){var G__320786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320787 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320786,G__320787) : tailrecursion.hoplon.span.call(null,G__320786,G__320787));
})();
var G__320750 = " ";
var G__320751 = (function (){var G__320788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320789 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320788,G__320789) : tailrecursion.hoplon.span.call(null,G__320788,G__320789));
})();
var G__320752 = ") ";
var G__320753 = (function (){var G__320790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320791 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320790,G__320791) : tailrecursion.hoplon.span.call(null,G__320790,G__320791));
})();
var G__320754 = "\n          (";
var G__320755 = (function (){var G__320792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320793 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320792,G__320793) : tailrecursion.hoplon.span.call(null,G__320792,G__320793));
})();
var G__320756 = (function (){var G__320794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320795 = "item";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320794,G__320795) : tailrecursion.hoplon.span.call(null,G__320794,G__320795));
})();
var G__320757 = " (";
var G__320758 = (function (){var G__320796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320797 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320796,G__320797) : tailrecursion.hoplon.span.call(null,G__320796,G__320797));
})();
var G__320759 = (function (){var G__320798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320799 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320798,G__320799) : tailrecursion.hoplon.span.call(null,G__320798,G__320799));
})();
var G__320760 = ")) ";
var G__320761 = (function (){var G__320800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320801 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320800,G__320801) : tailrecursion.hoplon.span.call(null,G__320800,G__320801));
})();
var G__320762 = "\n          ";
var G__320763 = (function (){var G__320802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320803 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320802,G__320803) : tailrecursion.hoplon.span.call(null,G__320802,G__320803));
})();
var G__320764 = " (";
var G__320765 = (function (){var G__320804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320805 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320804,G__320805) : tailrecursion.hoplon.span.call(null,G__320804,G__320805));
})();
var G__320766 = " (";
var G__320767 = (function (){var G__320806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__320807 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320806,G__320807) : tailrecursion.hoplon.span.call(null,G__320806,G__320807));
})();
var G__320768 = (function (){var G__320808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320809 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320808,G__320809) : tailrecursion.hoplon.span.call(null,G__320808,G__320809));
})();
var G__320769 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38(G__320732,G__320733,G__320734,G__320735,G__320736,G__320737,G__320738,G__320739,G__320740,G__320741,G__320742,G__320743,G__320744,G__320745,G__320746,G__320747,G__320748,G__320749,G__320750,G__320751,G__320752,G__320753,G__320754,G__320755,G__320756,G__320757,G__320758,G__320759,G__320760,G__320761,G__320762,G__320763,G__320764,G__320765,G__320766,G__320767,G__320768,G__320769) : tailrecursion.hoplon.pre.call(null,G__320732,G__320733,G__320734,G__320735,G__320736,G__320737,G__320738,G__320739,G__320740,G__320741,G__320742,G__320743,G__320744,G__320745,G__320746,G__320747,G__320748,G__320749,G__320750,G__320751,G__320752,G__320753,G__320754,G__320755,G__320756,G__320757,G__320758,G__320759,G__320760,G__320761,G__320762,G__320763,G__320764,G__320765,G__320766,G__320767,G__320768,G__320769));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__320730,G__320731) : tailrecursion.hoplon.div.call(null,G__320730,G__320731));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__320729) : tailrecursion.hoplon.div.call(null,G__320729));
})(),(function (){var G__320810 = cljs.core.PersistentArrayMap.EMPTY;
var G__320811 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__320810,G__320811) : tailrecursion.hoplon.markdown.para_node.call(null,G__320810,G__320811));
})(),(function (){var G__320896 = (function (){var G__320897 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__320898 = (function (){var G__320899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__320900 = "(";
var G__320901 = (function (){var G__320941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320942 = "memq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320941,G__320942) : tailrecursion.hoplon.span.call(null,G__320941,G__320942));
})();
var G__320902 = " ";
var G__320903 = (function (){var G__320943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320944 = "'apple";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320943,G__320944) : tailrecursion.hoplon.span.call(null,G__320943,G__320944));
})();
var G__320904 = " ";
var G__320905 = (function (){var G__320945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320946 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320945,G__320946) : tailrecursion.hoplon.span.call(null,G__320945,G__320946));
})();
var G__320906 = "(";
var G__320907 = (function (){var G__320947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320948 = "pear";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320947,G__320948) : tailrecursion.hoplon.span.call(null,G__320947,G__320948));
})();
var G__320908 = " ";
var G__320909 = (function (){var G__320949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320950 = "banana";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320949,G__320950) : tailrecursion.hoplon.span.call(null,G__320949,G__320950));
})();
var G__320910 = " ";
var G__320911 = (function (){var G__320951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320952 = "prune";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320951,G__320952) : tailrecursion.hoplon.span.call(null,G__320951,G__320952));
})();
var G__320912 = "))\n";
var G__320913 = (function (){var G__320953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320954 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320953,G__320954) : tailrecursion.hoplon.span.call(null,G__320953,G__320954));
})();
var G__320914 = " ";
var G__320915 = (function (){var G__320955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320956 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320955,G__320956) : tailrecursion.hoplon.span.call(null,G__320955,G__320956));
})();
var G__320916 = "\n\n(";
var G__320917 = (function (){var G__320957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320958 = "memq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320957,G__320958) : tailrecursion.hoplon.span.call(null,G__320957,G__320958));
})();
var G__320918 = " ";
var G__320919 = (function (){var G__320959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320960 = "'apple";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320959,G__320960) : tailrecursion.hoplon.span.call(null,G__320959,G__320960));
})();
var G__320920 = " ";
var G__320921 = (function (){var G__320961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__320962 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320961,G__320962) : tailrecursion.hoplon.span.call(null,G__320961,G__320962));
})();
var G__320922 = "(";
var G__320923 = (function (){var G__320963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320964 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320963,G__320964) : tailrecursion.hoplon.span.call(null,G__320963,G__320964));
})();
var G__320924 = " (";
var G__320925 = (function (){var G__320965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320966 = "apple";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320965,G__320966) : tailrecursion.hoplon.span.call(null,G__320965,G__320966));
})();
var G__320926 = " ";
var G__320927 = (function (){var G__320967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320968 = "sauce";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320967,G__320968) : tailrecursion.hoplon.span.call(null,G__320967,G__320968));
})();
var G__320928 = ") ";
var G__320929 = (function (){var G__320969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320970 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320969,G__320970) : tailrecursion.hoplon.span.call(null,G__320969,G__320970));
})();
var G__320930 = " ";
var G__320931 = (function (){var G__320971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320972 = "apple";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320971,G__320972) : tailrecursion.hoplon.span.call(null,G__320971,G__320972));
})();
var G__320932 = " ";
var G__320933 = (function (){var G__320973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320974 = "pear";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320973,G__320974) : tailrecursion.hoplon.span.call(null,G__320973,G__320974));
})();
var G__320934 = "))\n";
var G__320935 = (function (){var G__320975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320976 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320975,G__320976) : tailrecursion.hoplon.span.call(null,G__320975,G__320976));
})();
var G__320936 = " (";
var G__320937 = (function (){var G__320977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__320978 = "apple";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320977,G__320978) : tailrecursion.hoplon.span.call(null,G__320977,G__320978));
})();
var G__320938 = " ";
var G__320939 = (function (){var G__320979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__320980 = "pear";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__320979,G__320980) : tailrecursion.hoplon.span.call(null,G__320979,G__320980));
})();
var G__320940 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42(G__320899,G__320900,G__320901,G__320902,G__320903,G__320904,G__320905,G__320906,G__320907,G__320908,G__320909,G__320910,G__320911,G__320912,G__320913,G__320914,G__320915,G__320916,G__320917,G__320918,G__320919,G__320920,G__320921,G__320922,G__320923,G__320924,G__320925,G__320926,G__320927,G__320928,G__320929,G__320930,G__320931,G__320932,G__320933,G__320934,G__320935,G__320936,G__320937,G__320938,G__320939,G__320940) : tailrecursion.hoplon.pre.call(null,G__320899,G__320900,G__320901,G__320902,G__320903,G__320904,G__320905,G__320906,G__320907,G__320908,G__320909,G__320910,G__320911,G__320912,G__320913,G__320914,G__320915,G__320916,G__320917,G__320918,G__320919,G__320920,G__320921,G__320922,G__320923,G__320924,G__320925,G__320926,G__320927,G__320928,G__320929,G__320930,G__320931,G__320932,G__320933,G__320934,G__320935,G__320936,G__320937,G__320938,G__320939,G__320940));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__320897,G__320898) : tailrecursion.hoplon.div.call(null,G__320897,G__320898));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__320896) : tailrecursion.hoplon.div.call(null,G__320896));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_319922;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_319921;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_319920;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_319919;
}})()], 0));
var G__319873 = "";
var G__319874 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_320981 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_320982 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_320983 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_320984 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__320985 = cljs.core.PersistentArrayMap.EMPTY;
var G__320986 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What would the interpreter print in response to evaluating each of the following expressions?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__320985,G__320986) : tailrecursion.hoplon.markdown.para_node.call(null,G__320985,G__320986));
})(),(function (){var G__321006 = (function (){var G__321007 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321008 = (function (){var G__321009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321010 = "(";
var G__321011 = (function (){var G__321018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321019 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321018,G__321019) : tailrecursion.hoplon.span.call(null,G__321018,G__321019));
})();
var G__321012 = (function (){var G__321020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321021 = "'a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321020,G__321021) : tailrecursion.hoplon.span.call(null,G__321020,G__321021));
})();
var G__321013 = " ";
var G__321014 = (function (){var G__321022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321023 = "'b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321022,G__321023) : tailrecursion.hoplon.span.call(null,G__321022,G__321023));
})();
var G__321015 = " ";
var G__321016 = (function (){var G__321024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321025 = "'c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321024,G__321025) : tailrecursion.hoplon.span.call(null,G__321024,G__321025));
})();
var G__321017 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$9 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$9(G__321009,G__321010,G__321011,G__321012,G__321013,G__321014,G__321015,G__321016,G__321017) : tailrecursion.hoplon.pre.call(null,G__321009,G__321010,G__321011,G__321012,G__321013,G__321014,G__321015,G__321016,G__321017));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321007,G__321008) : tailrecursion.hoplon.div.call(null,G__321007,G__321008));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321006) : tailrecursion.hoplon.div.call(null,G__321006));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_320984;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_320983;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_320982;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_320981;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_321026 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321027 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321028 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321029 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321065 = (function (){var G__321066 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321067 = (function (){var G__321068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321069 = "(";
var G__321070 = (function (){var G__321085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321086 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321085,G__321086) : tailrecursion.hoplon.span.call(null,G__321085,G__321086));
})();
var G__321071 = (function (){var G__321087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321088 = "'a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321087,G__321088) : tailrecursion.hoplon.span.call(null,G__321087,G__321088));
})();
var G__321072 = " ";
var G__321073 = (function (){var G__321089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321090 = "'b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321089,G__321090) : tailrecursion.hoplon.span.call(null,G__321089,G__321090));
})();
var G__321074 = " ";
var G__321075 = (function (){var G__321091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321092 = "'c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321091,G__321092) : tailrecursion.hoplon.span.call(null,G__321091,G__321092));
})();
var G__321076 = ")\n";
var G__321077 = (function (){var G__321093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321094 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321093,G__321094) : tailrecursion.hoplon.span.call(null,G__321093,G__321094));
})();
var G__321078 = " (";
var G__321079 = (function (){var G__321095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321096 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321095,G__321096) : tailrecursion.hoplon.span.call(null,G__321095,G__321096));
})();
var G__321080 = " ";
var G__321081 = (function (){var G__321097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321098 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321097,G__321098) : tailrecursion.hoplon.span.call(null,G__321097,G__321098));
})();
var G__321082 = " ";
var G__321083 = (function (){var G__321099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321100 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321099,G__321100) : tailrecursion.hoplon.span.call(null,G__321099,G__321100));
})();
var G__321084 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__321068,G__321069,G__321070,G__321071,G__321072,G__321073,G__321074,G__321075,G__321076,G__321077,G__321078,G__321079,G__321080,G__321081,G__321082,G__321083,G__321084) : tailrecursion.hoplon.pre.call(null,G__321068,G__321069,G__321070,G__321071,G__321072,G__321073,G__321074,G__321075,G__321076,G__321077,G__321078,G__321079,G__321080,G__321081,G__321082,G__321083,G__321084));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321066,G__321067) : tailrecursion.hoplon.div.call(null,G__321066,G__321067));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321065) : tailrecursion.hoplon.div.call(null,G__321065));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321029;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321028;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321027;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321026;
}})()], 0)),"",(function (){var _STAR_references_STAR_321101 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321102 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321103 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321104 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321120 = (function (){var G__321121 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321122 = (function (){var G__321123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321124 = "(";
var G__321125 = (function (){var G__321130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321131 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321130,G__321131) : tailrecursion.hoplon.span.call(null,G__321130,G__321131));
})();
var G__321126 = "(";
var G__321127 = (function (){var G__321132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321133 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321132,G__321133) : tailrecursion.hoplon.span.call(null,G__321132,G__321133));
})();
var G__321128 = (function (){var G__321134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321135 = "'george";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321134,G__321135) : tailrecursion.hoplon.span.call(null,G__321134,G__321135));
})();
var G__321129 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$7 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$7(G__321123,G__321124,G__321125,G__321126,G__321127,G__321128,G__321129) : tailrecursion.hoplon.pre.call(null,G__321123,G__321124,G__321125,G__321126,G__321127,G__321128,G__321129));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321121,G__321122) : tailrecursion.hoplon.div.call(null,G__321121,G__321122));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321120) : tailrecursion.hoplon.div.call(null,G__321120));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321104;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321103;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321102;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321101;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_321136 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321137 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321138 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321139 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321163 = (function (){var G__321164 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321165 = (function (){var G__321166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321167 = "(";
var G__321168 = (function (){var G__321177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321178 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321177,G__321178) : tailrecursion.hoplon.span.call(null,G__321177,G__321178));
})();
var G__321169 = "(";
var G__321170 = (function (){var G__321179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321180 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321179,G__321180) : tailrecursion.hoplon.span.call(null,G__321179,G__321180));
})();
var G__321171 = (function (){var G__321181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321182 = "'george";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321181,G__321182) : tailrecursion.hoplon.span.call(null,G__321181,G__321182));
})();
var G__321172 = "))\n";
var G__321173 = (function (){var G__321183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321184 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321183,G__321184) : tailrecursion.hoplon.span.call(null,G__321183,G__321184));
})();
var G__321174 = " ((";
var G__321175 = (function (){var G__321185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321186 = "george";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321185,G__321186) : tailrecursion.hoplon.span.call(null,G__321185,G__321186));
})();
var G__321176 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11(G__321166,G__321167,G__321168,G__321169,G__321170,G__321171,G__321172,G__321173,G__321174,G__321175,G__321176) : tailrecursion.hoplon.pre.call(null,G__321166,G__321167,G__321168,G__321169,G__321170,G__321171,G__321172,G__321173,G__321174,G__321175,G__321176));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321164,G__321165) : tailrecursion.hoplon.div.call(null,G__321164,G__321165));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321163) : tailrecursion.hoplon.div.call(null,G__321163));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321139;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321138;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321137;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321136;
}})()], 0)),"",(function (){var _STAR_references_STAR_321187 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321188 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321189 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321190 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321218 = (function (){var G__321219 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321220 = (function (){var G__321221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321222 = "(";
var G__321223 = (function (){var G__321234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321235 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321234,G__321235) : tailrecursion.hoplon.span.call(null,G__321234,G__321235));
})();
var G__321224 = (function (){var G__321236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__321237 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321236,G__321237) : tailrecursion.hoplon.span.call(null,G__321236,G__321237));
})();
var G__321225 = "((";
var G__321226 = (function (){var G__321238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321239 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321238,G__321239) : tailrecursion.hoplon.span.call(null,G__321238,G__321239));
})();
var G__321227 = " ";
var G__321228 = (function (){var G__321240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321241 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321240,G__321241) : tailrecursion.hoplon.span.call(null,G__321240,G__321241));
})();
var G__321229 = ") (";
var G__321230 = (function (){var G__321242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321243 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321242,G__321243) : tailrecursion.hoplon.span.call(null,G__321242,G__321243));
})();
var G__321231 = " ";
var G__321232 = (function (){var G__321244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321245 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321244,G__321245) : tailrecursion.hoplon.span.call(null,G__321244,G__321245));
})();
var G__321233 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__321221,G__321222,G__321223,G__321224,G__321225,G__321226,G__321227,G__321228,G__321229,G__321230,G__321231,G__321232,G__321233) : tailrecursion.hoplon.pre.call(null,G__321221,G__321222,G__321223,G__321224,G__321225,G__321226,G__321227,G__321228,G__321229,G__321230,G__321231,G__321232,G__321233));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321219,G__321220) : tailrecursion.hoplon.div.call(null,G__321219,G__321220));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321218) : tailrecursion.hoplon.div.call(null,G__321218));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321190;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321189;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321188;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321187;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_321246 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321247 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321248 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321249 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321289 = (function (){var G__321290 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321291 = (function (){var G__321292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321293 = "(";
var G__321294 = (function (){var G__321311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321312 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321311,G__321312) : tailrecursion.hoplon.span.call(null,G__321311,G__321312));
})();
var G__321295 = (function (){var G__321313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__321314 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321313,G__321314) : tailrecursion.hoplon.span.call(null,G__321313,G__321314));
})();
var G__321296 = "((";
var G__321297 = (function (){var G__321315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321316 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321315,G__321316) : tailrecursion.hoplon.span.call(null,G__321315,G__321316));
})();
var G__321298 = " ";
var G__321299 = (function (){var G__321317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321318 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321317,G__321318) : tailrecursion.hoplon.span.call(null,G__321317,G__321318));
})();
var G__321300 = ") (";
var G__321301 = (function (){var G__321319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321320 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321319,G__321320) : tailrecursion.hoplon.span.call(null,G__321319,G__321320));
})();
var G__321302 = " ";
var G__321303 = (function (){var G__321321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321322 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321321,G__321322) : tailrecursion.hoplon.span.call(null,G__321321,G__321322));
})();
var G__321304 = ")))\n";
var G__321305 = (function (){var G__321323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321324 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321323,G__321324) : tailrecursion.hoplon.span.call(null,G__321323,G__321324));
})();
var G__321306 = " (";
var G__321307 = (function (){var G__321325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321326 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321325,G__321326) : tailrecursion.hoplon.span.call(null,G__321325,G__321326));
})();
var G__321308 = " ";
var G__321309 = (function (){var G__321327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321328 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321327,G__321328) : tailrecursion.hoplon.span.call(null,G__321327,G__321328));
})();
var G__321310 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__321292,G__321293,G__321294,G__321295,G__321296,G__321297,G__321298,G__321299,G__321300,G__321301,G__321302,G__321303,G__321304,G__321305,G__321306,G__321307,G__321308,G__321309,G__321310) : tailrecursion.hoplon.pre.call(null,G__321292,G__321293,G__321294,G__321295,G__321296,G__321297,G__321298,G__321299,G__321300,G__321301,G__321302,G__321303,G__321304,G__321305,G__321306,G__321307,G__321308,G__321309,G__321310));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321290,G__321291) : tailrecursion.hoplon.div.call(null,G__321290,G__321291));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321289) : tailrecursion.hoplon.div.call(null,G__321289));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321249;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321248;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321247;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321246;
}})()], 0)),"",(function (){var _STAR_references_STAR_321329 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321330 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321331 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321332 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321359 = (function (){var G__321360 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321361 = (function (){var G__321362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321363 = "(";
var G__321364 = (function (){var G__321374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321375 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321374,G__321375) : tailrecursion.hoplon.span.call(null,G__321374,G__321375));
})();
var G__321365 = " (";
var G__321366 = (function (){var G__321376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321377 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321376,G__321377) : tailrecursion.hoplon.span.call(null,G__321376,G__321377));
})();
var G__321367 = (function (){var G__321378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__321379 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321378,G__321379) : tailrecursion.hoplon.span.call(null,G__321378,G__321379));
})();
var G__321368 = "(";
var G__321369 = (function (){var G__321380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321381 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321380,G__321381) : tailrecursion.hoplon.span.call(null,G__321380,G__321381));
})();
var G__321370 = " ";
var G__321371 = (function (){var G__321382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321383 = "short ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321382,G__321383) : tailrecursion.hoplon.span.call(null,G__321382,G__321383));
})();
var G__321372 = (function (){var G__321384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321385 = "list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321384,G__321385) : tailrecursion.hoplon.span.call(null,G__321384,G__321385));
})();
var G__321373 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12(G__321362,G__321363,G__321364,G__321365,G__321366,G__321367,G__321368,G__321369,G__321370,G__321371,G__321372,G__321373) : tailrecursion.hoplon.pre.call(null,G__321362,G__321363,G__321364,G__321365,G__321366,G__321367,G__321368,G__321369,G__321370,G__321371,G__321372,G__321373));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321360,G__321361) : tailrecursion.hoplon.div.call(null,G__321360,G__321361));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321359) : tailrecursion.hoplon.div.call(null,G__321359));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321332;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321331;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321330;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321329;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_321386 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321387 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321388 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321389 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321424 = (function (){var G__321425 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321426 = (function (){var G__321427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321428 = "(";
var G__321429 = (function (){var G__321443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321444 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321443,G__321444) : tailrecursion.hoplon.span.call(null,G__321443,G__321444));
})();
var G__321430 = " (";
var G__321431 = (function (){var G__321445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321446 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321445,G__321446) : tailrecursion.hoplon.span.call(null,G__321445,G__321446));
})();
var G__321432 = (function (){var G__321447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__321448 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321447,G__321448) : tailrecursion.hoplon.span.call(null,G__321447,G__321448));
})();
var G__321433 = "(";
var G__321434 = (function (){var G__321449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321450 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321449,G__321450) : tailrecursion.hoplon.span.call(null,G__321449,G__321450));
})();
var G__321435 = " ";
var G__321436 = (function (){var G__321451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321452 = "short ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321451,G__321452) : tailrecursion.hoplon.span.call(null,G__321451,G__321452));
})();
var G__321437 = (function (){var G__321453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321454 = "list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321453,G__321454) : tailrecursion.hoplon.span.call(null,G__321453,G__321454));
})();
var G__321438 = ")))\n";
var G__321439 = (function (){var G__321455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321456 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321455,G__321456) : tailrecursion.hoplon.span.call(null,G__321455,G__321456));
})();
var G__321440 = " ";
var G__321441 = (function (){var G__321457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321458 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321457,G__321458) : tailrecursion.hoplon.span.call(null,G__321457,G__321458));
})();
var G__321442 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16(G__321427,G__321428,G__321429,G__321430,G__321431,G__321432,G__321433,G__321434,G__321435,G__321436,G__321437,G__321438,G__321439,G__321440,G__321441,G__321442) : tailrecursion.hoplon.pre.call(null,G__321427,G__321428,G__321429,G__321430,G__321431,G__321432,G__321433,G__321434,G__321435,G__321436,G__321437,G__321438,G__321439,G__321440,G__321441,G__321442));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321425,G__321426) : tailrecursion.hoplon.div.call(null,G__321425,G__321426));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321424) : tailrecursion.hoplon.div.call(null,G__321424));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321389;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321388;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321387;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321386;
}})()], 0)),"",(function (){var _STAR_references_STAR_321459 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321460 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321461 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321462 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321495 = (function (){var G__321496 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321497 = (function (){var G__321498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321499 = "(";
var G__321500 = (function (){var G__321514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321515 = "memq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321514,G__321515) : tailrecursion.hoplon.span.call(null,G__321514,G__321515));
})();
var G__321501 = " ";
var G__321502 = (function (){var G__321516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321517 = "'red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321516,G__321517) : tailrecursion.hoplon.span.call(null,G__321516,G__321517));
})();
var G__321503 = " ";
var G__321504 = (function (){var G__321518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__321519 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321518,G__321519) : tailrecursion.hoplon.span.call(null,G__321518,G__321519));
})();
var G__321505 = "((";
var G__321506 = (function (){var G__321520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321521 = "red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321520,G__321521) : tailrecursion.hoplon.span.call(null,G__321520,G__321521));
})();
var G__321507 = " ";
var G__321508 = (function (){var G__321522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321523 = "shoes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321522,G__321523) : tailrecursion.hoplon.span.call(null,G__321522,G__321523));
})();
var G__321509 = ") (";
var G__321510 = (function (){var G__321524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321525 = "blue";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321524,G__321525) : tailrecursion.hoplon.span.call(null,G__321524,G__321525));
})();
var G__321511 = " ";
var G__321512 = (function (){var G__321526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321527 = "socks";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321526,G__321527) : tailrecursion.hoplon.span.call(null,G__321526,G__321527));
})();
var G__321513 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16(G__321498,G__321499,G__321500,G__321501,G__321502,G__321503,G__321504,G__321505,G__321506,G__321507,G__321508,G__321509,G__321510,G__321511,G__321512,G__321513) : tailrecursion.hoplon.pre.call(null,G__321498,G__321499,G__321500,G__321501,G__321502,G__321503,G__321504,G__321505,G__321506,G__321507,G__321508,G__321509,G__321510,G__321511,G__321512,G__321513));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321496,G__321497) : tailrecursion.hoplon.div.call(null,G__321496,G__321497));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321495) : tailrecursion.hoplon.div.call(null,G__321495));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321462;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321461;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321460;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321459;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_321528 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321529 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321530 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321531 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321572 = (function (){var G__321573 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321574 = (function (){var G__321575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321576 = "(";
var G__321577 = (function (){var G__321595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321596 = "memq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321595,G__321596) : tailrecursion.hoplon.span.call(null,G__321595,G__321596));
})();
var G__321578 = " ";
var G__321579 = (function (){var G__321597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321598 = "'red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321597,G__321598) : tailrecursion.hoplon.span.call(null,G__321597,G__321598));
})();
var G__321580 = " ";
var G__321581 = (function (){var G__321599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__321600 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321599,G__321600) : tailrecursion.hoplon.span.call(null,G__321599,G__321600));
})();
var G__321582 = "((";
var G__321583 = (function (){var G__321601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321602 = "red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321601,G__321602) : tailrecursion.hoplon.span.call(null,G__321601,G__321602));
})();
var G__321584 = " ";
var G__321585 = (function (){var G__321603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321604 = "shoes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321603,G__321604) : tailrecursion.hoplon.span.call(null,G__321603,G__321604));
})();
var G__321586 = ") (";
var G__321587 = (function (){var G__321605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321606 = "blue";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321605,G__321606) : tailrecursion.hoplon.span.call(null,G__321605,G__321606));
})();
var G__321588 = " ";
var G__321589 = (function (){var G__321607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321608 = "socks";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321607,G__321608) : tailrecursion.hoplon.span.call(null,G__321607,G__321608));
})();
var G__321590 = ")))\n";
var G__321591 = (function (){var G__321609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321610 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321609,G__321610) : tailrecursion.hoplon.span.call(null,G__321609,G__321610));
})();
var G__321592 = " ";
var G__321593 = (function (){var G__321611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321612 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321611,G__321612) : tailrecursion.hoplon.span.call(null,G__321611,G__321612));
})();
var G__321594 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20(G__321575,G__321576,G__321577,G__321578,G__321579,G__321580,G__321581,G__321582,G__321583,G__321584,G__321585,G__321586,G__321587,G__321588,G__321589,G__321590,G__321591,G__321592,G__321593,G__321594) : tailrecursion.hoplon.pre.call(null,G__321575,G__321576,G__321577,G__321578,G__321579,G__321580,G__321581,G__321582,G__321583,G__321584,G__321585,G__321586,G__321587,G__321588,G__321589,G__321590,G__321591,G__321592,G__321593,G__321594));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321573,G__321574) : tailrecursion.hoplon.div.call(null,G__321573,G__321574));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321572) : tailrecursion.hoplon.div.call(null,G__321572));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321531;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321530;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321529;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321528;
}})()], 0)),"",(function (){var _STAR_references_STAR_321613 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321614 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321615 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321616 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321649 = (function (){var G__321650 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321651 = (function (){var G__321652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321653 = "(";
var G__321654 = (function (){var G__321668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321669 = "memq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321668,G__321669) : tailrecursion.hoplon.span.call(null,G__321668,G__321669));
})();
var G__321655 = " ";
var G__321656 = (function (){var G__321670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321671 = "'red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321670,G__321671) : tailrecursion.hoplon.span.call(null,G__321670,G__321671));
})();
var G__321657 = " ";
var G__321658 = (function (){var G__321672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__321673 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321672,G__321673) : tailrecursion.hoplon.span.call(null,G__321672,G__321673));
})();
var G__321659 = "(";
var G__321660 = (function (){var G__321674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321675 = "red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321674,G__321675) : tailrecursion.hoplon.span.call(null,G__321674,G__321675));
})();
var G__321661 = " ";
var G__321662 = (function (){var G__321676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321677 = "shoes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321676,G__321677) : tailrecursion.hoplon.span.call(null,G__321676,G__321677));
})();
var G__321663 = " ";
var G__321664 = (function (){var G__321678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321679 = "blue";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321678,G__321679) : tailrecursion.hoplon.span.call(null,G__321678,G__321679));
})();
var G__321665 = " ";
var G__321666 = (function (){var G__321680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321681 = "socks";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321680,G__321681) : tailrecursion.hoplon.span.call(null,G__321680,G__321681));
})();
var G__321667 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16(G__321652,G__321653,G__321654,G__321655,G__321656,G__321657,G__321658,G__321659,G__321660,G__321661,G__321662,G__321663,G__321664,G__321665,G__321666,G__321667) : tailrecursion.hoplon.pre.call(null,G__321652,G__321653,G__321654,G__321655,G__321656,G__321657,G__321658,G__321659,G__321660,G__321661,G__321662,G__321663,G__321664,G__321665,G__321666,G__321667));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321650,G__321651) : tailrecursion.hoplon.div.call(null,G__321650,G__321651));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321649) : tailrecursion.hoplon.div.call(null,G__321649));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321616;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321615;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321614;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321613;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_321682 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321683 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321684 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321685 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321738 = (function (){var G__321739 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321740 = (function (){var G__321741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321742 = "(";
var G__321743 = (function (){var G__321767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321768 = "memq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321767,G__321768) : tailrecursion.hoplon.span.call(null,G__321767,G__321768));
})();
var G__321744 = " ";
var G__321745 = (function (){var G__321769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321770 = "'red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321769,G__321770) : tailrecursion.hoplon.span.call(null,G__321769,G__321770));
})();
var G__321746 = " ";
var G__321747 = (function (){var G__321771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__321772 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321771,G__321772) : tailrecursion.hoplon.span.call(null,G__321771,G__321772));
})();
var G__321748 = "(";
var G__321749 = (function (){var G__321773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321774 = "red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321773,G__321774) : tailrecursion.hoplon.span.call(null,G__321773,G__321774));
})();
var G__321750 = " ";
var G__321751 = (function (){var G__321775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321776 = "shoes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321775,G__321776) : tailrecursion.hoplon.span.call(null,G__321775,G__321776));
})();
var G__321752 = " ";
var G__321753 = (function (){var G__321777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321778 = "blue";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321777,G__321778) : tailrecursion.hoplon.span.call(null,G__321777,G__321778));
})();
var G__321754 = " ";
var G__321755 = (function (){var G__321779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321780 = "socks";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321779,G__321780) : tailrecursion.hoplon.span.call(null,G__321779,G__321780));
})();
var G__321756 = "))\n";
var G__321757 = (function (){var G__321781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321782 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321781,G__321782) : tailrecursion.hoplon.span.call(null,G__321781,G__321782));
})();
var G__321758 = " (";
var G__321759 = (function (){var G__321783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321784 = "red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321783,G__321784) : tailrecursion.hoplon.span.call(null,G__321783,G__321784));
})();
var G__321760 = " ";
var G__321761 = (function (){var G__321785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321786 = "shoes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321785,G__321786) : tailrecursion.hoplon.span.call(null,G__321785,G__321786));
})();
var G__321762 = " ";
var G__321763 = (function (){var G__321787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321788 = "blue";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321787,G__321788) : tailrecursion.hoplon.span.call(null,G__321787,G__321788));
})();
var G__321764 = " ";
var G__321765 = (function (){var G__321789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321790 = "socks";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321789,G__321790) : tailrecursion.hoplon.span.call(null,G__321789,G__321790));
})();
var G__321766 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26(G__321741,G__321742,G__321743,G__321744,G__321745,G__321746,G__321747,G__321748,G__321749,G__321750,G__321751,G__321752,G__321753,G__321754,G__321755,G__321756,G__321757,G__321758,G__321759,G__321760,G__321761,G__321762,G__321763,G__321764,G__321765,G__321766) : tailrecursion.hoplon.pre.call(null,G__321741,G__321742,G__321743,G__321744,G__321745,G__321746,G__321747,G__321748,G__321749,G__321750,G__321751,G__321752,G__321753,G__321754,G__321755,G__321756,G__321757,G__321758,G__321759,G__321760,G__321761,G__321762,G__321763,G__321764,G__321765,G__321766));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321739,G__321740) : tailrecursion.hoplon.div.call(null,G__321739,G__321740));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321738) : tailrecursion.hoplon.div.call(null,G__321738));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321685;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321684;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321683;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321682;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_321791 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321792 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_321793 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_321794 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__321795 = cljs.core.PersistentArrayMap.EMPTY;
var G__321796 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Two lists are said to be equal (again we will make use of the diverse protocols included in Clojure",(function (){var G__321797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__321798 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__321797,G__321798) : tailrecursion.hoplon.markdown.simple_node.call(null,G__321797,G__321798));
})(),"s ",(function (){var G__321799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__321800 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__321799,G__321800) : tailrecursion.hoplon.markdown.code_node.call(null,G__321799,G__321800));
})()," procedure), if they contain equal elements arranged in the same order. For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__321795,G__321796) : tailrecursion.hoplon.markdown.para_node.call(null,G__321795,G__321796));
})(),(function (){var G__321907 = (function (){var G__321908 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__321909 = (function (){var G__321910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__321911 = "(";
var G__321912 = (function (){var G__321962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321963 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321962,G__321963) : tailrecursion.hoplon.span.call(null,G__321962,G__321963));
})();
var G__321913 = (function (){var G__321964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__321965 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321964,G__321965) : tailrecursion.hoplon.span.call(null,G__321964,G__321965));
})();
var G__321914 = "(";
var G__321915 = (function (){var G__321966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321967 = "this";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321966,G__321967) : tailrecursion.hoplon.span.call(null,G__321966,G__321967));
})();
var G__321916 = " ";
var G__321917 = (function (){var G__321968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321969 = "is";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321968,G__321969) : tailrecursion.hoplon.span.call(null,G__321968,G__321969));
})();
var G__321918 = " ";
var G__321919 = (function (){var G__321970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321971 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321970,G__321971) : tailrecursion.hoplon.span.call(null,G__321970,G__321971));
})();
var G__321920 = " ";
var G__321921 = (function (){var G__321972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321973 = "list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321972,G__321973) : tailrecursion.hoplon.span.call(null,G__321972,G__321973));
})();
var G__321922 = ") ";
var G__321923 = (function (){var G__321974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__321975 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321974,G__321975) : tailrecursion.hoplon.span.call(null,G__321974,G__321975));
})();
var G__321924 = "(";
var G__321925 = (function (){var G__321976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321977 = "this";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321976,G__321977) : tailrecursion.hoplon.span.call(null,G__321976,G__321977));
})();
var G__321926 = " ";
var G__321927 = (function (){var G__321978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321979 = "is";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321978,G__321979) : tailrecursion.hoplon.span.call(null,G__321978,G__321979));
})();
var G__321928 = " ";
var G__321929 = (function (){var G__321980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321981 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321980,G__321981) : tailrecursion.hoplon.span.call(null,G__321980,G__321981));
})();
var G__321930 = " ";
var G__321931 = (function (){var G__321982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321983 = "list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321982,G__321983) : tailrecursion.hoplon.span.call(null,G__321982,G__321983));
})();
var G__321932 = "))\n";
var G__321933 = (function (){var G__321984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321985 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321984,G__321985) : tailrecursion.hoplon.span.call(null,G__321984,G__321985));
})();
var G__321934 = " ";
var G__321935 = (function (){var G__321986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321987 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321986,G__321987) : tailrecursion.hoplon.span.call(null,G__321986,G__321987));
})();
var G__321936 = "\n\n(";
var G__321937 = (function (){var G__321988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__321989 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321988,G__321989) : tailrecursion.hoplon.span.call(null,G__321988,G__321989));
})();
var G__321938 = (function (){var G__321990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__321991 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321990,G__321991) : tailrecursion.hoplon.span.call(null,G__321990,G__321991));
})();
var G__321939 = "(";
var G__321940 = (function (){var G__321992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__321993 = "this";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321992,G__321993) : tailrecursion.hoplon.span.call(null,G__321992,G__321993));
})();
var G__321941 = " ";
var G__321942 = (function (){var G__321994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321995 = "is";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321994,G__321995) : tailrecursion.hoplon.span.call(null,G__321994,G__321995));
})();
var G__321943 = " ";
var G__321944 = (function (){var G__321996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321997 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321996,G__321997) : tailrecursion.hoplon.span.call(null,G__321996,G__321997));
})();
var G__321945 = " ";
var G__321946 = (function (){var G__321998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__321999 = "list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__321998,G__321999) : tailrecursion.hoplon.span.call(null,G__321998,G__321999));
})();
var G__321947 = ") ";
var G__321948 = (function (){var G__322000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__322001 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322000,G__322001) : tailrecursion.hoplon.span.call(null,G__322000,G__322001));
})();
var G__321949 = "(";
var G__321950 = (function (){var G__322002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__322003 = "this";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322002,G__322003) : tailrecursion.hoplon.span.call(null,G__322002,G__322003));
})();
var G__321951 = " (";
var G__321952 = (function (){var G__322004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__322005 = "is";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322004,G__322005) : tailrecursion.hoplon.span.call(null,G__322004,G__322005));
})();
var G__321953 = " ";
var G__321954 = (function (){var G__322006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322007 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322006,G__322007) : tailrecursion.hoplon.span.call(null,G__322006,G__322007));
})();
var G__321955 = ") ";
var G__321956 = (function (){var G__322008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322009 = "list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322008,G__322009) : tailrecursion.hoplon.span.call(null,G__322008,G__322009));
})();
var G__321957 = "))\n";
var G__321958 = (function (){var G__322010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322011 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322010,G__322011) : tailrecursion.hoplon.span.call(null,G__322010,G__322011));
})();
var G__321959 = " ";
var G__321960 = (function (){var G__322012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322013 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322012,G__322013) : tailrecursion.hoplon.span.call(null,G__322012,G__322013));
})();
var G__321961 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$52 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$52(G__321910,G__321911,G__321912,G__321913,G__321914,G__321915,G__321916,G__321917,G__321918,G__321919,G__321920,G__321921,G__321922,G__321923,G__321924,G__321925,G__321926,G__321927,G__321928,G__321929,G__321930,G__321931,G__321932,G__321933,G__321934,G__321935,G__321936,G__321937,G__321938,G__321939,G__321940,G__321941,G__321942,G__321943,G__321944,G__321945,G__321946,G__321947,G__321948,G__321949,G__321950,G__321951,G__321952,G__321953,G__321954,G__321955,G__321956,G__321957,G__321958,G__321959,G__321960,G__321961) : tailrecursion.hoplon.pre.call(null,G__321910,G__321911,G__321912,G__321913,G__321914,G__321915,G__321916,G__321917,G__321918,G__321919,G__321920,G__321921,G__321922,G__321923,G__321924,G__321925,G__321926,G__321927,G__321928,G__321929,G__321930,G__321931,G__321932,G__321933,G__321934,G__321935,G__321936,G__321937,G__321938,G__321939,G__321940,G__321941,G__321942,G__321943,G__321944,G__321945,G__321946,G__321947,G__321948,G__321949,G__321950,G__321951,G__321952,G__321953,G__321954,G__321955,G__321956,G__321957,G__321958,G__321959,G__321960,G__321961));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__321908,G__321909) : tailrecursion.hoplon.div.call(null,G__321908,G__321909));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__321907) : tailrecursion.hoplon.div.call(null,G__321907));
})(),(function (){var G__322014 = cljs.core.PersistentArrayMap.EMPTY;
var G__322015 = cljs.core.PersistentVector.fromArray(["To be more precise, we can define the protocols for ",(function (){var G__322016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__322017 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322016,G__322017) : tailrecursion.hoplon.markdown.code_node.call(null,G__322016,G__322017));
})()," recursively in terms of the basic ",(function (){var G__322018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__322019 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322018,G__322019) : tailrecursion.hoplon.markdown.code_node.call(null,G__322018,G__322019));
})()," protocols we",(function (){var G__322020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__322021 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__322020,G__322021) : tailrecursion.hoplon.markdown.simple_node.call(null,G__322020,G__322021));
})(),"re used to. To do this (for purposes of instruction) we will need to define a new procedure ",(function (){var G__322022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"eq?"], null);
var G__322023 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322022,G__322023) : tailrecursion.hoplon.markdown.code_node.call(null,G__322022,G__322023));
})()," that will take two arguments and return true if they are not lists and they are ",(function (){var G__322024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__322025 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322024,G__322025) : tailrecursion.hoplon.markdown.code_node.call(null,G__322024,G__322025));
})()," in the traditional sense. From that, we can define our new protocol for ",(function (){var G__322026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__322027 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322026,G__322027) : tailrecursion.hoplon.markdown.code_node.call(null,G__322026,G__322027));
})(),", which we will call ",(function (){var G__322028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"more-general-eq?"], null);
var G__322029 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322028,G__322029) : tailrecursion.hoplon.markdown.code_node.call(null,G__322028,G__322029));
})()," by saying that ",(function (){var G__322030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"a"], null);
var G__322031 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322030,G__322031) : tailrecursion.hoplon.markdown.code_node.call(null,G__322030,G__322031));
})()," and ",(function (){var G__322032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"b"], null);
var G__322033 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322032,G__322033) : tailrecursion.hoplon.markdown.code_node.call(null,G__322032,G__322033));
})()," are ",(function (){var G__322034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"more-general-eq?"], null);
var G__322035 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322034,G__322035) : tailrecursion.hoplon.markdown.code_node.call(null,G__322034,G__322035));
})()," ifthey are both symbols and ",(function (){var G__322036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(= a b)"], null);
var G__322037 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322036,G__322037) : tailrecursion.hoplon.markdown.code_node.call(null,G__322036,G__322037));
})(),", or if they are both lists such that ",(function (){var G__322038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first\na)"], null);
var G__322039 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322038,G__322039) : tailrecursion.hoplon.markdown.code_node.call(null,G__322038,G__322039));
})()," is ",(function (){var G__322040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"more-general-eq?"], null);
var G__322041 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322040,G__322041) : tailrecursion.hoplon.markdown.code_node.call(null,G__322040,G__322041));
})()," to ",(function (){var G__322042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first b)"], null);
var G__322043 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322042,G__322043) : tailrecursion.hoplon.markdown.code_node.call(null,G__322042,G__322043));
})()," and ",(function (){var G__322044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(rest a)"], null);
var G__322045 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322044,G__322045) : tailrecursion.hoplon.markdown.code_node.call(null,G__322044,G__322045));
})()," is ",(function (){var G__322046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"more-general-eq?"], null);
var G__322047 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322046,G__322047) : tailrecursion.hoplon.markdown.code_node.call(null,G__322046,G__322047));
})()," to ",(function (){var G__322048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(rest b)"], null);
var G__322049 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322048,G__322049) : tailrecursion.hoplon.markdown.code_node.call(null,G__322048,G__322049));
})(),". Using this idea, implement ",(function (){var G__322050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"eq?"], null);
var G__322051 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322050,G__322051) : tailrecursion.hoplon.markdown.code_node.call(null,G__322050,G__322051));
})()," and ",(function (){var G__322052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"more-general-eq?"], null);
var G__322053 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322052,G__322053) : tailrecursion.hoplon.markdown.code_node.call(null,G__322052,G__322053));
})()," as procedures.",(function (){var G__322054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__322055 = new cljs.core.PersistentVector(null, 21, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In practice, programmers use ",(function (){var G__322056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"equal?"], null);
var G__322057 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322056,G__322057) : tailrecursion.hoplon.markdown.code_node.call(null,G__322056,G__322057));
})()," to compare lists that contain numbers as well as symbols. Numbers are not considered to be symbols. The question of whether two numerically equal numbers (as tested by ",(function (){var G__322058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__322059 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322058,G__322059) : tailrecursion.hoplon.markdown.code_node.call(null,G__322058,G__322059));
})(),") are also ",(function (){var G__322060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"eq?"], null);
var G__322061 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322060,G__322061) : tailrecursion.hoplon.markdown.code_node.call(null,G__322060,G__322061));
})()," is highly implementation-dependent. A better definition of ",(function (){var G__322062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"equal?"], null);
var G__322063 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322062,G__322063) : tailrecursion.hoplon.markdown.code_node.call(null,G__322062,G__322063));
})()," (such as the one that comes as a primitive in Scheme) would also stipulate that if a and b are both numbers, then a and b are equal? if they are numerically equal. I believe Clojure gets around this issue through the use of protocols (something we will go over later). Basically, protocols allow for the use of functions accross many different types of arguments. For instance, ",(function (){var G__322064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__322065 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322064,G__322065) : tailrecursion.hoplon.markdown.code_node.call(null,G__322064,G__322065));
})()," can be used with a vector, a list, and more generally, any sequential object. In fact, you could write your own protocols for ",(function (){var G__322066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__322067 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322066,G__322067) : tailrecursion.hoplon.markdown.code_node.call(null,G__322066,G__322067));
})()," so that you could use ",(function (){var G__322068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__322069 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322068,G__322069) : tailrecursion.hoplon.markdown.code_node.call(null,G__322068,G__322069));
})()," on your own data structures. We've actually been using protocols for a while now via ",(function (){var G__322070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__322071 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322070,G__322071) : tailrecursion.hoplon.markdown.code_node.call(null,G__322070,G__322071));
})(),". When given a vector, ",(function (){var G__322072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__322073 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322072,G__322073) : tailrecursion.hoplon.markdown.code_node.call(null,G__322072,G__322073));
})()," appends the argument to the end of the vector; when given a list, ",(function (){var G__322074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__322075 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322074,G__322075) : tailrecursion.hoplon.markdown.code_node.call(null,G__322074,G__322075));
})()," prepends. This is due to protocols."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__322054,G__322055) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__322054,G__322055));
})()], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322014,G__322015) : tailrecursion.hoplon.markdown.para_node.call(null,G__322014,G__322015));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321794;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321793;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_321792;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_321791;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_322076 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322077 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322078 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322079 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322244 = (function (){var G__322245 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__322246 = (function (){var G__322247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__322248 = "(";
var G__322249 = (function (){var G__322325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__322326 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322325,G__322326) : tailrecursion.hoplon.span.call(null,G__322325,G__322326));
})();
var G__322250 = (function (){var G__322327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322328 = "eq?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322327,G__322328) : tailrecursion.hoplon.span.call(null,G__322327,G__322328));
})();
var G__322251 = " [";
var G__322252 = (function (){var G__322329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322330 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322329,G__322330) : tailrecursion.hoplon.span.call(null,G__322329,G__322330));
})();
var G__322253 = " ";
var G__322254 = (function (){var G__322331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322332 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322331,G__322332) : tailrecursion.hoplon.span.call(null,G__322331,G__322332));
})();
var G__322255 = "]\n  (";
var G__322256 = (function (){var G__322333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322334 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322333,G__322334) : tailrecursion.hoplon.span.call(null,G__322333,G__322334));
})();
var G__322257 = "(";
var G__322258 = (function (){var G__322335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322336 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322335,G__322336) : tailrecursion.hoplon.span.call(null,G__322335,G__322336));
})();
var G__322259 = (function (){var G__322337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322338 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322337,G__322338) : tailrecursion.hoplon.span.call(null,G__322337,G__322338));
})();
var G__322260 = " ";
var G__322261 = (function (){var G__322339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322340 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322339,G__322340) : tailrecursion.hoplon.span.call(null,G__322339,G__322340));
})();
var G__322262 = ")\n       (";
var G__322263 = (function (){var G__322341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322342 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322341,G__322342) : tailrecursion.hoplon.span.call(null,G__322341,G__322342));
})();
var G__322264 = "(";
var G__322265 = (function (){var G__322343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322344 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322343,G__322344) : tailrecursion.hoplon.span.call(null,G__322343,G__322344));
})();
var G__322266 = (function (){var G__322345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322346 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322345,G__322346) : tailrecursion.hoplon.span.call(null,G__322345,G__322346));
})();
var G__322267 = "))))\n\n(";
var G__322268 = (function (){var G__322347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__322348 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322347,G__322348) : tailrecursion.hoplon.span.call(null,G__322347,G__322348));
})();
var G__322269 = (function (){var G__322349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322350 = "more-general-eq?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322349,G__322350) : tailrecursion.hoplon.span.call(null,G__322349,G__322350));
})();
var G__322270 = " [";
var G__322271 = (function (){var G__322351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322352 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322351,G__322352) : tailrecursion.hoplon.span.call(null,G__322351,G__322352));
})();
var G__322272 = " ";
var G__322273 = (function (){var G__322353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322354 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322353,G__322354) : tailrecursion.hoplon.span.call(null,G__322353,G__322354));
})();
var G__322274 = "]\n  (";
var G__322275 = (function (){var G__322355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322356 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322355,G__322356) : tailrecursion.hoplon.span.call(null,G__322355,G__322356));
})();
var G__322276 = "\n    (";
var G__322277 = (function (){var G__322357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__322358 = "eq?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322357,G__322358) : tailrecursion.hoplon.span.call(null,G__322357,G__322358));
})();
var G__322278 = " ";
var G__322279 = (function (){var G__322359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322360 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322359,G__322360) : tailrecursion.hoplon.span.call(null,G__322359,G__322360));
})();
var G__322280 = " ";
var G__322281 = (function (){var G__322361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322362 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322361,G__322362) : tailrecursion.hoplon.span.call(null,G__322361,G__322362));
})();
var G__322282 = ") ";
var G__322283 = (function (){var G__322363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322364 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322363,G__322364) : tailrecursion.hoplon.span.call(null,G__322363,G__322364));
})();
var G__322284 = "\n    (";
var G__322285 = (function (){var G__322365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__322366 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322365,G__322366) : tailrecursion.hoplon.span.call(null,G__322365,G__322366));
})();
var G__322286 = " ";
var G__322287 = (function (){var G__322367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322368 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322367,G__322368) : tailrecursion.hoplon.span.call(null,G__322367,G__322368));
})();
var G__322288 = ") (";
var G__322289 = (function (){var G__322369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__322370 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322369,G__322370) : tailrecursion.hoplon.span.call(null,G__322369,G__322370));
})();
var G__322290 = " ";
var G__322291 = (function (){var G__322371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322372 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322371,G__322372) : tailrecursion.hoplon.span.call(null,G__322371,G__322372));
})();
var G__322292 = ")\n    (";
var G__322293 = (function (){var G__322373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322374 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322373,G__322374) : tailrecursion.hoplon.span.call(null,G__322373,G__322374));
})();
var G__322294 = "(";
var G__322295 = (function (){var G__322375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__322376 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322375,G__322376) : tailrecursion.hoplon.span.call(null,G__322375,G__322376));
})();
var G__322296 = " ";
var G__322297 = (function (){var G__322377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322378 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322377,G__322378) : tailrecursion.hoplon.span.call(null,G__322377,G__322378));
})();
var G__322298 = ") \n         (";
var G__322299 = (function (){var G__322379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__322380 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322379,G__322380) : tailrecursion.hoplon.span.call(null,G__322379,G__322380));
})();
var G__322300 = " ";
var G__322301 = (function (){var G__322381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322382 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322381,G__322382) : tailrecursion.hoplon.span.call(null,G__322381,G__322382));
})();
var G__322302 = "))\n    (";
var G__322303 = (function (){var G__322383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322384 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322383,G__322384) : tailrecursion.hoplon.span.call(null,G__322383,G__322384));
})();
var G__322304 = "(";
var G__322305 = (function (){var G__322385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__322386 = "more-general-eq?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322385,G__322386) : tailrecursion.hoplon.span.call(null,G__322385,G__322386));
})();
var G__322306 = " (";
var G__322307 = (function (){var G__322387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322388 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322387,G__322388) : tailrecursion.hoplon.span.call(null,G__322387,G__322388));
})();
var G__322308 = (function (){var G__322389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322390 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322389,G__322390) : tailrecursion.hoplon.span.call(null,G__322389,G__322390));
})();
var G__322309 = ") (";
var G__322310 = (function (){var G__322391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322392 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322391,G__322392) : tailrecursion.hoplon.span.call(null,G__322391,G__322392));
})();
var G__322311 = (function (){var G__322393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322394 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322393,G__322394) : tailrecursion.hoplon.span.call(null,G__322393,G__322394));
})();
var G__322312 = "))\n         (";
var G__322313 = (function (){var G__322395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__322396 = "more-general-eq?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322395,G__322396) : tailrecursion.hoplon.span.call(null,G__322395,G__322396));
})();
var G__322314 = " (";
var G__322315 = (function (){var G__322397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322398 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322397,G__322398) : tailrecursion.hoplon.span.call(null,G__322397,G__322398));
})();
var G__322316 = (function (){var G__322399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322400 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322399,G__322400) : tailrecursion.hoplon.span.call(null,G__322399,G__322400));
})();
var G__322317 = ") (";
var G__322318 = (function (){var G__322401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322402 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322401,G__322402) : tailrecursion.hoplon.span.call(null,G__322401,G__322402));
})();
var G__322319 = (function (){var G__322403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322404 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322403,G__322404) : tailrecursion.hoplon.span.call(null,G__322403,G__322404));
})();
var G__322320 = ")))\n    ";
var G__322321 = (function (){var G__322405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322406 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322405,G__322406) : tailrecursion.hoplon.span.call(null,G__322405,G__322406));
})();
var G__322322 = " ";
var G__322323 = (function (){var G__322407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322408 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322407,G__322408) : tailrecursion.hoplon.span.call(null,G__322407,G__322408));
})();
var G__322324 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$78 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$78(G__322247,G__322248,G__322249,G__322250,G__322251,G__322252,G__322253,G__322254,G__322255,G__322256,G__322257,G__322258,G__322259,G__322260,G__322261,G__322262,G__322263,G__322264,G__322265,G__322266,G__322267,G__322268,G__322269,G__322270,G__322271,G__322272,G__322273,G__322274,G__322275,G__322276,G__322277,G__322278,G__322279,G__322280,G__322281,G__322282,G__322283,G__322284,G__322285,G__322286,G__322287,G__322288,G__322289,G__322290,G__322291,G__322292,G__322293,G__322294,G__322295,G__322296,G__322297,G__322298,G__322299,G__322300,G__322301,G__322302,G__322303,G__322304,G__322305,G__322306,G__322307,G__322308,G__322309,G__322310,G__322311,G__322312,G__322313,G__322314,G__322315,G__322316,G__322317,G__322318,G__322319,G__322320,G__322321,G__322322,G__322323,G__322324) : tailrecursion.hoplon.pre.call(null,G__322247,G__322248,G__322249,G__322250,G__322251,G__322252,G__322253,G__322254,G__322255,G__322256,G__322257,G__322258,G__322259,G__322260,G__322261,G__322262,G__322263,G__322264,G__322265,G__322266,G__322267,G__322268,G__322269,G__322270,G__322271,G__322272,G__322273,G__322274,G__322275,G__322276,G__322277,G__322278,G__322279,G__322280,G__322281,G__322282,G__322283,G__322284,G__322285,G__322286,G__322287,G__322288,G__322289,G__322290,G__322291,G__322292,G__322293,G__322294,G__322295,G__322296,G__322297,G__322298,G__322299,G__322300,G__322301,G__322302,G__322303,G__322304,G__322305,G__322306,G__322307,G__322308,G__322309,G__322310,G__322311,G__322312,G__322313,G__322314,G__322315,G__322316,G__322317,G__322318,G__322319,G__322320,G__322321,G__322322,G__322323,G__322324));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__322245,G__322246) : tailrecursion.hoplon.div.call(null,G__322245,G__322246));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__322244) : tailrecursion.hoplon.div.call(null,G__322244));
})(),(function (){var G__322409 = cljs.core.PersistentArrayMap.EMPTY;
var G__322410 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The idea being if ",(function (){var G__322411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"a"], null);
var G__322412 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322411,G__322412) : tailrecursion.hoplon.markdown.code_node.call(null,G__322411,G__322412));
})()," and ",(function (){var G__322413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"b"], null);
var G__322414 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322413,G__322414) : tailrecursion.hoplon.markdown.code_node.call(null,G__322413,G__322414));
})()," are equal (in this sense) then both ",(function (){var G__322415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"a"], null);
var G__322416 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322415,G__322416) : tailrecursion.hoplon.markdown.code_node.call(null,G__322415,G__322416));
})()," and ",(function (){var G__322417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"b"], null);
var G__322418 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322417,G__322418) : tailrecursion.hoplon.markdown.code_node.call(null,G__322417,G__322418));
})()," must be either: non-empty lists, empty lists, or not lists at all. This function takes care of those three cases in reverse order and if none are the case, it returns false."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322409,G__322410) : tailrecursion.hoplon.markdown.para_node.call(null,G__322409,G__322410));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322079;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322078;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322077;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322076;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_322419 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322420 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322421 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322422 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322423 = cljs.core.PersistentArrayMap.EMPTY;
var G__322424 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Eva Lu Ator types to the interpreter the expression"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322423,G__322424) : tailrecursion.hoplon.markdown.para_node.call(null,G__322423,G__322424));
})(),(function (){var G__322439 = (function (){var G__322440 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__322441 = (function (){var G__322442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__322443 = "(";
var G__322444 = (function (){var G__322448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__322449 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322448,G__322449) : tailrecursion.hoplon.span.call(null,G__322448,G__322449));
})();
var G__322445 = (function (){var G__322450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__322451 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322450,G__322451) : tailrecursion.hoplon.span.call(null,G__322450,G__322451));
})();
var G__322446 = (function (){var G__322452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322453 = "'abracadabra";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322452,G__322453) : tailrecursion.hoplon.span.call(null,G__322452,G__322453));
})();
var G__322447 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$6 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$6(G__322442,G__322443,G__322444,G__322445,G__322446,G__322447) : tailrecursion.hoplon.pre.call(null,G__322442,G__322443,G__322444,G__322445,G__322446,G__322447));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__322440,G__322441) : tailrecursion.hoplon.div.call(null,G__322440,G__322441));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__322439) : tailrecursion.hoplon.div.call(null,G__322439));
})(),(function (){var G__322454 = cljs.core.PersistentArrayMap.EMPTY;
var G__322455 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To her surprise, the interpreter prints back ",(function (){var G__322456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"quote"], null);
var G__322457 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322456,G__322457) : tailrecursion.hoplon.markdown.code_node.call(null,G__322456,G__322457));
})(),". Explain."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322454,G__322455) : tailrecursion.hoplon.markdown.para_node.call(null,G__322454,G__322455));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322422;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322421;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322420;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322419;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_322458 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322459 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322460 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322461 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322462 = cljs.core.PersistentArrayMap.EMPTY;
var G__322463 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["First let",(function (){var G__322464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__322465 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__322464,G__322465) : tailrecursion.hoplon.markdown.simple_node.call(null,G__322464,G__322465));
})(),"s take a look at what ",(function (){var G__322466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"''abracadabra"], null);
var G__322467 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322466,G__322467) : tailrecursion.hoplon.markdown.code_node.call(null,G__322466,G__322467));
})()," returns."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322462,G__322463) : tailrecursion.hoplon.markdown.para_node.call(null,G__322462,G__322463));
})(),(function (){var G__322511 = (function (){var G__322512 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__322513 = (function (){var G__322514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__322515 = (function (){var G__322533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__322534 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322533,G__322534) : tailrecursion.hoplon.span.call(null,G__322533,G__322534));
})();
var G__322516 = (function (){var G__322535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322536 = "'abracadabra";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322535,G__322536) : tailrecursion.hoplon.span.call(null,G__322535,G__322536));
})();
var G__322517 = "\n";
var G__322518 = (function (){var G__322537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__322538 = "`";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322537,G__322538) : tailrecursion.hoplon.span.call(null,G__322537,G__322538));
})();
var G__322519 = "(";
var G__322520 = (function (){var G__322539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__322540 = "quote ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322539,G__322540) : tailrecursion.hoplon.span.call(null,G__322539,G__322540));
})();
var G__322521 = (function (){var G__322541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322542 = "abracadabra";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322541,G__322542) : tailrecursion.hoplon.span.call(null,G__322541,G__322542));
})();
var G__322522 = ")\n(";
var G__322523 = (function (){var G__322543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__322544 = "quote ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322543,G__322544) : tailrecursion.hoplon.span.call(null,G__322543,G__322544));
})();
var G__322524 = "(";
var G__322525 = (function (){var G__322545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__322546 = "quote ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322545,G__322546) : tailrecursion.hoplon.span.call(null,G__322545,G__322546));
})();
var G__322526 = (function (){var G__322547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322548 = "abracadabra";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322547,G__322548) : tailrecursion.hoplon.span.call(null,G__322547,G__322548));
})();
var G__322527 = "))\n";
var G__322528 = (function (){var G__322549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322550 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322549,G__322550) : tailrecursion.hoplon.span.call(null,G__322549,G__322550));
})();
var G__322529 = " (";
var G__322530 = (function (){var G__322551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__322552 = "quote ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322551,G__322552) : tailrecursion.hoplon.span.call(null,G__322551,G__322552));
})();
var G__322531 = (function (){var G__322553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__322554 = "abracadabra";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__322553,G__322554) : tailrecursion.hoplon.span.call(null,G__322553,G__322554));
})();
var G__322532 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__322514,G__322515,G__322516,G__322517,G__322518,G__322519,G__322520,G__322521,G__322522,G__322523,G__322524,G__322525,G__322526,G__322527,G__322528,G__322529,G__322530,G__322531,G__322532) : tailrecursion.hoplon.pre.call(null,G__322514,G__322515,G__322516,G__322517,G__322518,G__322519,G__322520,G__322521,G__322522,G__322523,G__322524,G__322525,G__322526,G__322527,G__322528,G__322529,G__322530,G__322531,G__322532));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__322512,G__322513) : tailrecursion.hoplon.div.call(null,G__322512,G__322513));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__322511) : tailrecursion.hoplon.div.call(null,G__322511));
})(),(function (){var G__322555 = cljs.core.PersistentArrayMap.EMPTY;
var G__322556 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, we see the first thing in this list is the word ",(function (){var G__322557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__322558 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["quote"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__322557,G__322558) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__322557,G__322558));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322555,G__322556) : tailrecursion.hoplon.markdown.para_node.call(null,G__322555,G__322556));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322461;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322460;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322459;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322458;
}})()], 0))], 0))], 0));
var G__319875 = "";
var G__319876 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Example: Symbolic Differentiation"], null),(function (){var _STAR_references_STAR_322559 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322560 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322561 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322562 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322563 = cljs.core.PersistentArrayMap.EMPTY;
var G__322564 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As an illustration of symbol manipulation and a further illustration of data abstraction, consider the design of a procedure that performs symbolic differentiation of algebraic expressions. We would like the procedure to take as arguments an algebraic expression and a variable and to return the derivative of the expression with respect to the variable. For example, if the arguments to the procedure are \\(ax2 + bx + c\\) and \\(x\\), the procedure should return \\(2ax + b\\). Symbolic differentiation is of special historical significance in Lisp. It was one of the motivating examples behind the development of a computer language for symbol manipulation. Furthermore, it marked the beginning of the line of research that led to the development of powerful systems for symbolic mathematical work, which are currently being used by a growing number of applied mathematicians and physicists."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322563,G__322564) : tailrecursion.hoplon.markdown.para_node.call(null,G__322563,G__322564));
})(),(function (){var G__322565 = cljs.core.PersistentArrayMap.EMPTY;
var G__322566 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In developing the symbolic-differentiation program, we will follow the same strategy of data abstraction that we followed in developing the rational-number system of section 2.1.1. That is, we will first define a differentiation algorithm that operates on abstract objects such as ",(function (){var G__322567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__322568 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sums,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__322567,G__322568) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__322567,G__322568));
})()," ",(function (){var G__322569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__322570 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["products,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__322569,G__322570) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__322569,G__322570));
})()," and ",(function (){var G__322571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__322572 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["variables"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__322571,G__322572) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__322571,G__322572));
})()," without worrying about how these are to be represented. Only afterward will we address the representation problem."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322565,G__322566) : tailrecursion.hoplon.markdown.para_node.call(null,G__322565,G__322566));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322562;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322561;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322560;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322559;
}})()], 0));
var G__319877 = "";
var G__319878 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"The Differentiation Program with Abstract Data"], null),(function (){var _STAR_references_STAR_322573 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322574 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322575 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322576 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322577 = cljs.core.PersistentArrayMap.EMPTY;
var G__322578 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In order to keep things simple, we will consider a very simple symbolic-differentiation program that handles expressions that are built up using only the operations of addition and multiplication with two arguments. Differentiation of any such expression can be carried out by applying the following reduction rules:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322577,G__322578) : tailrecursion.hoplon.markdown.para_node.call(null,G__322577,G__322578));
})(),(function (){var G__322579 = cljs.core.PersistentArrayMap.EMPTY;
var G__322580 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{dc}{dx}=& 0 \\text{ for } c \\text{ a constant or a variable different from } x\\\\ \\frac{dx}{dx}=& 1\\\\ \\frac{d(u+v)}{dx}=& \\frac{du}{dx}+\\frac{dv}{dx}\\\\ \\frac{d(uv)}{dx}=& u\\left(\\frac{du}{dx}\\right) + v\\left(\\frac{dv}{dx}\\right)\\\\ \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322579,G__322580) : tailrecursion.hoplon.markdown.para_node.call(null,G__322579,G__322580));
})(),(function (){var G__322581 = cljs.core.PersistentArrayMap.EMPTY;
var G__322582 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Observe that the latter two rules are recursive in nature. That is, to obtain the derivative of a sum we first find the derivatives of the terms and add them. Each of the terms may in turn be an expression that needs to be decomposed. Decomposing into smaller and smaller pieces will eventually produce pieces that are either constants or variables, whose derivatives will be either 0 or 1."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322581,G__322582) : tailrecursion.hoplon.markdown.para_node.call(null,G__322581,G__322582));
})(),(function (){var G__322583 = cljs.core.PersistentArrayMap.EMPTY;
var G__322584 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To embody these rules in a procedure we indulge in a little wishful thinking, as we did in designing the rational-number implementation. If we had a means for representing algebraic expressions, we should be able to tell whether an expression is a sum, a product, a constant, or a variable. We should be able to extract the parts of an expression. For a sum, for example we want to be able to extract the addend (first term) and the augend (second term). We should also be able to construct expressions from parts. Let us assume that we already have procedures to implement the following selectors, constructors, and predicates:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322583,G__322584) : tailrecursion.hoplon.markdown.para_node.call(null,G__322583,G__322584));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322576;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322575;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322574;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322573;
}})(),"",(function (){var G__322585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$class,"table"], null);
var G__322586 = (function (){var G__322587 = cljs.core.PersistentArrayMap.EMPTY;
var G__322588 = (function (){var G__322607 = cljs.core.PersistentArrayMap.EMPTY;
var G__322608 = (function (){var G__322610 = cljs.core.PersistentArrayMap.EMPTY;
var G__322611 = (function (){var _STAR_references_STAR_322612 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322613 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322614 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322615 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322616 = cljs.core.PersistentArrayMap.EMPTY;
var G__322617 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(variable? e)"], null);
var G__322619 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322618,G__322619) : tailrecursion.hoplon.markdown.code_node.call(null,G__322618,G__322619));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322616,G__322617) : tailrecursion.hoplon.markdown.para_node.call(null,G__322616,G__322617));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322615;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322614;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322613;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322612;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322610,G__322611) : tailrecursion.hoplon.td.call(null,G__322610,G__322611));
})();
var G__322609 = (function (){var G__322620 = cljs.core.PersistentArrayMap.EMPTY;
var G__322621 = (function (){var _STAR_references_STAR_322622 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322623 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322624 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322625 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322626 = cljs.core.PersistentArrayMap.EMPTY;
var G__322627 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Is ",(function (){var G__322628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"e"], null);
var G__322629 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322628,G__322629) : tailrecursion.hoplon.markdown.code_node.call(null,G__322628,G__322629));
})()," a variable?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322626,G__322627) : tailrecursion.hoplon.markdown.para_node.call(null,G__322626,G__322627));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322625;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322624;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322623;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322622;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322620,G__322621) : tailrecursion.hoplon.td.call(null,G__322620,G__322621));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__322607,G__322608,G__322609) : tailrecursion.hoplon.tr.call(null,G__322607,G__322608,G__322609));
})();
var G__322589 = "";
var G__322590 = (function (){var G__322630 = cljs.core.PersistentArrayMap.EMPTY;
var G__322631 = (function (){var G__322633 = cljs.core.PersistentArrayMap.EMPTY;
var G__322634 = (function (){var _STAR_references_STAR_322635 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322636 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322637 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322638 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322639 = cljs.core.PersistentArrayMap.EMPTY;
var G__322640 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(same-variable? v1 v2)"], null);
var G__322642 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322641,G__322642) : tailrecursion.hoplon.markdown.code_node.call(null,G__322641,G__322642));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322639,G__322640) : tailrecursion.hoplon.markdown.para_node.call(null,G__322639,G__322640));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322638;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322637;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322636;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322635;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322633,G__322634) : tailrecursion.hoplon.td.call(null,G__322633,G__322634));
})();
var G__322632 = (function (){var G__322643 = cljs.core.PersistentArrayMap.EMPTY;
var G__322644 = (function (){var _STAR_references_STAR_322645 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322646 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322647 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322648 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322649 = cljs.core.PersistentArrayMap.EMPTY;
var G__322650 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Are ",(function (){var G__322651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"v1"], null);
var G__322652 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322651,G__322652) : tailrecursion.hoplon.markdown.code_node.call(null,G__322651,G__322652));
})()," and ",(function (){var G__322653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"v2"], null);
var G__322654 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322653,G__322654) : tailrecursion.hoplon.markdown.code_node.call(null,G__322653,G__322654));
})()," the same variable?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322649,G__322650) : tailrecursion.hoplon.markdown.para_node.call(null,G__322649,G__322650));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322648;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322647;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322646;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322645;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322643,G__322644) : tailrecursion.hoplon.td.call(null,G__322643,G__322644));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__322630,G__322631,G__322632) : tailrecursion.hoplon.tr.call(null,G__322630,G__322631,G__322632));
})();
var G__322591 = "";
var G__322592 = (function (){var G__322655 = cljs.core.PersistentArrayMap.EMPTY;
var G__322656 = (function (){var G__322658 = cljs.core.PersistentArrayMap.EMPTY;
var G__322659 = (function (){var _STAR_references_STAR_322660 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322661 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322662 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322663 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322664 = cljs.core.PersistentArrayMap.EMPTY;
var G__322665 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(sum? e)"], null);
var G__322667 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322666,G__322667) : tailrecursion.hoplon.markdown.code_node.call(null,G__322666,G__322667));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322664,G__322665) : tailrecursion.hoplon.markdown.para_node.call(null,G__322664,G__322665));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322663;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322662;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322661;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322660;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322658,G__322659) : tailrecursion.hoplon.td.call(null,G__322658,G__322659));
})();
var G__322657 = (function (){var G__322668 = cljs.core.PersistentArrayMap.EMPTY;
var G__322669 = (function (){var _STAR_references_STAR_322670 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322671 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322672 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322673 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322674 = cljs.core.PersistentArrayMap.EMPTY;
var G__322675 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Is ",(function (){var G__322676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"e"], null);
var G__322677 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322676,G__322677) : tailrecursion.hoplon.markdown.code_node.call(null,G__322676,G__322677));
})()," a sum?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322674,G__322675) : tailrecursion.hoplon.markdown.para_node.call(null,G__322674,G__322675));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322673;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322672;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322671;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322670;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322668,G__322669) : tailrecursion.hoplon.td.call(null,G__322668,G__322669));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__322655,G__322656,G__322657) : tailrecursion.hoplon.tr.call(null,G__322655,G__322656,G__322657));
})();
var G__322593 = "";
var G__322594 = (function (){var G__322678 = cljs.core.PersistentArrayMap.EMPTY;
var G__322679 = (function (){var G__322681 = cljs.core.PersistentArrayMap.EMPTY;
var G__322682 = (function (){var _STAR_references_STAR_322683 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322684 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322685 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322686 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322687 = cljs.core.PersistentArrayMap.EMPTY;
var G__322688 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(addend e)"], null);
var G__322690 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322689,G__322690) : tailrecursion.hoplon.markdown.code_node.call(null,G__322689,G__322690));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322687,G__322688) : tailrecursion.hoplon.markdown.para_node.call(null,G__322687,G__322688));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322686;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322685;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322684;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322683;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322681,G__322682) : tailrecursion.hoplon.td.call(null,G__322681,G__322682));
})();
var G__322680 = (function (){var G__322691 = cljs.core.PersistentArrayMap.EMPTY;
var G__322692 = (function (){var _STAR_references_STAR_322693 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322694 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322695 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322696 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322697 = cljs.core.PersistentArrayMap.EMPTY;
var G__322698 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Addend of the sum ",(function (){var G__322699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"e"], null);
var G__322700 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322699,G__322700) : tailrecursion.hoplon.markdown.code_node.call(null,G__322699,G__322700));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322697,G__322698) : tailrecursion.hoplon.markdown.para_node.call(null,G__322697,G__322698));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322696;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322695;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322694;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322693;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322691,G__322692) : tailrecursion.hoplon.td.call(null,G__322691,G__322692));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__322678,G__322679,G__322680) : tailrecursion.hoplon.tr.call(null,G__322678,G__322679,G__322680));
})();
var G__322595 = "";
var G__322596 = (function (){var G__322701 = cljs.core.PersistentArrayMap.EMPTY;
var G__322702 = (function (){var G__322704 = cljs.core.PersistentArrayMap.EMPTY;
var G__322705 = (function (){var _STAR_references_STAR_322706 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322707 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322708 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322709 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322710 = cljs.core.PersistentArrayMap.EMPTY;
var G__322711 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(augend e)"], null);
var G__322713 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322712,G__322713) : tailrecursion.hoplon.markdown.code_node.call(null,G__322712,G__322713));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322710,G__322711) : tailrecursion.hoplon.markdown.para_node.call(null,G__322710,G__322711));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322709;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322708;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322707;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322706;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322704,G__322705) : tailrecursion.hoplon.td.call(null,G__322704,G__322705));
})();
var G__322703 = (function (){var G__322714 = cljs.core.PersistentArrayMap.EMPTY;
var G__322715 = (function (){var _STAR_references_STAR_322716 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322717 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322718 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322719 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322720 = cljs.core.PersistentArrayMap.EMPTY;
var G__322721 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Augend of the sum ",(function (){var G__322722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"e"], null);
var G__322723 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322722,G__322723) : tailrecursion.hoplon.markdown.code_node.call(null,G__322722,G__322723));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322720,G__322721) : tailrecursion.hoplon.markdown.para_node.call(null,G__322720,G__322721));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322719;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322718;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322717;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322716;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322714,G__322715) : tailrecursion.hoplon.td.call(null,G__322714,G__322715));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__322701,G__322702,G__322703) : tailrecursion.hoplon.tr.call(null,G__322701,G__322702,G__322703));
})();
var G__322597 = "";
var G__322598 = (function (){var G__322724 = cljs.core.PersistentArrayMap.EMPTY;
var G__322725 = (function (){var G__322727 = cljs.core.PersistentArrayMap.EMPTY;
var G__322728 = (function (){var _STAR_references_STAR_322729 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322730 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322731 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322732 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322733 = cljs.core.PersistentArrayMap.EMPTY;
var G__322734 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(make-sum e)"], null);
var G__322736 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322735,G__322736) : tailrecursion.hoplon.markdown.code_node.call(null,G__322735,G__322736));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322733,G__322734) : tailrecursion.hoplon.markdown.para_node.call(null,G__322733,G__322734));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322732;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322731;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322730;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322729;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322727,G__322728) : tailrecursion.hoplon.td.call(null,G__322727,G__322728));
})();
var G__322726 = (function (){var G__322737 = cljs.core.PersistentArrayMap.EMPTY;
var G__322738 = (function (){var _STAR_references_STAR_322739 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322740 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322741 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322742 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322743 = cljs.core.PersistentArrayMap.EMPTY;
var G__322744 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Construct the sum of ",(function (){var G__322745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"a1"], null);
var G__322746 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322745,G__322746) : tailrecursion.hoplon.markdown.code_node.call(null,G__322745,G__322746));
})()," and ",(function (){var G__322747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"a2"], null);
var G__322748 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322747,G__322748) : tailrecursion.hoplon.markdown.code_node.call(null,G__322747,G__322748));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322743,G__322744) : tailrecursion.hoplon.markdown.para_node.call(null,G__322743,G__322744));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322742;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322741;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322740;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322739;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322737,G__322738) : tailrecursion.hoplon.td.call(null,G__322737,G__322738));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__322724,G__322725,G__322726) : tailrecursion.hoplon.tr.call(null,G__322724,G__322725,G__322726));
})();
var G__322599 = "";
var G__322600 = (function (){var G__322749 = cljs.core.PersistentArrayMap.EMPTY;
var G__322750 = (function (){var G__322752 = cljs.core.PersistentArrayMap.EMPTY;
var G__322753 = (function (){var _STAR_references_STAR_322754 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322755 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322756 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322757 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322758 = cljs.core.PersistentArrayMap.EMPTY;
var G__322759 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(product? e)"], null);
var G__322761 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322760,G__322761) : tailrecursion.hoplon.markdown.code_node.call(null,G__322760,G__322761));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322758,G__322759) : tailrecursion.hoplon.markdown.para_node.call(null,G__322758,G__322759));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322757;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322756;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322755;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322754;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322752,G__322753) : tailrecursion.hoplon.td.call(null,G__322752,G__322753));
})();
var G__322751 = (function (){var G__322762 = cljs.core.PersistentArrayMap.EMPTY;
var G__322763 = (function (){var _STAR_references_STAR_322764 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322765 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322766 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322767 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322768 = cljs.core.PersistentArrayMap.EMPTY;
var G__322769 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Is ",(function (){var G__322770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"e"], null);
var G__322771 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322770,G__322771) : tailrecursion.hoplon.markdown.code_node.call(null,G__322770,G__322771));
})()," a product?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322768,G__322769) : tailrecursion.hoplon.markdown.para_node.call(null,G__322768,G__322769));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322767;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322766;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322765;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322764;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322762,G__322763) : tailrecursion.hoplon.td.call(null,G__322762,G__322763));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__322749,G__322750,G__322751) : tailrecursion.hoplon.tr.call(null,G__322749,G__322750,G__322751));
})();
var G__322601 = "";
var G__322602 = (function (){var G__322772 = cljs.core.PersistentArrayMap.EMPTY;
var G__322773 = (function (){var G__322775 = cljs.core.PersistentArrayMap.EMPTY;
var G__322776 = (function (){var _STAR_references_STAR_322777 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322778 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322779 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322780 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322781 = cljs.core.PersistentArrayMap.EMPTY;
var G__322782 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(multiplier e)"], null);
var G__322784 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322783,G__322784) : tailrecursion.hoplon.markdown.code_node.call(null,G__322783,G__322784));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322781,G__322782) : tailrecursion.hoplon.markdown.para_node.call(null,G__322781,G__322782));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322780;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322779;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322778;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322777;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322775,G__322776) : tailrecursion.hoplon.td.call(null,G__322775,G__322776));
})();
var G__322774 = (function (){var G__322785 = cljs.core.PersistentArrayMap.EMPTY;
var G__322786 = (function (){var _STAR_references_STAR_322787 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322788 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322789 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322790 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322791 = cljs.core.PersistentArrayMap.EMPTY;
var G__322792 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Multiplier of the product ",(function (){var G__322793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"e"], null);
var G__322794 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322793,G__322794) : tailrecursion.hoplon.markdown.code_node.call(null,G__322793,G__322794));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322791,G__322792) : tailrecursion.hoplon.markdown.para_node.call(null,G__322791,G__322792));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322790;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322789;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322788;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322787;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322785,G__322786) : tailrecursion.hoplon.td.call(null,G__322785,G__322786));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__322772,G__322773,G__322774) : tailrecursion.hoplon.tr.call(null,G__322772,G__322773,G__322774));
})();
var G__322603 = "";
var G__322604 = (function (){var G__322795 = cljs.core.PersistentArrayMap.EMPTY;
var G__322796 = (function (){var G__322798 = cljs.core.PersistentArrayMap.EMPTY;
var G__322799 = (function (){var _STAR_references_STAR_322800 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322801 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322802 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322803 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322804 = cljs.core.PersistentArrayMap.EMPTY;
var G__322805 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(multiplicand e)"], null);
var G__322807 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322806,G__322807) : tailrecursion.hoplon.markdown.code_node.call(null,G__322806,G__322807));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322804,G__322805) : tailrecursion.hoplon.markdown.para_node.call(null,G__322804,G__322805));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322803;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322802;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322801;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322800;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322798,G__322799) : tailrecursion.hoplon.td.call(null,G__322798,G__322799));
})();
var G__322797 = (function (){var G__322808 = cljs.core.PersistentArrayMap.EMPTY;
var G__322809 = (function (){var _STAR_references_STAR_322810 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322811 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322812 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322813 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322814 = cljs.core.PersistentArrayMap.EMPTY;
var G__322815 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Multiplicand of the product ",(function (){var G__322816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"e"], null);
var G__322817 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322816,G__322817) : tailrecursion.hoplon.markdown.code_node.call(null,G__322816,G__322817));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322814,G__322815) : tailrecursion.hoplon.markdown.para_node.call(null,G__322814,G__322815));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322813;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322812;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322811;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322810;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322808,G__322809) : tailrecursion.hoplon.td.call(null,G__322808,G__322809));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__322795,G__322796,G__322797) : tailrecursion.hoplon.tr.call(null,G__322795,G__322796,G__322797));
})();
var G__322605 = "";
var G__322606 = (function (){var G__322818 = cljs.core.PersistentArrayMap.EMPTY;
var G__322819 = (function (){var G__322821 = cljs.core.PersistentArrayMap.EMPTY;
var G__322822 = (function (){var _STAR_references_STAR_322823 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322824 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322825 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322826 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322827 = cljs.core.PersistentArrayMap.EMPTY;
var G__322828 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(make-product m1 m2)"], null);
var G__322830 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322829,G__322830) : tailrecursion.hoplon.markdown.code_node.call(null,G__322829,G__322830));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322827,G__322828) : tailrecursion.hoplon.markdown.para_node.call(null,G__322827,G__322828));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322826;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322825;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322824;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322823;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322821,G__322822) : tailrecursion.hoplon.td.call(null,G__322821,G__322822));
})();
var G__322820 = (function (){var G__322831 = cljs.core.PersistentArrayMap.EMPTY;
var G__322832 = (function (){var _STAR_references_STAR_322833 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322834 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322835 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322836 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322837 = cljs.core.PersistentArrayMap.EMPTY;
var G__322838 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Construct the product of ",(function (){var G__322839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"m1"], null);
var G__322840 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322839,G__322840) : tailrecursion.hoplon.markdown.code_node.call(null,G__322839,G__322840));
})()," and ",(function (){var G__322841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"m2"], null);
var G__322842 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322841,G__322842) : tailrecursion.hoplon.markdown.code_node.call(null,G__322841,G__322842));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322837,G__322838) : tailrecursion.hoplon.markdown.para_node.call(null,G__322837,G__322838));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322836;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322835;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322834;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322833;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__322831,G__322832) : tailrecursion.hoplon.td.call(null,G__322831,G__322832));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__322818,G__322819,G__322820) : tailrecursion.hoplon.tr.call(null,G__322818,G__322819,G__322820));
})();
return (tailrecursion.hoplon.tbody.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.tbody.cljs$core$IFn$_invoke$arity$20(G__322587,G__322588,G__322589,G__322590,G__322591,G__322592,G__322593,G__322594,G__322595,G__322596,G__322597,G__322598,G__322599,G__322600,G__322601,G__322602,G__322603,G__322604,G__322605,G__322606) : tailrecursion.hoplon.tbody.call(null,G__322587,G__322588,G__322589,G__322590,G__322591,G__322592,G__322593,G__322594,G__322595,G__322596,G__322597,G__322598,G__322599,G__322600,G__322601,G__322602,G__322603,G__322604,G__322605,G__322606));
})();
return (tailrecursion.hoplon.table.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.table.cljs$core$IFn$_invoke$arity$2(G__322585,G__322586) : tailrecursion.hoplon.table.call(null,G__322585,G__322586));
})(),"",(function (){var _STAR_references_STAR_322843 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322844 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_322845 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_322846 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__322847 = cljs.core.PersistentArrayMap.EMPTY;
var G__322848 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using these, and the primitive predicate ",(function (){var G__322849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"number?"], null);
var G__322850 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__322849,G__322850) : tailrecursion.hoplon.markdown.code_node.call(null,G__322849,G__322850));
})(),", which identifies numbers, we can express the differentiation rules as the following procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__322847,G__322848) : tailrecursion.hoplon.markdown.para_node.call(null,G__322847,G__322848));
})(),(function (){var G__323046 = (function (){var G__323047 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__323048 = (function (){var G__323049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__323050 = "(";
var G__323051 = (function (){var G__323146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__323147 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323146,G__323147) : tailrecursion.hoplon.span.call(null,G__323146,G__323147));
})();
var G__323052 = (function (){var G__323148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323149 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323148,G__323149) : tailrecursion.hoplon.span.call(null,G__323148,G__323149));
})();
var G__323053 = " [";
var G__323054 = (function (){var G__323150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323151 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323150,G__323151) : tailrecursion.hoplon.span.call(null,G__323150,G__323151));
})();
var G__323055 = " ";
var G__323056 = (function (){var G__323152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323153 = "var";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323152,G__323153) : tailrecursion.hoplon.span.call(null,G__323152,G__323153));
})();
var G__323057 = "]\n  (";
var G__323058 = (function (){var G__323154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323155 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323154,G__323155) : tailrecursion.hoplon.span.call(null,G__323154,G__323155));
})();
var G__323059 = "(";
var G__323060 = (function (){var G__323156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323157 = "number?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323156,G__323157) : tailrecursion.hoplon.span.call(null,G__323156,G__323157));
})();
var G__323061 = " ";
var G__323062 = (function (){var G__323158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323159 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323158,G__323159) : tailrecursion.hoplon.span.call(null,G__323158,G__323159));
})();
var G__323063 = ") ";
var G__323064 = (function (){var G__323160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__323161 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323160,G__323161) : tailrecursion.hoplon.span.call(null,G__323160,G__323161));
})();
var G__323065 = "\n        (";
var G__323066 = (function (){var G__323162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323163 = "variable?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323162,G__323163) : tailrecursion.hoplon.span.call(null,G__323162,G__323163));
})();
var G__323067 = " ";
var G__323068 = (function (){var G__323164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323165 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323164,G__323165) : tailrecursion.hoplon.span.call(null,G__323164,G__323165));
})();
var G__323069 = ") (";
var G__323070 = (function (){var G__323166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__323167 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323166,G__323167) : tailrecursion.hoplon.span.call(null,G__323166,G__323167));
})();
var G__323071 = "(";
var G__323072 = (function (){var G__323168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323169 = "same-variable?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323168,G__323169) : tailrecursion.hoplon.span.call(null,G__323168,G__323169));
})();
var G__323073 = " ";
var G__323074 = (function (){var G__323170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323171 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323170,G__323171) : tailrecursion.hoplon.span.call(null,G__323170,G__323171));
})();
var G__323075 = " ";
var G__323076 = (function (){var G__323172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323173 = "var";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323172,G__323173) : tailrecursion.hoplon.span.call(null,G__323172,G__323173));
})();
var G__323077 = ") \n                            ";
var G__323078 = (function (){var G__323174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__323175 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323174,G__323175) : tailrecursion.hoplon.span.call(null,G__323174,G__323175));
})();
var G__323079 = " \n                            ";
var G__323080 = (function (){var G__323176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__323177 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323176,G__323177) : tailrecursion.hoplon.span.call(null,G__323176,G__323177));
})();
var G__323081 = ")\n        (";
var G__323082 = (function (){var G__323178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323179 = "sum?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323178,G__323179) : tailrecursion.hoplon.span.call(null,G__323178,G__323179));
})();
var G__323083 = " ";
var G__323084 = (function (){var G__323180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323181 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323180,G__323181) : tailrecursion.hoplon.span.call(null,G__323180,G__323181));
})();
var G__323085 = ") (";
var G__323086 = (function (){var G__323182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323183 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323182,G__323183) : tailrecursion.hoplon.span.call(null,G__323182,G__323183));
})();
var G__323087 = "\n                     (";
var G__323088 = (function (){var G__323184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323185 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323184,G__323185) : tailrecursion.hoplon.span.call(null,G__323184,G__323185));
})();
var G__323089 = " (";
var G__323090 = (function (){var G__323186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323187 = "addend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323186,G__323187) : tailrecursion.hoplon.span.call(null,G__323186,G__323187));
})();
var G__323091 = " ";
var G__323092 = (function (){var G__323188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323189 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323188,G__323189) : tailrecursion.hoplon.span.call(null,G__323188,G__323189));
})();
var G__323093 = ") ";
var G__323094 = (function (){var G__323190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323191 = "var";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323190,G__323191) : tailrecursion.hoplon.span.call(null,G__323190,G__323191));
})();
var G__323095 = ")\n                     (";
var G__323096 = (function (){var G__323192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323193 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323192,G__323193) : tailrecursion.hoplon.span.call(null,G__323192,G__323193));
})();
var G__323097 = " (";
var G__323098 = (function (){var G__323194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323195 = "augend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323194,G__323195) : tailrecursion.hoplon.span.call(null,G__323194,G__323195));
})();
var G__323099 = " ";
var G__323100 = (function (){var G__323196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323197 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323196,G__323197) : tailrecursion.hoplon.span.call(null,G__323196,G__323197));
})();
var G__323101 = ") ";
var G__323102 = (function (){var G__323198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323199 = "var";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323198,G__323199) : tailrecursion.hoplon.span.call(null,G__323198,G__323199));
})();
var G__323103 = "))\n        (";
var G__323104 = (function (){var G__323200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323201 = "product?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323200,G__323201) : tailrecursion.hoplon.span.call(null,G__323200,G__323201));
})();
var G__323105 = " ";
var G__323106 = (function (){var G__323202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323203 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323202,G__323203) : tailrecursion.hoplon.span.call(null,G__323202,G__323203));
})();
var G__323107 = ") (";
var G__323108 = (function (){var G__323204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323205 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323204,G__323205) : tailrecursion.hoplon.span.call(null,G__323204,G__323205));
})();
var G__323109 = "\n                         (";
var G__323110 = (function (){var G__323206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323207 = "make-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323206,G__323207) : tailrecursion.hoplon.span.call(null,G__323206,G__323207));
})();
var G__323111 = " (";
var G__323112 = (function (){var G__323208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323209 = "multiplier";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323208,G__323209) : tailrecursion.hoplon.span.call(null,G__323208,G__323209));
})();
var G__323113 = " ";
var G__323114 = (function (){var G__323210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323211 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323210,G__323211) : tailrecursion.hoplon.span.call(null,G__323210,G__323211));
})();
var G__323115 = ")\n                                       (";
var G__323116 = (function (){var G__323212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323213 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323212,G__323213) : tailrecursion.hoplon.span.call(null,G__323212,G__323213));
})();
var G__323117 = " (";
var G__323118 = (function (){var G__323214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323215 = "multiplicand";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323214,G__323215) : tailrecursion.hoplon.span.call(null,G__323214,G__323215));
})();
var G__323119 = " ";
var G__323120 = (function (){var G__323216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323217 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323216,G__323217) : tailrecursion.hoplon.span.call(null,G__323216,G__323217));
})();
var G__323121 = ") ";
var G__323122 = (function (){var G__323218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323219 = "var";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323218,G__323219) : tailrecursion.hoplon.span.call(null,G__323218,G__323219));
})();
var G__323123 = "))\n                         (";
var G__323124 = (function (){var G__323220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323221 = "make-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323220,G__323221) : tailrecursion.hoplon.span.call(null,G__323220,G__323221));
})();
var G__323125 = " (";
var G__323126 = (function (){var G__323222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323223 = "multiplicand";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323222,G__323223) : tailrecursion.hoplon.span.call(null,G__323222,G__323223));
})();
var G__323127 = " ";
var G__323128 = (function (){var G__323224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323225 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323224,G__323225) : tailrecursion.hoplon.span.call(null,G__323224,G__323225));
})();
var G__323129 = ")\n                                       (";
var G__323130 = (function (){var G__323226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323227 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323226,G__323227) : tailrecursion.hoplon.span.call(null,G__323226,G__323227));
})();
var G__323131 = " (";
var G__323132 = (function (){var G__323228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323229 = "multiplier";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323228,G__323229) : tailrecursion.hoplon.span.call(null,G__323228,G__323229));
})();
var G__323133 = " ";
var G__323134 = (function (){var G__323230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323231 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323230,G__323231) : tailrecursion.hoplon.span.call(null,G__323230,G__323231));
})();
var G__323135 = ") ";
var G__323136 = (function (){var G__323232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323233 = "var";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323232,G__323233) : tailrecursion.hoplon.span.call(null,G__323232,G__323233));
})();
var G__323137 = ")))\n        ";
var G__323138 = (function (){var G__323234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323235 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323234,G__323235) : tailrecursion.hoplon.span.call(null,G__323234,G__323235));
})();
var G__323139 = " (";
var G__323140 = (function (){var G__323236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323237 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323236,G__323237) : tailrecursion.hoplon.span.call(null,G__323236,G__323237));
})();
var G__323141 = " (";
var G__323142 = (function (){var G__323238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323239 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323238,G__323239) : tailrecursion.hoplon.span.call(null,G__323238,G__323239));
})();
var G__323143 = " ";
var G__323144 = (function (){var G__323240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__323241 = "\"Unknown expression type -- DERIV\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323240,G__323241) : tailrecursion.hoplon.span.call(null,G__323240,G__323241));
})();
var G__323145 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$97 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$97(G__323049,G__323050,G__323051,G__323052,G__323053,G__323054,G__323055,G__323056,G__323057,G__323058,G__323059,G__323060,G__323061,G__323062,G__323063,G__323064,G__323065,G__323066,G__323067,G__323068,G__323069,G__323070,G__323071,G__323072,G__323073,G__323074,G__323075,G__323076,G__323077,G__323078,G__323079,G__323080,G__323081,G__323082,G__323083,G__323084,G__323085,G__323086,G__323087,G__323088,G__323089,G__323090,G__323091,G__323092,G__323093,G__323094,G__323095,G__323096,G__323097,G__323098,G__323099,G__323100,G__323101,G__323102,G__323103,G__323104,G__323105,G__323106,G__323107,G__323108,G__323109,G__323110,G__323111,G__323112,G__323113,G__323114,G__323115,G__323116,G__323117,G__323118,G__323119,G__323120,G__323121,G__323122,G__323123,G__323124,G__323125,G__323126,G__323127,G__323128,G__323129,G__323130,G__323131,G__323132,G__323133,G__323134,G__323135,G__323136,G__323137,G__323138,G__323139,G__323140,G__323141,G__323142,G__323143,G__323144,G__323145) : tailrecursion.hoplon.pre.call(null,G__323049,G__323050,G__323051,G__323052,G__323053,G__323054,G__323055,G__323056,G__323057,G__323058,G__323059,G__323060,G__323061,G__323062,G__323063,G__323064,G__323065,G__323066,G__323067,G__323068,G__323069,G__323070,G__323071,G__323072,G__323073,G__323074,G__323075,G__323076,G__323077,G__323078,G__323079,G__323080,G__323081,G__323082,G__323083,G__323084,G__323085,G__323086,G__323087,G__323088,G__323089,G__323090,G__323091,G__323092,G__323093,G__323094,G__323095,G__323096,G__323097,G__323098,G__323099,G__323100,G__323101,G__323102,G__323103,G__323104,G__323105,G__323106,G__323107,G__323108,G__323109,G__323110,G__323111,G__323112,G__323113,G__323114,G__323115,G__323116,G__323117,G__323118,G__323119,G__323120,G__323121,G__323122,G__323123,G__323124,G__323125,G__323126,G__323127,G__323128,G__323129,G__323130,G__323131,G__323132,G__323133,G__323134,G__323135,G__323136,G__323137,G__323138,G__323139,G__323140,G__323141,G__323142,G__323143,G__323144,G__323145));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__323047,G__323048) : tailrecursion.hoplon.div.call(null,G__323047,G__323048));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__323046) : tailrecursion.hoplon.div.call(null,G__323046));
})(),(function (){var G__323242 = cljs.core.PersistentArrayMap.EMPTY;
var G__323243 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This ",(function (){var G__323244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"deriv"], null);
var G__323245 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__323244,G__323245) : tailrecursion.hoplon.markdown.code_node.call(null,G__323244,G__323245));
})()," procedure inforporates the complete differentiation algorithm. Since it is expressed in terms of abstract data, it will work no matter how we choose to represent algebraic expressions, as long as we design a proper set of selectors and constructors. This is the issue we must address next."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323242,G__323243) : tailrecursion.hoplon.markdown.para_node.call(null,G__323242,G__323243));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322846;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322845;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_322844;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_322843;
}})()], 0));
var G__319879 = "";
var G__319880 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Representing Algebraic Expressions"], null),(function (){var _STAR_references_STAR_323246 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323247 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323248 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323249 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323250 = cljs.core.PersistentArrayMap.EMPTY;
var G__323251 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can imagine ways to use list structure to represent algebraic expressions. For example, we could use lists of symbols that mirror the usual algebraic notation, representing \\(ax+b\\) as the list ",(function (){var G__323252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(a * x +\nb)"], null);
var G__323253 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__323252,G__323253) : tailrecursion.hoplon.markdown.code_node.call(null,G__323252,G__323253));
})(),". However, one especially straightforward choice is to use the same parenthesized prefix notation that Lisp uses for combinations: that is, to represent \\(ax+b\\) as ",(function (){var G__323254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(+ (* a x) b)"], null);
var G__323255 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__323254,G__323255) : tailrecursion.hoplon.markdown.code_node.call(null,G__323254,G__323255));
})(),". Then our data representation for the differentiation problem is as follows:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323250,G__323251) : tailrecursion.hoplon.markdown.para_node.call(null,G__323250,G__323251));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323249;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323248;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323247;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323246;
}})(),"",(function (){var G__323256 = cljs.core.PersistentArrayMap.EMPTY;
var G__323257 = (function (){var G__323275 = cljs.core.PersistentArrayMap.EMPTY;
var G__323276 = (function (){var _STAR_references_STAR_323277 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323278 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323279 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323280 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323281 = cljs.core.PersistentArrayMap.EMPTY;
var G__323282 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The variables are symbols. They are identified by the primitive predicate ",(function (){var G__323283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"symbol?"], null);
var G__323284 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__323283,G__323284) : tailrecursion.hoplon.markdown.code_node.call(null,G__323283,G__323284));
})(),": "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323281,G__323282) : tailrecursion.hoplon.markdown.para_node.call(null,G__323281,G__323282));
})(),(function (){var G__323307 = (function (){var G__323308 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__323309 = (function (){var G__323310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__323311 = "(";
var G__323312 = (function (){var G__323320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__323321 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323320,G__323321) : tailrecursion.hoplon.span.call(null,G__323320,G__323321));
})();
var G__323313 = (function (){var G__323322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323323 = "variable?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323322,G__323323) : tailrecursion.hoplon.span.call(null,G__323322,G__323323));
})();
var G__323314 = " [";
var G__323315 = (function (){var G__323324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323325 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323324,G__323325) : tailrecursion.hoplon.span.call(null,G__323324,G__323325));
})();
var G__323316 = "]\n  (";
var G__323317 = (function (){var G__323326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323327 = "symbol? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323326,G__323327) : tailrecursion.hoplon.span.call(null,G__323326,G__323327));
})();
var G__323318 = (function (){var G__323328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323329 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323328,G__323329) : tailrecursion.hoplon.span.call(null,G__323328,G__323329));
})();
var G__323319 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10(G__323310,G__323311,G__323312,G__323313,G__323314,G__323315,G__323316,G__323317,G__323318,G__323319) : tailrecursion.hoplon.pre.call(null,G__323310,G__323311,G__323312,G__323313,G__323314,G__323315,G__323316,G__323317,G__323318,G__323319));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__323308,G__323309) : tailrecursion.hoplon.div.call(null,G__323308,G__323309));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__323307) : tailrecursion.hoplon.div.call(null,G__323307));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323280;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323279;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323278;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323277;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__323275,G__323276) : tailrecursion.hoplon.li.call(null,G__323275,G__323276));
})();
var G__323258 = "";
var G__323259 = (function (){var G__323330 = cljs.core.PersistentArrayMap.EMPTY;
var G__323331 = (function (){var _STAR_references_STAR_323332 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323333 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323334 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323335 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323336 = cljs.core.PersistentArrayMap.EMPTY;
var G__323337 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Two variables are the same if the symbols representing them are ",(function (){var G__323338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__323339 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__323338,G__323339) : tailrecursion.hoplon.markdown.code_node.call(null,G__323338,G__323339));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323336,G__323337) : tailrecursion.hoplon.markdown.para_node.call(null,G__323336,G__323337));
})(),(function (){var G__323390 = (function (){var G__323391 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__323392 = (function (){var G__323393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__323394 = "(";
var G__323395 = (function (){var G__323417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__323418 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323417,G__323418) : tailrecursion.hoplon.span.call(null,G__323417,G__323418));
})();
var G__323396 = (function (){var G__323419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323420 = "same-variable?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323419,G__323420) : tailrecursion.hoplon.span.call(null,G__323419,G__323420));
})();
var G__323397 = " [";
var G__323398 = (function (){var G__323421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323422 = "v1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323421,G__323422) : tailrecursion.hoplon.span.call(null,G__323421,G__323422));
})();
var G__323399 = " ";
var G__323400 = (function (){var G__323423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323424 = "v2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323423,G__323424) : tailrecursion.hoplon.span.call(null,G__323423,G__323424));
})();
var G__323401 = "]\n  (";
var G__323402 = (function (){var G__323425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323426 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323425,G__323426) : tailrecursion.hoplon.span.call(null,G__323425,G__323426));
})();
var G__323403 = "(";
var G__323404 = (function (){var G__323427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323428 = "variable?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323427,G__323428) : tailrecursion.hoplon.span.call(null,G__323427,G__323428));
})();
var G__323405 = " ";
var G__323406 = (function (){var G__323429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323430 = "v1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323429,G__323430) : tailrecursion.hoplon.span.call(null,G__323429,G__323430));
})();
var G__323407 = ")\n       (";
var G__323408 = (function (){var G__323431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__323432 = "variable?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323431,G__323432) : tailrecursion.hoplon.span.call(null,G__323431,G__323432));
})();
var G__323409 = " ";
var G__323410 = (function (){var G__323433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323434 = "v2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323433,G__323434) : tailrecursion.hoplon.span.call(null,G__323433,G__323434));
})();
var G__323411 = ")\n       (";
var G__323412 = (function (){var G__323435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323436 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323435,G__323436) : tailrecursion.hoplon.span.call(null,G__323435,G__323436));
})();
var G__323413 = (function (){var G__323437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323438 = "v1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323437,G__323438) : tailrecursion.hoplon.span.call(null,G__323437,G__323438));
})();
var G__323414 = " ";
var G__323415 = (function (){var G__323439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323440 = "v2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323439,G__323440) : tailrecursion.hoplon.span.call(null,G__323439,G__323440));
})();
var G__323416 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24(G__323393,G__323394,G__323395,G__323396,G__323397,G__323398,G__323399,G__323400,G__323401,G__323402,G__323403,G__323404,G__323405,G__323406,G__323407,G__323408,G__323409,G__323410,G__323411,G__323412,G__323413,G__323414,G__323415,G__323416) : tailrecursion.hoplon.pre.call(null,G__323393,G__323394,G__323395,G__323396,G__323397,G__323398,G__323399,G__323400,G__323401,G__323402,G__323403,G__323404,G__323405,G__323406,G__323407,G__323408,G__323409,G__323410,G__323411,G__323412,G__323413,G__323414,G__323415,G__323416));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__323391,G__323392) : tailrecursion.hoplon.div.call(null,G__323391,G__323392));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__323390) : tailrecursion.hoplon.div.call(null,G__323390));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323335;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323334;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323333;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323332;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__323330,G__323331) : tailrecursion.hoplon.li.call(null,G__323330,G__323331));
})();
var G__323260 = "";
var G__323261 = (function (){var G__323441 = cljs.core.PersistentArrayMap.EMPTY;
var G__323442 = (function (){var _STAR_references_STAR_323443 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323444 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323445 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323446 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323447 = cljs.core.PersistentArrayMap.EMPTY;
var G__323448 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sums and products are constructed as lists:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323447,G__323448) : tailrecursion.hoplon.markdown.para_node.call(null,G__323447,G__323448));
})(),(function (){var G__323513 = (function (){var G__323514 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__323515 = (function (){var G__323516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__323517 = "(";
var G__323518 = (function (){var G__323546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__323547 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323546,G__323547) : tailrecursion.hoplon.span.call(null,G__323546,G__323547));
})();
var G__323519 = (function (){var G__323548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323549 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323548,G__323549) : tailrecursion.hoplon.span.call(null,G__323548,G__323549));
})();
var G__323520 = " [";
var G__323521 = (function (){var G__323550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323551 = "a1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323550,G__323551) : tailrecursion.hoplon.span.call(null,G__323550,G__323551));
})();
var G__323522 = " ";
var G__323523 = (function (){var G__323552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323553 = "a2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323552,G__323553) : tailrecursion.hoplon.span.call(null,G__323552,G__323553));
})();
var G__323524 = "]\n  (";
var G__323525 = (function (){var G__323554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323555 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323554,G__323555) : tailrecursion.hoplon.span.call(null,G__323554,G__323555));
})();
var G__323526 = (function (){var G__323556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323557 = "'+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323556,G__323557) : tailrecursion.hoplon.span.call(null,G__323556,G__323557));
})();
var G__323527 = " ";
var G__323528 = (function (){var G__323558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323559 = "a1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323558,G__323559) : tailrecursion.hoplon.span.call(null,G__323558,G__323559));
})();
var G__323529 = " ";
var G__323530 = (function (){var G__323560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323561 = "a2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323560,G__323561) : tailrecursion.hoplon.span.call(null,G__323560,G__323561));
})();
var G__323531 = "))\n(";
var G__323532 = (function (){var G__323562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__323563 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323562,G__323563) : tailrecursion.hoplon.span.call(null,G__323562,G__323563));
})();
var G__323533 = (function (){var G__323564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323565 = "make-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323564,G__323565) : tailrecursion.hoplon.span.call(null,G__323564,G__323565));
})();
var G__323534 = " [";
var G__323535 = (function (){var G__323566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323567 = "m1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323566,G__323567) : tailrecursion.hoplon.span.call(null,G__323566,G__323567));
})();
var G__323536 = " ";
var G__323537 = (function (){var G__323568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323569 = "m2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323568,G__323569) : tailrecursion.hoplon.span.call(null,G__323568,G__323569));
})();
var G__323538 = "]\n  (";
var G__323539 = (function (){var G__323570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323571 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323570,G__323571) : tailrecursion.hoplon.span.call(null,G__323570,G__323571));
})();
var G__323540 = (function (){var G__323572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323573 = "'*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323572,G__323573) : tailrecursion.hoplon.span.call(null,G__323572,G__323573));
})();
var G__323541 = " ";
var G__323542 = (function (){var G__323574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323575 = "m1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323574,G__323575) : tailrecursion.hoplon.span.call(null,G__323574,G__323575));
})();
var G__323543 = " ";
var G__323544 = (function (){var G__323576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323577 = "m2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323576,G__323577) : tailrecursion.hoplon.span.call(null,G__323576,G__323577));
})();
var G__323545 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30(G__323516,G__323517,G__323518,G__323519,G__323520,G__323521,G__323522,G__323523,G__323524,G__323525,G__323526,G__323527,G__323528,G__323529,G__323530,G__323531,G__323532,G__323533,G__323534,G__323535,G__323536,G__323537,G__323538,G__323539,G__323540,G__323541,G__323542,G__323543,G__323544,G__323545) : tailrecursion.hoplon.pre.call(null,G__323516,G__323517,G__323518,G__323519,G__323520,G__323521,G__323522,G__323523,G__323524,G__323525,G__323526,G__323527,G__323528,G__323529,G__323530,G__323531,G__323532,G__323533,G__323534,G__323535,G__323536,G__323537,G__323538,G__323539,G__323540,G__323541,G__323542,G__323543,G__323544,G__323545));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__323514,G__323515) : tailrecursion.hoplon.div.call(null,G__323514,G__323515));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__323513) : tailrecursion.hoplon.div.call(null,G__323513));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323446;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323445;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323444;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323443;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__323441,G__323442) : tailrecursion.hoplon.li.call(null,G__323441,G__323442));
})();
var G__323262 = "";
var G__323263 = (function (){var G__323578 = cljs.core.PersistentArrayMap.EMPTY;
var G__323579 = (function (){var _STAR_references_STAR_323580 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323581 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323582 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323583 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323584 = cljs.core.PersistentArrayMap.EMPTY;
var G__323585 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A sum is a list whose first element is the symbol ",(function (){var G__323586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"+"], null);
var G__323587 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__323586,G__323587) : tailrecursion.hoplon.markdown.code_node.call(null,G__323586,G__323587));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323584,G__323585) : tailrecursion.hoplon.markdown.para_node.call(null,G__323584,G__323585));
})(),(function (){var G__323629 = (function (){var G__323630 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__323631 = (function (){var G__323632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__323633 = "(";
var G__323634 = (function (){var G__323651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__323652 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323651,G__323652) : tailrecursion.hoplon.span.call(null,G__323651,G__323652));
})();
var G__323635 = (function (){var G__323653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323654 = "sum?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323653,G__323654) : tailrecursion.hoplon.span.call(null,G__323653,G__323654));
})();
var G__323636 = " [";
var G__323637 = (function (){var G__323655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323656 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323655,G__323656) : tailrecursion.hoplon.span.call(null,G__323655,G__323656));
})();
var G__323638 = "]\n  (";
var G__323639 = (function (){var G__323657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323658 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323657,G__323658) : tailrecursion.hoplon.span.call(null,G__323657,G__323658));
})();
var G__323640 = "(";
var G__323641 = (function (){var G__323659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323660 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323659,G__323660) : tailrecursion.hoplon.span.call(null,G__323659,G__323660));
})();
var G__323642 = (function (){var G__323661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323662 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323661,G__323662) : tailrecursion.hoplon.span.call(null,G__323661,G__323662));
})();
var G__323643 = ")\n       (";
var G__323644 = (function (){var G__323663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323664 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323663,G__323664) : tailrecursion.hoplon.span.call(null,G__323663,G__323664));
})();
var G__323645 = "(";
var G__323646 = (function (){var G__323665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323666 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323665,G__323666) : tailrecursion.hoplon.span.call(null,G__323665,G__323666));
})();
var G__323647 = (function (){var G__323667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323668 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323667,G__323668) : tailrecursion.hoplon.span.call(null,G__323667,G__323668));
})();
var G__323648 = ") ";
var G__323649 = (function (){var G__323669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323670 = "'+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323669,G__323670) : tailrecursion.hoplon.span.call(null,G__323669,G__323670));
})();
var G__323650 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__323632,G__323633,G__323634,G__323635,G__323636,G__323637,G__323638,G__323639,G__323640,G__323641,G__323642,G__323643,G__323644,G__323645,G__323646,G__323647,G__323648,G__323649,G__323650) : tailrecursion.hoplon.pre.call(null,G__323632,G__323633,G__323634,G__323635,G__323636,G__323637,G__323638,G__323639,G__323640,G__323641,G__323642,G__323643,G__323644,G__323645,G__323646,G__323647,G__323648,G__323649,G__323650));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__323630,G__323631) : tailrecursion.hoplon.div.call(null,G__323630,G__323631));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__323629) : tailrecursion.hoplon.div.call(null,G__323629));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323583;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323582;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323581;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323580;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__323578,G__323579) : tailrecursion.hoplon.li.call(null,G__323578,G__323579));
})();
var G__323264 = "";
var G__323265 = (function (){var G__323671 = cljs.core.PersistentArrayMap.EMPTY;
var G__323672 = (function (){var _STAR_references_STAR_323673 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323674 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323675 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323676 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323677 = cljs.core.PersistentArrayMap.EMPTY;
var G__323678 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The addend is the second term of the sum list:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323677,G__323678) : tailrecursion.hoplon.markdown.para_node.call(null,G__323677,G__323678));
})(),(function (){var G__323701 = (function (){var G__323702 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__323703 = (function (){var G__323704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__323705 = "(";
var G__323706 = (function (){var G__323714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__323715 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323714,G__323715) : tailrecursion.hoplon.span.call(null,G__323714,G__323715));
})();
var G__323707 = (function (){var G__323716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323717 = "addend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323716,G__323717) : tailrecursion.hoplon.span.call(null,G__323716,G__323717));
})();
var G__323708 = " [";
var G__323709 = (function (){var G__323718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323719 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323718,G__323719) : tailrecursion.hoplon.span.call(null,G__323718,G__323719));
})();
var G__323710 = "]\n  (";
var G__323711 = (function (){var G__323720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323721 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323720,G__323721) : tailrecursion.hoplon.span.call(null,G__323720,G__323721));
})();
var G__323712 = (function (){var G__323722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323723 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323722,G__323723) : tailrecursion.hoplon.span.call(null,G__323722,G__323723));
})();
var G__323713 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10(G__323704,G__323705,G__323706,G__323707,G__323708,G__323709,G__323710,G__323711,G__323712,G__323713) : tailrecursion.hoplon.pre.call(null,G__323704,G__323705,G__323706,G__323707,G__323708,G__323709,G__323710,G__323711,G__323712,G__323713));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__323702,G__323703) : tailrecursion.hoplon.div.call(null,G__323702,G__323703));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__323701) : tailrecursion.hoplon.div.call(null,G__323701));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323676;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323675;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323674;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323673;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__323671,G__323672) : tailrecursion.hoplon.li.call(null,G__323671,G__323672));
})();
var G__323266 = "";
var G__323267 = (function (){var G__323724 = cljs.core.PersistentArrayMap.EMPTY;
var G__323725 = (function (){var _STAR_references_STAR_323726 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323727 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323728 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323729 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323730 = cljs.core.PersistentArrayMap.EMPTY;
var G__323731 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The augend is the third term of the sum list:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323730,G__323731) : tailrecursion.hoplon.markdown.para_node.call(null,G__323730,G__323731));
})(),(function (){var G__323758 = (function (){var G__323759 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__323760 = (function (){var G__323761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__323762 = "(";
var G__323763 = (function (){var G__323773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__323774 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323773,G__323774) : tailrecursion.hoplon.span.call(null,G__323773,G__323774));
})();
var G__323764 = (function (){var G__323775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323776 = "augend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323775,G__323776) : tailrecursion.hoplon.span.call(null,G__323775,G__323776));
})();
var G__323765 = " [";
var G__323766 = (function (){var G__323777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323778 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323777,G__323778) : tailrecursion.hoplon.span.call(null,G__323777,G__323778));
})();
var G__323767 = "]\n  (";
var G__323768 = (function (){var G__323779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323780 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323779,G__323780) : tailrecursion.hoplon.span.call(null,G__323779,G__323780));
})();
var G__323769 = (function (){var G__323781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323782 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323781,G__323782) : tailrecursion.hoplon.span.call(null,G__323781,G__323782));
})();
var G__323770 = " ";
var G__323771 = (function (){var G__323783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__323784 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323783,G__323784) : tailrecursion.hoplon.span.call(null,G__323783,G__323784));
})();
var G__323772 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12(G__323761,G__323762,G__323763,G__323764,G__323765,G__323766,G__323767,G__323768,G__323769,G__323770,G__323771,G__323772) : tailrecursion.hoplon.pre.call(null,G__323761,G__323762,G__323763,G__323764,G__323765,G__323766,G__323767,G__323768,G__323769,G__323770,G__323771,G__323772));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__323759,G__323760) : tailrecursion.hoplon.div.call(null,G__323759,G__323760));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__323758) : tailrecursion.hoplon.div.call(null,G__323758));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323729;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323728;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323727;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323726;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__323724,G__323725) : tailrecursion.hoplon.li.call(null,G__323724,G__323725));
})();
var G__323268 = "";
var G__323269 = (function (){var G__323785 = cljs.core.PersistentArrayMap.EMPTY;
var G__323786 = (function (){var _STAR_references_STAR_323787 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323788 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323789 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323790 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323791 = cljs.core.PersistentArrayMap.EMPTY;
var G__323792 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A product is a list whose first element is the symbol ",(function (){var G__323793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"*"], null);
var G__323794 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__323793,G__323794) : tailrecursion.hoplon.markdown.code_node.call(null,G__323793,G__323794));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323791,G__323792) : tailrecursion.hoplon.markdown.para_node.call(null,G__323791,G__323792));
})(),(function (){var G__323836 = (function (){var G__323837 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__323838 = (function (){var G__323839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__323840 = "(";
var G__323841 = (function (){var G__323858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__323859 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323858,G__323859) : tailrecursion.hoplon.span.call(null,G__323858,G__323859));
})();
var G__323842 = (function (){var G__323860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323861 = "product?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323860,G__323861) : tailrecursion.hoplon.span.call(null,G__323860,G__323861));
})();
var G__323843 = " [";
var G__323844 = (function (){var G__323862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323863 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323862,G__323863) : tailrecursion.hoplon.span.call(null,G__323862,G__323863));
})();
var G__323845 = "]\n  (";
var G__323846 = (function (){var G__323864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323865 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323864,G__323865) : tailrecursion.hoplon.span.call(null,G__323864,G__323865));
})();
var G__323847 = "(";
var G__323848 = (function (){var G__323866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323867 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323866,G__323867) : tailrecursion.hoplon.span.call(null,G__323866,G__323867));
})();
var G__323849 = (function (){var G__323868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323869 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323868,G__323869) : tailrecursion.hoplon.span.call(null,G__323868,G__323869));
})();
var G__323850 = ")\n       (";
var G__323851 = (function (){var G__323870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323871 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323870,G__323871) : tailrecursion.hoplon.span.call(null,G__323870,G__323871));
})();
var G__323852 = "(";
var G__323853 = (function (){var G__323872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323873 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323872,G__323873) : tailrecursion.hoplon.span.call(null,G__323872,G__323873));
})();
var G__323854 = (function (){var G__323874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323875 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323874,G__323875) : tailrecursion.hoplon.span.call(null,G__323874,G__323875));
})();
var G__323855 = ") ";
var G__323856 = (function (){var G__323876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323877 = "'*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323876,G__323877) : tailrecursion.hoplon.span.call(null,G__323876,G__323877));
})();
var G__323857 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__323839,G__323840,G__323841,G__323842,G__323843,G__323844,G__323845,G__323846,G__323847,G__323848,G__323849,G__323850,G__323851,G__323852,G__323853,G__323854,G__323855,G__323856,G__323857) : tailrecursion.hoplon.pre.call(null,G__323839,G__323840,G__323841,G__323842,G__323843,G__323844,G__323845,G__323846,G__323847,G__323848,G__323849,G__323850,G__323851,G__323852,G__323853,G__323854,G__323855,G__323856,G__323857));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__323837,G__323838) : tailrecursion.hoplon.div.call(null,G__323837,G__323838));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__323836) : tailrecursion.hoplon.div.call(null,G__323836));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323790;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323789;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323788;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323787;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__323785,G__323786) : tailrecursion.hoplon.li.call(null,G__323785,G__323786));
})();
var G__323270 = "";
var G__323271 = (function (){var G__323878 = cljs.core.PersistentArrayMap.EMPTY;
var G__323879 = (function (){var _STAR_references_STAR_323880 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323881 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323882 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323883 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323884 = cljs.core.PersistentArrayMap.EMPTY;
var G__323885 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The multiplier is the second item of the product list:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323884,G__323885) : tailrecursion.hoplon.markdown.para_node.call(null,G__323884,G__323885));
})(),(function (){var G__323908 = (function (){var G__323909 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__323910 = (function (){var G__323911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__323912 = "(";
var G__323913 = (function (){var G__323921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__323922 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323921,G__323922) : tailrecursion.hoplon.span.call(null,G__323921,G__323922));
})();
var G__323914 = (function (){var G__323923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323924 = "multiplier";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323923,G__323924) : tailrecursion.hoplon.span.call(null,G__323923,G__323924));
})();
var G__323915 = " [";
var G__323916 = (function (){var G__323925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323926 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323925,G__323926) : tailrecursion.hoplon.span.call(null,G__323925,G__323926));
})();
var G__323917 = "]\n  (";
var G__323918 = (function (){var G__323927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323928 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323927,G__323928) : tailrecursion.hoplon.span.call(null,G__323927,G__323928));
})();
var G__323919 = (function (){var G__323929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323930 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323929,G__323930) : tailrecursion.hoplon.span.call(null,G__323929,G__323930));
})();
var G__323920 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10(G__323911,G__323912,G__323913,G__323914,G__323915,G__323916,G__323917,G__323918,G__323919,G__323920) : tailrecursion.hoplon.pre.call(null,G__323911,G__323912,G__323913,G__323914,G__323915,G__323916,G__323917,G__323918,G__323919,G__323920));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__323909,G__323910) : tailrecursion.hoplon.div.call(null,G__323909,G__323910));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__323908) : tailrecursion.hoplon.div.call(null,G__323908));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323883;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323882;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323881;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323880;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__323878,G__323879) : tailrecursion.hoplon.li.call(null,G__323878,G__323879));
})();
var G__323272 = "";
var G__323273 = (function (){var G__323931 = cljs.core.PersistentArrayMap.EMPTY;
var G__323932 = (function (){var _STAR_references_STAR_323933 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323934 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323935 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323936 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323937 = cljs.core.PersistentArrayMap.EMPTY;
var G__323938 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The multiplicand is the third item of the product list:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323937,G__323938) : tailrecursion.hoplon.markdown.para_node.call(null,G__323937,G__323938));
})(),(function (){var G__323965 = (function (){var G__323966 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__323967 = (function (){var G__323968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__323969 = "(";
var G__323970 = (function (){var G__323980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__323981 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323980,G__323981) : tailrecursion.hoplon.span.call(null,G__323980,G__323981));
})();
var G__323971 = (function (){var G__323982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323983 = "multiplicand";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323982,G__323983) : tailrecursion.hoplon.span.call(null,G__323982,G__323983));
})();
var G__323972 = " [";
var G__323973 = (function (){var G__323984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323985 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323984,G__323985) : tailrecursion.hoplon.span.call(null,G__323984,G__323985));
})();
var G__323974 = "]\n  (";
var G__323975 = (function (){var G__323986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__323987 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323986,G__323987) : tailrecursion.hoplon.span.call(null,G__323986,G__323987));
})();
var G__323976 = (function (){var G__323988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__323989 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323988,G__323989) : tailrecursion.hoplon.span.call(null,G__323988,G__323989));
})();
var G__323977 = " ";
var G__323978 = (function (){var G__323990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__323991 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__323990,G__323991) : tailrecursion.hoplon.span.call(null,G__323990,G__323991));
})();
var G__323979 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12(G__323968,G__323969,G__323970,G__323971,G__323972,G__323973,G__323974,G__323975,G__323976,G__323977,G__323978,G__323979) : tailrecursion.hoplon.pre.call(null,G__323968,G__323969,G__323970,G__323971,G__323972,G__323973,G__323974,G__323975,G__323976,G__323977,G__323978,G__323979));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__323966,G__323967) : tailrecursion.hoplon.div.call(null,G__323966,G__323967));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__323965) : tailrecursion.hoplon.div.call(null,G__323965));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323936;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323935;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323934;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323933;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__323931,G__323932) : tailrecursion.hoplon.li.call(null,G__323931,G__323932));
})();
var G__323274 = "\nThus, we need only combine these with the algorithm as embodied by\n`deriv` in order to have a working symbolic differentiation program.\nLet us look at some examples of its behavior:\n\n```clj\n(deriv '(+ x 3) 'x)\n=> (+ 1 0)\n\n(deriv '(* x y) 'x)\n=> (+ (* x 0) (* 1 y))\n\n(deriv '(* (* x y) (+ x 3)) 'x)\n=> (+ (* (* x y) (+ 1 0))\n      (* (+ (* x 0) (* 1 y))\n         (+ x 3)))\n```\n\nThe program produces answers that are correct; however, they are\nunsimplified. It is true that\n\n$$\\frac{d(xy)}{dx}=x*0+1*y$$\n\nbut we would like the program to know that \\\\(x\\cdot0=0\\\\), \\\\(1\\cdot\ny=y\\\\), and \\\\(0+y=y\\\\). The answer for the second example should have\nbeen simply, \\\\(y\\\\). As the third example shows, this becomes a\nserious issue when the expressions are complex.\n\nOur difficulty is much like the one we encountered with the\nrational-number implementation: we haven't reduced answers to simplest\nform. To accomplish the rational-number reduction, we needed to change\nonly the constructors and the selectors of the implementation. We can\nadopt a similar strategy here. We won't change `deriv` at all.\nInstead, we will change `make-sum` so that if both summands are\nnumbers, `make-sum` will add them and return their sum. Also, if one of\nthe summands is 0, then `make-sum` will return the other summand.\n\n```clj\n(defn make-sum [a1 a2]\n  (cond (= a1 0) a2\n        (= a2 0) a1\n        (and (number? a1)\n             (number? a2)) (+ a1 a2)\n        :else (list '+ a1 a2)))\n```\n\nThis uses the procedure `=`, which, returns `true` if and only if the\ntwo arguments are of the same type and value. Since `0` is a number,\n`(= a1 0)` implies that `a1` must be a number as well. In the original\nSICP, they used a function `=number?` to accomplish this task. We do\nnot need this in Clojure.\n\nSimilarly, we will change `make-product` to build in the rules that 0\ntimes anything is 0 and 1 times anything is the thing itself:\n\n```clj\n(defn make-product [m1 m2]\n  (cond (or (= m1 0)\n            (= m2 0)) 0\n        (= m1 1) m2\n        (= m2 1) m1\n        (and (number? m1)\n             (number? m2)) (* m1 m2)\n        :else (list '* m1 m2)))\n```\n\nHere is how this version works on our three examples:\n\n```clj\n(deriv '(+ x 3) 'x)\n=> 1\n\n(deriv '(* x y) 'x)\n=> y\n\n(deriv '(* (* x y) (+ x 3)) 'x)\n=> (+ (* x y) (* y (+ x 3)))\n```\n\nAlthough this is quite an improvement, the third example shows that\nthere is still a long way to go before we get a program that puts\nexpressions into a form that we might agree is \"simplest.\" The problem\nof algebraic simplification is complex because, among other reasons, a\nform that may be simplest for one purpose may not be for another.";
return (tailrecursion.hoplon.ul.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.ul.cljs$core$IFn$_invoke$arity$19(G__323256,G__323257,G__323258,G__323259,G__323260,G__323261,G__323262,G__323263,G__323264,G__323265,G__323266,G__323267,G__323268,G__323269,G__323270,G__323271,G__323272,G__323273,G__323274) : tailrecursion.hoplon.ul.call(null,G__323256,G__323257,G__323258,G__323259,G__323260,G__323261,G__323262,G__323263,G__323264,G__323265,G__323266,G__323267,G__323268,G__323269,G__323270,G__323271,G__323272,G__323273,G__323274));
})()], 0));
var G__319881 = "";
var G__319882 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_323992 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323993 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_323994 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_323995 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__323996 = cljs.core.PersistentArrayMap.EMPTY;
var G__323997 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Show how to extend the basic differentiator to handle more kinds of expressions. For instance, implement the differentiation rule"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323996,G__323997) : tailrecursion.hoplon.markdown.para_node.call(null,G__323996,G__323997));
})(),(function (){var G__323998 = cljs.core.PersistentArrayMap.EMPTY;
var G__323999 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{d(u^n)}{dx}=nu^{n-1}\\left(\\frac{du}{dx}\\right)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__323998,G__323999) : tailrecursion.hoplon.markdown.para_node.call(null,G__323998,G__323999));
})(),(function (){var G__324000 = cljs.core.PersistentArrayMap.EMPTY;
var G__324001 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["by adding a new clause to the ",(function (){var G__324002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"deriv"], null);
var G__324003 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324002,G__324003) : tailrecursion.hoplon.markdown.code_node.call(null,G__324002,G__324003));
})()," program and defining appropriate procedures ",(function (){var G__324004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"exponentiation?"], null);
var G__324005 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324004,G__324005) : tailrecursion.hoplon.markdown.code_node.call(null,G__324004,G__324005));
})(),", ",(function (){var G__324006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"base"], null);
var G__324007 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324006,G__324007) : tailrecursion.hoplon.markdown.code_node.call(null,G__324006,G__324007));
})(),", ",(function (){var G__324008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"exponent"], null);
var G__324009 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324008,G__324009) : tailrecursion.hoplon.markdown.code_node.call(null,G__324008,G__324009));
})()," and ",(function (){var G__324010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-exponentiation"], null);
var G__324011 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324010,G__324011) : tailrecursion.hoplon.markdown.code_node.call(null,G__324010,G__324011));
})(),". (You may use the symbol ",(function (){var G__324012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"**"], null);
var G__324013 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324012,G__324013) : tailrecursion.hoplon.markdown.code_node.call(null,G__324012,G__324013));
})()," to denote exponentiation.) Build in the rules that anything raised to the power 0 is 1, and anything raised to the power 1 is the thing itself."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__324000,G__324001) : tailrecursion.hoplon.markdown.para_node.call(null,G__324000,G__324001));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323995;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323994;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_323993;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_323992;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_324014 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_324015 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_324016 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_324017 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__324018 = cljs.core.PersistentArrayMap.EMPTY;
var G__324019 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We must add the following clause to the definition of ",(function (){var G__324020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(deriv exp\nvar)"], null);
var G__324021 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324020,G__324021) : tailrecursion.hoplon.markdown.code_node.call(null,G__324020,G__324021));
})(),", where ",(function (){var G__324022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"exp"], null);
var G__324023 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324022,G__324023) : tailrecursion.hoplon.markdown.code_node.call(null,G__324022,G__324023));
})()," refers to the expression, and ",(function (){var G__324024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"var"], null);
var G__324025 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324024,G__324025) : tailrecursion.hoplon.markdown.code_node.call(null,G__324024,G__324025));
})()," refers to the variable with which we are differentiating."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__324018,G__324019) : tailrecursion.hoplon.markdown.para_node.call(null,G__324018,G__324019));
})(),(function (){var G__324097 = (function (){var G__324098 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__324099 = (function (){var G__324100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__324101 = "(";
var G__324102 = (function (){var G__324135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324136 = "exponentiation?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324135,G__324136) : tailrecursion.hoplon.span.call(null,G__324135,G__324136));
})();
var G__324103 = " ";
var G__324104 = (function (){var G__324137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324138 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324137,G__324138) : tailrecursion.hoplon.span.call(null,G__324137,G__324138));
})();
var G__324105 = ")\n(";
var G__324106 = (function (){var G__324139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324140 = "make-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324139,G__324140) : tailrecursion.hoplon.span.call(null,G__324139,G__324140));
})();
var G__324107 = " \n  (";
var G__324108 = (function (){var G__324141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324142 = "make-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324141,G__324142) : tailrecursion.hoplon.span.call(null,G__324141,G__324142));
})();
var G__324109 = " \n    (";
var G__324110 = (function (){var G__324143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324144 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324143,G__324144) : tailrecursion.hoplon.span.call(null,G__324143,G__324144));
})();
var G__324111 = " ";
var G__324112 = (function (){var G__324145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324146 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324145,G__324146) : tailrecursion.hoplon.span.call(null,G__324145,G__324146));
})();
var G__324113 = ")\n    (";
var G__324114 = (function (){var G__324147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324148 = "make-exponentiation";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324147,G__324148) : tailrecursion.hoplon.span.call(null,G__324147,G__324148));
})();
var G__324115 = " \n      (";
var G__324116 = (function (){var G__324149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324150 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324149,G__324150) : tailrecursion.hoplon.span.call(null,G__324149,G__324150));
})();
var G__324117 = " ";
var G__324118 = (function (){var G__324151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324152 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324151,G__324152) : tailrecursion.hoplon.span.call(null,G__324151,G__324152));
})();
var G__324119 = ") \n      (";
var G__324120 = (function (){var G__324153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324154 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324153,G__324154) : tailrecursion.hoplon.span.call(null,G__324153,G__324154));
})();
var G__324121 = " (";
var G__324122 = (function (){var G__324155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324156 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324155,G__324156) : tailrecursion.hoplon.span.call(null,G__324155,G__324156));
})();
var G__324123 = (function (){var G__324157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324158 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324157,G__324158) : tailrecursion.hoplon.span.call(null,G__324157,G__324158));
})();
var G__324124 = " ";
var G__324125 = (function (){var G__324159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__324160 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324159,G__324160) : tailrecursion.hoplon.span.call(null,G__324159,G__324160));
})();
var G__324126 = "))))\n  (";
var G__324127 = (function (){var G__324161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324162 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324161,G__324162) : tailrecursion.hoplon.span.call(null,G__324161,G__324162));
})();
var G__324128 = " (";
var G__324129 = (function (){var G__324163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324164 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324163,G__324164) : tailrecursion.hoplon.span.call(null,G__324163,G__324164));
})();
var G__324130 = " ";
var G__324131 = (function (){var G__324165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324166 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324165,G__324166) : tailrecursion.hoplon.span.call(null,G__324165,G__324166));
})();
var G__324132 = ") ";
var G__324133 = (function (){var G__324167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324168 = "var";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324167,G__324168) : tailrecursion.hoplon.span.call(null,G__324167,G__324168));
})();
var G__324134 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35(G__324100,G__324101,G__324102,G__324103,G__324104,G__324105,G__324106,G__324107,G__324108,G__324109,G__324110,G__324111,G__324112,G__324113,G__324114,G__324115,G__324116,G__324117,G__324118,G__324119,G__324120,G__324121,G__324122,G__324123,G__324124,G__324125,G__324126,G__324127,G__324128,G__324129,G__324130,G__324131,G__324132,G__324133,G__324134) : tailrecursion.hoplon.pre.call(null,G__324100,G__324101,G__324102,G__324103,G__324104,G__324105,G__324106,G__324107,G__324108,G__324109,G__324110,G__324111,G__324112,G__324113,G__324114,G__324115,G__324116,G__324117,G__324118,G__324119,G__324120,G__324121,G__324122,G__324123,G__324124,G__324125,G__324126,G__324127,G__324128,G__324129,G__324130,G__324131,G__324132,G__324133,G__324134));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__324098,G__324099) : tailrecursion.hoplon.div.call(null,G__324098,G__324099));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__324097) : tailrecursion.hoplon.div.call(null,G__324097));
})(),(function (){var G__324269 = (function (){var G__324270 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__324271 = (function (){var G__324272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__324273 = "(";
var G__324274 = (function (){var G__324318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__324319 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324318,G__324319) : tailrecursion.hoplon.span.call(null,G__324318,G__324319));
})();
var G__324275 = (function (){var G__324320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324321 = "exponentiation?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324320,G__324321) : tailrecursion.hoplon.span.call(null,G__324320,G__324321));
})();
var G__324276 = " [";
var G__324277 = (function (){var G__324322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324323 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324322,G__324323) : tailrecursion.hoplon.span.call(null,G__324322,G__324323));
})();
var G__324278 = "]\n  (";
var G__324279 = (function (){var G__324324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324325 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324324,G__324325) : tailrecursion.hoplon.span.call(null,G__324324,G__324325));
})();
var G__324280 = "(";
var G__324281 = (function (){var G__324326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324327 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324326,G__324327) : tailrecursion.hoplon.span.call(null,G__324326,G__324327));
})();
var G__324282 = (function (){var G__324328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324329 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324328,G__324329) : tailrecursion.hoplon.span.call(null,G__324328,G__324329));
})();
var G__324283 = ") ";
var G__324284 = (function (){var G__324330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324331 = "'**";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324330,G__324331) : tailrecursion.hoplon.span.call(null,G__324330,G__324331));
})();
var G__324285 = "))\n\n(";
var G__324286 = (function (){var G__324332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__324333 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324332,G__324333) : tailrecursion.hoplon.span.call(null,G__324332,G__324333));
})();
var G__324287 = (function (){var G__324334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324335 = "make-exponentiation";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324334,G__324335) : tailrecursion.hoplon.span.call(null,G__324334,G__324335));
})();
var G__324288 = " [";
var G__324289 = (function (){var G__324336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324337 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324336,G__324337) : tailrecursion.hoplon.span.call(null,G__324336,G__324337));
})();
var G__324290 = " ";
var G__324291 = (function (){var G__324338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324339 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324338,G__324339) : tailrecursion.hoplon.span.call(null,G__324338,G__324339));
})();
var G__324292 = "]\n  (";
var G__324293 = (function (){var G__324340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324341 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324340,G__324341) : tailrecursion.hoplon.span.call(null,G__324340,G__324341));
})();
var G__324294 = (function (){var G__324342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324343 = "'**";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324342,G__324343) : tailrecursion.hoplon.span.call(null,G__324342,G__324343));
})();
var G__324295 = " ";
var G__324296 = (function (){var G__324344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324345 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324344,G__324345) : tailrecursion.hoplon.span.call(null,G__324344,G__324345));
})();
var G__324297 = " ";
var G__324298 = (function (){var G__324346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324347 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324346,G__324347) : tailrecursion.hoplon.span.call(null,G__324346,G__324347));
})();
var G__324299 = "))\n\n(";
var G__324300 = (function (){var G__324348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__324349 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324348,G__324349) : tailrecursion.hoplon.span.call(null,G__324348,G__324349));
})();
var G__324301 = (function (){var G__324350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324351 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324350,G__324351) : tailrecursion.hoplon.span.call(null,G__324350,G__324351));
})();
var G__324302 = " [";
var G__324303 = (function (){var G__324352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324353 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324352,G__324353) : tailrecursion.hoplon.span.call(null,G__324352,G__324353));
})();
var G__324304 = "]\n  (";
var G__324305 = (function (){var G__324354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324355 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324354,G__324355) : tailrecursion.hoplon.span.call(null,G__324354,G__324355));
})();
var G__324306 = (function (){var G__324356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324357 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324356,G__324357) : tailrecursion.hoplon.span.call(null,G__324356,G__324357));
})();
var G__324307 = "))\n\n(";
var G__324308 = (function (){var G__324358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__324359 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324358,G__324359) : tailrecursion.hoplon.span.call(null,G__324358,G__324359));
})();
var G__324309 = (function (){var G__324360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324361 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324360,G__324361) : tailrecursion.hoplon.span.call(null,G__324360,G__324361));
})();
var G__324310 = " [";
var G__324311 = (function (){var G__324362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324363 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324362,G__324363) : tailrecursion.hoplon.span.call(null,G__324362,G__324363));
})();
var G__324312 = "]\n  (";
var G__324313 = (function (){var G__324364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324365 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324364,G__324365) : tailrecursion.hoplon.span.call(null,G__324364,G__324365));
})();
var G__324314 = (function (){var G__324366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324367 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324366,G__324367) : tailrecursion.hoplon.span.call(null,G__324366,G__324367));
})();
var G__324315 = " ";
var G__324316 = (function (){var G__324368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__324369 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324368,G__324369) : tailrecursion.hoplon.span.call(null,G__324368,G__324369));
})();
var G__324317 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__324272,G__324273,G__324274,G__324275,G__324276,G__324277,G__324278,G__324279,G__324280,G__324281,G__324282,G__324283,G__324284,G__324285,G__324286,G__324287,G__324288,G__324289,G__324290,G__324291,G__324292,G__324293,G__324294,G__324295,G__324296,G__324297,G__324298,G__324299,G__324300,G__324301,G__324302,G__324303,G__324304,G__324305,G__324306,G__324307,G__324308,G__324309,G__324310,G__324311,G__324312,G__324313,G__324314,G__324315,G__324316,G__324317) : tailrecursion.hoplon.pre.call(null,G__324272,G__324273,G__324274,G__324275,G__324276,G__324277,G__324278,G__324279,G__324280,G__324281,G__324282,G__324283,G__324284,G__324285,G__324286,G__324287,G__324288,G__324289,G__324290,G__324291,G__324292,G__324293,G__324294,G__324295,G__324296,G__324297,G__324298,G__324299,G__324300,G__324301,G__324302,G__324303,G__324304,G__324305,G__324306,G__324307,G__324308,G__324309,G__324310,G__324311,G__324312,G__324313,G__324314,G__324315,G__324316,G__324317));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__324270,G__324271) : tailrecursion.hoplon.div.call(null,G__324270,G__324271));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__324269) : tailrecursion.hoplon.div.call(null,G__324269));
})(),(function (){var G__324370 = cljs.core.PersistentArrayMap.EMPTY;
var G__324371 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["But then we realize that we would like to include the simplification rules, so"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__324370,G__324371) : tailrecursion.hoplon.markdown.para_node.call(null,G__324370,G__324371));
})(),(function (){var G__324476 = (function (){var G__324477 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__324478 = (function (){var G__324479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__324480 = "(";
var G__324481 = (function (){var G__324529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__324530 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324529,G__324530) : tailrecursion.hoplon.span.call(null,G__324529,G__324530));
})();
var G__324482 = (function (){var G__324531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324532 = "make-exponentiation";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324531,G__324532) : tailrecursion.hoplon.span.call(null,G__324531,G__324532));
})();
var G__324483 = " [";
var G__324484 = (function (){var G__324533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324534 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324533,G__324534) : tailrecursion.hoplon.span.call(null,G__324533,G__324534));
})();
var G__324485 = " ";
var G__324486 = (function (){var G__324535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324536 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324535,G__324536) : tailrecursion.hoplon.span.call(null,G__324535,G__324536));
})();
var G__324487 = "]\n  (";
var G__324488 = (function (){var G__324537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324538 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324537,G__324538) : tailrecursion.hoplon.span.call(null,G__324537,G__324538));
})();
var G__324489 = "(";
var G__324490 = (function (){var G__324539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324540 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324539,G__324540) : tailrecursion.hoplon.span.call(null,G__324539,G__324540));
})();
var G__324491 = "(";
var G__324492 = (function (){var G__324541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324542 = "number?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324541,G__324542) : tailrecursion.hoplon.span.call(null,G__324541,G__324542));
})();
var G__324493 = " ";
var G__324494 = (function (){var G__324543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324544 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324543,G__324544) : tailrecursion.hoplon.span.call(null,G__324543,G__324544));
})();
var G__324495 = ")\n             (";
var G__324496 = (function (){var G__324545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324546 = "number?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324545,G__324546) : tailrecursion.hoplon.span.call(null,G__324545,G__324546));
})();
var G__324497 = " ";
var G__324498 = (function (){var G__324547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324548 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324547,G__324548) : tailrecursion.hoplon.span.call(null,G__324547,G__324548));
})();
var G__324499 = ")) (";
var G__324500 = (function (){var G__324549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324550 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324549,G__324550) : tailrecursion.hoplon.span.call(null,G__324549,G__324550));
})();
var G__324501 = " ";
var G__324502 = (function (){var G__324551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324552 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324551,G__324552) : tailrecursion.hoplon.span.call(null,G__324551,G__324552));
})();
var G__324503 = " ";
var G__324504 = (function (){var G__324553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324554 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324553,G__324554) : tailrecursion.hoplon.span.call(null,G__324553,G__324554));
})();
var G__324505 = ")\n        (";
var G__324506 = (function (){var G__324555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324556 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324555,G__324556) : tailrecursion.hoplon.span.call(null,G__324555,G__324556));
})();
var G__324507 = (function (){var G__324557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324558 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324557,G__324558) : tailrecursion.hoplon.span.call(null,G__324557,G__324558));
})();
var G__324508 = " ";
var G__324509 = (function (){var G__324559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__324560 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324559,G__324560) : tailrecursion.hoplon.span.call(null,G__324559,G__324560));
})();
var G__324510 = ") ";
var G__324511 = (function (){var G__324561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__324562 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324561,G__324562) : tailrecursion.hoplon.span.call(null,G__324561,G__324562));
})();
var G__324512 = "\n        (";
var G__324513 = (function (){var G__324563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324564 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324563,G__324564) : tailrecursion.hoplon.span.call(null,G__324563,G__324564));
})();
var G__324514 = (function (){var G__324565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324566 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324565,G__324566) : tailrecursion.hoplon.span.call(null,G__324565,G__324566));
})();
var G__324515 = " ";
var G__324516 = (function (){var G__324567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__324568 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324567,G__324568) : tailrecursion.hoplon.span.call(null,G__324567,G__324568));
})();
var G__324517 = ") ";
var G__324518 = (function (){var G__324569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324570 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324569,G__324570) : tailrecursion.hoplon.span.call(null,G__324569,G__324570));
})();
var G__324519 = "\n        ";
var G__324520 = (function (){var G__324571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324572 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324571,G__324572) : tailrecursion.hoplon.span.call(null,G__324571,G__324572));
})();
var G__324521 = " (";
var G__324522 = (function (){var G__324573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324574 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324573,G__324574) : tailrecursion.hoplon.span.call(null,G__324573,G__324574));
})();
var G__324523 = (function (){var G__324575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324576 = "'**";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324575,G__324576) : tailrecursion.hoplon.span.call(null,G__324575,G__324576));
})();
var G__324524 = " ";
var G__324525 = (function (){var G__324577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324578 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324577,G__324578) : tailrecursion.hoplon.span.call(null,G__324577,G__324578));
})();
var G__324526 = " ";
var G__324527 = (function (){var G__324579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324580 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324579,G__324580) : tailrecursion.hoplon.span.call(null,G__324579,G__324580));
})();
var G__324528 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$50 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$50(G__324479,G__324480,G__324481,G__324482,G__324483,G__324484,G__324485,G__324486,G__324487,G__324488,G__324489,G__324490,G__324491,G__324492,G__324493,G__324494,G__324495,G__324496,G__324497,G__324498,G__324499,G__324500,G__324501,G__324502,G__324503,G__324504,G__324505,G__324506,G__324507,G__324508,G__324509,G__324510,G__324511,G__324512,G__324513,G__324514,G__324515,G__324516,G__324517,G__324518,G__324519,G__324520,G__324521,G__324522,G__324523,G__324524,G__324525,G__324526,G__324527,G__324528) : tailrecursion.hoplon.pre.call(null,G__324479,G__324480,G__324481,G__324482,G__324483,G__324484,G__324485,G__324486,G__324487,G__324488,G__324489,G__324490,G__324491,G__324492,G__324493,G__324494,G__324495,G__324496,G__324497,G__324498,G__324499,G__324500,G__324501,G__324502,G__324503,G__324504,G__324505,G__324506,G__324507,G__324508,G__324509,G__324510,G__324511,G__324512,G__324513,G__324514,G__324515,G__324516,G__324517,G__324518,G__324519,G__324520,G__324521,G__324522,G__324523,G__324524,G__324525,G__324526,G__324527,G__324528));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__324477,G__324478) : tailrecursion.hoplon.div.call(null,G__324477,G__324478));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__324476) : tailrecursion.hoplon.div.call(null,G__324476));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_324017;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_324016;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_324015;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_324014;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_324581 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_324582 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_324583 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_324584 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__324585 = cljs.core.PersistentArrayMap.EMPTY;
var G__324586 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Extend the differentiation program to handle sums and products of arbitrary numbers of (two or more) terms. Then the last example above could be expressed as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__324585,G__324586) : tailrecursion.hoplon.markdown.para_node.call(null,G__324585,G__324586));
})(),(function (){var G__324625 = (function (){var G__324626 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__324627 = (function (){var G__324628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__324629 = "(";
var G__324630 = (function (){var G__324646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__324647 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324646,G__324647) : tailrecursion.hoplon.span.call(null,G__324646,G__324647));
})();
var G__324631 = " ";
var G__324632 = (function (){var G__324648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__324649 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324648,G__324649) : tailrecursion.hoplon.span.call(null,G__324648,G__324649));
})();
var G__324633 = "(";
var G__324634 = (function (){var G__324650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324651 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324650,G__324651) : tailrecursion.hoplon.span.call(null,G__324650,G__324651));
})();
var G__324635 = (function (){var G__324652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324653 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324652,G__324653) : tailrecursion.hoplon.span.call(null,G__324652,G__324653));
})();
var G__324636 = " ";
var G__324637 = (function (){var G__324654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324655 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324654,G__324655) : tailrecursion.hoplon.span.call(null,G__324654,G__324655));
})();
var G__324638 = " (";
var G__324639 = (function (){var G__324656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324657 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324656,G__324657) : tailrecursion.hoplon.span.call(null,G__324656,G__324657));
})();
var G__324640 = (function (){var G__324658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324659 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324658,G__324659) : tailrecursion.hoplon.span.call(null,G__324658,G__324659));
})();
var G__324641 = " ";
var G__324642 = (function (){var G__324660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__324661 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324660,G__324661) : tailrecursion.hoplon.span.call(null,G__324660,G__324661));
})();
var G__324643 = ")) ";
var G__324644 = (function (){var G__324662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324663 = "'x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324662,G__324663) : tailrecursion.hoplon.span.call(null,G__324662,G__324663));
})();
var G__324645 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__324628,G__324629,G__324630,G__324631,G__324632,G__324633,G__324634,G__324635,G__324636,G__324637,G__324638,G__324639,G__324640,G__324641,G__324642,G__324643,G__324644,G__324645) : tailrecursion.hoplon.pre.call(null,G__324628,G__324629,G__324630,G__324631,G__324632,G__324633,G__324634,G__324635,G__324636,G__324637,G__324638,G__324639,G__324640,G__324641,G__324642,G__324643,G__324644,G__324645));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__324626,G__324627) : tailrecursion.hoplon.div.call(null,G__324626,G__324627));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__324625) : tailrecursion.hoplon.div.call(null,G__324625));
})(),(function (){var G__324664 = cljs.core.PersistentArrayMap.EMPTY;
var G__324665 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Try to do this by changing only the representation for sums and products without changing the deriv procedure at all. For example, the ",(function (){var G__324666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"addend"], null);
var G__324667 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324666,G__324667) : tailrecursion.hoplon.markdown.code_node.call(null,G__324666,G__324667));
})()," of a sum would be the first term, and the ",(function (){var G__324668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"augend"], null);
var G__324669 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__324668,G__324669) : tailrecursion.hoplon.markdown.code_node.call(null,G__324668,G__324669));
})()," would be the sum of the rest of the terms."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__324664,G__324665) : tailrecursion.hoplon.markdown.para_node.call(null,G__324664,G__324665));
})(),(function (){var G__324670 = cljs.core.PersistentArrayMap.EMPTY;
var G__324671 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To do this, it is best to take advantage of our ability to define functions with mutliple arities."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__324670,G__324671) : tailrecursion.hoplon.markdown.para_node.call(null,G__324670,G__324671));
})(),(function (){var G__324729 = (function (){var G__324730 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__324731 = (function (){var G__324732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__324733 = "(";
var G__324734 = (function (){var G__324759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__324760 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324759,G__324760) : tailrecursion.hoplon.span.call(null,G__324759,G__324760));
})();
var G__324735 = (function (){var G__324761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324762 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324761,G__324762) : tailrecursion.hoplon.span.call(null,G__324761,G__324762));
})();
var G__324736 = "\n  ([";
var G__324737 = (function (){var G__324763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324764 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324763,G__324764) : tailrecursion.hoplon.span.call(null,G__324763,G__324764));
})();
var G__324738 = " ";
var G__324739 = (function (){var G__324765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324766 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324765,G__324766) : tailrecursion.hoplon.span.call(null,G__324765,G__324766));
})();
var G__324740 = "] (";
var G__324741 = (function (){var G__324767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324768 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324767,G__324768) : tailrecursion.hoplon.span.call(null,G__324767,G__324768));
})();
var G__324742 = (function (){var G__324769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324770 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324769,G__324770) : tailrecursion.hoplon.span.call(null,G__324769,G__324770));
})();
var G__324743 = " ";
var G__324744 = (function (){var G__324771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324772 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324771,G__324772) : tailrecursion.hoplon.span.call(null,G__324771,G__324772));
})();
var G__324745 = "))\n  ([";
var G__324746 = (function (){var G__324773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324774 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324773,G__324774) : tailrecursion.hoplon.span.call(null,G__324773,G__324774));
})();
var G__324747 = " ";
var G__324748 = (function (){var G__324775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324776 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324775,G__324776) : tailrecursion.hoplon.span.call(null,G__324775,G__324776));
})();
var G__324749 = " ";
var G__324750 = (function (){var G__324777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324778 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324777,G__324778) : tailrecursion.hoplon.span.call(null,G__324777,G__324778));
})();
var G__324751 = "] (";
var G__324752 = (function (){var G__324779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324780 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324779,G__324780) : tailrecursion.hoplon.span.call(null,G__324779,G__324780));
})();
var G__324753 = (function (){var G__324781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324782 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324781,G__324782) : tailrecursion.hoplon.span.call(null,G__324781,G__324782));
})();
var G__324754 = " ";
var G__324755 = (function (){var G__324783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324784 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324783,G__324784) : tailrecursion.hoplon.span.call(null,G__324783,G__324784));
})();
var G__324756 = " ";
var G__324757 = (function (){var G__324785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324786 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324785,G__324786) : tailrecursion.hoplon.span.call(null,G__324785,G__324786));
})();
var G__324758 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27(G__324732,G__324733,G__324734,G__324735,G__324736,G__324737,G__324738,G__324739,G__324740,G__324741,G__324742,G__324743,G__324744,G__324745,G__324746,G__324747,G__324748,G__324749,G__324750,G__324751,G__324752,G__324753,G__324754,G__324755,G__324756,G__324757,G__324758) : tailrecursion.hoplon.pre.call(null,G__324732,G__324733,G__324734,G__324735,G__324736,G__324737,G__324738,G__324739,G__324740,G__324741,G__324742,G__324743,G__324744,G__324745,G__324746,G__324747,G__324748,G__324749,G__324750,G__324751,G__324752,G__324753,G__324754,G__324755,G__324756,G__324757,G__324758));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__324730,G__324731) : tailrecursion.hoplon.div.call(null,G__324730,G__324731));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__324729) : tailrecursion.hoplon.div.call(null,G__324729));
})(),(function (){var G__324787 = cljs.core.PersistentArrayMap.EMPTY;
var G__324788 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This function will add its arguments if given two arguments, and multiply them if given three."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__324787,G__324788) : tailrecursion.hoplon.markdown.para_node.call(null,G__324787,G__324788));
})(),(function (){var G__324834 = (function (){var G__324835 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__324836 = (function (){var G__324837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__324838 = "(";
var G__324839 = (function (){var G__324858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__324859 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324858,G__324859) : tailrecursion.hoplon.span.call(null,G__324858,G__324859));
})();
var G__324840 = (function (){var G__324860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324861 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324860,G__324861) : tailrecursion.hoplon.span.call(null,G__324860,G__324861));
})();
var G__324841 = " [";
var G__324842 = (function (){var G__324862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324863 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324862,G__324863) : tailrecursion.hoplon.span.call(null,G__324862,G__324863));
})();
var G__324843 = " ";
var G__324844 = (function (){var G__324864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324865 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324864,G__324865) : tailrecursion.hoplon.span.call(null,G__324864,G__324865));
})();
var G__324845 = " ";
var G__324846 = (function (){var G__324866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__324867 = "&";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324866,G__324867) : tailrecursion.hoplon.span.call(null,G__324866,G__324867));
})();
var G__324847 = " ";
var G__324848 = (function (){var G__324868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324869 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324868,G__324869) : tailrecursion.hoplon.span.call(null,G__324868,G__324869));
})();
var G__324849 = "]\n  (";
var G__324850 = (function (){var G__324870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324871 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324870,G__324871) : tailrecursion.hoplon.span.call(null,G__324870,G__324871));
})();
var G__324851 = (function (){var G__324872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324873 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324872,G__324873) : tailrecursion.hoplon.span.call(null,G__324872,G__324873));
})();
var G__324852 = " ";
var G__324853 = (function (){var G__324874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324875 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324874,G__324875) : tailrecursion.hoplon.span.call(null,G__324874,G__324875));
})();
var G__324854 = " (";
var G__324855 = (function (){var G__324876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__324877 = "reduce + ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324876,G__324877) : tailrecursion.hoplon.span.call(null,G__324876,G__324877));
})();
var G__324856 = (function (){var G__324878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__324879 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__324878,G__324879) : tailrecursion.hoplon.span.call(null,G__324878,G__324879));
})();
var G__324857 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21(G__324837,G__324838,G__324839,G__324840,G__324841,G__324842,G__324843,G__324844,G__324845,G__324846,G__324847,G__324848,G__324849,G__324850,G__324851,G__324852,G__324853,G__324854,G__324855,G__324856,G__324857) : tailrecursion.hoplon.pre.call(null,G__324837,G__324838,G__324839,G__324840,G__324841,G__324842,G__324843,G__324844,G__324845,G__324846,G__324847,G__324848,G__324849,G__324850,G__324851,G__324852,G__324853,G__324854,G__324855,G__324856,G__324857));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__324835,G__324836) : tailrecursion.hoplon.div.call(null,G__324835,G__324836));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__324834) : tailrecursion.hoplon.div.call(null,G__324834));
})(),(function (){var G__324880 = cljs.core.PersistentArrayMap.EMPTY;
var G__324881 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This function will add up all arguments after the first two (if there are none, it will return 0 for this part). It then returns the product of that sum and the first two arguments. Play around with this structure for a while to give yourself some familiarity before solving this problem."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__324880,G__324881) : tailrecursion.hoplon.markdown.para_node.call(null,G__324880,G__324881));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_324584;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_324583;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_324582;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_324581;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_324882 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_324883 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_324884 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_324885 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__325129 = (function (){var G__325130 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__325131 = (function (){var G__325132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__325133 = "(";
var G__325134 = (function (){var G__325247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__325248 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325247,G__325248) : tailrecursion.hoplon.span.call(null,G__325247,G__325248));
})();
var G__325135 = (function (){var G__325249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325250 = "sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325249,G__325250) : tailrecursion.hoplon.span.call(null,G__325249,G__325250));
})();
var G__325136 = " [";
var G__325137 = (function (){var G__325251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325252 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325251,G__325252) : tailrecursion.hoplon.span.call(null,G__325251,G__325252));
})();
var G__325138 = "]\n  (";
var G__325139 = (function (){var G__325253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325254 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325253,G__325254) : tailrecursion.hoplon.span.call(null,G__325253,G__325254));
})();
var G__325140 = "(";
var G__325141 = (function (){var G__325255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325256 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325255,G__325256) : tailrecursion.hoplon.span.call(null,G__325255,G__325256));
})();
var G__325142 = (function (){var G__325257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325258 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325257,G__325258) : tailrecursion.hoplon.span.call(null,G__325257,G__325258));
})();
var G__325143 = ") ";
var G__325144 = (function (){var G__325259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325260 = "'+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325259,G__325260) : tailrecursion.hoplon.span.call(null,G__325259,G__325260));
})();
var G__325145 = "))\n\n(";
var G__325146 = (function (){var G__325261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__325262 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325261,G__325262) : tailrecursion.hoplon.span.call(null,G__325261,G__325262));
})();
var G__325147 = (function (){var G__325263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325264 = "addend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325263,G__325264) : tailrecursion.hoplon.span.call(null,G__325263,G__325264));
})();
var G__325148 = " [";
var G__325149 = (function (){var G__325265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325266 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325265,G__325266) : tailrecursion.hoplon.span.call(null,G__325265,G__325266));
})();
var G__325150 = "]\n  (";
var G__325151 = (function (){var G__325267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325268 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325267,G__325268) : tailrecursion.hoplon.span.call(null,G__325267,G__325268));
})();
var G__325152 = (function (){var G__325269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325270 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325269,G__325270) : tailrecursion.hoplon.span.call(null,G__325269,G__325270));
})();
var G__325153 = "))\n\n(";
var G__325154 = (function (){var G__325271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__325272 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325271,G__325272) : tailrecursion.hoplon.span.call(null,G__325271,G__325272));
})();
var G__325155 = (function (){var G__325273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325274 = "augend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325273,G__325274) : tailrecursion.hoplon.span.call(null,G__325273,G__325274));
})();
var G__325156 = " [";
var G__325157 = (function (){var G__325275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325276 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325275,G__325276) : tailrecursion.hoplon.span.call(null,G__325275,G__325276));
})();
var G__325158 = "]\n  (";
var G__325159 = (function (){var G__325277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325278 = "drop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325277,G__325278) : tailrecursion.hoplon.span.call(null,G__325277,G__325278));
})();
var G__325160 = (function (){var G__325279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__325280 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325279,G__325280) : tailrecursion.hoplon.span.call(null,G__325279,G__325280));
})();
var G__325161 = " ";
var G__325162 = (function (){var G__325281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325282 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325281,G__325282) : tailrecursion.hoplon.span.call(null,G__325281,G__325282));
})();
var G__325163 = "))\n\n(";
var G__325164 = (function (){var G__325283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__325284 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325283,G__325284) : tailrecursion.hoplon.span.call(null,G__325283,G__325284));
})();
var G__325165 = (function (){var G__325285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325286 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325285,G__325286) : tailrecursion.hoplon.span.call(null,G__325285,G__325286));
})();
var G__325166 = "\n  ([";
var G__325167 = (function (){var G__325287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325288 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325287,G__325288) : tailrecursion.hoplon.span.call(null,G__325287,G__325288));
})();
var G__325168 = " ";
var G__325169 = (function (){var G__325289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325290 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325289,G__325290) : tailrecursion.hoplon.span.call(null,G__325289,G__325290));
})();
var G__325170 = "] (";
var G__325171 = (function (){var G__325291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325292 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325291,G__325292) : tailrecursion.hoplon.span.call(null,G__325291,G__325292));
})();
var G__325172 = "(";
var G__325173 = (function (){var G__325293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325294 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325293,G__325294) : tailrecursion.hoplon.span.call(null,G__325293,G__325294));
})();
var G__325174 = (function (){var G__325295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325296 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325295,G__325296) : tailrecursion.hoplon.span.call(null,G__325295,G__325296));
})();
var G__325175 = " ";
var G__325176 = (function (){var G__325297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__325298 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325297,G__325298) : tailrecursion.hoplon.span.call(null,G__325297,G__325298));
})();
var G__325177 = ") ";
var G__325178 = (function (){var G__325299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325300 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325299,G__325300) : tailrecursion.hoplon.span.call(null,G__325299,G__325300));
})();
var G__325179 = "\n               (";
var G__325180 = (function (){var G__325301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325302 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325301,G__325302) : tailrecursion.hoplon.span.call(null,G__325301,G__325302));
})();
var G__325181 = (function (){var G__325303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325304 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325303,G__325304) : tailrecursion.hoplon.span.call(null,G__325303,G__325304));
})();
var G__325182 = " ";
var G__325183 = (function (){var G__325305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__325306 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325305,G__325306) : tailrecursion.hoplon.span.call(null,G__325305,G__325306));
})();
var G__325184 = ") ";
var G__325185 = (function (){var G__325307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325308 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325307,G__325308) : tailrecursion.hoplon.span.call(null,G__325307,G__325308));
})();
var G__325186 = "\n               (";
var G__325187 = (function (){var G__325309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325310 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325309,G__325310) : tailrecursion.hoplon.span.call(null,G__325309,G__325310));
})();
var G__325188 = "(";
var G__325189 = (function (){var G__325311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__325312 = "number?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325311,G__325312) : tailrecursion.hoplon.span.call(null,G__325311,G__325312));
})();
var G__325190 = " ";
var G__325191 = (function (){var G__325313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325314 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325313,G__325314) : tailrecursion.hoplon.span.call(null,G__325313,G__325314));
})();
var G__325192 = ")\n                    (";
var G__325193 = (function (){var G__325315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__325316 = "number?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325315,G__325316) : tailrecursion.hoplon.span.call(null,G__325315,G__325316));
})();
var G__325194 = " ";
var G__325195 = (function (){var G__325317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325318 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325317,G__325318) : tailrecursion.hoplon.span.call(null,G__325317,G__325318));
})();
var G__325196 = ")) (";
var G__325197 = (function (){var G__325319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325320 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325319,G__325320) : tailrecursion.hoplon.span.call(null,G__325319,G__325320));
})();
var G__325198 = (function (){var G__325321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325322 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325321,G__325322) : tailrecursion.hoplon.span.call(null,G__325321,G__325322));
})();
var G__325199 = " ";
var G__325200 = (function (){var G__325323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325324 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325323,G__325324) : tailrecursion.hoplon.span.call(null,G__325323,G__325324));
})();
var G__325201 = ")\n               ";
var G__325202 = (function (){var G__325325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325326 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325325,G__325326) : tailrecursion.hoplon.span.call(null,G__325325,G__325326));
})();
var G__325203 = " (";
var G__325204 = (function (){var G__325327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325328 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325327,G__325328) : tailrecursion.hoplon.span.call(null,G__325327,G__325328));
})();
var G__325205 = (function (){var G__325329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325330 = "'+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325329,G__325330) : tailrecursion.hoplon.span.call(null,G__325329,G__325330));
})();
var G__325206 = " ";
var G__325207 = (function (){var G__325331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325332 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325331,G__325332) : tailrecursion.hoplon.span.call(null,G__325331,G__325332));
})();
var G__325208 = " ";
var G__325209 = (function (){var G__325333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325334 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325333,G__325334) : tailrecursion.hoplon.span.call(null,G__325333,G__325334));
})();
var G__325210 = ")))\n  ([";
var G__325211 = (function (){var G__325335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325336 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325335,G__325336) : tailrecursion.hoplon.span.call(null,G__325335,G__325336));
})();
var G__325212 = " ";
var G__325213 = (function (){var G__325337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325338 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325337,G__325338) : tailrecursion.hoplon.span.call(null,G__325337,G__325338));
})();
var G__325214 = " ";
var G__325215 = (function (){var G__325339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__325340 = "&";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325339,G__325340) : tailrecursion.hoplon.span.call(null,G__325339,G__325340));
})();
var G__325216 = " ";
var G__325217 = (function (){var G__325341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325342 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325341,G__325342) : tailrecursion.hoplon.span.call(null,G__325341,G__325342));
})();
var G__325218 = "] (";
var G__325219 = (function (){var G__325343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__325344 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325343,G__325344) : tailrecursion.hoplon.span.call(null,G__325343,G__325344));
})();
var G__325220 = "(";
var G__325221 = (function (){var G__325345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__325346 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325345,G__325346) : tailrecursion.hoplon.span.call(null,G__325345,G__325346));
})();
var G__325222 = " ";
var G__325223 = (function (){var G__325347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325348 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325347,G__325348) : tailrecursion.hoplon.span.call(null,G__325347,G__325348));
})();
var G__325224 = ")\n                 (";
var G__325225 = (function (){var G__325349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__325350 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325349,G__325350) : tailrecursion.hoplon.span.call(null,G__325349,G__325350));
})();
var G__325226 = " ";
var G__325227 = (function (){var G__325351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325352 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325351,G__325352) : tailrecursion.hoplon.span.call(null,G__325351,G__325352));
})();
var G__325228 = " ";
var G__325229 = (function (){var G__325353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325354 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325353,G__325354) : tailrecursion.hoplon.span.call(null,G__325353,G__325354));
})();
var G__325230 = ")\n                 (";
var G__325231 = (function (){var G__325355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__325356 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325355,G__325356) : tailrecursion.hoplon.span.call(null,G__325355,G__325356));
})();
var G__325232 = " ";
var G__325233 = (function (){var G__325357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325358 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325357,G__325358) : tailrecursion.hoplon.span.call(null,G__325357,G__325358));
})();
var G__325234 = "\n                           (";
var G__325235 = (function (){var G__325359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__325360 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325359,G__325360) : tailrecursion.hoplon.span.call(null,G__325359,G__325360));
})();
var G__325236 = " ";
var G__325237 = (function (){var G__325361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325362 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325361,G__325362) : tailrecursion.hoplon.span.call(null,G__325361,G__325362));
})();
var G__325238 = " \n                                     (";
var G__325239 = (function (){var G__325363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325364 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325363,G__325364) : tailrecursion.hoplon.span.call(null,G__325363,G__325364));
})();
var G__325240 = (function (){var G__325365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325366 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325365,G__325366) : tailrecursion.hoplon.span.call(null,G__325365,G__325366));
})();
var G__325241 = ") \n                                     ";
var G__325242 = (function (){var G__325367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__325368 = "&";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325367,G__325368) : tailrecursion.hoplon.span.call(null,G__325367,G__325368));
})();
var G__325243 = " (";
var G__325244 = (function (){var G__325369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325370 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325369,G__325370) : tailrecursion.hoplon.span.call(null,G__325369,G__325370));
})();
var G__325245 = (function (){var G__325371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325372 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325371,G__325372) : tailrecursion.hoplon.span.call(null,G__325371,G__325372));
})();
var G__325246 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$115 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$115(G__325132,G__325133,G__325134,G__325135,G__325136,G__325137,G__325138,G__325139,G__325140,G__325141,G__325142,G__325143,G__325144,G__325145,G__325146,G__325147,G__325148,G__325149,G__325150,G__325151,G__325152,G__325153,G__325154,G__325155,G__325156,G__325157,G__325158,G__325159,G__325160,G__325161,G__325162,G__325163,G__325164,G__325165,G__325166,G__325167,G__325168,G__325169,G__325170,G__325171,G__325172,G__325173,G__325174,G__325175,G__325176,G__325177,G__325178,G__325179,G__325180,G__325181,G__325182,G__325183,G__325184,G__325185,G__325186,G__325187,G__325188,G__325189,G__325190,G__325191,G__325192,G__325193,G__325194,G__325195,G__325196,G__325197,G__325198,G__325199,G__325200,G__325201,G__325202,G__325203,G__325204,G__325205,G__325206,G__325207,G__325208,G__325209,G__325210,G__325211,G__325212,G__325213,G__325214,G__325215,G__325216,G__325217,G__325218,G__325219,G__325220,G__325221,G__325222,G__325223,G__325224,G__325225,G__325226,G__325227,G__325228,G__325229,G__325230,G__325231,G__325232,G__325233,G__325234,G__325235,G__325236,G__325237,G__325238,G__325239,G__325240,G__325241,G__325242,G__325243,G__325244,G__325245,G__325246) : tailrecursion.hoplon.pre.call(null,G__325132,G__325133,G__325134,G__325135,G__325136,G__325137,G__325138,G__325139,G__325140,G__325141,G__325142,G__325143,G__325144,G__325145,G__325146,G__325147,G__325148,G__325149,G__325150,G__325151,G__325152,G__325153,G__325154,G__325155,G__325156,G__325157,G__325158,G__325159,G__325160,G__325161,G__325162,G__325163,G__325164,G__325165,G__325166,G__325167,G__325168,G__325169,G__325170,G__325171,G__325172,G__325173,G__325174,G__325175,G__325176,G__325177,G__325178,G__325179,G__325180,G__325181,G__325182,G__325183,G__325184,G__325185,G__325186,G__325187,G__325188,G__325189,G__325190,G__325191,G__325192,G__325193,G__325194,G__325195,G__325196,G__325197,G__325198,G__325199,G__325200,G__325201,G__325202,G__325203,G__325204,G__325205,G__325206,G__325207,G__325208,G__325209,G__325210,G__325211,G__325212,G__325213,G__325214,G__325215,G__325216,G__325217,G__325218,G__325219,G__325220,G__325221,G__325222,G__325223,G__325224,G__325225,G__325226,G__325227,G__325228,G__325229,G__325230,G__325231,G__325232,G__325233,G__325234,G__325235,G__325236,G__325237,G__325238,G__325239,G__325240,G__325241,G__325242,G__325243,G__325244,G__325245,G__325246));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__325130,G__325131) : tailrecursion.hoplon.div.call(null,G__325130,G__325131));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__325129) : tailrecursion.hoplon.div.call(null,G__325129));
})(),(function (){var G__325373 = cljs.core.PersistentArrayMap.EMPTY;
var G__325374 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The product version is analogous."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__325373,G__325374) : tailrecursion.hoplon.markdown.para_node.call(null,G__325373,G__325374));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_324885;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_324884;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_324883;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_324882;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_325375 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_325376 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_325377 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_325378 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__325379 = cljs.core.PersistentArrayMap.EMPTY;
var G__325380 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Suppose we want to modify the differentiation program so that it works with ordinary mathematical notation, in which ",(function (){var G__325381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"+"], null);
var G__325382 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__325381,G__325382) : tailrecursion.hoplon.markdown.code_node.call(null,G__325381,G__325382));
})()," and ",(function (){var G__325383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"*"], null);
var G__325384 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__325383,G__325384) : tailrecursion.hoplon.markdown.code_node.call(null,G__325383,G__325384));
})()," are infix rather than prefix operators. Since the differentiation program is defined in terms of abstract data, we can modify it to work with different representations of expressions solely by changing the predicates, selectors, and constructors that define the representation of the algebraic expressions on which the differentiator is to operate."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__325379,G__325380) : tailrecursion.hoplon.markdown.para_node.call(null,G__325379,G__325380));
})(),(function (){var G__325385 = cljs.core.PersistentArrayMap.EMPTY;
var G__325386 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a. Show how to do this in order to differentiate algebraic expressions presented in infix form, such as ",(function (){var G__325387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(x + (3 * (x + (y +\n2))))"], null);
var G__325388 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__325387,G__325388) : tailrecursion.hoplon.markdown.code_node.call(null,G__325387,G__325388));
})(),". To simplify the task, assume that ",(function (){var G__325389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"+"], null);
var G__325390 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__325389,G__325390) : tailrecursion.hoplon.markdown.code_node.call(null,G__325389,G__325390));
})()," and ",(function (){var G__325391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"*"], null);
var G__325392 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__325391,G__325392) : tailrecursion.hoplon.markdown.code_node.call(null,G__325391,G__325392));
})()," always take two arguments and that expressions are fully parenthesized."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__325385,G__325386) : tailrecursion.hoplon.markdown.para_node.call(null,G__325385,G__325386));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_325378;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_325377;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_325376;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_325375;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_325393 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_325394 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_325395 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_325396 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__325566 = (function (){var G__325567 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__325568 = (function (){var G__325569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__325570 = "(";
var G__325571 = (function (){var G__325648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__325649 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325648,G__325649) : tailrecursion.hoplon.span.call(null,G__325648,G__325649));
})();
var G__325572 = (function (){var G__325650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325651 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325650,G__325651) : tailrecursion.hoplon.span.call(null,G__325650,G__325651));
})();
var G__325573 = " [";
var G__325574 = (function (){var G__325652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325653 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325652,G__325653) : tailrecursion.hoplon.span.call(null,G__325652,G__325653));
})();
var G__325575 = " ";
var G__325576 = (function (){var G__325654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325655 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325654,G__325655) : tailrecursion.hoplon.span.call(null,G__325654,G__325655));
})();
var G__325577 = "]\n  (";
var G__325578 = (function (){var G__325656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325657 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325656,G__325657) : tailrecursion.hoplon.span.call(null,G__325656,G__325657));
})();
var G__325579 = "(";
var G__325580 = (function (){var G__325658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325659 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325658,G__325659) : tailrecursion.hoplon.span.call(null,G__325658,G__325659));
})();
var G__325581 = (function (){var G__325660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325661 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325660,G__325661) : tailrecursion.hoplon.span.call(null,G__325660,G__325661));
})();
var G__325582 = " ";
var G__325583 = (function (){var G__325662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__325663 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325662,G__325663) : tailrecursion.hoplon.span.call(null,G__325662,G__325663));
})();
var G__325584 = ") ";
var G__325585 = (function (){var G__325664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325665 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325664,G__325665) : tailrecursion.hoplon.span.call(null,G__325664,G__325665));
})();
var G__325586 = "\n        (";
var G__325587 = (function (){var G__325666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325667 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325666,G__325667) : tailrecursion.hoplon.span.call(null,G__325666,G__325667));
})();
var G__325588 = (function (){var G__325668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325669 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325668,G__325669) : tailrecursion.hoplon.span.call(null,G__325668,G__325669));
})();
var G__325589 = " ";
var G__325590 = (function (){var G__325670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__325671 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325670,G__325671) : tailrecursion.hoplon.span.call(null,G__325670,G__325671));
})();
var G__325591 = ") ";
var G__325592 = (function (){var G__325672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325673 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325672,G__325673) : tailrecursion.hoplon.span.call(null,G__325672,G__325673));
})();
var G__325593 = "\n        (";
var G__325594 = (function (){var G__325674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325675 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325674,G__325675) : tailrecursion.hoplon.span.call(null,G__325674,G__325675));
})();
var G__325595 = "(";
var G__325596 = (function (){var G__325676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__325677 = "number?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325676,G__325677) : tailrecursion.hoplon.span.call(null,G__325676,G__325677));
})();
var G__325597 = " ";
var G__325598 = (function (){var G__325678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325679 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325678,G__325679) : tailrecursion.hoplon.span.call(null,G__325678,G__325679));
})();
var G__325599 = ")\n             (";
var G__325600 = (function (){var G__325680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__325681 = "number?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325680,G__325681) : tailrecursion.hoplon.span.call(null,G__325680,G__325681));
})();
var G__325601 = " ";
var G__325602 = (function (){var G__325682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325683 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325682,G__325683) : tailrecursion.hoplon.span.call(null,G__325682,G__325683));
})();
var G__325603 = ")) (";
var G__325604 = (function (){var G__325684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325685 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325684,G__325685) : tailrecursion.hoplon.span.call(null,G__325684,G__325685));
})();
var G__325605 = (function (){var G__325686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325687 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325686,G__325687) : tailrecursion.hoplon.span.call(null,G__325686,G__325687));
})();
var G__325606 = " ";
var G__325607 = (function (){var G__325688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325689 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325688,G__325689) : tailrecursion.hoplon.span.call(null,G__325688,G__325689));
})();
var G__325608 = ")\n        ";
var G__325609 = (function (){var G__325690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325691 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325690,G__325691) : tailrecursion.hoplon.span.call(null,G__325690,G__325691));
})();
var G__325610 = " (";
var G__325611 = (function (){var G__325692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325693 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325692,G__325693) : tailrecursion.hoplon.span.call(null,G__325692,G__325693));
})();
var G__325612 = (function (){var G__325694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325695 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325694,G__325695) : tailrecursion.hoplon.span.call(null,G__325694,G__325695));
})();
var G__325613 = " ";
var G__325614 = (function (){var G__325696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325697 = "'+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325696,G__325697) : tailrecursion.hoplon.span.call(null,G__325696,G__325697));
})();
var G__325615 = " ";
var G__325616 = (function (){var G__325698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325699 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325698,G__325699) : tailrecursion.hoplon.span.call(null,G__325698,G__325699));
})();
var G__325617 = ")))\n\n(";
var G__325618 = (function (){var G__325700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__325701 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325700,G__325701) : tailrecursion.hoplon.span.call(null,G__325700,G__325701));
})();
var G__325619 = (function (){var G__325702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325703 = "addend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325702,G__325703) : tailrecursion.hoplon.span.call(null,G__325702,G__325703));
})();
var G__325620 = " [";
var G__325621 = (function (){var G__325704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325705 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325704,G__325705) : tailrecursion.hoplon.span.call(null,G__325704,G__325705));
})();
var G__325622 = "]\n  (";
var G__325623 = (function (){var G__325706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325707 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325706,G__325707) : tailrecursion.hoplon.span.call(null,G__325706,G__325707));
})();
var G__325624 = (function (){var G__325708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325709 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325708,G__325709) : tailrecursion.hoplon.span.call(null,G__325708,G__325709));
})();
var G__325625 = "))\n\n(";
var G__325626 = (function (){var G__325710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__325711 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325710,G__325711) : tailrecursion.hoplon.span.call(null,G__325710,G__325711));
})();
var G__325627 = (function (){var G__325712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325713 = "augend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325712,G__325713) : tailrecursion.hoplon.span.call(null,G__325712,G__325713));
})();
var G__325628 = " [";
var G__325629 = (function (){var G__325714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325715 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325714,G__325715) : tailrecursion.hoplon.span.call(null,G__325714,G__325715));
})();
var G__325630 = "]\n  (";
var G__325631 = (function (){var G__325716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325717 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325716,G__325717) : tailrecursion.hoplon.span.call(null,G__325716,G__325717));
})();
var G__325632 = (function (){var G__325718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325719 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325718,G__325719) : tailrecursion.hoplon.span.call(null,G__325718,G__325719));
})();
var G__325633 = " ";
var G__325634 = (function (){var G__325720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__325721 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325720,G__325721) : tailrecursion.hoplon.span.call(null,G__325720,G__325721));
})();
var G__325635 = "))\n\n(";
var G__325636 = (function (){var G__325722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__325723 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325722,G__325723) : tailrecursion.hoplon.span.call(null,G__325722,G__325723));
})();
var G__325637 = (function (){var G__325724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325725 = "sum?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325724,G__325725) : tailrecursion.hoplon.span.call(null,G__325724,G__325725));
})();
var G__325638 = " [";
var G__325639 = (function (){var G__325726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325727 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325726,G__325727) : tailrecursion.hoplon.span.call(null,G__325726,G__325727));
})();
var G__325640 = "]\n  (";
var G__325641 = (function (){var G__325728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325729 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325728,G__325729) : tailrecursion.hoplon.span.call(null,G__325728,G__325729));
})();
var G__325642 = "(";
var G__325643 = (function (){var G__325730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__325731 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325730,G__325731) : tailrecursion.hoplon.span.call(null,G__325730,G__325731));
})();
var G__325644 = (function (){var G__325732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325733 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325732,G__325733) : tailrecursion.hoplon.span.call(null,G__325732,G__325733));
})();
var G__325645 = ") ";
var G__325646 = (function (){var G__325734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__325735 = "'+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__325734,G__325735) : tailrecursion.hoplon.span.call(null,G__325734,G__325735));
})();
var G__325647 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$79 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$79(G__325569,G__325570,G__325571,G__325572,G__325573,G__325574,G__325575,G__325576,G__325577,G__325578,G__325579,G__325580,G__325581,G__325582,G__325583,G__325584,G__325585,G__325586,G__325587,G__325588,G__325589,G__325590,G__325591,G__325592,G__325593,G__325594,G__325595,G__325596,G__325597,G__325598,G__325599,G__325600,G__325601,G__325602,G__325603,G__325604,G__325605,G__325606,G__325607,G__325608,G__325609,G__325610,G__325611,G__325612,G__325613,G__325614,G__325615,G__325616,G__325617,G__325618,G__325619,G__325620,G__325621,G__325622,G__325623,G__325624,G__325625,G__325626,G__325627,G__325628,G__325629,G__325630,G__325631,G__325632,G__325633,G__325634,G__325635,G__325636,G__325637,G__325638,G__325639,G__325640,G__325641,G__325642,G__325643,G__325644,G__325645,G__325646,G__325647) : tailrecursion.hoplon.pre.call(null,G__325569,G__325570,G__325571,G__325572,G__325573,G__325574,G__325575,G__325576,G__325577,G__325578,G__325579,G__325580,G__325581,G__325582,G__325583,G__325584,G__325585,G__325586,G__325587,G__325588,G__325589,G__325590,G__325591,G__325592,G__325593,G__325594,G__325595,G__325596,G__325597,G__325598,G__325599,G__325600,G__325601,G__325602,G__325603,G__325604,G__325605,G__325606,G__325607,G__325608,G__325609,G__325610,G__325611,G__325612,G__325613,G__325614,G__325615,G__325616,G__325617,G__325618,G__325619,G__325620,G__325621,G__325622,G__325623,G__325624,G__325625,G__325626,G__325627,G__325628,G__325629,G__325630,G__325631,G__325632,G__325633,G__325634,G__325635,G__325636,G__325637,G__325638,G__325639,G__325640,G__325641,G__325642,G__325643,G__325644,G__325645,G__325646,G__325647));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__325567,G__325568) : tailrecursion.hoplon.div.call(null,G__325567,G__325568));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__325566) : tailrecursion.hoplon.div.call(null,G__325566));
})(),(function (){var G__325736 = cljs.core.PersistentArrayMap.EMPTY;
var G__325737 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The one for product is analogous."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__325736,G__325737) : tailrecursion.hoplon.markdown.para_node.call(null,G__325736,G__325737));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_325396;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_325395;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_325394;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_325393;
}})()], 0)),"",(function (){var _STAR_references_STAR_325738 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_325739 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_325740 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_325741 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__325742 = cljs.core.PersistentArrayMap.EMPTY;
var G__325743 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b. The problem becomes substantially harder if we allow standard algebraic notation, such as ",(function (){var G__325744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(x + 3 * (x + y + 2))"], null);
var G__325745 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__325744,G__325745) : tailrecursion.hoplon.markdown.code_node.call(null,G__325744,G__325745));
})(),", which drops unnecessary parentheses and assumes that multiplication is done before addition. Can you design appropriate predicates, selectors, and constructors for this notation such that our derivative program still works?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__325742,G__325743) : tailrecursion.hoplon.markdown.para_node.call(null,G__325742,G__325743));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_325741;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_325740;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_325739;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_325738;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_325746 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_325747 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_325748 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_325749 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__325750 = cljs.core.PersistentArrayMap.EMPTY;
var G__325751 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This is exactly why 1) prefix notation is so awesome, and 2) macros. But let",(function (){var G__325752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__325753 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__325752,G__325753) : tailrecursion.hoplon.markdown.simple_node.call(null,G__325752,G__325753));
})(),"s try this out without beautiful, beautiful macros. This solution is not a partifularly pretty one, but I",(function (){var G__325754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__325755 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__325754,G__325755) : tailrecursion.hoplon.markdown.simple_node.call(null,G__325754,G__325755));
})(),"m doing this one after a VERY long day, so",(function (){var G__325756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__325757 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__325756,G__325757) : tailrecursion.hoplon.markdown.simple_node.call(null,G__325756,G__325757));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__325750,G__325751) : tailrecursion.hoplon.markdown.para_node.call(null,G__325750,G__325751));
})(),(function (){var G__326232 = (function (){var G__326233 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__326234 = (function (){var G__326235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__326236 = "(";
var G__326237 = (function (){var G__326457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__326458 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326457,G__326458) : tailrecursion.hoplon.span.call(null,G__326457,G__326458));
})();
var G__326238 = (function (){var G__326459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326460 = "exponents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326459,G__326460) : tailrecursion.hoplon.span.call(null,G__326459,G__326460));
})();
var G__326239 = " [";
var G__326240 = (function (){var G__326461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326462 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326461,G__326462) : tailrecursion.hoplon.span.call(null,G__326461,G__326462));
})();
var G__326241 = "]\n  (";
var G__326242 = (function (){var G__326463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__326464 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326463,G__326464) : tailrecursion.hoplon.span.call(null,G__326463,G__326464));
})();
var G__326243 = "[";
var G__326244 = (function (){var G__326465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326466 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326465,G__326466) : tailrecursion.hoplon.span.call(null,G__326465,G__326466));
})();
var G__326245 = " (";
var G__326246 = (function (){var G__326467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326468 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326467,G__326468) : tailrecursion.hoplon.span.call(null,G__326467,G__326468));
})();
var G__326247 = ")\n         ";
var G__326248 = (function (){var G__326469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326470 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326469,G__326470) : tailrecursion.hoplon.span.call(null,G__326469,G__326470));
})();
var G__326249 = (function (){var G__326471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326472 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326471,G__326472) : tailrecursion.hoplon.span.call(null,G__326471,G__326472));
})();
var G__326250 = "]\n    (";
var G__326251 = (function (){var G__326473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326474 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326473,G__326474) : tailrecursion.hoplon.span.call(null,G__326473,G__326474));
})();
var G__326252 = "(";
var G__326253 = (function (){var G__326475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326476 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326475,G__326476) : tailrecursion.hoplon.span.call(null,G__326475,G__326476));
})();
var G__326254 = " ";
var G__326255 = (function (){var G__326477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326478 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326477,G__326478) : tailrecursion.hoplon.span.call(null,G__326477,G__326478));
})();
var G__326256 = ") ";
var G__326257 = (function (){var G__326479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326480 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326479,G__326480) : tailrecursion.hoplon.span.call(null,G__326479,G__326480));
})();
var G__326258 = "\n          (";
var G__326259 = (function (){var G__326481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326482 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326481,G__326482) : tailrecursion.hoplon.span.call(null,G__326481,G__326482));
})();
var G__326260 = "(";
var G__326261 = (function (){var G__326483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326484 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326483,G__326484) : tailrecursion.hoplon.span.call(null,G__326483,G__326484));
})();
var G__326262 = (function (){var G__326485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326486 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326485,G__326486) : tailrecursion.hoplon.span.call(null,G__326485,G__326486));
})();
var G__326263 = ") ";
var G__326264 = (function (){var G__326487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326488 = "'**";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326487,G__326488) : tailrecursion.hoplon.span.call(null,G__326487,G__326488));
})();
var G__326265 = ") (";
var G__326266 = (function (){var G__326489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326490 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326489,G__326490) : tailrecursion.hoplon.span.call(null,G__326489,G__326490));
})();
var G__326267 = " ";
var G__326268 = (function (){var G__326491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326492 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326491,G__326492) : tailrecursion.hoplon.span.call(null,G__326491,G__326492));
})();
var G__326269 = " \n                                       (";
var G__326270 = (function (){var G__326493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326494 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326493,G__326494) : tailrecursion.hoplon.span.call(null,G__326493,G__326494));
})();
var G__326271 = "(";
var G__326272 = (function (){var G__326495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326496 = "drop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326495,G__326496) : tailrecursion.hoplon.span.call(null,G__326495,G__326496));
})();
var G__326273 = (function (){var G__326497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326498 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326497,G__326498) : tailrecursion.hoplon.span.call(null,G__326497,G__326498));
})();
var G__326274 = " ";
var G__326275 = (function (){var G__326499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326500 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326499,G__326500) : tailrecursion.hoplon.span.call(null,G__326499,G__326500));
})();
var G__326276 = ")\n                                             (";
var G__326277 = (function (){var G__326501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326502 = "make-exponentiation";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326501,G__326502) : tailrecursion.hoplon.span.call(null,G__326501,G__326502));
})();
var G__326278 = " (";
var G__326279 = (function (){var G__326503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326504 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326503,G__326504) : tailrecursion.hoplon.span.call(null,G__326503,G__326504));
})();
var G__326280 = (function (){var G__326505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326506 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326505,G__326506) : tailrecursion.hoplon.span.call(null,G__326505,G__326506));
})();
var G__326281 = ")\n                                                                  (";
var G__326282 = (function (){var G__326507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326508 = "nth left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326507,G__326508) : tailrecursion.hoplon.span.call(null,G__326507,G__326508));
})();
var G__326283 = (function (){var G__326509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326510 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326509,G__326510) : tailrecursion.hoplon.span.call(null,G__326509,G__326510));
})();
var G__326284 = "))))\n          ";
var G__326285 = (function (){var G__326511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326512 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326511,G__326512) : tailrecursion.hoplon.span.call(null,G__326511,G__326512));
})();
var G__326286 = " (";
var G__326287 = (function (){var G__326513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326514 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326513,G__326514) : tailrecursion.hoplon.span.call(null,G__326513,G__326514));
})();
var G__326288 = " (";
var G__326289 = (function (){var G__326515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326516 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326515,G__326516) : tailrecursion.hoplon.span.call(null,G__326515,G__326516));
})();
var G__326290 = (function (){var G__326517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326518 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326517,G__326518) : tailrecursion.hoplon.span.call(null,G__326517,G__326518));
})();
var G__326291 = " (";
var G__326292 = (function (){var G__326519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326520 = "take ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326519,G__326520) : tailrecursion.hoplon.span.call(null,G__326519,G__326520));
})();
var G__326293 = (function (){var G__326521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326522 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326521,G__326522) : tailrecursion.hoplon.span.call(null,G__326521,G__326522));
})();
var G__326294 = " ";
var G__326295 = (function (){var G__326523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326524 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326523,G__326524) : tailrecursion.hoplon.span.call(null,G__326523,G__326524));
})();
var G__326296 = "))\n                       (";
var G__326297 = (function (){var G__326525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326526 = "drop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326525,G__326526) : tailrecursion.hoplon.span.call(null,G__326525,G__326526));
})();
var G__326298 = (function (){var G__326527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326528 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326527,G__326528) : tailrecursion.hoplon.span.call(null,G__326527,G__326528));
})();
var G__326299 = " ";
var G__326300 = (function (){var G__326529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326530 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326529,G__326530) : tailrecursion.hoplon.span.call(null,G__326529,G__326530));
})();
var G__326301 = ")))))\n\n(";
var G__326302 = (function (){var G__326531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__326532 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326531,G__326532) : tailrecursion.hoplon.span.call(null,G__326531,G__326532));
})();
var G__326303 = (function (){var G__326533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326534 = "multiplication";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326533,G__326534) : tailrecursion.hoplon.span.call(null,G__326533,G__326534));
})();
var G__326304 = " [";
var G__326305 = (function (){var G__326535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326536 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326535,G__326536) : tailrecursion.hoplon.span.call(null,G__326535,G__326536));
})();
var G__326306 = "]\n  (";
var G__326307 = (function (){var G__326537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__326538 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326537,G__326538) : tailrecursion.hoplon.span.call(null,G__326537,G__326538));
})();
var G__326308 = "[";
var G__326309 = (function (){var G__326539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326540 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326539,G__326540) : tailrecursion.hoplon.span.call(null,G__326539,G__326540));
})();
var G__326310 = " (";
var G__326311 = (function (){var G__326541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326542 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326541,G__326542) : tailrecursion.hoplon.span.call(null,G__326541,G__326542));
})();
var G__326312 = ")\n         ";
var G__326313 = (function (){var G__326543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326544 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326543,G__326544) : tailrecursion.hoplon.span.call(null,G__326543,G__326544));
})();
var G__326314 = (function (){var G__326545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326546 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326545,G__326546) : tailrecursion.hoplon.span.call(null,G__326545,G__326546));
})();
var G__326315 = "]\n    (";
var G__326316 = (function (){var G__326547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326548 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326547,G__326548) : tailrecursion.hoplon.span.call(null,G__326547,G__326548));
})();
var G__326317 = "(";
var G__326318 = (function (){var G__326549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326550 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326549,G__326550) : tailrecursion.hoplon.span.call(null,G__326549,G__326550));
})();
var G__326319 = " ";
var G__326320 = (function (){var G__326551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326552 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326551,G__326552) : tailrecursion.hoplon.span.call(null,G__326551,G__326552));
})();
var G__326321 = ") ";
var G__326322 = (function (){var G__326553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326554 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326553,G__326554) : tailrecursion.hoplon.span.call(null,G__326553,G__326554));
})();
var G__326323 = "\n          (";
var G__326324 = (function (){var G__326555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326556 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326555,G__326556) : tailrecursion.hoplon.span.call(null,G__326555,G__326556));
})();
var G__326325 = "(";
var G__326326 = (function (){var G__326557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326558 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326557,G__326558) : tailrecursion.hoplon.span.call(null,G__326557,G__326558));
})();
var G__326327 = (function (){var G__326559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326560 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326559,G__326560) : tailrecursion.hoplon.span.call(null,G__326559,G__326560));
})();
var G__326328 = ") ";
var G__326329 = (function (){var G__326561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326562 = "'*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326561,G__326562) : tailrecursion.hoplon.span.call(null,G__326561,G__326562));
})();
var G__326330 = ") (";
var G__326331 = (function (){var G__326563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326564 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326563,G__326564) : tailrecursion.hoplon.span.call(null,G__326563,G__326564));
})();
var G__326332 = " ";
var G__326333 = (function (){var G__326565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326566 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326565,G__326566) : tailrecursion.hoplon.span.call(null,G__326565,G__326566));
})();
var G__326334 = "\n                                      (";
var G__326335 = (function (){var G__326567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326568 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326567,G__326568) : tailrecursion.hoplon.span.call(null,G__326567,G__326568));
})();
var G__326336 = "(";
var G__326337 = (function (){var G__326569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326570 = "drop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326569,G__326570) : tailrecursion.hoplon.span.call(null,G__326569,G__326570));
})();
var G__326338 = (function (){var G__326571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326572 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326571,G__326572) : tailrecursion.hoplon.span.call(null,G__326571,G__326572));
})();
var G__326339 = " ";
var G__326340 = (function (){var G__326573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326574 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326573,G__326574) : tailrecursion.hoplon.span.call(null,G__326573,G__326574));
})();
var G__326341 = ")\n                                            (";
var G__326342 = (function (){var G__326575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326576 = "make-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326575,G__326576) : tailrecursion.hoplon.span.call(null,G__326575,G__326576));
})();
var G__326343 = " (";
var G__326344 = (function (){var G__326577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326578 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326577,G__326578) : tailrecursion.hoplon.span.call(null,G__326577,G__326578));
})();
var G__326345 = (function (){var G__326579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326580 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326579,G__326580) : tailrecursion.hoplon.span.call(null,G__326579,G__326580));
})();
var G__326346 = ")\n                                                          (";
var G__326347 = (function (){var G__326581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326582 = "nth left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326581,G__326582) : tailrecursion.hoplon.span.call(null,G__326581,G__326582));
})();
var G__326348 = (function (){var G__326583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326584 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326583,G__326584) : tailrecursion.hoplon.span.call(null,G__326583,G__326584));
})();
var G__326349 = "))))\n          ";
var G__326350 = (function (){var G__326585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326586 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326585,G__326586) : tailrecursion.hoplon.span.call(null,G__326585,G__326586));
})();
var G__326351 = " (";
var G__326352 = (function (){var G__326587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326588 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326587,G__326588) : tailrecursion.hoplon.span.call(null,G__326587,G__326588));
})();
var G__326353 = " (";
var G__326354 = (function (){var G__326589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326590 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326589,G__326590) : tailrecursion.hoplon.span.call(null,G__326589,G__326590));
})();
var G__326355 = (function (){var G__326591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326592 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326591,G__326592) : tailrecursion.hoplon.span.call(null,G__326591,G__326592));
})();
var G__326356 = " (";
var G__326357 = (function (){var G__326593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326594 = "take ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326593,G__326594) : tailrecursion.hoplon.span.call(null,G__326593,G__326594));
})();
var G__326358 = (function (){var G__326595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326596 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326595,G__326596) : tailrecursion.hoplon.span.call(null,G__326595,G__326596));
})();
var G__326359 = " ";
var G__326360 = (function (){var G__326597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326598 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326597,G__326598) : tailrecursion.hoplon.span.call(null,G__326597,G__326598));
})();
var G__326361 = "))\n                       (";
var G__326362 = (function (){var G__326599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326600 = "drop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326599,G__326600) : tailrecursion.hoplon.span.call(null,G__326599,G__326600));
})();
var G__326363 = (function (){var G__326601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326602 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326601,G__326602) : tailrecursion.hoplon.span.call(null,G__326601,G__326602));
})();
var G__326364 = " ";
var G__326365 = (function (){var G__326603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326604 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326603,G__326604) : tailrecursion.hoplon.span.call(null,G__326603,G__326604));
})();
var G__326366 = ")))))\n\n(";
var G__326367 = (function (){var G__326605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__326606 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326605,G__326606) : tailrecursion.hoplon.span.call(null,G__326605,G__326606));
})();
var G__326368 = (function (){var G__326607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326608 = "addition";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326607,G__326608) : tailrecursion.hoplon.span.call(null,G__326607,G__326608));
})();
var G__326369 = " [";
var G__326370 = (function (){var G__326609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326610 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326609,G__326610) : tailrecursion.hoplon.span.call(null,G__326609,G__326610));
})();
var G__326371 = "]\n  (";
var G__326372 = (function (){var G__326611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__326612 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326611,G__326612) : tailrecursion.hoplon.span.call(null,G__326611,G__326612));
})();
var G__326373 = "[";
var G__326374 = (function (){var G__326613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326614 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326613,G__326614) : tailrecursion.hoplon.span.call(null,G__326613,G__326614));
})();
var G__326375 = " (";
var G__326376 = (function (){var G__326615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326616 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326615,G__326616) : tailrecursion.hoplon.span.call(null,G__326615,G__326616));
})();
var G__326377 = ")\n         ";
var G__326378 = (function (){var G__326617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326618 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326617,G__326618) : tailrecursion.hoplon.span.call(null,G__326617,G__326618));
})();
var G__326379 = (function (){var G__326619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326620 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326619,G__326620) : tailrecursion.hoplon.span.call(null,G__326619,G__326620));
})();
var G__326380 = "]\n    (";
var G__326381 = (function (){var G__326621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326622 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326621,G__326622) : tailrecursion.hoplon.span.call(null,G__326621,G__326622));
})();
var G__326382 = "(";
var G__326383 = (function (){var G__326623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326624 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326623,G__326624) : tailrecursion.hoplon.span.call(null,G__326623,G__326624));
})();
var G__326384 = " ";
var G__326385 = (function (){var G__326625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326626 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326625,G__326626) : tailrecursion.hoplon.span.call(null,G__326625,G__326626));
})();
var G__326386 = ") ";
var G__326387 = (function (){var G__326627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326628 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326627,G__326628) : tailrecursion.hoplon.span.call(null,G__326627,G__326628));
})();
var G__326388 = "\n          (";
var G__326389 = (function (){var G__326629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326630 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326629,G__326630) : tailrecursion.hoplon.span.call(null,G__326629,G__326630));
})();
var G__326390 = "(";
var G__326391 = (function (){var G__326631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326632 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326631,G__326632) : tailrecursion.hoplon.span.call(null,G__326631,G__326632));
})();
var G__326392 = (function (){var G__326633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326634 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326633,G__326634) : tailrecursion.hoplon.span.call(null,G__326633,G__326634));
})();
var G__326393 = ") ";
var G__326394 = (function (){var G__326635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326636 = "'+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326635,G__326636) : tailrecursion.hoplon.span.call(null,G__326635,G__326636));
})();
var G__326395 = ") (";
var G__326396 = (function (){var G__326637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326638 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326637,G__326638) : tailrecursion.hoplon.span.call(null,G__326637,G__326638));
})();
var G__326397 = " ";
var G__326398 = (function (){var G__326639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326640 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326639,G__326640) : tailrecursion.hoplon.span.call(null,G__326639,G__326640));
})();
var G__326399 = "\n                                      (";
var G__326400 = (function (){var G__326641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326642 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326641,G__326642) : tailrecursion.hoplon.span.call(null,G__326641,G__326642));
})();
var G__326401 = "(";
var G__326402 = (function (){var G__326643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326644 = "drop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326643,G__326644) : tailrecursion.hoplon.span.call(null,G__326643,G__326644));
})();
var G__326403 = (function (){var G__326645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326646 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326645,G__326646) : tailrecursion.hoplon.span.call(null,G__326645,G__326646));
})();
var G__326404 = " ";
var G__326405 = (function (){var G__326647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326648 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326647,G__326648) : tailrecursion.hoplon.span.call(null,G__326647,G__326648));
})();
var G__326406 = ")\n                                            (";
var G__326407 = (function (){var G__326649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326650 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326649,G__326650) : tailrecursion.hoplon.span.call(null,G__326649,G__326650));
})();
var G__326408 = " (";
var G__326409 = (function (){var G__326651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326652 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326651,G__326652) : tailrecursion.hoplon.span.call(null,G__326651,G__326652));
})();
var G__326410 = (function (){var G__326653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326654 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326653,G__326654) : tailrecursion.hoplon.span.call(null,G__326653,G__326654));
})();
var G__326411 = ")\n                                                      (";
var G__326412 = (function (){var G__326655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326656 = "nth left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326655,G__326656) : tailrecursion.hoplon.span.call(null,G__326655,G__326656));
})();
var G__326413 = (function (){var G__326657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326658 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326657,G__326658) : tailrecursion.hoplon.span.call(null,G__326657,G__326658));
})();
var G__326414 = "))))\n          ";
var G__326415 = (function (){var G__326659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326660 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326659,G__326660) : tailrecursion.hoplon.span.call(null,G__326659,G__326660));
})();
var G__326416 = " (";
var G__326417 = (function (){var G__326661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326662 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326661,G__326662) : tailrecursion.hoplon.span.call(null,G__326661,G__326662));
})();
var G__326418 = " (";
var G__326419 = (function (){var G__326663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326664 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326663,G__326664) : tailrecursion.hoplon.span.call(null,G__326663,G__326664));
})();
var G__326420 = (function (){var G__326665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326666 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326665,G__326666) : tailrecursion.hoplon.span.call(null,G__326665,G__326666));
})();
var G__326421 = " (";
var G__326422 = (function (){var G__326667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326668 = "take ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326667,G__326668) : tailrecursion.hoplon.span.call(null,G__326667,G__326668));
})();
var G__326423 = (function (){var G__326669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326670 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326669,G__326670) : tailrecursion.hoplon.span.call(null,G__326669,G__326670));
})();
var G__326424 = " ";
var G__326425 = (function (){var G__326671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326672 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326671,G__326672) : tailrecursion.hoplon.span.call(null,G__326671,G__326672));
})();
var G__326426 = "))\n                       (";
var G__326427 = (function (){var G__326673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326674 = "drop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326673,G__326674) : tailrecursion.hoplon.span.call(null,G__326673,G__326674));
})();
var G__326428 = (function (){var G__326675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__326676 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326675,G__326676) : tailrecursion.hoplon.span.call(null,G__326675,G__326676));
})();
var G__326429 = " ";
var G__326430 = (function (){var G__326677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326678 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326677,G__326678) : tailrecursion.hoplon.span.call(null,G__326677,G__326678));
})();
var G__326431 = ")))))\n\n(";
var G__326432 = (function (){var G__326679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__326680 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326679,G__326680) : tailrecursion.hoplon.span.call(null,G__326679,G__326680));
})();
var G__326433 = (function (){var G__326681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326682 = "pemdas";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326681,G__326682) : tailrecursion.hoplon.span.call(null,G__326681,G__326682));
})();
var G__326434 = " [";
var G__326435 = (function (){var G__326683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326684 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326683,G__326684) : tailrecursion.hoplon.span.call(null,G__326683,G__326684));
})();
var G__326436 = "]\n  (";
var G__326437 = (function (){var G__326685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__326686 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326685,G__326686) : tailrecursion.hoplon.span.call(null,G__326685,G__326686));
})();
var G__326438 = "(";
var G__326439 = (function (){var G__326687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326688 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326687,G__326688) : tailrecursion.hoplon.span.call(null,G__326687,G__326688));
})();
var G__326440 = (function (){var G__326689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326690 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326689,G__326690) : tailrecursion.hoplon.span.call(null,G__326689,G__326690));
})();
var G__326441 = ") (";
var G__326442 = (function (){var G__326691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326692 = "->>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326691,G__326692) : tailrecursion.hoplon.span.call(null,G__326691,G__326692));
})();
var G__326443 = " (";
var G__326444 = (function (){var G__326693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326694 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326693,G__326694) : tailrecursion.hoplon.span.call(null,G__326693,G__326694));
})();
var G__326445 = (function (){var G__326695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326696 = "pemdas";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326695,G__326696) : tailrecursion.hoplon.span.call(null,G__326695,G__326696));
})();
var G__326446 = " ";
var G__326447 = (function (){var G__326697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326698 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326697,G__326698) : tailrecursion.hoplon.span.call(null,G__326697,G__326698));
})();
var G__326448 = ")\n                             (";
var G__326449 = (function (){var G__326699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326700 = "exponents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326699,G__326700) : tailrecursion.hoplon.span.call(null,G__326699,G__326700));
})();
var G__326450 = ")\n                             (";
var G__326451 = (function (){var G__326701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326702 = "multiplication";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326701,G__326702) : tailrecursion.hoplon.span.call(null,G__326701,G__326702));
})();
var G__326452 = ")\n                             (";
var G__326453 = (function (){var G__326703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326704 = "addition";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326703,G__326704) : tailrecursion.hoplon.span.call(null,G__326703,G__326704));
})();
var G__326454 = "))\n      ";
var G__326455 = (function (){var G__326705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326706 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326705,G__326706) : tailrecursion.hoplon.span.call(null,G__326705,G__326706));
})();
var G__326456 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$222 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$222(G__326235,G__326236,G__326237,G__326238,G__326239,G__326240,G__326241,G__326242,G__326243,G__326244,G__326245,G__326246,G__326247,G__326248,G__326249,G__326250,G__326251,G__326252,G__326253,G__326254,G__326255,G__326256,G__326257,G__326258,G__326259,G__326260,G__326261,G__326262,G__326263,G__326264,G__326265,G__326266,G__326267,G__326268,G__326269,G__326270,G__326271,G__326272,G__326273,G__326274,G__326275,G__326276,G__326277,G__326278,G__326279,G__326280,G__326281,G__326282,G__326283,G__326284,G__326285,G__326286,G__326287,G__326288,G__326289,G__326290,G__326291,G__326292,G__326293,G__326294,G__326295,G__326296,G__326297,G__326298,G__326299,G__326300,G__326301,G__326302,G__326303,G__326304,G__326305,G__326306,G__326307,G__326308,G__326309,G__326310,G__326311,G__326312,G__326313,G__326314,G__326315,G__326316,G__326317,G__326318,G__326319,G__326320,G__326321,G__326322,G__326323,G__326324,G__326325,G__326326,G__326327,G__326328,G__326329,G__326330,G__326331,G__326332,G__326333,G__326334,G__326335,G__326336,G__326337,G__326338,G__326339,G__326340,G__326341,G__326342,G__326343,G__326344,G__326345,G__326346,G__326347,G__326348,G__326349,G__326350,G__326351,G__326352,G__326353,G__326354,G__326355,G__326356,G__326357,G__326358,G__326359,G__326360,G__326361,G__326362,G__326363,G__326364,G__326365,G__326366,G__326367,G__326368,G__326369,G__326370,G__326371,G__326372,G__326373,G__326374,G__326375,G__326376,G__326377,G__326378,G__326379,G__326380,G__326381,G__326382,G__326383,G__326384,G__326385,G__326386,G__326387,G__326388,G__326389,G__326390,G__326391,G__326392,G__326393,G__326394,G__326395,G__326396,G__326397,G__326398,G__326399,G__326400,G__326401,G__326402,G__326403,G__326404,G__326405,G__326406,G__326407,G__326408,G__326409,G__326410,G__326411,G__326412,G__326413,G__326414,G__326415,G__326416,G__326417,G__326418,G__326419,G__326420,G__326421,G__326422,G__326423,G__326424,G__326425,G__326426,G__326427,G__326428,G__326429,G__326430,G__326431,G__326432,G__326433,G__326434,G__326435,G__326436,G__326437,G__326438,G__326439,G__326440,G__326441,G__326442,G__326443,G__326444,G__326445,G__326446,G__326447,G__326448,G__326449,G__326450,G__326451,G__326452,G__326453,G__326454,G__326455,G__326456) : tailrecursion.hoplon.pre.call(null,G__326235,G__326236,G__326237,G__326238,G__326239,G__326240,G__326241,G__326242,G__326243,G__326244,G__326245,G__326246,G__326247,G__326248,G__326249,G__326250,G__326251,G__326252,G__326253,G__326254,G__326255,G__326256,G__326257,G__326258,G__326259,G__326260,G__326261,G__326262,G__326263,G__326264,G__326265,G__326266,G__326267,G__326268,G__326269,G__326270,G__326271,G__326272,G__326273,G__326274,G__326275,G__326276,G__326277,G__326278,G__326279,G__326280,G__326281,G__326282,G__326283,G__326284,G__326285,G__326286,G__326287,G__326288,G__326289,G__326290,G__326291,G__326292,G__326293,G__326294,G__326295,G__326296,G__326297,G__326298,G__326299,G__326300,G__326301,G__326302,G__326303,G__326304,G__326305,G__326306,G__326307,G__326308,G__326309,G__326310,G__326311,G__326312,G__326313,G__326314,G__326315,G__326316,G__326317,G__326318,G__326319,G__326320,G__326321,G__326322,G__326323,G__326324,G__326325,G__326326,G__326327,G__326328,G__326329,G__326330,G__326331,G__326332,G__326333,G__326334,G__326335,G__326336,G__326337,G__326338,G__326339,G__326340,G__326341,G__326342,G__326343,G__326344,G__326345,G__326346,G__326347,G__326348,G__326349,G__326350,G__326351,G__326352,G__326353,G__326354,G__326355,G__326356,G__326357,G__326358,G__326359,G__326360,G__326361,G__326362,G__326363,G__326364,G__326365,G__326366,G__326367,G__326368,G__326369,G__326370,G__326371,G__326372,G__326373,G__326374,G__326375,G__326376,G__326377,G__326378,G__326379,G__326380,G__326381,G__326382,G__326383,G__326384,G__326385,G__326386,G__326387,G__326388,G__326389,G__326390,G__326391,G__326392,G__326393,G__326394,G__326395,G__326396,G__326397,G__326398,G__326399,G__326400,G__326401,G__326402,G__326403,G__326404,G__326405,G__326406,G__326407,G__326408,G__326409,G__326410,G__326411,G__326412,G__326413,G__326414,G__326415,G__326416,G__326417,G__326418,G__326419,G__326420,G__326421,G__326422,G__326423,G__326424,G__326425,G__326426,G__326427,G__326428,G__326429,G__326430,G__326431,G__326432,G__326433,G__326434,G__326435,G__326436,G__326437,G__326438,G__326439,G__326440,G__326441,G__326442,G__326443,G__326444,G__326445,G__326446,G__326447,G__326448,G__326449,G__326450,G__326451,G__326452,G__326453,G__326454,G__326455,G__326456));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__326233,G__326234) : tailrecursion.hoplon.div.call(null,G__326233,G__326234));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__326232) : tailrecursion.hoplon.div.call(null,G__326232));
})(),(function (){var G__326707 = cljs.core.PersistentArrayMap.EMPTY;
var G__326708 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["After this, our expression should be in prefix notation with only two arguments for each operation, so we can use procedures supplied in the book. If you are unclear about what I did here (with ",(function (){var G__326709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"->>"], null);
var G__326710 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326709,G__326710) : tailrecursion.hoplon.markdown.code_node.call(null,G__326709,G__326710));
})(),") look up Clojure",(function (){var G__326711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__326712 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__326711,G__326712) : tailrecursion.hoplon.markdown.simple_node.call(null,G__326711,G__326712));
})(),"s ",(function (){var G__326713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__326714 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["threading macro"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__326713,G__326714) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__326713,G__326714));
})()," or shoot me an email and I",(function (){var G__326715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__326716 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__326715,G__326716) : tailrecursion.hoplon.markdown.simple_node.call(null,G__326715,G__326716));
})(),"ll be happy to clarify things. Again, I would appreciate hearing exactly what is unclear so that I can make this site as clear as possible for future readers. So don",(function (){var G__326717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__326718 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__326717,G__326718) : tailrecursion.hoplon.markdown.simple_node.call(null,G__326717,G__326718));
})(),"t be shy! Email me! (My email address is in the footer)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__326707,G__326708) : tailrecursion.hoplon.markdown.para_node.call(null,G__326707,G__326708));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_325749;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_325748;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_325747;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_325746;
}})()], 0))], 0))], 0));
var G__319883 = "";
var G__319884 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Example: Representing Sets"], null),(function (){var _STAR_references_STAR_326719 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_326720 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_326721 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_326722 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__326723 = cljs.core.PersistentArrayMap.EMPTY;
var G__326724 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In the previous examples we built representations for two kinds of compound data objects: rational numbers and algebraic expressions. In one of these examples we had the choice of simplifying (reducing) the expressions at either construction time or selection time, but other than that the choice of a representation for these structures in terms of lists was straightforward. When we turn to the representation of sets, the choice of a representation is not so obvious. Indeed, there are a number of possible representations, and they differ significantly from one another in several ways."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__326723,G__326724) : tailrecursion.hoplon.markdown.para_node.call(null,G__326723,G__326724));
})(),(function (){var G__326725 = cljs.core.PersistentArrayMap.EMPTY;
var G__326726 = new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Informally, a set is simply a collection of distinct objects. To give a more precise definition we can employ the method of data abstraction. That is, we define ",(function (){var G__326727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__326728 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["set"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__326727,G__326728) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__326727,G__326728));
})()," by specifying the operations that are to be used on sets. These are ",(function (){var G__326729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"union-set"], null);
var G__326730 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326729,G__326730) : tailrecursion.hoplon.markdown.code_node.call(null,G__326729,G__326730));
})(),", ",(function (){var G__326731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-set"], null);
var G__326732 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326731,G__326732) : tailrecursion.hoplon.markdown.code_node.call(null,G__326731,G__326732));
})(),", ",(function (){var G__326733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__326734 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326733,G__326734) : tailrecursion.hoplon.markdown.code_node.call(null,G__326733,G__326734));
})(),", and ",(function (){var G__326735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__326736 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326735,G__326736) : tailrecursion.hoplon.markdown.code_node.call(null,G__326735,G__326736));
})(),". ",(function (){var G__326737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"Element-of-set?"], null);
var G__326738 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326737,G__326738) : tailrecursion.hoplon.markdown.code_node.call(null,G__326737,G__326738));
})()," is a predicate that determines whether a given element is a member of a set. ",(function (){var G__326739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"Adjoin-set"], null);
var G__326740 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326739,G__326740) : tailrecursion.hoplon.markdown.code_node.call(null,G__326739,G__326740));
})()," takes an object and a set as arguments and returns a set that contains the elements of the original set and also the adjoined element. ",(function (){var G__326741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"Union-set"], null);
var G__326742 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326741,G__326742) : tailrecursion.hoplon.markdown.code_node.call(null,G__326741,G__326742));
})()," computes the union of two sets, which is the set containing each element that appears in either argument. ",(function (){var G__326743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"Intersection-set"], null);
var G__326744 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326743,G__326744) : tailrecursion.hoplon.markdown.code_node.call(null,G__326743,G__326744));
})()," computes the intersection of two sets, which is the set containing only elements that appear in both arguments. From the viewpoint of data abstraction, we are free to design any representation that implements these operations in a way consistent with the interpretations given above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__326725,G__326726) : tailrecursion.hoplon.markdown.para_node.call(null,G__326725,G__326726));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_326722;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_326721;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_326720;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_326719;
}})()], 0));
var G__319885 = "";
var G__319886 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Sets as Unordered Lists"], null),(function (){var _STAR_references_STAR_326745 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_326746 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_326747 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_326748 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__326749 = cljs.core.PersistentArrayMap.EMPTY;
var G__326750 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One way to represent a set is as a list of its elements in which no element appears more than once. The empty set is represented by the empty list. In this representation, ",(function (){var G__326751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__326752 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326751,G__326752) : tailrecursion.hoplon.markdown.code_node.call(null,G__326751,G__326752));
})()," is similar to the procedure ",(function (){var G__326753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"memq"], null);
var G__326754 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326753,G__326754) : tailrecursion.hoplon.markdown.code_node.call(null,G__326753,G__326754));
})()," of section 2.3.1."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__326749,G__326750) : tailrecursion.hoplon.markdown.para_node.call(null,G__326749,G__326750));
})(),(function (){var G__326835 = (function (){var G__326836 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__326837 = (function (){var G__326838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__326839 = "(";
var G__326840 = (function (){var G__326876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__326877 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326876,G__326877) : tailrecursion.hoplon.span.call(null,G__326876,G__326877));
})();
var G__326841 = (function (){var G__326878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326879 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326878,G__326879) : tailrecursion.hoplon.span.call(null,G__326878,G__326879));
})();
var G__326842 = " [";
var G__326843 = (function (){var G__326880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326881 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326880,G__326881) : tailrecursion.hoplon.span.call(null,G__326880,G__326881));
})();
var G__326844 = " ";
var G__326845 = (function (){var G__326882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326883 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326882,G__326883) : tailrecursion.hoplon.span.call(null,G__326882,G__326883));
})();
var G__326846 = "]\n  (";
var G__326847 = (function (){var G__326884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__326885 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326884,G__326885) : tailrecursion.hoplon.span.call(null,G__326884,G__326885));
})();
var G__326848 = "[";
var G__326849 = (function (){var G__326886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326887 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326886,G__326887) : tailrecursion.hoplon.span.call(null,G__326886,G__326887));
})();
var G__326850 = " ";
var G__326851 = (function (){var G__326888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326889 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326888,G__326889) : tailrecursion.hoplon.span.call(null,G__326888,G__326889));
})();
var G__326852 = "]\n    (";
var G__326853 = (function (){var G__326890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326891 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326890,G__326891) : tailrecursion.hoplon.span.call(null,G__326890,G__326891));
})();
var G__326854 = "(";
var G__326855 = (function (){var G__326892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326893 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326892,G__326893) : tailrecursion.hoplon.span.call(null,G__326892,G__326893));
})();
var G__326856 = " ";
var G__326857 = (function (){var G__326894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326895 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326894,G__326895) : tailrecursion.hoplon.span.call(null,G__326894,G__326895));
})();
var G__326858 = ") ";
var G__326859 = (function (){var G__326896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326897 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326896,G__326897) : tailrecursion.hoplon.span.call(null,G__326896,G__326897));
})();
var G__326860 = "\n          (";
var G__326861 = (function (){var G__326898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326899 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326898,G__326899) : tailrecursion.hoplon.span.call(null,G__326898,G__326899));
})();
var G__326862 = (function (){var G__326900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326901 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326900,G__326901) : tailrecursion.hoplon.span.call(null,G__326900,G__326901));
})();
var G__326863 = " (";
var G__326864 = (function (){var G__326902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326903 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326902,G__326903) : tailrecursion.hoplon.span.call(null,G__326902,G__326903));
})();
var G__326865 = (function (){var G__326904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326905 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326904,G__326905) : tailrecursion.hoplon.span.call(null,G__326904,G__326905));
})();
var G__326866 = ")) ";
var G__326867 = (function (){var G__326906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326907 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326906,G__326907) : tailrecursion.hoplon.span.call(null,G__326906,G__326907));
})();
var G__326868 = "\n          ";
var G__326869 = (function (){var G__326908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326909 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326908,G__326909) : tailrecursion.hoplon.span.call(null,G__326908,G__326909));
})();
var G__326870 = "  (";
var G__326871 = (function (){var G__326910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__326911 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326910,G__326911) : tailrecursion.hoplon.span.call(null,G__326910,G__326911));
})();
var G__326872 = " (";
var G__326873 = (function (){var G__326912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__326913 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326912,G__326913) : tailrecursion.hoplon.span.call(null,G__326912,G__326913));
})();
var G__326874 = (function (){var G__326914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326915 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326914,G__326915) : tailrecursion.hoplon.span.call(null,G__326914,G__326915));
})();
var G__326875 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38(G__326838,G__326839,G__326840,G__326841,G__326842,G__326843,G__326844,G__326845,G__326846,G__326847,G__326848,G__326849,G__326850,G__326851,G__326852,G__326853,G__326854,G__326855,G__326856,G__326857,G__326858,G__326859,G__326860,G__326861,G__326862,G__326863,G__326864,G__326865,G__326866,G__326867,G__326868,G__326869,G__326870,G__326871,G__326872,G__326873,G__326874,G__326875) : tailrecursion.hoplon.pre.call(null,G__326838,G__326839,G__326840,G__326841,G__326842,G__326843,G__326844,G__326845,G__326846,G__326847,G__326848,G__326849,G__326850,G__326851,G__326852,G__326853,G__326854,G__326855,G__326856,G__326857,G__326858,G__326859,G__326860,G__326861,G__326862,G__326863,G__326864,G__326865,G__326866,G__326867,G__326868,G__326869,G__326870,G__326871,G__326872,G__326873,G__326874,G__326875));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__326836,G__326837) : tailrecursion.hoplon.div.call(null,G__326836,G__326837));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__326835) : tailrecursion.hoplon.div.call(null,G__326835));
})(),(function (){var G__326916 = cljs.core.PersistentArrayMap.EMPTY;
var G__326917 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using this, we can write ",(function (){var G__326918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__326919 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326918,G__326919) : tailrecursion.hoplon.markdown.code_node.call(null,G__326918,G__326919));
})(),". If the object to be adjoined is already in the set, we just return the set. Otherwise, we use ",(function (){var G__326920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__326921 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__326920,G__326921) : tailrecursion.hoplon.markdown.code_node.call(null,G__326920,G__326921));
})()," to add the object to the list that represents the set:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__326916,G__326917) : tailrecursion.hoplon.markdown.para_node.call(null,G__326916,G__326917));
})(),(function (){var G__326968 = (function (){var G__326969 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__326970 = (function (){var G__326971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__326972 = "(";
var G__326973 = (function (){var G__326993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__326994 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326993,G__326994) : tailrecursion.hoplon.span.call(null,G__326993,G__326994));
})();
var G__326974 = (function (){var G__326995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326996 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326995,G__326996) : tailrecursion.hoplon.span.call(null,G__326995,G__326996));
})();
var G__326975 = " [";
var G__326976 = (function (){var G__326997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__326998 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326997,G__326998) : tailrecursion.hoplon.span.call(null,G__326997,G__326998));
})();
var G__326977 = " ";
var G__326978 = (function (){var G__326999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327000 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__326999,G__327000) : tailrecursion.hoplon.span.call(null,G__326999,G__327000));
})();
var G__326979 = "]\n  (";
var G__326980 = (function (){var G__327001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__327002 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327001,G__327002) : tailrecursion.hoplon.span.call(null,G__327001,G__327002));
})();
var G__326981 = "(";
var G__326982 = (function (){var G__327003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327004 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327003,G__327004) : tailrecursion.hoplon.span.call(null,G__327003,G__327004));
})();
var G__326983 = " ";
var G__326984 = (function (){var G__327005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327006 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327005,G__327006) : tailrecursion.hoplon.span.call(null,G__327005,G__327006));
})();
var G__326985 = " ";
var G__326986 = (function (){var G__327007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327008 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327007,G__327008) : tailrecursion.hoplon.span.call(null,G__327007,G__327008));
})();
var G__326987 = ")\n      ";
var G__326988 = (function (){var G__327009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327010 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327009,G__327010) : tailrecursion.hoplon.span.call(null,G__327009,G__327010));
})();
var G__326989 = "\n      (";
var G__326990 = (function (){var G__327011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327012 = "conj set ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327011,G__327012) : tailrecursion.hoplon.span.call(null,G__327011,G__327012));
})();
var G__326991 = (function (){var G__327013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327014 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327013,G__327014) : tailrecursion.hoplon.span.call(null,G__327013,G__327014));
})();
var G__326992 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__326971,G__326972,G__326973,G__326974,G__326975,G__326976,G__326977,G__326978,G__326979,G__326980,G__326981,G__326982,G__326983,G__326984,G__326985,G__326986,G__326987,G__326988,G__326989,G__326990,G__326991,G__326992) : tailrecursion.hoplon.pre.call(null,G__326971,G__326972,G__326973,G__326974,G__326975,G__326976,G__326977,G__326978,G__326979,G__326980,G__326981,G__326982,G__326983,G__326984,G__326985,G__326986,G__326987,G__326988,G__326989,G__326990,G__326991,G__326992));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__326969,G__326970) : tailrecursion.hoplon.div.call(null,G__326969,G__326970));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__326968) : tailrecursion.hoplon.div.call(null,G__326968));
})(),(function (){var G__327015 = cljs.core.PersistentArrayMap.EMPTY;
var G__327016 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For ",(function (){var G__327017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-of-set"], null);
var G__327018 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327017,G__327018) : tailrecursion.hoplon.markdown.code_node.call(null,G__327017,G__327018));
})()," we can use a recursive strategy. If we know how to form the intersection of ",(function (){var G__327019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__327020 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327019,G__327020) : tailrecursion.hoplon.markdown.code_node.call(null,G__327019,G__327020));
})()," and the ",(function (){var G__327021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__327022 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327021,G__327022) : tailrecursion.hoplon.markdown.code_node.call(null,G__327021,G__327022));
})()," of ",(function (){var G__327023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__327024 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327023,G__327024) : tailrecursion.hoplon.markdown.code_node.call(null,G__327023,G__327024));
})(),", we only need to decide whether to include the ",(function (){var G__327025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__327026 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327025,G__327026) : tailrecursion.hoplon.markdown.code_node.call(null,G__327025,G__327026));
})()," of ",(function (){var G__327027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__327028 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327027,G__327028) : tailrecursion.hoplon.markdown.code_node.call(null,G__327027,G__327028));
})()," in this. But this depends on whether ",(function (){var G__327029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first set1)"], null);
var G__327030 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327029,G__327030) : tailrecursion.hoplon.markdown.code_node.call(null,G__327029,G__327030));
})()," is also in ",(function (){var G__327031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__327032 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327031,G__327032) : tailrecursion.hoplon.markdown.code_node.call(null,G__327031,G__327032));
})(),". Here is the resulting procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__327015,G__327016) : tailrecursion.hoplon.markdown.para_node.call(null,G__327015,G__327016));
})(),(function (){var G__327140 = (function (){var G__327141 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__327142 = (function (){var G__327143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__327144 = "(";
var G__327145 = (function (){var G__327194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__327195 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327194,G__327195) : tailrecursion.hoplon.span.call(null,G__327194,G__327195));
})();
var G__327146 = (function (){var G__327196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327197 = "intersection-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327196,G__327197) : tailrecursion.hoplon.span.call(null,G__327196,G__327197));
})();
var G__327147 = " [";
var G__327148 = (function (){var G__327198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327199 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327198,G__327199) : tailrecursion.hoplon.span.call(null,G__327198,G__327199));
})();
var G__327149 = " ";
var G__327150 = (function (){var G__327200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327201 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327200,G__327201) : tailrecursion.hoplon.span.call(null,G__327200,G__327201));
})();
var G__327151 = "]\n  (";
var G__327152 = (function (){var G__327202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327203 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327202,G__327203) : tailrecursion.hoplon.span.call(null,G__327202,G__327203));
})();
var G__327153 = "(";
var G__327154 = (function (){var G__327204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327205 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327204,G__327205) : tailrecursion.hoplon.span.call(null,G__327204,G__327205));
})();
var G__327155 = "(";
var G__327156 = (function (){var G__327206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327207 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327206,G__327207) : tailrecursion.hoplon.span.call(null,G__327206,G__327207));
})();
var G__327157 = " ";
var G__327158 = (function (){var G__327208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327209 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327208,G__327209) : tailrecursion.hoplon.span.call(null,G__327208,G__327209));
})();
var G__327159 = ") (";
var G__327160 = (function (){var G__327210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327211 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327210,G__327211) : tailrecursion.hoplon.span.call(null,G__327210,G__327211));
})();
var G__327161 = " ";
var G__327162 = (function (){var G__327212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327213 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327212,G__327213) : tailrecursion.hoplon.span.call(null,G__327212,G__327213));
})();
var G__327163 = ")) ";
var G__327164 = (function (){var G__327214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__327215 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327214,G__327215) : tailrecursion.hoplon.span.call(null,G__327214,G__327215));
})();
var G__327165 = "()\n        (";
var G__327166 = (function (){var G__327216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327217 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327216,G__327217) : tailrecursion.hoplon.span.call(null,G__327216,G__327217));
})();
var G__327167 = " (";
var G__327168 = (function (){var G__327218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327219 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327218,G__327219) : tailrecursion.hoplon.span.call(null,G__327218,G__327219));
})();
var G__327169 = (function (){var G__327220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327221 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327220,G__327221) : tailrecursion.hoplon.span.call(null,G__327220,G__327221));
})();
var G__327170 = ") ";
var G__327171 = (function (){var G__327222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327223 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327222,G__327223) : tailrecursion.hoplon.span.call(null,G__327222,G__327223));
})();
var G__327172 = ")\n          (";
var G__327173 = (function (){var G__327224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327225 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327224,G__327225) : tailrecursion.hoplon.span.call(null,G__327224,G__327225));
})();
var G__327174 = "(";
var G__327175 = (function (){var G__327226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327227 = "intersection-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327226,G__327227) : tailrecursion.hoplon.span.call(null,G__327226,G__327227));
})();
var G__327176 = " (";
var G__327177 = (function (){var G__327228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327229 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327228,G__327229) : tailrecursion.hoplon.span.call(null,G__327228,G__327229));
})();
var G__327178 = (function (){var G__327230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327231 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327230,G__327231) : tailrecursion.hoplon.span.call(null,G__327230,G__327231));
})();
var G__327179 = ") ";
var G__327180 = (function (){var G__327232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327233 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327232,G__327233) : tailrecursion.hoplon.span.call(null,G__327232,G__327233));
})();
var G__327181 = ")\n                (";
var G__327182 = (function (){var G__327234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327235 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327234,G__327235) : tailrecursion.hoplon.span.call(null,G__327234,G__327235));
})();
var G__327183 = (function (){var G__327236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327237 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327236,G__327237) : tailrecursion.hoplon.span.call(null,G__327236,G__327237));
})();
var G__327184 = "))\n        ";
var G__327185 = (function (){var G__327238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327239 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327238,G__327239) : tailrecursion.hoplon.span.call(null,G__327238,G__327239));
})();
var G__327186 = " (";
var G__327187 = (function (){var G__327240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327241 = "intersection-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327240,G__327241) : tailrecursion.hoplon.span.call(null,G__327240,G__327241));
})();
var G__327188 = " (";
var G__327189 = (function (){var G__327242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327243 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327242,G__327243) : tailrecursion.hoplon.span.call(null,G__327242,G__327243));
})();
var G__327190 = (function (){var G__327244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327245 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327244,G__327245) : tailrecursion.hoplon.span.call(null,G__327244,G__327245));
})();
var G__327191 = ") ";
var G__327192 = (function (){var G__327246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327247 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327246,G__327247) : tailrecursion.hoplon.span.call(null,G__327246,G__327247));
})();
var G__327193 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$51 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$51(G__327143,G__327144,G__327145,G__327146,G__327147,G__327148,G__327149,G__327150,G__327151,G__327152,G__327153,G__327154,G__327155,G__327156,G__327157,G__327158,G__327159,G__327160,G__327161,G__327162,G__327163,G__327164,G__327165,G__327166,G__327167,G__327168,G__327169,G__327170,G__327171,G__327172,G__327173,G__327174,G__327175,G__327176,G__327177,G__327178,G__327179,G__327180,G__327181,G__327182,G__327183,G__327184,G__327185,G__327186,G__327187,G__327188,G__327189,G__327190,G__327191,G__327192,G__327193) : tailrecursion.hoplon.pre.call(null,G__327143,G__327144,G__327145,G__327146,G__327147,G__327148,G__327149,G__327150,G__327151,G__327152,G__327153,G__327154,G__327155,G__327156,G__327157,G__327158,G__327159,G__327160,G__327161,G__327162,G__327163,G__327164,G__327165,G__327166,G__327167,G__327168,G__327169,G__327170,G__327171,G__327172,G__327173,G__327174,G__327175,G__327176,G__327177,G__327178,G__327179,G__327180,G__327181,G__327182,G__327183,G__327184,G__327185,G__327186,G__327187,G__327188,G__327189,G__327190,G__327191,G__327192,G__327193));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__327141,G__327142) : tailrecursion.hoplon.div.call(null,G__327141,G__327142));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__327140) : tailrecursion.hoplon.div.call(null,G__327140));
})(),(function (){var G__327248 = cljs.core.PersistentArrayMap.EMPTY;
var G__327249 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Can you turn this into an iterative procedure using ",(function (){var G__327250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"loop"], null);
var G__327251 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327250,G__327251) : tailrecursion.hoplon.markdown.code_node.call(null,G__327250,G__327251));
})(),"?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__327248,G__327249) : tailrecursion.hoplon.markdown.para_node.call(null,G__327248,G__327249));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_326748;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_326747;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_326746;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_326745;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_327252 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_327253 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_327254 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_327255 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__327370 = (function (){var G__327371 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__327372 = (function (){var G__327373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__327374 = "(";
var G__327375 = (function (){var G__327427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__327428 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327427,G__327428) : tailrecursion.hoplon.span.call(null,G__327427,G__327428));
})();
var G__327376 = (function (){var G__327429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327430 = "intersection-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327429,G__327430) : tailrecursion.hoplon.span.call(null,G__327429,G__327430));
})();
var G__327377 = " [";
var G__327378 = (function (){var G__327431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327432 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327431,G__327432) : tailrecursion.hoplon.span.call(null,G__327431,G__327432));
})();
var G__327379 = " ";
var G__327380 = (function (){var G__327433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327434 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327433,G__327434) : tailrecursion.hoplon.span.call(null,G__327433,G__327434));
})();
var G__327381 = "]\n  (";
var G__327382 = (function (){var G__327435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__327436 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327435,G__327436) : tailrecursion.hoplon.span.call(null,G__327435,G__327436));
})();
var G__327383 = "[";
var G__327384 = (function (){var G__327437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327438 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327437,G__327438) : tailrecursion.hoplon.span.call(null,G__327437,G__327438));
})();
var G__327385 = "   ";
var G__327386 = (function (){var G__327439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__327440 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327439,G__327440) : tailrecursion.hoplon.span.call(null,G__327439,G__327440));
})();
var G__327387 = "()\n         ";
var G__327388 = (function (){var G__327441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327442 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327441,G__327442) : tailrecursion.hoplon.span.call(null,G__327441,G__327442));
})();
var G__327389 = " ";
var G__327390 = (function (){var G__327443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327444 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327443,G__327444) : tailrecursion.hoplon.span.call(null,G__327443,G__327444));
})();
var G__327391 = "]\n    (";
var G__327392 = (function (){var G__327445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327446 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327445,G__327446) : tailrecursion.hoplon.span.call(null,G__327445,G__327446));
})();
var G__327393 = "(";
var G__327394 = (function (){var G__327447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327448 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327447,G__327448) : tailrecursion.hoplon.span.call(null,G__327447,G__327448));
})();
var G__327395 = " ";
var G__327396 = (function (){var G__327449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327450 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327449,G__327450) : tailrecursion.hoplon.span.call(null,G__327449,G__327450));
})();
var G__327397 = ") ";
var G__327398 = (function (){var G__327451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327452 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327451,G__327452) : tailrecursion.hoplon.span.call(null,G__327451,G__327452));
})();
var G__327399 = "\n          (";
var G__327400 = (function (){var G__327453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327454 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327453,G__327454) : tailrecursion.hoplon.span.call(null,G__327453,G__327454));
})();
var G__327401 = " (";
var G__327402 = (function (){var G__327455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327456 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327455,G__327456) : tailrecursion.hoplon.span.call(null,G__327455,G__327456));
})();
var G__327403 = (function (){var G__327457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327458 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327457,G__327458) : tailrecursion.hoplon.span.call(null,G__327457,G__327458));
})();
var G__327404 = ") ";
var G__327405 = (function (){var G__327459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327460 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327459,G__327460) : tailrecursion.hoplon.span.call(null,G__327459,G__327460));
})();
var G__327406 = ") (";
var G__327407 = (function (){var G__327461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327462 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327461,G__327462) : tailrecursion.hoplon.span.call(null,G__327461,G__327462));
})();
var G__327408 = " (";
var G__327409 = (function (){var G__327463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327464 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327463,G__327464) : tailrecursion.hoplon.span.call(null,G__327463,G__327464));
})();
var G__327410 = (function (){var G__327465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327466 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327465,G__327466) : tailrecursion.hoplon.span.call(null,G__327465,G__327466));
})();
var G__327411 = " (";
var G__327412 = (function (){var G__327467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327468 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327467,G__327468) : tailrecursion.hoplon.span.call(null,G__327467,G__327468));
})();
var G__327413 = (function (){var G__327469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327470 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327469,G__327470) : tailrecursion.hoplon.span.call(null,G__327469,G__327470));
})();
var G__327414 = ")) (";
var G__327415 = (function (){var G__327471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327472 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327471,G__327472) : tailrecursion.hoplon.span.call(null,G__327471,G__327472));
})();
var G__327416 = (function (){var G__327473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327474 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327473,G__327474) : tailrecursion.hoplon.span.call(null,G__327473,G__327474));
})();
var G__327417 = "))\n          ";
var G__327418 = (function (){var G__327475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327476 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327475,G__327476) : tailrecursion.hoplon.span.call(null,G__327475,G__327476));
})();
var G__327419 = " (";
var G__327420 = (function (){var G__327477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327478 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327477,G__327478) : tailrecursion.hoplon.span.call(null,G__327477,G__327478));
})();
var G__327421 = " ";
var G__327422 = (function (){var G__327479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327480 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327479,G__327480) : tailrecursion.hoplon.span.call(null,G__327479,G__327480));
})();
var G__327423 = " (";
var G__327424 = (function (){var G__327481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327482 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327481,G__327482) : tailrecursion.hoplon.span.call(null,G__327481,G__327482));
})();
var G__327425 = (function (){var G__327483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327484 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327483,G__327484) : tailrecursion.hoplon.span.call(null,G__327483,G__327484));
})();
var G__327426 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54(G__327373,G__327374,G__327375,G__327376,G__327377,G__327378,G__327379,G__327380,G__327381,G__327382,G__327383,G__327384,G__327385,G__327386,G__327387,G__327388,G__327389,G__327390,G__327391,G__327392,G__327393,G__327394,G__327395,G__327396,G__327397,G__327398,G__327399,G__327400,G__327401,G__327402,G__327403,G__327404,G__327405,G__327406,G__327407,G__327408,G__327409,G__327410,G__327411,G__327412,G__327413,G__327414,G__327415,G__327416,G__327417,G__327418,G__327419,G__327420,G__327421,G__327422,G__327423,G__327424,G__327425,G__327426) : tailrecursion.hoplon.pre.call(null,G__327373,G__327374,G__327375,G__327376,G__327377,G__327378,G__327379,G__327380,G__327381,G__327382,G__327383,G__327384,G__327385,G__327386,G__327387,G__327388,G__327389,G__327390,G__327391,G__327392,G__327393,G__327394,G__327395,G__327396,G__327397,G__327398,G__327399,G__327400,G__327401,G__327402,G__327403,G__327404,G__327405,G__327406,G__327407,G__327408,G__327409,G__327410,G__327411,G__327412,G__327413,G__327414,G__327415,G__327416,G__327417,G__327418,G__327419,G__327420,G__327421,G__327422,G__327423,G__327424,G__327425,G__327426));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__327371,G__327372) : tailrecursion.hoplon.div.call(null,G__327371,G__327372));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__327370) : tailrecursion.hoplon.div.call(null,G__327370));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_327255;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_327254;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_327253;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_327252;
}})()], 0)),"",(function (){var _STAR_references_STAR_327485 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_327486 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_327487 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_327488 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__327489 = cljs.core.PersistentArrayMap.EMPTY;
var G__327490 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In designing a representation, one of the issues we should be concerned with is efficiency. Consider the number of steps required by our set operations. Since they all use ",(function (){var G__327491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__327492 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327491,G__327492) : tailrecursion.hoplon.markdown.code_node.call(null,G__327491,G__327492));
})(),", the speed of this operation has a major impact on the efficiency of the set implementation as a whole. Now, in order to check whether an object is a member of a set, ",(function (){var G__327493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__327494 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327493,G__327494) : tailrecursion.hoplon.markdown.code_node.call(null,G__327493,G__327494));
})()," may have to scan the entire set. (In the worst case, the object turns out not to be in the set.) Hence, if the set has \\(n\\) elements, ",(function (){var G__327495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__327496 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327495,G__327496) : tailrecursion.hoplon.markdown.code_node.call(null,G__327495,G__327496));
})()," might take up to \\(n\\) steps. Thus, the number of steps required grows as \\(\\Theta(n)\\). The number of steps required by ",(function (){var G__327497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__327498 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327497,G__327498) : tailrecursion.hoplon.markdown.code_node.call(null,G__327497,G__327498));
})(),", which uses this operation, also grows as \\(\\Theta(n)\\). For ",(function (){var G__327499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-of-set"], null);
var G__327500 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327499,G__327500) : tailrecursion.hoplon.markdown.code_node.call(null,G__327499,G__327500));
})(),", which does an ",(function (){var G__327501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__327502 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327501,G__327502) : tailrecursion.hoplon.markdown.code_node.call(null,G__327501,G__327502));
})()," check for each element of ",(function (){var G__327503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__327504 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327503,G__327504) : tailrecursion.hoplon.markdown.code_node.call(null,G__327503,G__327504));
})(),", the number of steps required grows as the product of the sizes of the sets involved, or \\(\\Theta(n^2)\\) for two sets of size \\(n\\). The same will be true of ",(function (){var G__327505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"union-set"], null);
var G__327506 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327505,G__327506) : tailrecursion.hoplon.markdown.code_node.call(null,G__327505,G__327506));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__327489,G__327490) : tailrecursion.hoplon.markdown.para_node.call(null,G__327489,G__327490));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_327488;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_327487;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_327486;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_327485;
}})()], 0));
var G__319887 = "";
var G__319888 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_327507 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_327508 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_327509 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_327510 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__327511 = cljs.core.PersistentArrayMap.EMPTY;
var G__327512 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Implement the ",(function (){var G__327513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"union-set"], null);
var G__327514 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327513,G__327514) : tailrecursion.hoplon.markdown.code_node.call(null,G__327513,G__327514));
})()," operation for the unordered-list representation of sets."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__327511,G__327512) : tailrecursion.hoplon.markdown.para_node.call(null,G__327511,G__327512));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_327510;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_327509;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_327508;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_327507;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_327515 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_327516 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_327517 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_327518 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__327633 = (function (){var G__327634 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__327635 = (function (){var G__327636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__327637 = "(";
var G__327638 = (function (){var G__327690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__327691 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327690,G__327691) : tailrecursion.hoplon.span.call(null,G__327690,G__327691));
})();
var G__327639 = (function (){var G__327692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327693 = "union-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327692,G__327693) : tailrecursion.hoplon.span.call(null,G__327692,G__327693));
})();
var G__327640 = " [";
var G__327641 = (function (){var G__327694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327695 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327694,G__327695) : tailrecursion.hoplon.span.call(null,G__327694,G__327695));
})();
var G__327642 = " ";
var G__327643 = (function (){var G__327696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327697 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327696,G__327697) : tailrecursion.hoplon.span.call(null,G__327696,G__327697));
})();
var G__327644 = "]\n  (";
var G__327645 = (function (){var G__327698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__327699 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327698,G__327699) : tailrecursion.hoplon.span.call(null,G__327698,G__327699));
})();
var G__327646 = "[";
var G__327647 = (function (){var G__327700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327701 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327700,G__327701) : tailrecursion.hoplon.span.call(null,G__327700,G__327701));
})();
var G__327648 = "   ";
var G__327649 = (function (){var G__327702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327703 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327702,G__327703) : tailrecursion.hoplon.span.call(null,G__327702,G__327703));
})();
var G__327650 = "\n         ";
var G__327651 = (function (){var G__327704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327705 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327704,G__327705) : tailrecursion.hoplon.span.call(null,G__327704,G__327705));
})();
var G__327652 = " ";
var G__327653 = (function (){var G__327706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327707 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327706,G__327707) : tailrecursion.hoplon.span.call(null,G__327706,G__327707));
})();
var G__327654 = "]\n    (";
var G__327655 = (function (){var G__327708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327709 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327708,G__327709) : tailrecursion.hoplon.span.call(null,G__327708,G__327709));
})();
var G__327656 = "(";
var G__327657 = (function (){var G__327710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327711 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327710,G__327711) : tailrecursion.hoplon.span.call(null,G__327710,G__327711));
})();
var G__327658 = " ";
var G__327659 = (function (){var G__327712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327713 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327712,G__327713) : tailrecursion.hoplon.span.call(null,G__327712,G__327713));
})();
var G__327660 = ") ";
var G__327661 = (function (){var G__327714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327715 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327714,G__327715) : tailrecursion.hoplon.span.call(null,G__327714,G__327715));
})();
var G__327662 = "\n          (";
var G__327663 = (function (){var G__327716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327717 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327716,G__327717) : tailrecursion.hoplon.span.call(null,G__327716,G__327717));
})();
var G__327664 = " (";
var G__327665 = (function (){var G__327718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327719 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327718,G__327719) : tailrecursion.hoplon.span.call(null,G__327718,G__327719));
})();
var G__327666 = (function (){var G__327720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327721 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327720,G__327721) : tailrecursion.hoplon.span.call(null,G__327720,G__327721));
})();
var G__327667 = ") ";
var G__327668 = (function (){var G__327722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327723 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327722,G__327723) : tailrecursion.hoplon.span.call(null,G__327722,G__327723));
})();
var G__327669 = ") (";
var G__327670 = (function (){var G__327724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327725 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327724,G__327725) : tailrecursion.hoplon.span.call(null,G__327724,G__327725));
})();
var G__327671 = " ";
var G__327672 = (function (){var G__327726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327727 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327726,G__327727) : tailrecursion.hoplon.span.call(null,G__327726,G__327727));
})();
var G__327673 = " (";
var G__327674 = (function (){var G__327728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327729 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327728,G__327729) : tailrecursion.hoplon.span.call(null,G__327728,G__327729));
})();
var G__327675 = (function (){var G__327730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327731 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327730,G__327731) : tailrecursion.hoplon.span.call(null,G__327730,G__327731));
})();
var G__327676 = "))\n          ";
var G__327677 = (function (){var G__327732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327733 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327732,G__327733) : tailrecursion.hoplon.span.call(null,G__327732,G__327733));
})();
var G__327678 = " (";
var G__327679 = (function (){var G__327734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327735 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327734,G__327735) : tailrecursion.hoplon.span.call(null,G__327734,G__327735));
})();
var G__327680 = " (";
var G__327681 = (function (){var G__327736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327737 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327736,G__327737) : tailrecursion.hoplon.span.call(null,G__327736,G__327737));
})();
var G__327682 = (function (){var G__327738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327739 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327738,G__327739) : tailrecursion.hoplon.span.call(null,G__327738,G__327739));
})();
var G__327683 = " (";
var G__327684 = (function (){var G__327740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327741 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327740,G__327741) : tailrecursion.hoplon.span.call(null,G__327740,G__327741));
})();
var G__327685 = (function (){var G__327742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327743 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327742,G__327743) : tailrecursion.hoplon.span.call(null,G__327742,G__327743));
})();
var G__327686 = ")) (";
var G__327687 = (function (){var G__327744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__327745 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327744,G__327745) : tailrecursion.hoplon.span.call(null,G__327744,G__327745));
})();
var G__327688 = (function (){var G__327746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327747 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327746,G__327747) : tailrecursion.hoplon.span.call(null,G__327746,G__327747));
})();
var G__327689 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54(G__327636,G__327637,G__327638,G__327639,G__327640,G__327641,G__327642,G__327643,G__327644,G__327645,G__327646,G__327647,G__327648,G__327649,G__327650,G__327651,G__327652,G__327653,G__327654,G__327655,G__327656,G__327657,G__327658,G__327659,G__327660,G__327661,G__327662,G__327663,G__327664,G__327665,G__327666,G__327667,G__327668,G__327669,G__327670,G__327671,G__327672,G__327673,G__327674,G__327675,G__327676,G__327677,G__327678,G__327679,G__327680,G__327681,G__327682,G__327683,G__327684,G__327685,G__327686,G__327687,G__327688,G__327689) : tailrecursion.hoplon.pre.call(null,G__327636,G__327637,G__327638,G__327639,G__327640,G__327641,G__327642,G__327643,G__327644,G__327645,G__327646,G__327647,G__327648,G__327649,G__327650,G__327651,G__327652,G__327653,G__327654,G__327655,G__327656,G__327657,G__327658,G__327659,G__327660,G__327661,G__327662,G__327663,G__327664,G__327665,G__327666,G__327667,G__327668,G__327669,G__327670,G__327671,G__327672,G__327673,G__327674,G__327675,G__327676,G__327677,G__327678,G__327679,G__327680,G__327681,G__327682,G__327683,G__327684,G__327685,G__327686,G__327687,G__327688,G__327689));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__327634,G__327635) : tailrecursion.hoplon.div.call(null,G__327634,G__327635));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__327633) : tailrecursion.hoplon.div.call(null,G__327633));
})(),(function (){var G__327748 = cljs.core.PersistentArrayMap.EMPTY;
var G__327749 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Or, we could take advantage of the function, ",(function (){var G__327750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"accumulate"], null);
var G__327751 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327750,G__327751) : tailrecursion.hoplon.markdown.code_node.call(null,G__327750,G__327751));
})()," we made in section 2.2.3"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__327748,G__327749) : tailrecursion.hoplon.markdown.para_node.call(null,G__327748,G__327749));
})(),(function (){var G__327799 = (function (){var G__327800 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__327801 = (function (){var G__327802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__327803 = "(";
var G__327804 = (function (){var G__327825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__327826 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327825,G__327826) : tailrecursion.hoplon.span.call(null,G__327825,G__327826));
})();
var G__327805 = (function (){var G__327827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327828 = "union-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327827,G__327828) : tailrecursion.hoplon.span.call(null,G__327827,G__327828));
})();
var G__327806 = " [";
var G__327807 = (function (){var G__327829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327830 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327829,G__327830) : tailrecursion.hoplon.span.call(null,G__327829,G__327830));
})();
var G__327808 = " ";
var G__327809 = (function (){var G__327831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327832 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327831,G__327832) : tailrecursion.hoplon.span.call(null,G__327831,G__327832));
})();
var G__327810 = "]\n  (";
var G__327811 = (function (){var G__327833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327834 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327833,G__327834) : tailrecursion.hoplon.span.call(null,G__327833,G__327834));
})();
var G__327812 = " ";
var G__327813 = (function (){var G__327835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__327836 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327835,G__327836) : tailrecursion.hoplon.span.call(null,G__327835,G__327836));
})();
var G__327814 = "(";
var G__327815 = (function (){var G__327837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__327838 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327837,G__327838) : tailrecursion.hoplon.span.call(null,G__327837,G__327838));
})();
var G__327816 = " ";
var G__327817 = (function (){var G__327839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327840 = "%1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327839,G__327840) : tailrecursion.hoplon.span.call(null,G__327839,G__327840));
})();
var G__327818 = " ";
var G__327819 = (function (){var G__327841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327842 = "%2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327841,G__327842) : tailrecursion.hoplon.span.call(null,G__327841,G__327842));
})();
var G__327820 = ")\n              ";
var G__327821 = (function (){var G__327843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327844 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327843,G__327844) : tailrecursion.hoplon.span.call(null,G__327843,G__327844));
})();
var G__327822 = "\n              ";
var G__327823 = (function (){var G__327845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__327846 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__327845,G__327846) : tailrecursion.hoplon.span.call(null,G__327845,G__327846));
})();
var G__327824 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__327802,G__327803,G__327804,G__327805,G__327806,G__327807,G__327808,G__327809,G__327810,G__327811,G__327812,G__327813,G__327814,G__327815,G__327816,G__327817,G__327818,G__327819,G__327820,G__327821,G__327822,G__327823,G__327824) : tailrecursion.hoplon.pre.call(null,G__327802,G__327803,G__327804,G__327805,G__327806,G__327807,G__327808,G__327809,G__327810,G__327811,G__327812,G__327813,G__327814,G__327815,G__327816,G__327817,G__327818,G__327819,G__327820,G__327821,G__327822,G__327823,G__327824));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__327800,G__327801) : tailrecursion.hoplon.div.call(null,G__327800,G__327801));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__327799) : tailrecursion.hoplon.div.call(null,G__327799));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_327518;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_327517;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_327516;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_327515;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_327847 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_327848 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_327849 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_327850 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__327851 = cljs.core.PersistentArrayMap.EMPTY;
var G__327852 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We specified that a set would be represented as a list with no diplicates. Now suppose we allow duplicates. For instance, the set \\({1,2,3}\\) could be represented as the list ",(function (){var G__327853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(2 3 2 1 3 2 2)"], null);
var G__327854 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327853,G__327854) : tailrecursion.hoplon.markdown.code_node.call(null,G__327853,G__327854));
})(),". Design procedures ",(function (){var G__327855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__327856 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327855,G__327856) : tailrecursion.hoplon.markdown.code_node.call(null,G__327855,G__327856));
})(),", ",(function (){var G__327857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__327858 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327857,G__327858) : tailrecursion.hoplon.markdown.code_node.call(null,G__327857,G__327858));
})(),", ",(function (){var G__327859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"union-set"], null);
var G__327860 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327859,G__327860) : tailrecursion.hoplon.markdown.code_node.call(null,G__327859,G__327860));
})(),", and ",(function (){var G__327861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-set"], null);
var G__327862 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__327861,G__327862) : tailrecursion.hoplon.markdown.code_node.call(null,G__327861,G__327862));
})()," that operation on this representation. How does the efficiency of each compare with the corresponding procedure for the non-duplicate representation? Are there applications for which you would use this representatioin in preference to the non-duplicate one?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__327851,G__327852) : tailrecursion.hoplon.markdown.para_node.call(null,G__327851,G__327852));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_327850;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_327849;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_327848;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_327847;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_327863 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_327864 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_327865 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_327866 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__327867 = cljs.core.PersistentArrayMap.EMPTY;
var G__327868 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__327869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__327870 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__327869,G__327870) : tailrecursion.hoplon.markdown.simple_node.call(null,G__327869,G__327870));
})(),"s use some of Clojure Core",(function (){var G__327871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__327872 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__327871,G__327872) : tailrecursion.hoplon.markdown.simple_node.call(null,G__327871,G__327872));
})(),"s functions for this. We",(function (){var G__327873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__327874 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__327873,G__327874) : tailrecursion.hoplon.markdown.simple_node.call(null,G__327873,G__327874));
})(),"ll have to make some assumptions about their efficiency (you can look this up if you",(function (){var G__327875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__327876 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__327875,G__327876) : tailrecursion.hoplon.markdown.simple_node.call(null,G__327875,G__327876));
})(),"re actually interested)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__327867,G__327868) : tailrecursion.hoplon.markdown.para_node.call(null,G__327867,G__327868));
})(),(function (){var G__328116 = (function (){var G__328117 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__328118 = (function (){var G__328119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__328120 = "(";
var G__328121 = (function (){var G__328232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__328233 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328232,G__328233) : tailrecursion.hoplon.span.call(null,G__328232,G__328233));
})();
var G__328122 = (function (){var G__328234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328235 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328234,G__328235) : tailrecursion.hoplon.span.call(null,G__328234,G__328235));
})();
var G__328123 = " [";
var G__328124 = (function (){var G__328236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328237 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328236,G__328237) : tailrecursion.hoplon.span.call(null,G__328236,G__328237));
})();
var G__328125 = " ";
var G__328126 = (function (){var G__328238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328239 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328238,G__328239) : tailrecursion.hoplon.span.call(null,G__328238,G__328239));
})();
var G__328127 = "]\n  (";
var G__328128 = (function (){var G__328240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__328241 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328240,G__328241) : tailrecursion.hoplon.span.call(null,G__328240,G__328241));
})();
var G__328129 = "[";
var G__328130 = (function (){var G__328242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328243 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328242,G__328243) : tailrecursion.hoplon.span.call(null,G__328242,G__328243));
})();
var G__328131 = " ";
var G__328132 = (function (){var G__328244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328245 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328244,G__328245) : tailrecursion.hoplon.span.call(null,G__328244,G__328245));
})();
var G__328133 = "]\n    (";
var G__328134 = (function (){var G__328246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328247 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328246,G__328247) : tailrecursion.hoplon.span.call(null,G__328246,G__328247));
})();
var G__328135 = "(";
var G__328136 = (function (){var G__328248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__328249 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328248,G__328249) : tailrecursion.hoplon.span.call(null,G__328248,G__328249));
})();
var G__328137 = " ";
var G__328138 = (function (){var G__328250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328251 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328250,G__328251) : tailrecursion.hoplon.span.call(null,G__328250,G__328251));
})();
var G__328139 = ") ";
var G__328140 = (function (){var G__328252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328253 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328252,G__328253) : tailrecursion.hoplon.span.call(null,G__328252,G__328253));
})();
var G__328141 = "\n          (";
var G__328142 = (function (){var G__328254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328255 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328254,G__328255) : tailrecursion.hoplon.span.call(null,G__328254,G__328255));
})();
var G__328143 = "(";
var G__328144 = (function (){var G__328256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328257 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328256,G__328257) : tailrecursion.hoplon.span.call(null,G__328256,G__328257));
})();
var G__328145 = (function (){var G__328258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328259 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328258,G__328259) : tailrecursion.hoplon.span.call(null,G__328258,G__328259));
})();
var G__328146 = ") ";
var G__328147 = (function (){var G__328260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328261 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328260,G__328261) : tailrecursion.hoplon.span.call(null,G__328260,G__328261));
})();
var G__328148 = ") ";
var G__328149 = (function (){var G__328262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328263 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328262,G__328263) : tailrecursion.hoplon.span.call(null,G__328262,G__328263));
})();
var G__328150 = "\n          ";
var G__328151 = (function (){var G__328264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328265 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328264,G__328265) : tailrecursion.hoplon.span.call(null,G__328264,G__328265));
})();
var G__328152 = " (";
var G__328153 = (function (){var G__328266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__328267 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328266,G__328267) : tailrecursion.hoplon.span.call(null,G__328266,G__328267));
})();
var G__328154 = " (";
var G__328155 = (function (){var G__328268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328269 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328268,G__328269) : tailrecursion.hoplon.span.call(null,G__328268,G__328269));
})();
var G__328156 = (function (){var G__328270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328271 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328270,G__328271) : tailrecursion.hoplon.span.call(null,G__328270,G__328271));
})();
var G__328157 = ")))))\n\n(";
var G__328158 = (function (){var G__328272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__328273 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328272,G__328273) : tailrecursion.hoplon.span.call(null,G__328272,G__328273));
})();
var G__328159 = (function (){var G__328274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328275 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328274,G__328275) : tailrecursion.hoplon.span.call(null,G__328274,G__328275));
})();
var G__328160 = " [";
var G__328161 = (function (){var G__328276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328277 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328276,G__328277) : tailrecursion.hoplon.span.call(null,G__328276,G__328277));
})();
var G__328162 = " ";
var G__328163 = (function (){var G__328278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328279 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328278,G__328279) : tailrecursion.hoplon.span.call(null,G__328278,G__328279));
})();
var G__328164 = "]\n  (";
var G__328165 = (function (){var G__328280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328281 = "conj set ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328280,G__328281) : tailrecursion.hoplon.span.call(null,G__328280,G__328281));
})();
var G__328166 = (function (){var G__328282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328283 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328282,G__328283) : tailrecursion.hoplon.span.call(null,G__328282,G__328283));
})();
var G__328167 = "))\n\n(";
var G__328168 = (function (){var G__328284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__328285 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328284,G__328285) : tailrecursion.hoplon.span.call(null,G__328284,G__328285));
})();
var G__328169 = (function (){var G__328286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328287 = "intersection-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328286,G__328287) : tailrecursion.hoplon.span.call(null,G__328286,G__328287));
})();
var G__328170 = " [";
var G__328171 = (function (){var G__328288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328289 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328288,G__328289) : tailrecursion.hoplon.span.call(null,G__328288,G__328289));
})();
var G__328172 = " ";
var G__328173 = (function (){var G__328290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328291 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328290,G__328291) : tailrecursion.hoplon.span.call(null,G__328290,G__328291));
})();
var G__328174 = "]\n  (";
var G__328175 = (function (){var G__328292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__328293 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328292,G__328293) : tailrecursion.hoplon.span.call(null,G__328292,G__328293));
})();
var G__328176 = "[";
var G__328177 = (function (){var G__328294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328295 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328294,G__328295) : tailrecursion.hoplon.span.call(null,G__328294,G__328295));
})();
var G__328178 = "   ";
var G__328179 = (function (){var G__328296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__328297 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328296,G__328297) : tailrecursion.hoplon.span.call(null,G__328296,G__328297));
})();
var G__328180 = "()\n         ";
var G__328181 = (function (){var G__328298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328299 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328298,G__328299) : tailrecursion.hoplon.span.call(null,G__328298,G__328299));
})();
var G__328182 = " ";
var G__328183 = (function (){var G__328300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328301 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328300,G__328301) : tailrecursion.hoplon.span.call(null,G__328300,G__328301));
})();
var G__328184 = "]\n    (";
var G__328185 = (function (){var G__328302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328303 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328302,G__328303) : tailrecursion.hoplon.span.call(null,G__328302,G__328303));
})();
var G__328186 = "(";
var G__328187 = (function (){var G__328304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__328305 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328304,G__328305) : tailrecursion.hoplon.span.call(null,G__328304,G__328305));
})();
var G__328188 = " ";
var G__328189 = (function (){var G__328306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328307 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328306,G__328307) : tailrecursion.hoplon.span.call(null,G__328306,G__328307));
})();
var G__328190 = ") ";
var G__328191 = (function (){var G__328308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328309 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328308,G__328309) : tailrecursion.hoplon.span.call(null,G__328308,G__328309));
})();
var G__328192 = "\n          (";
var G__328193 = (function (){var G__328310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__328311 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328310,G__328311) : tailrecursion.hoplon.span.call(null,G__328310,G__328311));
})();
var G__328194 = " (";
var G__328195 = (function (){var G__328312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328313 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328312,G__328313) : tailrecursion.hoplon.span.call(null,G__328312,G__328313));
})();
var G__328196 = (function (){var G__328314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328315 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328314,G__328315) : tailrecursion.hoplon.span.call(null,G__328314,G__328315));
})();
var G__328197 = ") ";
var G__328198 = (function (){var G__328316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328317 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328316,G__328317) : tailrecursion.hoplon.span.call(null,G__328316,G__328317));
})();
var G__328199 = ") (";
var G__328200 = (function (){var G__328318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__328319 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328318,G__328319) : tailrecursion.hoplon.span.call(null,G__328318,G__328319));
})();
var G__328201 = " (";
var G__328202 = (function (){var G__328320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328321 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328320,G__328321) : tailrecursion.hoplon.span.call(null,G__328320,G__328321));
})();
var G__328203 = (function (){var G__328322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328323 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328322,G__328323) : tailrecursion.hoplon.span.call(null,G__328322,G__328323));
})();
var G__328204 = " (";
var G__328205 = (function (){var G__328324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328325 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328324,G__328325) : tailrecursion.hoplon.span.call(null,G__328324,G__328325));
})();
var G__328206 = (function (){var G__328326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328327 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328326,G__328327) : tailrecursion.hoplon.span.call(null,G__328326,G__328327));
})();
var G__328207 = ")) (";
var G__328208 = (function (){var G__328328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328329 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328328,G__328329) : tailrecursion.hoplon.span.call(null,G__328328,G__328329));
})();
var G__328209 = (function (){var G__328330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328331 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328330,G__328331) : tailrecursion.hoplon.span.call(null,G__328330,G__328331));
})();
var G__328210 = "))\n          ";
var G__328211 = (function (){var G__328332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328333 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328332,G__328333) : tailrecursion.hoplon.span.call(null,G__328332,G__328333));
})();
var G__328212 = " (";
var G__328213 = (function (){var G__328334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__328335 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328334,G__328335) : tailrecursion.hoplon.span.call(null,G__328334,G__328335));
})();
var G__328214 = " ";
var G__328215 = (function (){var G__328336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328337 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328336,G__328337) : tailrecursion.hoplon.span.call(null,G__328336,G__328337));
})();
var G__328216 = " (";
var G__328217 = (function (){var G__328338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328339 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328338,G__328339) : tailrecursion.hoplon.span.call(null,G__328338,G__328339));
})();
var G__328218 = (function (){var G__328340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328341 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328340,G__328341) : tailrecursion.hoplon.span.call(null,G__328340,G__328341));
})();
var G__328219 = ")))))\n\n(";
var G__328220 = (function (){var G__328342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__328343 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328342,G__328343) : tailrecursion.hoplon.span.call(null,G__328342,G__328343));
})();
var G__328221 = (function (){var G__328344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328345 = "union-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328344,G__328345) : tailrecursion.hoplon.span.call(null,G__328344,G__328345));
})();
var G__328222 = " [";
var G__328223 = (function (){var G__328346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328347 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328346,G__328347) : tailrecursion.hoplon.span.call(null,G__328346,G__328347));
})();
var G__328224 = " ";
var G__328225 = (function (){var G__328348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328349 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328348,G__328349) : tailrecursion.hoplon.span.call(null,G__328348,G__328349));
})();
var G__328226 = "]\n  (";
var G__328227 = (function (){var G__328350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328351 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328350,G__328351) : tailrecursion.hoplon.span.call(null,G__328350,G__328351));
})();
var G__328228 = (function (){var G__328352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328353 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328352,G__328353) : tailrecursion.hoplon.span.call(null,G__328352,G__328353));
})();
var G__328229 = " ";
var G__328230 = (function (){var G__328354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328355 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328354,G__328355) : tailrecursion.hoplon.span.call(null,G__328354,G__328355));
})();
var G__328231 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$113 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$113(G__328119,G__328120,G__328121,G__328122,G__328123,G__328124,G__328125,G__328126,G__328127,G__328128,G__328129,G__328130,G__328131,G__328132,G__328133,G__328134,G__328135,G__328136,G__328137,G__328138,G__328139,G__328140,G__328141,G__328142,G__328143,G__328144,G__328145,G__328146,G__328147,G__328148,G__328149,G__328150,G__328151,G__328152,G__328153,G__328154,G__328155,G__328156,G__328157,G__328158,G__328159,G__328160,G__328161,G__328162,G__328163,G__328164,G__328165,G__328166,G__328167,G__328168,G__328169,G__328170,G__328171,G__328172,G__328173,G__328174,G__328175,G__328176,G__328177,G__328178,G__328179,G__328180,G__328181,G__328182,G__328183,G__328184,G__328185,G__328186,G__328187,G__328188,G__328189,G__328190,G__328191,G__328192,G__328193,G__328194,G__328195,G__328196,G__328197,G__328198,G__328199,G__328200,G__328201,G__328202,G__328203,G__328204,G__328205,G__328206,G__328207,G__328208,G__328209,G__328210,G__328211,G__328212,G__328213,G__328214,G__328215,G__328216,G__328217,G__328218,G__328219,G__328220,G__328221,G__328222,G__328223,G__328224,G__328225,G__328226,G__328227,G__328228,G__328229,G__328230,G__328231) : tailrecursion.hoplon.pre.call(null,G__328119,G__328120,G__328121,G__328122,G__328123,G__328124,G__328125,G__328126,G__328127,G__328128,G__328129,G__328130,G__328131,G__328132,G__328133,G__328134,G__328135,G__328136,G__328137,G__328138,G__328139,G__328140,G__328141,G__328142,G__328143,G__328144,G__328145,G__328146,G__328147,G__328148,G__328149,G__328150,G__328151,G__328152,G__328153,G__328154,G__328155,G__328156,G__328157,G__328158,G__328159,G__328160,G__328161,G__328162,G__328163,G__328164,G__328165,G__328166,G__328167,G__328168,G__328169,G__328170,G__328171,G__328172,G__328173,G__328174,G__328175,G__328176,G__328177,G__328178,G__328179,G__328180,G__328181,G__328182,G__328183,G__328184,G__328185,G__328186,G__328187,G__328188,G__328189,G__328190,G__328191,G__328192,G__328193,G__328194,G__328195,G__328196,G__328197,G__328198,G__328199,G__328200,G__328201,G__328202,G__328203,G__328204,G__328205,G__328206,G__328207,G__328208,G__328209,G__328210,G__328211,G__328212,G__328213,G__328214,G__328215,G__328216,G__328217,G__328218,G__328219,G__328220,G__328221,G__328222,G__328223,G__328224,G__328225,G__328226,G__328227,G__328228,G__328229,G__328230,G__328231));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__328117,G__328118) : tailrecursion.hoplon.div.call(null,G__328117,G__328118));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__328116) : tailrecursion.hoplon.div.call(null,G__328116));
})(),(function (){var G__328356 = cljs.core.PersistentArrayMap.EMPTY;
var G__328357 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This would be a useful representation for client-side computing (if we wanted to minimize client-side computation at the cost of server-side computation) where the client can only add things to sets, and never remove things (not even in the form of ",(function (){var G__328358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-set"], null);
var G__328359 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328358,G__328359) : tailrecursion.hoplon.markdown.code_node.call(null,G__328358,G__328359));
})(),"). That way everything is constant time \\(\\Theta(1)\\). For instance, if you wanted to keep a tally of the links each user clicks while on your site. Since a user cannot ",(function (){var G__328360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__328361 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["unclick"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__328360,G__328361) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__328360,G__328361));
})()," a link, we will never have a need for removing items from our set (of links clicked for this user). Anything where you need to ensure an element is not in this list is going to be costly (because we have to use ",(function (){var G__328362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__328363 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328362,G__328363) : tailrecursion.hoplon.markdown.code_node.call(null,G__328362,G__328363));
})(),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__328356,G__328357) : tailrecursion.hoplon.markdown.para_node.call(null,G__328356,G__328357));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_327866;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_327865;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_327864;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_327863;
}})()], 0))], 0))], 0));
var G__319889 = "";
var G__319890 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Sets as Ordered Lists"], null),(function (){var _STAR_references_STAR_328364 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_328365 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_328366 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_328367 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__328368 = cljs.core.PersistentArrayMap.EMPTY;
var G__328369 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["one way to speed up our set operations is to change the representation so that the set elements are listed in increasing order. To do this, we need some way to compare two objects so that we can say which is bigger. For example, we could compare symbols lexicographically, or we could agree on some method for assigning a unique number to an object and then compare the elements by comparing the corresponding numbers. To keep our discussion simple, we will consider only the case where the set elements are numbers, so that we can compare elements using \\(\\gt\\) and \\(\\lt\\). We will represent a set of numbers by listing its elements in increasing order. Whereas our first representation above allowed us to represent the set \\({1,3,6,10}\\) by listing the elements in any order, our new representation allows only the list ",(function (){var G__328370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(1\n3 6 10)"], null);
var G__328371 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328370,G__328371) : tailrecursion.hoplon.markdown.code_node.call(null,G__328370,G__328371));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__328368,G__328369) : tailrecursion.hoplon.markdown.para_node.call(null,G__328368,G__328369));
})(),(function (){var G__328372 = cljs.core.PersistentArrayMap.EMPTY;
var G__328373 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One advantage of ordering shows up in element-of-set?: In checking for the presence of an item, we no longer have to scan the entire set. If we reach a set element that is larger than the item we are looking for, then we know that the item is not in the set:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__328372,G__328373) : tailrecursion.hoplon.markdown.para_node.call(null,G__328372,G__328373));
})(),(function (){var G__328462 = (function (){var G__328463 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__328464 = (function (){var G__328465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__328466 = "(";
var G__328467 = (function (){var G__328507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__328508 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328507,G__328508) : tailrecursion.hoplon.span.call(null,G__328507,G__328508));
})();
var G__328468 = (function (){var G__328509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328510 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328509,G__328510) : tailrecursion.hoplon.span.call(null,G__328509,G__328510));
})();
var G__328469 = " [";
var G__328470 = (function (){var G__328511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328512 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328511,G__328512) : tailrecursion.hoplon.span.call(null,G__328511,G__328512));
})();
var G__328471 = " ";
var G__328472 = (function (){var G__328513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328514 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328513,G__328514) : tailrecursion.hoplon.span.call(null,G__328513,G__328514));
})();
var G__328473 = "]\n  (";
var G__328474 = (function (){var G__328515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__328516 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328515,G__328516) : tailrecursion.hoplon.span.call(null,G__328515,G__328516));
})();
var G__328475 = "[";
var G__328476 = (function (){var G__328517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328518 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328517,G__328518) : tailrecursion.hoplon.span.call(null,G__328517,G__328518));
})();
var G__328477 = " ";
var G__328478 = (function (){var G__328519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328520 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328519,G__328520) : tailrecursion.hoplon.span.call(null,G__328519,G__328520));
})();
var G__328479 = "]\n    (";
var G__328480 = (function (){var G__328521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328522 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328521,G__328522) : tailrecursion.hoplon.span.call(null,G__328521,G__328522));
})();
var G__328481 = "(";
var G__328482 = (function (){var G__328523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328524 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328523,G__328524) : tailrecursion.hoplon.span.call(null,G__328523,G__328524));
})();
var G__328483 = "(";
var G__328484 = (function (){var G__328525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328526 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328525,G__328526) : tailrecursion.hoplon.span.call(null,G__328525,G__328526));
})();
var G__328485 = (function (){var G__328527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328528 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328527,G__328528) : tailrecursion.hoplon.span.call(null,G__328527,G__328528));
})();
var G__328486 = ") ";
var G__328487 = (function (){var G__328529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328530 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328529,G__328530) : tailrecursion.hoplon.span.call(null,G__328529,G__328530));
})();
var G__328488 = ") ";
var G__328489 = (function (){var G__328531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328532 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328531,G__328532) : tailrecursion.hoplon.span.call(null,G__328531,G__328532));
})();
var G__328490 = "\n          (";
var G__328491 = (function (){var G__328533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328534 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328533,G__328534) : tailrecursion.hoplon.span.call(null,G__328533,G__328534));
})();
var G__328492 = "(";
var G__328493 = (function (){var G__328535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328536 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328535,G__328536) : tailrecursion.hoplon.span.call(null,G__328535,G__328536));
})();
var G__328494 = (function (){var G__328537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328538 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328537,G__328538) : tailrecursion.hoplon.span.call(null,G__328537,G__328538));
})();
var G__328495 = ") ";
var G__328496 = (function (){var G__328539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328540 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328539,G__328540) : tailrecursion.hoplon.span.call(null,G__328539,G__328540));
})();
var G__328497 = ") ";
var G__328498 = (function (){var G__328541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328542 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328541,G__328542) : tailrecursion.hoplon.span.call(null,G__328541,G__328542));
})();
var G__328499 = "\n          ";
var G__328500 = (function (){var G__328543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328544 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328543,G__328544) : tailrecursion.hoplon.span.call(null,G__328543,G__328544));
})();
var G__328501 = " (";
var G__328502 = (function (){var G__328545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__328546 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328545,G__328546) : tailrecursion.hoplon.span.call(null,G__328545,G__328546));
})();
var G__328503 = " (";
var G__328504 = (function (){var G__328547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328548 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328547,G__328548) : tailrecursion.hoplon.span.call(null,G__328547,G__328548));
})();
var G__328505 = (function (){var G__328549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328550 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328549,G__328550) : tailrecursion.hoplon.span.call(null,G__328549,G__328550));
})();
var G__328506 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42(G__328465,G__328466,G__328467,G__328468,G__328469,G__328470,G__328471,G__328472,G__328473,G__328474,G__328475,G__328476,G__328477,G__328478,G__328479,G__328480,G__328481,G__328482,G__328483,G__328484,G__328485,G__328486,G__328487,G__328488,G__328489,G__328490,G__328491,G__328492,G__328493,G__328494,G__328495,G__328496,G__328497,G__328498,G__328499,G__328500,G__328501,G__328502,G__328503,G__328504,G__328505,G__328506) : tailrecursion.hoplon.pre.call(null,G__328465,G__328466,G__328467,G__328468,G__328469,G__328470,G__328471,G__328472,G__328473,G__328474,G__328475,G__328476,G__328477,G__328478,G__328479,G__328480,G__328481,G__328482,G__328483,G__328484,G__328485,G__328486,G__328487,G__328488,G__328489,G__328490,G__328491,G__328492,G__328493,G__328494,G__328495,G__328496,G__328497,G__328498,G__328499,G__328500,G__328501,G__328502,G__328503,G__328504,G__328505,G__328506));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__328463,G__328464) : tailrecursion.hoplon.div.call(null,G__328463,G__328464));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__328462) : tailrecursion.hoplon.div.call(null,G__328462));
})(),(function (){var G__328551 = cljs.core.PersistentArrayMap.EMPTY;
var G__328552 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["How many steps does this save? In the worst case, the item we are looking for may be the largest one in the set, so the number of steps is the same as for the unordered representation. On the other hand, if we search for items of many different sizes we can expect that sometimes we will be able to stop searching at a point near the beginning of the list and that other times we will still need to examine most of the list. On the average we should expect to have to examine about half of the items in the set. Thus, the average number of steps required will be about \\(n/2\\). This is still \\(\\Theta(n)\\) growth, but it does save us, on the average, a factor of 2 in number of steps over the previous implementation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__328551,G__328552) : tailrecursion.hoplon.markdown.para_node.call(null,G__328551,G__328552));
})(),(function (){var G__328553 = cljs.core.PersistentArrayMap.EMPTY;
var G__328554 = cljs.core.PersistentVector.fromArray(["We obtain a more impressive speedup with ",(function (){var G__328555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-set"], null);
var G__328556 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328555,G__328556) : tailrecursion.hoplon.markdown.code_node.call(null,G__328555,G__328556));
})(),". In the unordered representation this operation required \\(\\Theta(n^2)\\) steps, because we performed a complete scan of ",(function (){var G__328557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__328558 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328557,G__328558) : tailrecursion.hoplon.markdown.code_node.call(null,G__328557,G__328558));
})()," for each element of ",(function (){var G__328559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__328560 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328559,G__328560) : tailrecursion.hoplon.markdown.code_node.call(null,G__328559,G__328560));
})(),". But with the ordered representation, we can use a more clever method. Begin by comparing the initial elements, ",(function (){var G__328561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x1"], null);
var G__328562 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328561,G__328562) : tailrecursion.hoplon.markdown.code_node.call(null,G__328561,G__328562));
})()," and ",(function (){var G__328563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x2"], null);
var G__328564 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328563,G__328564) : tailrecursion.hoplon.markdown.code_node.call(null,G__328563,G__328564));
})(),", of the two sets. If ",(function (){var G__328565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x1"], null);
var G__328566 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328565,G__328566) : tailrecursion.hoplon.markdown.code_node.call(null,G__328565,G__328566));
})()," equals ",(function (){var G__328567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x2"], null);
var G__328568 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328567,G__328568) : tailrecursion.hoplon.markdown.code_node.call(null,G__328567,G__328568));
})(),", then that gives an element of the intersection, and the rest of the intersection is the intersection of the ",(function (){var G__328569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__328570 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328569,G__328570) : tailrecursion.hoplon.markdown.code_node.call(null,G__328569,G__328570));
})()," of the two sets. Suppose, however, that ",(function (){var G__328571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x1"], null);
var G__328572 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328571,G__328572) : tailrecursion.hoplon.markdown.code_node.call(null,G__328571,G__328572));
})()," is less than ",(function (){var G__328573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x2"], null);
var G__328574 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328573,G__328574) : tailrecursion.hoplon.markdown.code_node.call(null,G__328573,G__328574));
})(),". Since ",(function (){var G__328575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x2"], null);
var G__328576 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328575,G__328576) : tailrecursion.hoplon.markdown.code_node.call(null,G__328575,G__328576));
})()," is the smallest element in ",(function (){var G__328577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__328578 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328577,G__328578) : tailrecursion.hoplon.markdown.code_node.call(null,G__328577,G__328578));
})(),", we can immediately conclude that ",(function (){var G__328579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x1"], null);
var G__328580 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328579,G__328580) : tailrecursion.hoplon.markdown.code_node.call(null,G__328579,G__328580));
})()," cannot appear anywhere in ",(function (){var G__328581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__328582 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328581,G__328582) : tailrecursion.hoplon.markdown.code_node.call(null,G__328581,G__328582));
})()," and hence is not in the intersection. Hence, the intersection is equal to the intersection of ",(function (){var G__328583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__328584 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328583,G__328584) : tailrecursion.hoplon.markdown.code_node.call(null,G__328583,G__328584));
})()," with the ",(function (){var G__328585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__328586 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328585,G__328586) : tailrecursion.hoplon.markdown.code_node.call(null,G__328585,G__328586));
})()," of ",(function (){var G__328587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__328588 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328587,G__328588) : tailrecursion.hoplon.markdown.code_node.call(null,G__328587,G__328588));
})(),". Similarly, if ",(function (){var G__328589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x2"], null);
var G__328590 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328589,G__328590) : tailrecursion.hoplon.markdown.code_node.call(null,G__328589,G__328590));
})()," is less than ",(function (){var G__328591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x1"], null);
var G__328592 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328591,G__328592) : tailrecursion.hoplon.markdown.code_node.call(null,G__328591,G__328592));
})(),", then the intersection is given by the intersection of ",(function (){var G__328593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__328594 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328593,G__328594) : tailrecursion.hoplon.markdown.code_node.call(null,G__328593,G__328594));
})()," with the ",(function (){var G__328595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__328596 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328595,G__328596) : tailrecursion.hoplon.markdown.code_node.call(null,G__328595,G__328596));
})()," of ",(function (){var G__328597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__328598 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__328597,G__328598) : tailrecursion.hoplon.markdown.code_node.call(null,G__328597,G__328598));
})(),". Here is the procedure:"], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__328553,G__328554) : tailrecursion.hoplon.markdown.para_node.call(null,G__328553,G__328554));
})(),(function (){var G__328835 = (function (){var G__328836 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__328837 = (function (){var G__328838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__328839 = "(";
var G__328840 = (function (){var G__328950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__328951 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328950,G__328951) : tailrecursion.hoplon.span.call(null,G__328950,G__328951));
})();
var G__328841 = (function (){var G__328952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328953 = "intersection-set*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328952,G__328953) : tailrecursion.hoplon.span.call(null,G__328952,G__328953));
})();
var G__328842 = " [";
var G__328843 = (function (){var G__328954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328955 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328954,G__328955) : tailrecursion.hoplon.span.call(null,G__328954,G__328955));
})();
var G__328844 = " ";
var G__328845 = (function (){var G__328956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328957 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328956,G__328957) : tailrecursion.hoplon.span.call(null,G__328956,G__328957));
})();
var G__328846 = "]\n  (";
var G__328847 = (function (){var G__328958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__328959 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328958,G__328959) : tailrecursion.hoplon.span.call(null,G__328958,G__328959));
})();
var G__328848 = "[";
var G__328849 = (function (){var G__328960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328961 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328960,G__328961) : tailrecursion.hoplon.span.call(null,G__328960,G__328961));
})();
var G__328850 = "    ";
var G__328851 = (function (){var G__328962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__328963 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328962,G__328963) : tailrecursion.hoplon.span.call(null,G__328962,G__328963));
})();
var G__328852 = "()\n         ";
var G__328853 = (function (){var G__328964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328965 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328964,G__328965) : tailrecursion.hoplon.span.call(null,G__328964,G__328965));
})();
var G__328854 = " ";
var G__328855 = (function (){var G__328966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328967 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328966,G__328967) : tailrecursion.hoplon.span.call(null,G__328966,G__328967));
})();
var G__328856 = "\n         ";
var G__328857 = (function (){var G__328968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328969 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328968,G__328969) : tailrecursion.hoplon.span.call(null,G__328968,G__328969));
})();
var G__328858 = " ";
var G__328859 = (function (){var G__328970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328971 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328970,G__328971) : tailrecursion.hoplon.span.call(null,G__328970,G__328971));
})();
var G__328860 = "]\n    (";
var G__328861 = (function (){var G__328972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__328973 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328972,G__328973) : tailrecursion.hoplon.span.call(null,G__328972,G__328973));
})();
var G__328862 = "(";
var G__328863 = (function (){var G__328974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328975 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328974,G__328975) : tailrecursion.hoplon.span.call(null,G__328974,G__328975));
})();
var G__328864 = "(";
var G__328865 = (function (){var G__328976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__328977 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328976,G__328977) : tailrecursion.hoplon.span.call(null,G__328976,G__328977));
})();
var G__328866 = " ";
var G__328867 = (function (){var G__328978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328979 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328978,G__328979) : tailrecursion.hoplon.span.call(null,G__328978,G__328979));
})();
var G__328868 = ") (";
var G__328869 = (function (){var G__328980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__328981 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328980,G__328981) : tailrecursion.hoplon.span.call(null,G__328980,G__328981));
})();
var G__328870 = " ";
var G__328871 = (function (){var G__328982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328983 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328982,G__328983) : tailrecursion.hoplon.span.call(null,G__328982,G__328983));
})();
var G__328872 = ")) ";
var G__328873 = (function (){var G__328984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328985 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328984,G__328985) : tailrecursion.hoplon.span.call(null,G__328984,G__328985));
})();
var G__328874 = "\n      (";
var G__328875 = (function (){var G__328986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__328987 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328986,G__328987) : tailrecursion.hoplon.span.call(null,G__328986,G__328987));
})();
var G__328876 = "[";
var G__328877 = (function (){var G__328988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328989 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328988,G__328989) : tailrecursion.hoplon.span.call(null,G__328988,G__328989));
})();
var G__328878 = " (";
var G__328879 = (function (){var G__328990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328991 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328990,G__328991) : tailrecursion.hoplon.span.call(null,G__328990,G__328991));
})();
var G__328880 = (function (){var G__328992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328993 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328992,G__328993) : tailrecursion.hoplon.span.call(null,G__328992,G__328993));
})();
var G__328881 = ")\n            ";
var G__328882 = (function (){var G__328994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328995 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328994,G__328995) : tailrecursion.hoplon.span.call(null,G__328994,G__328995));
})();
var G__328883 = " (";
var G__328884 = (function (){var G__328996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__328997 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328996,G__328997) : tailrecursion.hoplon.span.call(null,G__328996,G__328997));
})();
var G__328885 = (function (){var G__328998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__328999 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__328998,G__328999) : tailrecursion.hoplon.span.call(null,G__328998,G__328999));
})();
var G__328886 = ")]\n        (";
var G__328887 = (function (){var G__329000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329001 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329000,G__329001) : tailrecursion.hoplon.span.call(null,G__329000,G__329001));
})();
var G__328888 = "(";
var G__328889 = (function (){var G__329002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329003 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329002,G__329003) : tailrecursion.hoplon.span.call(null,G__329002,G__329003));
})();
var G__328890 = (function (){var G__329004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329005 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329004,G__329005) : tailrecursion.hoplon.span.call(null,G__329004,G__329005));
})();
var G__328891 = " ";
var G__328892 = (function (){var G__329006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329007 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329006,G__329007) : tailrecursion.hoplon.span.call(null,G__329006,G__329007));
})();
var G__328893 = ") (";
var G__328894 = (function (){var G__329008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329009 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329008,G__329009) : tailrecursion.hoplon.span.call(null,G__329008,G__329009));
})();
var G__328895 = " (";
var G__328896 = (function (){var G__329010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329011 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329010,G__329011) : tailrecursion.hoplon.span.call(null,G__329010,G__329011));
})();
var G__328897 = (function (){var G__329012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329013 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329012,G__329013) : tailrecursion.hoplon.span.call(null,G__329012,G__329013));
})();
var G__328898 = " ";
var G__328899 = (function (){var G__329014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329015 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329014,G__329015) : tailrecursion.hoplon.span.call(null,G__329014,G__329015));
})();
var G__328900 = ") (";
var G__328901 = (function (){var G__329016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329017 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329016,G__329017) : tailrecursion.hoplon.span.call(null,G__329016,G__329017));
})();
var G__328902 = (function (){var G__329018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329019 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329018,G__329019) : tailrecursion.hoplon.span.call(null,G__329018,G__329019));
})();
var G__328903 = ") (";
var G__328904 = (function (){var G__329020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329021 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329020,G__329021) : tailrecursion.hoplon.span.call(null,G__329020,G__329021));
})();
var G__328905 = (function (){var G__329022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329023 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329022,G__329023) : tailrecursion.hoplon.span.call(null,G__329022,G__329023));
})();
var G__328906 = "))\n              (";
var G__328907 = (function (){var G__329024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329025 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329024,G__329025) : tailrecursion.hoplon.span.call(null,G__329024,G__329025));
})();
var G__328908 = (function (){var G__329026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329027 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329026,G__329027) : tailrecursion.hoplon.span.call(null,G__329026,G__329027));
})();
var G__328909 = " ";
var G__328910 = (function (){var G__329028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329029 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329028,G__329029) : tailrecursion.hoplon.span.call(null,G__329028,G__329029));
})();
var G__328911 = ") (";
var G__328912 = (function (){var G__329030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329031 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329030,G__329031) : tailrecursion.hoplon.span.call(null,G__329030,G__329031));
})();
var G__328913 = " ";
var G__328914 = (function (){var G__329032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329033 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329032,G__329033) : tailrecursion.hoplon.span.call(null,G__329032,G__329033));
})();
var G__328915 = " (";
var G__328916 = (function (){var G__329034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329035 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329034,G__329035) : tailrecursion.hoplon.span.call(null,G__329034,G__329035));
})();
var G__328917 = (function (){var G__329036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329037 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329036,G__329037) : tailrecursion.hoplon.span.call(null,G__329036,G__329037));
})();
var G__328918 = ") ";
var G__328919 = (function (){var G__329038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329039 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329038,G__329039) : tailrecursion.hoplon.span.call(null,G__329038,G__329039));
})();
var G__328920 = ")\n              (";
var G__328921 = (function (){var G__329040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329041 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329040,G__329041) : tailrecursion.hoplon.span.call(null,G__329040,G__329041));
})();
var G__328922 = (function (){var G__329042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329043 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329042,G__329043) : tailrecursion.hoplon.span.call(null,G__329042,G__329043));
})();
var G__328923 = " ";
var G__328924 = (function (){var G__329044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329045 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329044,G__329045) : tailrecursion.hoplon.span.call(null,G__329044,G__329045));
})();
var G__328925 = ") (";
var G__328926 = (function (){var G__329046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329047 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329046,G__329047) : tailrecursion.hoplon.span.call(null,G__329046,G__329047));
})();
var G__328927 = " ";
var G__328928 = (function (){var G__329048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329049 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329048,G__329049) : tailrecursion.hoplon.span.call(null,G__329048,G__329049));
})();
var G__328929 = " ";
var G__328930 = (function (){var G__329050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329051 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329050,G__329051) : tailrecursion.hoplon.span.call(null,G__329050,G__329051));
})();
var G__328931 = " (";
var G__328932 = (function (){var G__329052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329053 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329052,G__329053) : tailrecursion.hoplon.span.call(null,G__329052,G__329053));
})();
var G__328933 = (function (){var G__329054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329055 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329054,G__329055) : tailrecursion.hoplon.span.call(null,G__329054,G__329055));
})();
var G__328934 = ")))))))\n\n(";
var G__328935 = (function (){var G__329056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__329057 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329056,G__329057) : tailrecursion.hoplon.span.call(null,G__329056,G__329057));
})();
var G__328936 = (function (){var G__329058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329059 = "intersection-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329058,G__329059) : tailrecursion.hoplon.span.call(null,G__329058,G__329059));
})();
var G__328937 = " [";
var G__328938 = (function (){var G__329060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329061 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329060,G__329061) : tailrecursion.hoplon.span.call(null,G__329060,G__329061));
})();
var G__328939 = " ";
var G__328940 = (function (){var G__329062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329063 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329062,G__329063) : tailrecursion.hoplon.span.call(null,G__329062,G__329063));
})();
var G__328941 = "]\n  (";
var G__328942 = (function (){var G__329064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329065 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329064,G__329065) : tailrecursion.hoplon.span.call(null,G__329064,G__329065));
})();
var G__328943 = "(";
var G__328944 = (function (){var G__329066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329067 = "intersection-set*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329066,G__329067) : tailrecursion.hoplon.span.call(null,G__329066,G__329067));
})();
var G__328945 = " ";
var G__328946 = (function (){var G__329068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329069 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329068,G__329069) : tailrecursion.hoplon.span.call(null,G__329068,G__329069));
})();
var G__328947 = " ";
var G__328948 = (function (){var G__329070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329071 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329070,G__329071) : tailrecursion.hoplon.span.call(null,G__329070,G__329071));
})();
var G__328949 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$112 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$112(G__328838,G__328839,G__328840,G__328841,G__328842,G__328843,G__328844,G__328845,G__328846,G__328847,G__328848,G__328849,G__328850,G__328851,G__328852,G__328853,G__328854,G__328855,G__328856,G__328857,G__328858,G__328859,G__328860,G__328861,G__328862,G__328863,G__328864,G__328865,G__328866,G__328867,G__328868,G__328869,G__328870,G__328871,G__328872,G__328873,G__328874,G__328875,G__328876,G__328877,G__328878,G__328879,G__328880,G__328881,G__328882,G__328883,G__328884,G__328885,G__328886,G__328887,G__328888,G__328889,G__328890,G__328891,G__328892,G__328893,G__328894,G__328895,G__328896,G__328897,G__328898,G__328899,G__328900,G__328901,G__328902,G__328903,G__328904,G__328905,G__328906,G__328907,G__328908,G__328909,G__328910,G__328911,G__328912,G__328913,G__328914,G__328915,G__328916,G__328917,G__328918,G__328919,G__328920,G__328921,G__328922,G__328923,G__328924,G__328925,G__328926,G__328927,G__328928,G__328929,G__328930,G__328931,G__328932,G__328933,G__328934,G__328935,G__328936,G__328937,G__328938,G__328939,G__328940,G__328941,G__328942,G__328943,G__328944,G__328945,G__328946,G__328947,G__328948,G__328949) : tailrecursion.hoplon.pre.call(null,G__328838,G__328839,G__328840,G__328841,G__328842,G__328843,G__328844,G__328845,G__328846,G__328847,G__328848,G__328849,G__328850,G__328851,G__328852,G__328853,G__328854,G__328855,G__328856,G__328857,G__328858,G__328859,G__328860,G__328861,G__328862,G__328863,G__328864,G__328865,G__328866,G__328867,G__328868,G__328869,G__328870,G__328871,G__328872,G__328873,G__328874,G__328875,G__328876,G__328877,G__328878,G__328879,G__328880,G__328881,G__328882,G__328883,G__328884,G__328885,G__328886,G__328887,G__328888,G__328889,G__328890,G__328891,G__328892,G__328893,G__328894,G__328895,G__328896,G__328897,G__328898,G__328899,G__328900,G__328901,G__328902,G__328903,G__328904,G__328905,G__328906,G__328907,G__328908,G__328909,G__328910,G__328911,G__328912,G__328913,G__328914,G__328915,G__328916,G__328917,G__328918,G__328919,G__328920,G__328921,G__328922,G__328923,G__328924,G__328925,G__328926,G__328927,G__328928,G__328929,G__328930,G__328931,G__328932,G__328933,G__328934,G__328935,G__328936,G__328937,G__328938,G__328939,G__328940,G__328941,G__328942,G__328943,G__328944,G__328945,G__328946,G__328947,G__328948,G__328949));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__328836,G__328837) : tailrecursion.hoplon.div.call(null,G__328836,G__328837));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__328835) : tailrecursion.hoplon.div.call(null,G__328835));
})(),(function (){var G__329072 = cljs.core.PersistentArrayMap.EMPTY;
var G__329073 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To estimate the number of steps required by this process, observe that at each step we reduce the intersection problem to computing intersections of smaller sets ",(function (){var G__329074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__329075 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__329074,G__329075) : tailrecursion.hoplon.markdown.simple_node.call(null,G__329074,G__329075));
})()," removing the first element from ",(function (){var G__329076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__329077 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__329076,G__329077) : tailrecursion.hoplon.markdown.code_node.call(null,G__329076,G__329077));
})()," or ",(function (){var G__329078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__329079 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__329078,G__329079) : tailrecursion.hoplon.markdown.code_node.call(null,G__329078,G__329079));
})()," or both. Thus, the number of steps required is at most the sum of the sizes of ",(function (){var G__329080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__329081 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__329080,G__329081) : tailrecursion.hoplon.markdown.code_node.call(null,G__329080,G__329081));
})()," and ",(function (){var G__329082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__329083 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__329082,G__329083) : tailrecursion.hoplon.markdown.code_node.call(null,G__329082,G__329083));
})(),", rather than the product of the sizes as with the unordered representation. This is \\(\\Theta(n)\\) growth rather than \\(\\Theta(n^2)\\) ",(function (){var G__329084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__329085 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__329084,G__329085) : tailrecursion.hoplon.markdown.simple_node.call(null,G__329084,G__329085));
})()," a considerable speedup, even for sets of moderate size."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__329072,G__329073) : tailrecursion.hoplon.markdown.para_node.call(null,G__329072,G__329073));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_328367;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_328366;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_328365;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_328364;
}})()], 0));
var G__319891 = "";
var G__319892 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_329086 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_329087 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_329088 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_329089 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__329090 = cljs.core.PersistentArrayMap.EMPTY;
var G__329091 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Give an implementation of ",(function (){var G__329092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__329093 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__329092,G__329093) : tailrecursion.hoplon.markdown.code_node.call(null,G__329092,G__329093));
})()," using the ordered representation. By analogy with ",(function (){var G__329094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__329095 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__329094,G__329095) : tailrecursion.hoplon.markdown.code_node.call(null,G__329094,G__329095));
})()," show how to take advantage of the ordering to produce a procedure that requires on average about half as many steps as with the unordered representatioin."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__329090,G__329091) : tailrecursion.hoplon.markdown.para_node.call(null,G__329090,G__329091));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_329089;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_329088;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_329087;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_329086;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_329096 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_329097 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_329098 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_329099 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__329275 = (function (){var G__329276 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__329277 = (function (){var G__329278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__329279 = "(";
var G__329280 = (function (){var G__329359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__329360 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329359,G__329360) : tailrecursion.hoplon.span.call(null,G__329359,G__329360));
})();
var G__329281 = (function (){var G__329361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329362 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329361,G__329362) : tailrecursion.hoplon.span.call(null,G__329361,G__329362));
})();
var G__329282 = " [";
var G__329283 = (function (){var G__329363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329364 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329363,G__329364) : tailrecursion.hoplon.span.call(null,G__329363,G__329364));
})();
var G__329284 = " ";
var G__329285 = (function (){var G__329365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329366 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329365,G__329366) : tailrecursion.hoplon.span.call(null,G__329365,G__329366));
})();
var G__329286 = "]\n  (";
var G__329287 = (function (){var G__329367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__329368 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329367,G__329368) : tailrecursion.hoplon.span.call(null,G__329367,G__329368));
})();
var G__329288 = "[";
var G__329289 = (function (){var G__329369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329370 = "searched";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329369,G__329370) : tailrecursion.hoplon.span.call(null,G__329369,G__329370));
})();
var G__329290 = "  ";
var G__329291 = (function (){var G__329371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__329372 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329371,G__329372) : tailrecursion.hoplon.span.call(null,G__329371,G__329372));
})();
var G__329292 = "()\n         ";
var G__329293 = (function (){var G__329373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329374 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329373,G__329374) : tailrecursion.hoplon.span.call(null,G__329373,G__329374));
})();
var G__329294 = " ";
var G__329295 = (function (){var G__329375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329376 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329375,G__329376) : tailrecursion.hoplon.span.call(null,G__329375,G__329376));
})();
var G__329296 = "]\n    (";
var G__329297 = (function (){var G__329377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329378 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329377,G__329378) : tailrecursion.hoplon.span.call(null,G__329377,G__329378));
})();
var G__329298 = "(";
var G__329299 = (function (){var G__329379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329380 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329379,G__329380) : tailrecursion.hoplon.span.call(null,G__329379,G__329380));
})();
var G__329300 = " ";
var G__329301 = (function (){var G__329381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329382 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329381,G__329382) : tailrecursion.hoplon.span.call(null,G__329381,G__329382));
})();
var G__329302 = ") (";
var G__329303 = (function (){var G__329383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329384 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329383,G__329384) : tailrecursion.hoplon.span.call(null,G__329383,G__329384));
})();
var G__329304 = "(";
var G__329305 = (function (){var G__329385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329386 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329385,G__329386) : tailrecursion.hoplon.span.call(null,G__329385,G__329386));
})();
var G__329306 = (function (){var G__329387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329388 = "searched";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329387,G__329388) : tailrecursion.hoplon.span.call(null,G__329387,G__329388));
})();
var G__329307 = " ";
var G__329308 = (function (){var G__329389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329390 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329389,G__329390) : tailrecursion.hoplon.span.call(null,G__329389,G__329390));
})();
var G__329309 = "))\n          (";
var G__329310 = (function (){var G__329391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329392 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329391,G__329392) : tailrecursion.hoplon.span.call(null,G__329391,G__329392));
})();
var G__329311 = (function (){var G__329393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329394 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329393,G__329394) : tailrecursion.hoplon.span.call(null,G__329393,G__329394));
})();
var G__329312 = " (";
var G__329313 = (function (){var G__329395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329396 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329395,G__329396) : tailrecursion.hoplon.span.call(null,G__329395,G__329396));
})();
var G__329314 = (function (){var G__329397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329398 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329397,G__329398) : tailrecursion.hoplon.span.call(null,G__329397,G__329398));
})();
var G__329315 = ")) ";
var G__329316 = (function (){var G__329399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329400 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329399,G__329400) : tailrecursion.hoplon.span.call(null,G__329399,G__329400));
})();
var G__329317 = "\n          (";
var G__329318 = (function (){var G__329401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329402 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329401,G__329402) : tailrecursion.hoplon.span.call(null,G__329401,G__329402));
})();
var G__329319 = (function (){var G__329403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329404 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329403,G__329404) : tailrecursion.hoplon.span.call(null,G__329403,G__329404));
})();
var G__329320 = " (";
var G__329321 = (function (){var G__329405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329406 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329405,G__329406) : tailrecursion.hoplon.span.call(null,G__329405,G__329406));
})();
var G__329322 = (function (){var G__329407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329408 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329407,G__329408) : tailrecursion.hoplon.span.call(null,G__329407,G__329408));
})();
var G__329323 = ")) (";
var G__329324 = (function (){var G__329409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329410 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329409,G__329410) : tailrecursion.hoplon.span.call(null,G__329409,G__329410));
})();
var G__329325 = " (";
var G__329326 = (function (){var G__329411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329412 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329411,G__329412) : tailrecursion.hoplon.span.call(null,G__329411,G__329412));
})();
var G__329327 = (function (){var G__329413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329414 = "searched";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329413,G__329414) : tailrecursion.hoplon.span.call(null,G__329413,G__329414));
})();
var G__329328 = " (";
var G__329329 = (function (){var G__329415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329416 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329415,G__329416) : tailrecursion.hoplon.span.call(null,G__329415,G__329416));
})();
var G__329330 = (function (){var G__329417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329418 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329417,G__329418) : tailrecursion.hoplon.span.call(null,G__329417,G__329418));
})();
var G__329331 = "))\n                                         (";
var G__329332 = (function (){var G__329419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329420 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329419,G__329420) : tailrecursion.hoplon.span.call(null,G__329419,G__329420));
})();
var G__329333 = (function (){var G__329421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329422 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329421,G__329422) : tailrecursion.hoplon.span.call(null,G__329421,G__329422));
})();
var G__329334 = "))\n          (";
var G__329335 = (function (){var G__329423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329424 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329423,G__329424) : tailrecursion.hoplon.span.call(null,G__329423,G__329424));
})();
var G__329336 = (function (){var G__329425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329426 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329425,G__329426) : tailrecursion.hoplon.span.call(null,G__329425,G__329426));
})();
var G__329337 = " (";
var G__329338 = (function (){var G__329427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329428 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329427,G__329428) : tailrecursion.hoplon.span.call(null,G__329427,G__329428));
})();
var G__329339 = (function (){var G__329429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329430 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329429,G__329430) : tailrecursion.hoplon.span.call(null,G__329429,G__329430));
})();
var G__329340 = ")) (";
var G__329341 = (function (){var G__329431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329432 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329431,G__329432) : tailrecursion.hoplon.span.call(null,G__329431,G__329432));
})();
var G__329342 = "(";
var G__329343 = (function (){var G__329433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329434 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329433,G__329434) : tailrecursion.hoplon.span.call(null,G__329433,G__329434));
})();
var G__329344 = (function (){var G__329435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329436 = "searched";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329435,G__329436) : tailrecursion.hoplon.span.call(null,G__329435,G__329436));
})();
var G__329345 = ") (";
var G__329346 = (function (){var G__329437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329438 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329437,G__329438) : tailrecursion.hoplon.span.call(null,G__329437,G__329438));
})();
var G__329347 = (function (){var G__329439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329440 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329439,G__329440) : tailrecursion.hoplon.span.call(null,G__329439,G__329440));
})();
var G__329348 = " ";
var G__329349 = (function (){var G__329441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329442 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329441,G__329442) : tailrecursion.hoplon.span.call(null,G__329441,G__329442));
})();
var G__329350 = "))\n          ";
var G__329351 = (function (){var G__329443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329444 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329443,G__329444) : tailrecursion.hoplon.span.call(null,G__329443,G__329444));
})();
var G__329352 = " (";
var G__329353 = (function (){var G__329445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329446 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329445,G__329446) : tailrecursion.hoplon.span.call(null,G__329445,G__329446));
})();
var G__329354 = " (";
var G__329355 = (function (){var G__329447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329448 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329447,G__329448) : tailrecursion.hoplon.span.call(null,G__329447,G__329448));
})();
var G__329356 = " ";
var G__329357 = (function (){var G__329449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__329450 = "\"Something went wrong with the adjoin. Try again.\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329449,G__329450) : tailrecursion.hoplon.span.call(null,G__329449,G__329450));
})();
var G__329358 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$81 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$81(G__329278,G__329279,G__329280,G__329281,G__329282,G__329283,G__329284,G__329285,G__329286,G__329287,G__329288,G__329289,G__329290,G__329291,G__329292,G__329293,G__329294,G__329295,G__329296,G__329297,G__329298,G__329299,G__329300,G__329301,G__329302,G__329303,G__329304,G__329305,G__329306,G__329307,G__329308,G__329309,G__329310,G__329311,G__329312,G__329313,G__329314,G__329315,G__329316,G__329317,G__329318,G__329319,G__329320,G__329321,G__329322,G__329323,G__329324,G__329325,G__329326,G__329327,G__329328,G__329329,G__329330,G__329331,G__329332,G__329333,G__329334,G__329335,G__329336,G__329337,G__329338,G__329339,G__329340,G__329341,G__329342,G__329343,G__329344,G__329345,G__329346,G__329347,G__329348,G__329349,G__329350,G__329351,G__329352,G__329353,G__329354,G__329355,G__329356,G__329357,G__329358) : tailrecursion.hoplon.pre.call(null,G__329278,G__329279,G__329280,G__329281,G__329282,G__329283,G__329284,G__329285,G__329286,G__329287,G__329288,G__329289,G__329290,G__329291,G__329292,G__329293,G__329294,G__329295,G__329296,G__329297,G__329298,G__329299,G__329300,G__329301,G__329302,G__329303,G__329304,G__329305,G__329306,G__329307,G__329308,G__329309,G__329310,G__329311,G__329312,G__329313,G__329314,G__329315,G__329316,G__329317,G__329318,G__329319,G__329320,G__329321,G__329322,G__329323,G__329324,G__329325,G__329326,G__329327,G__329328,G__329329,G__329330,G__329331,G__329332,G__329333,G__329334,G__329335,G__329336,G__329337,G__329338,G__329339,G__329340,G__329341,G__329342,G__329343,G__329344,G__329345,G__329346,G__329347,G__329348,G__329349,G__329350,G__329351,G__329352,G__329353,G__329354,G__329355,G__329356,G__329357,G__329358));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__329276,G__329277) : tailrecursion.hoplon.div.call(null,G__329276,G__329277));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__329275) : tailrecursion.hoplon.div.call(null,G__329275));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_329099;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_329098;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_329097;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_329096;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_329451 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_329452 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_329453 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_329454 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__329455 = cljs.core.PersistentArrayMap.EMPTY;
var G__329456 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Give a \\(\\Theta(n)\\) implementation of ",(function (){var G__329457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"union-set"], null);
var G__329458 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__329457,G__329458) : tailrecursion.hoplon.markdown.code_node.call(null,G__329457,G__329458));
})()," for sets represented as ordered lists."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__329455,G__329456) : tailrecursion.hoplon.markdown.para_node.call(null,G__329455,G__329456));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_329454;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_329453;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_329452;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_329451;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_329459 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_329460 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_329461 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_329462 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__329677 = (function (){var G__329678 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__329679 = (function (){var G__329680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__329681 = "(";
var G__329682 = (function (){var G__329782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__329783 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329782,G__329783) : tailrecursion.hoplon.span.call(null,G__329782,G__329783));
})();
var G__329683 = (function (){var G__329784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329785 = "union-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329784,G__329785) : tailrecursion.hoplon.span.call(null,G__329784,G__329785));
})();
var G__329684 = " [";
var G__329685 = (function (){var G__329786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329787 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329786,G__329787) : tailrecursion.hoplon.span.call(null,G__329786,G__329787));
})();
var G__329686 = " ";
var G__329687 = (function (){var G__329788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329789 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329788,G__329789) : tailrecursion.hoplon.span.call(null,G__329788,G__329789));
})();
var G__329688 = "]\n  (";
var G__329689 = (function (){var G__329790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__329791 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329790,G__329791) : tailrecursion.hoplon.span.call(null,G__329790,G__329791));
})();
var G__329690 = "[";
var G__329691 = (function (){var G__329792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329793 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329792,G__329793) : tailrecursion.hoplon.span.call(null,G__329792,G__329793));
})();
var G__329692 = "    ";
var G__329693 = (function (){var G__329794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__329795 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329794,G__329795) : tailrecursion.hoplon.span.call(null,G__329794,G__329795));
})();
var G__329694 = "()\n         ";
var G__329695 = (function (){var G__329796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329797 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329796,G__329797) : tailrecursion.hoplon.span.call(null,G__329796,G__329797));
})();
var G__329696 = " ";
var G__329697 = (function (){var G__329798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329799 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329798,G__329799) : tailrecursion.hoplon.span.call(null,G__329798,G__329799));
})();
var G__329698 = "\n         ";
var G__329699 = (function (){var G__329800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329801 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329800,G__329801) : tailrecursion.hoplon.span.call(null,G__329800,G__329801));
})();
var G__329700 = " ";
var G__329701 = (function (){var G__329802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329803 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329802,G__329803) : tailrecursion.hoplon.span.call(null,G__329802,G__329803));
})();
var G__329702 = "]\n    (";
var G__329703 = (function (){var G__329804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__329805 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329804,G__329805) : tailrecursion.hoplon.span.call(null,G__329804,G__329805));
})();
var G__329704 = "[";
var G__329705 = (function (){var G__329806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329807 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329806,G__329807) : tailrecursion.hoplon.span.call(null,G__329806,G__329807));
})();
var G__329706 = " (";
var G__329707 = (function (){var G__329808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329809 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329808,G__329809) : tailrecursion.hoplon.span.call(null,G__329808,G__329809));
})();
var G__329708 = (function (){var G__329810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329811 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329810,G__329811) : tailrecursion.hoplon.span.call(null,G__329810,G__329811));
})();
var G__329709 = ")\n          ";
var G__329710 = (function (){var G__329812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329813 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329812,G__329813) : tailrecursion.hoplon.span.call(null,G__329812,G__329813));
})();
var G__329711 = " (";
var G__329712 = (function (){var G__329814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329815 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329814,G__329815) : tailrecursion.hoplon.span.call(null,G__329814,G__329815));
})();
var G__329713 = (function (){var G__329816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329817 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329816,G__329817) : tailrecursion.hoplon.span.call(null,G__329816,G__329817));
})();
var G__329714 = ")]\n      (";
var G__329715 = (function (){var G__329818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329819 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329818,G__329819) : tailrecursion.hoplon.span.call(null,G__329818,G__329819));
})();
var G__329716 = "(";
var G__329717 = (function (){var G__329820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329821 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329820,G__329821) : tailrecursion.hoplon.span.call(null,G__329820,G__329821));
})();
var G__329718 = " ";
var G__329719 = (function (){var G__329822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329823 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329822,G__329823) : tailrecursion.hoplon.span.call(null,G__329822,G__329823));
})();
var G__329720 = ") (";
var G__329721 = (function (){var G__329824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329825 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329824,G__329825) : tailrecursion.hoplon.span.call(null,G__329824,G__329825));
})();
var G__329722 = "(";
var G__329723 = (function (){var G__329826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329827 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329826,G__329827) : tailrecursion.hoplon.span.call(null,G__329826,G__329827));
})();
var G__329724 = (function (){var G__329828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329829 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329828,G__329829) : tailrecursion.hoplon.span.call(null,G__329828,G__329829));
})();
var G__329725 = ") (";
var G__329726 = (function (){var G__329830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329831 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329830,G__329831) : tailrecursion.hoplon.span.call(null,G__329830,G__329831));
})();
var G__329727 = "))\n            (";
var G__329728 = (function (){var G__329832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329833 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329832,G__329833) : tailrecursion.hoplon.span.call(null,G__329832,G__329833));
})();
var G__329729 = " ";
var G__329730 = (function (){var G__329834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329835 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329834,G__329835) : tailrecursion.hoplon.span.call(null,G__329834,G__329835));
})();
var G__329731 = ") (";
var G__329732 = (function (){var G__329836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329837 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329836,G__329837) : tailrecursion.hoplon.span.call(null,G__329836,G__329837));
})();
var G__329733 = "(";
var G__329734 = (function (){var G__329838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329839 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329838,G__329839) : tailrecursion.hoplon.span.call(null,G__329838,G__329839));
})();
var G__329735 = (function (){var G__329840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329841 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329840,G__329841) : tailrecursion.hoplon.span.call(null,G__329840,G__329841));
})();
var G__329736 = ") (";
var G__329737 = (function (){var G__329842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329843 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329842,G__329843) : tailrecursion.hoplon.span.call(null,G__329842,G__329843));
})();
var G__329738 = "))\n            (";
var G__329739 = (function (){var G__329844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329845 = "<= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329844,G__329845) : tailrecursion.hoplon.span.call(null,G__329844,G__329845));
})();
var G__329740 = (function (){var G__329846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329847 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329846,G__329847) : tailrecursion.hoplon.span.call(null,G__329846,G__329847));
})();
var G__329741 = " ";
var G__329742 = (function (){var G__329848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329849 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329848,G__329849) : tailrecursion.hoplon.span.call(null,G__329848,G__329849));
})();
var G__329743 = ") (";
var G__329744 = (function (){var G__329850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329851 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329850,G__329851) : tailrecursion.hoplon.span.call(null,G__329850,G__329851));
})();
var G__329745 = " (";
var G__329746 = (function (){var G__329852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329853 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329852,G__329853) : tailrecursion.hoplon.span.call(null,G__329852,G__329853));
})();
var G__329747 = (function (){var G__329854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329855 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329854,G__329855) : tailrecursion.hoplon.span.call(null,G__329854,G__329855));
})();
var G__329748 = " ";
var G__329749 = (function (){var G__329856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329857 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329856,G__329857) : tailrecursion.hoplon.span.call(null,G__329856,G__329857));
})();
var G__329750 = ") (";
var G__329751 = (function (){var G__329858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329859 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329858,G__329859) : tailrecursion.hoplon.span.call(null,G__329858,G__329859));
})();
var G__329752 = (function (){var G__329860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329861 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329860,G__329861) : tailrecursion.hoplon.span.call(null,G__329860,G__329861));
})();
var G__329753 = ") ";
var G__329754 = (function (){var G__329862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329863 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329862,G__329863) : tailrecursion.hoplon.span.call(null,G__329862,G__329863));
})();
var G__329755 = ")\n            (";
var G__329756 = (function (){var G__329864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329865 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329864,G__329865) : tailrecursion.hoplon.span.call(null,G__329864,G__329865));
})();
var G__329757 = " ";
var G__329758 = (function (){var G__329866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329867 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329866,G__329867) : tailrecursion.hoplon.span.call(null,G__329866,G__329867));
})();
var G__329759 = " ";
var G__329760 = (function (){var G__329868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329869 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329868,G__329869) : tailrecursion.hoplon.span.call(null,G__329868,G__329869));
})();
var G__329761 = ") (";
var G__329762 = (function (){var G__329870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329871 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329870,G__329871) : tailrecursion.hoplon.span.call(null,G__329870,G__329871));
})();
var G__329763 = " (";
var G__329764 = (function (){var G__329872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329873 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329872,G__329873) : tailrecursion.hoplon.span.call(null,G__329872,G__329873));
})();
var G__329765 = (function (){var G__329874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329875 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329874,G__329875) : tailrecursion.hoplon.span.call(null,G__329874,G__329875));
})();
var G__329766 = " ";
var G__329767 = (function (){var G__329876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329877 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329876,G__329877) : tailrecursion.hoplon.span.call(null,G__329876,G__329877));
})();
var G__329768 = ") ";
var G__329769 = (function (){var G__329878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329879 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329878,G__329879) : tailrecursion.hoplon.span.call(null,G__329878,G__329879));
})();
var G__329770 = " (";
var G__329771 = (function (){var G__329880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__329881 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329880,G__329881) : tailrecursion.hoplon.span.call(null,G__329880,G__329881));
})();
var G__329772 = (function (){var G__329882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329883 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329882,G__329883) : tailrecursion.hoplon.span.call(null,G__329882,G__329883));
})();
var G__329773 = "))\n            ";
var G__329774 = (function (){var G__329884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__329885 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329884,G__329885) : tailrecursion.hoplon.span.call(null,G__329884,G__329885));
})();
var G__329775 = " (";
var G__329776 = (function (){var G__329886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329887 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329886,G__329887) : tailrecursion.hoplon.span.call(null,G__329886,G__329887));
})();
var G__329777 = " (";
var G__329778 = (function (){var G__329888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__329889 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329888,G__329889) : tailrecursion.hoplon.span.call(null,G__329888,G__329889));
})();
var G__329779 = " ";
var G__329780 = (function (){var G__329890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__329891 = "\"Something went wrong with the union. Try again.\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__329890,G__329891) : tailrecursion.hoplon.span.call(null,G__329890,G__329891));
})();
var G__329781 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$102 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$102(G__329680,G__329681,G__329682,G__329683,G__329684,G__329685,G__329686,G__329687,G__329688,G__329689,G__329690,G__329691,G__329692,G__329693,G__329694,G__329695,G__329696,G__329697,G__329698,G__329699,G__329700,G__329701,G__329702,G__329703,G__329704,G__329705,G__329706,G__329707,G__329708,G__329709,G__329710,G__329711,G__329712,G__329713,G__329714,G__329715,G__329716,G__329717,G__329718,G__329719,G__329720,G__329721,G__329722,G__329723,G__329724,G__329725,G__329726,G__329727,G__329728,G__329729,G__329730,G__329731,G__329732,G__329733,G__329734,G__329735,G__329736,G__329737,G__329738,G__329739,G__329740,G__329741,G__329742,G__329743,G__329744,G__329745,G__329746,G__329747,G__329748,G__329749,G__329750,G__329751,G__329752,G__329753,G__329754,G__329755,G__329756,G__329757,G__329758,G__329759,G__329760,G__329761,G__329762,G__329763,G__329764,G__329765,G__329766,G__329767,G__329768,G__329769,G__329770,G__329771,G__329772,G__329773,G__329774,G__329775,G__329776,G__329777,G__329778,G__329779,G__329780,G__329781) : tailrecursion.hoplon.pre.call(null,G__329680,G__329681,G__329682,G__329683,G__329684,G__329685,G__329686,G__329687,G__329688,G__329689,G__329690,G__329691,G__329692,G__329693,G__329694,G__329695,G__329696,G__329697,G__329698,G__329699,G__329700,G__329701,G__329702,G__329703,G__329704,G__329705,G__329706,G__329707,G__329708,G__329709,G__329710,G__329711,G__329712,G__329713,G__329714,G__329715,G__329716,G__329717,G__329718,G__329719,G__329720,G__329721,G__329722,G__329723,G__329724,G__329725,G__329726,G__329727,G__329728,G__329729,G__329730,G__329731,G__329732,G__329733,G__329734,G__329735,G__329736,G__329737,G__329738,G__329739,G__329740,G__329741,G__329742,G__329743,G__329744,G__329745,G__329746,G__329747,G__329748,G__329749,G__329750,G__329751,G__329752,G__329753,G__329754,G__329755,G__329756,G__329757,G__329758,G__329759,G__329760,G__329761,G__329762,G__329763,G__329764,G__329765,G__329766,G__329767,G__329768,G__329769,G__329770,G__329771,G__329772,G__329773,G__329774,G__329775,G__329776,G__329777,G__329778,G__329779,G__329780,G__329781));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__329678,G__329679) : tailrecursion.hoplon.div.call(null,G__329678,G__329679));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__329677) : tailrecursion.hoplon.div.call(null,G__329677));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_329462;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_329461;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_329460;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_329459;
}})()], 0))], 0))], 0));
var G__319893 = "";
var G__319894 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Sets as Binary Trees"], null),(function (){var _STAR_references_STAR_329892 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_329893 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_329894 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_329895 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__329896 = cljs.core.PersistentArrayMap.EMPTY;
var G__329897 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can do better than the ordered-list representation by arranging the set elements in the form of a tree. Each node of the tree holds one element of the set, called the ",(function (){var G__329898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__329899 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["entry"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__329898,G__329899) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__329898,G__329899));
})()," at that node, and a link to each of two other (possibly empty) nodes. The ",(function (){var G__329900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__329901 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["left"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__329900,G__329901) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__329900,G__329901));
})()," link points to elements smaller than the one at the node, and the ",(function (){var G__329902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__329903 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["right"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__329902,G__329903) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__329902,G__329903));
})()," link to elements greater than one at the node. Figure 2.16 shows some trees that represent the set \\({1,3,5,7,9,11}\\). The same set may be represented by a tree in a number of different ways. The only thing we require for valid representation is that all elements in the left subtree be smaller than the node entry and that all elements in the right subtree be larger."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__329896,G__329897) : tailrecursion.hoplon.markdown.para_node.call(null,G__329896,G__329897));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_329895;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_329894;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_329893;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_329892;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"Various binary trees represent the set {1,3,5,7,9,11}"], null)], 0)),"",(function (){var _STAR_references_STAR_329904 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_329905 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_329906 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_329907 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__329908 = cljs.core.PersistentArrayMap.EMPTY;
var G__329909 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The advantage of the tree representation is this: Suppose we want to check whether a number \\(x\\) is contained in a set. We begin by comparing \\(x\\) with the entry in the top node. If \\(x\\) is less than this, we know that we need only search the left subtree; if \\(x\\) is greater, we need only search the right subtree. Now, if the tree is ",(function (){var G__329910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__329911 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["balanced,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__329910,G__329911) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__329910,G__329911));
})()," each of these subtrees will be about half the size of the original. Thus, in one step we have reduced the problem of searching a tree of size \\(n\\) to searching a tree of size \\(n/2\\). Since the size of the tree is halved at each step, we should expect that the number of steps needed to search a tree of size \\(n\\) grows as \\(\\Theta(\\log n)\\).",(function (){var G__329912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__329913 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Halving the size of the problem at each step is the distinguishing characteristic of logarithmic growth, as we saw with the fast-exponentiation algorithm of section 1.2.4 and the half-interval search method of section 1.3.3."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__329912,G__329913) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__329912,G__329913));
})()," For large sets, this will be a significant speedup over the previous representations."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__329908,G__329909) : tailrecursion.hoplon.markdown.para_node.call(null,G__329908,G__329909));
})(),(function (){var G__329914 = cljs.core.PersistentArrayMap.EMPTY;
var G__329915 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can represent trees by using lists. Each node will be a list of three items: the entry at the node, the left subtree, and the right subtree. A left or right subtree of the empty list will indicate that there is no subtree connected there. We can describe this representation by the following procedure:",(function (){var G__329916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__329917 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We are representing sets in terms of trees, and trees in terms of lists ",(function (){var G__329918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__329919 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__329918,G__329919) : tailrecursion.hoplon.markdown.simple_node.call(null,G__329918,G__329919));
})()," in effect, a data abstraction built upon a data abstraction. We can regard the procedures entry, left-branch, right-branch, and make-tree as a way of isolating the abstraction of a ",(function (){var G__329920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__329921 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["binary tree"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__329920,G__329921) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__329920,G__329921));
})()," from the particular way we might wish to represent such a tree in terms of list structure."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__329916,G__329917) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__329916,G__329917));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__329914,G__329915) : tailrecursion.hoplon.markdown.para_node.call(null,G__329914,G__329915));
})(),(function (){var G__330016 = (function (){var G__330017 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__330018 = (function (){var G__330019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__330020 = "(";
var G__330021 = (function (){var G__330061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__330062 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330061,G__330062) : tailrecursion.hoplon.span.call(null,G__330061,G__330062));
})();
var G__330022 = (function (){var G__330063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330064 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330063,G__330064) : tailrecursion.hoplon.span.call(null,G__330063,G__330064));
})();
var G__330023 = " [";
var G__330024 = (function (){var G__330065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330066 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330065,G__330066) : tailrecursion.hoplon.span.call(null,G__330065,G__330066));
})();
var G__330025 = "]\n  (";
var G__330026 = (function (){var G__330067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330068 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330067,G__330068) : tailrecursion.hoplon.span.call(null,G__330067,G__330068));
})();
var G__330027 = (function (){var G__330069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330070 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330069,G__330070) : tailrecursion.hoplon.span.call(null,G__330069,G__330070));
})();
var G__330028 = "))\n\n(";
var G__330029 = (function (){var G__330071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__330072 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330071,G__330072) : tailrecursion.hoplon.span.call(null,G__330071,G__330072));
})();
var G__330030 = (function (){var G__330073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330074 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330073,G__330074) : tailrecursion.hoplon.span.call(null,G__330073,G__330074));
})();
var G__330031 = " [";
var G__330032 = (function (){var G__330075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330076 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330075,G__330076) : tailrecursion.hoplon.span.call(null,G__330075,G__330076));
})();
var G__330033 = "]\n  (";
var G__330034 = (function (){var G__330077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330078 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330077,G__330078) : tailrecursion.hoplon.span.call(null,G__330077,G__330078));
})();
var G__330035 = (function (){var G__330079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330080 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330079,G__330080) : tailrecursion.hoplon.span.call(null,G__330079,G__330080));
})();
var G__330036 = "))\n\n(";
var G__330037 = (function (){var G__330081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__330082 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330081,G__330082) : tailrecursion.hoplon.span.call(null,G__330081,G__330082));
})();
var G__330038 = (function (){var G__330083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330084 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330083,G__330084) : tailrecursion.hoplon.span.call(null,G__330083,G__330084));
})();
var G__330039 = " [";
var G__330040 = (function (){var G__330085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330086 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330085,G__330086) : tailrecursion.hoplon.span.call(null,G__330085,G__330086));
})();
var G__330041 = "]\n  (";
var G__330042 = (function (){var G__330087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330088 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330087,G__330088) : tailrecursion.hoplon.span.call(null,G__330087,G__330088));
})();
var G__330043 = (function (){var G__330089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330090 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330089,G__330090) : tailrecursion.hoplon.span.call(null,G__330089,G__330090));
})();
var G__330044 = " ";
var G__330045 = (function (){var G__330091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__330092 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330091,G__330092) : tailrecursion.hoplon.span.call(null,G__330091,G__330092));
})();
var G__330046 = "))\n\n(";
var G__330047 = (function (){var G__330093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__330094 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330093,G__330094) : tailrecursion.hoplon.span.call(null,G__330093,G__330094));
})();
var G__330048 = (function (){var G__330095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330096 = "make-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330095,G__330096) : tailrecursion.hoplon.span.call(null,G__330095,G__330096));
})();
var G__330049 = " [";
var G__330050 = (function (){var G__330097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330098 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330097,G__330098) : tailrecursion.hoplon.span.call(null,G__330097,G__330098));
})();
var G__330051 = " ";
var G__330052 = (function (){var G__330099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330100 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330099,G__330100) : tailrecursion.hoplon.span.call(null,G__330099,G__330100));
})();
var G__330053 = (function (){var G__330101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330102 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330101,G__330102) : tailrecursion.hoplon.span.call(null,G__330101,G__330102));
})();
var G__330054 = "]\n  (";
var G__330055 = (function (){var G__330103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330104 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330103,G__330104) : tailrecursion.hoplon.span.call(null,G__330103,G__330104));
})();
var G__330056 = (function (){var G__330105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330106 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330105,G__330106) : tailrecursion.hoplon.span.call(null,G__330105,G__330106));
})();
var G__330057 = " ";
var G__330058 = (function (){var G__330107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330108 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330107,G__330108) : tailrecursion.hoplon.span.call(null,G__330107,G__330108));
})();
var G__330059 = (function (){var G__330109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330110 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330109,G__330110) : tailrecursion.hoplon.span.call(null,G__330109,G__330110));
})();
var G__330060 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42(G__330019,G__330020,G__330021,G__330022,G__330023,G__330024,G__330025,G__330026,G__330027,G__330028,G__330029,G__330030,G__330031,G__330032,G__330033,G__330034,G__330035,G__330036,G__330037,G__330038,G__330039,G__330040,G__330041,G__330042,G__330043,G__330044,G__330045,G__330046,G__330047,G__330048,G__330049,G__330050,G__330051,G__330052,G__330053,G__330054,G__330055,G__330056,G__330057,G__330058,G__330059,G__330060) : tailrecursion.hoplon.pre.call(null,G__330019,G__330020,G__330021,G__330022,G__330023,G__330024,G__330025,G__330026,G__330027,G__330028,G__330029,G__330030,G__330031,G__330032,G__330033,G__330034,G__330035,G__330036,G__330037,G__330038,G__330039,G__330040,G__330041,G__330042,G__330043,G__330044,G__330045,G__330046,G__330047,G__330048,G__330049,G__330050,G__330051,G__330052,G__330053,G__330054,G__330055,G__330056,G__330057,G__330058,G__330059,G__330060));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__330017,G__330018) : tailrecursion.hoplon.div.call(null,G__330017,G__330018));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__330016) : tailrecursion.hoplon.div.call(null,G__330016));
})(),(function (){var G__330111 = cljs.core.PersistentArrayMap.EMPTY;
var G__330112 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we can write the ",(function (){var G__330113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__330114 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__330113,G__330114) : tailrecursion.hoplon.markdown.code_node.call(null,G__330113,G__330114));
})()," procedure using the strategy described above:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__330111,G__330112) : tailrecursion.hoplon.markdown.para_node.call(null,G__330111,G__330112));
})(),(function (){var G__330247 = (function (){var G__330248 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__330249 = (function (){var G__330250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__330251 = "(";
var G__330252 = (function (){var G__330314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__330315 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330314,G__330315) : tailrecursion.hoplon.span.call(null,G__330314,G__330315));
})();
var G__330253 = (function (){var G__330316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330317 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330316,G__330317) : tailrecursion.hoplon.span.call(null,G__330316,G__330317));
})();
var G__330254 = " [";
var G__330255 = (function (){var G__330318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330319 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330318,G__330319) : tailrecursion.hoplon.span.call(null,G__330318,G__330319));
})();
var G__330256 = " ";
var G__330257 = (function (){var G__330320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330321 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330320,G__330321) : tailrecursion.hoplon.span.call(null,G__330320,G__330321));
})();
var G__330258 = "]\n  (";
var G__330259 = (function (){var G__330322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330323 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330322,G__330323) : tailrecursion.hoplon.span.call(null,G__330322,G__330323));
})();
var G__330260 = "(";
var G__330261 = (function (){var G__330324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330325 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330324,G__330325) : tailrecursion.hoplon.span.call(null,G__330324,G__330325));
})();
var G__330262 = " ";
var G__330263 = (function (){var G__330326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330327 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330326,G__330327) : tailrecursion.hoplon.span.call(null,G__330326,G__330327));
})();
var G__330264 = ") ";
var G__330265 = (function (){var G__330328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330329 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330328,G__330329) : tailrecursion.hoplon.span.call(null,G__330328,G__330329));
})();
var G__330266 = "\n        (";
var G__330267 = (function (){var G__330330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330331 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330330,G__330331) : tailrecursion.hoplon.span.call(null,G__330330,G__330331));
})();
var G__330268 = (function (){var G__330332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330333 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330332,G__330333) : tailrecursion.hoplon.span.call(null,G__330332,G__330333));
})();
var G__330269 = " (";
var G__330270 = (function (){var G__330334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330335 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330334,G__330335) : tailrecursion.hoplon.span.call(null,G__330334,G__330335));
})();
var G__330271 = " ";
var G__330272 = (function (){var G__330336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330337 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330336,G__330337) : tailrecursion.hoplon.span.call(null,G__330336,G__330337));
})();
var G__330273 = ")) ";
var G__330274 = (function (){var G__330338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330339 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330338,G__330339) : tailrecursion.hoplon.span.call(null,G__330338,G__330339));
})();
var G__330275 = "\n        (";
var G__330276 = (function (){var G__330340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330341 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330340,G__330341) : tailrecursion.hoplon.span.call(null,G__330340,G__330341));
})();
var G__330277 = (function (){var G__330342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330343 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330342,G__330343) : tailrecursion.hoplon.span.call(null,G__330342,G__330343));
})();
var G__330278 = " (";
var G__330279 = (function (){var G__330344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330345 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330344,G__330345) : tailrecursion.hoplon.span.call(null,G__330344,G__330345));
})();
var G__330280 = " ";
var G__330281 = (function (){var G__330346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330347 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330346,G__330347) : tailrecursion.hoplon.span.call(null,G__330346,G__330347));
})();
var G__330282 = ")) (";
var G__330283 = (function (){var G__330348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330349 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330348,G__330349) : tailrecursion.hoplon.span.call(null,G__330348,G__330349));
})();
var G__330284 = " ";
var G__330285 = (function (){var G__330350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330351 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330350,G__330351) : tailrecursion.hoplon.span.call(null,G__330350,G__330351));
})();
var G__330286 = " (";
var G__330287 = (function (){var G__330352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330353 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330352,G__330353) : tailrecursion.hoplon.span.call(null,G__330352,G__330353));
})();
var G__330288 = " ";
var G__330289 = (function (){var G__330354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330355 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330354,G__330355) : tailrecursion.hoplon.span.call(null,G__330354,G__330355));
})();
var G__330290 = "))\n        (";
var G__330291 = (function (){var G__330356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330357 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330356,G__330357) : tailrecursion.hoplon.span.call(null,G__330356,G__330357));
})();
var G__330292 = (function (){var G__330358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330359 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330358,G__330359) : tailrecursion.hoplon.span.call(null,G__330358,G__330359));
})();
var G__330293 = " (";
var G__330294 = (function (){var G__330360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330361 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330360,G__330361) : tailrecursion.hoplon.span.call(null,G__330360,G__330361));
})();
var G__330295 = " ";
var G__330296 = (function (){var G__330362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330363 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330362,G__330363) : tailrecursion.hoplon.span.call(null,G__330362,G__330363));
})();
var G__330297 = ")) (";
var G__330298 = (function (){var G__330364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330365 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330364,G__330365) : tailrecursion.hoplon.span.call(null,G__330364,G__330365));
})();
var G__330299 = " ";
var G__330300 = (function (){var G__330366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330367 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330366,G__330367) : tailrecursion.hoplon.span.call(null,G__330366,G__330367));
})();
var G__330301 = " (";
var G__330302 = (function (){var G__330368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330369 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330368,G__330369) : tailrecursion.hoplon.span.call(null,G__330368,G__330369));
})();
var G__330303 = " ";
var G__330304 = (function (){var G__330370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330371 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330370,G__330371) : tailrecursion.hoplon.span.call(null,G__330370,G__330371));
})();
var G__330305 = "))\n        ";
var G__330306 = (function (){var G__330372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330373 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330372,G__330373) : tailrecursion.hoplon.span.call(null,G__330372,G__330373));
})();
var G__330307 = " (";
var G__330308 = (function (){var G__330374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330375 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330374,G__330375) : tailrecursion.hoplon.span.call(null,G__330374,G__330375));
})();
var G__330309 = " (";
var G__330310 = (function (){var G__330376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330377 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330376,G__330377) : tailrecursion.hoplon.span.call(null,G__330376,G__330377));
})();
var G__330311 = " ";
var G__330312 = (function (){var G__330378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__330379 = "\"Something went wrong with element-of-set?\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330378,G__330379) : tailrecursion.hoplon.span.call(null,G__330378,G__330379));
})();
var G__330313 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$64 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$64(G__330250,G__330251,G__330252,G__330253,G__330254,G__330255,G__330256,G__330257,G__330258,G__330259,G__330260,G__330261,G__330262,G__330263,G__330264,G__330265,G__330266,G__330267,G__330268,G__330269,G__330270,G__330271,G__330272,G__330273,G__330274,G__330275,G__330276,G__330277,G__330278,G__330279,G__330280,G__330281,G__330282,G__330283,G__330284,G__330285,G__330286,G__330287,G__330288,G__330289,G__330290,G__330291,G__330292,G__330293,G__330294,G__330295,G__330296,G__330297,G__330298,G__330299,G__330300,G__330301,G__330302,G__330303,G__330304,G__330305,G__330306,G__330307,G__330308,G__330309,G__330310,G__330311,G__330312,G__330313) : tailrecursion.hoplon.pre.call(null,G__330250,G__330251,G__330252,G__330253,G__330254,G__330255,G__330256,G__330257,G__330258,G__330259,G__330260,G__330261,G__330262,G__330263,G__330264,G__330265,G__330266,G__330267,G__330268,G__330269,G__330270,G__330271,G__330272,G__330273,G__330274,G__330275,G__330276,G__330277,G__330278,G__330279,G__330280,G__330281,G__330282,G__330283,G__330284,G__330285,G__330286,G__330287,G__330288,G__330289,G__330290,G__330291,G__330292,G__330293,G__330294,G__330295,G__330296,G__330297,G__330298,G__330299,G__330300,G__330301,G__330302,G__330303,G__330304,G__330305,G__330306,G__330307,G__330308,G__330309,G__330310,G__330311,G__330312,G__330313));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__330248,G__330249) : tailrecursion.hoplon.div.call(null,G__330248,G__330249));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__330247) : tailrecursion.hoplon.div.call(null,G__330247));
})(),(function (){var G__330380 = cljs.core.PersistentArrayMap.EMPTY;
var G__330381 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["But since this involves recursion, we should try to formulate this using ",(function (){var G__330382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"loop"], null);
var G__330383 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__330382,G__330383) : tailrecursion.hoplon.markdown.code_node.call(null,G__330382,G__330383));
})()," and ",(function (){var G__330384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"recur"], null);
var G__330385 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__330384,G__330385) : tailrecursion.hoplon.markdown.code_node.call(null,G__330384,G__330385));
})()," as follows:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__330380,G__330381) : tailrecursion.hoplon.markdown.para_node.call(null,G__330380,G__330381));
})(),(function (){var G__330530 = (function (){var G__330531 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__330532 = (function (){var G__330533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__330534 = "(";
var G__330535 = (function (){var G__330603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__330604 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330603,G__330604) : tailrecursion.hoplon.span.call(null,G__330603,G__330604));
})();
var G__330536 = (function (){var G__330605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330606 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330605,G__330606) : tailrecursion.hoplon.span.call(null,G__330605,G__330606));
})();
var G__330537 = " [";
var G__330538 = (function (){var G__330607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330608 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330607,G__330608) : tailrecursion.hoplon.span.call(null,G__330607,G__330608));
})();
var G__330539 = " ";
var G__330540 = (function (){var G__330609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330610 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330609,G__330610) : tailrecursion.hoplon.span.call(null,G__330609,G__330610));
})();
var G__330541 = "]\n  (";
var G__330542 = (function (){var G__330611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__330612 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330611,G__330612) : tailrecursion.hoplon.span.call(null,G__330611,G__330612));
})();
var G__330543 = "[";
var G__330544 = (function (){var G__330613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330614 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330613,G__330614) : tailrecursion.hoplon.span.call(null,G__330613,G__330614));
})();
var G__330545 = " ";
var G__330546 = (function (){var G__330615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330616 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330615,G__330616) : tailrecursion.hoplon.span.call(null,G__330615,G__330616));
})();
var G__330547 = "]\n    (";
var G__330548 = (function (){var G__330617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330618 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330617,G__330618) : tailrecursion.hoplon.span.call(null,G__330617,G__330618));
})();
var G__330549 = "(";
var G__330550 = (function (){var G__330619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330620 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330619,G__330620) : tailrecursion.hoplon.span.call(null,G__330619,G__330620));
})();
var G__330551 = " ";
var G__330552 = (function (){var G__330621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330622 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330621,G__330622) : tailrecursion.hoplon.span.call(null,G__330621,G__330622));
})();
var G__330553 = ") ";
var G__330554 = (function (){var G__330623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330624 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330623,G__330624) : tailrecursion.hoplon.span.call(null,G__330623,G__330624));
})();
var G__330555 = "\n          (";
var G__330556 = (function (){var G__330625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330626 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330625,G__330626) : tailrecursion.hoplon.span.call(null,G__330625,G__330626));
})();
var G__330557 = (function (){var G__330627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330628 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330627,G__330628) : tailrecursion.hoplon.span.call(null,G__330627,G__330628));
})();
var G__330558 = " (";
var G__330559 = (function (){var G__330629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330630 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330629,G__330630) : tailrecursion.hoplon.span.call(null,G__330629,G__330630));
})();
var G__330560 = " ";
var G__330561 = (function (){var G__330631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330632 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330631,G__330632) : tailrecursion.hoplon.span.call(null,G__330631,G__330632));
})();
var G__330562 = ")) ";
var G__330563 = (function (){var G__330633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330634 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330633,G__330634) : tailrecursion.hoplon.span.call(null,G__330633,G__330634));
})();
var G__330564 = "\n          (";
var G__330565 = (function (){var G__330635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330636 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330635,G__330636) : tailrecursion.hoplon.span.call(null,G__330635,G__330636));
})();
var G__330566 = (function (){var G__330637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330638 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330637,G__330638) : tailrecursion.hoplon.span.call(null,G__330637,G__330638));
})();
var G__330567 = " (";
var G__330568 = (function (){var G__330639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330640 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330639,G__330640) : tailrecursion.hoplon.span.call(null,G__330639,G__330640));
})();
var G__330569 = " ";
var G__330570 = (function (){var G__330641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330642 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330641,G__330642) : tailrecursion.hoplon.span.call(null,G__330641,G__330642));
})();
var G__330571 = ")) (";
var G__330572 = (function (){var G__330643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330644 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330643,G__330644) : tailrecursion.hoplon.span.call(null,G__330643,G__330644));
})();
var G__330573 = " ";
var G__330574 = (function (){var G__330645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330646 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330645,G__330646) : tailrecursion.hoplon.span.call(null,G__330645,G__330646));
})();
var G__330575 = " (";
var G__330576 = (function (){var G__330647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330648 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330647,G__330648) : tailrecursion.hoplon.span.call(null,G__330647,G__330648));
})();
var G__330577 = " ";
var G__330578 = (function (){var G__330649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330650 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330649,G__330650) : tailrecursion.hoplon.span.call(null,G__330649,G__330650));
})();
var G__330579 = "))\n          (";
var G__330580 = (function (){var G__330651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330652 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330651,G__330652) : tailrecursion.hoplon.span.call(null,G__330651,G__330652));
})();
var G__330581 = (function (){var G__330653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330654 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330653,G__330654) : tailrecursion.hoplon.span.call(null,G__330653,G__330654));
})();
var G__330582 = " (";
var G__330583 = (function (){var G__330655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330656 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330655,G__330656) : tailrecursion.hoplon.span.call(null,G__330655,G__330656));
})();
var G__330584 = " ";
var G__330585 = (function (){var G__330657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330658 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330657,G__330658) : tailrecursion.hoplon.span.call(null,G__330657,G__330658));
})();
var G__330586 = ")) (";
var G__330587 = (function (){var G__330659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330660 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330659,G__330660) : tailrecursion.hoplon.span.call(null,G__330659,G__330660));
})();
var G__330588 = " ";
var G__330589 = (function (){var G__330661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330662 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330661,G__330662) : tailrecursion.hoplon.span.call(null,G__330661,G__330662));
})();
var G__330590 = " (";
var G__330591 = (function (){var G__330663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330664 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330663,G__330664) : tailrecursion.hoplon.span.call(null,G__330663,G__330664));
})();
var G__330592 = " ";
var G__330593 = (function (){var G__330665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330666 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330665,G__330666) : tailrecursion.hoplon.span.call(null,G__330665,G__330666));
})();
var G__330594 = "))\n          ";
var G__330595 = (function (){var G__330667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330668 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330667,G__330668) : tailrecursion.hoplon.span.call(null,G__330667,G__330668));
})();
var G__330596 = " (";
var G__330597 = (function (){var G__330669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330670 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330669,G__330670) : tailrecursion.hoplon.span.call(null,G__330669,G__330670));
})();
var G__330598 = " (";
var G__330599 = (function (){var G__330671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330672 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330671,G__330672) : tailrecursion.hoplon.span.call(null,G__330671,G__330672));
})();
var G__330600 = " ";
var G__330601 = (function (){var G__330673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__330674 = "\"Something went wrong with element-of-set?\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330673,G__330674) : tailrecursion.hoplon.span.call(null,G__330673,G__330674));
})();
var G__330602 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$70 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$70(G__330533,G__330534,G__330535,G__330536,G__330537,G__330538,G__330539,G__330540,G__330541,G__330542,G__330543,G__330544,G__330545,G__330546,G__330547,G__330548,G__330549,G__330550,G__330551,G__330552,G__330553,G__330554,G__330555,G__330556,G__330557,G__330558,G__330559,G__330560,G__330561,G__330562,G__330563,G__330564,G__330565,G__330566,G__330567,G__330568,G__330569,G__330570,G__330571,G__330572,G__330573,G__330574,G__330575,G__330576,G__330577,G__330578,G__330579,G__330580,G__330581,G__330582,G__330583,G__330584,G__330585,G__330586,G__330587,G__330588,G__330589,G__330590,G__330591,G__330592,G__330593,G__330594,G__330595,G__330596,G__330597,G__330598,G__330599,G__330600,G__330601,G__330602) : tailrecursion.hoplon.pre.call(null,G__330533,G__330534,G__330535,G__330536,G__330537,G__330538,G__330539,G__330540,G__330541,G__330542,G__330543,G__330544,G__330545,G__330546,G__330547,G__330548,G__330549,G__330550,G__330551,G__330552,G__330553,G__330554,G__330555,G__330556,G__330557,G__330558,G__330559,G__330560,G__330561,G__330562,G__330563,G__330564,G__330565,G__330566,G__330567,G__330568,G__330569,G__330570,G__330571,G__330572,G__330573,G__330574,G__330575,G__330576,G__330577,G__330578,G__330579,G__330580,G__330581,G__330582,G__330583,G__330584,G__330585,G__330586,G__330587,G__330588,G__330589,G__330590,G__330591,G__330592,G__330593,G__330594,G__330595,G__330596,G__330597,G__330598,G__330599,G__330600,G__330601,G__330602));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__330531,G__330532) : tailrecursion.hoplon.div.call(null,G__330531,G__330532));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__330530) : tailrecursion.hoplon.div.call(null,G__330530));
})(),(function (){var G__330675 = cljs.core.PersistentArrayMap.EMPTY;
var G__330676 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Adjoining an item to a set is implemented similarly and also requires \\(\\Theta(\\log n)\\) steps. To adjoin an item \\(x\\), we compare \\(x\\) with the node entry to determine whether \\(x\\) should be added to the right or to the left branch, and having adjoined \\(x\\) to the appropriate branch we piece this newly constructed branch together with the original entry and the other branch. If \\(x\\) is equal to the entry, we just return the node. If we are asked to adjoin \\(x\\) to an empty tree, we generate a tree that has \\(x\\) as the entry and empty right and left branches. Here is the procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__330675,G__330676) : tailrecursion.hoplon.markdown.para_node.call(null,G__330675,G__330676));
})(),(function (){var G__330861 = (function (){var G__330862 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__330863 = (function (){var G__330864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__330865 = "(";
var G__330866 = (function (){var G__330954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__330955 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330954,G__330955) : tailrecursion.hoplon.span.call(null,G__330954,G__330955));
})();
var G__330867 = (function (){var G__330956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330957 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330956,G__330957) : tailrecursion.hoplon.span.call(null,G__330956,G__330957));
})();
var G__330868 = " [";
var G__330869 = (function (){var G__330958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330959 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330958,G__330959) : tailrecursion.hoplon.span.call(null,G__330958,G__330959));
})();
var G__330870 = " ";
var G__330871 = (function (){var G__330960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330961 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330960,G__330961) : tailrecursion.hoplon.span.call(null,G__330960,G__330961));
})();
var G__330872 = "]\n  (";
var G__330873 = (function (){var G__330962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330963 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330962,G__330963) : tailrecursion.hoplon.span.call(null,G__330962,G__330963));
})();
var G__330874 = "(";
var G__330875 = (function (){var G__330964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330965 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330964,G__330965) : tailrecursion.hoplon.span.call(null,G__330964,G__330965));
})();
var G__330876 = " ";
var G__330877 = (function (){var G__330966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330967 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330966,G__330967) : tailrecursion.hoplon.span.call(null,G__330966,G__330967));
})();
var G__330878 = ") (";
var G__330879 = (function (){var G__330968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330969 = "make-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330968,G__330969) : tailrecursion.hoplon.span.call(null,G__330968,G__330969));
})();
var G__330880 = " ";
var G__330881 = (function (){var G__330970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330971 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330970,G__330971) : tailrecursion.hoplon.span.call(null,G__330970,G__330971));
})();
var G__330882 = " ";
var G__330883 = (function (){var G__330972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__330973 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330972,G__330973) : tailrecursion.hoplon.span.call(null,G__330972,G__330973));
})();
var G__330884 = "() ";
var G__330885 = (function (){var G__330974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__330975 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330974,G__330975) : tailrecursion.hoplon.span.call(null,G__330974,G__330975));
})();
var G__330886 = "())\n        (";
var G__330887 = (function (){var G__330976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330977 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330976,G__330977) : tailrecursion.hoplon.span.call(null,G__330976,G__330977));
})();
var G__330888 = (function (){var G__330978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330979 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330978,G__330979) : tailrecursion.hoplon.span.call(null,G__330978,G__330979));
})();
var G__330889 = " (";
var G__330890 = (function (){var G__330980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330981 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330980,G__330981) : tailrecursion.hoplon.span.call(null,G__330980,G__330981));
})();
var G__330891 = " ";
var G__330892 = (function (){var G__330982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330983 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330982,G__330983) : tailrecursion.hoplon.span.call(null,G__330982,G__330983));
})();
var G__330893 = ")) ";
var G__330894 = (function (){var G__330984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330985 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330984,G__330985) : tailrecursion.hoplon.span.call(null,G__330984,G__330985));
})();
var G__330895 = "\n        (";
var G__330896 = (function (){var G__330986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__330987 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330986,G__330987) : tailrecursion.hoplon.span.call(null,G__330986,G__330987));
})();
var G__330897 = (function (){var G__330988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330989 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330988,G__330989) : tailrecursion.hoplon.span.call(null,G__330988,G__330989));
})();
var G__330898 = " (";
var G__330899 = (function (){var G__330990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330991 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330990,G__330991) : tailrecursion.hoplon.span.call(null,G__330990,G__330991));
})();
var G__330900 = " ";
var G__330901 = (function (){var G__330992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330993 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330992,G__330993) : tailrecursion.hoplon.span.call(null,G__330992,G__330993));
})();
var G__330902 = ")) (";
var G__330903 = (function (){var G__330994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330995 = "make-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330994,G__330995) : tailrecursion.hoplon.span.call(null,G__330994,G__330995));
})();
var G__330904 = " (";
var G__330905 = (function (){var G__330996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__330997 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330996,G__330997) : tailrecursion.hoplon.span.call(null,G__330996,G__330997));
})();
var G__330906 = " ";
var G__330907 = (function (){var G__330998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__330999 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__330998,G__330999) : tailrecursion.hoplon.span.call(null,G__330998,G__330999));
})();
var G__330908 = ")\n                                     (";
var G__330909 = (function (){var G__331000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331001 = "adjoin";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331000,G__331001) : tailrecursion.hoplon.span.call(null,G__331000,G__331001));
})();
var G__330910 = " ";
var G__330911 = (function (){var G__331002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331003 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331002,G__331003) : tailrecursion.hoplon.span.call(null,G__331002,G__331003));
})();
var G__330912 = " (";
var G__330913 = (function (){var G__331004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331005 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331004,G__331005) : tailrecursion.hoplon.span.call(null,G__331004,G__331005));
})();
var G__330914 = " ";
var G__330915 = (function (){var G__331006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331007 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331006,G__331007) : tailrecursion.hoplon.span.call(null,G__331006,G__331007));
})();
var G__330916 = "))\n                                     (";
var G__330917 = (function (){var G__331008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331009 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331008,G__331009) : tailrecursion.hoplon.span.call(null,G__331008,G__331009));
})();
var G__330918 = " ";
var G__330919 = (function (){var G__331010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331011 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331010,G__331011) : tailrecursion.hoplon.span.call(null,G__331010,G__331011));
})();
var G__330920 = "))\n        (";
var G__330921 = (function (){var G__331012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331013 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331012,G__331013) : tailrecursion.hoplon.span.call(null,G__331012,G__331013));
})();
var G__330922 = (function (){var G__331014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331015 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331014,G__331015) : tailrecursion.hoplon.span.call(null,G__331014,G__331015));
})();
var G__330923 = " (";
var G__330924 = (function (){var G__331016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331017 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331016,G__331017) : tailrecursion.hoplon.span.call(null,G__331016,G__331017));
})();
var G__330925 = " ";
var G__330926 = (function (){var G__331018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331019 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331018,G__331019) : tailrecursion.hoplon.span.call(null,G__331018,G__331019));
})();
var G__330927 = ")) (";
var G__330928 = (function (){var G__331020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331021 = "make-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331020,G__331021) : tailrecursion.hoplon.span.call(null,G__331020,G__331021));
})();
var G__330929 = " (";
var G__330930 = (function (){var G__331022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331023 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331022,G__331023) : tailrecursion.hoplon.span.call(null,G__331022,G__331023));
})();
var G__330931 = " ";
var G__330932 = (function (){var G__331024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331025 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331024,G__331025) : tailrecursion.hoplon.span.call(null,G__331024,G__331025));
})();
var G__330933 = ")\n                                     (";
var G__330934 = (function (){var G__331026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331027 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331026,G__331027) : tailrecursion.hoplon.span.call(null,G__331026,G__331027));
})();
var G__330935 = " ";
var G__330936 = (function (){var G__331028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331029 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331028,G__331029) : tailrecursion.hoplon.span.call(null,G__331028,G__331029));
})();
var G__330937 = ")\n                                     (";
var G__330938 = (function (){var G__331030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331031 = "adjoin";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331030,G__331031) : tailrecursion.hoplon.span.call(null,G__331030,G__331031));
})();
var G__330939 = " ";
var G__330940 = (function (){var G__331032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331033 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331032,G__331033) : tailrecursion.hoplon.span.call(null,G__331032,G__331033));
})();
var G__330941 = " (";
var G__330942 = (function (){var G__331034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331035 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331034,G__331035) : tailrecursion.hoplon.span.call(null,G__331034,G__331035));
})();
var G__330943 = " ";
var G__330944 = (function (){var G__331036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331037 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331036,G__331037) : tailrecursion.hoplon.span.call(null,G__331036,G__331037));
})();
var G__330945 = ")))\n        ";
var G__330946 = (function (){var G__331038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331039 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331038,G__331039) : tailrecursion.hoplon.span.call(null,G__331038,G__331039));
})();
var G__330947 = " (";
var G__330948 = (function (){var G__331040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331041 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331040,G__331041) : tailrecursion.hoplon.span.call(null,G__331040,G__331041));
})();
var G__330949 = " (";
var G__330950 = (function (){var G__331042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331043 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331042,G__331043) : tailrecursion.hoplon.span.call(null,G__331042,G__331043));
})();
var G__330951 = " ";
var G__330952 = (function (){var G__331044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__331045 = "\"Something went wrong with adjoin-set\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331044,G__331045) : tailrecursion.hoplon.span.call(null,G__331044,G__331045));
})();
var G__330953 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$90 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$90(G__330864,G__330865,G__330866,G__330867,G__330868,G__330869,G__330870,G__330871,G__330872,G__330873,G__330874,G__330875,G__330876,G__330877,G__330878,G__330879,G__330880,G__330881,G__330882,G__330883,G__330884,G__330885,G__330886,G__330887,G__330888,G__330889,G__330890,G__330891,G__330892,G__330893,G__330894,G__330895,G__330896,G__330897,G__330898,G__330899,G__330900,G__330901,G__330902,G__330903,G__330904,G__330905,G__330906,G__330907,G__330908,G__330909,G__330910,G__330911,G__330912,G__330913,G__330914,G__330915,G__330916,G__330917,G__330918,G__330919,G__330920,G__330921,G__330922,G__330923,G__330924,G__330925,G__330926,G__330927,G__330928,G__330929,G__330930,G__330931,G__330932,G__330933,G__330934,G__330935,G__330936,G__330937,G__330938,G__330939,G__330940,G__330941,G__330942,G__330943,G__330944,G__330945,G__330946,G__330947,G__330948,G__330949,G__330950,G__330951,G__330952,G__330953) : tailrecursion.hoplon.pre.call(null,G__330864,G__330865,G__330866,G__330867,G__330868,G__330869,G__330870,G__330871,G__330872,G__330873,G__330874,G__330875,G__330876,G__330877,G__330878,G__330879,G__330880,G__330881,G__330882,G__330883,G__330884,G__330885,G__330886,G__330887,G__330888,G__330889,G__330890,G__330891,G__330892,G__330893,G__330894,G__330895,G__330896,G__330897,G__330898,G__330899,G__330900,G__330901,G__330902,G__330903,G__330904,G__330905,G__330906,G__330907,G__330908,G__330909,G__330910,G__330911,G__330912,G__330913,G__330914,G__330915,G__330916,G__330917,G__330918,G__330919,G__330920,G__330921,G__330922,G__330923,G__330924,G__330925,G__330926,G__330927,G__330928,G__330929,G__330930,G__330931,G__330932,G__330933,G__330934,G__330935,G__330936,G__330937,G__330938,G__330939,G__330940,G__330941,G__330942,G__330943,G__330944,G__330945,G__330946,G__330947,G__330948,G__330949,G__330950,G__330951,G__330952,G__330953));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__330862,G__330863) : tailrecursion.hoplon.div.call(null,G__330862,G__330863));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__330861) : tailrecursion.hoplon.div.call(null,G__330861));
})(),(function (){var G__331046 = cljs.core.PersistentArrayMap.EMPTY;
var G__331047 = new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The above claim that searching the tree can be performed in a logarithmic number of steps rests on the assumption that the tree is ",(function (){var G__331048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__331049 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["balanced,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__331048,G__331049) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__331048,G__331049));
})()," i.e., that the left and right subtree of every tree have approximately the same number of elements, so that each subtree contains about half the elements of its parent. But how can we be certain that the trees we construct will be balanced? Even if we start with a balanced tree, adding elements with ",(function (){var G__331050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__331051 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331050,G__331051) : tailrecursion.hoplon.markdown.code_node.call(null,G__331050,G__331051));
})()," may produce an unbalanced result. Since the position of a newly adjoined element depends on how the element compares with the items already in the set, we can expect that if we add elements ",(function (){var G__331052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__331053 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["randomly"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__331052,G__331053) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__331052,G__331053));
})()," the tree will tend to be balanced on the average (note: in this example, the top level might not be balanced, but as we add more and more elements in this ",(function (){var G__331054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__331055 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["random"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__331054,G__331055) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__331054,G__331055));
})()," fashion, we can safely assume that on the average, each level approximately halves the number of elements, even if it",(function (){var G__331056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__331057 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__331056,G__331057) : tailrecursion.hoplon.markdown.simple_node.call(null,G__331056,G__331057));
})(),"s not true for the first level in particular). But this is not a guarantee. For example, if we start with an ampty set and adjoin the numbers 1 through 7 in a sequence we end up with the highly unbalanced tree shown in figure 2.17. In this tree all the left subtrees are empty, so it has no advantage over a simple ordered list. One way to solve this problem is to define an operation that transforms an arbitrary tree into a balanced tree with the same elements. Then we can perform this transformation after every few ",(function (){var G__331058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__331059 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331058,G__331059) : tailrecursion.hoplon.markdown.code_node.call(null,G__331058,G__331059));
})()," operations to keep our set in balance. There are also other ways to solve this problem, most of which involve designing new data structures for which searching and insertion both can be done in \\(\\Theta(\\log n)\\) setps.",(function (){var G__331060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__331061 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Examples of such structures include ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["B-trees"], null)], 0))," and ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["red-black trees"], null)], 0)),". There is a large literature on data structures devoted to this problem. See Cormen, Leiserson, and Rivest 1990."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__331060,G__331061) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__331060,G__331061));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__331046,G__331047) : tailrecursion.hoplon.markdown.para_node.call(null,G__331046,G__331047));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_329907;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_329906;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_329905;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_329904;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"Unbalanced tree produced by adjoining 1 through 7 in sequence."], null)], 0))], 0));
var G__319895 = "";
var G__319896 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_331062 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_331063 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_331064 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_331065 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__331066 = cljs.core.PersistentArrayMap.EMPTY;
var G__331067 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Each of the following two procedures converts a binary tree to a list."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__331066,G__331067) : tailrecursion.hoplon.markdown.para_node.call(null,G__331066,G__331067));
})(),(function (){var G__331238 = (function (){var G__331239 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__331240 = (function (){var G__331241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__331242 = "(";
var G__331243 = (function (){var G__331325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__331326 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331325,G__331326) : tailrecursion.hoplon.span.call(null,G__331325,G__331326));
})();
var G__331244 = (function (){var G__331327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331328 = "tree->list-1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331327,G__331328) : tailrecursion.hoplon.span.call(null,G__331327,G__331328));
})();
var G__331245 = " [";
var G__331246 = (function (){var G__331329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331330 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331329,G__331330) : tailrecursion.hoplon.span.call(null,G__331329,G__331330));
})();
var G__331247 = "]\n  (";
var G__331248 = (function (){var G__331331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__331332 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331331,G__331332) : tailrecursion.hoplon.span.call(null,G__331331,G__331332));
})();
var G__331249 = "(";
var G__331250 = (function (){var G__331333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331334 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331333,G__331334) : tailrecursion.hoplon.span.call(null,G__331333,G__331334));
})();
var G__331251 = " ";
var G__331252 = (function (){var G__331335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331336 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331335,G__331336) : tailrecursion.hoplon.span.call(null,G__331335,G__331336));
})();
var G__331253 = ")\n      ";
var G__331254 = (function (){var G__331337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__331338 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331337,G__331338) : tailrecursion.hoplon.span.call(null,G__331337,G__331338));
})();
var G__331255 = "()\n      (";
var G__331256 = (function (){var G__331339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331340 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331339,G__331340) : tailrecursion.hoplon.span.call(null,G__331339,G__331340));
})();
var G__331257 = "(";
var G__331258 = (function (){var G__331341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331342 = "tree->list-1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331341,G__331342) : tailrecursion.hoplon.span.call(null,G__331341,G__331342));
})();
var G__331259 = " (";
var G__331260 = (function (){var G__331343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331344 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331343,G__331344) : tailrecursion.hoplon.span.call(null,G__331343,G__331344));
})();
var G__331261 = " ";
var G__331262 = (function (){var G__331345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331346 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331345,G__331346) : tailrecursion.hoplon.span.call(null,G__331345,G__331346));
})();
var G__331263 = "))\n              (";
var G__331264 = (function (){var G__331347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331348 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331347,G__331348) : tailrecursion.hoplon.span.call(null,G__331347,G__331348));
})();
var G__331265 = "(";
var G__331266 = (function (){var G__331349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331350 = "tree->list-1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331349,G__331350) : tailrecursion.hoplon.span.call(null,G__331349,G__331350));
})();
var G__331267 = " (";
var G__331268 = (function (){var G__331351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331352 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331351,G__331352) : tailrecursion.hoplon.span.call(null,G__331351,G__331352));
})();
var G__331269 = " ";
var G__331270 = (function (){var G__331353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331354 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331353,G__331354) : tailrecursion.hoplon.span.call(null,G__331353,G__331354));
})();
var G__331271 = "))\n                    (";
var G__331272 = (function (){var G__331355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331356 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331355,G__331356) : tailrecursion.hoplon.span.call(null,G__331355,G__331356));
})();
var G__331273 = " ";
var G__331274 = (function (){var G__331357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331358 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331357,G__331358) : tailrecursion.hoplon.span.call(null,G__331357,G__331358));
})();
var G__331275 = ")))))\n\n(";
var G__331276 = (function (){var G__331359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__331360 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331359,G__331360) : tailrecursion.hoplon.span.call(null,G__331359,G__331360));
})();
var G__331277 = (function (){var G__331361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331362 = "tree->list-2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331361,G__331362) : tailrecursion.hoplon.span.call(null,G__331361,G__331362));
})();
var G__331278 = " [";
var G__331279 = (function (){var G__331363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331364 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331363,G__331364) : tailrecursion.hoplon.span.call(null,G__331363,G__331364));
})();
var G__331280 = "]\n  (";
var G__331281 = (function (){var G__331365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__331366 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331365,G__331366) : tailrecursion.hoplon.span.call(null,G__331365,G__331366));
})();
var G__331282 = "[";
var G__331283 = (function (){var G__331367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331368 = "copy-to-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331367,G__331368) : tailrecursion.hoplon.span.call(null,G__331367,G__331368));
})();
var G__331284 = " (";
var G__331285 = (function (){var G__331369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__331370 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331369,G__331370) : tailrecursion.hoplon.span.call(null,G__331369,G__331370));
})();
var G__331286 = "[";
var G__331287 = (function (){var G__331371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331372 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331371,G__331372) : tailrecursion.hoplon.span.call(null,G__331371,G__331372));
})();
var G__331288 = " ";
var G__331289 = (function (){var G__331373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331374 = "result-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331373,G__331374) : tailrecursion.hoplon.span.call(null,G__331373,G__331374));
})();
var G__331290 = "]\n                       (";
var G__331291 = (function (){var G__331375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__331376 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331375,G__331376) : tailrecursion.hoplon.span.call(null,G__331375,G__331376));
})();
var G__331292 = "(";
var G__331293 = (function (){var G__331377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331378 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331377,G__331378) : tailrecursion.hoplon.span.call(null,G__331377,G__331378));
})();
var G__331294 = " ";
var G__331295 = (function (){var G__331379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331380 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331379,G__331380) : tailrecursion.hoplon.span.call(null,G__331379,G__331380));
})();
var G__331296 = ")\n                           ";
var G__331297 = (function (){var G__331381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331382 = "result-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331381,G__331382) : tailrecursion.hoplon.span.call(null,G__331381,G__331382));
})();
var G__331298 = "\n                           (";
var G__331299 = (function (){var G__331383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331384 = "copy-to-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331383,G__331384) : tailrecursion.hoplon.span.call(null,G__331383,G__331384));
})();
var G__331300 = " (";
var G__331301 = (function (){var G__331385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331386 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331385,G__331386) : tailrecursion.hoplon.span.call(null,G__331385,G__331386));
})();
var G__331302 = " ";
var G__331303 = (function (){var G__331387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331388 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331387,G__331388) : tailrecursion.hoplon.span.call(null,G__331387,G__331388));
})();
var G__331304 = ")\n                                         (";
var G__331305 = (function (){var G__331389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331390 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331389,G__331390) : tailrecursion.hoplon.span.call(null,G__331389,G__331390));
})();
var G__331306 = "(";
var G__331307 = (function (){var G__331391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331392 = "copy-to-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331391,G__331392) : tailrecursion.hoplon.span.call(null,G__331391,G__331392));
})();
var G__331308 = " \n                                                 (";
var G__331309 = (function (){var G__331393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331394 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331393,G__331394) : tailrecursion.hoplon.span.call(null,G__331393,G__331394));
})();
var G__331310 = " ";
var G__331311 = (function (){var G__331395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331396 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331395,G__331396) : tailrecursion.hoplon.span.call(null,G__331395,G__331396));
})();
var G__331312 = ")\n                                                 ";
var G__331313 = (function (){var G__331397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331398 = "result-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331397,G__331398) : tailrecursion.hoplon.span.call(null,G__331397,G__331398));
})();
var G__331314 = ")\n                                               (";
var G__331315 = (function (){var G__331399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331400 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331399,G__331400) : tailrecursion.hoplon.span.call(null,G__331399,G__331400));
})();
var G__331316 = " ";
var G__331317 = (function (){var G__331401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331402 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331401,G__331402) : tailrecursion.hoplon.span.call(null,G__331401,G__331402));
})();
var G__331318 = ")))))]\n    (";
var G__331319 = (function (){var G__331403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331404 = "copy-to-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331403,G__331404) : tailrecursion.hoplon.span.call(null,G__331403,G__331404));
})();
var G__331320 = " ";
var G__331321 = (function (){var G__331405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331406 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331405,G__331406) : tailrecursion.hoplon.span.call(null,G__331405,G__331406));
})();
var G__331322 = " ";
var G__331323 = (function (){var G__331407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__331408 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331407,G__331408) : tailrecursion.hoplon.span.call(null,G__331407,G__331408));
})();
var G__331324 = "())))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$84 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$84(G__331241,G__331242,G__331243,G__331244,G__331245,G__331246,G__331247,G__331248,G__331249,G__331250,G__331251,G__331252,G__331253,G__331254,G__331255,G__331256,G__331257,G__331258,G__331259,G__331260,G__331261,G__331262,G__331263,G__331264,G__331265,G__331266,G__331267,G__331268,G__331269,G__331270,G__331271,G__331272,G__331273,G__331274,G__331275,G__331276,G__331277,G__331278,G__331279,G__331280,G__331281,G__331282,G__331283,G__331284,G__331285,G__331286,G__331287,G__331288,G__331289,G__331290,G__331291,G__331292,G__331293,G__331294,G__331295,G__331296,G__331297,G__331298,G__331299,G__331300,G__331301,G__331302,G__331303,G__331304,G__331305,G__331306,G__331307,G__331308,G__331309,G__331310,G__331311,G__331312,G__331313,G__331314,G__331315,G__331316,G__331317,G__331318,G__331319,G__331320,G__331321,G__331322,G__331323,G__331324) : tailrecursion.hoplon.pre.call(null,G__331241,G__331242,G__331243,G__331244,G__331245,G__331246,G__331247,G__331248,G__331249,G__331250,G__331251,G__331252,G__331253,G__331254,G__331255,G__331256,G__331257,G__331258,G__331259,G__331260,G__331261,G__331262,G__331263,G__331264,G__331265,G__331266,G__331267,G__331268,G__331269,G__331270,G__331271,G__331272,G__331273,G__331274,G__331275,G__331276,G__331277,G__331278,G__331279,G__331280,G__331281,G__331282,G__331283,G__331284,G__331285,G__331286,G__331287,G__331288,G__331289,G__331290,G__331291,G__331292,G__331293,G__331294,G__331295,G__331296,G__331297,G__331298,G__331299,G__331300,G__331301,G__331302,G__331303,G__331304,G__331305,G__331306,G__331307,G__331308,G__331309,G__331310,G__331311,G__331312,G__331313,G__331314,G__331315,G__331316,G__331317,G__331318,G__331319,G__331320,G__331321,G__331322,G__331323,G__331324));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__331239,G__331240) : tailrecursion.hoplon.div.call(null,G__331239,G__331240));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__331238) : tailrecursion.hoplon.div.call(null,G__331238));
})(),(function (){var G__331409 = cljs.core.PersistentArrayMap.EMPTY;
var G__331410 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a. Do the two procedures produce the same result for every tree? If not, how do the results differ? What lists do the two procedures produce for the trees in figure 2.16?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__331409,G__331410) : tailrecursion.hoplon.markdown.para_node.call(null,G__331409,G__331410));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_331065;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_331064;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_331063;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_331062;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_331411 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_331412 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_331413 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_331414 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__331415 = cljs.core.PersistentArrayMap.EMPTY;
var G__331416 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since both procedures put the ",(function (){var G__331417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"entry"], null);
var G__331418 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331417,G__331418) : tailrecursion.hoplon.markdown.code_node.call(null,G__331417,G__331418));
})()," in the middle of the ",(function (){var G__331419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__331420 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["lesser"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__331419,G__331420) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__331419,G__331420));
})()," elements and the ",(function (){var G__331421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__331422 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["greater"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__331421,G__331422) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__331421,G__331422));
})()," elements, we can be guaranteed that the elements of the tree will show up in the same order. It is for that reason we also know that each of the trees in figure 2.16 will give the same list with both procedures. Each of them turns this sort of tree into an ordered list, so the trees from figure 2.16 would turn into,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__331415,G__331416) : tailrecursion.hoplon.markdown.para_node.call(null,G__331415,G__331416));
})(),(function (){var G__331454 = (function (){var G__331455 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__331456 = (function (){var G__331457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__331458 = (function (){var G__331472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331473 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331472,G__331473) : tailrecursion.hoplon.span.call(null,G__331472,G__331473));
})();
var G__331459 = " (";
var G__331460 = (function (){var G__331474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__331475 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331474,G__331475) : tailrecursion.hoplon.span.call(null,G__331474,G__331475));
})();
var G__331461 = " ";
var G__331462 = (function (){var G__331476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__331477 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331476,G__331477) : tailrecursion.hoplon.span.call(null,G__331476,G__331477));
})();
var G__331463 = " ";
var G__331464 = (function (){var G__331478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__331479 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331478,G__331479) : tailrecursion.hoplon.span.call(null,G__331478,G__331479));
})();
var G__331465 = " ";
var G__331466 = (function (){var G__331480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__331481 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331480,G__331481) : tailrecursion.hoplon.span.call(null,G__331480,G__331481));
})();
var G__331467 = " ";
var G__331468 = (function (){var G__331482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__331483 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331482,G__331483) : tailrecursion.hoplon.span.call(null,G__331482,G__331483));
})();
var G__331469 = " ";
var G__331470 = (function (){var G__331484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__331485 = "11";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331484,G__331485) : tailrecursion.hoplon.span.call(null,G__331484,G__331485));
})();
var G__331471 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$15 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$15(G__331457,G__331458,G__331459,G__331460,G__331461,G__331462,G__331463,G__331464,G__331465,G__331466,G__331467,G__331468,G__331469,G__331470,G__331471) : tailrecursion.hoplon.pre.call(null,G__331457,G__331458,G__331459,G__331460,G__331461,G__331462,G__331463,G__331464,G__331465,G__331466,G__331467,G__331468,G__331469,G__331470,G__331471));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__331455,G__331456) : tailrecursion.hoplon.div.call(null,G__331455,G__331456));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__331454) : tailrecursion.hoplon.div.call(null,G__331454));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_331414;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_331413;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_331412;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_331411;
}})()], 0)),"",(function (){var _STAR_references_STAR_331486 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_331487 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_331488 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_331489 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__331490 = cljs.core.PersistentArrayMap.EMPTY;
var G__331491 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b. Do the two procedures have the same order of growth in the number of steps required to convert a balanced tree with \\(n\\) elements to a list? If not, which one grows more slowly?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__331490,G__331491) : tailrecursion.hoplon.markdown.para_node.call(null,G__331490,G__331491));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_331489;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_331488;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_331487;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_331486;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_331492 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_331493 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_331494 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_331495 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__331496 = cljs.core.PersistentArrayMap.EMPTY;
var G__331497 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since the ",(function (){var G__331498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"concat"], null);
var G__331499 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331498,G__331499) : tailrecursion.hoplon.markdown.code_node.call(null,G__331498,G__331499));
})()," function is \\(\\Theta(n)\\) in terms of steps required and the length of the first list (the prepending one), we can see that ",(function (){var G__331500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"tree->list-1"], null);
var G__331501 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331500,G__331501) : tailrecursion.hoplon.markdown.code_node.call(null,G__331500,G__331501));
})()," is going to take more steps than ",(function (){var G__331502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"tree->list-2"], null);
var G__331503 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331502,G__331503) : tailrecursion.hoplon.markdown.code_node.call(null,G__331502,G__331503));
})(),". Exactly how many more, we can only estimate (it depends on how balanced the tree is)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__331496,G__331497) : tailrecursion.hoplon.markdown.para_node.call(null,G__331496,G__331497));
})(),(function (){var G__331504 = cljs.core.PersistentArrayMap.EMPTY;
var G__331505 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If we assume that the tree is balanced, then every level doubles the number of calls to ",(function (){var G__331506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"concat"], null);
var G__331507 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331506,G__331507) : tailrecursion.hoplon.markdown.code_node.call(null,G__331506,G__331507));
})()," but halves the number of elements in each ",(function (){var G__331508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"concat"], null);
var G__331509 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331508,G__331509) : tailrecursion.hoplon.markdown.code_node.call(null,G__331508,G__331509));
})(),". Hence the number of computations done in an ",(function (){var G__331510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"concat"], null);
var G__331511 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331510,G__331511) : tailrecursion.hoplon.markdown.code_node.call(null,G__331510,G__331511));
})()," procedure remains constant at \\(n\\) (roughly) accross all levels. Since there are approximately \\(\\log n\\) levels, we can conclude that the calls to ",(function (){var G__331512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"concat"], null);
var G__331513 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331512,G__331513) : tailrecursion.hoplon.markdown.code_node.call(null,G__331512,G__331513));
})()," take \\(\\theta(n\\log n)\\) steps. If we are to include the calls to ",(function (){var G__331514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__331515 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331514,G__331515) : tailrecursion.hoplon.markdown.code_node.call(null,G__331514,G__331515));
})()," as well, we find (through similar reasoning), that the total number of steps should be approximately \\(\\Theta(n\\log n+n)=\\Theta(n\\log n)\\) steps."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__331504,G__331505) : tailrecursion.hoplon.markdown.para_node.call(null,G__331504,G__331505));
})(),(function (){var G__331516 = cljs.core.PersistentArrayMap.EMPTY;
var G__331517 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The second procedure, ",(function (){var G__331518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"tree->list-2"], null);
var G__331519 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331518,G__331519) : tailrecursion.hoplon.markdown.code_node.call(null,G__331518,G__331519));
})(),", however, uses ",(function (){var G__331520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__331521 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331520,G__331521) : tailrecursion.hoplon.markdown.code_node.call(null,G__331520,G__331521));
})()," which is always constant time \\(\\Theta(1)\\) as the main building block, which really speeds things up for larger trees. As a matter of fact, if we notice that ",(function (){var G__331522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__331523 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331522,G__331523) : tailrecursion.hoplon.markdown.code_node.call(null,G__331522,G__331523));
})()," is called approximately once per element, we find that the number of steps required is approximately \\(\\Theta(n)\\). So, to answer the question, ",(function (){var G__331524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"tree->list-2"], null);
var G__331525 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331524,G__331525) : tailrecursion.hoplon.markdown.code_node.call(null,G__331524,G__331525));
})()," grows more slowly (which is to say it is faster) than ",(function (){var G__331526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"tree->list-1"], null);
var G__331527 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331526,G__331527) : tailrecursion.hoplon.markdown.code_node.call(null,G__331526,G__331527));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__331516,G__331517) : tailrecursion.hoplon.markdown.para_node.call(null,G__331516,G__331517));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_331495;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_331494;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_331493;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_331492;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_331528 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_331529 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_331530 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_331531 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__331532 = cljs.core.PersistentArrayMap.EMPTY;
var G__331533 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following procedure ",(function (){var G__331534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list->tree"], null);
var G__331535 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331534,G__331535) : tailrecursion.hoplon.markdown.code_node.call(null,G__331534,G__331535));
})()," converts an ordered list to a balanced binary tree. The helper procedure ",(function (){var G__331536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"partial-tree"], null);
var G__331537 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331536,G__331537) : tailrecursion.hoplon.markdown.code_node.call(null,G__331536,G__331537));
})()," takes as arguments an integer \\(n\\) and list of at least \\(n\\) elements and constructs a balanced tree containing the first \\(n\\) elements of the list. The result returned by ",(function (){var G__331538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"partial-tree"], null);
var G__331539 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331538,G__331539) : tailrecursion.hoplon.markdown.code_node.call(null,G__331538,G__331539));
})()," is a pair (formed with ",(function (){var G__331540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__331541 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331540,G__331541) : tailrecursion.hoplon.markdown.code_node.call(null,G__331540,G__331541));
})(),") whose ",(function (){var G__331542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__331543 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331542,G__331543) : tailrecursion.hoplon.markdown.code_node.call(null,G__331542,G__331543));
})()," is the constructed tree and whose ",(function (){var G__331544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__331545 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__331544,G__331545) : tailrecursion.hoplon.markdown.code_node.call(null,G__331544,G__331545));
})()," is the list of elements not included in the tree."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__331532,G__331533) : tailrecursion.hoplon.markdown.para_node.call(null,G__331532,G__331533));
})(),(function (){var G__331580 = (function (){var G__331581 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__331582 = (function (){var G__331583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__331584 = "(";
var G__331585 = (function (){var G__331599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__331600 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331599,G__331600) : tailrecursion.hoplon.span.call(null,G__331599,G__331600));
})();
var G__331586 = (function (){var G__331601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331602 = "list->tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331601,G__331602) : tailrecursion.hoplon.span.call(null,G__331601,G__331602));
})();
var G__331587 = " [";
var G__331588 = (function (){var G__331603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331604 = "elements";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331603,G__331604) : tailrecursion.hoplon.span.call(null,G__331603,G__331604));
})();
var G__331589 = "]\n  (";
var G__331590 = (function (){var G__331605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331606 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331605,G__331606) : tailrecursion.hoplon.span.call(null,G__331605,G__331606));
})();
var G__331591 = "(";
var G__331592 = (function (){var G__331607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331608 = "partial-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331607,G__331608) : tailrecursion.hoplon.span.call(null,G__331607,G__331608));
})();
var G__331593 = " ";
var G__331594 = (function (){var G__331609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331610 = "elements";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331609,G__331610) : tailrecursion.hoplon.span.call(null,G__331609,G__331610));
})();
var G__331595 = " (";
var G__331596 = (function (){var G__331611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331612 = "count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331611,G__331612) : tailrecursion.hoplon.span.call(null,G__331611,G__331612));
})();
var G__331597 = (function (){var G__331613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331614 = "elements";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331613,G__331614) : tailrecursion.hoplon.span.call(null,G__331613,G__331614));
})();
var G__331598 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16(G__331583,G__331584,G__331585,G__331586,G__331587,G__331588,G__331589,G__331590,G__331591,G__331592,G__331593,G__331594,G__331595,G__331596,G__331597,G__331598) : tailrecursion.hoplon.pre.call(null,G__331583,G__331584,G__331585,G__331586,G__331587,G__331588,G__331589,G__331590,G__331591,G__331592,G__331593,G__331594,G__331595,G__331596,G__331597,G__331598));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__331581,G__331582) : tailrecursion.hoplon.div.call(null,G__331581,G__331582));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__331580) : tailrecursion.hoplon.div.call(null,G__331580));
})(),(function (){var G__331615 = cljs.core.PersistentArrayMap.EMPTY;
var G__331616 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Where,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__331615,G__331616) : tailrecursion.hoplon.markdown.para_node.call(null,G__331615,G__331616));
})(),(function (){var G__331816 = (function (){var G__331817 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__331818 = (function (){var G__331819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__331820 = "(";
var G__331821 = (function (){var G__331912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__331913 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331912,G__331913) : tailrecursion.hoplon.span.call(null,G__331912,G__331913));
})();
var G__331822 = (function (){var G__331914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331915 = "partial-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331914,G__331915) : tailrecursion.hoplon.span.call(null,G__331914,G__331915));
})();
var G__331823 = " [";
var G__331824 = (function (){var G__331916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331917 = "elts";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331916,G__331917) : tailrecursion.hoplon.span.call(null,G__331916,G__331917));
})();
var G__331825 = " ";
var G__331826 = (function (){var G__331918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331919 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331918,G__331919) : tailrecursion.hoplon.span.call(null,G__331918,G__331919));
})();
var G__331827 = "]\n  (";
var G__331828 = (function (){var G__331920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__331921 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331920,G__331921) : tailrecursion.hoplon.span.call(null,G__331920,G__331921));
})();
var G__331829 = "(";
var G__331830 = (function (){var G__331922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331923 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331922,G__331923) : tailrecursion.hoplon.span.call(null,G__331922,G__331923));
})();
var G__331831 = (function (){var G__331924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331925 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331924,G__331925) : tailrecursion.hoplon.span.call(null,G__331924,G__331925));
})();
var G__331832 = " ";
var G__331833 = (function (){var G__331926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__331927 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331926,G__331927) : tailrecursion.hoplon.span.call(null,G__331926,G__331927));
})();
var G__331834 = ")\n      (";
var G__331835 = (function (){var G__331928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331929 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331928,G__331929) : tailrecursion.hoplon.span.call(null,G__331928,G__331929));
})();
var G__331836 = (function (){var G__331930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331931 = "elts";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331930,G__331931) : tailrecursion.hoplon.span.call(null,G__331930,G__331931));
})();
var G__331837 = " ";
var G__331838 = (function (){var G__331932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__331933 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331932,G__331933) : tailrecursion.hoplon.span.call(null,G__331932,G__331933));
})();
var G__331839 = "())\n      (";
var G__331840 = (function (){var G__331934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__331935 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331934,G__331935) : tailrecursion.hoplon.span.call(null,G__331934,G__331935));
})();
var G__331841 = "[";
var G__331842 = (function (){var G__331936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331937 = "left-size";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331936,G__331937) : tailrecursion.hoplon.span.call(null,G__331936,G__331937));
})();
var G__331843 = "      (";
var G__331844 = (function (){var G__331938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331939 = "quotient";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331938,G__331939) : tailrecursion.hoplon.span.call(null,G__331938,G__331939));
})();
var G__331845 = " (";
var G__331846 = (function (){var G__331940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331941 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331940,G__331941) : tailrecursion.hoplon.span.call(null,G__331940,G__331941));
})();
var G__331847 = (function (){var G__331942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331943 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331942,G__331943) : tailrecursion.hoplon.span.call(null,G__331942,G__331943));
})();
var G__331848 = ") ";
var G__331849 = (function (){var G__331944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__331945 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331944,G__331945) : tailrecursion.hoplon.span.call(null,G__331944,G__331945));
})();
var G__331850 = ")\n            ";
var G__331851 = (function (){var G__331946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331947 = "left-result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331946,G__331947) : tailrecursion.hoplon.span.call(null,G__331946,G__331947));
})();
var G__331852 = "    (";
var G__331853 = (function (){var G__331948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331949 = "partial-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331948,G__331949) : tailrecursion.hoplon.span.call(null,G__331948,G__331949));
})();
var G__331854 = " ";
var G__331855 = (function (){var G__331950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331951 = "elts";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331950,G__331951) : tailrecursion.hoplon.span.call(null,G__331950,G__331951));
})();
var G__331856 = " ";
var G__331857 = (function (){var G__331952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331953 = "left-size";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331952,G__331953) : tailrecursion.hoplon.span.call(null,G__331952,G__331953));
})();
var G__331858 = ")\n            ";
var G__331859 = (function (){var G__331954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331955 = "left-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331954,G__331955) : tailrecursion.hoplon.span.call(null,G__331954,G__331955));
})();
var G__331860 = "      (";
var G__331861 = (function (){var G__331956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331957 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331956,G__331957) : tailrecursion.hoplon.span.call(null,G__331956,G__331957));
})();
var G__331862 = (function (){var G__331958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331959 = "left-result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331958,G__331959) : tailrecursion.hoplon.span.call(null,G__331958,G__331959));
})();
var G__331863 = ")\n            ";
var G__331864 = (function (){var G__331960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331961 = "non-left-elts";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331960,G__331961) : tailrecursion.hoplon.span.call(null,G__331960,G__331961));
})();
var G__331865 = "  (";
var G__331866 = (function (){var G__331962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331963 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331962,G__331963) : tailrecursion.hoplon.span.call(null,G__331962,G__331963));
})();
var G__331867 = (function (){var G__331964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331965 = "left-result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331964,G__331965) : tailrecursion.hoplon.span.call(null,G__331964,G__331965));
})();
var G__331868 = ")\n            ";
var G__331869 = (function (){var G__331966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331967 = "right-size";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331966,G__331967) : tailrecursion.hoplon.span.call(null,G__331966,G__331967));
})();
var G__331870 = "     (";
var G__331871 = (function (){var G__331968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331969 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331968,G__331969) : tailrecursion.hoplon.span.call(null,G__331968,G__331969));
})();
var G__331872 = (function (){var G__331970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331971 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331970,G__331971) : tailrecursion.hoplon.span.call(null,G__331970,G__331971));
})();
var G__331873 = " (";
var G__331874 = (function (){var G__331972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331973 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331972,G__331973) : tailrecursion.hoplon.span.call(null,G__331972,G__331973));
})();
var G__331875 = (function (){var G__331974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331975 = "left-size";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331974,G__331975) : tailrecursion.hoplon.span.call(null,G__331974,G__331975));
})();
var G__331876 = "))\n            ";
var G__331877 = (function (){var G__331976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331977 = "this-entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331976,G__331977) : tailrecursion.hoplon.span.call(null,G__331976,G__331977));
})();
var G__331878 = "     (";
var G__331879 = (function (){var G__331978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331979 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331978,G__331979) : tailrecursion.hoplon.span.call(null,G__331978,G__331979));
})();
var G__331880 = (function (){var G__331980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331981 = "non-left-elts";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331980,G__331981) : tailrecursion.hoplon.span.call(null,G__331980,G__331981));
})();
var G__331881 = ")\n            ";
var G__331882 = (function (){var G__331982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331983 = "right-result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331982,G__331983) : tailrecursion.hoplon.span.call(null,G__331982,G__331983));
})();
var G__331883 = "   (";
var G__331884 = (function (){var G__331984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__331985 = "partial-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331984,G__331985) : tailrecursion.hoplon.span.call(null,G__331984,G__331985));
})();
var G__331885 = " (";
var G__331886 = (function (){var G__331986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331987 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331986,G__331987) : tailrecursion.hoplon.span.call(null,G__331986,G__331987));
})();
var G__331887 = (function (){var G__331988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331989 = "non-left-elts";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331988,G__331989) : tailrecursion.hoplon.span.call(null,G__331988,G__331989));
})();
var G__331888 = ") ";
var G__331889 = (function (){var G__331990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331991 = "right-size";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331990,G__331991) : tailrecursion.hoplon.span.call(null,G__331990,G__331991));
})();
var G__331890 = ")\n            ";
var G__331891 = (function (){var G__331992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331993 = "right-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331992,G__331993) : tailrecursion.hoplon.span.call(null,G__331992,G__331993));
})();
var G__331892 = "     (";
var G__331893 = (function (){var G__331994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__331995 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331994,G__331995) : tailrecursion.hoplon.span.call(null,G__331994,G__331995));
})();
var G__331894 = (function (){var G__331996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331997 = "right-result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331996,G__331997) : tailrecursion.hoplon.span.call(null,G__331996,G__331997));
})();
var G__331895 = ")\n            ";
var G__331896 = (function (){var G__331998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__331999 = "remaining-elts";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__331998,G__331999) : tailrecursion.hoplon.span.call(null,G__331998,G__331999));
})();
var G__331897 = " (";
var G__331898 = (function (){var G__332000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332001 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332000,G__332001) : tailrecursion.hoplon.span.call(null,G__332000,G__332001));
})();
var G__331899 = (function (){var G__332002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332003 = "right-result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332002,G__332003) : tailrecursion.hoplon.span.call(null,G__332002,G__332003));
})();
var G__331900 = ")]\n        (";
var G__331901 = (function (){var G__332004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332005 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332004,G__332005) : tailrecursion.hoplon.span.call(null,G__332004,G__332005));
})();
var G__331902 = (function (){var G__332006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332007 = "remaining-elts";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332006,G__332007) : tailrecursion.hoplon.span.call(null,G__332006,G__332007));
})();
var G__331903 = " (";
var G__331904 = (function (){var G__332008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332009 = "make-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332008,G__332009) : tailrecursion.hoplon.span.call(null,G__332008,G__332009));
})();
var G__331905 = " ";
var G__331906 = (function (){var G__332010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332011 = "this-entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332010,G__332011) : tailrecursion.hoplon.span.call(null,G__332010,G__332011));
})();
var G__331907 = " ";
var G__331908 = (function (){var G__332012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332013 = "left-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332012,G__332013) : tailrecursion.hoplon.span.call(null,G__332012,G__332013));
})();
var G__331909 = " ";
var G__331910 = (function (){var G__332014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332015 = "right-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332014,G__332015) : tailrecursion.hoplon.span.call(null,G__332014,G__332015));
})();
var G__331911 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$93 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$93(G__331819,G__331820,G__331821,G__331822,G__331823,G__331824,G__331825,G__331826,G__331827,G__331828,G__331829,G__331830,G__331831,G__331832,G__331833,G__331834,G__331835,G__331836,G__331837,G__331838,G__331839,G__331840,G__331841,G__331842,G__331843,G__331844,G__331845,G__331846,G__331847,G__331848,G__331849,G__331850,G__331851,G__331852,G__331853,G__331854,G__331855,G__331856,G__331857,G__331858,G__331859,G__331860,G__331861,G__331862,G__331863,G__331864,G__331865,G__331866,G__331867,G__331868,G__331869,G__331870,G__331871,G__331872,G__331873,G__331874,G__331875,G__331876,G__331877,G__331878,G__331879,G__331880,G__331881,G__331882,G__331883,G__331884,G__331885,G__331886,G__331887,G__331888,G__331889,G__331890,G__331891,G__331892,G__331893,G__331894,G__331895,G__331896,G__331897,G__331898,G__331899,G__331900,G__331901,G__331902,G__331903,G__331904,G__331905,G__331906,G__331907,G__331908,G__331909,G__331910,G__331911) : tailrecursion.hoplon.pre.call(null,G__331819,G__331820,G__331821,G__331822,G__331823,G__331824,G__331825,G__331826,G__331827,G__331828,G__331829,G__331830,G__331831,G__331832,G__331833,G__331834,G__331835,G__331836,G__331837,G__331838,G__331839,G__331840,G__331841,G__331842,G__331843,G__331844,G__331845,G__331846,G__331847,G__331848,G__331849,G__331850,G__331851,G__331852,G__331853,G__331854,G__331855,G__331856,G__331857,G__331858,G__331859,G__331860,G__331861,G__331862,G__331863,G__331864,G__331865,G__331866,G__331867,G__331868,G__331869,G__331870,G__331871,G__331872,G__331873,G__331874,G__331875,G__331876,G__331877,G__331878,G__331879,G__331880,G__331881,G__331882,G__331883,G__331884,G__331885,G__331886,G__331887,G__331888,G__331889,G__331890,G__331891,G__331892,G__331893,G__331894,G__331895,G__331896,G__331897,G__331898,G__331899,G__331900,G__331901,G__331902,G__331903,G__331904,G__331905,G__331906,G__331907,G__331908,G__331909,G__331910,G__331911));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__331817,G__331818) : tailrecursion.hoplon.div.call(null,G__331817,G__331818));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__331816) : tailrecursion.hoplon.div.call(null,G__331816));
})(),(function (){var G__332016 = cljs.core.PersistentArrayMap.EMPTY;
var G__332017 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and we can define ",(function (){var G__332018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"quotient"], null);
var G__332019 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332018,G__332019) : tailrecursion.hoplon.markdown.code_node.call(null,G__332018,G__332019));
})()," as,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332016,G__332017) : tailrecursion.hoplon.markdown.para_node.call(null,G__332016,G__332017));
})(),(function (){var G__332066 = (function (){var G__332067 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__332068 = (function (){var G__332069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__332070 = "(";
var G__332071 = (function (){var G__332091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__332092 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332091,G__332092) : tailrecursion.hoplon.span.call(null,G__332091,G__332092));
})();
var G__332072 = (function (){var G__332093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332094 = "quotient";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332093,G__332094) : tailrecursion.hoplon.span.call(null,G__332093,G__332094));
})();
var G__332073 = " [";
var G__332074 = (function (){var G__332095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332096 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332095,G__332096) : tailrecursion.hoplon.span.call(null,G__332095,G__332096));
})();
var G__332075 = " ";
var G__332076 = (function (){var G__332097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332098 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332097,G__332098) : tailrecursion.hoplon.span.call(null,G__332097,G__332098));
})();
var G__332077 = "]\n  (";
var G__332078 = (function (){var G__332099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332100 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332099,G__332100) : tailrecursion.hoplon.span.call(null,G__332099,G__332100));
})();
var G__332079 = "(";
var G__332080 = (function (){var G__332101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332102 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332101,G__332102) : tailrecursion.hoplon.span.call(null,G__332101,G__332102));
})();
var G__332081 = (function (){var G__332103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332104 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332103,G__332104) : tailrecursion.hoplon.span.call(null,G__332103,G__332104));
})();
var G__332082 = " (";
var G__332083 = (function (){var G__332105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332106 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332105,G__332106) : tailrecursion.hoplon.span.call(null,G__332105,G__332106));
})();
var G__332084 = " ";
var G__332085 = (function (){var G__332107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332108 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332107,G__332108) : tailrecursion.hoplon.span.call(null,G__332107,G__332108));
})();
var G__332086 = " ";
var G__332087 = (function (){var G__332109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332110 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332109,G__332110) : tailrecursion.hoplon.span.call(null,G__332109,G__332110));
})();
var G__332088 = ")) ";
var G__332089 = (function (){var G__332111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332112 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332111,G__332112) : tailrecursion.hoplon.span.call(null,G__332111,G__332112));
})();
var G__332090 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__332069,G__332070,G__332071,G__332072,G__332073,G__332074,G__332075,G__332076,G__332077,G__332078,G__332079,G__332080,G__332081,G__332082,G__332083,G__332084,G__332085,G__332086,G__332087,G__332088,G__332089,G__332090) : tailrecursion.hoplon.pre.call(null,G__332069,G__332070,G__332071,G__332072,G__332073,G__332074,G__332075,G__332076,G__332077,G__332078,G__332079,G__332080,G__332081,G__332082,G__332083,G__332084,G__332085,G__332086,G__332087,G__332088,G__332089,G__332090));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__332067,G__332068) : tailrecursion.hoplon.div.call(null,G__332067,G__332068));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__332066) : tailrecursion.hoplon.div.call(null,G__332066));
})(),(function (){var G__332113 = cljs.core.PersistentArrayMap.EMPTY;
var G__332114 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a. Write a short paragraph explaining as clearly as you can how ",(function (){var G__332115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"partial-tree"], null);
var G__332116 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332115,G__332116) : tailrecursion.hoplon.markdown.code_node.call(null,G__332115,G__332116));
})()," works. Draw the tree produced by ",(function (){var G__332117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list->tree"], null);
var G__332118 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332117,G__332118) : tailrecursion.hoplon.markdown.code_node.call(null,G__332117,G__332118));
})()," for the list ",(function (){var G__332119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(1 3 5 7 9 11)"], null);
var G__332120 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332119,G__332120) : tailrecursion.hoplon.markdown.code_node.call(null,G__332119,G__332120));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332113,G__332114) : tailrecursion.hoplon.markdown.para_node.call(null,G__332113,G__332114));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_331531;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_331530;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_331529;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_331528;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_332121 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332122 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_332123 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332124 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__332125 = cljs.core.PersistentArrayMap.EMPTY;
var G__332126 = new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For each \\(n\\), ",(function (){var G__332127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(partial-tree elts n)"], null);
var G__332128 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332127,G__332128) : tailrecursion.hoplon.markdown.code_node.call(null,G__332127,G__332128));
})()," breaks the tree into a list where the first element is a tree of the first \\(n\\) elements, and the rest of the list is the rest of the elements (after the first \\(n\\) are taken out). So in a sense, ",(function (){var G__332129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(partial-tree elts n)"], null);
var G__332130 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332129,G__332130) : tailrecursion.hoplon.markdown.code_node.call(null,G__332129,G__332130));
})()," is like ",(function (){var G__332131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(conj (drop n elts)\ntree-made-from-first-n-elts)"], null);
var G__332132 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332131,G__332132) : tailrecursion.hoplon.markdown.code_node.call(null,G__332131,G__332132));
})(),". So, if we define ",(function (){var G__332133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__332134 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332133,G__332134) : tailrecursion.hoplon.markdown.code_node.call(null,G__332133,G__332134));
})()," as ",(function (){var G__332135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(count\nelts)"], null);
var G__332136 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332135,G__332136) : tailrecursion.hoplon.markdown.code_node.call(null,G__332135,G__332136));
})()," and ",(function (){var G__332137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"m"], null);
var G__332138 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332137,G__332138) : tailrecursion.hoplon.markdown.code_node.call(null,G__332137,G__332138));
})()," as ",(function (){var G__332139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(quotient (dec n) 2)"], null);
var G__332140 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332139,G__332140) : tailrecursion.hoplon.markdown.code_node.call(null,G__332139,G__332140));
})(),", then ",(function (){var G__332141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(partial-tree elts\nm)"], null);
var G__332142 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332141,G__332142) : tailrecursion.hoplon.markdown.code_node.call(null,G__332141,G__332142));
})()," would be a list where the first element is a tree made from the first \\(m\\) elements, and the rest of the tree is ",(function (){var G__332143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(drop m elts)"], null);
var G__332144 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332143,G__332144) : tailrecursion.hoplon.markdown.code_node.call(null,G__332143,G__332144));
})()," (a list of the remaining elements)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332125,G__332126) : tailrecursion.hoplon.markdown.para_node.call(null,G__332125,G__332126));
})(),(function (){var G__332145 = cljs.core.PersistentArrayMap.EMPTY;
var G__332146 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In our procedure we make use of this fact by using the same procedure again on the remaining elements (hence making the right branch of the tree)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332145,G__332146) : tailrecursion.hoplon.markdown.para_node.call(null,G__332145,G__332146));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332124;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332123;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332122;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332121;
}})()], 0)),"",(function (){var _STAR_references_STAR_332147 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332148 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_332149 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332150 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__332151 = cljs.core.PersistentArrayMap.EMPTY;
var G__332152 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b. What is the order of growth in the number of steps required by ",(function (){var G__332153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list->tree"], null);
var G__332154 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332153,G__332154) : tailrecursion.hoplon.markdown.code_node.call(null,G__332153,G__332154));
})()," to convert a list of \\(n\\) elements?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332151,G__332152) : tailrecursion.hoplon.markdown.para_node.call(null,G__332151,G__332152));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332150;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332149;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332148;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332147;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_332155 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332156 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_332157 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332158 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__332159 = cljs.core.PersistentArrayMap.EMPTY;
var G__332160 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since ",(function (){var G__332161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"partial-tree"], null);
var G__332162 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332161,G__332162) : tailrecursion.hoplon.markdown.code_node.call(null,G__332161,G__332162));
})()," uses only the most efficient list opperations (like ",(function (){var G__332163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__332164 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332163,G__332164) : tailrecursion.hoplon.markdown.code_node.call(null,G__332163,G__332164));
})(),", ",(function (){var G__332165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__332166 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332165,G__332166) : tailrecursion.hoplon.markdown.code_node.call(null,G__332165,G__332166));
})(),", etc.) which are all constant time, if we temporarily exclude the recursive calls, ",(function (){var G__332167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"partial-tree"], null);
var G__332168 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332167,G__332168) : tailrecursion.hoplon.markdown.code_node.call(null,G__332167,G__332168));
})()," is a constant time procedure. Now let",(function (){var G__332169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__332170 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__332169,G__332170) : tailrecursion.hoplon.markdown.simple_node.call(null,G__332169,G__332170));
})(),"s compute how the recursive calls affect the order of growth. Note that ",(function (){var G__332171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"partial-tree"], null);
var G__332172 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332171,G__332172) : tailrecursion.hoplon.markdown.code_node.call(null,G__332171,G__332172));
})()," is called once per element of the list and once or twice for each leaf."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332159,G__332160) : tailrecursion.hoplon.markdown.para_node.call(null,G__332159,G__332160));
})(),(function (){var G__332173 = cljs.core.PersistentArrayMap.EMPTY;
var G__332174 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, the ",(function (){var G__332175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list->tree"], null);
var G__332176 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332175,G__332176) : tailrecursion.hoplon.markdown.code_node.call(null,G__332175,G__332176));
})()," procedure, which uses ",(function (){var G__332177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"count"], null);
var G__332178 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332177,G__332178) : tailrecursion.hoplon.markdown.code_node.call(null,G__332177,G__332178));
})()," (a \\(\\Theta(n)\\) procedure), would be about \\(\\Theta(2n+number-of-leaves)\\) which is \\(\\Theta(n)\\). So the procedure should have a growth rate of \\(\\Theta(n)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332173,G__332174) : tailrecursion.hoplon.markdown.para_node.call(null,G__332173,G__332174));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332158;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332157;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332156;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332155;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_332179 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332180 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_332181 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332182 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__332183 = cljs.core.PersistentArrayMap.EMPTY;
var G__332184 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Use the results of exercises 2.63 and 2.64 to give \\(\\Theta(n)\\) implementations of ",(function (){var G__332185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"unioin-set"], null);
var G__332186 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332185,G__332186) : tailrecursion.hoplon.markdown.code_node.call(null,G__332185,G__332186));
})()," and ",(function (){var G__332187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-set"], null);
var G__332188 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332187,G__332188) : tailrecursion.hoplon.markdown.code_node.call(null,G__332187,G__332188));
})()," for sets implemented as (balanced) binary trees.",(function (){var G__332189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__332190 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Exercises 2.63-2.65 are due to Paul Hilfinger."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__332189,G__332190) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__332189,G__332190));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332183,G__332184) : tailrecursion.hoplon.markdown.para_node.call(null,G__332183,G__332184));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332182;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332181;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332180;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332179;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_332191 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332192 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_332193 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332194 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__332195 = cljs.core.PersistentArrayMap.EMPTY;
var G__332196 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can use the ",(function (){var G__332197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-set"], null);
var G__332198 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332197,G__332198) : tailrecursion.hoplon.markdown.code_node.call(null,G__332197,G__332198));
})()," and ",(function (){var G__332199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"unioin-set"], null);
var G__332200 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332199,G__332200) : tailrecursion.hoplon.markdown.code_node.call(null,G__332199,G__332200));
})()," procedures developed for sets as ordered lists."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332195,G__332196) : tailrecursion.hoplon.markdown.para_node.call(null,G__332195,G__332196));
})(),(function (){var G__332244 = (function (){var G__332245 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__332246 = (function (){var G__332247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__332248 = "(";
var G__332249 = (function (){var G__332268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__332269 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332268,G__332269) : tailrecursion.hoplon.span.call(null,G__332268,G__332269));
})();
var G__332250 = (function (){var G__332270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332271 = "union-set*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332270,G__332271) : tailrecursion.hoplon.span.call(null,G__332270,G__332271));
})();
var G__332251 = " [";
var G__332252 = (function (){var G__332272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332273 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332272,G__332273) : tailrecursion.hoplon.span.call(null,G__332272,G__332273));
})();
var G__332253 = " ";
var G__332254 = (function (){var G__332274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332275 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332274,G__332275) : tailrecursion.hoplon.span.call(null,G__332274,G__332275));
})();
var G__332255 = "]\n  (";
var G__332256 = (function (){var G__332276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332277 = "list->tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332276,G__332277) : tailrecursion.hoplon.span.call(null,G__332276,G__332277));
})();
var G__332257 = "\n    (";
var G__332258 = (function (){var G__332278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332279 = "union-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332278,G__332279) : tailrecursion.hoplon.span.call(null,G__332278,G__332279));
})();
var G__332259 = " (";
var G__332260 = (function (){var G__332280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332281 = "tree->list-2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332280,G__332281) : tailrecursion.hoplon.span.call(null,G__332280,G__332281));
})();
var G__332261 = " ";
var G__332262 = (function (){var G__332282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332283 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332282,G__332283) : tailrecursion.hoplon.span.call(null,G__332282,G__332283));
})();
var G__332263 = ")\n               (";
var G__332264 = (function (){var G__332284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332285 = "tree->list-2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332284,G__332285) : tailrecursion.hoplon.span.call(null,G__332284,G__332285));
})();
var G__332265 = " ";
var G__332266 = (function (){var G__332286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332287 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332286,G__332287) : tailrecursion.hoplon.span.call(null,G__332286,G__332287));
})();
var G__332267 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21(G__332247,G__332248,G__332249,G__332250,G__332251,G__332252,G__332253,G__332254,G__332255,G__332256,G__332257,G__332258,G__332259,G__332260,G__332261,G__332262,G__332263,G__332264,G__332265,G__332266,G__332267) : tailrecursion.hoplon.pre.call(null,G__332247,G__332248,G__332249,G__332250,G__332251,G__332252,G__332253,G__332254,G__332255,G__332256,G__332257,G__332258,G__332259,G__332260,G__332261,G__332262,G__332263,G__332264,G__332265,G__332266,G__332267));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__332245,G__332246) : tailrecursion.hoplon.div.call(null,G__332245,G__332246));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__332244) : tailrecursion.hoplon.div.call(null,G__332244));
})(),(function (){var G__332288 = cljs.core.PersistentArrayMap.EMPTY;
var G__332289 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["And similarly,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332288,G__332289) : tailrecursion.hoplon.markdown.para_node.call(null,G__332288,G__332289));
})(),(function (){var G__332333 = (function (){var G__332334 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__332335 = (function (){var G__332336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__332337 = "(";
var G__332338 = (function (){var G__332357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__332358 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332357,G__332358) : tailrecursion.hoplon.span.call(null,G__332357,G__332358));
})();
var G__332339 = (function (){var G__332359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332360 = "intersection-set*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332359,G__332360) : tailrecursion.hoplon.span.call(null,G__332359,G__332360));
})();
var G__332340 = " [";
var G__332341 = (function (){var G__332361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332362 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332361,G__332362) : tailrecursion.hoplon.span.call(null,G__332361,G__332362));
})();
var G__332342 = " ";
var G__332343 = (function (){var G__332363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332364 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332363,G__332364) : tailrecursion.hoplon.span.call(null,G__332363,G__332364));
})();
var G__332344 = "]\n  (";
var G__332345 = (function (){var G__332365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332366 = "list->tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332365,G__332366) : tailrecursion.hoplon.span.call(null,G__332365,G__332366));
})();
var G__332346 = "\n    (";
var G__332347 = (function (){var G__332367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332368 = "intersection-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332367,G__332368) : tailrecursion.hoplon.span.call(null,G__332367,G__332368));
})();
var G__332348 = " (";
var G__332349 = (function (){var G__332369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332370 = "tree->list-2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332369,G__332370) : tailrecursion.hoplon.span.call(null,G__332369,G__332370));
})();
var G__332350 = " ";
var G__332351 = (function (){var G__332371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332372 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332371,G__332372) : tailrecursion.hoplon.span.call(null,G__332371,G__332372));
})();
var G__332352 = ")\n                      (";
var G__332353 = (function (){var G__332373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332374 = "tree->list-2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332373,G__332374) : tailrecursion.hoplon.span.call(null,G__332373,G__332374));
})();
var G__332354 = " ";
var G__332355 = (function (){var G__332375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332376 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332375,G__332376) : tailrecursion.hoplon.span.call(null,G__332375,G__332376));
})();
var G__332356 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21(G__332336,G__332337,G__332338,G__332339,G__332340,G__332341,G__332342,G__332343,G__332344,G__332345,G__332346,G__332347,G__332348,G__332349,G__332350,G__332351,G__332352,G__332353,G__332354,G__332355,G__332356) : tailrecursion.hoplon.pre.call(null,G__332336,G__332337,G__332338,G__332339,G__332340,G__332341,G__332342,G__332343,G__332344,G__332345,G__332346,G__332347,G__332348,G__332349,G__332350,G__332351,G__332352,G__332353,G__332354,G__332355,G__332356));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__332334,G__332335) : tailrecursion.hoplon.div.call(null,G__332334,G__332335));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__332333) : tailrecursion.hoplon.div.call(null,G__332333));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332194;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332193;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332192;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332191;
}})()], 0))], 0))], 0));
var G__319897 = "";
var G__319898 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Sets and Information Retrieval"], null),(function (){var _STAR_references_STAR_332377 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332378 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_332379 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332380 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__332381 = cljs.core.PersistentArrayMap.EMPTY;
var G__332382 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We have examined options for using lists to represent sets and have seen how the choice of representation for a data object can have a large impact on the performance of the programs that use the data. Another reason for concentrating on sets is that the techniques discussed here appear again and again in applications involving information retrieval."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332381,G__332382) : tailrecursion.hoplon.markdown.para_node.call(null,G__332381,G__332382));
})(),(function (){var G__332383 = cljs.core.PersistentArrayMap.EMPTY;
var G__332384 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider a data base containing a large number of individual records, such as the personnel files for a company or the transactions in an accounting system. A typical data-management system spends a large amount of time accessing or modifying the data in the records and therefore requires an efficient method for accessing records. This is done by identifying a part of each record to serve as an identifying ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["key"], null)], 0)),". A key can be anything that uniquely identifies the record. For a personnel file, it might be an employee",(function (){var G__332385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__332386 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__332385,G__332386) : tailrecursion.hoplon.markdown.simple_node.call(null,G__332385,G__332386));
})(),"s ID number. For an accounting system, it might be a transaction number. Whatever the key is, when we define the record as a data structure we should include a key selector procedure that retrieves the key associated with a given record."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332383,G__332384) : tailrecursion.hoplon.markdown.para_node.call(null,G__332383,G__332384));
})(),(function (){var G__332387 = cljs.core.PersistentArrayMap.EMPTY;
var G__332388 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we represent the data base as a set of records. To locate the record with a given key we use a procedure ",(function (){var G__332389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"lookup"], null);
var G__332390 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332389,G__332390) : tailrecursion.hoplon.markdown.code_node.call(null,G__332389,G__332390));
})(),", which takes as arguments a key and a data base and which returns the record that has that key, or ",(function (){var G__332391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nil"], null);
var G__332392 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332391,G__332392) : tailrecursion.hoplon.markdown.code_node.call(null,G__332391,G__332392));
})()," if there is no such record. ",(function (){var G__332393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"Lookup"], null);
var G__332394 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332393,G__332394) : tailrecursion.hoplon.markdown.code_node.call(null,G__332393,G__332394));
})()," is implemented in almost the same way as ",(function (){var G__332395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__332396 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332395,G__332396) : tailrecursion.hoplon.markdown.code_node.call(null,G__332395,G__332396));
})(),". For example, if the set of records is implemented as an unordered list, we could use"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332387,G__332388) : tailrecursion.hoplon.markdown.para_node.call(null,G__332387,G__332388));
})(),(function (){var G__332484 = (function (){var G__332485 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__332486 = (function (){var G__332487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__332488 = "(";
var G__332489 = (function (){var G__332528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__332529 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332528,G__332529) : tailrecursion.hoplon.span.call(null,G__332528,G__332529));
})();
var G__332490 = (function (){var G__332530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332531 = "lookup";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332530,G__332531) : tailrecursion.hoplon.span.call(null,G__332530,G__332531));
})();
var G__332491 = " [";
var G__332492 = (function (){var G__332532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332533 = "given-key";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332532,G__332533) : tailrecursion.hoplon.span.call(null,G__332532,G__332533));
})();
var G__332493 = " ";
var G__332494 = (function (){var G__332534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332535 = "set-of-records";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332534,G__332535) : tailrecursion.hoplon.span.call(null,G__332534,G__332535));
})();
var G__332495 = "]\n  (";
var G__332496 = (function (){var G__332536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__332537 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332536,G__332537) : tailrecursion.hoplon.span.call(null,G__332536,G__332537));
})();
var G__332497 = "[";
var G__332498 = (function (){var G__332538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332539 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332538,G__332539) : tailrecursion.hoplon.span.call(null,G__332538,G__332539));
})();
var G__332499 = " ";
var G__332500 = (function (){var G__332540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332541 = "set-of-records";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332540,G__332541) : tailrecursion.hoplon.span.call(null,G__332540,G__332541));
})();
var G__332501 = "]\n    (";
var G__332502 = (function (){var G__332542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332543 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332542,G__332543) : tailrecursion.hoplon.span.call(null,G__332542,G__332543));
})();
var G__332503 = "(";
var G__332504 = (function (){var G__332544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332545 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332544,G__332545) : tailrecursion.hoplon.span.call(null,G__332544,G__332545));
})();
var G__332505 = " ";
var G__332506 = (function (){var G__332546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332547 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332546,G__332547) : tailrecursion.hoplon.span.call(null,G__332546,G__332547));
})();
var G__332507 = ") ";
var G__332508 = (function (){var G__332548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332549 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332548,G__332549) : tailrecursion.hoplon.span.call(null,G__332548,G__332549));
})();
var G__332509 = "\n          (";
var G__332510 = (function (){var G__332550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332551 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332550,G__332551) : tailrecursion.hoplon.span.call(null,G__332550,G__332551));
})();
var G__332511 = (function (){var G__332552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332553 = "given-key";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332552,G__332553) : tailrecursion.hoplon.span.call(null,G__332552,G__332553));
})();
var G__332512 = " (";
var G__332513 = (function (){var G__332554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332555 = "key ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332554,G__332555) : tailrecursion.hoplon.span.call(null,G__332554,G__332555));
})();
var G__332514 = "(";
var G__332515 = (function (){var G__332556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332557 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332556,G__332557) : tailrecursion.hoplon.span.call(null,G__332556,G__332557));
})();
var G__332516 = (function (){var G__332558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332559 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332558,G__332559) : tailrecursion.hoplon.span.call(null,G__332558,G__332559));
})();
var G__332517 = "))) (";
var G__332518 = (function (){var G__332560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332561 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332560,G__332561) : tailrecursion.hoplon.span.call(null,G__332560,G__332561));
})();
var G__332519 = (function (){var G__332562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332563 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332562,G__332563) : tailrecursion.hoplon.span.call(null,G__332562,G__332563));
})();
var G__332520 = ")\n          ";
var G__332521 = (function (){var G__332564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332565 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332564,G__332565) : tailrecursion.hoplon.span.call(null,G__332564,G__332565));
})();
var G__332522 = " (";
var G__332523 = (function (){var G__332566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332567 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332566,G__332567) : tailrecursion.hoplon.span.call(null,G__332566,G__332567));
})();
var G__332524 = " (";
var G__332525 = (function (){var G__332568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332569 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332568,G__332569) : tailrecursion.hoplon.span.call(null,G__332568,G__332569));
})();
var G__332526 = (function (){var G__332570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332571 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332570,G__332571) : tailrecursion.hoplon.span.call(null,G__332570,G__332571));
})();
var G__332527 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41(G__332487,G__332488,G__332489,G__332490,G__332491,G__332492,G__332493,G__332494,G__332495,G__332496,G__332497,G__332498,G__332499,G__332500,G__332501,G__332502,G__332503,G__332504,G__332505,G__332506,G__332507,G__332508,G__332509,G__332510,G__332511,G__332512,G__332513,G__332514,G__332515,G__332516,G__332517,G__332518,G__332519,G__332520,G__332521,G__332522,G__332523,G__332524,G__332525,G__332526,G__332527) : tailrecursion.hoplon.pre.call(null,G__332487,G__332488,G__332489,G__332490,G__332491,G__332492,G__332493,G__332494,G__332495,G__332496,G__332497,G__332498,G__332499,G__332500,G__332501,G__332502,G__332503,G__332504,G__332505,G__332506,G__332507,G__332508,G__332509,G__332510,G__332511,G__332512,G__332513,G__332514,G__332515,G__332516,G__332517,G__332518,G__332519,G__332520,G__332521,G__332522,G__332523,G__332524,G__332525,G__332526,G__332527));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__332485,G__332486) : tailrecursion.hoplon.div.call(null,G__332485,G__332486));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__332484) : tailrecursion.hoplon.div.call(null,G__332484));
})(),(function (){var G__332572 = cljs.core.PersistentArrayMap.EMPTY;
var G__332573 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Of course, there are better ways to represent large sets than as unordered lists. Information-retrieval systems in which records have to be ",(function (){var G__332574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__332575 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["randomly accessed"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__332574,G__332575) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__332574,G__332575));
})()," are typically implemented by a tree-based method, such as the binary-tree representation discussed previously. In designing such a system the methodology of data abstraction can be a great help. The designer can create an initial implementation using a simple, straightforward representation such as unordered lists. This will be unsuitable for the eventual system, but it can be useful in providing a ",(function (){var G__332576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__332577 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["quick and dirty"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__332576,G__332577) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__332576,G__332577));
})()," data base with which to test the rest of the system. Later on, the data representation can be modified to be more sophisticated. If the data base is accessed in terms of abstract selectors and constructors, this change in representation will not require any changes to the rest of the system."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332572,G__332573) : tailrecursion.hoplon.markdown.para_node.call(null,G__332572,G__332573));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332380;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332379;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332378;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332377;
}})()], 0));
var G__319899 = "";
var G__319900 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_332578 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332579 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_332580 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332581 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__332582 = cljs.core.PersistentArrayMap.EMPTY;
var G__332583 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Implement the ",(function (){var G__332584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"lookup"], null);
var G__332585 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332584,G__332585) : tailrecursion.hoplon.markdown.code_node.call(null,G__332584,G__332585));
})()," procedure for the case where the set of records is structured as a binary tree, ordered by the numerical values of the keys."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332582,G__332583) : tailrecursion.hoplon.markdown.para_node.call(null,G__332582,G__332583));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332581;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332580;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332579;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332578;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_332586 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332587 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_332588 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_332589 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__332590 = cljs.core.PersistentArrayMap.EMPTY;
var G__332591 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For now let",(function (){var G__332592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__332593 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__332592,G__332593) : tailrecursion.hoplon.markdown.simple_node.call(null,G__332592,G__332593));
})(),"s assume that the keys are all integers (so that we can use the ordering that already exists for integers). Before we can implement the ",(function (){var G__332594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"lookup"], null);
var G__332595 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332594,G__332595) : tailrecursion.hoplon.markdown.code_node.call(null,G__332594,G__332595));
})()," procedure for binary trees, we need to define the ",(function (){var G__332596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"key"], null);
var G__332597 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__332596,G__332597) : tailrecursion.hoplon.markdown.code_node.call(null,G__332596,G__332597));
})()," procedure we see in their definition (which amounts to defining how key-value pairs are to be stored). One way would be to consider key value pairs to be lists where the first element is the key and the second is the value. So,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332590,G__332591) : tailrecursion.hoplon.markdown.para_node.call(null,G__332590,G__332591));
})(),(function (){var G__332643 = (function (){var G__332644 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__332645 = (function (){var G__332646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__332647 = "(";
var G__332648 = (function (){var G__332665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__332666 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332665,G__332666) : tailrecursion.hoplon.span.call(null,G__332665,G__332666));
})();
var G__332649 = (function (){var G__332667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332668 = "make-key-val-pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332667,G__332668) : tailrecursion.hoplon.span.call(null,G__332667,G__332668));
})();
var G__332650 = " [";
var G__332651 = (function (){var G__332669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332670 = "key ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332669,G__332670) : tailrecursion.hoplon.span.call(null,G__332669,G__332670));
})();
var G__332652 = (function (){var G__332671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332672 = "val";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332671,G__332672) : tailrecursion.hoplon.span.call(null,G__332671,G__332672));
})();
var G__332653 = "]\n  (";
var G__332654 = (function (){var G__332673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332674 = "list key ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332673,G__332674) : tailrecursion.hoplon.span.call(null,G__332673,G__332674));
})();
var G__332655 = (function (){var G__332675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332676 = "val";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332675,G__332676) : tailrecursion.hoplon.span.call(null,G__332675,G__332676));
})();
var G__332656 = "))\n(";
var G__332657 = (function (){var G__332677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__332678 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332677,G__332678) : tailrecursion.hoplon.span.call(null,G__332677,G__332678));
})();
var G__332658 = (function (){var G__332679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332680 = "key ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332679,G__332680) : tailrecursion.hoplon.span.call(null,G__332679,G__332680));
})();
var G__332659 = (function (){var G__332681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332682 = "first";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332681,G__332682) : tailrecursion.hoplon.span.call(null,G__332681,G__332682));
})();
var G__332660 = ")\n(";
var G__332661 = (function (){var G__332683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__332684 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332683,G__332684) : tailrecursion.hoplon.span.call(null,G__332683,G__332684));
})();
var G__332662 = (function (){var G__332685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332686 = "val ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332685,G__332686) : tailrecursion.hoplon.span.call(null,G__332685,G__332686));
})();
var G__332663 = (function (){var G__332687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332688 = "second";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332687,G__332688) : tailrecursion.hoplon.span.call(null,G__332687,G__332688));
})();
var G__332664 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__332646,G__332647,G__332648,G__332649,G__332650,G__332651,G__332652,G__332653,G__332654,G__332655,G__332656,G__332657,G__332658,G__332659,G__332660,G__332661,G__332662,G__332663,G__332664) : tailrecursion.hoplon.pre.call(null,G__332646,G__332647,G__332648,G__332649,G__332650,G__332651,G__332652,G__332653,G__332654,G__332655,G__332656,G__332657,G__332658,G__332659,G__332660,G__332661,G__332662,G__332663,G__332664));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__332644,G__332645) : tailrecursion.hoplon.div.call(null,G__332644,G__332645));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__332643) : tailrecursion.hoplon.div.call(null,G__332643));
})(),(function (){var G__332689 = cljs.core.PersistentArrayMap.EMPTY;
var G__332690 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__332689,G__332690) : tailrecursion.hoplon.markdown.para_node.call(null,G__332689,G__332690));
})(),(function (){var G__332845 = (function (){var G__332846 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__332847 = (function (){var G__332848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__332849 = "(";
var G__332850 = (function (){var G__332922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__332923 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332922,G__332923) : tailrecursion.hoplon.span.call(null,G__332922,G__332923));
})();
var G__332851 = (function (){var G__332924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332925 = "lookup";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332924,G__332925) : tailrecursion.hoplon.span.call(null,G__332924,G__332925));
})();
var G__332852 = " [";
var G__332853 = (function (){var G__332926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332927 = "given-key";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332926,G__332927) : tailrecursion.hoplon.span.call(null,G__332926,G__332927));
})();
var G__332854 = " ";
var G__332855 = (function (){var G__332928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332929 = "set-of-records";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332928,G__332929) : tailrecursion.hoplon.span.call(null,G__332928,G__332929));
})();
var G__332856 = "]\n  (";
var G__332857 = (function (){var G__332930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__332931 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332930,G__332931) : tailrecursion.hoplon.span.call(null,G__332930,G__332931));
})();
var G__332858 = "[";
var G__332859 = (function (){var G__332932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332933 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332932,G__332933) : tailrecursion.hoplon.span.call(null,G__332932,G__332933));
})();
var G__332860 = " ";
var G__332861 = (function (){var G__332934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332935 = "set-of-records";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332934,G__332935) : tailrecursion.hoplon.span.call(null,G__332934,G__332935));
})();
var G__332862 = "]\n    (";
var G__332863 = (function (){var G__332936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332937 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332936,G__332937) : tailrecursion.hoplon.span.call(null,G__332936,G__332937));
})();
var G__332864 = "(";
var G__332865 = (function (){var G__332938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332939 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332938,G__332939) : tailrecursion.hoplon.span.call(null,G__332938,G__332939));
})();
var G__332866 = " ";
var G__332867 = (function (){var G__332940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332941 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332940,G__332941) : tailrecursion.hoplon.span.call(null,G__332940,G__332941));
})();
var G__332868 = ") ";
var G__332869 = (function (){var G__332942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332943 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332942,G__332943) : tailrecursion.hoplon.span.call(null,G__332942,G__332943));
})();
var G__332870 = "\n          (";
var G__332871 = (function (){var G__332944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332945 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332944,G__332945) : tailrecursion.hoplon.span.call(null,G__332944,G__332945));
})();
var G__332872 = (function (){var G__332946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332947 = "given-key";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332946,G__332947) : tailrecursion.hoplon.span.call(null,G__332946,G__332947));
})();
var G__332873 = " (";
var G__332874 = (function (){var G__332948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332949 = "key ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332948,G__332949) : tailrecursion.hoplon.span.call(null,G__332948,G__332949));
})();
var G__332875 = "(";
var G__332876 = (function (){var G__332950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332951 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332950,G__332951) : tailrecursion.hoplon.span.call(null,G__332950,G__332951));
})();
var G__332877 = (function (){var G__332952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332953 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332952,G__332953) : tailrecursion.hoplon.span.call(null,G__332952,G__332953));
})();
var G__332878 = "))) (";
var G__332879 = (function (){var G__332954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332955 = "val ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332954,G__332955) : tailrecursion.hoplon.span.call(null,G__332954,G__332955));
})();
var G__332880 = "(";
var G__332881 = (function (){var G__332956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332957 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332956,G__332957) : tailrecursion.hoplon.span.call(null,G__332956,G__332957));
})();
var G__332882 = (function (){var G__332958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332959 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332958,G__332959) : tailrecursion.hoplon.span.call(null,G__332958,G__332959));
})();
var G__332883 = "))\n          (";
var G__332884 = (function (){var G__332960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332961 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332960,G__332961) : tailrecursion.hoplon.span.call(null,G__332960,G__332961));
})();
var G__332885 = (function (){var G__332962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332963 = "given-key";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332962,G__332963) : tailrecursion.hoplon.span.call(null,G__332962,G__332963));
})();
var G__332886 = " (";
var G__332887 = (function (){var G__332964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332965 = "key ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332964,G__332965) : tailrecursion.hoplon.span.call(null,G__332964,G__332965));
})();
var G__332888 = "(";
var G__332889 = (function (){var G__332966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332967 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332966,G__332967) : tailrecursion.hoplon.span.call(null,G__332966,G__332967));
})();
var G__332890 = " ";
var G__332891 = (function (){var G__332968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332969 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332968,G__332969) : tailrecursion.hoplon.span.call(null,G__332968,G__332969));
})();
var G__332892 = "))) (";
var G__332893 = (function (){var G__332970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332971 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332970,G__332971) : tailrecursion.hoplon.span.call(null,G__332970,G__332971));
})();
var G__332894 = " (";
var G__332895 = (function (){var G__332972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332973 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332972,G__332973) : tailrecursion.hoplon.span.call(null,G__332972,G__332973));
})();
var G__332896 = " ";
var G__332897 = (function (){var G__332974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332975 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332974,G__332975) : tailrecursion.hoplon.span.call(null,G__332974,G__332975));
})();
var G__332898 = "))\n          (";
var G__332899 = (function (){var G__332976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332977 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332976,G__332977) : tailrecursion.hoplon.span.call(null,G__332976,G__332977));
})();
var G__332900 = (function (){var G__332978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332979 = "given-key";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332978,G__332979) : tailrecursion.hoplon.span.call(null,G__332978,G__332979));
})();
var G__332901 = " (";
var G__332902 = (function (){var G__332980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__332981 = "key ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332980,G__332981) : tailrecursion.hoplon.span.call(null,G__332980,G__332981));
})();
var G__332903 = "(";
var G__332904 = (function (){var G__332982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332983 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332982,G__332983) : tailrecursion.hoplon.span.call(null,G__332982,G__332983));
})();
var G__332905 = " ";
var G__332906 = (function (){var G__332984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332985 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332984,G__332985) : tailrecursion.hoplon.span.call(null,G__332984,G__332985));
})();
var G__332907 = "))) (";
var G__332908 = (function (){var G__332986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332987 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332986,G__332987) : tailrecursion.hoplon.span.call(null,G__332986,G__332987));
})();
var G__332909 = " (";
var G__332910 = (function (){var G__332988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332989 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332988,G__332989) : tailrecursion.hoplon.span.call(null,G__332988,G__332989));
})();
var G__332911 = " ";
var G__332912 = (function (){var G__332990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332991 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332990,G__332991) : tailrecursion.hoplon.span.call(null,G__332990,G__332991));
})();
var G__332913 = "))\n          ";
var G__332914 = (function (){var G__332992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__332993 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332992,G__332993) : tailrecursion.hoplon.span.call(null,G__332992,G__332993));
})();
var G__332915 = " (";
var G__332916 = (function (){var G__332994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332995 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332994,G__332995) : tailrecursion.hoplon.span.call(null,G__332994,G__332995));
})();
var G__332917 = " (";
var G__332918 = (function (){var G__332996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__332997 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332996,G__332997) : tailrecursion.hoplon.span.call(null,G__332996,G__332997));
})();
var G__332919 = " ";
var G__332920 = (function (){var G__332998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__332999 = "\"Something went wrong with binary-tree-lookup\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__332998,G__332999) : tailrecursion.hoplon.span.call(null,G__332998,G__332999));
})();
var G__332921 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$74 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$74(G__332848,G__332849,G__332850,G__332851,G__332852,G__332853,G__332854,G__332855,G__332856,G__332857,G__332858,G__332859,G__332860,G__332861,G__332862,G__332863,G__332864,G__332865,G__332866,G__332867,G__332868,G__332869,G__332870,G__332871,G__332872,G__332873,G__332874,G__332875,G__332876,G__332877,G__332878,G__332879,G__332880,G__332881,G__332882,G__332883,G__332884,G__332885,G__332886,G__332887,G__332888,G__332889,G__332890,G__332891,G__332892,G__332893,G__332894,G__332895,G__332896,G__332897,G__332898,G__332899,G__332900,G__332901,G__332902,G__332903,G__332904,G__332905,G__332906,G__332907,G__332908,G__332909,G__332910,G__332911,G__332912,G__332913,G__332914,G__332915,G__332916,G__332917,G__332918,G__332919,G__332920,G__332921) : tailrecursion.hoplon.pre.call(null,G__332848,G__332849,G__332850,G__332851,G__332852,G__332853,G__332854,G__332855,G__332856,G__332857,G__332858,G__332859,G__332860,G__332861,G__332862,G__332863,G__332864,G__332865,G__332866,G__332867,G__332868,G__332869,G__332870,G__332871,G__332872,G__332873,G__332874,G__332875,G__332876,G__332877,G__332878,G__332879,G__332880,G__332881,G__332882,G__332883,G__332884,G__332885,G__332886,G__332887,G__332888,G__332889,G__332890,G__332891,G__332892,G__332893,G__332894,G__332895,G__332896,G__332897,G__332898,G__332899,G__332900,G__332901,G__332902,G__332903,G__332904,G__332905,G__332906,G__332907,G__332908,G__332909,G__332910,G__332911,G__332912,G__332913,G__332914,G__332915,G__332916,G__332917,G__332918,G__332919,G__332920,G__332921));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__332846,G__332847) : tailrecursion.hoplon.div.call(null,G__332846,G__332847));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__332845) : tailrecursion.hoplon.div.call(null,G__332845));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332589;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332588;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_332587;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_332586;
}})()], 0))], 0))], 0));
var G__319901 = "";
var G__319902 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Example: Huffman Encoding Trees"], null),(function (){var _STAR_references_STAR_333000 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333001 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_333002 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333003 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__333004 = cljs.core.PersistentArrayMap.EMPTY;
var G__333005 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This section provides practice in the use of list structure and data abstraction to manipulate sets and trees. The application is to methods for representing data as sequences of ones and zeros (bits). For example, the ASCII standard code used to represent text in computers encodes each character as a sequence of seven bits. Using seven bits allows us to distinguish \\(2^7\\), or 128, possible different characters. In general, if we want to distinguish \\(n\\) different symbols, we will need to use \\(log_2 n\\) bits per symbol. If all our messages are made up of the eight symbols A, B, C, D, E, F, G, and H, we can choose a code with three bits per character, for example"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333004,G__333005) : tailrecursion.hoplon.markdown.para_node.call(null,G__333004,G__333005));
})(),(function (){var G__333006 = cljs.core.PersistentArrayMap.EMPTY;
var G__333007 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{array}{llll} \\text{A } 000 & \\text{C } 010 & \\text{E } 100 & \\text{G } 110\\\\ \\text{B } 001 & \\text{D } 011 & \\text{F } 101 & \\text{H } 111 \\end{array}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333006,G__333007) : tailrecursion.hoplon.markdown.para_node.call(null,G__333006,G__333007));
})(),(function (){var G__333008 = cljs.core.PersistentArrayMap.EMPTY;
var G__333009 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["with this code, the message"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333008,G__333009) : tailrecursion.hoplon.markdown.para_node.call(null,G__333008,G__333009));
})(),(function (){var G__333010 = cljs.core.PersistentArrayMap.EMPTY;
var G__333011 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["BACADAEAFABBAAAGAH"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333010,G__333011) : tailrecursion.hoplon.markdown.para_node.call(null,G__333010,G__333011));
})(),(function (){var G__333012 = cljs.core.PersistentArrayMap.EMPTY;
var G__333013 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["is encoded into the string of 54 bits"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333012,G__333013) : tailrecursion.hoplon.markdown.para_node.call(null,G__333012,G__333013));
})(),(function (){var G__333014 = cljs.core.PersistentArrayMap.EMPTY;
var G__333015 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["001000010000011000100000101000001001000000000110000111"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333014,G__333015) : tailrecursion.hoplon.markdown.para_node.call(null,G__333014,G__333015));
})(),(function (){var G__333016 = cljs.core.PersistentArrayMap.EMPTY;
var G__333017 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Codes such as ASCII and the A-through-H code above are known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["fixed-length"], null)], 0))," codes, because they represent each symbol in the message with the same number of bits. It is sometimes advantageous to use ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["variable-length"], null)], 0))," codes, in which different symbols may be represented by different numbers of bits. For example, Morse code does not use the same number of dots and dashes for each letter of the alphabet. In particular, E, the most frequent letter, is represented by a single dot. In general, if our messages are such that some symbols appear very frequently and some very rarely, we can encode data more efficiently (i.e., using fewer bits per message) if we assign shorter codes to the frequent symbols. Consider the following alternative code for the letters A through H:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333016,G__333017) : tailrecursion.hoplon.markdown.para_node.call(null,G__333016,G__333017));
})(),(function (){var G__333018 = cljs.core.PersistentArrayMap.EMPTY;
var G__333019 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{array}{llll} \\text{A } 0 & \\text{C } 1010 & \\text{E } 1100 & \\text{G } 1110\\\\ \\text{B } 100 & \\text{D } 1011 & \\text{F } 1101 & \\text{H } 1111 \\end{array}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333018,G__333019) : tailrecursion.hoplon.markdown.para_node.call(null,G__333018,G__333019));
})(),(function (){var G__333020 = cljs.core.PersistentArrayMap.EMPTY;
var G__333021 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["with this code, the same message as above is encoded as the string"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333020,G__333021) : tailrecursion.hoplon.markdown.para_node.call(null,G__333020,G__333021));
})(),(function (){var G__333022 = cljs.core.PersistentArrayMap.EMPTY;
var G__333023 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["100010100101101100011010100100000111001111"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333022,G__333023) : tailrecursion.hoplon.markdown.para_node.call(null,G__333022,G__333023));
})(),(function (){var G__333024 = cljs.core.PersistentArrayMap.EMPTY;
var G__333025 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This string contains 42 bits, so it saves more than 20% in space in comparison with the fixed-length code shown above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333024,G__333025) : tailrecursion.hoplon.markdown.para_node.call(null,G__333024,G__333025));
})(),(function (){var G__333026 = cljs.core.PersistentArrayMap.EMPTY;
var G__333027 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One of the difficulties of using a variable-length code is knowing when you have reached the end of a symbol in reading a sequence of zeros and ones. Morse code solves this problem by using a special ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["separator code"], null)], 0))," (in this case, a pause) after the sequence of dots and dashes for each letter. Another solution is to design the code in such a way that no complete code for any symbol is the beginning (or prefix) of the code for another symbol. Such a code is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["prefix code"], null)], 0)),". In the example above, A is encoded by 0 and B is encoded by 100, so no other symbol can have a code that begins with 0 or with 100."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333026,G__333027) : tailrecursion.hoplon.markdown.para_node.call(null,G__333026,G__333027));
})(),(function (){var G__333028 = cljs.core.PersistentArrayMap.EMPTY;
var G__333029 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In general, we can attain significant savings if we use variable-length prefix codes that take advantage of the relative frequencies of the symbols in the messages to be encoded. One particular scheme for doing this is called the Huffman encoding method, after its discoverer, David Huffman. A Huffman code can be represented as a binary tree whose leaves are the symbols that are encoded. At each non-leaf node of the tree there is a set containing all the symbols in the leaves that lie below the node. In addition, each symbol at a leaf is assigned a weight (which is its relative frequency), and each non-leaf node contains a weight that is the sum of all the weights of the leaves lying below it. The weights are not used in the encoding or the decoding process. We will see below how they are used to help construct the tree."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333028,G__333029) : tailrecursion.hoplon.markdown.para_node.call(null,G__333028,G__333029));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333003;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333002;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333001;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333000;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"A Huffman encoding tree."], null)], 0)),"",(function (){var _STAR_references_STAR_333030 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333031 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_333032 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333033 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__333034 = cljs.core.PersistentArrayMap.EMPTY;
var G__333035 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Figure 2.18 shows the Huffman tree for the A-through-H code given above. The weights at the leaves indicate that the tree was designed for messages in which A appears with relative frequency 8, B with relative frequency 3, and the other letters each with relative frequency 1."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333034,G__333035) : tailrecursion.hoplon.markdown.para_node.call(null,G__333034,G__333035));
})(),(function (){var G__333036 = cljs.core.PersistentArrayMap.EMPTY;
var G__333037 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Given a Huffman tree, we can find the encoding of any symbol by starting at the root and moving down until we reach the leaf that holds the symbol. Each time we move down a left branch we add a 0 to the code, and each time we move down a right branch we add a 1. (We decide which branch to follow by testing to see which branch either is the leaf node for the symbol or contains the symbol in its set.) For example, starting from the root of the tree in figure 2.18, we arrive at the leaf for D by following a right branch, then a left branch, then a right branch, then a right branch; hence, the code for D is 1011."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333036,G__333037) : tailrecursion.hoplon.markdown.para_node.call(null,G__333036,G__333037));
})(),(function (){var G__333038 = cljs.core.PersistentArrayMap.EMPTY;
var G__333039 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To decode a bit sequence using a Huffman tree, we begin at the root and use the successive zeros and ones of the bit sequence to determine whether to move down the left or the right branch. Each time we come to a leaf, we have generated a new symbol in the message, at which point we start over from the root of the tree to find the next symbol. For example, suppose we are given the tree above and the sequence 10001010. Starting at the root, we move down the right branch, (since the first bit of the string is 1), then down the left branch (since the second bit is 0), then down the left branch (since the third bit is also 0). This brings us to the leaf for B, so the first symbol of the decoded message is B. Now we start again at the root, and we make a left move because the next bit in the string is 0. This brings us to the leaf for A. Then we start again at the root with the rest of the string 1010, so we move right, left, right, left and reach C. Thus, the entire message is BAC."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333038,G__333039) : tailrecursion.hoplon.markdown.para_node.call(null,G__333038,G__333039));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333033;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333032;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333031;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333030;
}})()], 0));
var G__319903 = "";
var G__319904 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Generating Huffman Trees"], null),(function (){var _STAR_references_STAR_333040 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333041 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_333042 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333043 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__333044 = cljs.core.PersistentArrayMap.EMPTY;
var G__333045 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Given an ",(function (){var G__333046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__333047 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["alphabet"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__333046,G__333047) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__333046,G__333047));
})()," of symbols and their relative frequencies, how do we construct the ",(function (){var G__333048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__333049 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["best"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__333048,G__333049) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__333048,G__333049));
})()," code? (In other words, which tree will encode messages with the fewest bits?) Huffman gave an algorithm for doing this and showed that the resulting code is indeed the best variable-length code for messages where the relative frequency of the symbols matches the frequencies with which the code was constructed. We will not prove this optimality of Huffman codes here, but we will show how Huffman trees are constructed.",(function (){var G__333050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__333051 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["See Hanning 1980 for a discussion of the mathematical properties of Huffman codes."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__333050,G__333051) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__333050,G__333051));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333044,G__333045) : tailrecursion.hoplon.markdown.para_node.call(null,G__333044,G__333045));
})(),(function (){var G__333052 = cljs.core.PersistentArrayMap.EMPTY;
var G__333053 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The algorithm for generating a Huffman tree is very simple. The idea is to arrange the tree so that the symbols with the lowest frequency appear farthest away from the root. Begin with the set of leaf nodes, containing symbols and their frequencies, as determined by the initial data from which the code is to be constructed. Now find two leaves with the lowest weights and merge them to produce a node that has these two nodes as its left and right branches. The weight of the new node is the sum of the two weights. Remove the two leaves from the original set and replace them by this new node. Now continue this process. At each step, merge two nodes with the smallest weights, removing them from the set and replacing them with a node that has these two as its left and right branches. The process stops when there is only one node left, which is the root of the entire tree. Here is how the Huffman tree of figure 2.18 was generated:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333052,G__333053) : tailrecursion.hoplon.markdown.para_node.call(null,G__333052,G__333053));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333043;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333042;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333041;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333040;
}})(),"",(function (){var G__333054 = cljs.core.PersistentArrayMap.EMPTY;
var G__333055 = (function (){var G__333063 = cljs.core.PersistentArrayMap.EMPTY;
var G__333064 = (function (){var G__333066 = cljs.core.PersistentArrayMap.EMPTY;
var G__333067 = "Initial leaves";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333066,G__333067) : tailrecursion.hoplon.td.call(null,G__333066,G__333067));
})();
var G__333065 = (function (){var G__333068 = cljs.core.PersistentArrayMap.EMPTY;
var G__333069 = "{(A 8) (B 3) (C 1) (D 1) (E 1) (F 1) (G 1) (H 1)}";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333068,G__333069) : tailrecursion.hoplon.td.call(null,G__333068,G__333069));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__333063,G__333064,G__333065) : tailrecursion.hoplon.tr.call(null,G__333063,G__333064,G__333065));
})();
var G__333056 = (function (){var G__333070 = cljs.core.PersistentArrayMap.EMPTY;
var G__333071 = (function (){var G__333073 = cljs.core.PersistentArrayMap.EMPTY;
var G__333074 = "Merge   ";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333073,G__333074) : tailrecursion.hoplon.td.call(null,G__333073,G__333074));
})();
var G__333072 = (function (){var G__333075 = cljs.core.PersistentArrayMap.EMPTY;
var G__333076 = "{(A 8) (B 3) ({C D} 2) (E 1) (F 1) (G 1) (H 1)}";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333075,G__333076) : tailrecursion.hoplon.td.call(null,G__333075,G__333076));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__333070,G__333071,G__333072) : tailrecursion.hoplon.tr.call(null,G__333070,G__333071,G__333072));
})();
var G__333057 = (function (){var G__333077 = cljs.core.PersistentArrayMap.EMPTY;
var G__333078 = (function (){var G__333080 = cljs.core.PersistentArrayMap.EMPTY;
var G__333081 = "Merge ";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333080,G__333081) : tailrecursion.hoplon.td.call(null,G__333080,G__333081));
})();
var G__333079 = (function (){var G__333082 = cljs.core.PersistentArrayMap.EMPTY;
var G__333083 = "{(A 8) (B 3) ({C D} 2) ({E F} 2) (G 1) (H 1)}";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333082,G__333083) : tailrecursion.hoplon.td.call(null,G__333082,G__333083));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__333077,G__333078,G__333079) : tailrecursion.hoplon.tr.call(null,G__333077,G__333078,G__333079));
})();
var G__333058 = (function (){var G__333084 = cljs.core.PersistentArrayMap.EMPTY;
var G__333085 = (function (){var G__333087 = cljs.core.PersistentArrayMap.EMPTY;
var G__333088 = "Merge";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333087,G__333088) : tailrecursion.hoplon.td.call(null,G__333087,G__333088));
})();
var G__333086 = (function (){var G__333089 = cljs.core.PersistentArrayMap.EMPTY;
var G__333090 = "{(A 8) (B 3) ({C D} 2) ({E F} 2) ({G H} 2)}";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333089,G__333090) : tailrecursion.hoplon.td.call(null,G__333089,G__333090));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__333084,G__333085,G__333086) : tailrecursion.hoplon.tr.call(null,G__333084,G__333085,G__333086));
})();
var G__333059 = (function (){var G__333091 = cljs.core.PersistentArrayMap.EMPTY;
var G__333092 = (function (){var G__333094 = cljs.core.PersistentArrayMap.EMPTY;
var G__333095 = "Merge";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333094,G__333095) : tailrecursion.hoplon.td.call(null,G__333094,G__333095));
})();
var G__333093 = (function (){var G__333096 = cljs.core.PersistentArrayMap.EMPTY;
var G__333097 = "{(A 8) (B 3) ({C D} 2) ({E F G H} 4)}";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333096,G__333097) : tailrecursion.hoplon.td.call(null,G__333096,G__333097));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__333091,G__333092,G__333093) : tailrecursion.hoplon.tr.call(null,G__333091,G__333092,G__333093));
})();
var G__333060 = (function (){var G__333098 = cljs.core.PersistentArrayMap.EMPTY;
var G__333099 = (function (){var G__333101 = cljs.core.PersistentArrayMap.EMPTY;
var G__333102 = "Merge";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333101,G__333102) : tailrecursion.hoplon.td.call(null,G__333101,G__333102));
})();
var G__333100 = (function (){var G__333103 = cljs.core.PersistentArrayMap.EMPTY;
var G__333104 = "{(A 8) ({B C D} 5) ({E F G H} 4)}";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333103,G__333104) : tailrecursion.hoplon.td.call(null,G__333103,G__333104));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__333098,G__333099,G__333100) : tailrecursion.hoplon.tr.call(null,G__333098,G__333099,G__333100));
})();
var G__333061 = (function (){var G__333105 = cljs.core.PersistentArrayMap.EMPTY;
var G__333106 = (function (){var G__333108 = cljs.core.PersistentArrayMap.EMPTY;
var G__333109 = "Merge";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333108,G__333109) : tailrecursion.hoplon.td.call(null,G__333108,G__333109));
})();
var G__333107 = (function (){var G__333110 = cljs.core.PersistentArrayMap.EMPTY;
var G__333111 = "{(A 8) ({B C D E F G H} 9)}";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333110,G__333111) : tailrecursion.hoplon.td.call(null,G__333110,G__333111));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__333105,G__333106,G__333107) : tailrecursion.hoplon.tr.call(null,G__333105,G__333106,G__333107));
})();
var G__333062 = (function (){var G__333112 = cljs.core.PersistentArrayMap.EMPTY;
var G__333113 = (function (){var G__333115 = cljs.core.PersistentArrayMap.EMPTY;
var G__333116 = "Final merge";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333115,G__333116) : tailrecursion.hoplon.td.call(null,G__333115,G__333116));
})();
var G__333114 = (function (){var G__333117 = cljs.core.PersistentArrayMap.EMPTY;
var G__333118 = "{({A B C D E F G H} 17)}";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__333117,G__333118) : tailrecursion.hoplon.td.call(null,G__333117,G__333118));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__333112,G__333113,G__333114) : tailrecursion.hoplon.tr.call(null,G__333112,G__333113,G__333114));
})();
return (tailrecursion.hoplon.table.cljs$core$IFn$_invoke$arity$9 ? tailrecursion.hoplon.table.cljs$core$IFn$_invoke$arity$9(G__333054,G__333055,G__333056,G__333057,G__333058,G__333059,G__333060,G__333061,G__333062) : tailrecursion.hoplon.table.call(null,G__333054,G__333055,G__333056,G__333057,G__333058,G__333059,G__333060,G__333061,G__333062));
})(),"",(function (){var _STAR_references_STAR_333119 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333120 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_333121 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333122 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__333123 = cljs.core.PersistentArrayMap.EMPTY;
var G__333124 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The algorithm does not always specify a unique tree, because there may not be unique smallest-weight nodes at each step. Also, the choice of the order in which the two nodes are merged (i.e., which will be the right branch and which will be the left branch) is arbitrary."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333123,G__333124) : tailrecursion.hoplon.markdown.para_node.call(null,G__333123,G__333124));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333122;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333121;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333120;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333119;
}})()], 0));
var G__319905 = "";
var G__319906 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Representing Huffman Trees"], null),(function (){var _STAR_references_STAR_333125 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333126 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_333127 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333128 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__333129 = cljs.core.PersistentArrayMap.EMPTY;
var G__333130 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In the exercises below we will work with a system that uses Huffman trees to encode and decode messages and generates Huffman trees according to the algorithm outlined above. We will begin by discussing how trees are represented."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333129,G__333130) : tailrecursion.hoplon.markdown.para_node.call(null,G__333129,G__333130));
})(),(function (){var G__333131 = cljs.core.PersistentArrayMap.EMPTY;
var G__333132 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Leaves of the tree are represented by a list consisting of the symbol ",(function (){var G__333133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"leaf"], null);
var G__333134 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__333133,G__333134) : tailrecursion.hoplon.markdown.code_node.call(null,G__333133,G__333134));
})(),", the symbol at the leaf, and the weight:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333131,G__333132) : tailrecursion.hoplon.markdown.para_node.call(null,G__333131,G__333132));
})(),(function (){var G__333233 = (function (){var G__333234 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__333235 = (function (){var G__333236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__333237 = "(";
var G__333238 = (function (){var G__333280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333281 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333280,G__333281) : tailrecursion.hoplon.span.call(null,G__333280,G__333281));
})();
var G__333239 = (function (){var G__333282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333283 = "make-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333282,G__333283) : tailrecursion.hoplon.span.call(null,G__333282,G__333283));
})();
var G__333240 = " [";
var G__333241 = (function (){var G__333284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333285 = "symbol ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333284,G__333285) : tailrecursion.hoplon.span.call(null,G__333284,G__333285));
})();
var G__333242 = (function (){var G__333286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333287 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333286,G__333287) : tailrecursion.hoplon.span.call(null,G__333286,G__333287));
})();
var G__333243 = "]\n  (";
var G__333244 = (function (){var G__333288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333289 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333288,G__333289) : tailrecursion.hoplon.span.call(null,G__333288,G__333289));
})();
var G__333245 = (function (){var G__333290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333291 = "'leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333290,G__333291) : tailrecursion.hoplon.span.call(null,G__333290,G__333291));
})();
var G__333246 = " ";
var G__333247 = (function (){var G__333292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333293 = "symbol ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333292,G__333293) : tailrecursion.hoplon.span.call(null,G__333292,G__333293));
})();
var G__333248 = (function (){var G__333294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333295 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333294,G__333295) : tailrecursion.hoplon.span.call(null,G__333294,G__333295));
})();
var G__333249 = "))\n(";
var G__333250 = (function (){var G__333296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333297 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333296,G__333297) : tailrecursion.hoplon.span.call(null,G__333296,G__333297));
})();
var G__333251 = (function (){var G__333298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333299 = "leaf?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333298,G__333299) : tailrecursion.hoplon.span.call(null,G__333298,G__333299));
})();
var G__333252 = " [";
var G__333253 = (function (){var G__333300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333301 = "object";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333300,G__333301) : tailrecursion.hoplon.span.call(null,G__333300,G__333301));
})();
var G__333254 = "]\n  (";
var G__333255 = (function (){var G__333302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333303 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333302,G__333303) : tailrecursion.hoplon.span.call(null,G__333302,G__333303));
})();
var G__333256 = "(";
var G__333257 = (function (){var G__333304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333305 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333304,G__333305) : tailrecursion.hoplon.span.call(null,G__333304,G__333305));
})();
var G__333258 = (function (){var G__333306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333307 = "object";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333306,G__333307) : tailrecursion.hoplon.span.call(null,G__333306,G__333307));
})();
var G__333259 = ") ";
var G__333260 = (function (){var G__333308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333309 = "'leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333308,G__333309) : tailrecursion.hoplon.span.call(null,G__333308,G__333309));
})();
var G__333261 = "))\n(";
var G__333262 = (function (){var G__333310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333311 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333310,G__333311) : tailrecursion.hoplon.span.call(null,G__333310,G__333311));
})();
var G__333263 = (function (){var G__333312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333313 = "symbol-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333312,G__333313) : tailrecursion.hoplon.span.call(null,G__333312,G__333313));
})();
var G__333264 = " [";
var G__333265 = (function (){var G__333314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333315 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333314,G__333315) : tailrecursion.hoplon.span.call(null,G__333314,G__333315));
})();
var G__333266 = "] (";
var G__333267 = (function (){var G__333316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333317 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333316,G__333317) : tailrecursion.hoplon.span.call(null,G__333316,G__333317));
})();
var G__333268 = (function (){var G__333318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333319 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333318,G__333319) : tailrecursion.hoplon.span.call(null,G__333318,G__333319));
})();
var G__333269 = "))\n(";
var G__333270 = (function (){var G__333320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333321 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333320,G__333321) : tailrecursion.hoplon.span.call(null,G__333320,G__333321));
})();
var G__333271 = (function (){var G__333322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333323 = "weight-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333322,G__333323) : tailrecursion.hoplon.span.call(null,G__333322,G__333323));
})();
var G__333272 = " [";
var G__333273 = (function (){var G__333324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333325 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333324,G__333325) : tailrecursion.hoplon.span.call(null,G__333324,G__333325));
})();
var G__333274 = "] (";
var G__333275 = (function (){var G__333326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333327 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333326,G__333327) : tailrecursion.hoplon.span.call(null,G__333326,G__333327));
})();
var G__333276 = (function (){var G__333328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333329 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333328,G__333329) : tailrecursion.hoplon.span.call(null,G__333328,G__333329));
})();
var G__333277 = " ";
var G__333278 = (function (){var G__333330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__333331 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333330,G__333331) : tailrecursion.hoplon.span.call(null,G__333330,G__333331));
})();
var G__333279 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$44 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$44(G__333236,G__333237,G__333238,G__333239,G__333240,G__333241,G__333242,G__333243,G__333244,G__333245,G__333246,G__333247,G__333248,G__333249,G__333250,G__333251,G__333252,G__333253,G__333254,G__333255,G__333256,G__333257,G__333258,G__333259,G__333260,G__333261,G__333262,G__333263,G__333264,G__333265,G__333266,G__333267,G__333268,G__333269,G__333270,G__333271,G__333272,G__333273,G__333274,G__333275,G__333276,G__333277,G__333278,G__333279) : tailrecursion.hoplon.pre.call(null,G__333236,G__333237,G__333238,G__333239,G__333240,G__333241,G__333242,G__333243,G__333244,G__333245,G__333246,G__333247,G__333248,G__333249,G__333250,G__333251,G__333252,G__333253,G__333254,G__333255,G__333256,G__333257,G__333258,G__333259,G__333260,G__333261,G__333262,G__333263,G__333264,G__333265,G__333266,G__333267,G__333268,G__333269,G__333270,G__333271,G__333272,G__333273,G__333274,G__333275,G__333276,G__333277,G__333278,G__333279));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__333234,G__333235) : tailrecursion.hoplon.div.call(null,G__333234,G__333235));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__333233) : tailrecursion.hoplon.div.call(null,G__333233));
})(),(function (){var G__333332 = cljs.core.PersistentArrayMap.EMPTY;
var G__333333 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A general tree will be a list of a left branch, a right branch, a set of symbols, and a weight. The set of symbols will be simply a list of the symbols, rather than some more sophisticated set representation. When we make a tree by merging two nodes, we obtain the weight of the tree as the sum of the weights of the nodes, and the set of symbols as the union of the sets of symbols for the nodes. Since our symbol sets are represented as lists, we can form the union by using the ",(function (){var G__333334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"concat"], null);
var G__333335 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__333334,G__333335) : tailrecursion.hoplon.markdown.code_node.call(null,G__333334,G__333335));
})()," procedure we defined in section 2.2.1:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333332,G__333333) : tailrecursion.hoplon.markdown.para_node.call(null,G__333332,G__333333));
})(),(function (){var G__333405 = (function (){var G__333406 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__333407 = (function (){var G__333408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__333409 = "(";
var G__333410 = (function (){var G__333441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333442 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333441,G__333442) : tailrecursion.hoplon.span.call(null,G__333441,G__333442));
})();
var G__333411 = (function (){var G__333443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333444 = "make-code-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333443,G__333444) : tailrecursion.hoplon.span.call(null,G__333443,G__333444));
})();
var G__333412 = " [";
var G__333413 = (function (){var G__333445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333446 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333445,G__333446) : tailrecursion.hoplon.span.call(null,G__333445,G__333446));
})();
var G__333414 = (function (){var G__333447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333448 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333447,G__333448) : tailrecursion.hoplon.span.call(null,G__333447,G__333448));
})();
var G__333415 = "]\n  (";
var G__333416 = (function (){var G__333449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333450 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333449,G__333450) : tailrecursion.hoplon.span.call(null,G__333449,G__333450));
})();
var G__333417 = (function (){var G__333451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333452 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333451,G__333452) : tailrecursion.hoplon.span.call(null,G__333451,G__333452));
})();
var G__333418 = "\n        ";
var G__333419 = (function (){var G__333453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333454 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333453,G__333454) : tailrecursion.hoplon.span.call(null,G__333453,G__333454));
})();
var G__333420 = "\n        (";
var G__333421 = (function (){var G__333455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333456 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333455,G__333456) : tailrecursion.hoplon.span.call(null,G__333455,G__333456));
})();
var G__333422 = "(";
var G__333423 = (function (){var G__333457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333458 = "symbols";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333457,G__333458) : tailrecursion.hoplon.span.call(null,G__333457,G__333458));
})();
var G__333424 = " ";
var G__333425 = (function (){var G__333459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333460 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333459,G__333460) : tailrecursion.hoplon.span.call(null,G__333459,G__333460));
})();
var G__333426 = ") (";
var G__333427 = (function (){var G__333461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333462 = "symbols";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333461,G__333462) : tailrecursion.hoplon.span.call(null,G__333461,G__333462));
})();
var G__333428 = " ";
var G__333429 = (function (){var G__333463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333464 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333463,G__333464) : tailrecursion.hoplon.span.call(null,G__333463,G__333464));
})();
var G__333430 = "))\n        (";
var G__333431 = (function (){var G__333465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333466 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333465,G__333466) : tailrecursion.hoplon.span.call(null,G__333465,G__333466));
})();
var G__333432 = "(";
var G__333433 = (function (){var G__333467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333468 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333467,G__333468) : tailrecursion.hoplon.span.call(null,G__333467,G__333468));
})();
var G__333434 = " ";
var G__333435 = (function (){var G__333469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333470 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333469,G__333470) : tailrecursion.hoplon.span.call(null,G__333469,G__333470));
})();
var G__333436 = ") (";
var G__333437 = (function (){var G__333471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333472 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333471,G__333472) : tailrecursion.hoplon.span.call(null,G__333471,G__333472));
})();
var G__333438 = " ";
var G__333439 = (function (){var G__333473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333474 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333473,G__333474) : tailrecursion.hoplon.span.call(null,G__333473,G__333474));
})();
var G__333440 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33(G__333408,G__333409,G__333410,G__333411,G__333412,G__333413,G__333414,G__333415,G__333416,G__333417,G__333418,G__333419,G__333420,G__333421,G__333422,G__333423,G__333424,G__333425,G__333426,G__333427,G__333428,G__333429,G__333430,G__333431,G__333432,G__333433,G__333434,G__333435,G__333436,G__333437,G__333438,G__333439,G__333440) : tailrecursion.hoplon.pre.call(null,G__333408,G__333409,G__333410,G__333411,G__333412,G__333413,G__333414,G__333415,G__333416,G__333417,G__333418,G__333419,G__333420,G__333421,G__333422,G__333423,G__333424,G__333425,G__333426,G__333427,G__333428,G__333429,G__333430,G__333431,G__333432,G__333433,G__333434,G__333435,G__333436,G__333437,G__333438,G__333439,G__333440));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__333406,G__333407) : tailrecursion.hoplon.div.call(null,G__333406,G__333407));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__333405) : tailrecursion.hoplon.div.call(null,G__333405));
})(),(function (){var G__333475 = cljs.core.PersistentArrayMap.EMPTY;
var G__333476 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If we make a tree in this way, we have the following selectors:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333475,G__333476) : tailrecursion.hoplon.markdown.para_node.call(null,G__333475,G__333476));
})(),(function (){var G__333605 = (function (){var G__333606 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__333607 = (function (){var G__333608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__333609 = "(";
var G__333610 = (function (){var G__333668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333669 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333668,G__333669) : tailrecursion.hoplon.span.call(null,G__333668,G__333669));
})();
var G__333611 = (function (){var G__333670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333671 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333670,G__333671) : tailrecursion.hoplon.span.call(null,G__333670,G__333671));
})();
var G__333612 = " [";
var G__333613 = (function (){var G__333672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333673 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333672,G__333673) : tailrecursion.hoplon.span.call(null,G__333672,G__333673));
})();
var G__333614 = "] (";
var G__333615 = (function (){var G__333674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333675 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333674,G__333675) : tailrecursion.hoplon.span.call(null,G__333674,G__333675));
})();
var G__333616 = (function (){var G__333676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333677 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333676,G__333677) : tailrecursion.hoplon.span.call(null,G__333676,G__333677));
})();
var G__333617 = "))\n\n(";
var G__333618 = (function (){var G__333678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333679 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333678,G__333679) : tailrecursion.hoplon.span.call(null,G__333678,G__333679));
})();
var G__333619 = (function (){var G__333680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333681 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333680,G__333681) : tailrecursion.hoplon.span.call(null,G__333680,G__333681));
})();
var G__333620 = " [";
var G__333621 = (function (){var G__333682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333683 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333682,G__333683) : tailrecursion.hoplon.span.call(null,G__333682,G__333683));
})();
var G__333622 = "] (";
var G__333623 = (function (){var G__333684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333685 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333684,G__333685) : tailrecursion.hoplon.span.call(null,G__333684,G__333685));
})();
var G__333624 = (function (){var G__333686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333687 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333686,G__333687) : tailrecursion.hoplon.span.call(null,G__333686,G__333687));
})();
var G__333625 = "))\n(";
var G__333626 = (function (){var G__333688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333689 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333688,G__333689) : tailrecursion.hoplon.span.call(null,G__333688,G__333689));
})();
var G__333627 = (function (){var G__333690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333691 = "symbols";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333690,G__333691) : tailrecursion.hoplon.span.call(null,G__333690,G__333691));
})();
var G__333628 = " [";
var G__333629 = (function (){var G__333692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333693 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333692,G__333693) : tailrecursion.hoplon.span.call(null,G__333692,G__333693));
})();
var G__333630 = "]\n  (";
var G__333631 = (function (){var G__333694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333695 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333694,G__333695) : tailrecursion.hoplon.span.call(null,G__333694,G__333695));
})();
var G__333632 = "(";
var G__333633 = (function (){var G__333696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333697 = "leaf?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333696,G__333697) : tailrecursion.hoplon.span.call(null,G__333696,G__333697));
})();
var G__333634 = " ";
var G__333635 = (function (){var G__333698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333699 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333698,G__333699) : tailrecursion.hoplon.span.call(null,G__333698,G__333699));
})();
var G__333636 = ")\n      (";
var G__333637 = (function (){var G__333700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333701 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333700,G__333701) : tailrecursion.hoplon.span.call(null,G__333700,G__333701));
})();
var G__333638 = "(";
var G__333639 = (function (){var G__333702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333703 = "symbol-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333702,G__333703) : tailrecursion.hoplon.span.call(null,G__333702,G__333703));
})();
var G__333640 = " ";
var G__333641 = (function (){var G__333704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333705 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333704,G__333705) : tailrecursion.hoplon.span.call(null,G__333704,G__333705));
})();
var G__333642 = "))\n      (";
var G__333643 = (function (){var G__333706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333707 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333706,G__333707) : tailrecursion.hoplon.span.call(null,G__333706,G__333707));
})();
var G__333644 = (function (){var G__333708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333709 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333708,G__333709) : tailrecursion.hoplon.span.call(null,G__333708,G__333709));
})();
var G__333645 = " ";
var G__333646 = (function (){var G__333710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__333711 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333710,G__333711) : tailrecursion.hoplon.span.call(null,G__333710,G__333711));
})();
var G__333647 = ")))\n(";
var G__333648 = (function (){var G__333712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333713 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333712,G__333713) : tailrecursion.hoplon.span.call(null,G__333712,G__333713));
})();
var G__333649 = (function (){var G__333714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333715 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333714,G__333715) : tailrecursion.hoplon.span.call(null,G__333714,G__333715));
})();
var G__333650 = " [";
var G__333651 = (function (){var G__333716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333717 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333716,G__333717) : tailrecursion.hoplon.span.call(null,G__333716,G__333717));
})();
var G__333652 = "]\n  (";
var G__333653 = (function (){var G__333718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__333719 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333718,G__333719) : tailrecursion.hoplon.span.call(null,G__333718,G__333719));
})();
var G__333654 = "(";
var G__333655 = (function (){var G__333720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333721 = "leaf?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333720,G__333721) : tailrecursion.hoplon.span.call(null,G__333720,G__333721));
})();
var G__333656 = " ";
var G__333657 = (function (){var G__333722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333723 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333722,G__333723) : tailrecursion.hoplon.span.call(null,G__333722,G__333723));
})();
var G__333658 = ")\n      (";
var G__333659 = (function (){var G__333724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__333725 = "weight-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333724,G__333725) : tailrecursion.hoplon.span.call(null,G__333724,G__333725));
})();
var G__333660 = " ";
var G__333661 = (function (){var G__333726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333727 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333726,G__333727) : tailrecursion.hoplon.span.call(null,G__333726,G__333727));
})();
var G__333662 = ")\n      (";
var G__333663 = (function (){var G__333728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__333729 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333728,G__333729) : tailrecursion.hoplon.span.call(null,G__333728,G__333729));
})();
var G__333664 = (function (){var G__333730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__333731 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333730,G__333731) : tailrecursion.hoplon.span.call(null,G__333730,G__333731));
})();
var G__333665 = " ";
var G__333666 = (function (){var G__333732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__333733 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__333732,G__333733) : tailrecursion.hoplon.span.call(null,G__333732,G__333733));
})();
var G__333667 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60(G__333608,G__333609,G__333610,G__333611,G__333612,G__333613,G__333614,G__333615,G__333616,G__333617,G__333618,G__333619,G__333620,G__333621,G__333622,G__333623,G__333624,G__333625,G__333626,G__333627,G__333628,G__333629,G__333630,G__333631,G__333632,G__333633,G__333634,G__333635,G__333636,G__333637,G__333638,G__333639,G__333640,G__333641,G__333642,G__333643,G__333644,G__333645,G__333646,G__333647,G__333648,G__333649,G__333650,G__333651,G__333652,G__333653,G__333654,G__333655,G__333656,G__333657,G__333658,G__333659,G__333660,G__333661,G__333662,G__333663,G__333664,G__333665,G__333666,G__333667) : tailrecursion.hoplon.pre.call(null,G__333608,G__333609,G__333610,G__333611,G__333612,G__333613,G__333614,G__333615,G__333616,G__333617,G__333618,G__333619,G__333620,G__333621,G__333622,G__333623,G__333624,G__333625,G__333626,G__333627,G__333628,G__333629,G__333630,G__333631,G__333632,G__333633,G__333634,G__333635,G__333636,G__333637,G__333638,G__333639,G__333640,G__333641,G__333642,G__333643,G__333644,G__333645,G__333646,G__333647,G__333648,G__333649,G__333650,G__333651,G__333652,G__333653,G__333654,G__333655,G__333656,G__333657,G__333658,G__333659,G__333660,G__333661,G__333662,G__333663,G__333664,G__333665,G__333666,G__333667));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__333606,G__333607) : tailrecursion.hoplon.div.call(null,G__333606,G__333607));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__333605) : tailrecursion.hoplon.div.call(null,G__333605));
})(),(function (){var G__333734 = cljs.core.PersistentArrayMap.EMPTY;
var G__333735 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The procedures ",(function (){var G__333736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"symbols"], null);
var G__333737 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__333736,G__333737) : tailrecursion.hoplon.markdown.code_node.call(null,G__333736,G__333737));
})()," and ",(function (){var G__333738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"weight"], null);
var G__333739 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__333738,G__333739) : tailrecursion.hoplon.markdown.code_node.call(null,G__333738,G__333739));
})()," must do something slightly different depending on whether they are called with a leaf or a general tree. These are simple examples of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["generic procedures"], null)], 0))," (procedures that can handle more than one kind of data), which we will have much more to say about in sections 2.4 and 2.5."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333734,G__333735) : tailrecursion.hoplon.markdown.para_node.call(null,G__333734,G__333735));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333128;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333127;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333126;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333125;
}})()], 0));
var G__319907 = "";
var G__319908 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"The Decoding Procedure"], null),(function (){var _STAR_references_STAR_333740 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333741 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_333742 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_333743 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__333744 = cljs.core.PersistentArrayMap.EMPTY;
var G__333745 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following procedure implements the decoding algorithm. It takes as arguments a list of zeros and ones, together with a Huffman tree."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__333744,G__333745) : tailrecursion.hoplon.markdown.para_node.call(null,G__333744,G__333745));
})(),(function (){var G__333976 = (function (){var G__333977 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__333978 = (function (){var G__333979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__333980 = "(";
var G__333981 = (function (){var G__334089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334090 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334089,G__334090) : tailrecursion.hoplon.span.call(null,G__334089,G__334090));
})();
var G__333982 = (function (){var G__334091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334092 = "choose-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334091,G__334092) : tailrecursion.hoplon.span.call(null,G__334091,G__334092));
})();
var G__333983 = " [";
var G__333984 = (function (){var G__334093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334094 = "bit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334093,G__334094) : tailrecursion.hoplon.span.call(null,G__334093,G__334094));
})();
var G__333985 = " ";
var G__333986 = (function (){var G__334095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334096 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334095,G__334096) : tailrecursion.hoplon.span.call(null,G__334095,G__334096));
})();
var G__333987 = "]\n  (";
var G__333988 = (function (){var G__334097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334098 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334097,G__334098) : tailrecursion.hoplon.span.call(null,G__334097,G__334098));
})();
var G__333989 = "(";
var G__333990 = (function (){var G__334099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334100 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334099,G__334100) : tailrecursion.hoplon.span.call(null,G__334099,G__334100));
})();
var G__333991 = (function (){var G__334101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334102 = "bit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334101,G__334102) : tailrecursion.hoplon.span.call(null,G__334101,G__334102));
})();
var G__333992 = " ";
var G__333993 = (function (){var G__334103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__334104 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334103,G__334104) : tailrecursion.hoplon.span.call(null,G__334103,G__334104));
})();
var G__333994 = ") (";
var G__333995 = (function (){var G__334105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334106 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334105,G__334106) : tailrecursion.hoplon.span.call(null,G__334105,G__334106));
})();
var G__333996 = " ";
var G__333997 = (function (){var G__334107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334108 = "branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334107,G__334108) : tailrecursion.hoplon.span.call(null,G__334107,G__334108));
})();
var G__333998 = ")\n        (";
var G__333999 = (function (){var G__334109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334110 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334109,G__334110) : tailrecursion.hoplon.span.call(null,G__334109,G__334110));
})();
var G__334000 = (function (){var G__334111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334112 = "bit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334111,G__334112) : tailrecursion.hoplon.span.call(null,G__334111,G__334112));
})();
var G__334001 = " ";
var G__334002 = (function (){var G__334113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__334114 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334113,G__334114) : tailrecursion.hoplon.span.call(null,G__334113,G__334114));
})();
var G__334003 = ") (";
var G__334004 = (function (){var G__334115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334116 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334115,G__334116) : tailrecursion.hoplon.span.call(null,G__334115,G__334116));
})();
var G__334005 = " ";
var G__334006 = (function (){var G__334117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334118 = "branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334117,G__334118) : tailrecursion.hoplon.span.call(null,G__334117,G__334118));
})();
var G__334007 = ")\n        ";
var G__334008 = (function (){var G__334119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334120 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334119,G__334120) : tailrecursion.hoplon.span.call(null,G__334119,G__334120));
})();
var G__334009 = " (";
var G__334010 = (function (){var G__334121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334122 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334121,G__334122) : tailrecursion.hoplon.span.call(null,G__334121,G__334122));
})();
var G__334011 = " (";
var G__334012 = (function (){var G__334123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334124 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334123,G__334124) : tailrecursion.hoplon.span.call(null,G__334123,G__334124));
})();
var G__334013 = " (";
var G__334014 = (function (){var G__334125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334126 = "str ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334125,G__334126) : tailrecursion.hoplon.span.call(null,G__334125,G__334126));
})();
var G__334015 = (function (){var G__334127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__334128 = "\"Bad bit -- CHOOSE-BRANCH \"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334127,G__334128) : tailrecursion.hoplon.span.call(null,G__334127,G__334128));
})();
var G__334016 = " ";
var G__334017 = (function (){var G__334129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334130 = "bit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334129,G__334130) : tailrecursion.hoplon.span.call(null,G__334129,G__334130));
})();
var G__334018 = ")))))\n\n(";
var G__334019 = (function (){var G__334131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334132 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334131,G__334132) : tailrecursion.hoplon.span.call(null,G__334131,G__334132));
})();
var G__334020 = (function (){var G__334133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334134 = "decode";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334133,G__334134) : tailrecursion.hoplon.span.call(null,G__334133,G__334134));
})();
var G__334021 = " [";
var G__334022 = (function (){var G__334135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334136 = "decode-bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334135,G__334136) : tailrecursion.hoplon.span.call(null,G__334135,G__334136));
})();
var G__334023 = " ";
var G__334024 = (function (){var G__334137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334138 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334137,G__334138) : tailrecursion.hoplon.span.call(null,G__334137,G__334138));
})();
var G__334025 = "]\n  (";
var G__334026 = (function (){var G__334139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334140 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334139,G__334140) : tailrecursion.hoplon.span.call(null,G__334139,G__334140));
})();
var G__334027 = "[";
var G__334028 = (function (){var G__334141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334142 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334141,G__334142) : tailrecursion.hoplon.span.call(null,G__334141,G__334142));
})();
var G__334029 = " ";
var G__334030 = (function (){var G__334143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__334144 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334143,G__334144) : tailrecursion.hoplon.span.call(null,G__334143,G__334144));
})();
var G__334031 = "()\n         ";
var G__334032 = (function (){var G__334145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334146 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334145,G__334146) : tailrecursion.hoplon.span.call(null,G__334145,G__334146));
})();
var G__334033 = " ";
var G__334034 = (function (){var G__334147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334148 = "decode-bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334147,G__334148) : tailrecursion.hoplon.span.call(null,G__334147,G__334148));
})();
var G__334035 = "\n         ";
var G__334036 = (function (){var G__334149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334150 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334149,G__334150) : tailrecursion.hoplon.span.call(null,G__334149,G__334150));
})();
var G__334037 = " ";
var G__334038 = (function (){var G__334151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334152 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334151,G__334152) : tailrecursion.hoplon.span.call(null,G__334151,G__334152));
})();
var G__334039 = "]\n    (";
var G__334040 = (function (){var G__334153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334154 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334153,G__334154) : tailrecursion.hoplon.span.call(null,G__334153,G__334154));
})();
var G__334041 = "(";
var G__334042 = (function (){var G__334155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334156 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334155,G__334156) : tailrecursion.hoplon.span.call(null,G__334155,G__334156));
})();
var G__334043 = " ";
var G__334044 = (function (){var G__334157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334158 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334157,G__334158) : tailrecursion.hoplon.span.call(null,G__334157,G__334158));
})();
var G__334045 = ") (";
var G__334046 = (function (){var G__334159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334160 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334159,G__334160) : tailrecursion.hoplon.span.call(null,G__334159,G__334160));
})();
var G__334047 = (function (){var G__334161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334162 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334161,G__334162) : tailrecursion.hoplon.span.call(null,G__334161,G__334162));
})();
var G__334048 = ")\n      (";
var G__334049 = (function (){var G__334163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334164 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334163,G__334164) : tailrecursion.hoplon.span.call(null,G__334163,G__334164));
})();
var G__334050 = "[";
var G__334051 = (function (){var G__334165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334166 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334165,G__334166) : tailrecursion.hoplon.span.call(null,G__334165,G__334166));
})();
var G__334052 = "(";
var G__334053 = (function (){var G__334167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334168 = "choose-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334167,G__334168) : tailrecursion.hoplon.span.call(null,G__334167,G__334168));
})();
var G__334054 = " (";
var G__334055 = (function (){var G__334169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334170 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334169,G__334170) : tailrecursion.hoplon.span.call(null,G__334169,G__334170));
})();
var G__334056 = (function (){var G__334171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334172 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334171,G__334172) : tailrecursion.hoplon.span.call(null,G__334171,G__334172));
})();
var G__334057 = ") ";
var G__334058 = (function (){var G__334173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334174 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334173,G__334174) : tailrecursion.hoplon.span.call(null,G__334173,G__334174));
})();
var G__334059 = ")]\n        (";
var G__334060 = (function (){var G__334175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334176 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334175,G__334176) : tailrecursion.hoplon.span.call(null,G__334175,G__334176));
})();
var G__334061 = "(";
var G__334062 = (function (){var G__334177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334178 = "leaf?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334177,G__334178) : tailrecursion.hoplon.span.call(null,G__334177,G__334178));
})();
var G__334063 = " ";
var G__334064 = (function (){var G__334179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334180 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334179,G__334180) : tailrecursion.hoplon.span.call(null,G__334179,G__334180));
})();
var G__334065 = ")\n            (";
var G__334066 = (function (){var G__334181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334182 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334181,G__334182) : tailrecursion.hoplon.span.call(null,G__334181,G__334182));
})();
var G__334067 = " (";
var G__334068 = (function (){var G__334183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334184 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334183,G__334184) : tailrecursion.hoplon.span.call(null,G__334183,G__334184));
})();
var G__334069 = (function (){var G__334185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334186 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334185,G__334186) : tailrecursion.hoplon.span.call(null,G__334185,G__334186));
})();
var G__334070 = " (";
var G__334071 = (function (){var G__334187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334188 = "symbol-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334187,G__334188) : tailrecursion.hoplon.span.call(null,G__334187,G__334188));
})();
var G__334072 = " ";
var G__334073 = (function (){var G__334189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334190 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334189,G__334190) : tailrecursion.hoplon.span.call(null,G__334189,G__334190));
})();
var G__334074 = "))\n                   (";
var G__334075 = (function (){var G__334191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334192 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334191,G__334192) : tailrecursion.hoplon.span.call(null,G__334191,G__334192));
})();
var G__334076 = (function (){var G__334193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334194 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334193,G__334194) : tailrecursion.hoplon.span.call(null,G__334193,G__334194));
})();
var G__334077 = ")\n                   ";
var G__334078 = (function (){var G__334195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334196 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334195,G__334196) : tailrecursion.hoplon.span.call(null,G__334195,G__334196));
})();
var G__334079 = ")\n            (";
var G__334080 = (function (){var G__334197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334198 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334197,G__334198) : tailrecursion.hoplon.span.call(null,G__334197,G__334198));
})();
var G__334081 = " ";
var G__334082 = (function (){var G__334199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334200 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334199,G__334200) : tailrecursion.hoplon.span.call(null,G__334199,G__334200));
})();
var G__334083 = " (";
var G__334084 = (function (){var G__334201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334202 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334201,G__334202) : tailrecursion.hoplon.span.call(null,G__334201,G__334202));
})();
var G__334085 = (function (){var G__334203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334204 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334203,G__334204) : tailrecursion.hoplon.span.call(null,G__334203,G__334204));
})();
var G__334086 = ") ";
var G__334087 = (function (){var G__334205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334206 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334205,G__334206) : tailrecursion.hoplon.span.call(null,G__334205,G__334206));
})();
var G__334088 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$110 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$110(G__333979,G__333980,G__333981,G__333982,G__333983,G__333984,G__333985,G__333986,G__333987,G__333988,G__333989,G__333990,G__333991,G__333992,G__333993,G__333994,G__333995,G__333996,G__333997,G__333998,G__333999,G__334000,G__334001,G__334002,G__334003,G__334004,G__334005,G__334006,G__334007,G__334008,G__334009,G__334010,G__334011,G__334012,G__334013,G__334014,G__334015,G__334016,G__334017,G__334018,G__334019,G__334020,G__334021,G__334022,G__334023,G__334024,G__334025,G__334026,G__334027,G__334028,G__334029,G__334030,G__334031,G__334032,G__334033,G__334034,G__334035,G__334036,G__334037,G__334038,G__334039,G__334040,G__334041,G__334042,G__334043,G__334044,G__334045,G__334046,G__334047,G__334048,G__334049,G__334050,G__334051,G__334052,G__334053,G__334054,G__334055,G__334056,G__334057,G__334058,G__334059,G__334060,G__334061,G__334062,G__334063,G__334064,G__334065,G__334066,G__334067,G__334068,G__334069,G__334070,G__334071,G__334072,G__334073,G__334074,G__334075,G__334076,G__334077,G__334078,G__334079,G__334080,G__334081,G__334082,G__334083,G__334084,G__334085,G__334086,G__334087,G__334088) : tailrecursion.hoplon.pre.call(null,G__333979,G__333980,G__333981,G__333982,G__333983,G__333984,G__333985,G__333986,G__333987,G__333988,G__333989,G__333990,G__333991,G__333992,G__333993,G__333994,G__333995,G__333996,G__333997,G__333998,G__333999,G__334000,G__334001,G__334002,G__334003,G__334004,G__334005,G__334006,G__334007,G__334008,G__334009,G__334010,G__334011,G__334012,G__334013,G__334014,G__334015,G__334016,G__334017,G__334018,G__334019,G__334020,G__334021,G__334022,G__334023,G__334024,G__334025,G__334026,G__334027,G__334028,G__334029,G__334030,G__334031,G__334032,G__334033,G__334034,G__334035,G__334036,G__334037,G__334038,G__334039,G__334040,G__334041,G__334042,G__334043,G__334044,G__334045,G__334046,G__334047,G__334048,G__334049,G__334050,G__334051,G__334052,G__334053,G__334054,G__334055,G__334056,G__334057,G__334058,G__334059,G__334060,G__334061,G__334062,G__334063,G__334064,G__334065,G__334066,G__334067,G__334068,G__334069,G__334070,G__334071,G__334072,G__334073,G__334074,G__334075,G__334076,G__334077,G__334078,G__334079,G__334080,G__334081,G__334082,G__334083,G__334084,G__334085,G__334086,G__334087,G__334088));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__333977,G__333978) : tailrecursion.hoplon.div.call(null,G__333977,G__333978));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__333976) : tailrecursion.hoplon.div.call(null,G__333976));
})(),(function (){var G__334207 = cljs.core.PersistentArrayMap.EMPTY;
var G__334208 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",(function (){var G__334209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"loop"], null);
var G__334210 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__334209,G__334210) : tailrecursion.hoplon.markdown.code_node.call(null,G__334209,G__334210));
})()," in this procedure moves ",(function (){var G__334211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__334212 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["down"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__334211,G__334212) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__334211,G__334212));
})()," the tree, choosing a left or a right branch according to whether the next bit in the list is a zero or a one. (This is done with the procedure ",(function (){var G__334213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"choose-branch"], null);
var G__334214 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__334213,G__334214) : tailrecursion.hoplon.markdown.code_node.call(null,G__334213,G__334214));
})(),".) When it reaches a leaf, it returns the symbol at that leaf as the next symbol in the message by ",(function (){var G__334215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__334216 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__334215,G__334216) : tailrecursion.hoplon.markdown.code_node.call(null,G__334215,G__334216));
})(),"ing it onto the accumulator (",(function (){var G__334217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"accu"], null);
var G__334218 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__334217,G__334218) : tailrecursion.hoplon.markdown.code_node.call(null,G__334217,G__334218));
})(),"). Note the error check in the final clause of choose-branch, which complains if the procedure finds something other than a zero or a one in the input data."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__334207,G__334208) : tailrecursion.hoplon.markdown.para_node.call(null,G__334207,G__334208));
})(),(function (){var G__334219 = cljs.core.PersistentArrayMap.EMPTY;
var G__334220 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As a little supplemental exercise, tweak the ",(function (){var G__334221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"decode"], null);
var G__334222 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__334221,G__334222) : tailrecursion.hoplon.markdown.code_node.call(null,G__334221,G__334222));
})()," procedure to warn the user if the decoding ends on a node rather than a leaf."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__334219,G__334220) : tailrecursion.hoplon.markdown.para_node.call(null,G__334219,G__334220));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333743;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333742;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_333741;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_333740;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_334223 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_334224 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_334225 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_334226 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__334415 = (function (){var G__334416 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__334417 = (function (){var G__334418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__334419 = "(";
var G__334420 = (function (){var G__334508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334509 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334508,G__334509) : tailrecursion.hoplon.span.call(null,G__334508,G__334509));
})();
var G__334421 = (function (){var G__334510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334511 = "decode";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334510,G__334511) : tailrecursion.hoplon.span.call(null,G__334510,G__334511));
})();
var G__334422 = " [";
var G__334423 = (function (){var G__334512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334513 = "decode-bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334512,G__334513) : tailrecursion.hoplon.span.call(null,G__334512,G__334513));
})();
var G__334424 = " ";
var G__334425 = (function (){var G__334514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334515 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334514,G__334515) : tailrecursion.hoplon.span.call(null,G__334514,G__334515));
})();
var G__334426 = "]\n  (";
var G__334427 = (function (){var G__334516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334517 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334516,G__334517) : tailrecursion.hoplon.span.call(null,G__334516,G__334517));
})();
var G__334428 = "[";
var G__334429 = (function (){var G__334518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334519 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334518,G__334519) : tailrecursion.hoplon.span.call(null,G__334518,G__334519));
})();
var G__334430 = " ";
var G__334431 = (function (){var G__334520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__334521 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334520,G__334521) : tailrecursion.hoplon.span.call(null,G__334520,G__334521));
})();
var G__334432 = "()\n         ";
var G__334433 = (function (){var G__334522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334523 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334522,G__334523) : tailrecursion.hoplon.span.call(null,G__334522,G__334523));
})();
var G__334434 = " ";
var G__334435 = (function (){var G__334524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334525 = "decode-bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334524,G__334525) : tailrecursion.hoplon.span.call(null,G__334524,G__334525));
})();
var G__334436 = "\n         ";
var G__334437 = (function (){var G__334526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334527 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334526,G__334527) : tailrecursion.hoplon.span.call(null,G__334526,G__334527));
})();
var G__334438 = " ";
var G__334439 = (function (){var G__334528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334529 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334528,G__334529) : tailrecursion.hoplon.span.call(null,G__334528,G__334529));
})();
var G__334440 = "]\n    (";
var G__334441 = (function (){var G__334530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334531 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334530,G__334531) : tailrecursion.hoplon.span.call(null,G__334530,G__334531));
})();
var G__334442 = "(";
var G__334443 = (function (){var G__334532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334533 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334532,G__334533) : tailrecursion.hoplon.span.call(null,G__334532,G__334533));
})();
var G__334444 = " ";
var G__334445 = (function (){var G__334534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334535 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334534,G__334535) : tailrecursion.hoplon.span.call(null,G__334534,G__334535));
})();
var G__334446 = ") \n      (";
var G__334447 = (function (){var G__334536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334537 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334536,G__334537) : tailrecursion.hoplon.span.call(null,G__334536,G__334537));
})();
var G__334448 = "(";
var G__334449 = (function (){var G__334538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334539 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334538,G__334539) : tailrecursion.hoplon.span.call(null,G__334538,G__334539));
})();
var G__334450 = (function (){var G__334540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334541 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334540,G__334541) : tailrecursion.hoplon.span.call(null,G__334540,G__334541));
})();
var G__334451 = " ";
var G__334452 = (function (){var G__334542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334543 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334542,G__334543) : tailrecursion.hoplon.span.call(null,G__334542,G__334543));
})();
var G__334453 = ")\n          (";
var G__334454 = (function (){var G__334544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334545 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334544,G__334545) : tailrecursion.hoplon.span.call(null,G__334544,G__334545));
})();
var G__334455 = (function (){var G__334546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334547 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334546,G__334547) : tailrecursion.hoplon.span.call(null,G__334546,G__334547));
})();
var G__334456 = ")\n          (";
var G__334457 = (function (){var G__334548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334549 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334548,G__334549) : tailrecursion.hoplon.span.call(null,G__334548,G__334549));
})();
var G__334458 = "(";
var G__334459 = (function (){var G__334550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334551 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334550,G__334551) : tailrecursion.hoplon.span.call(null,G__334550,G__334551));
})();
var G__334460 = " (";
var G__334461 = (function (){var G__334552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334553 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334552,G__334553) : tailrecursion.hoplon.span.call(null,G__334552,G__334553));
})();
var G__334462 = " ";
var G__334463 = (function (){var G__334554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__334555 = "\"Error: DECODE ended on a partial code.\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334554,G__334555) : tailrecursion.hoplon.span.call(null,G__334554,G__334555));
})();
var G__334464 = "))\n              (";
var G__334465 = (function (){var G__334556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334557 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334556,G__334557) : tailrecursion.hoplon.span.call(null,G__334556,G__334557));
})();
var G__334466 = (function (){var G__334558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334559 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334558,G__334559) : tailrecursion.hoplon.span.call(null,G__334558,G__334559));
})();
var G__334467 = ")))\n      (";
var G__334468 = (function (){var G__334560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334561 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334560,G__334561) : tailrecursion.hoplon.span.call(null,G__334560,G__334561));
})();
var G__334469 = "[";
var G__334470 = (function (){var G__334562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334563 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334562,G__334563) : tailrecursion.hoplon.span.call(null,G__334562,G__334563));
})();
var G__334471 = "(";
var G__334472 = (function (){var G__334564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334565 = "choose-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334564,G__334565) : tailrecursion.hoplon.span.call(null,G__334564,G__334565));
})();
var G__334473 = " (";
var G__334474 = (function (){var G__334566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334567 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334566,G__334567) : tailrecursion.hoplon.span.call(null,G__334566,G__334567));
})();
var G__334475 = (function (){var G__334568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334569 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334568,G__334569) : tailrecursion.hoplon.span.call(null,G__334568,G__334569));
})();
var G__334476 = ") ";
var G__334477 = (function (){var G__334570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334571 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334570,G__334571) : tailrecursion.hoplon.span.call(null,G__334570,G__334571));
})();
var G__334478 = ")]\n        (";
var G__334479 = (function (){var G__334572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334573 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334572,G__334573) : tailrecursion.hoplon.span.call(null,G__334572,G__334573));
})();
var G__334480 = "(";
var G__334481 = (function (){var G__334574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334575 = "leaf?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334574,G__334575) : tailrecursion.hoplon.span.call(null,G__334574,G__334575));
})();
var G__334482 = " ";
var G__334483 = (function (){var G__334576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334577 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334576,G__334577) : tailrecursion.hoplon.span.call(null,G__334576,G__334577));
})();
var G__334484 = ") (";
var G__334485 = (function (){var G__334578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334579 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334578,G__334579) : tailrecursion.hoplon.span.call(null,G__334578,G__334579));
})();
var G__334486 = " (";
var G__334487 = (function (){var G__334580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334581 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334580,G__334581) : tailrecursion.hoplon.span.call(null,G__334580,G__334581));
})();
var G__334488 = (function (){var G__334582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334583 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334582,G__334583) : tailrecursion.hoplon.span.call(null,G__334582,G__334583));
})();
var G__334489 = " (";
var G__334490 = (function (){var G__334584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334585 = "symbol-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334584,G__334585) : tailrecursion.hoplon.span.call(null,G__334584,G__334585));
})();
var G__334491 = " ";
var G__334492 = (function (){var G__334586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334587 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334586,G__334587) : tailrecursion.hoplon.span.call(null,G__334586,G__334587));
})();
var G__334493 = "))\n                                (";
var G__334494 = (function (){var G__334588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334589 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334588,G__334589) : tailrecursion.hoplon.span.call(null,G__334588,G__334589));
})();
var G__334495 = (function (){var G__334590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334591 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334590,G__334591) : tailrecursion.hoplon.span.call(null,G__334590,G__334591));
})();
var G__334496 = ")\n                                ";
var G__334497 = (function (){var G__334592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334593 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334592,G__334593) : tailrecursion.hoplon.span.call(null,G__334592,G__334593));
})();
var G__334498 = ")\n            (";
var G__334499 = (function (){var G__334594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334595 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334594,G__334595) : tailrecursion.hoplon.span.call(null,G__334594,G__334595));
})();
var G__334500 = " ";
var G__334501 = (function (){var G__334596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334597 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334596,G__334597) : tailrecursion.hoplon.span.call(null,G__334596,G__334597));
})();
var G__334502 = " (";
var G__334503 = (function (){var G__334598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334599 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334598,G__334599) : tailrecursion.hoplon.span.call(null,G__334598,G__334599));
})();
var G__334504 = (function (){var G__334600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334601 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334600,G__334601) : tailrecursion.hoplon.span.call(null,G__334600,G__334601));
})();
var G__334505 = ") ";
var G__334506 = (function (){var G__334602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334603 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334602,G__334603) : tailrecursion.hoplon.span.call(null,G__334602,G__334603));
})();
var G__334507 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$90 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$90(G__334418,G__334419,G__334420,G__334421,G__334422,G__334423,G__334424,G__334425,G__334426,G__334427,G__334428,G__334429,G__334430,G__334431,G__334432,G__334433,G__334434,G__334435,G__334436,G__334437,G__334438,G__334439,G__334440,G__334441,G__334442,G__334443,G__334444,G__334445,G__334446,G__334447,G__334448,G__334449,G__334450,G__334451,G__334452,G__334453,G__334454,G__334455,G__334456,G__334457,G__334458,G__334459,G__334460,G__334461,G__334462,G__334463,G__334464,G__334465,G__334466,G__334467,G__334468,G__334469,G__334470,G__334471,G__334472,G__334473,G__334474,G__334475,G__334476,G__334477,G__334478,G__334479,G__334480,G__334481,G__334482,G__334483,G__334484,G__334485,G__334486,G__334487,G__334488,G__334489,G__334490,G__334491,G__334492,G__334493,G__334494,G__334495,G__334496,G__334497,G__334498,G__334499,G__334500,G__334501,G__334502,G__334503,G__334504,G__334505,G__334506,G__334507) : tailrecursion.hoplon.pre.call(null,G__334418,G__334419,G__334420,G__334421,G__334422,G__334423,G__334424,G__334425,G__334426,G__334427,G__334428,G__334429,G__334430,G__334431,G__334432,G__334433,G__334434,G__334435,G__334436,G__334437,G__334438,G__334439,G__334440,G__334441,G__334442,G__334443,G__334444,G__334445,G__334446,G__334447,G__334448,G__334449,G__334450,G__334451,G__334452,G__334453,G__334454,G__334455,G__334456,G__334457,G__334458,G__334459,G__334460,G__334461,G__334462,G__334463,G__334464,G__334465,G__334466,G__334467,G__334468,G__334469,G__334470,G__334471,G__334472,G__334473,G__334474,G__334475,G__334476,G__334477,G__334478,G__334479,G__334480,G__334481,G__334482,G__334483,G__334484,G__334485,G__334486,G__334487,G__334488,G__334489,G__334490,G__334491,G__334492,G__334493,G__334494,G__334495,G__334496,G__334497,G__334498,G__334499,G__334500,G__334501,G__334502,G__334503,G__334504,G__334505,G__334506,G__334507));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__334416,G__334417) : tailrecursion.hoplon.div.call(null,G__334416,G__334417));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__334415) : tailrecursion.hoplon.div.call(null,G__334415));
})(),(function (){var G__334604 = cljs.core.PersistentArrayMap.EMPTY;
var G__334605 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["But with that, we notice that we have to determine equality of trees, which is probably a very taxing procedure. To shorten it, we can instead compare their respective weights. Since we are guaranteed that ",(function (){var G__334606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"tree"], null);
var G__334607 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__334606,G__334607) : tailrecursion.hoplon.markdown.code_node.call(null,G__334606,G__334607));
})()," will either be ",(function (){var G__334608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"huffman-tree"], null);
var G__334609 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__334608,G__334609) : tailrecursion.hoplon.markdown.code_node.call(null,G__334608,G__334609));
})()," or a subtree of it, we know that if their respective weights are equal, ",(function (){var G__334610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"tree"], null);
var G__334611 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__334610,G__334611) : tailrecursion.hoplon.markdown.code_node.call(null,G__334610,G__334611));
})()," must be ",(function (){var G__334612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"huffman-tree"], null);
var G__334613 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__334612,G__334613) : tailrecursion.hoplon.markdown.code_node.call(null,G__334612,G__334613));
})(),". So,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__334604,G__334605) : tailrecursion.hoplon.markdown.para_node.call(null,G__334604,G__334605));
})(),(function (){var G__334811 = (function (){var G__334812 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__334813 = (function (){var G__334814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__334815 = "(";
var G__334816 = (function (){var G__334909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334910 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334909,G__334910) : tailrecursion.hoplon.span.call(null,G__334909,G__334910));
})();
var G__334817 = (function (){var G__334911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334912 = "decode";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334911,G__334912) : tailrecursion.hoplon.span.call(null,G__334911,G__334912));
})();
var G__334818 = " [";
var G__334819 = (function (){var G__334913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334914 = "decode-bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334913,G__334914) : tailrecursion.hoplon.span.call(null,G__334913,G__334914));
})();
var G__334820 = " ";
var G__334821 = (function (){var G__334915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334916 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334915,G__334916) : tailrecursion.hoplon.span.call(null,G__334915,G__334916));
})();
var G__334822 = "]\n  (";
var G__334823 = (function (){var G__334917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334918 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334917,G__334918) : tailrecursion.hoplon.span.call(null,G__334917,G__334918));
})();
var G__334824 = "[";
var G__334825 = (function (){var G__334919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334920 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334919,G__334920) : tailrecursion.hoplon.span.call(null,G__334919,G__334920));
})();
var G__334826 = " ";
var G__334827 = (function (){var G__334921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__334922 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334921,G__334922) : tailrecursion.hoplon.span.call(null,G__334921,G__334922));
})();
var G__334828 = "()\n         ";
var G__334829 = (function (){var G__334923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334924 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334923,G__334924) : tailrecursion.hoplon.span.call(null,G__334923,G__334924));
})();
var G__334830 = " ";
var G__334831 = (function (){var G__334925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334926 = "decode-bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334925,G__334926) : tailrecursion.hoplon.span.call(null,G__334925,G__334926));
})();
var G__334832 = "\n         ";
var G__334833 = (function (){var G__334927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334928 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334927,G__334928) : tailrecursion.hoplon.span.call(null,G__334927,G__334928));
})();
var G__334834 = " ";
var G__334835 = (function (){var G__334929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334930 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334929,G__334930) : tailrecursion.hoplon.span.call(null,G__334929,G__334930));
})();
var G__334836 = "]\n    (";
var G__334837 = (function (){var G__334931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334932 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334931,G__334932) : tailrecursion.hoplon.span.call(null,G__334931,G__334932));
})();
var G__334838 = "(";
var G__334839 = (function (){var G__334933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334934 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334933,G__334934) : tailrecursion.hoplon.span.call(null,G__334933,G__334934));
})();
var G__334840 = " ";
var G__334841 = (function (){var G__334935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334936 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334935,G__334936) : tailrecursion.hoplon.span.call(null,G__334935,G__334936));
})();
var G__334842 = ") \n      (";
var G__334843 = (function (){var G__334937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334938 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334937,G__334938) : tailrecursion.hoplon.span.call(null,G__334937,G__334938));
})();
var G__334844 = "(";
var G__334845 = (function (){var G__334939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334940 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334939,G__334940) : tailrecursion.hoplon.span.call(null,G__334939,G__334940));
})();
var G__334846 = "(";
var G__334847 = (function (){var G__334941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334942 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334941,G__334942) : tailrecursion.hoplon.span.call(null,G__334941,G__334942));
})();
var G__334848 = " ";
var G__334849 = (function (){var G__334943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334944 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334943,G__334944) : tailrecursion.hoplon.span.call(null,G__334943,G__334944));
})();
var G__334850 = ") (";
var G__334851 = (function (){var G__334945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334946 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334945,G__334946) : tailrecursion.hoplon.span.call(null,G__334945,G__334946));
})();
var G__334852 = " ";
var G__334853 = (function (){var G__334947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334948 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334947,G__334948) : tailrecursion.hoplon.span.call(null,G__334947,G__334948));
})();
var G__334854 = "))\n          (";
var G__334855 = (function (){var G__334949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334950 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334949,G__334950) : tailrecursion.hoplon.span.call(null,G__334949,G__334950));
})();
var G__334856 = (function (){var G__334951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334952 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334951,G__334952) : tailrecursion.hoplon.span.call(null,G__334951,G__334952));
})();
var G__334857 = ")\n          (";
var G__334858 = (function (){var G__334953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334954 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334953,G__334954) : tailrecursion.hoplon.span.call(null,G__334953,G__334954));
})();
var G__334859 = "(";
var G__334860 = (function (){var G__334955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334956 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334955,G__334956) : tailrecursion.hoplon.span.call(null,G__334955,G__334956));
})();
var G__334861 = " (";
var G__334862 = (function (){var G__334957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334958 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334957,G__334958) : tailrecursion.hoplon.span.call(null,G__334957,G__334958));
})();
var G__334863 = " ";
var G__334864 = (function (){var G__334959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__334960 = "\"Error: DECODE ended on a partial code.\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334959,G__334960) : tailrecursion.hoplon.span.call(null,G__334959,G__334960));
})();
var G__334865 = "))\n              (";
var G__334866 = (function (){var G__334961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334962 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334961,G__334962) : tailrecursion.hoplon.span.call(null,G__334961,G__334962));
})();
var G__334867 = (function (){var G__334963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334964 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334963,G__334964) : tailrecursion.hoplon.span.call(null,G__334963,G__334964));
})();
var G__334868 = ")))\n      (";
var G__334869 = (function (){var G__334965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334966 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334965,G__334966) : tailrecursion.hoplon.span.call(null,G__334965,G__334966));
})();
var G__334870 = "[";
var G__334871 = (function (){var G__334967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334968 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334967,G__334968) : tailrecursion.hoplon.span.call(null,G__334967,G__334968));
})();
var G__334872 = "(";
var G__334873 = (function (){var G__334969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334970 = "choose-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334969,G__334970) : tailrecursion.hoplon.span.call(null,G__334969,G__334970));
})();
var G__334874 = " (";
var G__334875 = (function (){var G__334971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334972 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334971,G__334972) : tailrecursion.hoplon.span.call(null,G__334971,G__334972));
})();
var G__334876 = (function (){var G__334973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334974 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334973,G__334974) : tailrecursion.hoplon.span.call(null,G__334973,G__334974));
})();
var G__334877 = ") ";
var G__334878 = (function (){var G__334975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334976 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334975,G__334976) : tailrecursion.hoplon.span.call(null,G__334975,G__334976));
})();
var G__334879 = ")]\n        (";
var G__334880 = (function (){var G__334977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__334978 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334977,G__334978) : tailrecursion.hoplon.span.call(null,G__334977,G__334978));
})();
var G__334881 = "(";
var G__334882 = (function (){var G__334979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334980 = "leaf?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334979,G__334980) : tailrecursion.hoplon.span.call(null,G__334979,G__334980));
})();
var G__334883 = " ";
var G__334884 = (function (){var G__334981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334982 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334981,G__334982) : tailrecursion.hoplon.span.call(null,G__334981,G__334982));
})();
var G__334885 = ") (";
var G__334886 = (function (){var G__334983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334984 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334983,G__334984) : tailrecursion.hoplon.span.call(null,G__334983,G__334984));
})();
var G__334887 = " (";
var G__334888 = (function (){var G__334985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334986 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334985,G__334986) : tailrecursion.hoplon.span.call(null,G__334985,G__334986));
})();
var G__334889 = (function (){var G__334987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334988 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334987,G__334988) : tailrecursion.hoplon.span.call(null,G__334987,G__334988));
})();
var G__334890 = " (";
var G__334891 = (function (){var G__334989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__334990 = "symbol-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334989,G__334990) : tailrecursion.hoplon.span.call(null,G__334989,G__334990));
})();
var G__334892 = " ";
var G__334893 = (function (){var G__334991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334992 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334991,G__334992) : tailrecursion.hoplon.span.call(null,G__334991,G__334992));
})();
var G__334894 = "))\n                                (";
var G__334895 = (function (){var G__334993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__334994 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334993,G__334994) : tailrecursion.hoplon.span.call(null,G__334993,G__334994));
})();
var G__334896 = (function (){var G__334995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334996 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334995,G__334996) : tailrecursion.hoplon.span.call(null,G__334995,G__334996));
})();
var G__334897 = ")\n                                ";
var G__334898 = (function (){var G__334997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__334998 = "huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334997,G__334998) : tailrecursion.hoplon.span.call(null,G__334997,G__334998));
})();
var G__334899 = ")\n            (";
var G__334900 = (function (){var G__334999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335000 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__334999,G__335000) : tailrecursion.hoplon.span.call(null,G__334999,G__335000));
})();
var G__334901 = " ";
var G__334902 = (function (){var G__335001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335002 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335001,G__335002) : tailrecursion.hoplon.span.call(null,G__335001,G__335002));
})();
var G__334903 = " (";
var G__334904 = (function (){var G__335003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335004 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335003,G__335004) : tailrecursion.hoplon.span.call(null,G__335003,G__335004));
})();
var G__334905 = (function (){var G__335005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335006 = "bits";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335005,G__335006) : tailrecursion.hoplon.span.call(null,G__335005,G__335006));
})();
var G__334906 = ") ";
var G__334907 = (function (){var G__335007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335008 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335007,G__335008) : tailrecursion.hoplon.span.call(null,G__335007,G__335008));
})();
var G__334908 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$95 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$95(G__334814,G__334815,G__334816,G__334817,G__334818,G__334819,G__334820,G__334821,G__334822,G__334823,G__334824,G__334825,G__334826,G__334827,G__334828,G__334829,G__334830,G__334831,G__334832,G__334833,G__334834,G__334835,G__334836,G__334837,G__334838,G__334839,G__334840,G__334841,G__334842,G__334843,G__334844,G__334845,G__334846,G__334847,G__334848,G__334849,G__334850,G__334851,G__334852,G__334853,G__334854,G__334855,G__334856,G__334857,G__334858,G__334859,G__334860,G__334861,G__334862,G__334863,G__334864,G__334865,G__334866,G__334867,G__334868,G__334869,G__334870,G__334871,G__334872,G__334873,G__334874,G__334875,G__334876,G__334877,G__334878,G__334879,G__334880,G__334881,G__334882,G__334883,G__334884,G__334885,G__334886,G__334887,G__334888,G__334889,G__334890,G__334891,G__334892,G__334893,G__334894,G__334895,G__334896,G__334897,G__334898,G__334899,G__334900,G__334901,G__334902,G__334903,G__334904,G__334905,G__334906,G__334907,G__334908) : tailrecursion.hoplon.pre.call(null,G__334814,G__334815,G__334816,G__334817,G__334818,G__334819,G__334820,G__334821,G__334822,G__334823,G__334824,G__334825,G__334826,G__334827,G__334828,G__334829,G__334830,G__334831,G__334832,G__334833,G__334834,G__334835,G__334836,G__334837,G__334838,G__334839,G__334840,G__334841,G__334842,G__334843,G__334844,G__334845,G__334846,G__334847,G__334848,G__334849,G__334850,G__334851,G__334852,G__334853,G__334854,G__334855,G__334856,G__334857,G__334858,G__334859,G__334860,G__334861,G__334862,G__334863,G__334864,G__334865,G__334866,G__334867,G__334868,G__334869,G__334870,G__334871,G__334872,G__334873,G__334874,G__334875,G__334876,G__334877,G__334878,G__334879,G__334880,G__334881,G__334882,G__334883,G__334884,G__334885,G__334886,G__334887,G__334888,G__334889,G__334890,G__334891,G__334892,G__334893,G__334894,G__334895,G__334896,G__334897,G__334898,G__334899,G__334900,G__334901,G__334902,G__334903,G__334904,G__334905,G__334906,G__334907,G__334908));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__334812,G__334813) : tailrecursion.hoplon.div.call(null,G__334812,G__334813));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__334811) : tailrecursion.hoplon.div.call(null,G__334811));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_334226;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_334225;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_334224;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_334223;
}})()], 0))], 0));
var G__319909 = "\n";
var G__319910 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Sets of Weighted Elements"], null),(function (){var _STAR_references_STAR_335009 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_335010 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_335011 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_335012 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__335013 = cljs.core.PersistentArrayMap.EMPTY;
var G__335014 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In our representation of trees, each non-leaf node contains a set of symbols, which we have represented as a simple list. However, the tree-generating algorithm discussed above requires that we also work with sets of leaves and trees, successively merging the two smallest items. Since we will be required to repeatedly find the smallest item in a set, it is convenient to use an ordered representation for this kind of set."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__335013,G__335014) : tailrecursion.hoplon.markdown.para_node.call(null,G__335013,G__335014));
})(),(function (){var G__335015 = cljs.core.PersistentArrayMap.EMPTY;
var G__335016 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We will represent a set of leaves and trees as a list of elements, arranged in increasing order of weight. The following ",(function (){var G__335017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__335018 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__335017,G__335018) : tailrecursion.hoplon.markdown.code_node.call(null,G__335017,G__335018));
})()," procedure for constructing sets is similar to the one described in exercise 2.61; however, items are compared by their weights, and the element being added to the set is never already in it."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__335015,G__335016) : tailrecursion.hoplon.markdown.para_node.call(null,G__335015,G__335016));
})(),(function (){var G__335117 = (function (){var G__335118 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__335119 = (function (){var G__335120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__335121 = "(";
var G__335122 = (function (){var G__335166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__335167 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335166,G__335167) : tailrecursion.hoplon.span.call(null,G__335166,G__335167));
})();
var G__335123 = (function (){var G__335168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335169 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335168,G__335169) : tailrecursion.hoplon.span.call(null,G__335168,G__335169));
})();
var G__335124 = " [";
var G__335125 = (function (){var G__335170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335171 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335170,G__335171) : tailrecursion.hoplon.span.call(null,G__335170,G__335171));
})();
var G__335126 = " ";
var G__335127 = (function (){var G__335172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335173 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335172,G__335173) : tailrecursion.hoplon.span.call(null,G__335172,G__335173));
})();
var G__335128 = "]\n  (";
var G__335129 = (function (){var G__335174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335175 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335174,G__335175) : tailrecursion.hoplon.span.call(null,G__335174,G__335175));
})();
var G__335130 = "(";
var G__335131 = (function (){var G__335176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335177 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335176,G__335177) : tailrecursion.hoplon.span.call(null,G__335176,G__335177));
})();
var G__335132 = " ";
var G__335133 = (function (){var G__335178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335179 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335178,G__335179) : tailrecursion.hoplon.span.call(null,G__335178,G__335179));
})();
var G__335134 = ") (";
var G__335135 = (function (){var G__335180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335181 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335180,G__335181) : tailrecursion.hoplon.span.call(null,G__335180,G__335181));
})();
var G__335136 = (function (){var G__335182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335183 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335182,G__335183) : tailrecursion.hoplon.span.call(null,G__335182,G__335183));
})();
var G__335137 = ")\n        (";
var G__335138 = (function (){var G__335184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335185 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335184,G__335185) : tailrecursion.hoplon.span.call(null,G__335184,G__335185));
})();
var G__335139 = "(";
var G__335140 = (function (){var G__335186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335187 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335186,G__335187) : tailrecursion.hoplon.span.call(null,G__335186,G__335187));
})();
var G__335141 = " ";
var G__335142 = (function (){var G__335188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335189 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335188,G__335189) : tailrecursion.hoplon.span.call(null,G__335188,G__335189));
})();
var G__335143 = ") (";
var G__335144 = (function (){var G__335190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335191 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335190,G__335191) : tailrecursion.hoplon.span.call(null,G__335190,G__335191));
})();
var G__335145 = " (";
var G__335146 = (function (){var G__335192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335193 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335192,G__335193) : tailrecursion.hoplon.span.call(null,G__335192,G__335193));
})();
var G__335147 = (function (){var G__335194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335195 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335194,G__335195) : tailrecursion.hoplon.span.call(null,G__335194,G__335195));
})();
var G__335148 = ")))\n          (";
var G__335149 = (function (){var G__335196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335197 = "conj set ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335196,G__335197) : tailrecursion.hoplon.span.call(null,G__335196,G__335197));
})();
var G__335150 = (function (){var G__335198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335199 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335198,G__335199) : tailrecursion.hoplon.span.call(null,G__335198,G__335199));
})();
var G__335151 = ")\n        ";
var G__335152 = (function (){var G__335200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335201 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335200,G__335201) : tailrecursion.hoplon.span.call(null,G__335200,G__335201));
})();
var G__335153 = " (";
var G__335154 = (function (){var G__335202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335203 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335202,G__335203) : tailrecursion.hoplon.span.call(null,G__335202,G__335203));
})();
var G__335155 = "(";
var G__335156 = (function (){var G__335204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335205 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335204,G__335205) : tailrecursion.hoplon.span.call(null,G__335204,G__335205));
})();
var G__335157 = " ";
var G__335158 = (function (){var G__335206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335207 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335206,G__335207) : tailrecursion.hoplon.span.call(null,G__335206,G__335207));
})();
var G__335159 = " (";
var G__335160 = (function (){var G__335208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335209 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335208,G__335209) : tailrecursion.hoplon.span.call(null,G__335208,G__335209));
})();
var G__335161 = (function (){var G__335210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335211 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335210,G__335211) : tailrecursion.hoplon.span.call(null,G__335210,G__335211));
})();
var G__335162 = "))\n                    (";
var G__335163 = (function (){var G__335212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335213 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335212,G__335213) : tailrecursion.hoplon.span.call(null,G__335212,G__335213));
})();
var G__335164 = (function (){var G__335214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335215 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335214,G__335215) : tailrecursion.hoplon.span.call(null,G__335214,G__335215));
})();
var G__335165 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__335120,G__335121,G__335122,G__335123,G__335124,G__335125,G__335126,G__335127,G__335128,G__335129,G__335130,G__335131,G__335132,G__335133,G__335134,G__335135,G__335136,G__335137,G__335138,G__335139,G__335140,G__335141,G__335142,G__335143,G__335144,G__335145,G__335146,G__335147,G__335148,G__335149,G__335150,G__335151,G__335152,G__335153,G__335154,G__335155,G__335156,G__335157,G__335158,G__335159,G__335160,G__335161,G__335162,G__335163,G__335164,G__335165) : tailrecursion.hoplon.pre.call(null,G__335120,G__335121,G__335122,G__335123,G__335124,G__335125,G__335126,G__335127,G__335128,G__335129,G__335130,G__335131,G__335132,G__335133,G__335134,G__335135,G__335136,G__335137,G__335138,G__335139,G__335140,G__335141,G__335142,G__335143,G__335144,G__335145,G__335146,G__335147,G__335148,G__335149,G__335150,G__335151,G__335152,G__335153,G__335154,G__335155,G__335156,G__335157,G__335158,G__335159,G__335160,G__335161,G__335162,G__335163,G__335164,G__335165));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__335118,G__335119) : tailrecursion.hoplon.div.call(null,G__335118,G__335119));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__335117) : tailrecursion.hoplon.div.call(null,G__335117));
})(),(function (){var G__335216 = cljs.core.PersistentArrayMap.EMPTY;
var G__335217 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: If we want our program to deal with large lists, we would have to alter our ",(function (){var G__335218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__335219 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__335218,G__335219) : tailrecursion.hoplon.markdown.code_node.call(null,G__335218,G__335219));
})()," procedure so as to avoid stack overflows. Design a non-recursive version of ",(function (){var G__335220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__335221 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__335220,G__335221) : tailrecursion.hoplon.markdown.code_node.call(null,G__335220,G__335221));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__335216,G__335217) : tailrecursion.hoplon.markdown.para_node.call(null,G__335216,G__335217));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_335012;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_335011;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_335010;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_335009;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_335222 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_335223 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_335224 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_335225 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__335366 = (function (){var G__335367 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__335368 = (function (){var G__335369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__335370 = "(";
var G__335371 = (function (){var G__335435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__335436 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335435,G__335436) : tailrecursion.hoplon.span.call(null,G__335435,G__335436));
})();
var G__335372 = (function (){var G__335437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335438 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335437,G__335438) : tailrecursion.hoplon.span.call(null,G__335437,G__335438));
})();
var G__335373 = " [";
var G__335374 = (function (){var G__335439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335440 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335439,G__335440) : tailrecursion.hoplon.span.call(null,G__335439,G__335440));
})();
var G__335375 = " ";
var G__335376 = (function (){var G__335441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335442 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335441,G__335442) : tailrecursion.hoplon.span.call(null,G__335441,G__335442));
})();
var G__335377 = "]\n  (";
var G__335378 = (function (){var G__335443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__335444 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335443,G__335444) : tailrecursion.hoplon.span.call(null,G__335443,G__335444));
})();
var G__335379 = "[";
var G__335380 = (function (){var G__335445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335446 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335445,G__335446) : tailrecursion.hoplon.span.call(null,G__335445,G__335446));
})();
var G__335381 = "   ";
var G__335382 = (function (){var G__335447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335448 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335447,G__335448) : tailrecursion.hoplon.span.call(null,G__335447,G__335448));
})();
var G__335383 = "()\n         ";
var G__335384 = (function (){var G__335449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335450 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335449,G__335450) : tailrecursion.hoplon.span.call(null,G__335449,G__335450));
})();
var G__335385 = " ";
var G__335386 = (function (){var G__335451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335452 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335451,G__335452) : tailrecursion.hoplon.span.call(null,G__335451,G__335452));
})();
var G__335387 = "]\n    (";
var G__335388 = (function (){var G__335453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335454 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335453,G__335454) : tailrecursion.hoplon.span.call(null,G__335453,G__335454));
})();
var G__335389 = "(";
var G__335390 = (function (){var G__335455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335456 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335455,G__335456) : tailrecursion.hoplon.span.call(null,G__335455,G__335456));
})();
var G__335391 = " ";
var G__335392 = (function (){var G__335457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335458 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335457,G__335458) : tailrecursion.hoplon.span.call(null,G__335457,G__335458));
})();
var G__335393 = ") (";
var G__335394 = (function (){var G__335459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335460 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335459,G__335460) : tailrecursion.hoplon.span.call(null,G__335459,G__335460));
})();
var G__335395 = "(";
var G__335396 = (function (){var G__335461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335462 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335461,G__335462) : tailrecursion.hoplon.span.call(null,G__335461,G__335462));
})();
var G__335397 = (function (){var G__335463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335464 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335463,G__335464) : tailrecursion.hoplon.span.call(null,G__335463,G__335464));
})();
var G__335398 = " ";
var G__335399 = (function (){var G__335465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335466 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335465,G__335466) : tailrecursion.hoplon.span.call(null,G__335465,G__335466));
})();
var G__335400 = "))\n          (";
var G__335401 = (function (){var G__335467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335468 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335467,G__335468) : tailrecursion.hoplon.span.call(null,G__335467,G__335468));
})();
var G__335402 = "(";
var G__335403 = (function (){var G__335469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335470 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335469,G__335470) : tailrecursion.hoplon.span.call(null,G__335469,G__335470));
})();
var G__335404 = " ";
var G__335405 = (function (){var G__335471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335472 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335471,G__335472) : tailrecursion.hoplon.span.call(null,G__335471,G__335472));
})();
var G__335406 = ") (";
var G__335407 = (function (){var G__335473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335474 = "weight";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335473,G__335474) : tailrecursion.hoplon.span.call(null,G__335473,G__335474));
})();
var G__335408 = " (";
var G__335409 = (function (){var G__335475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335476 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335475,G__335476) : tailrecursion.hoplon.span.call(null,G__335475,G__335476));
})();
var G__335410 = (function (){var G__335477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335478 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335477,G__335478) : tailrecursion.hoplon.span.call(null,G__335477,G__335478));
})();
var G__335411 = ")))\n            (";
var G__335412 = (function (){var G__335479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335480 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335479,G__335480) : tailrecursion.hoplon.span.call(null,G__335479,G__335480));
})();
var G__335413 = "(";
var G__335414 = (function (){var G__335481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335482 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335481,G__335482) : tailrecursion.hoplon.span.call(null,G__335481,G__335482));
})();
var G__335415 = (function (){var G__335483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335484 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335483,G__335484) : tailrecursion.hoplon.span.call(null,G__335483,G__335484));
})();
var G__335416 = ") (";
var G__335417 = (function (){var G__335485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335486 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335485,G__335486) : tailrecursion.hoplon.span.call(null,G__335485,G__335486));
})();
var G__335418 = (function (){var G__335487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335488 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335487,G__335488) : tailrecursion.hoplon.span.call(null,G__335487,G__335488));
})();
var G__335419 = " ";
var G__335420 = (function (){var G__335489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335490 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335489,G__335490) : tailrecursion.hoplon.span.call(null,G__335489,G__335490));
})();
var G__335421 = "))\n          ";
var G__335422 = (function (){var G__335491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335492 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335491,G__335492) : tailrecursion.hoplon.span.call(null,G__335491,G__335492));
})();
var G__335423 = " (";
var G__335424 = (function (){var G__335493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335494 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335493,G__335494) : tailrecursion.hoplon.span.call(null,G__335493,G__335494));
})();
var G__335425 = " (";
var G__335426 = (function (){var G__335495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335496 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335495,G__335496) : tailrecursion.hoplon.span.call(null,G__335495,G__335496));
})();
var G__335427 = (function (){var G__335497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335498 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335497,G__335498) : tailrecursion.hoplon.span.call(null,G__335497,G__335498));
})();
var G__335428 = " (";
var G__335429 = (function (){var G__335499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335500 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335499,G__335500) : tailrecursion.hoplon.span.call(null,G__335499,G__335500));
})();
var G__335430 = (function (){var G__335501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335502 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335501,G__335502) : tailrecursion.hoplon.span.call(null,G__335501,G__335502));
})();
var G__335431 = ")) (";
var G__335432 = (function (){var G__335503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335504 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335503,G__335504) : tailrecursion.hoplon.span.call(null,G__335503,G__335504));
})();
var G__335433 = (function (){var G__335505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335506 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335505,G__335506) : tailrecursion.hoplon.span.call(null,G__335505,G__335506));
})();
var G__335434 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$66 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$66(G__335369,G__335370,G__335371,G__335372,G__335373,G__335374,G__335375,G__335376,G__335377,G__335378,G__335379,G__335380,G__335381,G__335382,G__335383,G__335384,G__335385,G__335386,G__335387,G__335388,G__335389,G__335390,G__335391,G__335392,G__335393,G__335394,G__335395,G__335396,G__335397,G__335398,G__335399,G__335400,G__335401,G__335402,G__335403,G__335404,G__335405,G__335406,G__335407,G__335408,G__335409,G__335410,G__335411,G__335412,G__335413,G__335414,G__335415,G__335416,G__335417,G__335418,G__335419,G__335420,G__335421,G__335422,G__335423,G__335424,G__335425,G__335426,G__335427,G__335428,G__335429,G__335430,G__335431,G__335432,G__335433,G__335434) : tailrecursion.hoplon.pre.call(null,G__335369,G__335370,G__335371,G__335372,G__335373,G__335374,G__335375,G__335376,G__335377,G__335378,G__335379,G__335380,G__335381,G__335382,G__335383,G__335384,G__335385,G__335386,G__335387,G__335388,G__335389,G__335390,G__335391,G__335392,G__335393,G__335394,G__335395,G__335396,G__335397,G__335398,G__335399,G__335400,G__335401,G__335402,G__335403,G__335404,G__335405,G__335406,G__335407,G__335408,G__335409,G__335410,G__335411,G__335412,G__335413,G__335414,G__335415,G__335416,G__335417,G__335418,G__335419,G__335420,G__335421,G__335422,G__335423,G__335424,G__335425,G__335426,G__335427,G__335428,G__335429,G__335430,G__335431,G__335432,G__335433,G__335434));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__335367,G__335368) : tailrecursion.hoplon.div.call(null,G__335367,G__335368));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__335366) : tailrecursion.hoplon.div.call(null,G__335366));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_335225;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_335224;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_335223;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_335222;
}})()], 0)),"",(function (){var _STAR_references_STAR_335507 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_335508 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_335509 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_335510 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__335511 = cljs.core.PersistentArrayMap.EMPTY;
var G__335512 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following procedure takes a list of symbol-requency pairs such as ",(function (){var G__335513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"((A 4) (B 2) (C 1) (D 1))"], null);
var G__335514 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__335513,G__335514) : tailrecursion.hoplon.markdown.code_node.call(null,G__335513,G__335514));
})()," and constructs an initial ordered set of leaves, ready to be merged according to the Huffman algorithm:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__335511,G__335512) : tailrecursion.hoplon.markdown.para_node.call(null,G__335511,G__335512));
})(),(function (){var G__335602 = (function (){var G__335603 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__335604 = (function (){var G__335605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__335606 = "(";
var G__335607 = (function (){var G__335646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__335647 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335646,G__335647) : tailrecursion.hoplon.span.call(null,G__335646,G__335647));
})();
var G__335608 = (function (){var G__335648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335649 = "make-leaf-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335648,G__335649) : tailrecursion.hoplon.span.call(null,G__335648,G__335649));
})();
var G__335609 = " [";
var G__335610 = (function (){var G__335650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335651 = "pairs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335650,G__335651) : tailrecursion.hoplon.span.call(null,G__335650,G__335651));
})();
var G__335611 = "]\n  (";
var G__335612 = (function (){var G__335652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__335653 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335652,G__335653) : tailrecursion.hoplon.span.call(null,G__335652,G__335653));
})();
var G__335613 = "(";
var G__335614 = (function (){var G__335654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335655 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335654,G__335655) : tailrecursion.hoplon.span.call(null,G__335654,G__335655));
})();
var G__335615 = " ";
var G__335616 = (function (){var G__335656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335657 = "pairs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335656,G__335657) : tailrecursion.hoplon.span.call(null,G__335656,G__335657));
})();
var G__335617 = ")\n      ";
var G__335618 = (function (){var G__335658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335659 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335658,G__335659) : tailrecursion.hoplon.span.call(null,G__335658,G__335659));
})();
var G__335619 = "()\n      (";
var G__335620 = (function (){var G__335660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__335661 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335660,G__335661) : tailrecursion.hoplon.span.call(null,G__335660,G__335661));
})();
var G__335621 = "[";
var G__335622 = (function (){var G__335662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335663 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335662,G__335663) : tailrecursion.hoplon.span.call(null,G__335662,G__335663));
})();
var G__335623 = " (";
var G__335624 = (function (){var G__335664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335665 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335664,G__335665) : tailrecursion.hoplon.span.call(null,G__335664,G__335665));
})();
var G__335625 = (function (){var G__335666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335667 = "pairs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335666,G__335667) : tailrecursion.hoplon.span.call(null,G__335666,G__335667));
})();
var G__335626 = ")]\n        (";
var G__335627 = (function (){var G__335668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335669 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335668,G__335669) : tailrecursion.hoplon.span.call(null,G__335668,G__335669));
})();
var G__335628 = " (";
var G__335629 = (function (){var G__335670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335671 = "make-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335670,G__335671) : tailrecursion.hoplon.span.call(null,G__335670,G__335671));
})();
var G__335630 = " (";
var G__335631 = (function (){var G__335672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335673 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335672,G__335673) : tailrecursion.hoplon.span.call(null,G__335672,G__335673));
})();
var G__335632 = (function (){var G__335674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335675 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335674,G__335675) : tailrecursion.hoplon.span.call(null,G__335674,G__335675));
})();
var G__335633 = ")   ";
var G__335634 = (function (){var G__335676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #408080; font-style: italic"], null);
var G__335677 = "; symbol";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335676,G__335677) : tailrecursion.hoplon.span.call(null,G__335676,G__335677));
})();
var G__335635 = "\n                               (";
var G__335636 = (function (){var G__335678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335679 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335678,G__335679) : tailrecursion.hoplon.span.call(null,G__335678,G__335679));
})();
var G__335637 = (function (){var G__335680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335681 = "pair";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335680,G__335681) : tailrecursion.hoplon.span.call(null,G__335680,G__335681));
})();
var G__335638 = ")) ";
var G__335639 = (function (){var G__335682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #408080; font-style: italic"], null);
var G__335683 = "; frequency";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335682,G__335683) : tailrecursion.hoplon.span.call(null,G__335682,G__335683));
})();
var G__335640 = "\n                    (";
var G__335641 = (function (){var G__335684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335685 = "make-leaf-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335684,G__335685) : tailrecursion.hoplon.span.call(null,G__335684,G__335685));
})();
var G__335642 = " (";
var G__335643 = (function (){var G__335686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__335687 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335686,G__335687) : tailrecursion.hoplon.span.call(null,G__335686,G__335687));
})();
var G__335644 = (function (){var G__335688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335689 = "pairs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335688,G__335689) : tailrecursion.hoplon.span.call(null,G__335688,G__335689));
})();
var G__335645 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41(G__335605,G__335606,G__335607,G__335608,G__335609,G__335610,G__335611,G__335612,G__335613,G__335614,G__335615,G__335616,G__335617,G__335618,G__335619,G__335620,G__335621,G__335622,G__335623,G__335624,G__335625,G__335626,G__335627,G__335628,G__335629,G__335630,G__335631,G__335632,G__335633,G__335634,G__335635,G__335636,G__335637,G__335638,G__335639,G__335640,G__335641,G__335642,G__335643,G__335644,G__335645) : tailrecursion.hoplon.pre.call(null,G__335605,G__335606,G__335607,G__335608,G__335609,G__335610,G__335611,G__335612,G__335613,G__335614,G__335615,G__335616,G__335617,G__335618,G__335619,G__335620,G__335621,G__335622,G__335623,G__335624,G__335625,G__335626,G__335627,G__335628,G__335629,G__335630,G__335631,G__335632,G__335633,G__335634,G__335635,G__335636,G__335637,G__335638,G__335639,G__335640,G__335641,G__335642,G__335643,G__335644,G__335645));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__335603,G__335604) : tailrecursion.hoplon.div.call(null,G__335603,G__335604));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__335602) : tailrecursion.hoplon.div.call(null,G__335602));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_335510;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_335509;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_335508;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_335507;
}})()], 0));
var G__319911 = "";
var G__319912 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_335690 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_335691 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_335692 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_335693 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__335694 = cljs.core.PersistentArrayMap.EMPTY;
var G__335695 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define an encoding tree and a sample message:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__335694,G__335695) : tailrecursion.hoplon.markdown.para_node.call(null,G__335694,G__335695));
})(),(function (){var G__335830 = (function (){var G__335831 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__335832 = (function (){var G__335833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__335834 = "(";
var G__335835 = (function (){var G__335899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__335900 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335899,G__335900) : tailrecursion.hoplon.span.call(null,G__335899,G__335900));
})();
var G__335836 = (function (){var G__335901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335902 = "sample-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335901,G__335902) : tailrecursion.hoplon.span.call(null,G__335901,G__335902));
})();
var G__335837 = "\n  (";
var G__335838 = (function (){var G__335903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335904 = "make-code-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335903,G__335904) : tailrecursion.hoplon.span.call(null,G__335903,G__335904));
})();
var G__335839 = " (";
var G__335840 = (function (){var G__335905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335906 = "make-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335905,G__335906) : tailrecursion.hoplon.span.call(null,G__335905,G__335906));
})();
var G__335841 = " ";
var G__335842 = (function (){var G__335907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335908 = "'A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335907,G__335908) : tailrecursion.hoplon.span.call(null,G__335907,G__335908));
})();
var G__335843 = " ";
var G__335844 = (function (){var G__335909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335910 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335909,G__335910) : tailrecursion.hoplon.span.call(null,G__335909,G__335910));
})();
var G__335845 = ")\n                  (";
var G__335846 = (function (){var G__335911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335912 = "make-code-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335911,G__335912) : tailrecursion.hoplon.span.call(null,G__335911,G__335912));
})();
var G__335847 = "\n                    (";
var G__335848 = (function (){var G__335913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335914 = "make-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335913,G__335914) : tailrecursion.hoplon.span.call(null,G__335913,G__335914));
})();
var G__335849 = " ";
var G__335850 = (function (){var G__335915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335916 = "'B";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335915,G__335916) : tailrecursion.hoplon.span.call(null,G__335915,G__335916));
})();
var G__335851 = " ";
var G__335852 = (function (){var G__335917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335918 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335917,G__335918) : tailrecursion.hoplon.span.call(null,G__335917,G__335918));
})();
var G__335853 = ")\n                    (";
var G__335854 = (function (){var G__335919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335920 = "make-code-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335919,G__335920) : tailrecursion.hoplon.span.call(null,G__335919,G__335920));
})();
var G__335855 = " (";
var G__335856 = (function (){var G__335921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335922 = "make-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335921,G__335922) : tailrecursion.hoplon.span.call(null,G__335921,G__335922));
})();
var G__335857 = " ";
var G__335858 = (function (){var G__335923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335924 = "'D";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335923,G__335924) : tailrecursion.hoplon.span.call(null,G__335923,G__335924));
})();
var G__335859 = " ";
var G__335860 = (function (){var G__335925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335926 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335925,G__335926) : tailrecursion.hoplon.span.call(null,G__335925,G__335926));
})();
var G__335861 = ")\n                                    (";
var G__335862 = (function (){var G__335927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__335928 = "make-leaf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335927,G__335928) : tailrecursion.hoplon.span.call(null,G__335927,G__335928));
})();
var G__335863 = " ";
var G__335864 = (function (){var G__335929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335930 = "'C";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335929,G__335930) : tailrecursion.hoplon.span.call(null,G__335929,G__335930));
})();
var G__335865 = " ";
var G__335866 = (function (){var G__335931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335932 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335931,G__335932) : tailrecursion.hoplon.span.call(null,G__335931,G__335932));
})();
var G__335867 = ")))))\n\n(";
var G__335868 = (function (){var G__335933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__335934 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335933,G__335934) : tailrecursion.hoplon.span.call(null,G__335933,G__335934));
})();
var G__335869 = (function (){var G__335935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__335936 = "sample-message";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335935,G__335936) : tailrecursion.hoplon.span.call(null,G__335935,G__335936));
})();
var G__335870 = "\n  ";
var G__335871 = (function (){var G__335937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335938 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335937,G__335938) : tailrecursion.hoplon.span.call(null,G__335937,G__335938));
})();
var G__335872 = "(";
var G__335873 = (function (){var G__335939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335940 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335939,G__335940) : tailrecursion.hoplon.span.call(null,G__335939,G__335940));
})();
var G__335874 = " ";
var G__335875 = (function (){var G__335941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335942 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335941,G__335942) : tailrecursion.hoplon.span.call(null,G__335941,G__335942));
})();
var G__335876 = " ";
var G__335877 = (function (){var G__335943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335944 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335943,G__335944) : tailrecursion.hoplon.span.call(null,G__335943,G__335944));
})();
var G__335878 = " ";
var G__335879 = (function (){var G__335945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335946 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335945,G__335946) : tailrecursion.hoplon.span.call(null,G__335945,G__335946));
})();
var G__335880 = " ";
var G__335881 = (function (){var G__335947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335948 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335947,G__335948) : tailrecursion.hoplon.span.call(null,G__335947,G__335948));
})();
var G__335882 = " ";
var G__335883 = (function (){var G__335949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335950 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335949,G__335950) : tailrecursion.hoplon.span.call(null,G__335949,G__335950));
})();
var G__335884 = " ";
var G__335885 = (function (){var G__335951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335952 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335951,G__335952) : tailrecursion.hoplon.span.call(null,G__335951,G__335952));
})();
var G__335886 = " ";
var G__335887 = (function (){var G__335953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335954 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335953,G__335954) : tailrecursion.hoplon.span.call(null,G__335953,G__335954));
})();
var G__335888 = " ";
var G__335889 = (function (){var G__335955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335956 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335955,G__335956) : tailrecursion.hoplon.span.call(null,G__335955,G__335956));
})();
var G__335890 = " ";
var G__335891 = (function (){var G__335957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335958 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335957,G__335958) : tailrecursion.hoplon.span.call(null,G__335957,G__335958));
})();
var G__335892 = " ";
var G__335893 = (function (){var G__335959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335960 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335959,G__335960) : tailrecursion.hoplon.span.call(null,G__335959,G__335960));
})();
var G__335894 = " ";
var G__335895 = (function (){var G__335961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335962 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335961,G__335962) : tailrecursion.hoplon.span.call(null,G__335961,G__335962));
})();
var G__335896 = " ";
var G__335897 = (function (){var G__335963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__335964 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__335963,G__335964) : tailrecursion.hoplon.span.call(null,G__335963,G__335964));
})();
var G__335898 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$66 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$66(G__335833,G__335834,G__335835,G__335836,G__335837,G__335838,G__335839,G__335840,G__335841,G__335842,G__335843,G__335844,G__335845,G__335846,G__335847,G__335848,G__335849,G__335850,G__335851,G__335852,G__335853,G__335854,G__335855,G__335856,G__335857,G__335858,G__335859,G__335860,G__335861,G__335862,G__335863,G__335864,G__335865,G__335866,G__335867,G__335868,G__335869,G__335870,G__335871,G__335872,G__335873,G__335874,G__335875,G__335876,G__335877,G__335878,G__335879,G__335880,G__335881,G__335882,G__335883,G__335884,G__335885,G__335886,G__335887,G__335888,G__335889,G__335890,G__335891,G__335892,G__335893,G__335894,G__335895,G__335896,G__335897,G__335898) : tailrecursion.hoplon.pre.call(null,G__335833,G__335834,G__335835,G__335836,G__335837,G__335838,G__335839,G__335840,G__335841,G__335842,G__335843,G__335844,G__335845,G__335846,G__335847,G__335848,G__335849,G__335850,G__335851,G__335852,G__335853,G__335854,G__335855,G__335856,G__335857,G__335858,G__335859,G__335860,G__335861,G__335862,G__335863,G__335864,G__335865,G__335866,G__335867,G__335868,G__335869,G__335870,G__335871,G__335872,G__335873,G__335874,G__335875,G__335876,G__335877,G__335878,G__335879,G__335880,G__335881,G__335882,G__335883,G__335884,G__335885,G__335886,G__335887,G__335888,G__335889,G__335890,G__335891,G__335892,G__335893,G__335894,G__335895,G__335896,G__335897,G__335898));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__335831,G__335832) : tailrecursion.hoplon.div.call(null,G__335831,G__335832));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__335830) : tailrecursion.hoplon.div.call(null,G__335830));
})(),(function (){var G__335965 = cljs.core.PersistentArrayMap.EMPTY;
var G__335966 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Use the ",(function (){var G__335967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"decode"], null);
var G__335968 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__335967,G__335968) : tailrecursion.hoplon.markdown.code_node.call(null,G__335967,G__335968));
})()," procedure to decode the message, and give the result."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__335965,G__335966) : tailrecursion.hoplon.markdown.para_node.call(null,G__335965,G__335966));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_335693;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_335692;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_335691;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_335690;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_335969 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_335970 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_335971 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_335972 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__336064 = (function (){var G__336065 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__336066 = (function (){var G__336067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__336068 = (function (){var G__336112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336113 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336112,G__336113) : tailrecursion.hoplon.span.call(null,G__336112,G__336113));
})();
var G__336069 = "(";
var G__336070 = (function (){var G__336114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336115 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336114,G__336115) : tailrecursion.hoplon.span.call(null,G__336114,G__336115));
})();
var G__336071 = " ";
var G__336072 = (function (){var G__336116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336117 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336116,G__336117) : tailrecursion.hoplon.span.call(null,G__336116,G__336117));
})();
var G__336073 = " ";
var G__336074 = (function (){var G__336118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336119 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336118,G__336119) : tailrecursion.hoplon.span.call(null,G__336118,G__336119));
})();
var G__336075 = " ";
var G__336076 = (function (){var G__336120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336121 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336120,G__336121) : tailrecursion.hoplon.span.call(null,G__336120,G__336121));
})();
var G__336077 = " ";
var G__336078 = (function (){var G__336122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336123 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336122,G__336123) : tailrecursion.hoplon.span.call(null,G__336122,G__336123));
})();
var G__336079 = " ";
var G__336080 = (function (){var G__336124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336125 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336124,G__336125) : tailrecursion.hoplon.span.call(null,G__336124,G__336125));
})();
var G__336081 = " ";
var G__336082 = (function (){var G__336126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336127 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336126,G__336127) : tailrecursion.hoplon.span.call(null,G__336126,G__336127));
})();
var G__336083 = " ";
var G__336084 = (function (){var G__336128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336129 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336128,G__336129) : tailrecursion.hoplon.span.call(null,G__336128,G__336129));
})();
var G__336085 = " ";
var G__336086 = (function (){var G__336130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336131 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336130,G__336131) : tailrecursion.hoplon.span.call(null,G__336130,G__336131));
})();
var G__336087 = " ";
var G__336088 = (function (){var G__336132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336133 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336132,G__336133) : tailrecursion.hoplon.span.call(null,G__336132,G__336133));
})();
var G__336089 = " ";
var G__336090 = (function (){var G__336134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336135 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336134,G__336135) : tailrecursion.hoplon.span.call(null,G__336134,G__336135));
})();
var G__336091 = " ";
var G__336092 = (function (){var G__336136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336137 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336136,G__336137) : tailrecursion.hoplon.span.call(null,G__336136,G__336137));
})();
var G__336093 = " ";
var G__336094 = (function (){var G__336138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336139 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336138,G__336139) : tailrecursion.hoplon.span.call(null,G__336138,G__336139));
})();
var G__336095 = ")\n";
var G__336096 = (function (){var G__336140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336141 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336140,G__336141) : tailrecursion.hoplon.span.call(null,G__336140,G__336141));
})();
var G__336097 = "(";
var G__336098 = (function (){var G__336142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336143 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336142,G__336143) : tailrecursion.hoplon.span.call(null,G__336142,G__336143));
})();
var G__336099 = "     ";
var G__336100 = (function (){var G__336144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336145 = "D";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336144,G__336145) : tailrecursion.hoplon.span.call(null,G__336144,G__336145));
})();
var G__336101 = " ";
var G__336102 = (function (){var G__336146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336147 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336146,G__336147) : tailrecursion.hoplon.span.call(null,G__336146,G__336147));
})();
var G__336103 = "   ";
var G__336104 = (function (){var G__336148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336149 = "B";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336148,G__336149) : tailrecursion.hoplon.span.call(null,G__336148,G__336149));
})();
var G__336105 = "   ";
var G__336106 = (function (){var G__336150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336151 = "B";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336150,G__336151) : tailrecursion.hoplon.span.call(null,G__336150,G__336151));
})();
var G__336107 = "     ";
var G__336108 = (function (){var G__336152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336153 = "C";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336152,G__336153) : tailrecursion.hoplon.span.call(null,G__336152,G__336153));
})();
var G__336109 = " ";
var G__336110 = (function (){var G__336154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336155 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336154,G__336155) : tailrecursion.hoplon.span.call(null,G__336154,G__336155));
})();
var G__336111 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45(G__336067,G__336068,G__336069,G__336070,G__336071,G__336072,G__336073,G__336074,G__336075,G__336076,G__336077,G__336078,G__336079,G__336080,G__336081,G__336082,G__336083,G__336084,G__336085,G__336086,G__336087,G__336088,G__336089,G__336090,G__336091,G__336092,G__336093,G__336094,G__336095,G__336096,G__336097,G__336098,G__336099,G__336100,G__336101,G__336102,G__336103,G__336104,G__336105,G__336106,G__336107,G__336108,G__336109,G__336110,G__336111) : tailrecursion.hoplon.pre.call(null,G__336067,G__336068,G__336069,G__336070,G__336071,G__336072,G__336073,G__336074,G__336075,G__336076,G__336077,G__336078,G__336079,G__336080,G__336081,G__336082,G__336083,G__336084,G__336085,G__336086,G__336087,G__336088,G__336089,G__336090,G__336091,G__336092,G__336093,G__336094,G__336095,G__336096,G__336097,G__336098,G__336099,G__336100,G__336101,G__336102,G__336103,G__336104,G__336105,G__336106,G__336107,G__336108,G__336109,G__336110,G__336111));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__336065,G__336066) : tailrecursion.hoplon.div.call(null,G__336065,G__336066));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__336064) : tailrecursion.hoplon.div.call(null,G__336064));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_335972;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_335971;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_335970;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_335969;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_336156 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336157 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_336158 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336159 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__336160 = cljs.core.PersistentArrayMap.EMPTY;
var G__336161 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",(function (){var G__336162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"encode"], null);
var G__336163 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336162,G__336163) : tailrecursion.hoplon.markdown.code_node.call(null,G__336162,G__336163));
})()," procedure takes as arguments a message and a tree and produces the list of bits that gives the encoded message."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__336160,G__336161) : tailrecursion.hoplon.markdown.para_node.call(null,G__336160,G__336161));
})(),(function (){var G__336233 = (function (){var G__336234 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__336235 = (function (){var G__336236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__336237 = "(";
var G__336238 = (function (){var G__336269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__336270 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336269,G__336270) : tailrecursion.hoplon.span.call(null,G__336269,G__336270));
})();
var G__336239 = (function (){var G__336271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336272 = "encode";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336271,G__336272) : tailrecursion.hoplon.span.call(null,G__336271,G__336272));
})();
var G__336240 = " [";
var G__336241 = (function (){var G__336273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336274 = "message";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336273,G__336274) : tailrecursion.hoplon.span.call(null,G__336273,G__336274));
})();
var G__336242 = " ";
var G__336243 = (function (){var G__336275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336276 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336275,G__336276) : tailrecursion.hoplon.span.call(null,G__336275,G__336276));
})();
var G__336244 = "]\n  (";
var G__336245 = (function (){var G__336277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__336278 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336277,G__336278) : tailrecursion.hoplon.span.call(null,G__336277,G__336278));
})();
var G__336246 = "(";
var G__336247 = (function (){var G__336279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336280 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336279,G__336280) : tailrecursion.hoplon.span.call(null,G__336279,G__336280));
})();
var G__336248 = " ";
var G__336249 = (function (){var G__336281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336282 = "message";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336281,G__336282) : tailrecursion.hoplon.span.call(null,G__336281,G__336282));
})();
var G__336250 = ")\n      ";
var G__336251 = (function (){var G__336283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336284 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336283,G__336284) : tailrecursion.hoplon.span.call(null,G__336283,G__336284));
})();
var G__336252 = "()\n      (";
var G__336253 = (function (){var G__336285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336286 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336285,G__336286) : tailrecursion.hoplon.span.call(null,G__336285,G__336286));
})();
var G__336254 = "(";
var G__336255 = (function (){var G__336287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336288 = "encode";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336287,G__336288) : tailrecursion.hoplon.span.call(null,G__336287,G__336288));
})();
var G__336256 = " (";
var G__336257 = (function (){var G__336289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336290 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336289,G__336290) : tailrecursion.hoplon.span.call(null,G__336289,G__336290));
})();
var G__336258 = (function (){var G__336291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336292 = "message";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336291,G__336292) : tailrecursion.hoplon.span.call(null,G__336291,G__336292));
})();
var G__336259 = ") ";
var G__336260 = (function (){var G__336293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336294 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336293,G__336294) : tailrecursion.hoplon.span.call(null,G__336293,G__336294));
})();
var G__336261 = ")\n              (";
var G__336262 = (function (){var G__336295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336296 = "encode-symbol";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336295,G__336296) : tailrecursion.hoplon.span.call(null,G__336295,G__336296));
})();
var G__336263 = " (";
var G__336264 = (function (){var G__336297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336298 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336297,G__336298) : tailrecursion.hoplon.span.call(null,G__336297,G__336298));
})();
var G__336265 = (function (){var G__336299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336300 = "message";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336299,G__336300) : tailrecursion.hoplon.span.call(null,G__336299,G__336300));
})();
var G__336266 = ") ";
var G__336267 = (function (){var G__336301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336302 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336301,G__336302) : tailrecursion.hoplon.span.call(null,G__336301,G__336302));
})();
var G__336268 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33(G__336236,G__336237,G__336238,G__336239,G__336240,G__336241,G__336242,G__336243,G__336244,G__336245,G__336246,G__336247,G__336248,G__336249,G__336250,G__336251,G__336252,G__336253,G__336254,G__336255,G__336256,G__336257,G__336258,G__336259,G__336260,G__336261,G__336262,G__336263,G__336264,G__336265,G__336266,G__336267,G__336268) : tailrecursion.hoplon.pre.call(null,G__336236,G__336237,G__336238,G__336239,G__336240,G__336241,G__336242,G__336243,G__336244,G__336245,G__336246,G__336247,G__336248,G__336249,G__336250,G__336251,G__336252,G__336253,G__336254,G__336255,G__336256,G__336257,G__336258,G__336259,G__336260,G__336261,G__336262,G__336263,G__336264,G__336265,G__336266,G__336267,G__336268));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__336234,G__336235) : tailrecursion.hoplon.div.call(null,G__336234,G__336235));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__336233) : tailrecursion.hoplon.div.call(null,G__336233));
})(),(function (){var G__336303 = cljs.core.PersistentArrayMap.EMPTY;
var G__336304 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__336305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"encode-symbol"], null);
var G__336306 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336305,G__336306) : tailrecursion.hoplon.markdown.code_node.call(null,G__336305,G__336306));
})()," is a procedure, which you must write, that returns the list of bits that encodes a given symbol according to a given tree. You should design ",(function (){var G__336307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"encode-symbol"], null);
var G__336308 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336307,G__336308) : tailrecursion.hoplon.markdown.code_node.call(null,G__336307,G__336308));
})()," so that it signals an error if the symbol is not in the tree at all. Test your procedure by encoding the result you obtained in exercise 2.67 with the sample tree and seeing whether it is the same as the original sample message."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__336303,G__336304) : tailrecursion.hoplon.markdown.para_node.call(null,G__336303,G__336304));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336159;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336158;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336157;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336156;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_336309 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336310 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_336311 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336312 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__336499 = (function (){var G__336500 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__336501 = (function (){var G__336502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__336503 = "(";
var G__336504 = (function (){var G__336590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__336591 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336590,G__336591) : tailrecursion.hoplon.span.call(null,G__336590,G__336591));
})();
var G__336505 = (function (){var G__336592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336593 = "encode-symbol*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336592,G__336593) : tailrecursion.hoplon.span.call(null,G__336592,G__336593));
})();
var G__336506 = " [";
var G__336507 = (function (){var G__336594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336595 = "symbol ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336594,G__336595) : tailrecursion.hoplon.span.call(null,G__336594,G__336595));
})();
var G__336508 = (function (){var G__336596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336597 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336596,G__336597) : tailrecursion.hoplon.span.call(null,G__336596,G__336597));
})();
var G__336509 = "]\n  (";
var G__336510 = (function (){var G__336598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__336599 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336598,G__336599) : tailrecursion.hoplon.span.call(null,G__336598,G__336599));
})();
var G__336511 = "[";
var G__336512 = (function (){var G__336600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336601 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336600,G__336601) : tailrecursion.hoplon.span.call(null,G__336600,G__336601));
})();
var G__336513 = "   ";
var G__336514 = (function (){var G__336602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336603 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336602,G__336603) : tailrecursion.hoplon.span.call(null,G__336602,G__336603));
})();
var G__336515 = "()\n         ";
var G__336516 = (function (){var G__336604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336605 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336604,G__336605) : tailrecursion.hoplon.span.call(null,G__336604,G__336605));
})();
var G__336517 = " ";
var G__336518 = (function (){var G__336606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336607 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336606,G__336607) : tailrecursion.hoplon.span.call(null,G__336606,G__336607));
})();
var G__336519 = "]\n    (";
var G__336520 = (function (){var G__336608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336609 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336608,G__336609) : tailrecursion.hoplon.span.call(null,G__336608,G__336609));
})();
var G__336521 = "(";
var G__336522 = (function (){var G__336610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336611 = "leaf?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336610,G__336611) : tailrecursion.hoplon.span.call(null,G__336610,G__336611));
})();
var G__336523 = " ";
var G__336524 = (function (){var G__336612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336613 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336612,G__336613) : tailrecursion.hoplon.span.call(null,G__336612,G__336613));
})();
var G__336525 = ")\n            (";
var G__336526 = (function (){var G__336614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336615 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336614,G__336615) : tailrecursion.hoplon.span.call(null,G__336614,G__336615));
})();
var G__336527 = (function (){var G__336616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336617 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336616,G__336617) : tailrecursion.hoplon.span.call(null,G__336616,G__336617));
})();
var G__336528 = ")\n          (";
var G__336529 = (function (){var G__336618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336619 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336618,G__336619) : tailrecursion.hoplon.span.call(null,G__336618,G__336619));
})();
var G__336530 = " (";
var G__336531 = (function (){var G__336620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336621 = "symbols";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336620,G__336621) : tailrecursion.hoplon.span.call(null,G__336620,G__336621));
})();
var G__336532 = " (";
var G__336533 = (function (){var G__336622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336623 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336622,G__336623) : tailrecursion.hoplon.span.call(null,G__336622,G__336623));
})();
var G__336534 = " ";
var G__336535 = (function (){var G__336624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336625 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336624,G__336625) : tailrecursion.hoplon.span.call(null,G__336624,G__336625));
})();
var G__336536 = ")))\n            (";
var G__336537 = (function (){var G__336626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336627 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336626,G__336627) : tailrecursion.hoplon.span.call(null,G__336626,G__336627));
})();
var G__336538 = " (";
var G__336539 = (function (){var G__336628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336629 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336628,G__336629) : tailrecursion.hoplon.span.call(null,G__336628,G__336629));
})();
var G__336540 = (function (){var G__336630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336631 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336630,G__336631) : tailrecursion.hoplon.span.call(null,G__336630,G__336631));
})();
var G__336541 = " ";
var G__336542 = (function (){var G__336632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336633 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336632,G__336633) : tailrecursion.hoplon.span.call(null,G__336632,G__336633));
})();
var G__336543 = ") (";
var G__336544 = (function (){var G__336634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336635 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336634,G__336635) : tailrecursion.hoplon.span.call(null,G__336634,G__336635));
})();
var G__336545 = " ";
var G__336546 = (function (){var G__336636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336637 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336636,G__336637) : tailrecursion.hoplon.span.call(null,G__336636,G__336637));
})();
var G__336547 = "))\n          ";
var G__336548 = (function (){var G__336638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336639 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336638,G__336639) : tailrecursion.hoplon.span.call(null,G__336638,G__336639));
})();
var G__336549 = " (";
var G__336550 = (function (){var G__336640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336641 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336640,G__336641) : tailrecursion.hoplon.span.call(null,G__336640,G__336641));
})();
var G__336551 = " (";
var G__336552 = (function (){var G__336642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336643 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336642,G__336643) : tailrecursion.hoplon.span.call(null,G__336642,G__336643));
})();
var G__336553 = (function (){var G__336644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336645 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336644,G__336645) : tailrecursion.hoplon.span.call(null,G__336644,G__336645));
})();
var G__336554 = " ";
var G__336555 = (function (){var G__336646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__336647 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336646,G__336647) : tailrecursion.hoplon.span.call(null,G__336646,G__336647));
})();
var G__336556 = ") (";
var G__336557 = (function (){var G__336648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336649 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336648,G__336649) : tailrecursion.hoplon.span.call(null,G__336648,G__336649));
})();
var G__336558 = " ";
var G__336559 = (function (){var G__336650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336651 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336650,G__336651) : tailrecursion.hoplon.span.call(null,G__336650,G__336651));
})();
var G__336560 = ")))))\n\n(";
var G__336561 = (function (){var G__336652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__336653 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336652,G__336653) : tailrecursion.hoplon.span.call(null,G__336652,G__336653));
})();
var G__336562 = (function (){var G__336654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336655 = "encode-symbol";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336654,G__336655) : tailrecursion.hoplon.span.call(null,G__336654,G__336655));
})();
var G__336563 = " [";
var G__336564 = (function (){var G__336656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336657 = "symbol ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336656,G__336657) : tailrecursion.hoplon.span.call(null,G__336656,G__336657));
})();
var G__336565 = (function (){var G__336658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336659 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336658,G__336659) : tailrecursion.hoplon.span.call(null,G__336658,G__336659));
})();
var G__336566 = "]\n  (";
var G__336567 = (function (){var G__336660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__336661 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336660,G__336661) : tailrecursion.hoplon.span.call(null,G__336660,G__336661));
})();
var G__336568 = "(";
var G__336569 = (function (){var G__336662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336663 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336662,G__336663) : tailrecursion.hoplon.span.call(null,G__336662,G__336663));
})();
var G__336570 = " (";
var G__336571 = (function (){var G__336664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336665 = "symbols";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336664,G__336665) : tailrecursion.hoplon.span.call(null,G__336664,G__336665));
})();
var G__336572 = " ";
var G__336573 = (function (){var G__336666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336667 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336666,G__336667) : tailrecursion.hoplon.span.call(null,G__336666,G__336667));
})();
var G__336574 = "))\n      (";
var G__336575 = (function (){var G__336668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336669 = "encode-symbol*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336668,G__336669) : tailrecursion.hoplon.span.call(null,G__336668,G__336669));
})();
var G__336576 = " ";
var G__336577 = (function (){var G__336670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336671 = "symbol ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336670,G__336671) : tailrecursion.hoplon.span.call(null,G__336670,G__336671));
})();
var G__336578 = (function (){var G__336672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336673 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336672,G__336673) : tailrecursion.hoplon.span.call(null,G__336672,G__336673));
})();
var G__336579 = ")\n      (";
var G__336580 = (function (){var G__336674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336675 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336674,G__336675) : tailrecursion.hoplon.span.call(null,G__336674,G__336675));
})();
var G__336581 = "\n        (";
var G__336582 = (function (){var G__336676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336677 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336676,G__336677) : tailrecursion.hoplon.span.call(null,G__336676,G__336677));
})();
var G__336583 = " \n          (";
var G__336584 = (function (){var G__336678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336679 = "str ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336678,G__336679) : tailrecursion.hoplon.span.call(null,G__336678,G__336679));
})();
var G__336585 = (function (){var G__336680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__336681 = "\"The symbol: \"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336680,G__336681) : tailrecursion.hoplon.span.call(null,G__336680,G__336681));
})();
var G__336586 = " ";
var G__336587 = (function (){var G__336682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336683 = "symbol ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336682,G__336683) : tailrecursion.hoplon.span.call(null,G__336682,G__336683));
})();
var G__336588 = (function (){var G__336684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__336685 = "\"was not recognized. Please remove it and try again.\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336684,G__336685) : tailrecursion.hoplon.span.call(null,G__336684,G__336685));
})();
var G__336589 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$88 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$88(G__336502,G__336503,G__336504,G__336505,G__336506,G__336507,G__336508,G__336509,G__336510,G__336511,G__336512,G__336513,G__336514,G__336515,G__336516,G__336517,G__336518,G__336519,G__336520,G__336521,G__336522,G__336523,G__336524,G__336525,G__336526,G__336527,G__336528,G__336529,G__336530,G__336531,G__336532,G__336533,G__336534,G__336535,G__336536,G__336537,G__336538,G__336539,G__336540,G__336541,G__336542,G__336543,G__336544,G__336545,G__336546,G__336547,G__336548,G__336549,G__336550,G__336551,G__336552,G__336553,G__336554,G__336555,G__336556,G__336557,G__336558,G__336559,G__336560,G__336561,G__336562,G__336563,G__336564,G__336565,G__336566,G__336567,G__336568,G__336569,G__336570,G__336571,G__336572,G__336573,G__336574,G__336575,G__336576,G__336577,G__336578,G__336579,G__336580,G__336581,G__336582,G__336583,G__336584,G__336585,G__336586,G__336587,G__336588,G__336589) : tailrecursion.hoplon.pre.call(null,G__336502,G__336503,G__336504,G__336505,G__336506,G__336507,G__336508,G__336509,G__336510,G__336511,G__336512,G__336513,G__336514,G__336515,G__336516,G__336517,G__336518,G__336519,G__336520,G__336521,G__336522,G__336523,G__336524,G__336525,G__336526,G__336527,G__336528,G__336529,G__336530,G__336531,G__336532,G__336533,G__336534,G__336535,G__336536,G__336537,G__336538,G__336539,G__336540,G__336541,G__336542,G__336543,G__336544,G__336545,G__336546,G__336547,G__336548,G__336549,G__336550,G__336551,G__336552,G__336553,G__336554,G__336555,G__336556,G__336557,G__336558,G__336559,G__336560,G__336561,G__336562,G__336563,G__336564,G__336565,G__336566,G__336567,G__336568,G__336569,G__336570,G__336571,G__336572,G__336573,G__336574,G__336575,G__336576,G__336577,G__336578,G__336579,G__336580,G__336581,G__336582,G__336583,G__336584,G__336585,G__336586,G__336587,G__336588,G__336589));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__336500,G__336501) : tailrecursion.hoplon.div.call(null,G__336500,G__336501));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__336499) : tailrecursion.hoplon.div.call(null,G__336499));
})(),(function (){var G__336686 = cljs.core.PersistentArrayMap.EMPTY;
var G__336687 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The function ",(function (){var G__336688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"throw"], null);
var G__336689 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336688,G__336689) : tailrecursion.hoplon.markdown.code_node.call(null,G__336688,G__336689));
})()," is very important. As you can see, this function does not simply return a string value if the symbol is not in the tree. It throws an exception, which means that it stops all further computation that the function would call and sends this message directly to the top. So any function calling ",(function (){var G__336690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"encode-symbol"], null);
var G__336691 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336690,G__336691) : tailrecursion.hoplon.markdown.code_node.call(null,G__336690,G__336691));
})()," is notified immediately when an error occurs, and you can see the benefit therein. Note that the function ",(function (){var G__336692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"str"], null);
var G__336693 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336692,G__336693) : tailrecursion.hoplon.markdown.code_node.call(null,G__336692,G__336693));
})()," takes any number of arguments and places them in a string in the same order. Test it out using variables and whatnot. It",(function (){var G__336694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__336695 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__336694,G__336695) : tailrecursion.hoplon.markdown.simple_node.call(null,G__336694,G__336695));
})(),"s a very useful function."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__336686,G__336687) : tailrecursion.hoplon.markdown.para_node.call(null,G__336686,G__336687));
})(),(function (){var G__336696 = cljs.core.PersistentArrayMap.EMPTY;
var G__336697 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["How many arguments does this call to ",(function (){var G__336698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"str"], null);
var G__336699 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336698,G__336699) : tailrecursion.hoplon.markdown.code_node.call(null,G__336698,G__336699));
})()," have?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__336696,G__336697) : tailrecursion.hoplon.markdown.para_node.call(null,G__336696,G__336697));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336312;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336311;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336310;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336309;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_336700 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336701 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_336702 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336703 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__336704 = cljs.core.PersistentArrayMap.EMPTY;
var G__336705 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__336706 = cljs.core.PersistentArrayMap.EMPTY;
var G__336707 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_336708 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336709 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__336710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__336711 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The symbol: "], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__336710,G__336711) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__336710,G__336711));
})()," is the first, ",(function (){var G__336712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"symbol"], null);
var G__336713 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336712,G__336713) : tailrecursion.hoplon.markdown.code_node.call(null,G__336712,G__336713));
})()," is the second, and the remaining string is the third."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336709;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336708;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__336706,G__336707) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__336706,G__336707));
})()], null);
return (tailrecursion.hoplon.markdown.ordered_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.ordered_list_node.cljs$core$IFn$_invoke$arity$2(G__336704,G__336705) : tailrecursion.hoplon.markdown.ordered_list_node.call(null,G__336704,G__336705));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336703;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336702;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336701;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336700;
}})()], 0))], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_336714 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336715 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_336716 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336717 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__336718 = cljs.core.PersistentArrayMap.EMPTY;
var G__336719 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following procedure takes as its argument a list of symbol-frequency pairs (where no symbol appears in more than one pair) and generates a Huffman encoding tree according to the Huffman algorithm."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__336718,G__336719) : tailrecursion.hoplon.markdown.para_node.call(null,G__336718,G__336719));
})(),(function (){var G__336747 = (function (){var G__336748 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__336749 = (function (){var G__336750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__336751 = "(";
var G__336752 = (function (){var G__336763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__336764 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336763,G__336764) : tailrecursion.hoplon.span.call(null,G__336763,G__336764));
})();
var G__336753 = (function (){var G__336765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336766 = "generate-huffman-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336765,G__336766) : tailrecursion.hoplon.span.call(null,G__336765,G__336766));
})();
var G__336754 = " [";
var G__336755 = (function (){var G__336767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336768 = "pairs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336767,G__336768) : tailrecursion.hoplon.span.call(null,G__336767,G__336768));
})();
var G__336756 = "]\n  (";
var G__336757 = (function (){var G__336769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336770 = "successive-merge";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336769,G__336770) : tailrecursion.hoplon.span.call(null,G__336769,G__336770));
})();
var G__336758 = " (";
var G__336759 = (function (){var G__336771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336772 = "make-leaf-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336771,G__336772) : tailrecursion.hoplon.span.call(null,G__336771,G__336772));
})();
var G__336760 = " ";
var G__336761 = (function (){var G__336773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336774 = "pairs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336773,G__336774) : tailrecursion.hoplon.span.call(null,G__336773,G__336774));
})();
var G__336762 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__336750,G__336751,G__336752,G__336753,G__336754,G__336755,G__336756,G__336757,G__336758,G__336759,G__336760,G__336761,G__336762) : tailrecursion.hoplon.pre.call(null,G__336750,G__336751,G__336752,G__336753,G__336754,G__336755,G__336756,G__336757,G__336758,G__336759,G__336760,G__336761,G__336762));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__336748,G__336749) : tailrecursion.hoplon.div.call(null,G__336748,G__336749));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__336747) : tailrecursion.hoplon.div.call(null,G__336747));
})(),(function (){var G__336775 = cljs.core.PersistentArrayMap.EMPTY;
var G__336776 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__336777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-leaf-set"], null);
var G__336778 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336777,G__336778) : tailrecursion.hoplon.markdown.code_node.call(null,G__336777,G__336778));
})()," is the procedure given above that transforms the list of pairs into an ordered set of leaves. ",(function (){var G__336779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"successive-merge"], null);
var G__336780 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336779,G__336780) : tailrecursion.hoplon.markdown.code_node.call(null,G__336779,G__336780));
})()," is the procedure you must write, using ",(function (){var G__336781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-code-tree"], null);
var G__336782 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__336781,G__336782) : tailrecursion.hoplon.markdown.code_node.call(null,G__336781,G__336782));
})()," to successively merge the smallest-weight elements of the set until there is only one element left, which is hte desired Huffman tree. (This procedure is slightly tricky, but not really complicated. If you find yourself designing a complex procedure, then you are almost certainly doing something wrong. You can take advantage of the fact that we are using an ordered set representation.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__336775,G__336776) : tailrecursion.hoplon.markdown.para_node.call(null,G__336775,G__336776));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336717;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336716;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336715;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336714;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_336783 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336784 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_336785 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_336786 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__336907 = (function (){var G__336908 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__336909 = (function (){var G__336910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__336911 = "(";
var G__336912 = (function (){var G__336968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__336969 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336968,G__336969) : tailrecursion.hoplon.span.call(null,G__336968,G__336969));
})();
var G__336913 = (function (){var G__336970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336971 = "successive-merge";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336970,G__336971) : tailrecursion.hoplon.span.call(null,G__336970,G__336971));
})();
var G__336914 = " [";
var G__336915 = (function (){var G__336972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336973 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336972,G__336973) : tailrecursion.hoplon.span.call(null,G__336972,G__336973));
})();
var G__336916 = "]\n  (";
var G__336917 = (function (){var G__336974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__336975 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336974,G__336975) : tailrecursion.hoplon.span.call(null,G__336974,G__336975));
})();
var G__336918 = "[";
var G__336919 = (function (){var G__336976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336977 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336976,G__336977) : tailrecursion.hoplon.span.call(null,G__336976,G__336977));
})();
var G__336920 = " ";
var G__336921 = (function (){var G__336978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336979 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336978,G__336979) : tailrecursion.hoplon.span.call(null,G__336978,G__336979));
})();
var G__336922 = "]\n    (";
var G__336923 = (function (){var G__336980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__336981 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336980,G__336981) : tailrecursion.hoplon.span.call(null,G__336980,G__336981));
})();
var G__336924 = "[";
var G__336925 = (function (){var G__336982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336983 = "right ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336982,G__336983) : tailrecursion.hoplon.span.call(null,G__336982,G__336983));
})();
var G__336926 = "(";
var G__336927 = (function (){var G__336984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__336985 = "last ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336984,G__336985) : tailrecursion.hoplon.span.call(null,G__336984,G__336985));
})();
var G__336928 = (function (){var G__336986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336987 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336986,G__336987) : tailrecursion.hoplon.span.call(null,G__336986,G__336987));
})();
var G__336929 = ")\n          ";
var G__336930 = (function (){var G__336988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336989 = "not-r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336988,G__336989) : tailrecursion.hoplon.span.call(null,G__336988,G__336989));
})();
var G__336931 = " (";
var G__336932 = (function (){var G__336990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336991 = "drop-last";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336990,G__336991) : tailrecursion.hoplon.span.call(null,G__336990,G__336991));
})();
var G__336933 = " ";
var G__336934 = (function (){var G__336992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336993 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336992,G__336993) : tailrecursion.hoplon.span.call(null,G__336992,G__336993));
})();
var G__336935 = ")]\n      (";
var G__336936 = (function (){var G__336994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__336995 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336994,G__336995) : tailrecursion.hoplon.span.call(null,G__336994,G__336995));
})();
var G__336937 = "(";
var G__336938 = (function (){var G__336996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__336997 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336996,G__336997) : tailrecursion.hoplon.span.call(null,G__336996,G__336997));
})();
var G__336939 = " ";
var G__336940 = (function (){var G__336998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__336999 = "not-r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__336998,G__336999) : tailrecursion.hoplon.span.call(null,G__336998,G__336999));
})();
var G__336941 = ")\n          ";
var G__336942 = (function (){var G__337000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__337001 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337000,G__337001) : tailrecursion.hoplon.span.call(null,G__337000,G__337001));
})();
var G__336943 = "\n          (";
var G__336944 = (function (){var G__337002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__337003 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337002,G__337003) : tailrecursion.hoplon.span.call(null,G__337002,G__337003));
})();
var G__336945 = "[";
var G__336946 = (function (){var G__337004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__337005 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337004,G__337005) : tailrecursion.hoplon.span.call(null,G__337004,G__337005));
})();
var G__336947 = "  (";
var G__336948 = (function (){var G__337006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__337007 = "last ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337006,G__337007) : tailrecursion.hoplon.span.call(null,G__337006,G__337007));
})();
var G__336949 = (function (){var G__337008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__337009 = "not-r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337008,G__337009) : tailrecursion.hoplon.span.call(null,G__337008,G__337009));
})();
var G__336950 = ")\n                ";
var G__336951 = (function (){var G__337010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__337011 = "others";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337010,G__337011) : tailrecursion.hoplon.span.call(null,G__337010,G__337011));
})();
var G__336952 = " (";
var G__336953 = (function (){var G__337012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__337013 = "drop-last";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337012,G__337013) : tailrecursion.hoplon.span.call(null,G__337012,G__337013));
})();
var G__336954 = " ";
var G__336955 = (function (){var G__337014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__337015 = "not-r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337014,G__337015) : tailrecursion.hoplon.span.call(null,G__337014,G__337015));
})();
var G__336956 = ")]\n            (";
var G__336957 = (function (){var G__337016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__337017 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337016,G__337017) : tailrecursion.hoplon.span.call(null,G__337016,G__337017));
})();
var G__336958 = " \n              (";
var G__336959 = (function (){var G__337018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__337019 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337018,G__337019) : tailrecursion.hoplon.span.call(null,G__337018,G__337019));
})();
var G__336960 = "\n                (";
var G__336961 = (function (){var G__337020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__337021 = "make-code-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337020,G__337021) : tailrecursion.hoplon.span.call(null,G__337020,G__337021));
})();
var G__336962 = " ";
var G__336963 = (function (){var G__337022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__337023 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337022,G__337023) : tailrecursion.hoplon.span.call(null,G__337022,G__337023));
})();
var G__336964 = (function (){var G__337024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__337025 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337024,G__337025) : tailrecursion.hoplon.span.call(null,G__337024,G__337025));
})();
var G__336965 = ")\n                ";
var G__336966 = (function (){var G__337026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__337027 = "others";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__337026,G__337027) : tailrecursion.hoplon.span.call(null,G__337026,G__337027));
})();
var G__336967 = ")))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__336910,G__336911,G__336912,G__336913,G__336914,G__336915,G__336916,G__336917,G__336918,G__336919,G__336920,G__336921,G__336922,G__336923,G__336924,G__336925,G__336926,G__336927,G__336928,G__336929,G__336930,G__336931,G__336932,G__336933,G__336934,G__336935,G__336936,G__336937,G__336938,G__336939,G__336940,G__336941,G__336942,G__336943,G__336944,G__336945,G__336946,G__336947,G__336948,G__336949,G__336950,G__336951,G__336952,G__336953,G__336954,G__336955,G__336956,G__336957,G__336958,G__336959,G__336960,G__336961,G__336962,G__336963,G__336964,G__336965,G__336966,G__336967) : tailrecursion.hoplon.pre.call(null,G__336910,G__336911,G__336912,G__336913,G__336914,G__336915,G__336916,G__336917,G__336918,G__336919,G__336920,G__336921,G__336922,G__336923,G__336924,G__336925,G__336926,G__336927,G__336928,G__336929,G__336930,G__336931,G__336932,G__336933,G__336934,G__336935,G__336936,G__336937,G__336938,G__336939,G__336940,G__336941,G__336942,G__336943,G__336944,G__336945,G__336946,G__336947,G__336948,G__336949,G__336950,G__336951,G__336952,G__336953,G__336954,G__336955,G__336956,G__336957,G__336958,G__336959,G__336960,G__336961,G__336962,G__336963,G__336964,G__336965,G__336966,G__336967));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__336908,G__336909) : tailrecursion.hoplon.div.call(null,G__336908,G__336909));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__336907) : tailrecursion.hoplon.div.call(null,G__336907));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336786;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336785;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_336784;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_336783;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_337028 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337029 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_337030 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337031 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__337032 = cljs.core.PersistentArrayMap.EMPTY;
var G__337033 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following eight-symbol alphabet with associated relative frequencies was designed to efficiently encode the lyrics of 1950s rock songs. (Note that the ",(function (){var G__337034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__337035 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["symbols"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__337034,G__337035) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__337034,G__337035));
})()," of an ",(function (){var G__337036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__337037 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["alphabet"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__337036,G__337037) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__337036,G__337037));
})()," need not be individual letters.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337032,G__337033) : tailrecursion.hoplon.markdown.para_node.call(null,G__337032,G__337033));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337031;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337030;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337029;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337028;
}})(),"",(function (){var G__337038 = cljs.core.PersistentArrayMap.EMPTY;
var G__337039 = (function (){var G__337043 = cljs.core.PersistentArrayMap.EMPTY;
var G__337044 = (function (){var G__337048 = cljs.core.PersistentArrayMap.EMPTY;
var G__337049 = "A";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337048,G__337049) : tailrecursion.hoplon.td.call(null,G__337048,G__337049));
})();
var G__337045 = (function (){var G__337050 = cljs.core.PersistentArrayMap.EMPTY;
var G__337051 = "2";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337050,G__337051) : tailrecursion.hoplon.td.call(null,G__337050,G__337051));
})();
var G__337046 = (function (){var G__337052 = cljs.core.PersistentArrayMap.EMPTY;
var G__337053 = "NA";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337052,G__337053) : tailrecursion.hoplon.td.call(null,G__337052,G__337053));
})();
var G__337047 = (function (){var G__337054 = cljs.core.PersistentArrayMap.EMPTY;
var G__337055 = "16";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337054,G__337055) : tailrecursion.hoplon.td.call(null,G__337054,G__337055));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$5 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$5(G__337043,G__337044,G__337045,G__337046,G__337047) : tailrecursion.hoplon.tr.call(null,G__337043,G__337044,G__337045,G__337046,G__337047));
})();
var G__337040 = (function (){var G__337056 = cljs.core.PersistentArrayMap.EMPTY;
var G__337057 = (function (){var G__337061 = cljs.core.PersistentArrayMap.EMPTY;
var G__337062 = "BOOM";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337061,G__337062) : tailrecursion.hoplon.td.call(null,G__337061,G__337062));
})();
var G__337058 = (function (){var G__337063 = cljs.core.PersistentArrayMap.EMPTY;
var G__337064 = "1";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337063,G__337064) : tailrecursion.hoplon.td.call(null,G__337063,G__337064));
})();
var G__337059 = (function (){var G__337065 = cljs.core.PersistentArrayMap.EMPTY;
var G__337066 = "SHA";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337065,G__337066) : tailrecursion.hoplon.td.call(null,G__337065,G__337066));
})();
var G__337060 = (function (){var G__337067 = cljs.core.PersistentArrayMap.EMPTY;
var G__337068 = "3";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337067,G__337068) : tailrecursion.hoplon.td.call(null,G__337067,G__337068));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$5 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$5(G__337056,G__337057,G__337058,G__337059,G__337060) : tailrecursion.hoplon.tr.call(null,G__337056,G__337057,G__337058,G__337059,G__337060));
})();
var G__337041 = (function (){var G__337069 = cljs.core.PersistentArrayMap.EMPTY;
var G__337070 = (function (){var G__337074 = cljs.core.PersistentArrayMap.EMPTY;
var G__337075 = "GET";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337074,G__337075) : tailrecursion.hoplon.td.call(null,G__337074,G__337075));
})();
var G__337071 = (function (){var G__337076 = cljs.core.PersistentArrayMap.EMPTY;
var G__337077 = "2";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337076,G__337077) : tailrecursion.hoplon.td.call(null,G__337076,G__337077));
})();
var G__337072 = (function (){var G__337078 = cljs.core.PersistentArrayMap.EMPTY;
var G__337079 = "YIP";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337078,G__337079) : tailrecursion.hoplon.td.call(null,G__337078,G__337079));
})();
var G__337073 = (function (){var G__337080 = cljs.core.PersistentArrayMap.EMPTY;
var G__337081 = "9";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337080,G__337081) : tailrecursion.hoplon.td.call(null,G__337080,G__337081));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$5 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$5(G__337069,G__337070,G__337071,G__337072,G__337073) : tailrecursion.hoplon.tr.call(null,G__337069,G__337070,G__337071,G__337072,G__337073));
})();
var G__337042 = (function (){var G__337082 = cljs.core.PersistentArrayMap.EMPTY;
var G__337083 = (function (){var G__337087 = cljs.core.PersistentArrayMap.EMPTY;
var G__337088 = "JOB";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337087,G__337088) : tailrecursion.hoplon.td.call(null,G__337087,G__337088));
})();
var G__337084 = (function (){var G__337089 = cljs.core.PersistentArrayMap.EMPTY;
var G__337090 = "2";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337089,G__337090) : tailrecursion.hoplon.td.call(null,G__337089,G__337090));
})();
var G__337085 = (function (){var G__337091 = cljs.core.PersistentArrayMap.EMPTY;
var G__337092 = "WAH";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337091,G__337092) : tailrecursion.hoplon.td.call(null,G__337091,G__337092));
})();
var G__337086 = (function (){var G__337093 = cljs.core.PersistentArrayMap.EMPTY;
var G__337094 = "1";
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__337093,G__337094) : tailrecursion.hoplon.td.call(null,G__337093,G__337094));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$5 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$5(G__337082,G__337083,G__337084,G__337085,G__337086) : tailrecursion.hoplon.tr.call(null,G__337082,G__337083,G__337084,G__337085,G__337086));
})();
return (tailrecursion.hoplon.table.cljs$core$IFn$_invoke$arity$5 ? tailrecursion.hoplon.table.cljs$core$IFn$_invoke$arity$5(G__337038,G__337039,G__337040,G__337041,G__337042) : tailrecursion.hoplon.table.call(null,G__337038,G__337039,G__337040,G__337041,G__337042));
})(),"",(function (){var _STAR_references_STAR_337095 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337096 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_337097 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337098 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__337099 = cljs.core.PersistentArrayMap.EMPTY;
var G__337100 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Use ",(function (){var G__337101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"generate-huffman-tree"], null);
var G__337102 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__337101,G__337102) : tailrecursion.hoplon.markdown.code_node.call(null,G__337101,G__337102));
})()," (exercise 2.69) to generate a corresponding Huffman tree, and use ",(function (){var G__337103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"encode"], null);
var G__337104 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__337103,G__337104) : tailrecursion.hoplon.markdown.code_node.call(null,G__337103,G__337104));
})()," (exercise 2.68) to encode the following message:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337099,G__337100) : tailrecursion.hoplon.markdown.para_node.call(null,G__337099,G__337100));
})(),(function (){var G__337105 = cljs.core.PersistentArrayMap.EMPTY;
var G__337106 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Get a job"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337105,G__337106) : tailrecursion.hoplon.markdown.para_node.call(null,G__337105,G__337106));
})(),(function (){var G__337107 = cljs.core.PersistentArrayMap.EMPTY;
var G__337108 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sha na na na na na na na na"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337107,G__337108) : tailrecursion.hoplon.markdown.para_node.call(null,G__337107,G__337108));
})(),(function (){var G__337109 = cljs.core.PersistentArrayMap.EMPTY;
var G__337110 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Get a job"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337109,G__337110) : tailrecursion.hoplon.markdown.para_node.call(null,G__337109,G__337110));
})(),(function (){var G__337111 = cljs.core.PersistentArrayMap.EMPTY;
var G__337112 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sha na na na na na na na na"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337111,G__337112) : tailrecursion.hoplon.markdown.para_node.call(null,G__337111,G__337112));
})(),(function (){var G__337113 = cljs.core.PersistentArrayMap.EMPTY;
var G__337114 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Wah yip yip yip yip yip yip yip yip yip"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337113,G__337114) : tailrecursion.hoplon.markdown.para_node.call(null,G__337113,G__337114));
})(),(function (){var G__337115 = cljs.core.PersistentArrayMap.EMPTY;
var G__337116 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sha boom"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337115,G__337116) : tailrecursion.hoplon.markdown.para_node.call(null,G__337115,G__337116));
})(),(function (){var G__337117 = cljs.core.PersistentArrayMap.EMPTY;
var G__337118 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["How many bits are required for the encoding? What is the smallest number of bits that would be needed to encode this song if we used a fixed-length code for the eight-symbol alphabet?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337117,G__337118) : tailrecursion.hoplon.markdown.para_node.call(null,G__337117,G__337118));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337098;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337097;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337096;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337095;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_337119 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337120 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_337121 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337122 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__337123 = cljs.core.PersistentArrayMap.EMPTY;
var G__337124 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The encoding for this will depend on the order in which the elements are given to ",(function (){var G__337125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-leaf-set"], null);
var G__337126 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__337125,G__337126) : tailrecursion.hoplon.markdown.code_node.call(null,G__337125,G__337126));
})()," among other things. As an example, the version of ",(function (){var G__337127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"successive-merge"], null);
var G__337128 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__337127,G__337128) : tailrecursion.hoplon.markdown.code_node.call(null,G__337127,G__337128));
})()," we used in the previous exercise creates a tree with the ",(function (){var G__337129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__337130 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["smaller"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__337129,G__337130) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__337129,G__337130));
})()," weight on the right which will affect things, as we",(function (){var G__337131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__337132 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__337131,G__337132) : tailrecursion.hoplon.markdown.simple_node.call(null,G__337131,G__337132));
})(),"ll see. The key is all in the map. One acceptable code might be:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337123,G__337124) : tailrecursion.hoplon.markdown.para_node.call(null,G__337123,G__337124));
})(),(function (){var G__337133 = cljs.core.PersistentArrayMap.EMPTY;
var G__337134 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["00011000100010"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337133,G__337134) : tailrecursion.hoplon.markdown.para_node.call(null,G__337133,G__337134));
})(),(function (){var G__337135 = cljs.core.PersistentArrayMap.EMPTY;
var G__337136 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["000011111111"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337135,G__337136) : tailrecursion.hoplon.markdown.para_node.call(null,G__337135,G__337136));
})(),(function (){var G__337137 = cljs.core.PersistentArrayMap.EMPTY;
var G__337138 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["00011000100010"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337137,G__337138) : tailrecursion.hoplon.markdown.para_node.call(null,G__337137,G__337138));
})(),(function (){var G__337139 = cljs.core.PersistentArrayMap.EMPTY;
var G__337140 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["000011111111"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337139,G__337140) : tailrecursion.hoplon.markdown.para_node.call(null,G__337139,G__337140));
})(),(function (){var G__337141 = cljs.core.PersistentArrayMap.EMPTY;
var G__337142 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["00111010101010101010101"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337141,G__337142) : tailrecursion.hoplon.markdown.para_node.call(null,G__337141,G__337142));
})(),(function (){var G__337143 = cljs.core.PersistentArrayMap.EMPTY;
var G__337144 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["000000110"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337143,G__337144) : tailrecursion.hoplon.markdown.para_node.call(null,G__337143,G__337144));
})(),(function (){var G__337145 = cljs.core.PersistentArrayMap.EMPTY;
var G__337146 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["There are a total of 5 bits required for this encoding. We would need 3 bits if it were a fixed-length encdoding. The reason why we would need 3 bits is, \\(2^3=8\\) and there are 8 symbols."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337145,G__337146) : tailrecursion.hoplon.markdown.para_node.call(null,G__337145,G__337146));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337122;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337121;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337120;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337119;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_337147 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337148 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_337149 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337150 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__337151 = cljs.core.PersistentArrayMap.EMPTY;
var G__337152 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Suppose we have a Huffman tree for an alphabet of \\(n\\) symbols, and that the relative frequencies of the symbols are \\(1, 2, 4, ",(function (){var G__337153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__337154 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__337153,G__337154) : tailrecursion.hoplon.markdown.simple_node.call(null,G__337153,G__337154));
})(),", 2^{n-1}\\). Sketch the tree for \\(n=5\\); for \\(n=10\\). In such a tree (for general \\(n\\)) how many bits are required to encode the most frequent symbol? the least frequent?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337151,G__337152) : tailrecursion.hoplon.markdown.para_node.call(null,G__337151,G__337152));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337150;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337149;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337148;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337147;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_337155 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337156 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_337157 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337158 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__337159 = cljs.core.PersistentArrayMap.EMPTY;
var G__337160 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Due to some technical difficulties (read ",(function (){var G__337161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__337162 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I really want to get through this section already"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__337161,G__337162) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__337161,G__337162));
})(),") I wion",(function (){var G__337163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__337164 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__337163,G__337164) : tailrecursion.hoplon.markdown.simple_node.call(null,G__337163,G__337164));
})(),"t be including the drawings. If you would like them, please feel free to contact me and let me know!"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337159,G__337160) : tailrecursion.hoplon.markdown.para_node.call(null,G__337159,G__337160));
})(),(function (){var G__337165 = cljs.core.PersistentArrayMap.EMPTY;
var G__337166 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for the frequencies: the most frequent symbol will need only one bit. The reason for this is that the frequency of that symbol is greater than or equal to the sum of the frequencies of all the other symbols. So it will only be combined at the very end of the combination process."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337165,G__337166) : tailrecursion.hoplon.markdown.para_node.call(null,G__337165,G__337166));
})(),(function (){var G__337167 = cljs.core.PersistentArrayMap.EMPTY;
var G__337168 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Assuming that there are at least 2 elements in the tree, the least frequent symbol will require \\(n-1\\) bits to encode. The reason for this one is a bit more complicated, but at every step, the partial tree containing the least frequent symbol has the least weight, so it is combined. Since only two things can be combined at a time, we see that the partial tree containing the least frequent element must be combined with a leaf at every stage. So we can reduce our problem to the problem of ",(function (){var G__337169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__337170 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["how many leaves are there that can be combined with this leaf containing the least frequent symbol?"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__337169,G__337170) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__337169,G__337170));
})()," The answer to that is clearly \\(n-1\\) because there are \\(n\\) leaves."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337167,G__337168) : tailrecursion.hoplon.markdown.para_node.call(null,G__337167,G__337168));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337158;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337157;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337156;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337155;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_337171 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337172 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_337173 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337174 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__337175 = cljs.core.PersistentArrayMap.EMPTY;
var G__337176 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the encoding procedure that you designed in exercise 2.68. What is the order of growth in the number of steps needed to encode a symbol? Be sure to include the number of steps needed to search the symbol list at each node encountered. To answer this question in general is difficult. Consider the special case where the relative frequencies of the \\(n\\) symbols are as described in exercise 2.71, and give the order of growth (as a function of \\(n\\)) of the number of steps needed to encode the most frequent and least frequent symbols in the alphabet."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337175,G__337176) : tailrecursion.hoplon.markdown.para_node.call(null,G__337175,G__337176));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337174;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337173;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337172;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337171;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_337177 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337178 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_337179 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_337180 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__337181 = cljs.core.PersistentArrayMap.EMPTY;
var G__337182 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We first note that the most expensive operations in this procedure is the search through the list at each level, and the ",(function (){var G__337183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"reverse"], null);
var G__337184 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__337183,G__337184) : tailrecursion.hoplon.markdown.code_node.call(null,G__337183,G__337184));
})()," at the end. The ",(function (){var G__337185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"reverse"], null);
var G__337186 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__337185,G__337186) : tailrecursion.hoplon.markdown.code_node.call(null,G__337185,G__337186));
})()," is \\(\\Theta(m)\\) where \\(m\\) is the length of the code, and the search is \\(\\Theta(k)\\) where \\(k\\) is the length of the left branch at the current stage."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337181,G__337182) : tailrecursion.hoplon.markdown.para_node.call(null,G__337181,G__337182));
})(),(function (){var G__337187 = cljs.core.PersistentArrayMap.EMPTY;
var G__337188 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since our sets are ordered by frequency (with the most frequent in front), and the most frequent symbol is encoded as a single bit each time (due to the distribution given in exercise 2.71), we know that the very first left branch will be the leaf containing the most frequent symbol. Also, since the code is only a single bit, the ",(function (){var G__337189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"reverse"], null);
var G__337190 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__337189,G__337190) : tailrecursion.hoplon.markdown.code_node.call(null,G__337189,G__337190));
})()," procedure can be done in constant time as well. Hence we can encode the most frequent symbol in constant time, so \\(\\Theta(1)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337187,G__337188) : tailrecursion.hoplon.markdown.para_node.call(null,G__337187,G__337188));
})(),(function (){var G__337191 = cljs.core.PersistentArrayMap.EMPTY;
var G__337192 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To encode the least fequent symbol, we would have to traverse the lists all the way down to the end, but each time the left branch has only one element in it, so the traversing would be \\(\\Theta(1)+\\Theta(1)+",(function (){var G__337193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__337194 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__337193,G__337194) : tailrecursion.hoplon.markdown.simple_node.call(null,G__337193,G__337194));
})(),"+\\Theta(1)\\). The length of the code will be the number of symbols in the list (i.e. \\(n\\)). So our order of growth should be"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337191,G__337192) : tailrecursion.hoplon.markdown.para_node.call(null,G__337191,G__337192));
})(),(function (){var G__337195 = cljs.core.PersistentArrayMap.EMPTY;
var G__337196 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} &\\Theta(n)+\\underbrace{\\Theta(1)+\\Theta(1)+",(function (){var G__337197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__337198 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__337197,G__337198) : tailrecursion.hoplon.markdown.simple_node.call(null,G__337197,G__337198));
})(),"+\\Theta(1)}_{n-1\\text{ times}} \\\\=&\\Theta(n) \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__337195,G__337196) : tailrecursion.hoplon.markdown.para_node.call(null,G__337195,G__337196));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337180;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337179;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_337178;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_337177;
}})()], 0))], 0))], 0));
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$44 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$44(G__319869,G__319870,G__319871,G__319872,G__319873,G__319874,G__319875,G__319876,G__319877,G__319878,G__319879,G__319880,G__319881,G__319882,G__319883,G__319884,G__319885,G__319886,G__319887,G__319888,G__319889,G__319890,G__319891,G__319892,G__319893,G__319894,G__319895,G__319896,G__319897,G__319898,G__319899,G__319900,G__319901,G__319902,G__319903,G__319904,G__319905,G__319906,G__319907,G__319908,G__319909,G__319910,G__319911,G__319912) : tailrecursion.hoplon.div.call(null,G__319869,G__319870,G__319871,G__319872,G__319873,G__319874,G__319875,G__319876,G__319877,G__319878,G__319879,G__319880,G__319881,G__319882,G__319883,G__319884,G__319885,G__319886,G__319887,G__319888,G__319889,G__319890,G__319891,G__319892,G__319893,G__319894,G__319895,G__319896,G__319897,G__319898,G__319899,G__319900,G__319901,G__319902,G__319903,G__319904,G__319905,G__319906,G__319907,G__319908,G__319909,G__319910,G__319911,G__319912));
};
var book$sicp$texts$ch2sect3$content = function (var_args){
var args__8082__auto__ = null;
if (arguments.length > 0) {
var G__337199__i = 0, G__337199__a = new Array(arguments.length -  0);
while (G__337199__i < G__337199__a.length) {G__337199__a[G__337199__i] = arguments[G__337199__i + 0]; ++G__337199__i;}
  args__8082__auto__ = new cljs.core.IndexedSeq(G__337199__a,0);
} 
return book$sicp$texts$ch2sect3$content__delegate.call(this,args__8082__auto__);};
book$sicp$texts$ch2sect3$content.cljs$lang$maxFixedArity = 0;
book$sicp$texts$ch2sect3$content.cljs$lang$applyTo = (function (arglist__337200){
var args__8082__auto__ = cljs.core.seq(arglist__337200);
return book$sicp$texts$ch2sect3$content__delegate(args__8082__auto__);
});
book$sicp$texts$ch2sect3$content.cljs$core$IFn$_invoke$arity$variadic = book$sicp$texts$ch2sect3$content__delegate;
return book$sicp$texts$ch2sect3$content;
})()
;

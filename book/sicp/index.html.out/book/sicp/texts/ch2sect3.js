// Compiled by ClojureScript 1.7.48 {:static-fns true, :optimize-constants true}
goog.provide('book.sicp.texts.ch2sect3');
goog.require('cljs.core');
goog.require('tailrecursion.hoplon.markdown');
goog.require('book.sicp.book_data');
goog.require('tailrecursion.hoplon');
goog.require('tailrecursion.javelin');
/**
 * @param {...*} var_args
 */
book.sicp.texts.ch2sect3.content = (function() { 
var book$sicp$texts$ch2sect3$content__delegate = function (args__8262__auto__){
var vec__288685 = tailrecursion.hoplon.parse_args(args__8262__auto__);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__288685,(0),null);
var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__288685,(1),null);
var G__288686 = cljs.core.PersistentArrayMap.EMPTY;
var G__288687 = book.sicp.book_data.sect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Symbolic Data"], null),(function (){var _STAR_references_STAR_288714 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288715 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288716 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288717 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288718 = cljs.core.PersistentArrayMap.EMPTY;
var G__288719 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["All the compound data objects we have used so far were constructed ultimately from numbers. In this section we extend the representational capability of our language by introducing the ability to work with arbitrary symbols as data."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288718,G__288719) : tailrecursion.hoplon.markdown.para_node.call(null,G__288718,G__288719));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288717;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288716;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288715;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288714;
}})()], 0));
var G__288688 = "";
var G__288689 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Quotation"], null),(function (){var _STAR_references_STAR_288720 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288721 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288722 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288723 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288724 = cljs.core.PersistentArrayMap.EMPTY;
var G__288725 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If we can form compound data using symbols, we can have lists such as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288724,G__288725) : tailrecursion.hoplon.markdown.para_node.call(null,G__288724,G__288725));
})(),(function (){var G__288798 = (function (){var G__288799 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__288800 = (function (){var G__288801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__288802 = "(";
var G__288803 = (function (){var G__288837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288838 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288837,G__288838) : tailrecursion.hoplon.span.call(null,G__288837,G__288838));
})();
var G__288804 = " ";
var G__288805 = (function (){var G__288839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288840 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288839,G__288840) : tailrecursion.hoplon.span.call(null,G__288839,G__288840));
})();
var G__288806 = " ";
var G__288807 = (function (){var G__288841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288842 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288841,G__288842) : tailrecursion.hoplon.span.call(null,G__288841,G__288842));
})();
var G__288808 = " ";
var G__288809 = (function (){var G__288843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288844 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288843,G__288844) : tailrecursion.hoplon.span.call(null,G__288843,G__288844));
})();
var G__288810 = ")\n(";
var G__288811 = (function (){var G__288845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288846 = "12";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288845,G__288846) : tailrecursion.hoplon.span.call(null,G__288845,G__288846));
})();
var G__288812 = " ";
var G__288813 = (function (){var G__288847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288848 = "45";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288847,G__288848) : tailrecursion.hoplon.span.call(null,G__288847,G__288848));
})();
var G__288814 = " ";
var G__288815 = (function (){var G__288849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288850 = "17";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288849,G__288850) : tailrecursion.hoplon.span.call(null,G__288849,G__288850));
})();
var G__288816 = ")\n((";
var G__288817 = (function (){var G__288851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288852 = "Norah";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288851,G__288852) : tailrecursion.hoplon.span.call(null,G__288851,G__288852));
})();
var G__288818 = " ";
var G__288819 = (function (){var G__288853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288854 = "12";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288853,G__288854) : tailrecursion.hoplon.span.call(null,G__288853,G__288854));
})();
var G__288820 = ") (";
var G__288821 = (function (){var G__288855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288856 = "Molly";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288855,G__288856) : tailrecursion.hoplon.span.call(null,G__288855,G__288856));
})();
var G__288822 = " ";
var G__288823 = (function (){var G__288857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288858 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288857,G__288858) : tailrecursion.hoplon.span.call(null,G__288857,G__288858));
})();
var G__288824 = ") (";
var G__288825 = (function (){var G__288859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288860 = "Anna";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288859,G__288860) : tailrecursion.hoplon.span.call(null,G__288859,G__288860));
})();
var G__288826 = " ";
var G__288827 = (function (){var G__288861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288862 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288861,G__288862) : tailrecursion.hoplon.span.call(null,G__288861,G__288862));
})();
var G__288828 = ") (";
var G__288829 = (function (){var G__288863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288864 = "Lauren";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288863,G__288864) : tailrecursion.hoplon.span.call(null,G__288863,G__288864));
})();
var G__288830 = " ";
var G__288831 = (function (){var G__288865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288866 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288865,G__288866) : tailrecursion.hoplon.span.call(null,G__288865,G__288866));
})();
var G__288832 = ") (";
var G__288833 = (function (){var G__288867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288868 = "Charlotte";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288867,G__288868) : tailrecursion.hoplon.span.call(null,G__288867,G__288868));
})();
var G__288834 = " ";
var G__288835 = (function (){var G__288869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288870 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288869,G__288870) : tailrecursion.hoplon.span.call(null,G__288869,G__288870));
})();
var G__288836 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__288801,G__288802,G__288803,G__288804,G__288805,G__288806,G__288807,G__288808,G__288809,G__288810,G__288811,G__288812,G__288813,G__288814,G__288815,G__288816,G__288817,G__288818,G__288819,G__288820,G__288821,G__288822,G__288823,G__288824,G__288825,G__288826,G__288827,G__288828,G__288829,G__288830,G__288831,G__288832,G__288833,G__288834,G__288835,G__288836) : tailrecursion.hoplon.pre.call(null,G__288801,G__288802,G__288803,G__288804,G__288805,G__288806,G__288807,G__288808,G__288809,G__288810,G__288811,G__288812,G__288813,G__288814,G__288815,G__288816,G__288817,G__288818,G__288819,G__288820,G__288821,G__288822,G__288823,G__288824,G__288825,G__288826,G__288827,G__288828,G__288829,G__288830,G__288831,G__288832,G__288833,G__288834,G__288835,G__288836));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__288799,G__288800) : tailrecursion.hoplon.div.call(null,G__288799,G__288800));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__288798) : tailrecursion.hoplon.div.call(null,G__288798));
})(),(function (){var G__288871 = cljs.core.PersistentArrayMap.EMPTY;
var G__288872 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lists containing symbols can look just like the exressions of our language:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288871,G__288872) : tailrecursion.hoplon.markdown.para_node.call(null,G__288871,G__288872));
})(),(function (){var G__288955 = (function (){var G__288956 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__288957 = (function (){var G__288958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__288959 = "(";
var G__288960 = (function (){var G__288996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288997 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288996,G__288997) : tailrecursion.hoplon.span.call(null,G__288996,G__288997));
})();
var G__288961 = "(";
var G__288962 = (function (){var G__288998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288999 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288998,G__288999) : tailrecursion.hoplon.span.call(null,G__288998,G__288999));
})();
var G__288963 = (function (){var G__289000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289001 = "23";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289000,G__289001) : tailrecursion.hoplon.span.call(null,G__289000,G__289001));
})();
var G__288964 = " ";
var G__288965 = (function (){var G__289002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289003 = "45";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289002,G__289003) : tailrecursion.hoplon.span.call(null,G__289002,G__289003));
})();
var G__288966 = ") (";
var G__288967 = (function (){var G__289004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289005 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289004,G__289005) : tailrecursion.hoplon.span.call(null,G__289004,G__289005));
})();
var G__288968 = (function (){var G__289006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289007 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289006,G__289007) : tailrecursion.hoplon.span.call(null,G__289006,G__289007));
})();
var G__288969 = " ";
var G__288970 = (function (){var G__289008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289009 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289008,G__289009) : tailrecursion.hoplon.span.call(null,G__289008,G__289009));
})();
var G__288971 = "))\n(";
var G__288972 = (function (){var G__289010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289011 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289010,G__289011) : tailrecursion.hoplon.span.call(null,G__289010,G__289011));
})();
var G__288973 = (function (){var G__289012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289013 = "fact";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289012,G__289013) : tailrecursion.hoplon.span.call(null,G__289012,G__289013));
})();
var G__288974 = " [";
var G__288975 = (function (){var G__289014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289015 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289014,G__289015) : tailrecursion.hoplon.span.call(null,G__289014,G__289015));
})();
var G__288976 = "] (";
var G__288977 = (function (){var G__289016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289017 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289016,G__289017) : tailrecursion.hoplon.span.call(null,G__289016,G__289017));
})();
var G__288978 = "(";
var G__288979 = (function (){var G__289018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289019 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289018,G__289019) : tailrecursion.hoplon.span.call(null,G__289018,G__289019));
})();
var G__288980 = (function (){var G__289020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289021 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289020,G__289021) : tailrecursion.hoplon.span.call(null,G__289020,G__289021));
})();
var G__288981 = " ";
var G__288982 = (function (){var G__289022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289023 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289022,G__289023) : tailrecursion.hoplon.span.call(null,G__289022,G__289023));
})();
var G__288983 = ") ";
var G__288984 = (function (){var G__289024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289025 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289024,G__289025) : tailrecursion.hoplon.span.call(null,G__289024,G__289025));
})();
var G__288985 = " (";
var G__288986 = (function (){var G__289026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289027 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289026,G__289027) : tailrecursion.hoplon.span.call(null,G__289026,G__289027));
})();
var G__288987 = (function (){var G__289028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289029 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289028,G__289029) : tailrecursion.hoplon.span.call(null,G__289028,G__289029));
})();
var G__288988 = " (";
var G__288989 = (function (){var G__289030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289031 = "fact";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289030,G__289031) : tailrecursion.hoplon.span.call(null,G__289030,G__289031));
})();
var G__288990 = " (";
var G__288991 = (function (){var G__289032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289033 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289032,G__289033) : tailrecursion.hoplon.span.call(null,G__289032,G__289033));
})();
var G__288992 = (function (){var G__289034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289035 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289034,G__289035) : tailrecursion.hoplon.span.call(null,G__289034,G__289035));
})();
var G__288993 = " ";
var G__288994 = (function (){var G__289036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289037 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289036,G__289037) : tailrecursion.hoplon.span.call(null,G__289036,G__289037));
})();
var G__288995 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38(G__288958,G__288959,G__288960,G__288961,G__288962,G__288963,G__288964,G__288965,G__288966,G__288967,G__288968,G__288969,G__288970,G__288971,G__288972,G__288973,G__288974,G__288975,G__288976,G__288977,G__288978,G__288979,G__288980,G__288981,G__288982,G__288983,G__288984,G__288985,G__288986,G__288987,G__288988,G__288989,G__288990,G__288991,G__288992,G__288993,G__288994,G__288995) : tailrecursion.hoplon.pre.call(null,G__288958,G__288959,G__288960,G__288961,G__288962,G__288963,G__288964,G__288965,G__288966,G__288967,G__288968,G__288969,G__288970,G__288971,G__288972,G__288973,G__288974,G__288975,G__288976,G__288977,G__288978,G__288979,G__288980,G__288981,G__288982,G__288983,G__288984,G__288985,G__288986,G__288987,G__288988,G__288989,G__288990,G__288991,G__288992,G__288993,G__288994,G__288995));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__288956,G__288957) : tailrecursion.hoplon.div.call(null,G__288956,G__288957));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__288955) : tailrecursion.hoplon.div.call(null,G__288955));
})(),(function (){var G__289038 = cljs.core.PersistentArrayMap.EMPTY;
var G__289039 = new cljs.core.PersistentVector(null, 28, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In order to manipulate symbols we need a new element in our language: the ability to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["quote"], null)], 0))," a data object. Suppose we want to construct the list ",(function (){var G__289040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(a b)"], null);
var G__289041 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289040,G__289041) : tailrecursion.hoplon.markdown.code_node.call(null,G__289040,G__289041));
})(),". We can",(function (){var G__289042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__289043 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__289042,G__289043) : tailrecursion.hoplon.markdown.simple_node.call(null,G__289042,G__289043));
})(),"t accomplish this with ",(function (){var G__289044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(list a b)"], null);
var G__289045 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289044,G__289045) : tailrecursion.hoplon.markdown.code_node.call(null,G__289044,G__289045));
})(),", because this expression constructs a list of the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["values"], null)], 0))," of ",(function (){var G__289046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"a"], null);
var G__289047 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289046,G__289047) : tailrecursion.hoplon.markdown.code_node.call(null,G__289046,G__289047));
})()," and ",(function (){var G__289048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"b"], null);
var G__289049 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289048,G__289049) : tailrecursion.hoplon.markdown.code_node.call(null,G__289048,G__289049));
})()," rather than the symbols themselves. This issue is well known in the context of natural languages, where words and sentences may be regarded either as semantic entities or as character strings (syntactic entities). The common practice in natural languages is to use quotation marks to indicate that a word or a sentence is to be treated literally as a string of characters. For instance, the first letter of ",(function (){var G__289050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__289051 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["John"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289050,G__289051) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289050,G__289051));
})()," is clearly a ",(function (){var G__289052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__289053 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["J."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289052,G__289053) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289052,G__289053));
})()," If we tell somebody, ",(function (){var G__289054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__289055 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["say your name aloud,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289054,G__289055) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289054,G__289055));
})()," we expect to hear that person",(function (){var G__289056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__289057 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__289056,G__289057) : tailrecursion.hoplon.markdown.simple_node.call(null,G__289056,G__289057));
})(),"s name. However, if we tell somebody ",(function (){var G__289058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__289059 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["say 'your name' aloud,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289058,G__289059) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289058,G__289059));
})()," we expect to hear the words ",(function (){var G__289060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__289061 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["your name."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289060,G__289061) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289060,G__289061));
})()," Note that we are forced to nest quotation marks to describe what somebody else might say.",(function (){var G__289062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__289063 = new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Allowing quotation in a language wreaks havoc with the ability to reason about the language in simple terms, because it destroys the notion that equals can be substituted for equals. For example, three is one plus two, but the word ",(function (){var G__289064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__289065 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["three"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289064,G__289065) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289064,G__289065));
})()," is not the phrase ",(function (){var G__289066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__289067 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["one plus two."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289066,G__289067) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289066,G__289067));
})()," Quotation is powerful because it gives us a way to build expressions that manipulate other expressions (as we will see when we write an interpreter in chapter 4). But allowing statements in a language that talk about other statements in that language makes it very difficult to maintain any coherent principle of what ",(function (){var G__289068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__289069 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["equals can be substituted for equals"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289068,G__289069) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289068,G__289069));
})()," should mean. For example, if we know that the evening star is the morning star, then from the statement ",(function (){var G__289070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__289071 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the evening star is Venus"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289070,G__289071) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289070,G__289071));
})()," we can deduce ",(function (){var G__289072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__289073 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the morning star is Venus."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289072,G__289073) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289072,G__289073));
})()," However, given that ",(function (){var G__289074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__289075 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["John knows that the evening star is Venus"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289074,G__289075) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289074,G__289075));
})()," we cannot infer that ",(function (){var G__289076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__289077 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["John knows that the morning star is Venus."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289076,G__289077) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289076,G__289077));
})()], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289062,G__289063) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289062,G__289063));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289038,G__289039) : tailrecursion.hoplon.markdown.para_node.call(null,G__289038,G__289039));
})(),(function (){var G__289078 = cljs.core.PersistentArrayMap.EMPTY;
var G__289079 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["w this same practice to identify lists and symbols that are to be treated as data objects rather than as expressions to be evaluated. However, our format for quoting differs from that of natural languages in that we place a quotation mark (traditionally, the single quote symbol ",(function (){var G__289080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__289081 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__289080,G__289081) : tailrecursion.hoplon.markdown.simple_node.call(null,G__289080,G__289081));
})(),") only at the beginning of the object to be quoted. We can get away with this in Scheme syntax because we rely on blanks and parentheses to delimit objects. Thus, the meaning of the single quote character is to quote the next object.",(function (){var G__289082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__289083 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The single quote is different from the double quote we have been using to enclose character strings to be printed. Whereas the single quote can be used to denote lists or symbols, the double quote is used only with character strings. In this book, the only use for character strings is as items to be printed."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289082,G__289083) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289082,G__289083));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289078,G__289079) : tailrecursion.hoplon.markdown.para_node.call(null,G__289078,G__289079));
})(),(function (){var G__289084 = cljs.core.PersistentArrayMap.EMPTY;
var G__289085 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we can distinguish between simbols and their values:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289084,G__289085) : tailrecursion.hoplon.markdown.para_node.call(null,G__289084,G__289085));
})(),(function (){var G__289181 = (function (){var G__289182 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__289183 = (function (){var G__289184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__289185 = "(";
var G__289186 = (function (){var G__289229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289230 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289229,G__289230) : tailrecursion.hoplon.span.call(null,G__289229,G__289230));
})();
var G__289187 = (function (){var G__289231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289232 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289231,G__289232) : tailrecursion.hoplon.span.call(null,G__289231,G__289232));
})();
var G__289188 = " ";
var G__289189 = (function (){var G__289233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289234 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289233,G__289234) : tailrecursion.hoplon.span.call(null,G__289233,G__289234));
})();
var G__289190 = ")\n\n(";
var G__289191 = (function (){var G__289235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289236 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289235,G__289236) : tailrecursion.hoplon.span.call(null,G__289235,G__289236));
})();
var G__289192 = (function (){var G__289237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289238 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289237,G__289238) : tailrecursion.hoplon.span.call(null,G__289237,G__289238));
})();
var G__289193 = " ";
var G__289194 = (function (){var G__289239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289240 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289239,G__289240) : tailrecursion.hoplon.span.call(null,G__289239,G__289240));
})();
var G__289195 = ")\n\n(";
var G__289196 = (function (){var G__289241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289242 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289241,G__289242) : tailrecursion.hoplon.span.call(null,G__289241,G__289242));
})();
var G__289197 = (function (){var G__289243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289244 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289243,G__289244) : tailrecursion.hoplon.span.call(null,G__289243,G__289244));
})();
var G__289198 = " ";
var G__289199 = (function (){var G__289245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289246 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289245,G__289246) : tailrecursion.hoplon.span.call(null,G__289245,G__289246));
})();
var G__289200 = ")\n";
var G__289201 = (function (){var G__289247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289248 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289247,G__289248) : tailrecursion.hoplon.span.call(null,G__289247,G__289248));
})();
var G__289202 = "(";
var G__289203 = (function (){var G__289249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289250 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289249,G__289250) : tailrecursion.hoplon.span.call(null,G__289249,G__289250));
})();
var G__289204 = " ";
var G__289205 = (function (){var G__289251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289252 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289251,G__289252) : tailrecursion.hoplon.span.call(null,G__289251,G__289252));
})();
var G__289206 = ")\n\n(";
var G__289207 = (function (){var G__289253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289254 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289253,G__289254) : tailrecursion.hoplon.span.call(null,G__289253,G__289254));
})();
var G__289208 = (function (){var G__289255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289256 = "'a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289255,G__289256) : tailrecursion.hoplon.span.call(null,G__289255,G__289256));
})();
var G__289209 = " ";
var G__289210 = (function (){var G__289257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289258 = "'b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289257,G__289258) : tailrecursion.hoplon.span.call(null,G__289257,G__289258));
})();
var G__289211 = ")\n";
var G__289212 = (function (){var G__289259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289260 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289259,G__289260) : tailrecursion.hoplon.span.call(null,G__289259,G__289260));
})();
var G__289213 = "(";
var G__289214 = (function (){var G__289261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289262 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289261,G__289262) : tailrecursion.hoplon.span.call(null,G__289261,G__289262));
})();
var G__289215 = " ";
var G__289216 = (function (){var G__289263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289264 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289263,G__289264) : tailrecursion.hoplon.span.call(null,G__289263,G__289264));
})();
var G__289217 = ")\n\n(";
var G__289218 = (function (){var G__289265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289266 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289265,G__289266) : tailrecursion.hoplon.span.call(null,G__289265,G__289266));
})();
var G__289219 = (function (){var G__289267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289268 = "'a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289267,G__289268) : tailrecursion.hoplon.span.call(null,G__289267,G__289268));
})();
var G__289220 = " ";
var G__289221 = (function (){var G__289269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289270 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289269,G__289270) : tailrecursion.hoplon.span.call(null,G__289269,G__289270));
})();
var G__289222 = ")\n";
var G__289223 = (function (){var G__289271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289272 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289271,G__289272) : tailrecursion.hoplon.span.call(null,G__289271,G__289272));
})();
var G__289224 = "(";
var G__289225 = (function (){var G__289273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289274 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289273,G__289274) : tailrecursion.hoplon.span.call(null,G__289273,G__289274));
})();
var G__289226 = " ";
var G__289227 = (function (){var G__289275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289276 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289275,G__289276) : tailrecursion.hoplon.span.call(null,G__289275,G__289276));
})();
var G__289228 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45(G__289184,G__289185,G__289186,G__289187,G__289188,G__289189,G__289190,G__289191,G__289192,G__289193,G__289194,G__289195,G__289196,G__289197,G__289198,G__289199,G__289200,G__289201,G__289202,G__289203,G__289204,G__289205,G__289206,G__289207,G__289208,G__289209,G__289210,G__289211,G__289212,G__289213,G__289214,G__289215,G__289216,G__289217,G__289218,G__289219,G__289220,G__289221,G__289222,G__289223,G__289224,G__289225,G__289226,G__289227,G__289228) : tailrecursion.hoplon.pre.call(null,G__289184,G__289185,G__289186,G__289187,G__289188,G__289189,G__289190,G__289191,G__289192,G__289193,G__289194,G__289195,G__289196,G__289197,G__289198,G__289199,G__289200,G__289201,G__289202,G__289203,G__289204,G__289205,G__289206,G__289207,G__289208,G__289209,G__289210,G__289211,G__289212,G__289213,G__289214,G__289215,G__289216,G__289217,G__289218,G__289219,G__289220,G__289221,G__289222,G__289223,G__289224,G__289225,G__289226,G__289227,G__289228));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__289182,G__289183) : tailrecursion.hoplon.div.call(null,G__289182,G__289183));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__289181) : tailrecursion.hoplon.div.call(null,G__289181));
})(),(function (){var G__289277 = cljs.core.PersistentArrayMap.EMPTY;
var G__289278 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Quotation also allows us to type in compound objects, using the conventional printed representation for lists:",(function (){var G__289279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__289280 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Strictly, our use of the quotation mark violates the general rule that all compound expressions in our language should be delimited by parentheses and look like lists. We can recover this consistency by introducing a special form quote, which serves the same purpose as the quotation mark. Thus, we would type ",(function (){var G__289281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(quote a)"], null);
var G__289282 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289281,G__289282) : tailrecursion.hoplon.markdown.code_node.call(null,G__289281,G__289282));
})()," instead of ",(function (){var G__289283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"'a"], null);
var G__289284 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289283,G__289284) : tailrecursion.hoplon.markdown.code_node.call(null,G__289283,G__289284));
})(),", and we would type ",(function (){var G__289285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(quote (a\nb c))"], null);
var G__289286 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289285,G__289286) : tailrecursion.hoplon.markdown.code_node.call(null,G__289285,G__289286));
})()," instead of ",(function (){var G__289287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"'(a b c)"], null);
var G__289288 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289287,G__289288) : tailrecursion.hoplon.markdown.code_node.call(null,G__289287,G__289288));
})(),". This is precisely how the interpreter works. The quotation mark is just a single-character abbreviation for wrapping the next complete expression with quote to form ",(function (){var G__289289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(quote\n<expression>)"], null);
var G__289290 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289289,G__289290) : tailrecursion.hoplon.markdown.code_node.call(null,G__289289,G__289290));
})(),". This is important because it maintains the principle that any expression seen by the interpreter can be manipulated as a data object. For instance, we could construct the expression ",(function (){var G__289291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first '(a\nb c))"], null);
var G__289292 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289291,G__289292) : tailrecursion.hoplon.markdown.code_node.call(null,G__289291,G__289292));
})(),", which is the same as ",(function (){var G__289293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first (quote (a b c)))"], null);
var G__289294 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289293,G__289294) : tailrecursion.hoplon.markdown.code_node.call(null,G__289293,G__289294));
})(),", by evaluating ",(function (){var G__289295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(list 'first (list 'quote '(a b c)))"], null);
var G__289296 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289295,G__289296) : tailrecursion.hoplon.markdown.code_node.call(null,G__289295,G__289296));
})(),"."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289279,G__289280) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289279,G__289280));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289277,G__289278) : tailrecursion.hoplon.markdown.para_node.call(null,G__289277,G__289278));
})(),(function (){var G__289359 = (function (){var G__289360 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__289361 = (function (){var G__289362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__289363 = "(";
var G__289364 = (function (){var G__289392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289393 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289392,G__289393) : tailrecursion.hoplon.span.call(null,G__289392,G__289393));
})();
var G__289365 = (function (){var G__289394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289395 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289394,G__289395) : tailrecursion.hoplon.span.call(null,G__289394,G__289395));
})();
var G__289366 = "(";
var G__289367 = (function (){var G__289396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289397 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289396,G__289397) : tailrecursion.hoplon.span.call(null,G__289396,G__289397));
})();
var G__289368 = " ";
var G__289369 = (function (){var G__289398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289399 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289398,G__289399) : tailrecursion.hoplon.span.call(null,G__289398,G__289399));
})();
var G__289370 = " ";
var G__289371 = (function (){var G__289400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289401 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289400,G__289401) : tailrecursion.hoplon.span.call(null,G__289400,G__289401));
})();
var G__289372 = "))\n";
var G__289373 = (function (){var G__289402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289403 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289402,G__289403) : tailrecursion.hoplon.span.call(null,G__289402,G__289403));
})();
var G__289374 = " ";
var G__289375 = (function (){var G__289404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289405 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289404,G__289405) : tailrecursion.hoplon.span.call(null,G__289404,G__289405));
})();
var G__289376 = "\n\n(";
var G__289377 = (function (){var G__289406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289407 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289406,G__289407) : tailrecursion.hoplon.span.call(null,G__289406,G__289407));
})();
var G__289378 = (function (){var G__289408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289409 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289408,G__289409) : tailrecursion.hoplon.span.call(null,G__289408,G__289409));
})();
var G__289379 = "(";
var G__289380 = (function (){var G__289410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289411 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289410,G__289411) : tailrecursion.hoplon.span.call(null,G__289410,G__289411));
})();
var G__289381 = " ";
var G__289382 = (function (){var G__289412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289413 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289412,G__289413) : tailrecursion.hoplon.span.call(null,G__289412,G__289413));
})();
var G__289383 = " ";
var G__289384 = (function (){var G__289414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289415 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289414,G__289415) : tailrecursion.hoplon.span.call(null,G__289414,G__289415));
})();
var G__289385 = "))\n";
var G__289386 = (function (){var G__289416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289417 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289416,G__289417) : tailrecursion.hoplon.span.call(null,G__289416,G__289417));
})();
var G__289387 = " (";
var G__289388 = (function (){var G__289418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289419 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289418,G__289419) : tailrecursion.hoplon.span.call(null,G__289418,G__289419));
})();
var G__289389 = " ";
var G__289390 = (function (){var G__289420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289421 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289420,G__289421) : tailrecursion.hoplon.span.call(null,G__289420,G__289421));
})();
var G__289391 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30(G__289362,G__289363,G__289364,G__289365,G__289366,G__289367,G__289368,G__289369,G__289370,G__289371,G__289372,G__289373,G__289374,G__289375,G__289376,G__289377,G__289378,G__289379,G__289380,G__289381,G__289382,G__289383,G__289384,G__289385,G__289386,G__289387,G__289388,G__289389,G__289390,G__289391) : tailrecursion.hoplon.pre.call(null,G__289362,G__289363,G__289364,G__289365,G__289366,G__289367,G__289368,G__289369,G__289370,G__289371,G__289372,G__289373,G__289374,G__289375,G__289376,G__289377,G__289378,G__289379,G__289380,G__289381,G__289382,G__289383,G__289384,G__289385,G__289386,G__289387,G__289388,G__289389,G__289390,G__289391));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__289360,G__289361) : tailrecursion.hoplon.div.call(null,G__289360,G__289361));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__289359) : tailrecursion.hoplon.div.call(null,G__289359));
})(),(function (){var G__289422 = cljs.core.PersistentArrayMap.EMPTY;
var G__289423 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In keeping with this, we can obtain the empty list by evaluating ",(function (){var G__289424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"'()"], null);
var G__289425 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289424,G__289425) : tailrecursion.hoplon.markdown.code_node.call(null,G__289424,G__289425));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289422,G__289423) : tailrecursion.hoplon.markdown.para_node.call(null,G__289422,G__289423));
})(),(function (){var G__289426 = cljs.core.PersistentArrayMap.EMPTY;
var G__289427 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To test whether two symbols are the same, we can use Clojure",(function (){var G__289428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__289429 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__289428,G__289429) : tailrecursion.hoplon.markdown.simple_node.call(null,G__289428,G__289429));
})(),"s ",(function (){var G__289430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__289431 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289430,G__289431) : tailrecursion.hoplon.markdown.code_node.call(null,G__289430,G__289431));
})()," primative. In Scheme, due to the lack of the protocol abstraction, this primative had to be a new primative (one which they called ",(function (){var G__289432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"eq?"], null);
var G__289433 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289432,G__289433) : tailrecursion.hoplon.markdown.code_node.call(null,G__289432,G__289433));
})(),").",(function (){var G__289434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__289435 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__289436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$nbsp], null);
var G__289437 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__289436,G__289437) : tailrecursion.hoplon.markdown.simple_node.call(null,G__289436,G__289437));
})(),"We can consider two symbols to be ",(function (){var G__289438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__289439 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the same"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289438,G__289439) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289438,G__289439));
})()," if they consist of the same characters in the same order. Such a definition skirts a deep issue that we are not yet ready to address: the meaning of ",(function (){var G__289440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__289441 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sameness"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289440,G__289441) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289440,G__289441));
})()," in a programming language. We will return to this in chapter 3 (section 3.1.3)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289434,G__289435) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289434,G__289435));
})()," Using ",(function (){var G__289442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__289443 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289442,G__289443) : tailrecursion.hoplon.markdown.code_node.call(null,G__289442,G__289443));
})(),", we can implement a useful procedure called ",(function (){var G__289444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"memq"], null);
var G__289445 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289444,G__289445) : tailrecursion.hoplon.markdown.code_node.call(null,G__289444,G__289445));
})(),". This takes two arguments, a symbol and a list. If the symbol is not contained in the list (i.e., is not ",(function (){var G__289446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__289447 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289446,G__289447) : tailrecursion.hoplon.markdown.code_node.call(null,G__289446,G__289447));
})()," to any item in the list), then ",(function (){var G__289448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"memq"], null);
var G__289449 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289448,G__289449) : tailrecursion.hoplon.markdown.code_node.call(null,G__289448,G__289449));
})()," returns false. Otherwise it returns the sublist of the list beginning with the first occurrence of the symbol:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289426,G__289427) : tailrecursion.hoplon.markdown.para_node.call(null,G__289426,G__289427));
})(),(function (){var G__289530 = (function (){var G__289531 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__289532 = (function (){var G__289533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__289534 = "(";
var G__289535 = (function (){var G__289571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289572 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289571,G__289572) : tailrecursion.hoplon.span.call(null,G__289571,G__289572));
})();
var G__289536 = (function (){var G__289573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289574 = "memq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289573,G__289574) : tailrecursion.hoplon.span.call(null,G__289573,G__289574));
})();
var G__289537 = " [";
var G__289538 = (function (){var G__289575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289576 = "item";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289575,G__289576) : tailrecursion.hoplon.span.call(null,G__289575,G__289576));
})();
var G__289539 = " ";
var G__289540 = (function (){var G__289577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289578 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289577,G__289578) : tailrecursion.hoplon.span.call(null,G__289577,G__289578));
})();
var G__289541 = "]\n  (";
var G__289542 = (function (){var G__289579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289580 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289579,G__289580) : tailrecursion.hoplon.span.call(null,G__289579,G__289580));
})();
var G__289543 = "[";
var G__289544 = (function (){var G__289581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289582 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289581,G__289582) : tailrecursion.hoplon.span.call(null,G__289581,G__289582));
})();
var G__289545 = " ";
var G__289546 = (function (){var G__289583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289584 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289583,G__289584) : tailrecursion.hoplon.span.call(null,G__289583,G__289584));
})();
var G__289547 = "]\n    (";
var G__289548 = (function (){var G__289585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289586 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289585,G__289586) : tailrecursion.hoplon.span.call(null,G__289585,G__289586));
})();
var G__289549 = "(";
var G__289550 = (function (){var G__289587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289588 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289587,G__289588) : tailrecursion.hoplon.span.call(null,G__289587,G__289588));
})();
var G__289551 = " ";
var G__289552 = (function (){var G__289589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289590 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289589,G__289590) : tailrecursion.hoplon.span.call(null,G__289589,G__289590));
})();
var G__289553 = ") ";
var G__289554 = (function (){var G__289591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289592 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289591,G__289592) : tailrecursion.hoplon.span.call(null,G__289591,G__289592));
})();
var G__289555 = "\n          (";
var G__289556 = (function (){var G__289593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289594 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289593,G__289594) : tailrecursion.hoplon.span.call(null,G__289593,G__289594));
})();
var G__289557 = (function (){var G__289595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289596 = "item";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289595,G__289596) : tailrecursion.hoplon.span.call(null,G__289595,G__289596));
})();
var G__289558 = " (";
var G__289559 = (function (){var G__289597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289598 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289597,G__289598) : tailrecursion.hoplon.span.call(null,G__289597,G__289598));
})();
var G__289560 = (function (){var G__289599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289600 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289599,G__289600) : tailrecursion.hoplon.span.call(null,G__289599,G__289600));
})();
var G__289561 = ")) ";
var G__289562 = (function (){var G__289601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289602 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289601,G__289602) : tailrecursion.hoplon.span.call(null,G__289601,G__289602));
})();
var G__289563 = "\n          ";
var G__289564 = (function (){var G__289603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289604 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289603,G__289604) : tailrecursion.hoplon.span.call(null,G__289603,G__289604));
})();
var G__289565 = " (";
var G__289566 = (function (){var G__289605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289606 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289605,G__289606) : tailrecursion.hoplon.span.call(null,G__289605,G__289606));
})();
var G__289567 = " (";
var G__289568 = (function (){var G__289607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289608 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289607,G__289608) : tailrecursion.hoplon.span.call(null,G__289607,G__289608));
})();
var G__289569 = (function (){var G__289609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289610 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289609,G__289610) : tailrecursion.hoplon.span.call(null,G__289609,G__289610));
})();
var G__289570 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38(G__289533,G__289534,G__289535,G__289536,G__289537,G__289538,G__289539,G__289540,G__289541,G__289542,G__289543,G__289544,G__289545,G__289546,G__289547,G__289548,G__289549,G__289550,G__289551,G__289552,G__289553,G__289554,G__289555,G__289556,G__289557,G__289558,G__289559,G__289560,G__289561,G__289562,G__289563,G__289564,G__289565,G__289566,G__289567,G__289568,G__289569,G__289570) : tailrecursion.hoplon.pre.call(null,G__289533,G__289534,G__289535,G__289536,G__289537,G__289538,G__289539,G__289540,G__289541,G__289542,G__289543,G__289544,G__289545,G__289546,G__289547,G__289548,G__289549,G__289550,G__289551,G__289552,G__289553,G__289554,G__289555,G__289556,G__289557,G__289558,G__289559,G__289560,G__289561,G__289562,G__289563,G__289564,G__289565,G__289566,G__289567,G__289568,G__289569,G__289570));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__289531,G__289532) : tailrecursion.hoplon.div.call(null,G__289531,G__289532));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__289530) : tailrecursion.hoplon.div.call(null,G__289530));
})(),(function (){var G__289611 = cljs.core.PersistentArrayMap.EMPTY;
var G__289612 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289611,G__289612) : tailrecursion.hoplon.markdown.para_node.call(null,G__289611,G__289612));
})(),(function (){var G__289697 = (function (){var G__289698 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__289699 = (function (){var G__289700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__289701 = "(";
var G__289702 = (function (){var G__289742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289743 = "memq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289742,G__289743) : tailrecursion.hoplon.span.call(null,G__289742,G__289743));
})();
var G__289703 = " ";
var G__289704 = (function (){var G__289744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289745 = "'apple";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289744,G__289745) : tailrecursion.hoplon.span.call(null,G__289744,G__289745));
})();
var G__289705 = " ";
var G__289706 = (function (){var G__289746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289747 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289746,G__289747) : tailrecursion.hoplon.span.call(null,G__289746,G__289747));
})();
var G__289707 = "(";
var G__289708 = (function (){var G__289748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289749 = "pear";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289748,G__289749) : tailrecursion.hoplon.span.call(null,G__289748,G__289749));
})();
var G__289709 = " ";
var G__289710 = (function (){var G__289750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289751 = "banana";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289750,G__289751) : tailrecursion.hoplon.span.call(null,G__289750,G__289751));
})();
var G__289711 = " ";
var G__289712 = (function (){var G__289752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289753 = "prune";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289752,G__289753) : tailrecursion.hoplon.span.call(null,G__289752,G__289753));
})();
var G__289713 = "))\n";
var G__289714 = (function (){var G__289754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289755 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289754,G__289755) : tailrecursion.hoplon.span.call(null,G__289754,G__289755));
})();
var G__289715 = " ";
var G__289716 = (function (){var G__289756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289757 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289756,G__289757) : tailrecursion.hoplon.span.call(null,G__289756,G__289757));
})();
var G__289717 = "\n\n(";
var G__289718 = (function (){var G__289758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289759 = "memq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289758,G__289759) : tailrecursion.hoplon.span.call(null,G__289758,G__289759));
})();
var G__289719 = " ";
var G__289720 = (function (){var G__289760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289761 = "'apple";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289760,G__289761) : tailrecursion.hoplon.span.call(null,G__289760,G__289761));
})();
var G__289721 = " ";
var G__289722 = (function (){var G__289762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289763 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289762,G__289763) : tailrecursion.hoplon.span.call(null,G__289762,G__289763));
})();
var G__289723 = "(";
var G__289724 = (function (){var G__289764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289765 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289764,G__289765) : tailrecursion.hoplon.span.call(null,G__289764,G__289765));
})();
var G__289725 = " (";
var G__289726 = (function (){var G__289766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289767 = "apple";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289766,G__289767) : tailrecursion.hoplon.span.call(null,G__289766,G__289767));
})();
var G__289727 = " ";
var G__289728 = (function (){var G__289768 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289769 = "sauce";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289768,G__289769) : tailrecursion.hoplon.span.call(null,G__289768,G__289769));
})();
var G__289729 = ") ";
var G__289730 = (function (){var G__289770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289771 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289770,G__289771) : tailrecursion.hoplon.span.call(null,G__289770,G__289771));
})();
var G__289731 = " ";
var G__289732 = (function (){var G__289772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289773 = "apple";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289772,G__289773) : tailrecursion.hoplon.span.call(null,G__289772,G__289773));
})();
var G__289733 = " ";
var G__289734 = (function (){var G__289774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289775 = "pear";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289774,G__289775) : tailrecursion.hoplon.span.call(null,G__289774,G__289775));
})();
var G__289735 = "))\n";
var G__289736 = (function (){var G__289776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289777 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289776,G__289777) : tailrecursion.hoplon.span.call(null,G__289776,G__289777));
})();
var G__289737 = " (";
var G__289738 = (function (){var G__289778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289779 = "apple";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289778,G__289779) : tailrecursion.hoplon.span.call(null,G__289778,G__289779));
})();
var G__289739 = " ";
var G__289740 = (function (){var G__289780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289781 = "pear";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289780,G__289781) : tailrecursion.hoplon.span.call(null,G__289780,G__289781));
})();
var G__289741 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42(G__289700,G__289701,G__289702,G__289703,G__289704,G__289705,G__289706,G__289707,G__289708,G__289709,G__289710,G__289711,G__289712,G__289713,G__289714,G__289715,G__289716,G__289717,G__289718,G__289719,G__289720,G__289721,G__289722,G__289723,G__289724,G__289725,G__289726,G__289727,G__289728,G__289729,G__289730,G__289731,G__289732,G__289733,G__289734,G__289735,G__289736,G__289737,G__289738,G__289739,G__289740,G__289741) : tailrecursion.hoplon.pre.call(null,G__289700,G__289701,G__289702,G__289703,G__289704,G__289705,G__289706,G__289707,G__289708,G__289709,G__289710,G__289711,G__289712,G__289713,G__289714,G__289715,G__289716,G__289717,G__289718,G__289719,G__289720,G__289721,G__289722,G__289723,G__289724,G__289725,G__289726,G__289727,G__289728,G__289729,G__289730,G__289731,G__289732,G__289733,G__289734,G__289735,G__289736,G__289737,G__289738,G__289739,G__289740,G__289741));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__289698,G__289699) : tailrecursion.hoplon.div.call(null,G__289698,G__289699));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__289697) : tailrecursion.hoplon.div.call(null,G__289697));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288723;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288722;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288721;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288720;
}})()], 0));
var G__288690 = "";
var G__288691 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_289782 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289783 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_289784 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289785 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__289786 = cljs.core.PersistentArrayMap.EMPTY;
var G__289787 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What would the interpreter print in response to evaluating each of the following expressions?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289786,G__289787) : tailrecursion.hoplon.markdown.para_node.call(null,G__289786,G__289787));
})(),(function (){var G__289807 = (function (){var G__289808 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__289809 = (function (){var G__289810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__289811 = "(";
var G__289812 = (function (){var G__289819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289820 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289819,G__289820) : tailrecursion.hoplon.span.call(null,G__289819,G__289820));
})();
var G__289813 = (function (){var G__289821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289822 = "'a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289821,G__289822) : tailrecursion.hoplon.span.call(null,G__289821,G__289822));
})();
var G__289814 = " ";
var G__289815 = (function (){var G__289823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289824 = "'b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289823,G__289824) : tailrecursion.hoplon.span.call(null,G__289823,G__289824));
})();
var G__289816 = " ";
var G__289817 = (function (){var G__289825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289826 = "'c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289825,G__289826) : tailrecursion.hoplon.span.call(null,G__289825,G__289826));
})();
var G__289818 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$9 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$9(G__289810,G__289811,G__289812,G__289813,G__289814,G__289815,G__289816,G__289817,G__289818) : tailrecursion.hoplon.pre.call(null,G__289810,G__289811,G__289812,G__289813,G__289814,G__289815,G__289816,G__289817,G__289818));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__289808,G__289809) : tailrecursion.hoplon.div.call(null,G__289808,G__289809));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__289807) : tailrecursion.hoplon.div.call(null,G__289807));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289785;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289784;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289783;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289782;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_289827 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289828 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_289829 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289830 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__289866 = (function (){var G__289867 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__289868 = (function (){var G__289869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__289870 = "(";
var G__289871 = (function (){var G__289886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289887 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289886,G__289887) : tailrecursion.hoplon.span.call(null,G__289886,G__289887));
})();
var G__289872 = (function (){var G__289888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289889 = "'a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289888,G__289889) : tailrecursion.hoplon.span.call(null,G__289888,G__289889));
})();
var G__289873 = " ";
var G__289874 = (function (){var G__289890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289891 = "'b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289890,G__289891) : tailrecursion.hoplon.span.call(null,G__289890,G__289891));
})();
var G__289875 = " ";
var G__289876 = (function (){var G__289892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289893 = "'c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289892,G__289893) : tailrecursion.hoplon.span.call(null,G__289892,G__289893));
})();
var G__289877 = ")\n";
var G__289878 = (function (){var G__289894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289895 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289894,G__289895) : tailrecursion.hoplon.span.call(null,G__289894,G__289895));
})();
var G__289879 = " (";
var G__289880 = (function (){var G__289896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289897 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289896,G__289897) : tailrecursion.hoplon.span.call(null,G__289896,G__289897));
})();
var G__289881 = " ";
var G__289882 = (function (){var G__289898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289899 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289898,G__289899) : tailrecursion.hoplon.span.call(null,G__289898,G__289899));
})();
var G__289883 = " ";
var G__289884 = (function (){var G__289900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289901 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289900,G__289901) : tailrecursion.hoplon.span.call(null,G__289900,G__289901));
})();
var G__289885 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__289869,G__289870,G__289871,G__289872,G__289873,G__289874,G__289875,G__289876,G__289877,G__289878,G__289879,G__289880,G__289881,G__289882,G__289883,G__289884,G__289885) : tailrecursion.hoplon.pre.call(null,G__289869,G__289870,G__289871,G__289872,G__289873,G__289874,G__289875,G__289876,G__289877,G__289878,G__289879,G__289880,G__289881,G__289882,G__289883,G__289884,G__289885));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__289867,G__289868) : tailrecursion.hoplon.div.call(null,G__289867,G__289868));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__289866) : tailrecursion.hoplon.div.call(null,G__289866));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289830;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289829;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289828;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289827;
}})()], 0)),"",(function (){var _STAR_references_STAR_289902 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289903 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_289904 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289905 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__289921 = (function (){var G__289922 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__289923 = (function (){var G__289924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__289925 = "(";
var G__289926 = (function (){var G__289931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289932 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289931,G__289932) : tailrecursion.hoplon.span.call(null,G__289931,G__289932));
})();
var G__289927 = "(";
var G__289928 = (function (){var G__289933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289934 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289933,G__289934) : tailrecursion.hoplon.span.call(null,G__289933,G__289934));
})();
var G__289929 = (function (){var G__289935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289936 = "'george";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289935,G__289936) : tailrecursion.hoplon.span.call(null,G__289935,G__289936));
})();
var G__289930 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$7 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$7(G__289924,G__289925,G__289926,G__289927,G__289928,G__289929,G__289930) : tailrecursion.hoplon.pre.call(null,G__289924,G__289925,G__289926,G__289927,G__289928,G__289929,G__289930));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__289922,G__289923) : tailrecursion.hoplon.div.call(null,G__289922,G__289923));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__289921) : tailrecursion.hoplon.div.call(null,G__289921));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289905;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289904;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289903;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289902;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_289937 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289938 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_289939 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289940 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__289964 = (function (){var G__289965 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__289966 = (function (){var G__289967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__289968 = "(";
var G__289969 = (function (){var G__289978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289979 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289978,G__289979) : tailrecursion.hoplon.span.call(null,G__289978,G__289979));
})();
var G__289970 = "(";
var G__289971 = (function (){var G__289980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289981 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289980,G__289981) : tailrecursion.hoplon.span.call(null,G__289980,G__289981));
})();
var G__289972 = (function (){var G__289982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289983 = "'george";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289982,G__289983) : tailrecursion.hoplon.span.call(null,G__289982,G__289983));
})();
var G__289973 = "))\n";
var G__289974 = (function (){var G__289984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289985 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289984,G__289985) : tailrecursion.hoplon.span.call(null,G__289984,G__289985));
})();
var G__289975 = " ((";
var G__289976 = (function (){var G__289986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289987 = "george";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289986,G__289987) : tailrecursion.hoplon.span.call(null,G__289986,G__289987));
})();
var G__289977 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11(G__289967,G__289968,G__289969,G__289970,G__289971,G__289972,G__289973,G__289974,G__289975,G__289976,G__289977) : tailrecursion.hoplon.pre.call(null,G__289967,G__289968,G__289969,G__289970,G__289971,G__289972,G__289973,G__289974,G__289975,G__289976,G__289977));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__289965,G__289966) : tailrecursion.hoplon.div.call(null,G__289965,G__289966));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__289964) : tailrecursion.hoplon.div.call(null,G__289964));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289940;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289939;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289938;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289937;
}})()], 0)),"",(function (){var _STAR_references_STAR_289988 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289989 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_289990 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289991 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290019 = (function (){var G__290020 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__290021 = (function (){var G__290022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__290023 = "(";
var G__290024 = (function (){var G__290035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290036 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290035,G__290036) : tailrecursion.hoplon.span.call(null,G__290035,G__290036));
})();
var G__290025 = (function (){var G__290037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290038 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290037,G__290038) : tailrecursion.hoplon.span.call(null,G__290037,G__290038));
})();
var G__290026 = "((";
var G__290027 = (function (){var G__290039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290040 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290039,G__290040) : tailrecursion.hoplon.span.call(null,G__290039,G__290040));
})();
var G__290028 = " ";
var G__290029 = (function (){var G__290041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290042 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290041,G__290042) : tailrecursion.hoplon.span.call(null,G__290041,G__290042));
})();
var G__290030 = ") (";
var G__290031 = (function (){var G__290043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290044 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290043,G__290044) : tailrecursion.hoplon.span.call(null,G__290043,G__290044));
})();
var G__290032 = " ";
var G__290033 = (function (){var G__290045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290046 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290045,G__290046) : tailrecursion.hoplon.span.call(null,G__290045,G__290046));
})();
var G__290034 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__290022,G__290023,G__290024,G__290025,G__290026,G__290027,G__290028,G__290029,G__290030,G__290031,G__290032,G__290033,G__290034) : tailrecursion.hoplon.pre.call(null,G__290022,G__290023,G__290024,G__290025,G__290026,G__290027,G__290028,G__290029,G__290030,G__290031,G__290032,G__290033,G__290034));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__290020,G__290021) : tailrecursion.hoplon.div.call(null,G__290020,G__290021));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__290019) : tailrecursion.hoplon.div.call(null,G__290019));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289991;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289990;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289989;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289988;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_290047 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290048 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290049 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290050 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290090 = (function (){var G__290091 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__290092 = (function (){var G__290093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__290094 = "(";
var G__290095 = (function (){var G__290112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290113 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290112,G__290113) : tailrecursion.hoplon.span.call(null,G__290112,G__290113));
})();
var G__290096 = (function (){var G__290114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290115 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290114,G__290115) : tailrecursion.hoplon.span.call(null,G__290114,G__290115));
})();
var G__290097 = "((";
var G__290098 = (function (){var G__290116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290117 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290116,G__290117) : tailrecursion.hoplon.span.call(null,G__290116,G__290117));
})();
var G__290099 = " ";
var G__290100 = (function (){var G__290118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290119 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290118,G__290119) : tailrecursion.hoplon.span.call(null,G__290118,G__290119));
})();
var G__290101 = ") (";
var G__290102 = (function (){var G__290120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290121 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290120,G__290121) : tailrecursion.hoplon.span.call(null,G__290120,G__290121));
})();
var G__290103 = " ";
var G__290104 = (function (){var G__290122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290123 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290122,G__290123) : tailrecursion.hoplon.span.call(null,G__290122,G__290123));
})();
var G__290105 = ")))\n";
var G__290106 = (function (){var G__290124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290125 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290124,G__290125) : tailrecursion.hoplon.span.call(null,G__290124,G__290125));
})();
var G__290107 = " (";
var G__290108 = (function (){var G__290126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290127 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290126,G__290127) : tailrecursion.hoplon.span.call(null,G__290126,G__290127));
})();
var G__290109 = " ";
var G__290110 = (function (){var G__290128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290129 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290128,G__290129) : tailrecursion.hoplon.span.call(null,G__290128,G__290129));
})();
var G__290111 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__290093,G__290094,G__290095,G__290096,G__290097,G__290098,G__290099,G__290100,G__290101,G__290102,G__290103,G__290104,G__290105,G__290106,G__290107,G__290108,G__290109,G__290110,G__290111) : tailrecursion.hoplon.pre.call(null,G__290093,G__290094,G__290095,G__290096,G__290097,G__290098,G__290099,G__290100,G__290101,G__290102,G__290103,G__290104,G__290105,G__290106,G__290107,G__290108,G__290109,G__290110,G__290111));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__290091,G__290092) : tailrecursion.hoplon.div.call(null,G__290091,G__290092));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__290090) : tailrecursion.hoplon.div.call(null,G__290090));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290050;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290049;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290048;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290047;
}})()], 0)),"",(function (){var _STAR_references_STAR_290130 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290131 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290132 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290133 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290160 = (function (){var G__290161 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__290162 = (function (){var G__290163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__290164 = "(";
var G__290165 = (function (){var G__290175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290176 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290175,G__290176) : tailrecursion.hoplon.span.call(null,G__290175,G__290176));
})();
var G__290166 = " (";
var G__290167 = (function (){var G__290177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290178 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290177,G__290178) : tailrecursion.hoplon.span.call(null,G__290177,G__290178));
})();
var G__290168 = (function (){var G__290179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290180 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290179,G__290180) : tailrecursion.hoplon.span.call(null,G__290179,G__290180));
})();
var G__290169 = "(";
var G__290170 = (function (){var G__290181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290182 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290181,G__290182) : tailrecursion.hoplon.span.call(null,G__290181,G__290182));
})();
var G__290171 = " ";
var G__290172 = (function (){var G__290183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290184 = "short ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290183,G__290184) : tailrecursion.hoplon.span.call(null,G__290183,G__290184));
})();
var G__290173 = (function (){var G__290185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290186 = "list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290185,G__290186) : tailrecursion.hoplon.span.call(null,G__290185,G__290186));
})();
var G__290174 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12(G__290163,G__290164,G__290165,G__290166,G__290167,G__290168,G__290169,G__290170,G__290171,G__290172,G__290173,G__290174) : tailrecursion.hoplon.pre.call(null,G__290163,G__290164,G__290165,G__290166,G__290167,G__290168,G__290169,G__290170,G__290171,G__290172,G__290173,G__290174));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__290161,G__290162) : tailrecursion.hoplon.div.call(null,G__290161,G__290162));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__290160) : tailrecursion.hoplon.div.call(null,G__290160));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290133;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290132;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290131;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290130;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_290187 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290188 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290189 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290190 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290225 = (function (){var G__290226 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__290227 = (function (){var G__290228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__290229 = "(";
var G__290230 = (function (){var G__290244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290245 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290244,G__290245) : tailrecursion.hoplon.span.call(null,G__290244,G__290245));
})();
var G__290231 = " (";
var G__290232 = (function (){var G__290246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290247 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290246,G__290247) : tailrecursion.hoplon.span.call(null,G__290246,G__290247));
})();
var G__290233 = (function (){var G__290248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290249 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290248,G__290249) : tailrecursion.hoplon.span.call(null,G__290248,G__290249));
})();
var G__290234 = "(";
var G__290235 = (function (){var G__290250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290251 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290250,G__290251) : tailrecursion.hoplon.span.call(null,G__290250,G__290251));
})();
var G__290236 = " ";
var G__290237 = (function (){var G__290252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290253 = "short ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290252,G__290253) : tailrecursion.hoplon.span.call(null,G__290252,G__290253));
})();
var G__290238 = (function (){var G__290254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290255 = "list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290254,G__290255) : tailrecursion.hoplon.span.call(null,G__290254,G__290255));
})();
var G__290239 = ")))\n";
var G__290240 = (function (){var G__290256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290257 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290256,G__290257) : tailrecursion.hoplon.span.call(null,G__290256,G__290257));
})();
var G__290241 = " ";
var G__290242 = (function (){var G__290258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290259 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290258,G__290259) : tailrecursion.hoplon.span.call(null,G__290258,G__290259));
})();
var G__290243 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16(G__290228,G__290229,G__290230,G__290231,G__290232,G__290233,G__290234,G__290235,G__290236,G__290237,G__290238,G__290239,G__290240,G__290241,G__290242,G__290243) : tailrecursion.hoplon.pre.call(null,G__290228,G__290229,G__290230,G__290231,G__290232,G__290233,G__290234,G__290235,G__290236,G__290237,G__290238,G__290239,G__290240,G__290241,G__290242,G__290243));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__290226,G__290227) : tailrecursion.hoplon.div.call(null,G__290226,G__290227));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__290225) : tailrecursion.hoplon.div.call(null,G__290225));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290190;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290189;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290188;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290187;
}})()], 0)),"",(function (){var _STAR_references_STAR_290260 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290261 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290262 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290263 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290296 = (function (){var G__290297 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__290298 = (function (){var G__290299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__290300 = "(";
var G__290301 = (function (){var G__290315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290316 = "memq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290315,G__290316) : tailrecursion.hoplon.span.call(null,G__290315,G__290316));
})();
var G__290302 = " ";
var G__290303 = (function (){var G__290317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290318 = "'red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290317,G__290318) : tailrecursion.hoplon.span.call(null,G__290317,G__290318));
})();
var G__290304 = " ";
var G__290305 = (function (){var G__290319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290320 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290319,G__290320) : tailrecursion.hoplon.span.call(null,G__290319,G__290320));
})();
var G__290306 = "((";
var G__290307 = (function (){var G__290321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290322 = "red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290321,G__290322) : tailrecursion.hoplon.span.call(null,G__290321,G__290322));
})();
var G__290308 = " ";
var G__290309 = (function (){var G__290323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290324 = "shoes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290323,G__290324) : tailrecursion.hoplon.span.call(null,G__290323,G__290324));
})();
var G__290310 = ") (";
var G__290311 = (function (){var G__290325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290326 = "blue";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290325,G__290326) : tailrecursion.hoplon.span.call(null,G__290325,G__290326));
})();
var G__290312 = " ";
var G__290313 = (function (){var G__290327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290328 = "socks";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290327,G__290328) : tailrecursion.hoplon.span.call(null,G__290327,G__290328));
})();
var G__290314 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16(G__290299,G__290300,G__290301,G__290302,G__290303,G__290304,G__290305,G__290306,G__290307,G__290308,G__290309,G__290310,G__290311,G__290312,G__290313,G__290314) : tailrecursion.hoplon.pre.call(null,G__290299,G__290300,G__290301,G__290302,G__290303,G__290304,G__290305,G__290306,G__290307,G__290308,G__290309,G__290310,G__290311,G__290312,G__290313,G__290314));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__290297,G__290298) : tailrecursion.hoplon.div.call(null,G__290297,G__290298));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__290296) : tailrecursion.hoplon.div.call(null,G__290296));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290263;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290262;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290261;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290260;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_290329 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290330 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290331 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290332 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290373 = (function (){var G__290374 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__290375 = (function (){var G__290376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__290377 = "(";
var G__290378 = (function (){var G__290396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290397 = "memq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290396,G__290397) : tailrecursion.hoplon.span.call(null,G__290396,G__290397));
})();
var G__290379 = " ";
var G__290380 = (function (){var G__290398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290399 = "'red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290398,G__290399) : tailrecursion.hoplon.span.call(null,G__290398,G__290399));
})();
var G__290381 = " ";
var G__290382 = (function (){var G__290400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290401 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290400,G__290401) : tailrecursion.hoplon.span.call(null,G__290400,G__290401));
})();
var G__290383 = "((";
var G__290384 = (function (){var G__290402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290403 = "red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290402,G__290403) : tailrecursion.hoplon.span.call(null,G__290402,G__290403));
})();
var G__290385 = " ";
var G__290386 = (function (){var G__290404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290405 = "shoes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290404,G__290405) : tailrecursion.hoplon.span.call(null,G__290404,G__290405));
})();
var G__290387 = ") (";
var G__290388 = (function (){var G__290406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290407 = "blue";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290406,G__290407) : tailrecursion.hoplon.span.call(null,G__290406,G__290407));
})();
var G__290389 = " ";
var G__290390 = (function (){var G__290408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290409 = "socks";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290408,G__290409) : tailrecursion.hoplon.span.call(null,G__290408,G__290409));
})();
var G__290391 = ")))\n";
var G__290392 = (function (){var G__290410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290411 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290410,G__290411) : tailrecursion.hoplon.span.call(null,G__290410,G__290411));
})();
var G__290393 = " ";
var G__290394 = (function (){var G__290412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290413 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290412,G__290413) : tailrecursion.hoplon.span.call(null,G__290412,G__290413));
})();
var G__290395 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20(G__290376,G__290377,G__290378,G__290379,G__290380,G__290381,G__290382,G__290383,G__290384,G__290385,G__290386,G__290387,G__290388,G__290389,G__290390,G__290391,G__290392,G__290393,G__290394,G__290395) : tailrecursion.hoplon.pre.call(null,G__290376,G__290377,G__290378,G__290379,G__290380,G__290381,G__290382,G__290383,G__290384,G__290385,G__290386,G__290387,G__290388,G__290389,G__290390,G__290391,G__290392,G__290393,G__290394,G__290395));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__290374,G__290375) : tailrecursion.hoplon.div.call(null,G__290374,G__290375));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__290373) : tailrecursion.hoplon.div.call(null,G__290373));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290332;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290331;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290330;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290329;
}})()], 0)),"",(function (){var _STAR_references_STAR_290414 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290415 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290416 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290417 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290450 = (function (){var G__290451 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__290452 = (function (){var G__290453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__290454 = "(";
var G__290455 = (function (){var G__290469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290470 = "memq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290469,G__290470) : tailrecursion.hoplon.span.call(null,G__290469,G__290470));
})();
var G__290456 = " ";
var G__290457 = (function (){var G__290471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290472 = "'red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290471,G__290472) : tailrecursion.hoplon.span.call(null,G__290471,G__290472));
})();
var G__290458 = " ";
var G__290459 = (function (){var G__290473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290474 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290473,G__290474) : tailrecursion.hoplon.span.call(null,G__290473,G__290474));
})();
var G__290460 = "(";
var G__290461 = (function (){var G__290475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290476 = "red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290475,G__290476) : tailrecursion.hoplon.span.call(null,G__290475,G__290476));
})();
var G__290462 = " ";
var G__290463 = (function (){var G__290477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290478 = "shoes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290477,G__290478) : tailrecursion.hoplon.span.call(null,G__290477,G__290478));
})();
var G__290464 = " ";
var G__290465 = (function (){var G__290479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290480 = "blue";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290479,G__290480) : tailrecursion.hoplon.span.call(null,G__290479,G__290480));
})();
var G__290466 = " ";
var G__290467 = (function (){var G__290481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290482 = "socks";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290481,G__290482) : tailrecursion.hoplon.span.call(null,G__290481,G__290482));
})();
var G__290468 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16(G__290453,G__290454,G__290455,G__290456,G__290457,G__290458,G__290459,G__290460,G__290461,G__290462,G__290463,G__290464,G__290465,G__290466,G__290467,G__290468) : tailrecursion.hoplon.pre.call(null,G__290453,G__290454,G__290455,G__290456,G__290457,G__290458,G__290459,G__290460,G__290461,G__290462,G__290463,G__290464,G__290465,G__290466,G__290467,G__290468));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__290451,G__290452) : tailrecursion.hoplon.div.call(null,G__290451,G__290452));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__290450) : tailrecursion.hoplon.div.call(null,G__290450));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290417;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290416;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290415;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290414;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_290483 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290484 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290485 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290486 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290539 = (function (){var G__290540 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__290541 = (function (){var G__290542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__290543 = "(";
var G__290544 = (function (){var G__290568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290569 = "memq";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290568,G__290569) : tailrecursion.hoplon.span.call(null,G__290568,G__290569));
})();
var G__290545 = " ";
var G__290546 = (function (){var G__290570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290571 = "'red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290570,G__290571) : tailrecursion.hoplon.span.call(null,G__290570,G__290571));
})();
var G__290547 = " ";
var G__290548 = (function (){var G__290572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290573 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290572,G__290573) : tailrecursion.hoplon.span.call(null,G__290572,G__290573));
})();
var G__290549 = "(";
var G__290550 = (function (){var G__290574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290575 = "red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290574,G__290575) : tailrecursion.hoplon.span.call(null,G__290574,G__290575));
})();
var G__290551 = " ";
var G__290552 = (function (){var G__290576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290577 = "shoes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290576,G__290577) : tailrecursion.hoplon.span.call(null,G__290576,G__290577));
})();
var G__290553 = " ";
var G__290554 = (function (){var G__290578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290579 = "blue";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290578,G__290579) : tailrecursion.hoplon.span.call(null,G__290578,G__290579));
})();
var G__290555 = " ";
var G__290556 = (function (){var G__290580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290581 = "socks";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290580,G__290581) : tailrecursion.hoplon.span.call(null,G__290580,G__290581));
})();
var G__290557 = "))\n";
var G__290558 = (function (){var G__290582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290583 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290582,G__290583) : tailrecursion.hoplon.span.call(null,G__290582,G__290583));
})();
var G__290559 = " (";
var G__290560 = (function (){var G__290584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290585 = "red";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290584,G__290585) : tailrecursion.hoplon.span.call(null,G__290584,G__290585));
})();
var G__290561 = " ";
var G__290562 = (function (){var G__290586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290587 = "shoes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290586,G__290587) : tailrecursion.hoplon.span.call(null,G__290586,G__290587));
})();
var G__290563 = " ";
var G__290564 = (function (){var G__290588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290589 = "blue";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290588,G__290589) : tailrecursion.hoplon.span.call(null,G__290588,G__290589));
})();
var G__290565 = " ";
var G__290566 = (function (){var G__290590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290591 = "socks";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290590,G__290591) : tailrecursion.hoplon.span.call(null,G__290590,G__290591));
})();
var G__290567 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26(G__290542,G__290543,G__290544,G__290545,G__290546,G__290547,G__290548,G__290549,G__290550,G__290551,G__290552,G__290553,G__290554,G__290555,G__290556,G__290557,G__290558,G__290559,G__290560,G__290561,G__290562,G__290563,G__290564,G__290565,G__290566,G__290567) : tailrecursion.hoplon.pre.call(null,G__290542,G__290543,G__290544,G__290545,G__290546,G__290547,G__290548,G__290549,G__290550,G__290551,G__290552,G__290553,G__290554,G__290555,G__290556,G__290557,G__290558,G__290559,G__290560,G__290561,G__290562,G__290563,G__290564,G__290565,G__290566,G__290567));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__290540,G__290541) : tailrecursion.hoplon.div.call(null,G__290540,G__290541));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__290539) : tailrecursion.hoplon.div.call(null,G__290539));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290486;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290485;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290484;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290483;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_290592 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290593 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290594 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290595 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290596 = cljs.core.PersistentArrayMap.EMPTY;
var G__290597 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Two lists are said to be equal (again we will make use of the diverse protocols included in Clojure",(function (){var G__290598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290599 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290598,G__290599) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290598,G__290599));
})(),"s ",(function (){var G__290600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__290601 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290600,G__290601) : tailrecursion.hoplon.markdown.code_node.call(null,G__290600,G__290601));
})()," procedure), if they contain equal elements arranged in the same order. For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290596,G__290597) : tailrecursion.hoplon.markdown.para_node.call(null,G__290596,G__290597));
})(),(function (){var G__290708 = (function (){var G__290709 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__290710 = (function (){var G__290711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__290712 = "(";
var G__290713 = (function (){var G__290763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290764 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290763,G__290764) : tailrecursion.hoplon.span.call(null,G__290763,G__290764));
})();
var G__290714 = (function (){var G__290765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290766 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290765,G__290766) : tailrecursion.hoplon.span.call(null,G__290765,G__290766));
})();
var G__290715 = "(";
var G__290716 = (function (){var G__290767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290768 = "this";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290767,G__290768) : tailrecursion.hoplon.span.call(null,G__290767,G__290768));
})();
var G__290717 = " ";
var G__290718 = (function (){var G__290769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290770 = "is";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290769,G__290770) : tailrecursion.hoplon.span.call(null,G__290769,G__290770));
})();
var G__290719 = " ";
var G__290720 = (function (){var G__290771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290772 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290771,G__290772) : tailrecursion.hoplon.span.call(null,G__290771,G__290772));
})();
var G__290721 = " ";
var G__290722 = (function (){var G__290773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290774 = "list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290773,G__290774) : tailrecursion.hoplon.span.call(null,G__290773,G__290774));
})();
var G__290723 = ") ";
var G__290724 = (function (){var G__290775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290776 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290775,G__290776) : tailrecursion.hoplon.span.call(null,G__290775,G__290776));
})();
var G__290725 = "(";
var G__290726 = (function (){var G__290777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290778 = "this";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290777,G__290778) : tailrecursion.hoplon.span.call(null,G__290777,G__290778));
})();
var G__290727 = " ";
var G__290728 = (function (){var G__290779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290780 = "is";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290779,G__290780) : tailrecursion.hoplon.span.call(null,G__290779,G__290780));
})();
var G__290729 = " ";
var G__290730 = (function (){var G__290781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290782 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290781,G__290782) : tailrecursion.hoplon.span.call(null,G__290781,G__290782));
})();
var G__290731 = " ";
var G__290732 = (function (){var G__290783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290784 = "list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290783,G__290784) : tailrecursion.hoplon.span.call(null,G__290783,G__290784));
})();
var G__290733 = "))\n";
var G__290734 = (function (){var G__290785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290786 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290785,G__290786) : tailrecursion.hoplon.span.call(null,G__290785,G__290786));
})();
var G__290735 = " ";
var G__290736 = (function (){var G__290787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290788 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290787,G__290788) : tailrecursion.hoplon.span.call(null,G__290787,G__290788));
})();
var G__290737 = "\n\n(";
var G__290738 = (function (){var G__290789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290790 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290789,G__290790) : tailrecursion.hoplon.span.call(null,G__290789,G__290790));
})();
var G__290739 = (function (){var G__290791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290792 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290791,G__290792) : tailrecursion.hoplon.span.call(null,G__290791,G__290792));
})();
var G__290740 = "(";
var G__290741 = (function (){var G__290793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290794 = "this";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290793,G__290794) : tailrecursion.hoplon.span.call(null,G__290793,G__290794));
})();
var G__290742 = " ";
var G__290743 = (function (){var G__290795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290796 = "is";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290795,G__290796) : tailrecursion.hoplon.span.call(null,G__290795,G__290796));
})();
var G__290744 = " ";
var G__290745 = (function (){var G__290797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290798 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290797,G__290798) : tailrecursion.hoplon.span.call(null,G__290797,G__290798));
})();
var G__290746 = " ";
var G__290747 = (function (){var G__290799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290800 = "list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290799,G__290800) : tailrecursion.hoplon.span.call(null,G__290799,G__290800));
})();
var G__290748 = ") ";
var G__290749 = (function (){var G__290801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290802 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290801,G__290802) : tailrecursion.hoplon.span.call(null,G__290801,G__290802));
})();
var G__290750 = "(";
var G__290751 = (function (){var G__290803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290804 = "this";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290803,G__290804) : tailrecursion.hoplon.span.call(null,G__290803,G__290804));
})();
var G__290752 = " (";
var G__290753 = (function (){var G__290805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290806 = "is";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290805,G__290806) : tailrecursion.hoplon.span.call(null,G__290805,G__290806));
})();
var G__290754 = " ";
var G__290755 = (function (){var G__290807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290808 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290807,G__290808) : tailrecursion.hoplon.span.call(null,G__290807,G__290808));
})();
var G__290756 = ") ";
var G__290757 = (function (){var G__290809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290810 = "list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290809,G__290810) : tailrecursion.hoplon.span.call(null,G__290809,G__290810));
})();
var G__290758 = "))\n";
var G__290759 = (function (){var G__290811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290812 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290811,G__290812) : tailrecursion.hoplon.span.call(null,G__290811,G__290812));
})();
var G__290760 = " ";
var G__290761 = (function (){var G__290813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290814 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290813,G__290814) : tailrecursion.hoplon.span.call(null,G__290813,G__290814));
})();
var G__290762 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$52 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$52(G__290711,G__290712,G__290713,G__290714,G__290715,G__290716,G__290717,G__290718,G__290719,G__290720,G__290721,G__290722,G__290723,G__290724,G__290725,G__290726,G__290727,G__290728,G__290729,G__290730,G__290731,G__290732,G__290733,G__290734,G__290735,G__290736,G__290737,G__290738,G__290739,G__290740,G__290741,G__290742,G__290743,G__290744,G__290745,G__290746,G__290747,G__290748,G__290749,G__290750,G__290751,G__290752,G__290753,G__290754,G__290755,G__290756,G__290757,G__290758,G__290759,G__290760,G__290761,G__290762) : tailrecursion.hoplon.pre.call(null,G__290711,G__290712,G__290713,G__290714,G__290715,G__290716,G__290717,G__290718,G__290719,G__290720,G__290721,G__290722,G__290723,G__290724,G__290725,G__290726,G__290727,G__290728,G__290729,G__290730,G__290731,G__290732,G__290733,G__290734,G__290735,G__290736,G__290737,G__290738,G__290739,G__290740,G__290741,G__290742,G__290743,G__290744,G__290745,G__290746,G__290747,G__290748,G__290749,G__290750,G__290751,G__290752,G__290753,G__290754,G__290755,G__290756,G__290757,G__290758,G__290759,G__290760,G__290761,G__290762));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__290709,G__290710) : tailrecursion.hoplon.div.call(null,G__290709,G__290710));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__290708) : tailrecursion.hoplon.div.call(null,G__290708));
})(),(function (){var G__290815 = cljs.core.PersistentArrayMap.EMPTY;
var G__290816 = cljs.core.PersistentVector.fromArray(["To be more precise, we can define the protocols for ",(function (){var G__290817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__290818 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290817,G__290818) : tailrecursion.hoplon.markdown.code_node.call(null,G__290817,G__290818));
})()," recursively in terms of the basic ",(function (){var G__290819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__290820 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290819,G__290820) : tailrecursion.hoplon.markdown.code_node.call(null,G__290819,G__290820));
})()," protocols we",(function (){var G__290821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290822 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290821,G__290822) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290821,G__290822));
})(),"re used to. To do this (for purposes of instruction) we will need to define a new procedure ",(function (){var G__290823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"eq?"], null);
var G__290824 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290823,G__290824) : tailrecursion.hoplon.markdown.code_node.call(null,G__290823,G__290824));
})()," that will take two arguments and return true if they are not lists and they are ",(function (){var G__290825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__290826 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290825,G__290826) : tailrecursion.hoplon.markdown.code_node.call(null,G__290825,G__290826));
})()," in the traditional sense. From that, we can define our new protocol for ",(function (){var G__290827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__290828 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290827,G__290828) : tailrecursion.hoplon.markdown.code_node.call(null,G__290827,G__290828));
})(),", which we will call ",(function (){var G__290829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"more-general-eq?"], null);
var G__290830 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290829,G__290830) : tailrecursion.hoplon.markdown.code_node.call(null,G__290829,G__290830));
})()," by saying that ",(function (){var G__290831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"a"], null);
var G__290832 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290831,G__290832) : tailrecursion.hoplon.markdown.code_node.call(null,G__290831,G__290832));
})()," and ",(function (){var G__290833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"b"], null);
var G__290834 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290833,G__290834) : tailrecursion.hoplon.markdown.code_node.call(null,G__290833,G__290834));
})()," are ",(function (){var G__290835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"more-general-eq?"], null);
var G__290836 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290835,G__290836) : tailrecursion.hoplon.markdown.code_node.call(null,G__290835,G__290836));
})()," ifthey are both symbols and ",(function (){var G__290837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(= a b)"], null);
var G__290838 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290837,G__290838) : tailrecursion.hoplon.markdown.code_node.call(null,G__290837,G__290838));
})(),", or if they are both lists such that ",(function (){var G__290839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first\na)"], null);
var G__290840 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290839,G__290840) : tailrecursion.hoplon.markdown.code_node.call(null,G__290839,G__290840));
})()," is ",(function (){var G__290841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"more-general-eq?"], null);
var G__290842 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290841,G__290842) : tailrecursion.hoplon.markdown.code_node.call(null,G__290841,G__290842));
})()," to ",(function (){var G__290843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first b)"], null);
var G__290844 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290843,G__290844) : tailrecursion.hoplon.markdown.code_node.call(null,G__290843,G__290844));
})()," and ",(function (){var G__290845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(rest a)"], null);
var G__290846 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290845,G__290846) : tailrecursion.hoplon.markdown.code_node.call(null,G__290845,G__290846));
})()," is ",(function (){var G__290847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"more-general-eq?"], null);
var G__290848 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290847,G__290848) : tailrecursion.hoplon.markdown.code_node.call(null,G__290847,G__290848));
})()," to ",(function (){var G__290849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(rest b)"], null);
var G__290850 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290849,G__290850) : tailrecursion.hoplon.markdown.code_node.call(null,G__290849,G__290850));
})(),". Using this idea, implement ",(function (){var G__290851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"eq?"], null);
var G__290852 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290851,G__290852) : tailrecursion.hoplon.markdown.code_node.call(null,G__290851,G__290852));
})()," and ",(function (){var G__290853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"more-general-eq?"], null);
var G__290854 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290853,G__290854) : tailrecursion.hoplon.markdown.code_node.call(null,G__290853,G__290854));
})()," as procedures.",(function (){var G__290855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__290856 = new cljs.core.PersistentVector(null, 21, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In practice, programmers use ",(function (){var G__290857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"equal?"], null);
var G__290858 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290857,G__290858) : tailrecursion.hoplon.markdown.code_node.call(null,G__290857,G__290858));
})()," to compare lists that contain numbers as well as symbols. Numbers are not considered to be symbols. The question of whether two numerically equal numbers (as tested by ",(function (){var G__290859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__290860 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290859,G__290860) : tailrecursion.hoplon.markdown.code_node.call(null,G__290859,G__290860));
})(),") are also ",(function (){var G__290861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"eq?"], null);
var G__290862 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290861,G__290862) : tailrecursion.hoplon.markdown.code_node.call(null,G__290861,G__290862));
})()," is highly implementation-dependent. A better definition of ",(function (){var G__290863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"equal?"], null);
var G__290864 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290863,G__290864) : tailrecursion.hoplon.markdown.code_node.call(null,G__290863,G__290864));
})()," (such as the one that comes as a primitive in Scheme) would also stipulate that if a and b are both numbers, then a and b are equal? if they are numerically equal. I believe Clojure gets around this issue through the use of protocols (something we will go over later). Basically, protocols allow for the use of functions accross many different types of arguments. For instance, ",(function (){var G__290865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__290866 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290865,G__290866) : tailrecursion.hoplon.markdown.code_node.call(null,G__290865,G__290866));
})()," can be used with a vector, a list, and more generally, any sequential object. In fact, you could write your own protocols for ",(function (){var G__290867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__290868 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290867,G__290868) : tailrecursion.hoplon.markdown.code_node.call(null,G__290867,G__290868));
})()," so that you could use ",(function (){var G__290869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__290870 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290869,G__290870) : tailrecursion.hoplon.markdown.code_node.call(null,G__290869,G__290870));
})()," on your own data structures. We've actually been using protocols for a while now via ",(function (){var G__290871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__290872 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290871,G__290872) : tailrecursion.hoplon.markdown.code_node.call(null,G__290871,G__290872));
})(),". When given a vector, ",(function (){var G__290873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__290874 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290873,G__290874) : tailrecursion.hoplon.markdown.code_node.call(null,G__290873,G__290874));
})()," appends the argument to the end of the vector; when given a list, ",(function (){var G__290875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__290876 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290875,G__290876) : tailrecursion.hoplon.markdown.code_node.call(null,G__290875,G__290876));
})()," prepends. This is due to protocols."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__290855,G__290856) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__290855,G__290856));
})()], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290815,G__290816) : tailrecursion.hoplon.markdown.para_node.call(null,G__290815,G__290816));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290595;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290594;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290593;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290592;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_290877 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290878 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290879 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290880 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291045 = (function (){var G__291046 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__291047 = (function (){var G__291048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__291049 = "(";
var G__291050 = (function (){var G__291126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__291127 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291126,G__291127) : tailrecursion.hoplon.span.call(null,G__291126,G__291127));
})();
var G__291051 = (function (){var G__291128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291129 = "eq?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291128,G__291129) : tailrecursion.hoplon.span.call(null,G__291128,G__291129));
})();
var G__291052 = " [";
var G__291053 = (function (){var G__291130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291131 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291130,G__291131) : tailrecursion.hoplon.span.call(null,G__291130,G__291131));
})();
var G__291054 = " ";
var G__291055 = (function (){var G__291132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291133 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291132,G__291133) : tailrecursion.hoplon.span.call(null,G__291132,G__291133));
})();
var G__291056 = "]\n  (";
var G__291057 = (function (){var G__291134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291135 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291134,G__291135) : tailrecursion.hoplon.span.call(null,G__291134,G__291135));
})();
var G__291058 = "(";
var G__291059 = (function (){var G__291136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291137 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291136,G__291137) : tailrecursion.hoplon.span.call(null,G__291136,G__291137));
})();
var G__291060 = (function (){var G__291138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291139 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291138,G__291139) : tailrecursion.hoplon.span.call(null,G__291138,G__291139));
})();
var G__291061 = " ";
var G__291062 = (function (){var G__291140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291141 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291140,G__291141) : tailrecursion.hoplon.span.call(null,G__291140,G__291141));
})();
var G__291063 = ")\n       (";
var G__291064 = (function (){var G__291142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291143 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291142,G__291143) : tailrecursion.hoplon.span.call(null,G__291142,G__291143));
})();
var G__291065 = "(";
var G__291066 = (function (){var G__291144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291145 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291144,G__291145) : tailrecursion.hoplon.span.call(null,G__291144,G__291145));
})();
var G__291067 = (function (){var G__291146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291147 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291146,G__291147) : tailrecursion.hoplon.span.call(null,G__291146,G__291147));
})();
var G__291068 = "))))\n\n(";
var G__291069 = (function (){var G__291148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__291149 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291148,G__291149) : tailrecursion.hoplon.span.call(null,G__291148,G__291149));
})();
var G__291070 = (function (){var G__291150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291151 = "more-general-eq?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291150,G__291151) : tailrecursion.hoplon.span.call(null,G__291150,G__291151));
})();
var G__291071 = " [";
var G__291072 = (function (){var G__291152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291153 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291152,G__291153) : tailrecursion.hoplon.span.call(null,G__291152,G__291153));
})();
var G__291073 = " ";
var G__291074 = (function (){var G__291154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291155 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291154,G__291155) : tailrecursion.hoplon.span.call(null,G__291154,G__291155));
})();
var G__291075 = "]\n  (";
var G__291076 = (function (){var G__291156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291157 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291156,G__291157) : tailrecursion.hoplon.span.call(null,G__291156,G__291157));
})();
var G__291077 = "\n    (";
var G__291078 = (function (){var G__291158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291159 = "eq?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291158,G__291159) : tailrecursion.hoplon.span.call(null,G__291158,G__291159));
})();
var G__291079 = " ";
var G__291080 = (function (){var G__291160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291161 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291160,G__291161) : tailrecursion.hoplon.span.call(null,G__291160,G__291161));
})();
var G__291081 = " ";
var G__291082 = (function (){var G__291162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291163 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291162,G__291163) : tailrecursion.hoplon.span.call(null,G__291162,G__291163));
})();
var G__291083 = ") ";
var G__291084 = (function (){var G__291164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291165 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291164,G__291165) : tailrecursion.hoplon.span.call(null,G__291164,G__291165));
})();
var G__291085 = "\n    (";
var G__291086 = (function (){var G__291166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291167 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291166,G__291167) : tailrecursion.hoplon.span.call(null,G__291166,G__291167));
})();
var G__291087 = " ";
var G__291088 = (function (){var G__291168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291169 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291168,G__291169) : tailrecursion.hoplon.span.call(null,G__291168,G__291169));
})();
var G__291089 = ") (";
var G__291090 = (function (){var G__291170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291171 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291170,G__291171) : tailrecursion.hoplon.span.call(null,G__291170,G__291171));
})();
var G__291091 = " ";
var G__291092 = (function (){var G__291172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291173 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291172,G__291173) : tailrecursion.hoplon.span.call(null,G__291172,G__291173));
})();
var G__291093 = ")\n    (";
var G__291094 = (function (){var G__291174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291175 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291174,G__291175) : tailrecursion.hoplon.span.call(null,G__291174,G__291175));
})();
var G__291095 = "(";
var G__291096 = (function (){var G__291176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291177 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291176,G__291177) : tailrecursion.hoplon.span.call(null,G__291176,G__291177));
})();
var G__291097 = " ";
var G__291098 = (function (){var G__291178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291179 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291178,G__291179) : tailrecursion.hoplon.span.call(null,G__291178,G__291179));
})();
var G__291099 = ") \n         (";
var G__291100 = (function (){var G__291180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291181 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291180,G__291181) : tailrecursion.hoplon.span.call(null,G__291180,G__291181));
})();
var G__291101 = " ";
var G__291102 = (function (){var G__291182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291183 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291182,G__291183) : tailrecursion.hoplon.span.call(null,G__291182,G__291183));
})();
var G__291103 = "))\n    (";
var G__291104 = (function (){var G__291184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291185 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291184,G__291185) : tailrecursion.hoplon.span.call(null,G__291184,G__291185));
})();
var G__291105 = "(";
var G__291106 = (function (){var G__291186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291187 = "more-general-eq?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291186,G__291187) : tailrecursion.hoplon.span.call(null,G__291186,G__291187));
})();
var G__291107 = " (";
var G__291108 = (function (){var G__291188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291189 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291188,G__291189) : tailrecursion.hoplon.span.call(null,G__291188,G__291189));
})();
var G__291109 = (function (){var G__291190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291191 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291190,G__291191) : tailrecursion.hoplon.span.call(null,G__291190,G__291191));
})();
var G__291110 = ") (";
var G__291111 = (function (){var G__291192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291193 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291192,G__291193) : tailrecursion.hoplon.span.call(null,G__291192,G__291193));
})();
var G__291112 = (function (){var G__291194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291195 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291194,G__291195) : tailrecursion.hoplon.span.call(null,G__291194,G__291195));
})();
var G__291113 = "))\n         (";
var G__291114 = (function (){var G__291196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291197 = "more-general-eq?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291196,G__291197) : tailrecursion.hoplon.span.call(null,G__291196,G__291197));
})();
var G__291115 = " (";
var G__291116 = (function (){var G__291198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291199 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291198,G__291199) : tailrecursion.hoplon.span.call(null,G__291198,G__291199));
})();
var G__291117 = (function (){var G__291200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291201 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291200,G__291201) : tailrecursion.hoplon.span.call(null,G__291200,G__291201));
})();
var G__291118 = ") (";
var G__291119 = (function (){var G__291202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291203 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291202,G__291203) : tailrecursion.hoplon.span.call(null,G__291202,G__291203));
})();
var G__291120 = (function (){var G__291204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291205 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291204,G__291205) : tailrecursion.hoplon.span.call(null,G__291204,G__291205));
})();
var G__291121 = ")))\n    ";
var G__291122 = (function (){var G__291206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291207 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291206,G__291207) : tailrecursion.hoplon.span.call(null,G__291206,G__291207));
})();
var G__291123 = " ";
var G__291124 = (function (){var G__291208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291209 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291208,G__291209) : tailrecursion.hoplon.span.call(null,G__291208,G__291209));
})();
var G__291125 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$78 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$78(G__291048,G__291049,G__291050,G__291051,G__291052,G__291053,G__291054,G__291055,G__291056,G__291057,G__291058,G__291059,G__291060,G__291061,G__291062,G__291063,G__291064,G__291065,G__291066,G__291067,G__291068,G__291069,G__291070,G__291071,G__291072,G__291073,G__291074,G__291075,G__291076,G__291077,G__291078,G__291079,G__291080,G__291081,G__291082,G__291083,G__291084,G__291085,G__291086,G__291087,G__291088,G__291089,G__291090,G__291091,G__291092,G__291093,G__291094,G__291095,G__291096,G__291097,G__291098,G__291099,G__291100,G__291101,G__291102,G__291103,G__291104,G__291105,G__291106,G__291107,G__291108,G__291109,G__291110,G__291111,G__291112,G__291113,G__291114,G__291115,G__291116,G__291117,G__291118,G__291119,G__291120,G__291121,G__291122,G__291123,G__291124,G__291125) : tailrecursion.hoplon.pre.call(null,G__291048,G__291049,G__291050,G__291051,G__291052,G__291053,G__291054,G__291055,G__291056,G__291057,G__291058,G__291059,G__291060,G__291061,G__291062,G__291063,G__291064,G__291065,G__291066,G__291067,G__291068,G__291069,G__291070,G__291071,G__291072,G__291073,G__291074,G__291075,G__291076,G__291077,G__291078,G__291079,G__291080,G__291081,G__291082,G__291083,G__291084,G__291085,G__291086,G__291087,G__291088,G__291089,G__291090,G__291091,G__291092,G__291093,G__291094,G__291095,G__291096,G__291097,G__291098,G__291099,G__291100,G__291101,G__291102,G__291103,G__291104,G__291105,G__291106,G__291107,G__291108,G__291109,G__291110,G__291111,G__291112,G__291113,G__291114,G__291115,G__291116,G__291117,G__291118,G__291119,G__291120,G__291121,G__291122,G__291123,G__291124,G__291125));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__291046,G__291047) : tailrecursion.hoplon.div.call(null,G__291046,G__291047));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__291045) : tailrecursion.hoplon.div.call(null,G__291045));
})(),(function (){var G__291210 = cljs.core.PersistentArrayMap.EMPTY;
var G__291211 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The idea being if ",(function (){var G__291212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"a"], null);
var G__291213 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291212,G__291213) : tailrecursion.hoplon.markdown.code_node.call(null,G__291212,G__291213));
})()," and ",(function (){var G__291214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"b"], null);
var G__291215 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291214,G__291215) : tailrecursion.hoplon.markdown.code_node.call(null,G__291214,G__291215));
})()," are equal (in this sense) then both ",(function (){var G__291216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"a"], null);
var G__291217 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291216,G__291217) : tailrecursion.hoplon.markdown.code_node.call(null,G__291216,G__291217));
})()," and ",(function (){var G__291218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"b"], null);
var G__291219 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291218,G__291219) : tailrecursion.hoplon.markdown.code_node.call(null,G__291218,G__291219));
})()," must be either: non-empty lists, empty lists, or not lists at all. This function takes care of those three cases in reverse order and if none are the case, it returns false."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291210,G__291211) : tailrecursion.hoplon.markdown.para_node.call(null,G__291210,G__291211));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290880;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290879;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290878;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290877;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_291220 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291221 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291222 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291223 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291224 = cljs.core.PersistentArrayMap.EMPTY;
var G__291225 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Eva Lu Ator types to the interpreter the expression"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291224,G__291225) : tailrecursion.hoplon.markdown.para_node.call(null,G__291224,G__291225));
})(),(function (){var G__291240 = (function (){var G__291241 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__291242 = (function (){var G__291243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__291244 = "(";
var G__291245 = (function (){var G__291249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291250 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291249,G__291250) : tailrecursion.hoplon.span.call(null,G__291249,G__291250));
})();
var G__291246 = (function (){var G__291251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291252 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291251,G__291252) : tailrecursion.hoplon.span.call(null,G__291251,G__291252));
})();
var G__291247 = (function (){var G__291253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291254 = "'abracadabra";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291253,G__291254) : tailrecursion.hoplon.span.call(null,G__291253,G__291254));
})();
var G__291248 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$6 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$6(G__291243,G__291244,G__291245,G__291246,G__291247,G__291248) : tailrecursion.hoplon.pre.call(null,G__291243,G__291244,G__291245,G__291246,G__291247,G__291248));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__291241,G__291242) : tailrecursion.hoplon.div.call(null,G__291241,G__291242));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__291240) : tailrecursion.hoplon.div.call(null,G__291240));
})(),(function (){var G__291255 = cljs.core.PersistentArrayMap.EMPTY;
var G__291256 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To her surprise, the interpreter prints back ",(function (){var G__291257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"quote"], null);
var G__291258 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291257,G__291258) : tailrecursion.hoplon.markdown.code_node.call(null,G__291257,G__291258));
})(),". Explain."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291255,G__291256) : tailrecursion.hoplon.markdown.para_node.call(null,G__291255,G__291256));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291223;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291222;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291221;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291220;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_291259 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291260 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291261 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291262 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291263 = cljs.core.PersistentArrayMap.EMPTY;
var G__291264 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["First let",(function (){var G__291265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__291266 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__291265,G__291266) : tailrecursion.hoplon.markdown.simple_node.call(null,G__291265,G__291266));
})(),"s take a look at what ",(function (){var G__291267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"''abracadabra"], null);
var G__291268 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291267,G__291268) : tailrecursion.hoplon.markdown.code_node.call(null,G__291267,G__291268));
})()," returns."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291263,G__291264) : tailrecursion.hoplon.markdown.para_node.call(null,G__291263,G__291264));
})(),(function (){var G__291312 = (function (){var G__291313 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__291314 = (function (){var G__291315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__291316 = (function (){var G__291334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291335 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291334,G__291335) : tailrecursion.hoplon.span.call(null,G__291334,G__291335));
})();
var G__291317 = (function (){var G__291336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291337 = "'abracadabra";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291336,G__291337) : tailrecursion.hoplon.span.call(null,G__291336,G__291337));
})();
var G__291318 = "\n";
var G__291319 = (function (){var G__291338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291339 = "`";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291338,G__291339) : tailrecursion.hoplon.span.call(null,G__291338,G__291339));
})();
var G__291320 = "(";
var G__291321 = (function (){var G__291340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__291341 = "quote ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291340,G__291341) : tailrecursion.hoplon.span.call(null,G__291340,G__291341));
})();
var G__291322 = (function (){var G__291342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291343 = "abracadabra";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291342,G__291343) : tailrecursion.hoplon.span.call(null,G__291342,G__291343));
})();
var G__291323 = ")\n(";
var G__291324 = (function (){var G__291344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__291345 = "quote ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291344,G__291345) : tailrecursion.hoplon.span.call(null,G__291344,G__291345));
})();
var G__291325 = "(";
var G__291326 = (function (){var G__291346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__291347 = "quote ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291346,G__291347) : tailrecursion.hoplon.span.call(null,G__291346,G__291347));
})();
var G__291327 = (function (){var G__291348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291349 = "abracadabra";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291348,G__291349) : tailrecursion.hoplon.span.call(null,G__291348,G__291349));
})();
var G__291328 = "))\n";
var G__291329 = (function (){var G__291350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291351 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291350,G__291351) : tailrecursion.hoplon.span.call(null,G__291350,G__291351));
})();
var G__291330 = " (";
var G__291331 = (function (){var G__291352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__291353 = "quote ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291352,G__291353) : tailrecursion.hoplon.span.call(null,G__291352,G__291353));
})();
var G__291332 = (function (){var G__291354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291355 = "abracadabra";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291354,G__291355) : tailrecursion.hoplon.span.call(null,G__291354,G__291355));
})();
var G__291333 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__291315,G__291316,G__291317,G__291318,G__291319,G__291320,G__291321,G__291322,G__291323,G__291324,G__291325,G__291326,G__291327,G__291328,G__291329,G__291330,G__291331,G__291332,G__291333) : tailrecursion.hoplon.pre.call(null,G__291315,G__291316,G__291317,G__291318,G__291319,G__291320,G__291321,G__291322,G__291323,G__291324,G__291325,G__291326,G__291327,G__291328,G__291329,G__291330,G__291331,G__291332,G__291333));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__291313,G__291314) : tailrecursion.hoplon.div.call(null,G__291313,G__291314));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__291312) : tailrecursion.hoplon.div.call(null,G__291312));
})(),(function (){var G__291356 = cljs.core.PersistentArrayMap.EMPTY;
var G__291357 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, we see the first thing in this list is the word ",(function (){var G__291358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__291359 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["quote"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__291358,G__291359) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__291358,G__291359));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291356,G__291357) : tailrecursion.hoplon.markdown.para_node.call(null,G__291356,G__291357));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291262;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291261;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291260;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291259;
}})()], 0))], 0))], 0));
var G__288692 = "";
var G__288693 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Example: Symbolic Differentiation"], null),(function (){var _STAR_references_STAR_291360 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291361 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291362 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291363 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291364 = cljs.core.PersistentArrayMap.EMPTY;
var G__291365 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As an illustration of symbol manipulation and a further illustration of data abstraction, consider the design of a procedure that performs symbolic differentiation of algebraic expressions. We would like the procedure to take as arguments an algebraic expression and a variable and to return the derivative of the expression with respect to the variable. For example, if the arguments to the procedure are \\(ax2 + bx + c\\) and \\(x\\), the procedure should return \\(2ax + b\\). Symbolic differentiation is of special historical significance in Lisp. It was one of the motivating examples behind the development of a computer language for symbol manipulation. Furthermore, it marked the beginning of the line of research that led to the development of powerful systems for symbolic mathematical work, which are currently being used by a growing number of applied mathematicians and physicists."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291364,G__291365) : tailrecursion.hoplon.markdown.para_node.call(null,G__291364,G__291365));
})(),(function (){var G__291366 = cljs.core.PersistentArrayMap.EMPTY;
var G__291367 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In developing the symbolic-differentiation program, we will follow the same strategy of data abstraction that we followed in developing the rational-number system of section 2.1.1. That is, we will first define a differentiation algorithm that operates on abstract objects such as ",(function (){var G__291368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__291369 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sums,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__291368,G__291369) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__291368,G__291369));
})()," ",(function (){var G__291370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__291371 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["products,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__291370,G__291371) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__291370,G__291371));
})()," and ",(function (){var G__291372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__291373 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["variables"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__291372,G__291373) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__291372,G__291373));
})()," without worrying about how these are to be represented. Only afterward will we address the representation problem."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291366,G__291367) : tailrecursion.hoplon.markdown.para_node.call(null,G__291366,G__291367));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291363;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291362;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291361;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291360;
}})()], 0));
var G__288694 = "";
var G__288695 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"The Differentiation Program with Abstract Data"], null),(function (){var _STAR_references_STAR_291374 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291375 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291376 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291377 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291378 = cljs.core.PersistentArrayMap.EMPTY;
var G__291379 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In order to keep things simple, we will consider a very simple symbolic-differentiation program that handles expressions that are built up using only the operations of addition and multiplication with two arguments. Differentiation of any such expression can be carried out by applying the following reduction rules:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291378,G__291379) : tailrecursion.hoplon.markdown.para_node.call(null,G__291378,G__291379));
})(),(function (){var G__291380 = cljs.core.PersistentArrayMap.EMPTY;
var G__291381 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{dc}{dx}=& 0 \\text{ for } c \\text{ a constant or a variable different from } x\\\\ \\frac{dx}{dx}=& 1\\\\ \\frac{d(u+v)}{dx}=& \\frac{du}{dx}+\\frac{dv}{dx}\\\\ \\frac{d(uv)}{dx}=& u\\left(\\frac{du}{dx}\\right) + v\\left(\\frac{dv}{dx}\\right)\\\\ \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291380,G__291381) : tailrecursion.hoplon.markdown.para_node.call(null,G__291380,G__291381));
})(),(function (){var G__291382 = cljs.core.PersistentArrayMap.EMPTY;
var G__291383 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Observe that the latter two rules are recursive in nature. That is, to obtain the derivative of a sum we first find the derivatives of the terms and add them. Each of the terms may in turn be an expression that needs to be decomposed. Decomposing into smaller and smaller pieces will eventually produce pieces that are either constants or variables, whose derivatives will be either 0 or 1."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291382,G__291383) : tailrecursion.hoplon.markdown.para_node.call(null,G__291382,G__291383));
})(),(function (){var G__291384 = cljs.core.PersistentArrayMap.EMPTY;
var G__291385 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To embody these rules in a procedure we indulge in a little wishful thinking, as we did in designing the rational-number implementation. If we had a means for representing algebraic expressions, we should be able to tell whether an expression is a sum, a product, a constant, or a variable. We should be able to extract the parts of an expression. For a sum, for example we want to be able to extract the addend (first term) and the augend (second term). We should also be able to construct expressions from parts. Let us assume that we already have procedures to implement the following selectors, constructors, and predicates:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291384,G__291385) : tailrecursion.hoplon.markdown.para_node.call(null,G__291384,G__291385));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291377;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291376;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291375;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291374;
}})(),"",(function (){var G__291386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$class,"table"], null);
var G__291387 = (function (){var G__291388 = cljs.core.PersistentArrayMap.EMPTY;
var G__291389 = (function (){var G__291408 = cljs.core.PersistentArrayMap.EMPTY;
var G__291409 = (function (){var G__291411 = cljs.core.PersistentArrayMap.EMPTY;
var G__291412 = (function (){var _STAR_references_STAR_291413 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291414 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291415 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291416 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291417 = cljs.core.PersistentArrayMap.EMPTY;
var G__291418 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(variable? e)"], null);
var G__291420 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291419,G__291420) : tailrecursion.hoplon.markdown.code_node.call(null,G__291419,G__291420));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291417,G__291418) : tailrecursion.hoplon.markdown.para_node.call(null,G__291417,G__291418));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291416;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291415;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291414;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291413;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__291411,G__291412) : tailrecursion.hoplon.td.call(null,G__291411,G__291412));
})();
var G__291410 = (function (){var G__291421 = cljs.core.PersistentArrayMap.EMPTY;
var G__291422 = (function (){var _STAR_references_STAR_291423 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291424 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291425 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291426 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291427 = cljs.core.PersistentArrayMap.EMPTY;
var G__291428 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Is ",(function (){var G__291429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"e"], null);
var G__291430 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291429,G__291430) : tailrecursion.hoplon.markdown.code_node.call(null,G__291429,G__291430));
})()," a variable?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291427,G__291428) : tailrecursion.hoplon.markdown.para_node.call(null,G__291427,G__291428));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291426;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291425;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291424;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291423;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__291421,G__291422) : tailrecursion.hoplon.td.call(null,G__291421,G__291422));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__291408,G__291409,G__291410) : tailrecursion.hoplon.tr.call(null,G__291408,G__291409,G__291410));
})();
var G__291390 = "";
var G__291391 = (function (){var G__291431 = cljs.core.PersistentArrayMap.EMPTY;
var G__291432 = (function (){var G__291434 = cljs.core.PersistentArrayMap.EMPTY;
var G__291435 = (function (){var _STAR_references_STAR_291436 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291437 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291438 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291439 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291440 = cljs.core.PersistentArrayMap.EMPTY;
var G__291441 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(same-variable? v1 v2)"], null);
var G__291443 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291442,G__291443) : tailrecursion.hoplon.markdown.code_node.call(null,G__291442,G__291443));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291440,G__291441) : tailrecursion.hoplon.markdown.para_node.call(null,G__291440,G__291441));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291439;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291438;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291437;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291436;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__291434,G__291435) : tailrecursion.hoplon.td.call(null,G__291434,G__291435));
})();
var G__291433 = (function (){var G__291444 = cljs.core.PersistentArrayMap.EMPTY;
var G__291445 = (function (){var _STAR_references_STAR_291446 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291447 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291448 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291449 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291450 = cljs.core.PersistentArrayMap.EMPTY;
var G__291451 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Are ",(function (){var G__291452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"v1"], null);
var G__291453 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291452,G__291453) : tailrecursion.hoplon.markdown.code_node.call(null,G__291452,G__291453));
})()," and ",(function (){var G__291454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"v2"], null);
var G__291455 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291454,G__291455) : tailrecursion.hoplon.markdown.code_node.call(null,G__291454,G__291455));
})()," the same variable?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291450,G__291451) : tailrecursion.hoplon.markdown.para_node.call(null,G__291450,G__291451));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291449;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291448;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291447;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291446;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__291444,G__291445) : tailrecursion.hoplon.td.call(null,G__291444,G__291445));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__291431,G__291432,G__291433) : tailrecursion.hoplon.tr.call(null,G__291431,G__291432,G__291433));
})();
var G__291392 = "";
var G__291393 = (function (){var G__291456 = cljs.core.PersistentArrayMap.EMPTY;
var G__291457 = (function (){var G__291459 = cljs.core.PersistentArrayMap.EMPTY;
var G__291460 = (function (){var _STAR_references_STAR_291461 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291462 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291463 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291464 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291465 = cljs.core.PersistentArrayMap.EMPTY;
var G__291466 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(sum? e)"], null);
var G__291468 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291467,G__291468) : tailrecursion.hoplon.markdown.code_node.call(null,G__291467,G__291468));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291465,G__291466) : tailrecursion.hoplon.markdown.para_node.call(null,G__291465,G__291466));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291464;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291463;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291462;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291461;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__291459,G__291460) : tailrecursion.hoplon.td.call(null,G__291459,G__291460));
})();
var G__291458 = (function (){var G__291469 = cljs.core.PersistentArrayMap.EMPTY;
var G__291470 = (function (){var _STAR_references_STAR_291471 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291472 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291473 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291474 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291475 = cljs.core.PersistentArrayMap.EMPTY;
var G__291476 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Is ",(function (){var G__291477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"e"], null);
var G__291478 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291477,G__291478) : tailrecursion.hoplon.markdown.code_node.call(null,G__291477,G__291478));
})()," a sum?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291475,G__291476) : tailrecursion.hoplon.markdown.para_node.call(null,G__291475,G__291476));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291474;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291473;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291472;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291471;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__291469,G__291470) : tailrecursion.hoplon.td.call(null,G__291469,G__291470));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__291456,G__291457,G__291458) : tailrecursion.hoplon.tr.call(null,G__291456,G__291457,G__291458));
})();
var G__291394 = "";
var G__291395 = (function (){var G__291479 = cljs.core.PersistentArrayMap.EMPTY;
var G__291480 = (function (){var G__291482 = cljs.core.PersistentArrayMap.EMPTY;
var G__291483 = (function (){var _STAR_references_STAR_291484 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291485 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291486 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291487 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291488 = cljs.core.PersistentArrayMap.EMPTY;
var G__291489 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(addend e)"], null);
var G__291491 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291490,G__291491) : tailrecursion.hoplon.markdown.code_node.call(null,G__291490,G__291491));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291488,G__291489) : tailrecursion.hoplon.markdown.para_node.call(null,G__291488,G__291489));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291487;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291486;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291485;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291484;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__291482,G__291483) : tailrecursion.hoplon.td.call(null,G__291482,G__291483));
})();
var G__291481 = (function (){var G__291492 = cljs.core.PersistentArrayMap.EMPTY;
var G__291493 = (function (){var _STAR_references_STAR_291494 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291495 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291496 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291497 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291498 = cljs.core.PersistentArrayMap.EMPTY;
var G__291499 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Addend of the sum ",(function (){var G__291500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"e"], null);
var G__291501 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291500,G__291501) : tailrecursion.hoplon.markdown.code_node.call(null,G__291500,G__291501));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291498,G__291499) : tailrecursion.hoplon.markdown.para_node.call(null,G__291498,G__291499));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291497;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291496;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291495;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291494;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__291492,G__291493) : tailrecursion.hoplon.td.call(null,G__291492,G__291493));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__291479,G__291480,G__291481) : tailrecursion.hoplon.tr.call(null,G__291479,G__291480,G__291481));
})();
var G__291396 = "";
var G__291397 = (function (){var G__291502 = cljs.core.PersistentArrayMap.EMPTY;
var G__291503 = (function (){var G__291505 = cljs.core.PersistentArrayMap.EMPTY;
var G__291506 = (function (){var _STAR_references_STAR_291507 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291508 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291509 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291510 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291511 = cljs.core.PersistentArrayMap.EMPTY;
var G__291512 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(augend e)"], null);
var G__291514 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291513,G__291514) : tailrecursion.hoplon.markdown.code_node.call(null,G__291513,G__291514));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291511,G__291512) : tailrecursion.hoplon.markdown.para_node.call(null,G__291511,G__291512));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291510;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291509;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291508;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291507;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__291505,G__291506) : tailrecursion.hoplon.td.call(null,G__291505,G__291506));
})();
var G__291504 = (function (){var G__291515 = cljs.core.PersistentArrayMap.EMPTY;
var G__291516 = (function (){var _STAR_references_STAR_291517 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291518 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291519 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291520 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291521 = cljs.core.PersistentArrayMap.EMPTY;
var G__291522 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Augend of the sum ",(function (){var G__291523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"e"], null);
var G__291524 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291523,G__291524) : tailrecursion.hoplon.markdown.code_node.call(null,G__291523,G__291524));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291521,G__291522) : tailrecursion.hoplon.markdown.para_node.call(null,G__291521,G__291522));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291520;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291519;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291518;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291517;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__291515,G__291516) : tailrecursion.hoplon.td.call(null,G__291515,G__291516));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__291502,G__291503,G__291504) : tailrecursion.hoplon.tr.call(null,G__291502,G__291503,G__291504));
})();
var G__291398 = "";
var G__291399 = (function (){var G__291525 = cljs.core.PersistentArrayMap.EMPTY;
var G__291526 = (function (){var G__291528 = cljs.core.PersistentArrayMap.EMPTY;
var G__291529 = (function (){var _STAR_references_STAR_291530 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291531 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291532 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291533 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291534 = cljs.core.PersistentArrayMap.EMPTY;
var G__291535 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(make-sum e)"], null);
var G__291537 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291536,G__291537) : tailrecursion.hoplon.markdown.code_node.call(null,G__291536,G__291537));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291534,G__291535) : tailrecursion.hoplon.markdown.para_node.call(null,G__291534,G__291535));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291533;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291532;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291531;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291530;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__291528,G__291529) : tailrecursion.hoplon.td.call(null,G__291528,G__291529));
})();
var G__291527 = (function (){var G__291538 = cljs.core.PersistentArrayMap.EMPTY;
var G__291539 = (function (){var _STAR_references_STAR_291540 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291541 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291542 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291543 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291544 = cljs.core.PersistentArrayMap.EMPTY;
var G__291545 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Construct the sum of ",(function (){var G__291546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"a1"], null);
var G__291547 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291546,G__291547) : tailrecursion.hoplon.markdown.code_node.call(null,G__291546,G__291547));
})()," and ",(function (){var G__291548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"a2"], null);
var G__291549 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291548,G__291549) : tailrecursion.hoplon.markdown.code_node.call(null,G__291548,G__291549));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291544,G__291545) : tailrecursion.hoplon.markdown.para_node.call(null,G__291544,G__291545));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291543;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291542;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291541;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291540;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__291538,G__291539) : tailrecursion.hoplon.td.call(null,G__291538,G__291539));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__291525,G__291526,G__291527) : tailrecursion.hoplon.tr.call(null,G__291525,G__291526,G__291527));
})();
var G__291400 = "";
var G__291401 = (function (){var G__291550 = cljs.core.PersistentArrayMap.EMPTY;
var G__291551 = (function (){var G__291553 = cljs.core.PersistentArrayMap.EMPTY;
var G__291554 = (function (){var _STAR_references_STAR_291555 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291556 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291557 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291558 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291559 = cljs.core.PersistentArrayMap.EMPTY;
var G__291560 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(product? e)"], null);
var G__291562 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291561,G__291562) : tailrecursion.hoplon.markdown.code_node.call(null,G__291561,G__291562));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291559,G__291560) : tailrecursion.hoplon.markdown.para_node.call(null,G__291559,G__291560));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291558;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291557;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291556;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291555;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__291553,G__291554) : tailrecursion.hoplon.td.call(null,G__291553,G__291554));
})();
var G__291552 = (function (){var G__291563 = cljs.core.PersistentArrayMap.EMPTY;
var G__291564 = (function (){var _STAR_references_STAR_291565 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291566 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291567 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291568 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291569 = cljs.core.PersistentArrayMap.EMPTY;
var G__291570 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Is ",(function (){var G__291571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"e"], null);
var G__291572 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291571,G__291572) : tailrecursion.hoplon.markdown.code_node.call(null,G__291571,G__291572));
})()," a product?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291569,G__291570) : tailrecursion.hoplon.markdown.para_node.call(null,G__291569,G__291570));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291568;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291567;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291566;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291565;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__291563,G__291564) : tailrecursion.hoplon.td.call(null,G__291563,G__291564));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__291550,G__291551,G__291552) : tailrecursion.hoplon.tr.call(null,G__291550,G__291551,G__291552));
})();
var G__291402 = "";
var G__291403 = (function (){var G__291573 = cljs.core.PersistentArrayMap.EMPTY;
var G__291574 = (function (){var G__291576 = cljs.core.PersistentArrayMap.EMPTY;
var G__291577 = (function (){var _STAR_references_STAR_291578 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291579 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291580 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291581 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291582 = cljs.core.PersistentArrayMap.EMPTY;
var G__291583 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(multiplier e)"], null);
var G__291585 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291584,G__291585) : tailrecursion.hoplon.markdown.code_node.call(null,G__291584,G__291585));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291582,G__291583) : tailrecursion.hoplon.markdown.para_node.call(null,G__291582,G__291583));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291581;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291580;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291579;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291578;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__291576,G__291577) : tailrecursion.hoplon.td.call(null,G__291576,G__291577));
})();
var G__291575 = (function (){var G__291586 = cljs.core.PersistentArrayMap.EMPTY;
var G__291587 = (function (){var _STAR_references_STAR_291588 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291589 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291590 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291591 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291592 = cljs.core.PersistentArrayMap.EMPTY;
var G__291593 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Multiplier of the product ",(function (){var G__291594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"e"], null);
var G__291595 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291594,G__291595) : tailrecursion.hoplon.markdown.code_node.call(null,G__291594,G__291595));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291592,G__291593) : tailrecursion.hoplon.markdown.para_node.call(null,G__291592,G__291593));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291591;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291590;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291589;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291588;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__291586,G__291587) : tailrecursion.hoplon.td.call(null,G__291586,G__291587));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__291573,G__291574,G__291575) : tailrecursion.hoplon.tr.call(null,G__291573,G__291574,G__291575));
})();
var G__291404 = "";
var G__291405 = (function (){var G__291596 = cljs.core.PersistentArrayMap.EMPTY;
var G__291597 = (function (){var G__291599 = cljs.core.PersistentArrayMap.EMPTY;
var G__291600 = (function (){var _STAR_references_STAR_291601 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291602 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291603 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291604 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291605 = cljs.core.PersistentArrayMap.EMPTY;
var G__291606 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(multiplicand e)"], null);
var G__291608 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291607,G__291608) : tailrecursion.hoplon.markdown.code_node.call(null,G__291607,G__291608));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291605,G__291606) : tailrecursion.hoplon.markdown.para_node.call(null,G__291605,G__291606));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291604;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291603;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291602;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291601;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__291599,G__291600) : tailrecursion.hoplon.td.call(null,G__291599,G__291600));
})();
var G__291598 = (function (){var G__291609 = cljs.core.PersistentArrayMap.EMPTY;
var G__291610 = (function (){var _STAR_references_STAR_291611 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291612 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291613 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291614 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291615 = cljs.core.PersistentArrayMap.EMPTY;
var G__291616 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Multiplicand of the product ",(function (){var G__291617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"e"], null);
var G__291618 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291617,G__291618) : tailrecursion.hoplon.markdown.code_node.call(null,G__291617,G__291618));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291615,G__291616) : tailrecursion.hoplon.markdown.para_node.call(null,G__291615,G__291616));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291614;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291613;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291612;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291611;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__291609,G__291610) : tailrecursion.hoplon.td.call(null,G__291609,G__291610));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__291596,G__291597,G__291598) : tailrecursion.hoplon.tr.call(null,G__291596,G__291597,G__291598));
})();
var G__291406 = "";
var G__291407 = (function (){var G__291619 = cljs.core.PersistentArrayMap.EMPTY;
var G__291620 = (function (){var G__291622 = cljs.core.PersistentArrayMap.EMPTY;
var G__291623 = (function (){var _STAR_references_STAR_291624 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291625 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291626 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291627 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291628 = cljs.core.PersistentArrayMap.EMPTY;
var G__291629 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(make-product m1 m2)"], null);
var G__291631 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291630,G__291631) : tailrecursion.hoplon.markdown.code_node.call(null,G__291630,G__291631));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291628,G__291629) : tailrecursion.hoplon.markdown.para_node.call(null,G__291628,G__291629));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291627;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291626;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291625;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291624;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__291622,G__291623) : tailrecursion.hoplon.td.call(null,G__291622,G__291623));
})();
var G__291621 = (function (){var G__291632 = cljs.core.PersistentArrayMap.EMPTY;
var G__291633 = (function (){var _STAR_references_STAR_291634 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291635 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291636 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291637 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291638 = cljs.core.PersistentArrayMap.EMPTY;
var G__291639 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Construct the product of ",(function (){var G__291640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"m1"], null);
var G__291641 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291640,G__291641) : tailrecursion.hoplon.markdown.code_node.call(null,G__291640,G__291641));
})()," and ",(function (){var G__291642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"m2"], null);
var G__291643 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291642,G__291643) : tailrecursion.hoplon.markdown.code_node.call(null,G__291642,G__291643));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291638,G__291639) : tailrecursion.hoplon.markdown.para_node.call(null,G__291638,G__291639));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291637;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291636;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291635;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291634;
}})();
return (tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.td.cljs$core$IFn$_invoke$arity$2(G__291632,G__291633) : tailrecursion.hoplon.td.call(null,G__291632,G__291633));
})();
return (tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3 ? tailrecursion.hoplon.tr.cljs$core$IFn$_invoke$arity$3(G__291619,G__291620,G__291621) : tailrecursion.hoplon.tr.call(null,G__291619,G__291620,G__291621));
})();
return (tailrecursion.hoplon.tbody.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.tbody.cljs$core$IFn$_invoke$arity$20(G__291388,G__291389,G__291390,G__291391,G__291392,G__291393,G__291394,G__291395,G__291396,G__291397,G__291398,G__291399,G__291400,G__291401,G__291402,G__291403,G__291404,G__291405,G__291406,G__291407) : tailrecursion.hoplon.tbody.call(null,G__291388,G__291389,G__291390,G__291391,G__291392,G__291393,G__291394,G__291395,G__291396,G__291397,G__291398,G__291399,G__291400,G__291401,G__291402,G__291403,G__291404,G__291405,G__291406,G__291407));
})();
return (tailrecursion.hoplon.table.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.table.cljs$core$IFn$_invoke$arity$2(G__291386,G__291387) : tailrecursion.hoplon.table.call(null,G__291386,G__291387));
})(),"",(function (){var _STAR_references_STAR_291644 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291645 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291646 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291647 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291648 = cljs.core.PersistentArrayMap.EMPTY;
var G__291649 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using these, and the primitive predicate ",(function (){var G__291650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"number?"], null);
var G__291651 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291650,G__291651) : tailrecursion.hoplon.markdown.code_node.call(null,G__291650,G__291651));
})(),", which identifies numbers, we can express the differentiation rules as the following procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291648,G__291649) : tailrecursion.hoplon.markdown.para_node.call(null,G__291648,G__291649));
})(),(function (){var G__291847 = (function (){var G__291848 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__291849 = (function (){var G__291850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__291851 = "(";
var G__291852 = (function (){var G__291947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__291948 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291947,G__291948) : tailrecursion.hoplon.span.call(null,G__291947,G__291948));
})();
var G__291853 = (function (){var G__291949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291950 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291949,G__291950) : tailrecursion.hoplon.span.call(null,G__291949,G__291950));
})();
var G__291854 = " [";
var G__291855 = (function (){var G__291951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291952 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291951,G__291952) : tailrecursion.hoplon.span.call(null,G__291951,G__291952));
})();
var G__291856 = " ";
var G__291857 = (function (){var G__291953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291954 = "var";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291953,G__291954) : tailrecursion.hoplon.span.call(null,G__291953,G__291954));
})();
var G__291858 = "]\n  (";
var G__291859 = (function (){var G__291955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291956 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291955,G__291956) : tailrecursion.hoplon.span.call(null,G__291955,G__291956));
})();
var G__291860 = "(";
var G__291861 = (function (){var G__291957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291958 = "number?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291957,G__291958) : tailrecursion.hoplon.span.call(null,G__291957,G__291958));
})();
var G__291862 = " ";
var G__291863 = (function (){var G__291959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291960 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291959,G__291960) : tailrecursion.hoplon.span.call(null,G__291959,G__291960));
})();
var G__291864 = ") ";
var G__291865 = (function (){var G__291961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291962 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291961,G__291962) : tailrecursion.hoplon.span.call(null,G__291961,G__291962));
})();
var G__291866 = "\n        (";
var G__291867 = (function (){var G__291963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291964 = "variable?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291963,G__291964) : tailrecursion.hoplon.span.call(null,G__291963,G__291964));
})();
var G__291868 = " ";
var G__291869 = (function (){var G__291965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291966 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291965,G__291966) : tailrecursion.hoplon.span.call(null,G__291965,G__291966));
})();
var G__291870 = ") (";
var G__291871 = (function (){var G__291967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__291968 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291967,G__291968) : tailrecursion.hoplon.span.call(null,G__291967,G__291968));
})();
var G__291872 = "(";
var G__291873 = (function (){var G__291969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291970 = "same-variable?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291969,G__291970) : tailrecursion.hoplon.span.call(null,G__291969,G__291970));
})();
var G__291874 = " ";
var G__291875 = (function (){var G__291971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291972 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291971,G__291972) : tailrecursion.hoplon.span.call(null,G__291971,G__291972));
})();
var G__291876 = " ";
var G__291877 = (function (){var G__291973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291974 = "var";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291973,G__291974) : tailrecursion.hoplon.span.call(null,G__291973,G__291974));
})();
var G__291878 = ") \n                            ";
var G__291879 = (function (){var G__291975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291976 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291975,G__291976) : tailrecursion.hoplon.span.call(null,G__291975,G__291976));
})();
var G__291880 = " \n                            ";
var G__291881 = (function (){var G__291977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291978 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291977,G__291978) : tailrecursion.hoplon.span.call(null,G__291977,G__291978));
})();
var G__291882 = ")\n        (";
var G__291883 = (function (){var G__291979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291980 = "sum?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291979,G__291980) : tailrecursion.hoplon.span.call(null,G__291979,G__291980));
})();
var G__291884 = " ";
var G__291885 = (function (){var G__291981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291982 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291981,G__291982) : tailrecursion.hoplon.span.call(null,G__291981,G__291982));
})();
var G__291886 = ") (";
var G__291887 = (function (){var G__291983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291984 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291983,G__291984) : tailrecursion.hoplon.span.call(null,G__291983,G__291984));
})();
var G__291888 = "\n                     (";
var G__291889 = (function (){var G__291985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291986 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291985,G__291986) : tailrecursion.hoplon.span.call(null,G__291985,G__291986));
})();
var G__291890 = " (";
var G__291891 = (function (){var G__291987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291988 = "addend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291987,G__291988) : tailrecursion.hoplon.span.call(null,G__291987,G__291988));
})();
var G__291892 = " ";
var G__291893 = (function (){var G__291989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291990 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291989,G__291990) : tailrecursion.hoplon.span.call(null,G__291989,G__291990));
})();
var G__291894 = ") ";
var G__291895 = (function (){var G__291991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291992 = "var";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291991,G__291992) : tailrecursion.hoplon.span.call(null,G__291991,G__291992));
})();
var G__291896 = ")\n                     (";
var G__291897 = (function (){var G__291993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291994 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291993,G__291994) : tailrecursion.hoplon.span.call(null,G__291993,G__291994));
})();
var G__291898 = " (";
var G__291899 = (function (){var G__291995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291996 = "augend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291995,G__291996) : tailrecursion.hoplon.span.call(null,G__291995,G__291996));
})();
var G__291900 = " ";
var G__291901 = (function (){var G__291997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291998 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291997,G__291998) : tailrecursion.hoplon.span.call(null,G__291997,G__291998));
})();
var G__291902 = ") ";
var G__291903 = (function (){var G__291999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292000 = "var";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291999,G__292000) : tailrecursion.hoplon.span.call(null,G__291999,G__292000));
})();
var G__291904 = "))\n        (";
var G__291905 = (function (){var G__292001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292002 = "product?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292001,G__292002) : tailrecursion.hoplon.span.call(null,G__292001,G__292002));
})();
var G__291906 = " ";
var G__291907 = (function (){var G__292003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292004 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292003,G__292004) : tailrecursion.hoplon.span.call(null,G__292003,G__292004));
})();
var G__291908 = ") (";
var G__291909 = (function (){var G__292005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292006 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292005,G__292006) : tailrecursion.hoplon.span.call(null,G__292005,G__292006));
})();
var G__291910 = "\n                         (";
var G__291911 = (function (){var G__292007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292008 = "make-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292007,G__292008) : tailrecursion.hoplon.span.call(null,G__292007,G__292008));
})();
var G__291912 = " (";
var G__291913 = (function (){var G__292009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292010 = "multiplier";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292009,G__292010) : tailrecursion.hoplon.span.call(null,G__292009,G__292010));
})();
var G__291914 = " ";
var G__291915 = (function (){var G__292011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292012 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292011,G__292012) : tailrecursion.hoplon.span.call(null,G__292011,G__292012));
})();
var G__291916 = ")\n                                       (";
var G__291917 = (function (){var G__292013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292014 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292013,G__292014) : tailrecursion.hoplon.span.call(null,G__292013,G__292014));
})();
var G__291918 = " (";
var G__291919 = (function (){var G__292015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292016 = "multiplicand";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292015,G__292016) : tailrecursion.hoplon.span.call(null,G__292015,G__292016));
})();
var G__291920 = " ";
var G__291921 = (function (){var G__292017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292018 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292017,G__292018) : tailrecursion.hoplon.span.call(null,G__292017,G__292018));
})();
var G__291922 = ") ";
var G__291923 = (function (){var G__292019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292020 = "var";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292019,G__292020) : tailrecursion.hoplon.span.call(null,G__292019,G__292020));
})();
var G__291924 = "))\n                         (";
var G__291925 = (function (){var G__292021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292022 = "make-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292021,G__292022) : tailrecursion.hoplon.span.call(null,G__292021,G__292022));
})();
var G__291926 = " (";
var G__291927 = (function (){var G__292023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292024 = "multiplicand";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292023,G__292024) : tailrecursion.hoplon.span.call(null,G__292023,G__292024));
})();
var G__291928 = " ";
var G__291929 = (function (){var G__292025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292026 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292025,G__292026) : tailrecursion.hoplon.span.call(null,G__292025,G__292026));
})();
var G__291930 = ")\n                                       (";
var G__291931 = (function (){var G__292027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292028 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292027,G__292028) : tailrecursion.hoplon.span.call(null,G__292027,G__292028));
})();
var G__291932 = " (";
var G__291933 = (function (){var G__292029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292030 = "multiplier";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292029,G__292030) : tailrecursion.hoplon.span.call(null,G__292029,G__292030));
})();
var G__291934 = " ";
var G__291935 = (function (){var G__292031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292032 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292031,G__292032) : tailrecursion.hoplon.span.call(null,G__292031,G__292032));
})();
var G__291936 = ") ";
var G__291937 = (function (){var G__292033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292034 = "var";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292033,G__292034) : tailrecursion.hoplon.span.call(null,G__292033,G__292034));
})();
var G__291938 = ")))\n        ";
var G__291939 = (function (){var G__292035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292036 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292035,G__292036) : tailrecursion.hoplon.span.call(null,G__292035,G__292036));
})();
var G__291940 = " (";
var G__291941 = (function (){var G__292037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292038 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292037,G__292038) : tailrecursion.hoplon.span.call(null,G__292037,G__292038));
})();
var G__291942 = " (";
var G__291943 = (function (){var G__292039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292040 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292039,G__292040) : tailrecursion.hoplon.span.call(null,G__292039,G__292040));
})();
var G__291944 = " ";
var G__291945 = (function (){var G__292041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__292042 = "\"Unknown expression type -- DERIV\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292041,G__292042) : tailrecursion.hoplon.span.call(null,G__292041,G__292042));
})();
var G__291946 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$97 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$97(G__291850,G__291851,G__291852,G__291853,G__291854,G__291855,G__291856,G__291857,G__291858,G__291859,G__291860,G__291861,G__291862,G__291863,G__291864,G__291865,G__291866,G__291867,G__291868,G__291869,G__291870,G__291871,G__291872,G__291873,G__291874,G__291875,G__291876,G__291877,G__291878,G__291879,G__291880,G__291881,G__291882,G__291883,G__291884,G__291885,G__291886,G__291887,G__291888,G__291889,G__291890,G__291891,G__291892,G__291893,G__291894,G__291895,G__291896,G__291897,G__291898,G__291899,G__291900,G__291901,G__291902,G__291903,G__291904,G__291905,G__291906,G__291907,G__291908,G__291909,G__291910,G__291911,G__291912,G__291913,G__291914,G__291915,G__291916,G__291917,G__291918,G__291919,G__291920,G__291921,G__291922,G__291923,G__291924,G__291925,G__291926,G__291927,G__291928,G__291929,G__291930,G__291931,G__291932,G__291933,G__291934,G__291935,G__291936,G__291937,G__291938,G__291939,G__291940,G__291941,G__291942,G__291943,G__291944,G__291945,G__291946) : tailrecursion.hoplon.pre.call(null,G__291850,G__291851,G__291852,G__291853,G__291854,G__291855,G__291856,G__291857,G__291858,G__291859,G__291860,G__291861,G__291862,G__291863,G__291864,G__291865,G__291866,G__291867,G__291868,G__291869,G__291870,G__291871,G__291872,G__291873,G__291874,G__291875,G__291876,G__291877,G__291878,G__291879,G__291880,G__291881,G__291882,G__291883,G__291884,G__291885,G__291886,G__291887,G__291888,G__291889,G__291890,G__291891,G__291892,G__291893,G__291894,G__291895,G__291896,G__291897,G__291898,G__291899,G__291900,G__291901,G__291902,G__291903,G__291904,G__291905,G__291906,G__291907,G__291908,G__291909,G__291910,G__291911,G__291912,G__291913,G__291914,G__291915,G__291916,G__291917,G__291918,G__291919,G__291920,G__291921,G__291922,G__291923,G__291924,G__291925,G__291926,G__291927,G__291928,G__291929,G__291930,G__291931,G__291932,G__291933,G__291934,G__291935,G__291936,G__291937,G__291938,G__291939,G__291940,G__291941,G__291942,G__291943,G__291944,G__291945,G__291946));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__291848,G__291849) : tailrecursion.hoplon.div.call(null,G__291848,G__291849));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__291847) : tailrecursion.hoplon.div.call(null,G__291847));
})(),(function (){var G__292043 = cljs.core.PersistentArrayMap.EMPTY;
var G__292044 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This ",(function (){var G__292045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"deriv"], null);
var G__292046 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292045,G__292046) : tailrecursion.hoplon.markdown.code_node.call(null,G__292045,G__292046));
})()," procedure inforporates the complete differentiation algorithm. Since it is expressed in terms of abstract data, it will work no matter how we choose to represent algebraic expressions, as long as we design a proper set of selectors and constructors. This is the issue we must address next."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292043,G__292044) : tailrecursion.hoplon.markdown.para_node.call(null,G__292043,G__292044));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291647;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291646;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291645;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291644;
}})()], 0));
var G__288696 = "";
var G__288697 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Representing Algebraic Expressions"], null),(function (){var _STAR_references_STAR_292047 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292048 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292049 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292050 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292051 = cljs.core.PersistentArrayMap.EMPTY;
var G__292052 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can imagine ways to use list structure to represent algebraic expressions. For example, we could use lists of symbols that mirror the usual algebraic notation, representing \\(ax+b\\) as the list ",(function (){var G__292053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(a * x +\nb)"], null);
var G__292054 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292053,G__292054) : tailrecursion.hoplon.markdown.code_node.call(null,G__292053,G__292054));
})(),". However, one especially straightforward choice is to use the same parenthesized prefix notation that Lisp uses for combinations: that is, to represent \\(ax+b\\) as ",(function (){var G__292055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(+ (* a x) b)"], null);
var G__292056 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292055,G__292056) : tailrecursion.hoplon.markdown.code_node.call(null,G__292055,G__292056));
})(),". Then our data representation for the differentiation problem is as follows:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292051,G__292052) : tailrecursion.hoplon.markdown.para_node.call(null,G__292051,G__292052));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292050;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292049;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292048;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292047;
}})(),"",(function (){var G__292057 = cljs.core.PersistentArrayMap.EMPTY;
var G__292058 = (function (){var G__292076 = cljs.core.PersistentArrayMap.EMPTY;
var G__292077 = (function (){var _STAR_references_STAR_292078 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292079 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292080 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292081 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292082 = cljs.core.PersistentArrayMap.EMPTY;
var G__292083 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The variables are symbols. They are identified by the primitive predicate ",(function (){var G__292084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"symbol?"], null);
var G__292085 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292084,G__292085) : tailrecursion.hoplon.markdown.code_node.call(null,G__292084,G__292085));
})(),": "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292082,G__292083) : tailrecursion.hoplon.markdown.para_node.call(null,G__292082,G__292083));
})(),(function (){var G__292108 = (function (){var G__292109 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__292110 = (function (){var G__292111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__292112 = "(";
var G__292113 = (function (){var G__292121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292122 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292121,G__292122) : tailrecursion.hoplon.span.call(null,G__292121,G__292122));
})();
var G__292114 = (function (){var G__292123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292124 = "variable?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292123,G__292124) : tailrecursion.hoplon.span.call(null,G__292123,G__292124));
})();
var G__292115 = " [";
var G__292116 = (function (){var G__292125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292126 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292125,G__292126) : tailrecursion.hoplon.span.call(null,G__292125,G__292126));
})();
var G__292117 = "]\n  (";
var G__292118 = (function (){var G__292127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292128 = "symbol? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292127,G__292128) : tailrecursion.hoplon.span.call(null,G__292127,G__292128));
})();
var G__292119 = (function (){var G__292129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292130 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292129,G__292130) : tailrecursion.hoplon.span.call(null,G__292129,G__292130));
})();
var G__292120 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10(G__292111,G__292112,G__292113,G__292114,G__292115,G__292116,G__292117,G__292118,G__292119,G__292120) : tailrecursion.hoplon.pre.call(null,G__292111,G__292112,G__292113,G__292114,G__292115,G__292116,G__292117,G__292118,G__292119,G__292120));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__292109,G__292110) : tailrecursion.hoplon.div.call(null,G__292109,G__292110));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__292108) : tailrecursion.hoplon.div.call(null,G__292108));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292081;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292080;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292079;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292078;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__292076,G__292077) : tailrecursion.hoplon.li.call(null,G__292076,G__292077));
})();
var G__292059 = "";
var G__292060 = (function (){var G__292131 = cljs.core.PersistentArrayMap.EMPTY;
var G__292132 = (function (){var _STAR_references_STAR_292133 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292134 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292135 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292136 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292137 = cljs.core.PersistentArrayMap.EMPTY;
var G__292138 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Two variables are the same if the symbols representing them are ",(function (){var G__292139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"="], null);
var G__292140 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292139,G__292140) : tailrecursion.hoplon.markdown.code_node.call(null,G__292139,G__292140));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292137,G__292138) : tailrecursion.hoplon.markdown.para_node.call(null,G__292137,G__292138));
})(),(function (){var G__292191 = (function (){var G__292192 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__292193 = (function (){var G__292194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__292195 = "(";
var G__292196 = (function (){var G__292218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292219 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292218,G__292219) : tailrecursion.hoplon.span.call(null,G__292218,G__292219));
})();
var G__292197 = (function (){var G__292220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292221 = "same-variable?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292220,G__292221) : tailrecursion.hoplon.span.call(null,G__292220,G__292221));
})();
var G__292198 = " [";
var G__292199 = (function (){var G__292222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292223 = "v1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292222,G__292223) : tailrecursion.hoplon.span.call(null,G__292222,G__292223));
})();
var G__292200 = " ";
var G__292201 = (function (){var G__292224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292225 = "v2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292224,G__292225) : tailrecursion.hoplon.span.call(null,G__292224,G__292225));
})();
var G__292202 = "]\n  (";
var G__292203 = (function (){var G__292226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292227 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292226,G__292227) : tailrecursion.hoplon.span.call(null,G__292226,G__292227));
})();
var G__292204 = "(";
var G__292205 = (function (){var G__292228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292229 = "variable?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292228,G__292229) : tailrecursion.hoplon.span.call(null,G__292228,G__292229));
})();
var G__292206 = " ";
var G__292207 = (function (){var G__292230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292231 = "v1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292230,G__292231) : tailrecursion.hoplon.span.call(null,G__292230,G__292231));
})();
var G__292208 = ")\n       (";
var G__292209 = (function (){var G__292232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292233 = "variable?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292232,G__292233) : tailrecursion.hoplon.span.call(null,G__292232,G__292233));
})();
var G__292210 = " ";
var G__292211 = (function (){var G__292234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292235 = "v2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292234,G__292235) : tailrecursion.hoplon.span.call(null,G__292234,G__292235));
})();
var G__292212 = ")\n       (";
var G__292213 = (function (){var G__292236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292237 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292236,G__292237) : tailrecursion.hoplon.span.call(null,G__292236,G__292237));
})();
var G__292214 = (function (){var G__292238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292239 = "v1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292238,G__292239) : tailrecursion.hoplon.span.call(null,G__292238,G__292239));
})();
var G__292215 = " ";
var G__292216 = (function (){var G__292240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292241 = "v2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292240,G__292241) : tailrecursion.hoplon.span.call(null,G__292240,G__292241));
})();
var G__292217 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24(G__292194,G__292195,G__292196,G__292197,G__292198,G__292199,G__292200,G__292201,G__292202,G__292203,G__292204,G__292205,G__292206,G__292207,G__292208,G__292209,G__292210,G__292211,G__292212,G__292213,G__292214,G__292215,G__292216,G__292217) : tailrecursion.hoplon.pre.call(null,G__292194,G__292195,G__292196,G__292197,G__292198,G__292199,G__292200,G__292201,G__292202,G__292203,G__292204,G__292205,G__292206,G__292207,G__292208,G__292209,G__292210,G__292211,G__292212,G__292213,G__292214,G__292215,G__292216,G__292217));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__292192,G__292193) : tailrecursion.hoplon.div.call(null,G__292192,G__292193));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__292191) : tailrecursion.hoplon.div.call(null,G__292191));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292136;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292135;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292134;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292133;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__292131,G__292132) : tailrecursion.hoplon.li.call(null,G__292131,G__292132));
})();
var G__292061 = "";
var G__292062 = (function (){var G__292242 = cljs.core.PersistentArrayMap.EMPTY;
var G__292243 = (function (){var _STAR_references_STAR_292244 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292245 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292246 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292247 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292248 = cljs.core.PersistentArrayMap.EMPTY;
var G__292249 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sums and products are constructed as lists:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292248,G__292249) : tailrecursion.hoplon.markdown.para_node.call(null,G__292248,G__292249));
})(),(function (){var G__292314 = (function (){var G__292315 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__292316 = (function (){var G__292317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__292318 = "(";
var G__292319 = (function (){var G__292347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292348 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292347,G__292348) : tailrecursion.hoplon.span.call(null,G__292347,G__292348));
})();
var G__292320 = (function (){var G__292349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292350 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292349,G__292350) : tailrecursion.hoplon.span.call(null,G__292349,G__292350));
})();
var G__292321 = " [";
var G__292322 = (function (){var G__292351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292352 = "a1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292351,G__292352) : tailrecursion.hoplon.span.call(null,G__292351,G__292352));
})();
var G__292323 = " ";
var G__292324 = (function (){var G__292353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292354 = "a2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292353,G__292354) : tailrecursion.hoplon.span.call(null,G__292353,G__292354));
})();
var G__292325 = "]\n  (";
var G__292326 = (function (){var G__292355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292356 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292355,G__292356) : tailrecursion.hoplon.span.call(null,G__292355,G__292356));
})();
var G__292327 = (function (){var G__292357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292358 = "'+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292357,G__292358) : tailrecursion.hoplon.span.call(null,G__292357,G__292358));
})();
var G__292328 = " ";
var G__292329 = (function (){var G__292359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292360 = "a1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292359,G__292360) : tailrecursion.hoplon.span.call(null,G__292359,G__292360));
})();
var G__292330 = " ";
var G__292331 = (function (){var G__292361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292362 = "a2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292361,G__292362) : tailrecursion.hoplon.span.call(null,G__292361,G__292362));
})();
var G__292332 = "))\n(";
var G__292333 = (function (){var G__292363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292364 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292363,G__292364) : tailrecursion.hoplon.span.call(null,G__292363,G__292364));
})();
var G__292334 = (function (){var G__292365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292366 = "make-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292365,G__292366) : tailrecursion.hoplon.span.call(null,G__292365,G__292366));
})();
var G__292335 = " [";
var G__292336 = (function (){var G__292367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292368 = "m1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292367,G__292368) : tailrecursion.hoplon.span.call(null,G__292367,G__292368));
})();
var G__292337 = " ";
var G__292338 = (function (){var G__292369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292370 = "m2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292369,G__292370) : tailrecursion.hoplon.span.call(null,G__292369,G__292370));
})();
var G__292339 = "]\n  (";
var G__292340 = (function (){var G__292371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292372 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292371,G__292372) : tailrecursion.hoplon.span.call(null,G__292371,G__292372));
})();
var G__292341 = (function (){var G__292373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292374 = "'*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292373,G__292374) : tailrecursion.hoplon.span.call(null,G__292373,G__292374));
})();
var G__292342 = " ";
var G__292343 = (function (){var G__292375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292376 = "m1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292375,G__292376) : tailrecursion.hoplon.span.call(null,G__292375,G__292376));
})();
var G__292344 = " ";
var G__292345 = (function (){var G__292377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292378 = "m2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292377,G__292378) : tailrecursion.hoplon.span.call(null,G__292377,G__292378));
})();
var G__292346 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30(G__292317,G__292318,G__292319,G__292320,G__292321,G__292322,G__292323,G__292324,G__292325,G__292326,G__292327,G__292328,G__292329,G__292330,G__292331,G__292332,G__292333,G__292334,G__292335,G__292336,G__292337,G__292338,G__292339,G__292340,G__292341,G__292342,G__292343,G__292344,G__292345,G__292346) : tailrecursion.hoplon.pre.call(null,G__292317,G__292318,G__292319,G__292320,G__292321,G__292322,G__292323,G__292324,G__292325,G__292326,G__292327,G__292328,G__292329,G__292330,G__292331,G__292332,G__292333,G__292334,G__292335,G__292336,G__292337,G__292338,G__292339,G__292340,G__292341,G__292342,G__292343,G__292344,G__292345,G__292346));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__292315,G__292316) : tailrecursion.hoplon.div.call(null,G__292315,G__292316));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__292314) : tailrecursion.hoplon.div.call(null,G__292314));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292247;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292246;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292245;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292244;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__292242,G__292243) : tailrecursion.hoplon.li.call(null,G__292242,G__292243));
})();
var G__292063 = "";
var G__292064 = (function (){var G__292379 = cljs.core.PersistentArrayMap.EMPTY;
var G__292380 = (function (){var _STAR_references_STAR_292381 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292382 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292383 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292384 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292385 = cljs.core.PersistentArrayMap.EMPTY;
var G__292386 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A sum is a list whose first element is the symbol ",(function (){var G__292387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"+"], null);
var G__292388 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292387,G__292388) : tailrecursion.hoplon.markdown.code_node.call(null,G__292387,G__292388));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292385,G__292386) : tailrecursion.hoplon.markdown.para_node.call(null,G__292385,G__292386));
})(),(function (){var G__292430 = (function (){var G__292431 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__292432 = (function (){var G__292433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__292434 = "(";
var G__292435 = (function (){var G__292452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292453 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292452,G__292453) : tailrecursion.hoplon.span.call(null,G__292452,G__292453));
})();
var G__292436 = (function (){var G__292454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292455 = "sum?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292454,G__292455) : tailrecursion.hoplon.span.call(null,G__292454,G__292455));
})();
var G__292437 = " [";
var G__292438 = (function (){var G__292456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292457 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292456,G__292457) : tailrecursion.hoplon.span.call(null,G__292456,G__292457));
})();
var G__292439 = "]\n  (";
var G__292440 = (function (){var G__292458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292459 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292458,G__292459) : tailrecursion.hoplon.span.call(null,G__292458,G__292459));
})();
var G__292441 = "(";
var G__292442 = (function (){var G__292460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292461 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292460,G__292461) : tailrecursion.hoplon.span.call(null,G__292460,G__292461));
})();
var G__292443 = (function (){var G__292462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292463 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292462,G__292463) : tailrecursion.hoplon.span.call(null,G__292462,G__292463));
})();
var G__292444 = ")\n       (";
var G__292445 = (function (){var G__292464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292465 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292464,G__292465) : tailrecursion.hoplon.span.call(null,G__292464,G__292465));
})();
var G__292446 = "(";
var G__292447 = (function (){var G__292466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292467 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292466,G__292467) : tailrecursion.hoplon.span.call(null,G__292466,G__292467));
})();
var G__292448 = (function (){var G__292468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292469 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292468,G__292469) : tailrecursion.hoplon.span.call(null,G__292468,G__292469));
})();
var G__292449 = ") ";
var G__292450 = (function (){var G__292470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292471 = "'+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292470,G__292471) : tailrecursion.hoplon.span.call(null,G__292470,G__292471));
})();
var G__292451 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__292433,G__292434,G__292435,G__292436,G__292437,G__292438,G__292439,G__292440,G__292441,G__292442,G__292443,G__292444,G__292445,G__292446,G__292447,G__292448,G__292449,G__292450,G__292451) : tailrecursion.hoplon.pre.call(null,G__292433,G__292434,G__292435,G__292436,G__292437,G__292438,G__292439,G__292440,G__292441,G__292442,G__292443,G__292444,G__292445,G__292446,G__292447,G__292448,G__292449,G__292450,G__292451));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__292431,G__292432) : tailrecursion.hoplon.div.call(null,G__292431,G__292432));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__292430) : tailrecursion.hoplon.div.call(null,G__292430));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292384;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292383;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292382;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292381;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__292379,G__292380) : tailrecursion.hoplon.li.call(null,G__292379,G__292380));
})();
var G__292065 = "";
var G__292066 = (function (){var G__292472 = cljs.core.PersistentArrayMap.EMPTY;
var G__292473 = (function (){var _STAR_references_STAR_292474 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292475 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292476 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292477 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292478 = cljs.core.PersistentArrayMap.EMPTY;
var G__292479 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The addend is the second term of the sum list:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292478,G__292479) : tailrecursion.hoplon.markdown.para_node.call(null,G__292478,G__292479));
})(),(function (){var G__292502 = (function (){var G__292503 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__292504 = (function (){var G__292505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__292506 = "(";
var G__292507 = (function (){var G__292515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292516 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292515,G__292516) : tailrecursion.hoplon.span.call(null,G__292515,G__292516));
})();
var G__292508 = (function (){var G__292517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292518 = "addend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292517,G__292518) : tailrecursion.hoplon.span.call(null,G__292517,G__292518));
})();
var G__292509 = " [";
var G__292510 = (function (){var G__292519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292520 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292519,G__292520) : tailrecursion.hoplon.span.call(null,G__292519,G__292520));
})();
var G__292511 = "]\n  (";
var G__292512 = (function (){var G__292521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292522 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292521,G__292522) : tailrecursion.hoplon.span.call(null,G__292521,G__292522));
})();
var G__292513 = (function (){var G__292523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292524 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292523,G__292524) : tailrecursion.hoplon.span.call(null,G__292523,G__292524));
})();
var G__292514 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10(G__292505,G__292506,G__292507,G__292508,G__292509,G__292510,G__292511,G__292512,G__292513,G__292514) : tailrecursion.hoplon.pre.call(null,G__292505,G__292506,G__292507,G__292508,G__292509,G__292510,G__292511,G__292512,G__292513,G__292514));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__292503,G__292504) : tailrecursion.hoplon.div.call(null,G__292503,G__292504));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__292502) : tailrecursion.hoplon.div.call(null,G__292502));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292477;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292476;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292475;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292474;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__292472,G__292473) : tailrecursion.hoplon.li.call(null,G__292472,G__292473));
})();
var G__292067 = "";
var G__292068 = (function (){var G__292525 = cljs.core.PersistentArrayMap.EMPTY;
var G__292526 = (function (){var _STAR_references_STAR_292527 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292528 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292529 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292530 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292531 = cljs.core.PersistentArrayMap.EMPTY;
var G__292532 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The augend is the third term of the sum list:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292531,G__292532) : tailrecursion.hoplon.markdown.para_node.call(null,G__292531,G__292532));
})(),(function (){var G__292559 = (function (){var G__292560 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__292561 = (function (){var G__292562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__292563 = "(";
var G__292564 = (function (){var G__292574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292575 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292574,G__292575) : tailrecursion.hoplon.span.call(null,G__292574,G__292575));
})();
var G__292565 = (function (){var G__292576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292577 = "augend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292576,G__292577) : tailrecursion.hoplon.span.call(null,G__292576,G__292577));
})();
var G__292566 = " [";
var G__292567 = (function (){var G__292578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292579 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292578,G__292579) : tailrecursion.hoplon.span.call(null,G__292578,G__292579));
})();
var G__292568 = "]\n  (";
var G__292569 = (function (){var G__292580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292581 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292580,G__292581) : tailrecursion.hoplon.span.call(null,G__292580,G__292581));
})();
var G__292570 = (function (){var G__292582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292583 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292582,G__292583) : tailrecursion.hoplon.span.call(null,G__292582,G__292583));
})();
var G__292571 = " ";
var G__292572 = (function (){var G__292584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__292585 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292584,G__292585) : tailrecursion.hoplon.span.call(null,G__292584,G__292585));
})();
var G__292573 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12(G__292562,G__292563,G__292564,G__292565,G__292566,G__292567,G__292568,G__292569,G__292570,G__292571,G__292572,G__292573) : tailrecursion.hoplon.pre.call(null,G__292562,G__292563,G__292564,G__292565,G__292566,G__292567,G__292568,G__292569,G__292570,G__292571,G__292572,G__292573));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__292560,G__292561) : tailrecursion.hoplon.div.call(null,G__292560,G__292561));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__292559) : tailrecursion.hoplon.div.call(null,G__292559));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292530;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292529;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292528;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292527;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__292525,G__292526) : tailrecursion.hoplon.li.call(null,G__292525,G__292526));
})();
var G__292069 = "";
var G__292070 = (function (){var G__292586 = cljs.core.PersistentArrayMap.EMPTY;
var G__292587 = (function (){var _STAR_references_STAR_292588 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292589 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292590 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292591 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292592 = cljs.core.PersistentArrayMap.EMPTY;
var G__292593 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A product is a list whose first element is the symbol ",(function (){var G__292594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"*"], null);
var G__292595 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292594,G__292595) : tailrecursion.hoplon.markdown.code_node.call(null,G__292594,G__292595));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292592,G__292593) : tailrecursion.hoplon.markdown.para_node.call(null,G__292592,G__292593));
})(),(function (){var G__292637 = (function (){var G__292638 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__292639 = (function (){var G__292640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__292641 = "(";
var G__292642 = (function (){var G__292659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292660 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292659,G__292660) : tailrecursion.hoplon.span.call(null,G__292659,G__292660));
})();
var G__292643 = (function (){var G__292661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292662 = "product?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292661,G__292662) : tailrecursion.hoplon.span.call(null,G__292661,G__292662));
})();
var G__292644 = " [";
var G__292645 = (function (){var G__292663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292664 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292663,G__292664) : tailrecursion.hoplon.span.call(null,G__292663,G__292664));
})();
var G__292646 = "]\n  (";
var G__292647 = (function (){var G__292665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292666 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292665,G__292666) : tailrecursion.hoplon.span.call(null,G__292665,G__292666));
})();
var G__292648 = "(";
var G__292649 = (function (){var G__292667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292668 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292667,G__292668) : tailrecursion.hoplon.span.call(null,G__292667,G__292668));
})();
var G__292650 = (function (){var G__292669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292670 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292669,G__292670) : tailrecursion.hoplon.span.call(null,G__292669,G__292670));
})();
var G__292651 = ")\n       (";
var G__292652 = (function (){var G__292671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292672 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292671,G__292672) : tailrecursion.hoplon.span.call(null,G__292671,G__292672));
})();
var G__292653 = "(";
var G__292654 = (function (){var G__292673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292674 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292673,G__292674) : tailrecursion.hoplon.span.call(null,G__292673,G__292674));
})();
var G__292655 = (function (){var G__292675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292676 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292675,G__292676) : tailrecursion.hoplon.span.call(null,G__292675,G__292676));
})();
var G__292656 = ") ";
var G__292657 = (function (){var G__292677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292678 = "'*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292677,G__292678) : tailrecursion.hoplon.span.call(null,G__292677,G__292678));
})();
var G__292658 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__292640,G__292641,G__292642,G__292643,G__292644,G__292645,G__292646,G__292647,G__292648,G__292649,G__292650,G__292651,G__292652,G__292653,G__292654,G__292655,G__292656,G__292657,G__292658) : tailrecursion.hoplon.pre.call(null,G__292640,G__292641,G__292642,G__292643,G__292644,G__292645,G__292646,G__292647,G__292648,G__292649,G__292650,G__292651,G__292652,G__292653,G__292654,G__292655,G__292656,G__292657,G__292658));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__292638,G__292639) : tailrecursion.hoplon.div.call(null,G__292638,G__292639));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__292637) : tailrecursion.hoplon.div.call(null,G__292637));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292591;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292590;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292589;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292588;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__292586,G__292587) : tailrecursion.hoplon.li.call(null,G__292586,G__292587));
})();
var G__292071 = "";
var G__292072 = (function (){var G__292679 = cljs.core.PersistentArrayMap.EMPTY;
var G__292680 = (function (){var _STAR_references_STAR_292681 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292682 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292683 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292684 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292685 = cljs.core.PersistentArrayMap.EMPTY;
var G__292686 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The multiplier is the second item of the product list:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292685,G__292686) : tailrecursion.hoplon.markdown.para_node.call(null,G__292685,G__292686));
})(),(function (){var G__292709 = (function (){var G__292710 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__292711 = (function (){var G__292712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__292713 = "(";
var G__292714 = (function (){var G__292722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292723 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292722,G__292723) : tailrecursion.hoplon.span.call(null,G__292722,G__292723));
})();
var G__292715 = (function (){var G__292724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292725 = "multiplier";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292724,G__292725) : tailrecursion.hoplon.span.call(null,G__292724,G__292725));
})();
var G__292716 = " [";
var G__292717 = (function (){var G__292726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292727 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292726,G__292727) : tailrecursion.hoplon.span.call(null,G__292726,G__292727));
})();
var G__292718 = "]\n  (";
var G__292719 = (function (){var G__292728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292729 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292728,G__292729) : tailrecursion.hoplon.span.call(null,G__292728,G__292729));
})();
var G__292720 = (function (){var G__292730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292731 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292730,G__292731) : tailrecursion.hoplon.span.call(null,G__292730,G__292731));
})();
var G__292721 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10(G__292712,G__292713,G__292714,G__292715,G__292716,G__292717,G__292718,G__292719,G__292720,G__292721) : tailrecursion.hoplon.pre.call(null,G__292712,G__292713,G__292714,G__292715,G__292716,G__292717,G__292718,G__292719,G__292720,G__292721));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__292710,G__292711) : tailrecursion.hoplon.div.call(null,G__292710,G__292711));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__292709) : tailrecursion.hoplon.div.call(null,G__292709));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292684;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292683;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292682;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292681;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__292679,G__292680) : tailrecursion.hoplon.li.call(null,G__292679,G__292680));
})();
var G__292073 = "";
var G__292074 = (function (){var G__292732 = cljs.core.PersistentArrayMap.EMPTY;
var G__292733 = (function (){var _STAR_references_STAR_292734 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292735 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292736 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292737 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292738 = cljs.core.PersistentArrayMap.EMPTY;
var G__292739 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The multiplicand is the third item of the product list:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292738,G__292739) : tailrecursion.hoplon.markdown.para_node.call(null,G__292738,G__292739));
})(),(function (){var G__292766 = (function (){var G__292767 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__292768 = (function (){var G__292769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__292770 = "(";
var G__292771 = (function (){var G__292781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292782 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292781,G__292782) : tailrecursion.hoplon.span.call(null,G__292781,G__292782));
})();
var G__292772 = (function (){var G__292783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292784 = "multiplicand";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292783,G__292784) : tailrecursion.hoplon.span.call(null,G__292783,G__292784));
})();
var G__292773 = " [";
var G__292774 = (function (){var G__292785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292786 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292785,G__292786) : tailrecursion.hoplon.span.call(null,G__292785,G__292786));
})();
var G__292775 = "]\n  (";
var G__292776 = (function (){var G__292787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292788 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292787,G__292788) : tailrecursion.hoplon.span.call(null,G__292787,G__292788));
})();
var G__292777 = (function (){var G__292789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292790 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292789,G__292790) : tailrecursion.hoplon.span.call(null,G__292789,G__292790));
})();
var G__292778 = " ";
var G__292779 = (function (){var G__292791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__292792 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292791,G__292792) : tailrecursion.hoplon.span.call(null,G__292791,G__292792));
})();
var G__292780 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12(G__292769,G__292770,G__292771,G__292772,G__292773,G__292774,G__292775,G__292776,G__292777,G__292778,G__292779,G__292780) : tailrecursion.hoplon.pre.call(null,G__292769,G__292770,G__292771,G__292772,G__292773,G__292774,G__292775,G__292776,G__292777,G__292778,G__292779,G__292780));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__292767,G__292768) : tailrecursion.hoplon.div.call(null,G__292767,G__292768));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__292766) : tailrecursion.hoplon.div.call(null,G__292766));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292737;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292736;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292735;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292734;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__292732,G__292733) : tailrecursion.hoplon.li.call(null,G__292732,G__292733));
})();
var G__292075 = "\nThus, we need only combine these with the algorithm as embodied by\n`deriv` in order to have a working symbolic differentiation program.\nLet us look at some examples of its behavior:\n\n```clj\n(deriv '(+ x 3) 'x)\n=> (+ 1 0)\n\n(deriv '(* x y) 'x)\n=> (+ (* x 0) (* 1 y))\n\n(deriv '(* (* x y) (+ x 3)) 'x)\n=> (+ (* (* x y) (+ 1 0))\n      (* (+ (* x 0) (* 1 y))\n         (+ x 3)))\n```\n\nThe program produces answers that are correct; however, they are\nunsimplified. It is true that\n\n$$\\frac{d(xy)}{dx}=x*0+1*y$$\n\nbut we would like the program to know that \\\\(x\\cdot0=0\\\\), \\\\(1\\cdot\ny=y\\\\), and \\\\(0+y=y\\\\). The answer for the second example should have\nbeen simply, \\\\(y\\\\). As the third example shows, this becomes a\nserious issue when the expressions are complex.\n\nOur difficulty is much like the one we encountered with the\nrational-number implementation: we haven't reduced answers to simplest\nform. To accomplish the rational-number reduction, we needed to change\nonly the constructors and the selectors of the implementation. We can\nadopt a similar strategy here. We won't change `deriv` at all.\nInstead, we will change `make-sum` so that if both summands are\nnumbers, `make-sum` will add them and return their sum. Also, if one of\nthe summands is 0, then `make-sum` will return the other summand.\n\n```clj\n(defn make-sum [a1 a2]\n  (cond (= a1 0) a2\n        (= a2 0) a1\n        (and (number? a1)\n             (number? a2)) (+ a1 a2)\n        :else (list '+ a1 a2)))\n```\n\nThis uses the procedure `=`, which, returns `true` if and only if the\ntwo arguments are of the same type and value. Since `0` is a number,\n`(= a1 0)` implies that `a1` must be a number as well. In the original\nSICP, they used a function `=number?` to accomplish this task. We do\nnot need this in Clojure.\n\nSimilarly, we will change `make-product` to build in the rules that 0\ntimes anything is 0 and 1 times anything is the thing itself:\n\n```clj\n(defn make-product [m1 m2]\n  (cond (or (= m1 0)\n            (= m2 0)) 0\n        (= m1 1) m2\n        (= m2 1) m1\n        (and (number? m1)\n             (number? m2)) (* m1 m2)\n        :else (list '* m1 m2)))\n```\n\nHere is how this version works on our three examples:\n\n```clj\n(deriv '(+ x 3) 'x)\n=> 1\n\n(deriv '(* x y) 'x)\n=> y\n\n(deriv '(* (* x y) (+ x 3)) 'x)\n=> (+ (* x y) (* y (+ x 3)))\n```\n\nAlthough this is quite an improvement, the third example shows that\nthere is still a long way to go before we get a program that puts\nexpressions into a form that we might agree is \"simplest.\" The problem\nof algebraic simplification is complex because, among other reasons, a\nform that may be simplest for one purpose may not be for another.";
return (tailrecursion.hoplon.ul.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.ul.cljs$core$IFn$_invoke$arity$19(G__292057,G__292058,G__292059,G__292060,G__292061,G__292062,G__292063,G__292064,G__292065,G__292066,G__292067,G__292068,G__292069,G__292070,G__292071,G__292072,G__292073,G__292074,G__292075) : tailrecursion.hoplon.ul.call(null,G__292057,G__292058,G__292059,G__292060,G__292061,G__292062,G__292063,G__292064,G__292065,G__292066,G__292067,G__292068,G__292069,G__292070,G__292071,G__292072,G__292073,G__292074,G__292075));
})()], 0));
var G__288698 = "";
var G__288699 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_292793 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292794 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292795 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292796 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292797 = cljs.core.PersistentArrayMap.EMPTY;
var G__292798 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Show how to extend the basic differentiator to handle more kinds of expressions. For instance, implement the differentiation rule"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292797,G__292798) : tailrecursion.hoplon.markdown.para_node.call(null,G__292797,G__292798));
})(),(function (){var G__292799 = cljs.core.PersistentArrayMap.EMPTY;
var G__292800 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{d(u^n)}{dx}=nu^{n-1}\\left(\\frac{du}{dx}\\right)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292799,G__292800) : tailrecursion.hoplon.markdown.para_node.call(null,G__292799,G__292800));
})(),(function (){var G__292801 = cljs.core.PersistentArrayMap.EMPTY;
var G__292802 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["by adding a new clause to the ",(function (){var G__292803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"deriv"], null);
var G__292804 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292803,G__292804) : tailrecursion.hoplon.markdown.code_node.call(null,G__292803,G__292804));
})()," program and defining appropriate procedures ",(function (){var G__292805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"exponentiation?"], null);
var G__292806 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292805,G__292806) : tailrecursion.hoplon.markdown.code_node.call(null,G__292805,G__292806));
})(),", ",(function (){var G__292807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"base"], null);
var G__292808 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292807,G__292808) : tailrecursion.hoplon.markdown.code_node.call(null,G__292807,G__292808));
})(),", ",(function (){var G__292809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"exponent"], null);
var G__292810 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292809,G__292810) : tailrecursion.hoplon.markdown.code_node.call(null,G__292809,G__292810));
})()," and ",(function (){var G__292811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-exponentiation"], null);
var G__292812 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292811,G__292812) : tailrecursion.hoplon.markdown.code_node.call(null,G__292811,G__292812));
})(),". (You may use the symbol ",(function (){var G__292813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"**"], null);
var G__292814 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292813,G__292814) : tailrecursion.hoplon.markdown.code_node.call(null,G__292813,G__292814));
})()," to denote exponentiation.) Build in the rules that anything raised to the power 0 is 1, and anything raised to the power 1 is the thing itself."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292801,G__292802) : tailrecursion.hoplon.markdown.para_node.call(null,G__292801,G__292802));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292796;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292795;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292794;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292793;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_292815 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292816 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292817 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292818 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292819 = cljs.core.PersistentArrayMap.EMPTY;
var G__292820 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We must add the following clause to the definition of ",(function (){var G__292821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(deriv exp\nvar)"], null);
var G__292822 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292821,G__292822) : tailrecursion.hoplon.markdown.code_node.call(null,G__292821,G__292822));
})(),", where ",(function (){var G__292823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"exp"], null);
var G__292824 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292823,G__292824) : tailrecursion.hoplon.markdown.code_node.call(null,G__292823,G__292824));
})()," refers to the expression, and ",(function (){var G__292825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"var"], null);
var G__292826 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292825,G__292826) : tailrecursion.hoplon.markdown.code_node.call(null,G__292825,G__292826));
})()," refers to the variable with which we are differentiating."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292819,G__292820) : tailrecursion.hoplon.markdown.para_node.call(null,G__292819,G__292820));
})(),(function (){var G__292898 = (function (){var G__292899 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__292900 = (function (){var G__292901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__292902 = "(";
var G__292903 = (function (){var G__292936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292937 = "exponentiation?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292936,G__292937) : tailrecursion.hoplon.span.call(null,G__292936,G__292937));
})();
var G__292904 = " ";
var G__292905 = (function (){var G__292938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292939 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292938,G__292939) : tailrecursion.hoplon.span.call(null,G__292938,G__292939));
})();
var G__292906 = ")\n(";
var G__292907 = (function (){var G__292940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292941 = "make-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292940,G__292941) : tailrecursion.hoplon.span.call(null,G__292940,G__292941));
})();
var G__292908 = " \n  (";
var G__292909 = (function (){var G__292942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292943 = "make-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292942,G__292943) : tailrecursion.hoplon.span.call(null,G__292942,G__292943));
})();
var G__292910 = " \n    (";
var G__292911 = (function (){var G__292944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292945 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292944,G__292945) : tailrecursion.hoplon.span.call(null,G__292944,G__292945));
})();
var G__292912 = " ";
var G__292913 = (function (){var G__292946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292947 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292946,G__292947) : tailrecursion.hoplon.span.call(null,G__292946,G__292947));
})();
var G__292914 = ")\n    (";
var G__292915 = (function (){var G__292948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292949 = "make-exponentiation";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292948,G__292949) : tailrecursion.hoplon.span.call(null,G__292948,G__292949));
})();
var G__292916 = " \n      (";
var G__292917 = (function (){var G__292950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292951 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292950,G__292951) : tailrecursion.hoplon.span.call(null,G__292950,G__292951));
})();
var G__292918 = " ";
var G__292919 = (function (){var G__292952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292953 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292952,G__292953) : tailrecursion.hoplon.span.call(null,G__292952,G__292953));
})();
var G__292920 = ") \n      (";
var G__292921 = (function (){var G__292954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292955 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292954,G__292955) : tailrecursion.hoplon.span.call(null,G__292954,G__292955));
})();
var G__292922 = " (";
var G__292923 = (function (){var G__292956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292957 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292956,G__292957) : tailrecursion.hoplon.span.call(null,G__292956,G__292957));
})();
var G__292924 = (function (){var G__292958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292959 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292958,G__292959) : tailrecursion.hoplon.span.call(null,G__292958,G__292959));
})();
var G__292925 = " ";
var G__292926 = (function (){var G__292960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__292961 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292960,G__292961) : tailrecursion.hoplon.span.call(null,G__292960,G__292961));
})();
var G__292927 = "))))\n  (";
var G__292928 = (function (){var G__292962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292963 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292962,G__292963) : tailrecursion.hoplon.span.call(null,G__292962,G__292963));
})();
var G__292929 = " (";
var G__292930 = (function (){var G__292964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292965 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292964,G__292965) : tailrecursion.hoplon.span.call(null,G__292964,G__292965));
})();
var G__292931 = " ";
var G__292932 = (function (){var G__292966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292967 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292966,G__292967) : tailrecursion.hoplon.span.call(null,G__292966,G__292967));
})();
var G__292933 = ") ";
var G__292934 = (function (){var G__292968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292969 = "var";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292968,G__292969) : tailrecursion.hoplon.span.call(null,G__292968,G__292969));
})();
var G__292935 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35(G__292901,G__292902,G__292903,G__292904,G__292905,G__292906,G__292907,G__292908,G__292909,G__292910,G__292911,G__292912,G__292913,G__292914,G__292915,G__292916,G__292917,G__292918,G__292919,G__292920,G__292921,G__292922,G__292923,G__292924,G__292925,G__292926,G__292927,G__292928,G__292929,G__292930,G__292931,G__292932,G__292933,G__292934,G__292935) : tailrecursion.hoplon.pre.call(null,G__292901,G__292902,G__292903,G__292904,G__292905,G__292906,G__292907,G__292908,G__292909,G__292910,G__292911,G__292912,G__292913,G__292914,G__292915,G__292916,G__292917,G__292918,G__292919,G__292920,G__292921,G__292922,G__292923,G__292924,G__292925,G__292926,G__292927,G__292928,G__292929,G__292930,G__292931,G__292932,G__292933,G__292934,G__292935));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__292899,G__292900) : tailrecursion.hoplon.div.call(null,G__292899,G__292900));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__292898) : tailrecursion.hoplon.div.call(null,G__292898));
})(),(function (){var G__293070 = (function (){var G__293071 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__293072 = (function (){var G__293073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__293074 = "(";
var G__293075 = (function (){var G__293119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__293120 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293119,G__293120) : tailrecursion.hoplon.span.call(null,G__293119,G__293120));
})();
var G__293076 = (function (){var G__293121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293122 = "exponentiation?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293121,G__293122) : tailrecursion.hoplon.span.call(null,G__293121,G__293122));
})();
var G__293077 = " [";
var G__293078 = (function (){var G__293123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293124 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293123,G__293124) : tailrecursion.hoplon.span.call(null,G__293123,G__293124));
})();
var G__293079 = "]\n  (";
var G__293080 = (function (){var G__293125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293126 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293125,G__293126) : tailrecursion.hoplon.span.call(null,G__293125,G__293126));
})();
var G__293081 = "(";
var G__293082 = (function (){var G__293127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293128 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293127,G__293128) : tailrecursion.hoplon.span.call(null,G__293127,G__293128));
})();
var G__293083 = (function (){var G__293129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293130 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293129,G__293130) : tailrecursion.hoplon.span.call(null,G__293129,G__293130));
})();
var G__293084 = ") ";
var G__293085 = (function (){var G__293131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293132 = "'**";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293131,G__293132) : tailrecursion.hoplon.span.call(null,G__293131,G__293132));
})();
var G__293086 = "))\n\n(";
var G__293087 = (function (){var G__293133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__293134 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293133,G__293134) : tailrecursion.hoplon.span.call(null,G__293133,G__293134));
})();
var G__293088 = (function (){var G__293135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293136 = "make-exponentiation";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293135,G__293136) : tailrecursion.hoplon.span.call(null,G__293135,G__293136));
})();
var G__293089 = " [";
var G__293090 = (function (){var G__293137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293138 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293137,G__293138) : tailrecursion.hoplon.span.call(null,G__293137,G__293138));
})();
var G__293091 = " ";
var G__293092 = (function (){var G__293139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293140 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293139,G__293140) : tailrecursion.hoplon.span.call(null,G__293139,G__293140));
})();
var G__293093 = "]\n  (";
var G__293094 = (function (){var G__293141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293142 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293141,G__293142) : tailrecursion.hoplon.span.call(null,G__293141,G__293142));
})();
var G__293095 = (function (){var G__293143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293144 = "'**";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293143,G__293144) : tailrecursion.hoplon.span.call(null,G__293143,G__293144));
})();
var G__293096 = " ";
var G__293097 = (function (){var G__293145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293146 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293145,G__293146) : tailrecursion.hoplon.span.call(null,G__293145,G__293146));
})();
var G__293098 = " ";
var G__293099 = (function (){var G__293147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293148 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293147,G__293148) : tailrecursion.hoplon.span.call(null,G__293147,G__293148));
})();
var G__293100 = "))\n\n(";
var G__293101 = (function (){var G__293149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__293150 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293149,G__293150) : tailrecursion.hoplon.span.call(null,G__293149,G__293150));
})();
var G__293102 = (function (){var G__293151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293152 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293151,G__293152) : tailrecursion.hoplon.span.call(null,G__293151,G__293152));
})();
var G__293103 = " [";
var G__293104 = (function (){var G__293153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293154 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293153,G__293154) : tailrecursion.hoplon.span.call(null,G__293153,G__293154));
})();
var G__293105 = "]\n  (";
var G__293106 = (function (){var G__293155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293156 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293155,G__293156) : tailrecursion.hoplon.span.call(null,G__293155,G__293156));
})();
var G__293107 = (function (){var G__293157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293158 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293157,G__293158) : tailrecursion.hoplon.span.call(null,G__293157,G__293158));
})();
var G__293108 = "))\n\n(";
var G__293109 = (function (){var G__293159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__293160 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293159,G__293160) : tailrecursion.hoplon.span.call(null,G__293159,G__293160));
})();
var G__293110 = (function (){var G__293161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293162 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293161,G__293162) : tailrecursion.hoplon.span.call(null,G__293161,G__293162));
})();
var G__293111 = " [";
var G__293112 = (function (){var G__293163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293164 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293163,G__293164) : tailrecursion.hoplon.span.call(null,G__293163,G__293164));
})();
var G__293113 = "]\n  (";
var G__293114 = (function (){var G__293165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293166 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293165,G__293166) : tailrecursion.hoplon.span.call(null,G__293165,G__293166));
})();
var G__293115 = (function (){var G__293167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293168 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293167,G__293168) : tailrecursion.hoplon.span.call(null,G__293167,G__293168));
})();
var G__293116 = " ";
var G__293117 = (function (){var G__293169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293170 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293169,G__293170) : tailrecursion.hoplon.span.call(null,G__293169,G__293170));
})();
var G__293118 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__293073,G__293074,G__293075,G__293076,G__293077,G__293078,G__293079,G__293080,G__293081,G__293082,G__293083,G__293084,G__293085,G__293086,G__293087,G__293088,G__293089,G__293090,G__293091,G__293092,G__293093,G__293094,G__293095,G__293096,G__293097,G__293098,G__293099,G__293100,G__293101,G__293102,G__293103,G__293104,G__293105,G__293106,G__293107,G__293108,G__293109,G__293110,G__293111,G__293112,G__293113,G__293114,G__293115,G__293116,G__293117,G__293118) : tailrecursion.hoplon.pre.call(null,G__293073,G__293074,G__293075,G__293076,G__293077,G__293078,G__293079,G__293080,G__293081,G__293082,G__293083,G__293084,G__293085,G__293086,G__293087,G__293088,G__293089,G__293090,G__293091,G__293092,G__293093,G__293094,G__293095,G__293096,G__293097,G__293098,G__293099,G__293100,G__293101,G__293102,G__293103,G__293104,G__293105,G__293106,G__293107,G__293108,G__293109,G__293110,G__293111,G__293112,G__293113,G__293114,G__293115,G__293116,G__293117,G__293118));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__293071,G__293072) : tailrecursion.hoplon.div.call(null,G__293071,G__293072));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__293070) : tailrecursion.hoplon.div.call(null,G__293070));
})(),(function (){var G__293171 = cljs.core.PersistentArrayMap.EMPTY;
var G__293172 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["But then we realize that we would like to include the simplification rules, so"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293171,G__293172) : tailrecursion.hoplon.markdown.para_node.call(null,G__293171,G__293172));
})(),(function (){var G__293277 = (function (){var G__293278 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__293279 = (function (){var G__293280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__293281 = "(";
var G__293282 = (function (){var G__293330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__293331 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293330,G__293331) : tailrecursion.hoplon.span.call(null,G__293330,G__293331));
})();
var G__293283 = (function (){var G__293332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293333 = "make-exponentiation";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293332,G__293333) : tailrecursion.hoplon.span.call(null,G__293332,G__293333));
})();
var G__293284 = " [";
var G__293285 = (function (){var G__293334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293335 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293334,G__293335) : tailrecursion.hoplon.span.call(null,G__293334,G__293335));
})();
var G__293286 = " ";
var G__293287 = (function (){var G__293336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293337 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293336,G__293337) : tailrecursion.hoplon.span.call(null,G__293336,G__293337));
})();
var G__293288 = "]\n  (";
var G__293289 = (function (){var G__293338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293339 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293338,G__293339) : tailrecursion.hoplon.span.call(null,G__293338,G__293339));
})();
var G__293290 = "(";
var G__293291 = (function (){var G__293340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293341 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293340,G__293341) : tailrecursion.hoplon.span.call(null,G__293340,G__293341));
})();
var G__293292 = "(";
var G__293293 = (function (){var G__293342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293343 = "number?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293342,G__293343) : tailrecursion.hoplon.span.call(null,G__293342,G__293343));
})();
var G__293294 = " ";
var G__293295 = (function (){var G__293344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293345 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293344,G__293345) : tailrecursion.hoplon.span.call(null,G__293344,G__293345));
})();
var G__293296 = ")\n             (";
var G__293297 = (function (){var G__293346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293347 = "number?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293346,G__293347) : tailrecursion.hoplon.span.call(null,G__293346,G__293347));
})();
var G__293298 = " ";
var G__293299 = (function (){var G__293348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293349 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293348,G__293349) : tailrecursion.hoplon.span.call(null,G__293348,G__293349));
})();
var G__293300 = ")) (";
var G__293301 = (function (){var G__293350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293351 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293350,G__293351) : tailrecursion.hoplon.span.call(null,G__293350,G__293351));
})();
var G__293302 = " ";
var G__293303 = (function (){var G__293352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293353 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293352,G__293353) : tailrecursion.hoplon.span.call(null,G__293352,G__293353));
})();
var G__293304 = " ";
var G__293305 = (function (){var G__293354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293355 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293354,G__293355) : tailrecursion.hoplon.span.call(null,G__293354,G__293355));
})();
var G__293306 = ")\n        (";
var G__293307 = (function (){var G__293356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293357 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293356,G__293357) : tailrecursion.hoplon.span.call(null,G__293356,G__293357));
})();
var G__293308 = (function (){var G__293358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293359 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293358,G__293359) : tailrecursion.hoplon.span.call(null,G__293358,G__293359));
})();
var G__293309 = " ";
var G__293310 = (function (){var G__293360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293361 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293360,G__293361) : tailrecursion.hoplon.span.call(null,G__293360,G__293361));
})();
var G__293311 = ") ";
var G__293312 = (function (){var G__293362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293363 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293362,G__293363) : tailrecursion.hoplon.span.call(null,G__293362,G__293363));
})();
var G__293313 = "\n        (";
var G__293314 = (function (){var G__293364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293365 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293364,G__293365) : tailrecursion.hoplon.span.call(null,G__293364,G__293365));
})();
var G__293315 = (function (){var G__293366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293367 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293366,G__293367) : tailrecursion.hoplon.span.call(null,G__293366,G__293367));
})();
var G__293316 = " ";
var G__293317 = (function (){var G__293368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293369 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293368,G__293369) : tailrecursion.hoplon.span.call(null,G__293368,G__293369));
})();
var G__293318 = ") ";
var G__293319 = (function (){var G__293370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293371 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293370,G__293371) : tailrecursion.hoplon.span.call(null,G__293370,G__293371));
})();
var G__293320 = "\n        ";
var G__293321 = (function (){var G__293372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293373 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293372,G__293373) : tailrecursion.hoplon.span.call(null,G__293372,G__293373));
})();
var G__293322 = " (";
var G__293323 = (function (){var G__293374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293375 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293374,G__293375) : tailrecursion.hoplon.span.call(null,G__293374,G__293375));
})();
var G__293324 = (function (){var G__293376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293377 = "'**";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293376,G__293377) : tailrecursion.hoplon.span.call(null,G__293376,G__293377));
})();
var G__293325 = " ";
var G__293326 = (function (){var G__293378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293379 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293378,G__293379) : tailrecursion.hoplon.span.call(null,G__293378,G__293379));
})();
var G__293327 = " ";
var G__293328 = (function (){var G__293380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293381 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293380,G__293381) : tailrecursion.hoplon.span.call(null,G__293380,G__293381));
})();
var G__293329 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$50 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$50(G__293280,G__293281,G__293282,G__293283,G__293284,G__293285,G__293286,G__293287,G__293288,G__293289,G__293290,G__293291,G__293292,G__293293,G__293294,G__293295,G__293296,G__293297,G__293298,G__293299,G__293300,G__293301,G__293302,G__293303,G__293304,G__293305,G__293306,G__293307,G__293308,G__293309,G__293310,G__293311,G__293312,G__293313,G__293314,G__293315,G__293316,G__293317,G__293318,G__293319,G__293320,G__293321,G__293322,G__293323,G__293324,G__293325,G__293326,G__293327,G__293328,G__293329) : tailrecursion.hoplon.pre.call(null,G__293280,G__293281,G__293282,G__293283,G__293284,G__293285,G__293286,G__293287,G__293288,G__293289,G__293290,G__293291,G__293292,G__293293,G__293294,G__293295,G__293296,G__293297,G__293298,G__293299,G__293300,G__293301,G__293302,G__293303,G__293304,G__293305,G__293306,G__293307,G__293308,G__293309,G__293310,G__293311,G__293312,G__293313,G__293314,G__293315,G__293316,G__293317,G__293318,G__293319,G__293320,G__293321,G__293322,G__293323,G__293324,G__293325,G__293326,G__293327,G__293328,G__293329));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__293278,G__293279) : tailrecursion.hoplon.div.call(null,G__293278,G__293279));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__293277) : tailrecursion.hoplon.div.call(null,G__293277));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292818;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292817;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292816;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292815;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_293382 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293383 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_293384 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293385 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__293386 = cljs.core.PersistentArrayMap.EMPTY;
var G__293387 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Extend the differentiation program to handle sums and products of arbitrary numbers of (two or more) terms. Then the last example above could be expressed as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293386,G__293387) : tailrecursion.hoplon.markdown.para_node.call(null,G__293386,G__293387));
})(),(function (){var G__293426 = (function (){var G__293427 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__293428 = (function (){var G__293429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__293430 = "(";
var G__293431 = (function (){var G__293447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293448 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293447,G__293448) : tailrecursion.hoplon.span.call(null,G__293447,G__293448));
})();
var G__293432 = " ";
var G__293433 = (function (){var G__293449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293450 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293449,G__293450) : tailrecursion.hoplon.span.call(null,G__293449,G__293450));
})();
var G__293434 = "(";
var G__293435 = (function (){var G__293451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293452 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293451,G__293452) : tailrecursion.hoplon.span.call(null,G__293451,G__293452));
})();
var G__293436 = (function (){var G__293453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293454 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293453,G__293454) : tailrecursion.hoplon.span.call(null,G__293453,G__293454));
})();
var G__293437 = " ";
var G__293438 = (function (){var G__293455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293456 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293455,G__293456) : tailrecursion.hoplon.span.call(null,G__293455,G__293456));
})();
var G__293439 = " (";
var G__293440 = (function (){var G__293457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293458 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293457,G__293458) : tailrecursion.hoplon.span.call(null,G__293457,G__293458));
})();
var G__293441 = (function (){var G__293459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293460 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293459,G__293460) : tailrecursion.hoplon.span.call(null,G__293459,G__293460));
})();
var G__293442 = " ";
var G__293443 = (function (){var G__293461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293462 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293461,G__293462) : tailrecursion.hoplon.span.call(null,G__293461,G__293462));
})();
var G__293444 = ")) ";
var G__293445 = (function (){var G__293463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293464 = "'x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293463,G__293464) : tailrecursion.hoplon.span.call(null,G__293463,G__293464));
})();
var G__293446 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__293429,G__293430,G__293431,G__293432,G__293433,G__293434,G__293435,G__293436,G__293437,G__293438,G__293439,G__293440,G__293441,G__293442,G__293443,G__293444,G__293445,G__293446) : tailrecursion.hoplon.pre.call(null,G__293429,G__293430,G__293431,G__293432,G__293433,G__293434,G__293435,G__293436,G__293437,G__293438,G__293439,G__293440,G__293441,G__293442,G__293443,G__293444,G__293445,G__293446));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__293427,G__293428) : tailrecursion.hoplon.div.call(null,G__293427,G__293428));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__293426) : tailrecursion.hoplon.div.call(null,G__293426));
})(),(function (){var G__293465 = cljs.core.PersistentArrayMap.EMPTY;
var G__293466 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Try to do this by changing only the representation for sums and products without changing the deriv procedure at all. For example, the ",(function (){var G__293467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"addend"], null);
var G__293468 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293467,G__293468) : tailrecursion.hoplon.markdown.code_node.call(null,G__293467,G__293468));
})()," of a sum would be the first term, and the ",(function (){var G__293469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"augend"], null);
var G__293470 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293469,G__293470) : tailrecursion.hoplon.markdown.code_node.call(null,G__293469,G__293470));
})()," would be the sum of the rest of the terms."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293465,G__293466) : tailrecursion.hoplon.markdown.para_node.call(null,G__293465,G__293466));
})(),(function (){var G__293471 = cljs.core.PersistentArrayMap.EMPTY;
var G__293472 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To do this, it is best to take advantage of our ability to define functions with mutliple arities."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293471,G__293472) : tailrecursion.hoplon.markdown.para_node.call(null,G__293471,G__293472));
})(),(function (){var G__293530 = (function (){var G__293531 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__293532 = (function (){var G__293533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__293534 = "(";
var G__293535 = (function (){var G__293560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__293561 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293560,G__293561) : tailrecursion.hoplon.span.call(null,G__293560,G__293561));
})();
var G__293536 = (function (){var G__293562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293563 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293562,G__293563) : tailrecursion.hoplon.span.call(null,G__293562,G__293563));
})();
var G__293537 = "\n  ([";
var G__293538 = (function (){var G__293564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293565 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293564,G__293565) : tailrecursion.hoplon.span.call(null,G__293564,G__293565));
})();
var G__293539 = " ";
var G__293540 = (function (){var G__293566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293567 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293566,G__293567) : tailrecursion.hoplon.span.call(null,G__293566,G__293567));
})();
var G__293541 = "] (";
var G__293542 = (function (){var G__293568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293569 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293568,G__293569) : tailrecursion.hoplon.span.call(null,G__293568,G__293569));
})();
var G__293543 = (function (){var G__293570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293571 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293570,G__293571) : tailrecursion.hoplon.span.call(null,G__293570,G__293571));
})();
var G__293544 = " ";
var G__293545 = (function (){var G__293572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293573 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293572,G__293573) : tailrecursion.hoplon.span.call(null,G__293572,G__293573));
})();
var G__293546 = "))\n  ([";
var G__293547 = (function (){var G__293574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293575 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293574,G__293575) : tailrecursion.hoplon.span.call(null,G__293574,G__293575));
})();
var G__293548 = " ";
var G__293549 = (function (){var G__293576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293577 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293576,G__293577) : tailrecursion.hoplon.span.call(null,G__293576,G__293577));
})();
var G__293550 = " ";
var G__293551 = (function (){var G__293578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293579 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293578,G__293579) : tailrecursion.hoplon.span.call(null,G__293578,G__293579));
})();
var G__293552 = "] (";
var G__293553 = (function (){var G__293580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293581 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293580,G__293581) : tailrecursion.hoplon.span.call(null,G__293580,G__293581));
})();
var G__293554 = (function (){var G__293582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293583 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293582,G__293583) : tailrecursion.hoplon.span.call(null,G__293582,G__293583));
})();
var G__293555 = " ";
var G__293556 = (function (){var G__293584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293585 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293584,G__293585) : tailrecursion.hoplon.span.call(null,G__293584,G__293585));
})();
var G__293557 = " ";
var G__293558 = (function (){var G__293586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293587 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293586,G__293587) : tailrecursion.hoplon.span.call(null,G__293586,G__293587));
})();
var G__293559 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27(G__293533,G__293534,G__293535,G__293536,G__293537,G__293538,G__293539,G__293540,G__293541,G__293542,G__293543,G__293544,G__293545,G__293546,G__293547,G__293548,G__293549,G__293550,G__293551,G__293552,G__293553,G__293554,G__293555,G__293556,G__293557,G__293558,G__293559) : tailrecursion.hoplon.pre.call(null,G__293533,G__293534,G__293535,G__293536,G__293537,G__293538,G__293539,G__293540,G__293541,G__293542,G__293543,G__293544,G__293545,G__293546,G__293547,G__293548,G__293549,G__293550,G__293551,G__293552,G__293553,G__293554,G__293555,G__293556,G__293557,G__293558,G__293559));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__293531,G__293532) : tailrecursion.hoplon.div.call(null,G__293531,G__293532));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__293530) : tailrecursion.hoplon.div.call(null,G__293530));
})(),(function (){var G__293588 = cljs.core.PersistentArrayMap.EMPTY;
var G__293589 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This function will add its arguments if given two arguments, and multiply them if given three."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293588,G__293589) : tailrecursion.hoplon.markdown.para_node.call(null,G__293588,G__293589));
})(),(function (){var G__293635 = (function (){var G__293636 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__293637 = (function (){var G__293638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__293639 = "(";
var G__293640 = (function (){var G__293659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__293660 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293659,G__293660) : tailrecursion.hoplon.span.call(null,G__293659,G__293660));
})();
var G__293641 = (function (){var G__293661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293662 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293661,G__293662) : tailrecursion.hoplon.span.call(null,G__293661,G__293662));
})();
var G__293642 = " [";
var G__293643 = (function (){var G__293663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293664 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293663,G__293664) : tailrecursion.hoplon.span.call(null,G__293663,G__293664));
})();
var G__293644 = " ";
var G__293645 = (function (){var G__293665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293666 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293665,G__293666) : tailrecursion.hoplon.span.call(null,G__293665,G__293666));
})();
var G__293646 = " ";
var G__293647 = (function (){var G__293667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293668 = "&";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293667,G__293668) : tailrecursion.hoplon.span.call(null,G__293667,G__293668));
})();
var G__293648 = " ";
var G__293649 = (function (){var G__293669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293670 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293669,G__293670) : tailrecursion.hoplon.span.call(null,G__293669,G__293670));
})();
var G__293650 = "]\n  (";
var G__293651 = (function (){var G__293671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293672 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293671,G__293672) : tailrecursion.hoplon.span.call(null,G__293671,G__293672));
})();
var G__293652 = (function (){var G__293673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293674 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293673,G__293674) : tailrecursion.hoplon.span.call(null,G__293673,G__293674));
})();
var G__293653 = " ";
var G__293654 = (function (){var G__293675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293676 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293675,G__293676) : tailrecursion.hoplon.span.call(null,G__293675,G__293676));
})();
var G__293655 = " (";
var G__293656 = (function (){var G__293677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293678 = "reduce + ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293677,G__293678) : tailrecursion.hoplon.span.call(null,G__293677,G__293678));
})();
var G__293657 = (function (){var G__293679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293680 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293679,G__293680) : tailrecursion.hoplon.span.call(null,G__293679,G__293680));
})();
var G__293658 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21(G__293638,G__293639,G__293640,G__293641,G__293642,G__293643,G__293644,G__293645,G__293646,G__293647,G__293648,G__293649,G__293650,G__293651,G__293652,G__293653,G__293654,G__293655,G__293656,G__293657,G__293658) : tailrecursion.hoplon.pre.call(null,G__293638,G__293639,G__293640,G__293641,G__293642,G__293643,G__293644,G__293645,G__293646,G__293647,G__293648,G__293649,G__293650,G__293651,G__293652,G__293653,G__293654,G__293655,G__293656,G__293657,G__293658));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__293636,G__293637) : tailrecursion.hoplon.div.call(null,G__293636,G__293637));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__293635) : tailrecursion.hoplon.div.call(null,G__293635));
})(),(function (){var G__293681 = cljs.core.PersistentArrayMap.EMPTY;
var G__293682 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This function will add up all arguments after the first two (if there are none, it will return 0 for this part). It then returns the product of that sum and the first two arguments. Play around with this structure for a while to give yourself some familiarity before solving this problem."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293681,G__293682) : tailrecursion.hoplon.markdown.para_node.call(null,G__293681,G__293682));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293385;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293384;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293383;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293382;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_293683 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293684 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_293685 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293686 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__293930 = (function (){var G__293931 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__293932 = (function (){var G__293933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__293934 = "(";
var G__293935 = (function (){var G__294048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__294049 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294048,G__294049) : tailrecursion.hoplon.span.call(null,G__294048,G__294049));
})();
var G__293936 = (function (){var G__294050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294051 = "sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294050,G__294051) : tailrecursion.hoplon.span.call(null,G__294050,G__294051));
})();
var G__293937 = " [";
var G__293938 = (function (){var G__294052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294053 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294052,G__294053) : tailrecursion.hoplon.span.call(null,G__294052,G__294053));
})();
var G__293939 = "]\n  (";
var G__293940 = (function (){var G__294054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294055 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294054,G__294055) : tailrecursion.hoplon.span.call(null,G__294054,G__294055));
})();
var G__293941 = "(";
var G__293942 = (function (){var G__294056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294057 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294056,G__294057) : tailrecursion.hoplon.span.call(null,G__294056,G__294057));
})();
var G__293943 = (function (){var G__294058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294059 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294058,G__294059) : tailrecursion.hoplon.span.call(null,G__294058,G__294059));
})();
var G__293944 = ") ";
var G__293945 = (function (){var G__294060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294061 = "'+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294060,G__294061) : tailrecursion.hoplon.span.call(null,G__294060,G__294061));
})();
var G__293946 = "))\n\n(";
var G__293947 = (function (){var G__294062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__294063 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294062,G__294063) : tailrecursion.hoplon.span.call(null,G__294062,G__294063));
})();
var G__293948 = (function (){var G__294064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294065 = "addend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294064,G__294065) : tailrecursion.hoplon.span.call(null,G__294064,G__294065));
})();
var G__293949 = " [";
var G__293950 = (function (){var G__294066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294067 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294066,G__294067) : tailrecursion.hoplon.span.call(null,G__294066,G__294067));
})();
var G__293951 = "]\n  (";
var G__293952 = (function (){var G__294068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294069 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294068,G__294069) : tailrecursion.hoplon.span.call(null,G__294068,G__294069));
})();
var G__293953 = (function (){var G__294070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294071 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294070,G__294071) : tailrecursion.hoplon.span.call(null,G__294070,G__294071));
})();
var G__293954 = "))\n\n(";
var G__293955 = (function (){var G__294072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__294073 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294072,G__294073) : tailrecursion.hoplon.span.call(null,G__294072,G__294073));
})();
var G__293956 = (function (){var G__294074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294075 = "augend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294074,G__294075) : tailrecursion.hoplon.span.call(null,G__294074,G__294075));
})();
var G__293957 = " [";
var G__293958 = (function (){var G__294076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294077 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294076,G__294077) : tailrecursion.hoplon.span.call(null,G__294076,G__294077));
})();
var G__293959 = "]\n  (";
var G__293960 = (function (){var G__294078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294079 = "drop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294078,G__294079) : tailrecursion.hoplon.span.call(null,G__294078,G__294079));
})();
var G__293961 = (function (){var G__294080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__294081 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294080,G__294081) : tailrecursion.hoplon.span.call(null,G__294080,G__294081));
})();
var G__293962 = " ";
var G__293963 = (function (){var G__294082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294083 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294082,G__294083) : tailrecursion.hoplon.span.call(null,G__294082,G__294083));
})();
var G__293964 = "))\n\n(";
var G__293965 = (function (){var G__294084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__294085 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294084,G__294085) : tailrecursion.hoplon.span.call(null,G__294084,G__294085));
})();
var G__293966 = (function (){var G__294086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294087 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294086,G__294087) : tailrecursion.hoplon.span.call(null,G__294086,G__294087));
})();
var G__293967 = "\n  ([";
var G__293968 = (function (){var G__294088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294089 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294088,G__294089) : tailrecursion.hoplon.span.call(null,G__294088,G__294089));
})();
var G__293969 = " ";
var G__293970 = (function (){var G__294090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294091 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294090,G__294091) : tailrecursion.hoplon.span.call(null,G__294090,G__294091));
})();
var G__293971 = "] (";
var G__293972 = (function (){var G__294092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294093 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294092,G__294093) : tailrecursion.hoplon.span.call(null,G__294092,G__294093));
})();
var G__293973 = "(";
var G__293974 = (function (){var G__294094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294095 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294094,G__294095) : tailrecursion.hoplon.span.call(null,G__294094,G__294095));
})();
var G__293975 = (function (){var G__294096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294097 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294096,G__294097) : tailrecursion.hoplon.span.call(null,G__294096,G__294097));
})();
var G__293976 = " ";
var G__293977 = (function (){var G__294098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__294099 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294098,G__294099) : tailrecursion.hoplon.span.call(null,G__294098,G__294099));
})();
var G__293978 = ") ";
var G__293979 = (function (){var G__294100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294101 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294100,G__294101) : tailrecursion.hoplon.span.call(null,G__294100,G__294101));
})();
var G__293980 = "\n               (";
var G__293981 = (function (){var G__294102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294103 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294102,G__294103) : tailrecursion.hoplon.span.call(null,G__294102,G__294103));
})();
var G__293982 = (function (){var G__294104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294105 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294104,G__294105) : tailrecursion.hoplon.span.call(null,G__294104,G__294105));
})();
var G__293983 = " ";
var G__293984 = (function (){var G__294106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__294107 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294106,G__294107) : tailrecursion.hoplon.span.call(null,G__294106,G__294107));
})();
var G__293985 = ") ";
var G__293986 = (function (){var G__294108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294109 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294108,G__294109) : tailrecursion.hoplon.span.call(null,G__294108,G__294109));
})();
var G__293987 = "\n               (";
var G__293988 = (function (){var G__294110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294111 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294110,G__294111) : tailrecursion.hoplon.span.call(null,G__294110,G__294111));
})();
var G__293989 = "(";
var G__293990 = (function (){var G__294112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__294113 = "number?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294112,G__294113) : tailrecursion.hoplon.span.call(null,G__294112,G__294113));
})();
var G__293991 = " ";
var G__293992 = (function (){var G__294114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294115 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294114,G__294115) : tailrecursion.hoplon.span.call(null,G__294114,G__294115));
})();
var G__293993 = ")\n                    (";
var G__293994 = (function (){var G__294116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__294117 = "number?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294116,G__294117) : tailrecursion.hoplon.span.call(null,G__294116,G__294117));
})();
var G__293995 = " ";
var G__293996 = (function (){var G__294118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294119 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294118,G__294119) : tailrecursion.hoplon.span.call(null,G__294118,G__294119));
})();
var G__293997 = ")) (";
var G__293998 = (function (){var G__294120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294121 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294120,G__294121) : tailrecursion.hoplon.span.call(null,G__294120,G__294121));
})();
var G__293999 = (function (){var G__294122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294123 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294122,G__294123) : tailrecursion.hoplon.span.call(null,G__294122,G__294123));
})();
var G__294000 = " ";
var G__294001 = (function (){var G__294124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294125 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294124,G__294125) : tailrecursion.hoplon.span.call(null,G__294124,G__294125));
})();
var G__294002 = ")\n               ";
var G__294003 = (function (){var G__294126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294127 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294126,G__294127) : tailrecursion.hoplon.span.call(null,G__294126,G__294127));
})();
var G__294004 = " (";
var G__294005 = (function (){var G__294128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294129 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294128,G__294129) : tailrecursion.hoplon.span.call(null,G__294128,G__294129));
})();
var G__294006 = (function (){var G__294130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294131 = "'+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294130,G__294131) : tailrecursion.hoplon.span.call(null,G__294130,G__294131));
})();
var G__294007 = " ";
var G__294008 = (function (){var G__294132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294133 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294132,G__294133) : tailrecursion.hoplon.span.call(null,G__294132,G__294133));
})();
var G__294009 = " ";
var G__294010 = (function (){var G__294134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294135 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294134,G__294135) : tailrecursion.hoplon.span.call(null,G__294134,G__294135));
})();
var G__294011 = ")))\n  ([";
var G__294012 = (function (){var G__294136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294137 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294136,G__294137) : tailrecursion.hoplon.span.call(null,G__294136,G__294137));
})();
var G__294013 = " ";
var G__294014 = (function (){var G__294138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294139 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294138,G__294139) : tailrecursion.hoplon.span.call(null,G__294138,G__294139));
})();
var G__294015 = " ";
var G__294016 = (function (){var G__294140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__294141 = "&";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294140,G__294141) : tailrecursion.hoplon.span.call(null,G__294140,G__294141));
})();
var G__294017 = " ";
var G__294018 = (function (){var G__294142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294143 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294142,G__294143) : tailrecursion.hoplon.span.call(null,G__294142,G__294143));
})();
var G__294019 = "] (";
var G__294020 = (function (){var G__294144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__294145 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294144,G__294145) : tailrecursion.hoplon.span.call(null,G__294144,G__294145));
})();
var G__294021 = "(";
var G__294022 = (function (){var G__294146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__294147 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294146,G__294147) : tailrecursion.hoplon.span.call(null,G__294146,G__294147));
})();
var G__294023 = " ";
var G__294024 = (function (){var G__294148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294149 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294148,G__294149) : tailrecursion.hoplon.span.call(null,G__294148,G__294149));
})();
var G__294025 = ")\n                 (";
var G__294026 = (function (){var G__294150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__294151 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294150,G__294151) : tailrecursion.hoplon.span.call(null,G__294150,G__294151));
})();
var G__294027 = " ";
var G__294028 = (function (){var G__294152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294153 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294152,G__294153) : tailrecursion.hoplon.span.call(null,G__294152,G__294153));
})();
var G__294029 = " ";
var G__294030 = (function (){var G__294154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294155 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294154,G__294155) : tailrecursion.hoplon.span.call(null,G__294154,G__294155));
})();
var G__294031 = ")\n                 (";
var G__294032 = (function (){var G__294156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__294157 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294156,G__294157) : tailrecursion.hoplon.span.call(null,G__294156,G__294157));
})();
var G__294033 = " ";
var G__294034 = (function (){var G__294158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294159 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294158,G__294159) : tailrecursion.hoplon.span.call(null,G__294158,G__294159));
})();
var G__294035 = "\n                           (";
var G__294036 = (function (){var G__294160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__294161 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294160,G__294161) : tailrecursion.hoplon.span.call(null,G__294160,G__294161));
})();
var G__294037 = " ";
var G__294038 = (function (){var G__294162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294163 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294162,G__294163) : tailrecursion.hoplon.span.call(null,G__294162,G__294163));
})();
var G__294039 = " \n                                     (";
var G__294040 = (function (){var G__294164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294165 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294164,G__294165) : tailrecursion.hoplon.span.call(null,G__294164,G__294165));
})();
var G__294041 = (function (){var G__294166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294167 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294166,G__294167) : tailrecursion.hoplon.span.call(null,G__294166,G__294167));
})();
var G__294042 = ") \n                                     ";
var G__294043 = (function (){var G__294168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__294169 = "&";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294168,G__294169) : tailrecursion.hoplon.span.call(null,G__294168,G__294169));
})();
var G__294044 = " (";
var G__294045 = (function (){var G__294170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294171 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294170,G__294171) : tailrecursion.hoplon.span.call(null,G__294170,G__294171));
})();
var G__294046 = (function (){var G__294172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294173 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294172,G__294173) : tailrecursion.hoplon.span.call(null,G__294172,G__294173));
})();
var G__294047 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$115 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$115(G__293933,G__293934,G__293935,G__293936,G__293937,G__293938,G__293939,G__293940,G__293941,G__293942,G__293943,G__293944,G__293945,G__293946,G__293947,G__293948,G__293949,G__293950,G__293951,G__293952,G__293953,G__293954,G__293955,G__293956,G__293957,G__293958,G__293959,G__293960,G__293961,G__293962,G__293963,G__293964,G__293965,G__293966,G__293967,G__293968,G__293969,G__293970,G__293971,G__293972,G__293973,G__293974,G__293975,G__293976,G__293977,G__293978,G__293979,G__293980,G__293981,G__293982,G__293983,G__293984,G__293985,G__293986,G__293987,G__293988,G__293989,G__293990,G__293991,G__293992,G__293993,G__293994,G__293995,G__293996,G__293997,G__293998,G__293999,G__294000,G__294001,G__294002,G__294003,G__294004,G__294005,G__294006,G__294007,G__294008,G__294009,G__294010,G__294011,G__294012,G__294013,G__294014,G__294015,G__294016,G__294017,G__294018,G__294019,G__294020,G__294021,G__294022,G__294023,G__294024,G__294025,G__294026,G__294027,G__294028,G__294029,G__294030,G__294031,G__294032,G__294033,G__294034,G__294035,G__294036,G__294037,G__294038,G__294039,G__294040,G__294041,G__294042,G__294043,G__294044,G__294045,G__294046,G__294047) : tailrecursion.hoplon.pre.call(null,G__293933,G__293934,G__293935,G__293936,G__293937,G__293938,G__293939,G__293940,G__293941,G__293942,G__293943,G__293944,G__293945,G__293946,G__293947,G__293948,G__293949,G__293950,G__293951,G__293952,G__293953,G__293954,G__293955,G__293956,G__293957,G__293958,G__293959,G__293960,G__293961,G__293962,G__293963,G__293964,G__293965,G__293966,G__293967,G__293968,G__293969,G__293970,G__293971,G__293972,G__293973,G__293974,G__293975,G__293976,G__293977,G__293978,G__293979,G__293980,G__293981,G__293982,G__293983,G__293984,G__293985,G__293986,G__293987,G__293988,G__293989,G__293990,G__293991,G__293992,G__293993,G__293994,G__293995,G__293996,G__293997,G__293998,G__293999,G__294000,G__294001,G__294002,G__294003,G__294004,G__294005,G__294006,G__294007,G__294008,G__294009,G__294010,G__294011,G__294012,G__294013,G__294014,G__294015,G__294016,G__294017,G__294018,G__294019,G__294020,G__294021,G__294022,G__294023,G__294024,G__294025,G__294026,G__294027,G__294028,G__294029,G__294030,G__294031,G__294032,G__294033,G__294034,G__294035,G__294036,G__294037,G__294038,G__294039,G__294040,G__294041,G__294042,G__294043,G__294044,G__294045,G__294046,G__294047));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__293931,G__293932) : tailrecursion.hoplon.div.call(null,G__293931,G__293932));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__293930) : tailrecursion.hoplon.div.call(null,G__293930));
})(),(function (){var G__294174 = cljs.core.PersistentArrayMap.EMPTY;
var G__294175 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The product version is analogous."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__294174,G__294175) : tailrecursion.hoplon.markdown.para_node.call(null,G__294174,G__294175));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293686;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293685;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293684;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293683;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_294176 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_294177 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_294178 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_294179 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__294180 = cljs.core.PersistentArrayMap.EMPTY;
var G__294181 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Suppose we want to modify the differentiation program so that it works with ordinary mathematical notation, in which ",(function (){var G__294182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"+"], null);
var G__294183 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__294182,G__294183) : tailrecursion.hoplon.markdown.code_node.call(null,G__294182,G__294183));
})()," and ",(function (){var G__294184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"*"], null);
var G__294185 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__294184,G__294185) : tailrecursion.hoplon.markdown.code_node.call(null,G__294184,G__294185));
})()," are infix rather than prefix operators. Since the differentiation program is defined in terms of abstract data, we can modify it to work with different representations of expressions solely by changing the predicates, selectors, and constructors that define the representation of the algebraic expressions on which the differentiator is to operate."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__294180,G__294181) : tailrecursion.hoplon.markdown.para_node.call(null,G__294180,G__294181));
})(),(function (){var G__294186 = cljs.core.PersistentArrayMap.EMPTY;
var G__294187 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a. Show how to do this in order to differentiate algebraic expressions presented in infix form, such as ",(function (){var G__294188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(x + (3 * (x + (y +\n2))))"], null);
var G__294189 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__294188,G__294189) : tailrecursion.hoplon.markdown.code_node.call(null,G__294188,G__294189));
})(),". To simplify the task, assume that ",(function (){var G__294190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"+"], null);
var G__294191 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__294190,G__294191) : tailrecursion.hoplon.markdown.code_node.call(null,G__294190,G__294191));
})()," and ",(function (){var G__294192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"*"], null);
var G__294193 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__294192,G__294193) : tailrecursion.hoplon.markdown.code_node.call(null,G__294192,G__294193));
})()," always take two arguments and that expressions are fully parenthesized."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__294186,G__294187) : tailrecursion.hoplon.markdown.para_node.call(null,G__294186,G__294187));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_294179;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_294178;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_294177;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_294176;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_294194 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_294195 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_294196 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_294197 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__294367 = (function (){var G__294368 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__294369 = (function (){var G__294370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__294371 = "(";
var G__294372 = (function (){var G__294449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__294450 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294449,G__294450) : tailrecursion.hoplon.span.call(null,G__294449,G__294450));
})();
var G__294373 = (function (){var G__294451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294452 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294451,G__294452) : tailrecursion.hoplon.span.call(null,G__294451,G__294452));
})();
var G__294374 = " [";
var G__294375 = (function (){var G__294453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294454 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294453,G__294454) : tailrecursion.hoplon.span.call(null,G__294453,G__294454));
})();
var G__294376 = " ";
var G__294377 = (function (){var G__294455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294456 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294455,G__294456) : tailrecursion.hoplon.span.call(null,G__294455,G__294456));
})();
var G__294378 = "]\n  (";
var G__294379 = (function (){var G__294457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294458 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294457,G__294458) : tailrecursion.hoplon.span.call(null,G__294457,G__294458));
})();
var G__294380 = "(";
var G__294381 = (function (){var G__294459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294460 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294459,G__294460) : tailrecursion.hoplon.span.call(null,G__294459,G__294460));
})();
var G__294382 = (function (){var G__294461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294462 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294461,G__294462) : tailrecursion.hoplon.span.call(null,G__294461,G__294462));
})();
var G__294383 = " ";
var G__294384 = (function (){var G__294463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__294464 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294463,G__294464) : tailrecursion.hoplon.span.call(null,G__294463,G__294464));
})();
var G__294385 = ") ";
var G__294386 = (function (){var G__294465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294466 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294465,G__294466) : tailrecursion.hoplon.span.call(null,G__294465,G__294466));
})();
var G__294387 = "\n        (";
var G__294388 = (function (){var G__294467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294468 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294467,G__294468) : tailrecursion.hoplon.span.call(null,G__294467,G__294468));
})();
var G__294389 = (function (){var G__294469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294470 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294469,G__294470) : tailrecursion.hoplon.span.call(null,G__294469,G__294470));
})();
var G__294390 = " ";
var G__294391 = (function (){var G__294471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__294472 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294471,G__294472) : tailrecursion.hoplon.span.call(null,G__294471,G__294472));
})();
var G__294392 = ") ";
var G__294393 = (function (){var G__294473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294474 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294473,G__294474) : tailrecursion.hoplon.span.call(null,G__294473,G__294474));
})();
var G__294394 = "\n        (";
var G__294395 = (function (){var G__294475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294476 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294475,G__294476) : tailrecursion.hoplon.span.call(null,G__294475,G__294476));
})();
var G__294396 = "(";
var G__294397 = (function (){var G__294477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__294478 = "number?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294477,G__294478) : tailrecursion.hoplon.span.call(null,G__294477,G__294478));
})();
var G__294398 = " ";
var G__294399 = (function (){var G__294479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294480 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294479,G__294480) : tailrecursion.hoplon.span.call(null,G__294479,G__294480));
})();
var G__294400 = ")\n             (";
var G__294401 = (function (){var G__294481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__294482 = "number?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294481,G__294482) : tailrecursion.hoplon.span.call(null,G__294481,G__294482));
})();
var G__294402 = " ";
var G__294403 = (function (){var G__294483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294484 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294483,G__294484) : tailrecursion.hoplon.span.call(null,G__294483,G__294484));
})();
var G__294404 = ")) (";
var G__294405 = (function (){var G__294485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294486 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294485,G__294486) : tailrecursion.hoplon.span.call(null,G__294485,G__294486));
})();
var G__294406 = (function (){var G__294487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294488 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294487,G__294488) : tailrecursion.hoplon.span.call(null,G__294487,G__294488));
})();
var G__294407 = " ";
var G__294408 = (function (){var G__294489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294490 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294489,G__294490) : tailrecursion.hoplon.span.call(null,G__294489,G__294490));
})();
var G__294409 = ")\n        ";
var G__294410 = (function (){var G__294491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294492 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294491,G__294492) : tailrecursion.hoplon.span.call(null,G__294491,G__294492));
})();
var G__294411 = " (";
var G__294412 = (function (){var G__294493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294494 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294493,G__294494) : tailrecursion.hoplon.span.call(null,G__294493,G__294494));
})();
var G__294413 = (function (){var G__294495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294496 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294495,G__294496) : tailrecursion.hoplon.span.call(null,G__294495,G__294496));
})();
var G__294414 = " ";
var G__294415 = (function (){var G__294497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294498 = "'+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294497,G__294498) : tailrecursion.hoplon.span.call(null,G__294497,G__294498));
})();
var G__294416 = " ";
var G__294417 = (function (){var G__294499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294500 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294499,G__294500) : tailrecursion.hoplon.span.call(null,G__294499,G__294500));
})();
var G__294418 = ")))\n\n(";
var G__294419 = (function (){var G__294501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__294502 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294501,G__294502) : tailrecursion.hoplon.span.call(null,G__294501,G__294502));
})();
var G__294420 = (function (){var G__294503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294504 = "addend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294503,G__294504) : tailrecursion.hoplon.span.call(null,G__294503,G__294504));
})();
var G__294421 = " [";
var G__294422 = (function (){var G__294505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294506 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294505,G__294506) : tailrecursion.hoplon.span.call(null,G__294505,G__294506));
})();
var G__294423 = "]\n  (";
var G__294424 = (function (){var G__294507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294508 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294507,G__294508) : tailrecursion.hoplon.span.call(null,G__294507,G__294508));
})();
var G__294425 = (function (){var G__294509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294510 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294509,G__294510) : tailrecursion.hoplon.span.call(null,G__294509,G__294510));
})();
var G__294426 = "))\n\n(";
var G__294427 = (function (){var G__294511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__294512 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294511,G__294512) : tailrecursion.hoplon.span.call(null,G__294511,G__294512));
})();
var G__294428 = (function (){var G__294513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294514 = "augend";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294513,G__294514) : tailrecursion.hoplon.span.call(null,G__294513,G__294514));
})();
var G__294429 = " [";
var G__294430 = (function (){var G__294515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294516 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294515,G__294516) : tailrecursion.hoplon.span.call(null,G__294515,G__294516));
})();
var G__294431 = "]\n  (";
var G__294432 = (function (){var G__294517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294518 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294517,G__294518) : tailrecursion.hoplon.span.call(null,G__294517,G__294518));
})();
var G__294433 = (function (){var G__294519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294520 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294519,G__294520) : tailrecursion.hoplon.span.call(null,G__294519,G__294520));
})();
var G__294434 = " ";
var G__294435 = (function (){var G__294521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__294522 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294521,G__294522) : tailrecursion.hoplon.span.call(null,G__294521,G__294522));
})();
var G__294436 = "))\n\n(";
var G__294437 = (function (){var G__294523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__294524 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294523,G__294524) : tailrecursion.hoplon.span.call(null,G__294523,G__294524));
})();
var G__294438 = (function (){var G__294525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294526 = "sum?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294525,G__294526) : tailrecursion.hoplon.span.call(null,G__294525,G__294526));
})();
var G__294439 = " [";
var G__294440 = (function (){var G__294527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294528 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294527,G__294528) : tailrecursion.hoplon.span.call(null,G__294527,G__294528));
})();
var G__294441 = "]\n  (";
var G__294442 = (function (){var G__294529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294530 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294529,G__294530) : tailrecursion.hoplon.span.call(null,G__294529,G__294530));
})();
var G__294443 = "(";
var G__294444 = (function (){var G__294531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__294532 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294531,G__294532) : tailrecursion.hoplon.span.call(null,G__294531,G__294532));
})();
var G__294445 = (function (){var G__294533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294534 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294533,G__294534) : tailrecursion.hoplon.span.call(null,G__294533,G__294534));
})();
var G__294446 = ") ";
var G__294447 = (function (){var G__294535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__294536 = "'+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__294535,G__294536) : tailrecursion.hoplon.span.call(null,G__294535,G__294536));
})();
var G__294448 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$79 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$79(G__294370,G__294371,G__294372,G__294373,G__294374,G__294375,G__294376,G__294377,G__294378,G__294379,G__294380,G__294381,G__294382,G__294383,G__294384,G__294385,G__294386,G__294387,G__294388,G__294389,G__294390,G__294391,G__294392,G__294393,G__294394,G__294395,G__294396,G__294397,G__294398,G__294399,G__294400,G__294401,G__294402,G__294403,G__294404,G__294405,G__294406,G__294407,G__294408,G__294409,G__294410,G__294411,G__294412,G__294413,G__294414,G__294415,G__294416,G__294417,G__294418,G__294419,G__294420,G__294421,G__294422,G__294423,G__294424,G__294425,G__294426,G__294427,G__294428,G__294429,G__294430,G__294431,G__294432,G__294433,G__294434,G__294435,G__294436,G__294437,G__294438,G__294439,G__294440,G__294441,G__294442,G__294443,G__294444,G__294445,G__294446,G__294447,G__294448) : tailrecursion.hoplon.pre.call(null,G__294370,G__294371,G__294372,G__294373,G__294374,G__294375,G__294376,G__294377,G__294378,G__294379,G__294380,G__294381,G__294382,G__294383,G__294384,G__294385,G__294386,G__294387,G__294388,G__294389,G__294390,G__294391,G__294392,G__294393,G__294394,G__294395,G__294396,G__294397,G__294398,G__294399,G__294400,G__294401,G__294402,G__294403,G__294404,G__294405,G__294406,G__294407,G__294408,G__294409,G__294410,G__294411,G__294412,G__294413,G__294414,G__294415,G__294416,G__294417,G__294418,G__294419,G__294420,G__294421,G__294422,G__294423,G__294424,G__294425,G__294426,G__294427,G__294428,G__294429,G__294430,G__294431,G__294432,G__294433,G__294434,G__294435,G__294436,G__294437,G__294438,G__294439,G__294440,G__294441,G__294442,G__294443,G__294444,G__294445,G__294446,G__294447,G__294448));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__294368,G__294369) : tailrecursion.hoplon.div.call(null,G__294368,G__294369));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__294367) : tailrecursion.hoplon.div.call(null,G__294367));
})(),(function (){var G__294537 = cljs.core.PersistentArrayMap.EMPTY;
var G__294538 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The one for product is analogous."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__294537,G__294538) : tailrecursion.hoplon.markdown.para_node.call(null,G__294537,G__294538));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_294197;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_294196;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_294195;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_294194;
}})()], 0)),"",(function (){var _STAR_references_STAR_294539 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_294540 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_294541 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_294542 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__294543 = cljs.core.PersistentArrayMap.EMPTY;
var G__294544 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b. The problem becomes substantially harder if we allow standard algebraic notation, such as ",(function (){var G__294545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(x + 3 * (x + y + 2))"], null);
var G__294546 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__294545,G__294546) : tailrecursion.hoplon.markdown.code_node.call(null,G__294545,G__294546));
})(),", which drops unnecessary parentheses and assumes that multiplication is done before addition. Can you design appropriate predicates, selectors, and constructors for this notation such that our derivative program still works?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__294543,G__294544) : tailrecursion.hoplon.markdown.para_node.call(null,G__294543,G__294544));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_294542;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_294541;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_294540;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_294539;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_294547 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_294548 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_294549 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_294550 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__294551 = cljs.core.PersistentArrayMap.EMPTY;
var G__294552 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This is exactly why 1) prefix notation is so awesome, and 2) macros. But let",(function (){var G__294553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__294554 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__294553,G__294554) : tailrecursion.hoplon.markdown.simple_node.call(null,G__294553,G__294554));
})(),"s try this out without beautiful, beautiful macros. This solution is not a partifularly pretty one, but I",(function (){var G__294555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__294556 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__294555,G__294556) : tailrecursion.hoplon.markdown.simple_node.call(null,G__294555,G__294556));
})(),"m doing this one after a VERY long day, so",(function (){var G__294557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__294558 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__294557,G__294558) : tailrecursion.hoplon.markdown.simple_node.call(null,G__294557,G__294558));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__294551,G__294552) : tailrecursion.hoplon.markdown.para_node.call(null,G__294551,G__294552));
})(),(function (){var G__295033 = (function (){var G__295034 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__295035 = (function (){var G__295036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__295037 = "(";
var G__295038 = (function (){var G__295258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__295259 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295258,G__295259) : tailrecursion.hoplon.span.call(null,G__295258,G__295259));
})();
var G__295039 = (function (){var G__295260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295261 = "exponents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295260,G__295261) : tailrecursion.hoplon.span.call(null,G__295260,G__295261));
})();
var G__295040 = " [";
var G__295041 = (function (){var G__295262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295263 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295262,G__295263) : tailrecursion.hoplon.span.call(null,G__295262,G__295263));
})();
var G__295042 = "]\n  (";
var G__295043 = (function (){var G__295264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__295265 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295264,G__295265) : tailrecursion.hoplon.span.call(null,G__295264,G__295265));
})();
var G__295044 = "[";
var G__295045 = (function (){var G__295266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295267 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295266,G__295267) : tailrecursion.hoplon.span.call(null,G__295266,G__295267));
})();
var G__295046 = " (";
var G__295047 = (function (){var G__295268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295269 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295268,G__295269) : tailrecursion.hoplon.span.call(null,G__295268,G__295269));
})();
var G__295048 = ")\n         ";
var G__295049 = (function (){var G__295270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295271 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295270,G__295271) : tailrecursion.hoplon.span.call(null,G__295270,G__295271));
})();
var G__295050 = (function (){var G__295272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295273 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295272,G__295273) : tailrecursion.hoplon.span.call(null,G__295272,G__295273));
})();
var G__295051 = "]\n    (";
var G__295052 = (function (){var G__295274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295275 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295274,G__295275) : tailrecursion.hoplon.span.call(null,G__295274,G__295275));
})();
var G__295053 = "(";
var G__295054 = (function (){var G__295276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__295277 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295276,G__295277) : tailrecursion.hoplon.span.call(null,G__295276,G__295277));
})();
var G__295055 = " ";
var G__295056 = (function (){var G__295278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295279 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295278,G__295279) : tailrecursion.hoplon.span.call(null,G__295278,G__295279));
})();
var G__295057 = ") ";
var G__295058 = (function (){var G__295280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295281 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295280,G__295281) : tailrecursion.hoplon.span.call(null,G__295280,G__295281));
})();
var G__295059 = "\n          (";
var G__295060 = (function (){var G__295282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295283 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295282,G__295283) : tailrecursion.hoplon.span.call(null,G__295282,G__295283));
})();
var G__295061 = "(";
var G__295062 = (function (){var G__295284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295285 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295284,G__295285) : tailrecursion.hoplon.span.call(null,G__295284,G__295285));
})();
var G__295063 = (function (){var G__295286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295287 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295286,G__295287) : tailrecursion.hoplon.span.call(null,G__295286,G__295287));
})();
var G__295064 = ") ";
var G__295065 = (function (){var G__295288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295289 = "'**";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295288,G__295289) : tailrecursion.hoplon.span.call(null,G__295288,G__295289));
})();
var G__295066 = ") (";
var G__295067 = (function (){var G__295290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__295291 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295290,G__295291) : tailrecursion.hoplon.span.call(null,G__295290,G__295291));
})();
var G__295068 = " ";
var G__295069 = (function (){var G__295292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295293 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295292,G__295293) : tailrecursion.hoplon.span.call(null,G__295292,G__295293));
})();
var G__295070 = " \n                                       (";
var G__295071 = (function (){var G__295294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295295 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295294,G__295295) : tailrecursion.hoplon.span.call(null,G__295294,G__295295));
})();
var G__295072 = "(";
var G__295073 = (function (){var G__295296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295297 = "drop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295296,G__295297) : tailrecursion.hoplon.span.call(null,G__295296,G__295297));
})();
var G__295074 = (function (){var G__295298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__295299 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295298,G__295299) : tailrecursion.hoplon.span.call(null,G__295298,G__295299));
})();
var G__295075 = " ";
var G__295076 = (function (){var G__295300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295301 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295300,G__295301) : tailrecursion.hoplon.span.call(null,G__295300,G__295301));
})();
var G__295077 = ")\n                                             (";
var G__295078 = (function (){var G__295302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__295303 = "make-exponentiation";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295302,G__295303) : tailrecursion.hoplon.span.call(null,G__295302,G__295303));
})();
var G__295079 = " (";
var G__295080 = (function (){var G__295304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295305 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295304,G__295305) : tailrecursion.hoplon.span.call(null,G__295304,G__295305));
})();
var G__295081 = (function (){var G__295306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295307 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295306,G__295307) : tailrecursion.hoplon.span.call(null,G__295306,G__295307));
})();
var G__295082 = ")\n                                                                  (";
var G__295083 = (function (){var G__295308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295309 = "nth left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295308,G__295309) : tailrecursion.hoplon.span.call(null,G__295308,G__295309));
})();
var G__295084 = (function (){var G__295310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__295311 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295310,G__295311) : tailrecursion.hoplon.span.call(null,G__295310,G__295311));
})();
var G__295085 = "))))\n          ";
var G__295086 = (function (){var G__295312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295313 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295312,G__295313) : tailrecursion.hoplon.span.call(null,G__295312,G__295313));
})();
var G__295087 = " (";
var G__295088 = (function (){var G__295314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__295315 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295314,G__295315) : tailrecursion.hoplon.span.call(null,G__295314,G__295315));
})();
var G__295089 = " (";
var G__295090 = (function (){var G__295316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295317 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295316,G__295317) : tailrecursion.hoplon.span.call(null,G__295316,G__295317));
})();
var G__295091 = (function (){var G__295318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295319 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295318,G__295319) : tailrecursion.hoplon.span.call(null,G__295318,G__295319));
})();
var G__295092 = " (";
var G__295093 = (function (){var G__295320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295321 = "take ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295320,G__295321) : tailrecursion.hoplon.span.call(null,G__295320,G__295321));
})();
var G__295094 = (function (){var G__295322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__295323 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295322,G__295323) : tailrecursion.hoplon.span.call(null,G__295322,G__295323));
})();
var G__295095 = " ";
var G__295096 = (function (){var G__295324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295325 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295324,G__295325) : tailrecursion.hoplon.span.call(null,G__295324,G__295325));
})();
var G__295097 = "))\n                       (";
var G__295098 = (function (){var G__295326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295327 = "drop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295326,G__295327) : tailrecursion.hoplon.span.call(null,G__295326,G__295327));
})();
var G__295099 = (function (){var G__295328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__295329 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295328,G__295329) : tailrecursion.hoplon.span.call(null,G__295328,G__295329));
})();
var G__295100 = " ";
var G__295101 = (function (){var G__295330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295331 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295330,G__295331) : tailrecursion.hoplon.span.call(null,G__295330,G__295331));
})();
var G__295102 = ")))))\n\n(";
var G__295103 = (function (){var G__295332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__295333 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295332,G__295333) : tailrecursion.hoplon.span.call(null,G__295332,G__295333));
})();
var G__295104 = (function (){var G__295334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295335 = "multiplication";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295334,G__295335) : tailrecursion.hoplon.span.call(null,G__295334,G__295335));
})();
var G__295105 = " [";
var G__295106 = (function (){var G__295336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295337 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295336,G__295337) : tailrecursion.hoplon.span.call(null,G__295336,G__295337));
})();
var G__295107 = "]\n  (";
var G__295108 = (function (){var G__295338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__295339 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295338,G__295339) : tailrecursion.hoplon.span.call(null,G__295338,G__295339));
})();
var G__295109 = "[";
var G__295110 = (function (){var G__295340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295341 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295340,G__295341) : tailrecursion.hoplon.span.call(null,G__295340,G__295341));
})();
var G__295111 = " (";
var G__295112 = (function (){var G__295342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295343 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295342,G__295343) : tailrecursion.hoplon.span.call(null,G__295342,G__295343));
})();
var G__295113 = ")\n         ";
var G__295114 = (function (){var G__295344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295345 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295344,G__295345) : tailrecursion.hoplon.span.call(null,G__295344,G__295345));
})();
var G__295115 = (function (){var G__295346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295347 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295346,G__295347) : tailrecursion.hoplon.span.call(null,G__295346,G__295347));
})();
var G__295116 = "]\n    (";
var G__295117 = (function (){var G__295348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295349 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295348,G__295349) : tailrecursion.hoplon.span.call(null,G__295348,G__295349));
})();
var G__295118 = "(";
var G__295119 = (function (){var G__295350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__295351 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295350,G__295351) : tailrecursion.hoplon.span.call(null,G__295350,G__295351));
})();
var G__295120 = " ";
var G__295121 = (function (){var G__295352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295353 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295352,G__295353) : tailrecursion.hoplon.span.call(null,G__295352,G__295353));
})();
var G__295122 = ") ";
var G__295123 = (function (){var G__295354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295355 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295354,G__295355) : tailrecursion.hoplon.span.call(null,G__295354,G__295355));
})();
var G__295124 = "\n          (";
var G__295125 = (function (){var G__295356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295357 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295356,G__295357) : tailrecursion.hoplon.span.call(null,G__295356,G__295357));
})();
var G__295126 = "(";
var G__295127 = (function (){var G__295358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295359 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295358,G__295359) : tailrecursion.hoplon.span.call(null,G__295358,G__295359));
})();
var G__295128 = (function (){var G__295360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295361 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295360,G__295361) : tailrecursion.hoplon.span.call(null,G__295360,G__295361));
})();
var G__295129 = ") ";
var G__295130 = (function (){var G__295362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295363 = "'*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295362,G__295363) : tailrecursion.hoplon.span.call(null,G__295362,G__295363));
})();
var G__295131 = ") (";
var G__295132 = (function (){var G__295364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__295365 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295364,G__295365) : tailrecursion.hoplon.span.call(null,G__295364,G__295365));
})();
var G__295133 = " ";
var G__295134 = (function (){var G__295366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295367 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295366,G__295367) : tailrecursion.hoplon.span.call(null,G__295366,G__295367));
})();
var G__295135 = "\n                                      (";
var G__295136 = (function (){var G__295368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295369 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295368,G__295369) : tailrecursion.hoplon.span.call(null,G__295368,G__295369));
})();
var G__295137 = "(";
var G__295138 = (function (){var G__295370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295371 = "drop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295370,G__295371) : tailrecursion.hoplon.span.call(null,G__295370,G__295371));
})();
var G__295139 = (function (){var G__295372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__295373 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295372,G__295373) : tailrecursion.hoplon.span.call(null,G__295372,G__295373));
})();
var G__295140 = " ";
var G__295141 = (function (){var G__295374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295375 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295374,G__295375) : tailrecursion.hoplon.span.call(null,G__295374,G__295375));
})();
var G__295142 = ")\n                                            (";
var G__295143 = (function (){var G__295376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__295377 = "make-product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295376,G__295377) : tailrecursion.hoplon.span.call(null,G__295376,G__295377));
})();
var G__295144 = " (";
var G__295145 = (function (){var G__295378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295379 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295378,G__295379) : tailrecursion.hoplon.span.call(null,G__295378,G__295379));
})();
var G__295146 = (function (){var G__295380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295381 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295380,G__295381) : tailrecursion.hoplon.span.call(null,G__295380,G__295381));
})();
var G__295147 = ")\n                                                          (";
var G__295148 = (function (){var G__295382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295383 = "nth left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295382,G__295383) : tailrecursion.hoplon.span.call(null,G__295382,G__295383));
})();
var G__295149 = (function (){var G__295384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__295385 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295384,G__295385) : tailrecursion.hoplon.span.call(null,G__295384,G__295385));
})();
var G__295150 = "))))\n          ";
var G__295151 = (function (){var G__295386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295387 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295386,G__295387) : tailrecursion.hoplon.span.call(null,G__295386,G__295387));
})();
var G__295152 = " (";
var G__295153 = (function (){var G__295388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__295389 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295388,G__295389) : tailrecursion.hoplon.span.call(null,G__295388,G__295389));
})();
var G__295154 = " (";
var G__295155 = (function (){var G__295390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295391 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295390,G__295391) : tailrecursion.hoplon.span.call(null,G__295390,G__295391));
})();
var G__295156 = (function (){var G__295392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295393 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295392,G__295393) : tailrecursion.hoplon.span.call(null,G__295392,G__295393));
})();
var G__295157 = " (";
var G__295158 = (function (){var G__295394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295395 = "take ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295394,G__295395) : tailrecursion.hoplon.span.call(null,G__295394,G__295395));
})();
var G__295159 = (function (){var G__295396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__295397 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295396,G__295397) : tailrecursion.hoplon.span.call(null,G__295396,G__295397));
})();
var G__295160 = " ";
var G__295161 = (function (){var G__295398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295399 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295398,G__295399) : tailrecursion.hoplon.span.call(null,G__295398,G__295399));
})();
var G__295162 = "))\n                       (";
var G__295163 = (function (){var G__295400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295401 = "drop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295400,G__295401) : tailrecursion.hoplon.span.call(null,G__295400,G__295401));
})();
var G__295164 = (function (){var G__295402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__295403 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295402,G__295403) : tailrecursion.hoplon.span.call(null,G__295402,G__295403));
})();
var G__295165 = " ";
var G__295166 = (function (){var G__295404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295405 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295404,G__295405) : tailrecursion.hoplon.span.call(null,G__295404,G__295405));
})();
var G__295167 = ")))))\n\n(";
var G__295168 = (function (){var G__295406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__295407 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295406,G__295407) : tailrecursion.hoplon.span.call(null,G__295406,G__295407));
})();
var G__295169 = (function (){var G__295408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295409 = "addition";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295408,G__295409) : tailrecursion.hoplon.span.call(null,G__295408,G__295409));
})();
var G__295170 = " [";
var G__295171 = (function (){var G__295410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295411 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295410,G__295411) : tailrecursion.hoplon.span.call(null,G__295410,G__295411));
})();
var G__295172 = "]\n  (";
var G__295173 = (function (){var G__295412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__295413 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295412,G__295413) : tailrecursion.hoplon.span.call(null,G__295412,G__295413));
})();
var G__295174 = "[";
var G__295175 = (function (){var G__295414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295415 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295414,G__295415) : tailrecursion.hoplon.span.call(null,G__295414,G__295415));
})();
var G__295176 = " (";
var G__295177 = (function (){var G__295416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295417 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295416,G__295417) : tailrecursion.hoplon.span.call(null,G__295416,G__295417));
})();
var G__295178 = ")\n         ";
var G__295179 = (function (){var G__295418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295419 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295418,G__295419) : tailrecursion.hoplon.span.call(null,G__295418,G__295419));
})();
var G__295180 = (function (){var G__295420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295421 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295420,G__295421) : tailrecursion.hoplon.span.call(null,G__295420,G__295421));
})();
var G__295181 = "]\n    (";
var G__295182 = (function (){var G__295422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295423 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295422,G__295423) : tailrecursion.hoplon.span.call(null,G__295422,G__295423));
})();
var G__295183 = "(";
var G__295184 = (function (){var G__295424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__295425 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295424,G__295425) : tailrecursion.hoplon.span.call(null,G__295424,G__295425));
})();
var G__295185 = " ";
var G__295186 = (function (){var G__295426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295427 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295426,G__295427) : tailrecursion.hoplon.span.call(null,G__295426,G__295427));
})();
var G__295187 = ") ";
var G__295188 = (function (){var G__295428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295429 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295428,G__295429) : tailrecursion.hoplon.span.call(null,G__295428,G__295429));
})();
var G__295189 = "\n          (";
var G__295190 = (function (){var G__295430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295431 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295430,G__295431) : tailrecursion.hoplon.span.call(null,G__295430,G__295431));
})();
var G__295191 = "(";
var G__295192 = (function (){var G__295432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295433 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295432,G__295433) : tailrecursion.hoplon.span.call(null,G__295432,G__295433));
})();
var G__295193 = (function (){var G__295434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295435 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295434,G__295435) : tailrecursion.hoplon.span.call(null,G__295434,G__295435));
})();
var G__295194 = ") ";
var G__295195 = (function (){var G__295436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295437 = "'+";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295436,G__295437) : tailrecursion.hoplon.span.call(null,G__295436,G__295437));
})();
var G__295196 = ") (";
var G__295197 = (function (){var G__295438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__295439 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295438,G__295439) : tailrecursion.hoplon.span.call(null,G__295438,G__295439));
})();
var G__295198 = " ";
var G__295199 = (function (){var G__295440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295441 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295440,G__295441) : tailrecursion.hoplon.span.call(null,G__295440,G__295441));
})();
var G__295200 = "\n                                      (";
var G__295201 = (function (){var G__295442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295443 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295442,G__295443) : tailrecursion.hoplon.span.call(null,G__295442,G__295443));
})();
var G__295202 = "(";
var G__295203 = (function (){var G__295444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295445 = "drop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295444,G__295445) : tailrecursion.hoplon.span.call(null,G__295444,G__295445));
})();
var G__295204 = (function (){var G__295446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__295447 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295446,G__295447) : tailrecursion.hoplon.span.call(null,G__295446,G__295447));
})();
var G__295205 = " ";
var G__295206 = (function (){var G__295448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295449 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295448,G__295449) : tailrecursion.hoplon.span.call(null,G__295448,G__295449));
})();
var G__295207 = ")\n                                            (";
var G__295208 = (function (){var G__295450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__295451 = "make-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295450,G__295451) : tailrecursion.hoplon.span.call(null,G__295450,G__295451));
})();
var G__295209 = " (";
var G__295210 = (function (){var G__295452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295453 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295452,G__295453) : tailrecursion.hoplon.span.call(null,G__295452,G__295453));
})();
var G__295211 = (function (){var G__295454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295455 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295454,G__295455) : tailrecursion.hoplon.span.call(null,G__295454,G__295455));
})();
var G__295212 = ")\n                                                      (";
var G__295213 = (function (){var G__295456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295457 = "nth left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295456,G__295457) : tailrecursion.hoplon.span.call(null,G__295456,G__295457));
})();
var G__295214 = (function (){var G__295458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__295459 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295458,G__295459) : tailrecursion.hoplon.span.call(null,G__295458,G__295459));
})();
var G__295215 = "))))\n          ";
var G__295216 = (function (){var G__295460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295461 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295460,G__295461) : tailrecursion.hoplon.span.call(null,G__295460,G__295461));
})();
var G__295217 = " (";
var G__295218 = (function (){var G__295462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__295463 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295462,G__295463) : tailrecursion.hoplon.span.call(null,G__295462,G__295463));
})();
var G__295219 = " (";
var G__295220 = (function (){var G__295464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295465 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295464,G__295465) : tailrecursion.hoplon.span.call(null,G__295464,G__295465));
})();
var G__295221 = (function (){var G__295466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295467 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295466,G__295467) : tailrecursion.hoplon.span.call(null,G__295466,G__295467));
})();
var G__295222 = " (";
var G__295223 = (function (){var G__295468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295469 = "take ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295468,G__295469) : tailrecursion.hoplon.span.call(null,G__295468,G__295469));
})();
var G__295224 = (function (){var G__295470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__295471 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295470,G__295471) : tailrecursion.hoplon.span.call(null,G__295470,G__295471));
})();
var G__295225 = " ";
var G__295226 = (function (){var G__295472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295473 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295472,G__295473) : tailrecursion.hoplon.span.call(null,G__295472,G__295473));
})();
var G__295227 = "))\n                       (";
var G__295228 = (function (){var G__295474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295475 = "drop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295474,G__295475) : tailrecursion.hoplon.span.call(null,G__295474,G__295475));
})();
var G__295229 = (function (){var G__295476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__295477 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295476,G__295477) : tailrecursion.hoplon.span.call(null,G__295476,G__295477));
})();
var G__295230 = " ";
var G__295231 = (function (){var G__295478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295479 = "left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295478,G__295479) : tailrecursion.hoplon.span.call(null,G__295478,G__295479));
})();
var G__295232 = ")))))\n\n(";
var G__295233 = (function (){var G__295480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__295481 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295480,G__295481) : tailrecursion.hoplon.span.call(null,G__295480,G__295481));
})();
var G__295234 = (function (){var G__295482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295483 = "pemdas";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295482,G__295483) : tailrecursion.hoplon.span.call(null,G__295482,G__295483));
})();
var G__295235 = " [";
var G__295236 = (function (){var G__295484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295485 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295484,G__295485) : tailrecursion.hoplon.span.call(null,G__295484,G__295485));
})();
var G__295237 = "]\n  (";
var G__295238 = (function (){var G__295486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__295487 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295486,G__295487) : tailrecursion.hoplon.span.call(null,G__295486,G__295487));
})();
var G__295239 = "(";
var G__295240 = (function (){var G__295488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295489 = "seq? ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295488,G__295489) : tailrecursion.hoplon.span.call(null,G__295488,G__295489));
})();
var G__295241 = (function (){var G__295490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295491 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295490,G__295491) : tailrecursion.hoplon.span.call(null,G__295490,G__295491));
})();
var G__295242 = ") (";
var G__295243 = (function (){var G__295492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__295493 = "->>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295492,G__295493) : tailrecursion.hoplon.span.call(null,G__295492,G__295493));
})();
var G__295244 = " (";
var G__295245 = (function (){var G__295494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295495 = "map ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295494,G__295495) : tailrecursion.hoplon.span.call(null,G__295494,G__295495));
})();
var G__295246 = (function (){var G__295496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295497 = "pemdas";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295496,G__295497) : tailrecursion.hoplon.span.call(null,G__295496,G__295497));
})();
var G__295247 = " ";
var G__295248 = (function (){var G__295498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295499 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295498,G__295499) : tailrecursion.hoplon.span.call(null,G__295498,G__295499));
})();
var G__295249 = ")\n                             (";
var G__295250 = (function (){var G__295500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__295501 = "exponents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295500,G__295501) : tailrecursion.hoplon.span.call(null,G__295500,G__295501));
})();
var G__295251 = ")\n                             (";
var G__295252 = (function (){var G__295502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__295503 = "multiplication";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295502,G__295503) : tailrecursion.hoplon.span.call(null,G__295502,G__295503));
})();
var G__295253 = ")\n                             (";
var G__295254 = (function (){var G__295504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__295505 = "addition";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295504,G__295505) : tailrecursion.hoplon.span.call(null,G__295504,G__295505));
})();
var G__295255 = "))\n      ";
var G__295256 = (function (){var G__295506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295507 = "expression";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295506,G__295507) : tailrecursion.hoplon.span.call(null,G__295506,G__295507));
})();
var G__295257 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$222 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$222(G__295036,G__295037,G__295038,G__295039,G__295040,G__295041,G__295042,G__295043,G__295044,G__295045,G__295046,G__295047,G__295048,G__295049,G__295050,G__295051,G__295052,G__295053,G__295054,G__295055,G__295056,G__295057,G__295058,G__295059,G__295060,G__295061,G__295062,G__295063,G__295064,G__295065,G__295066,G__295067,G__295068,G__295069,G__295070,G__295071,G__295072,G__295073,G__295074,G__295075,G__295076,G__295077,G__295078,G__295079,G__295080,G__295081,G__295082,G__295083,G__295084,G__295085,G__295086,G__295087,G__295088,G__295089,G__295090,G__295091,G__295092,G__295093,G__295094,G__295095,G__295096,G__295097,G__295098,G__295099,G__295100,G__295101,G__295102,G__295103,G__295104,G__295105,G__295106,G__295107,G__295108,G__295109,G__295110,G__295111,G__295112,G__295113,G__295114,G__295115,G__295116,G__295117,G__295118,G__295119,G__295120,G__295121,G__295122,G__295123,G__295124,G__295125,G__295126,G__295127,G__295128,G__295129,G__295130,G__295131,G__295132,G__295133,G__295134,G__295135,G__295136,G__295137,G__295138,G__295139,G__295140,G__295141,G__295142,G__295143,G__295144,G__295145,G__295146,G__295147,G__295148,G__295149,G__295150,G__295151,G__295152,G__295153,G__295154,G__295155,G__295156,G__295157,G__295158,G__295159,G__295160,G__295161,G__295162,G__295163,G__295164,G__295165,G__295166,G__295167,G__295168,G__295169,G__295170,G__295171,G__295172,G__295173,G__295174,G__295175,G__295176,G__295177,G__295178,G__295179,G__295180,G__295181,G__295182,G__295183,G__295184,G__295185,G__295186,G__295187,G__295188,G__295189,G__295190,G__295191,G__295192,G__295193,G__295194,G__295195,G__295196,G__295197,G__295198,G__295199,G__295200,G__295201,G__295202,G__295203,G__295204,G__295205,G__295206,G__295207,G__295208,G__295209,G__295210,G__295211,G__295212,G__295213,G__295214,G__295215,G__295216,G__295217,G__295218,G__295219,G__295220,G__295221,G__295222,G__295223,G__295224,G__295225,G__295226,G__295227,G__295228,G__295229,G__295230,G__295231,G__295232,G__295233,G__295234,G__295235,G__295236,G__295237,G__295238,G__295239,G__295240,G__295241,G__295242,G__295243,G__295244,G__295245,G__295246,G__295247,G__295248,G__295249,G__295250,G__295251,G__295252,G__295253,G__295254,G__295255,G__295256,G__295257) : tailrecursion.hoplon.pre.call(null,G__295036,G__295037,G__295038,G__295039,G__295040,G__295041,G__295042,G__295043,G__295044,G__295045,G__295046,G__295047,G__295048,G__295049,G__295050,G__295051,G__295052,G__295053,G__295054,G__295055,G__295056,G__295057,G__295058,G__295059,G__295060,G__295061,G__295062,G__295063,G__295064,G__295065,G__295066,G__295067,G__295068,G__295069,G__295070,G__295071,G__295072,G__295073,G__295074,G__295075,G__295076,G__295077,G__295078,G__295079,G__295080,G__295081,G__295082,G__295083,G__295084,G__295085,G__295086,G__295087,G__295088,G__295089,G__295090,G__295091,G__295092,G__295093,G__295094,G__295095,G__295096,G__295097,G__295098,G__295099,G__295100,G__295101,G__295102,G__295103,G__295104,G__295105,G__295106,G__295107,G__295108,G__295109,G__295110,G__295111,G__295112,G__295113,G__295114,G__295115,G__295116,G__295117,G__295118,G__295119,G__295120,G__295121,G__295122,G__295123,G__295124,G__295125,G__295126,G__295127,G__295128,G__295129,G__295130,G__295131,G__295132,G__295133,G__295134,G__295135,G__295136,G__295137,G__295138,G__295139,G__295140,G__295141,G__295142,G__295143,G__295144,G__295145,G__295146,G__295147,G__295148,G__295149,G__295150,G__295151,G__295152,G__295153,G__295154,G__295155,G__295156,G__295157,G__295158,G__295159,G__295160,G__295161,G__295162,G__295163,G__295164,G__295165,G__295166,G__295167,G__295168,G__295169,G__295170,G__295171,G__295172,G__295173,G__295174,G__295175,G__295176,G__295177,G__295178,G__295179,G__295180,G__295181,G__295182,G__295183,G__295184,G__295185,G__295186,G__295187,G__295188,G__295189,G__295190,G__295191,G__295192,G__295193,G__295194,G__295195,G__295196,G__295197,G__295198,G__295199,G__295200,G__295201,G__295202,G__295203,G__295204,G__295205,G__295206,G__295207,G__295208,G__295209,G__295210,G__295211,G__295212,G__295213,G__295214,G__295215,G__295216,G__295217,G__295218,G__295219,G__295220,G__295221,G__295222,G__295223,G__295224,G__295225,G__295226,G__295227,G__295228,G__295229,G__295230,G__295231,G__295232,G__295233,G__295234,G__295235,G__295236,G__295237,G__295238,G__295239,G__295240,G__295241,G__295242,G__295243,G__295244,G__295245,G__295246,G__295247,G__295248,G__295249,G__295250,G__295251,G__295252,G__295253,G__295254,G__295255,G__295256,G__295257));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__295034,G__295035) : tailrecursion.hoplon.div.call(null,G__295034,G__295035));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__295033) : tailrecursion.hoplon.div.call(null,G__295033));
})(),(function (){var G__295508 = cljs.core.PersistentArrayMap.EMPTY;
var G__295509 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["After this, our expression should be in prefix notation with only two arguments for each operation, so we can use procedures supplied in the book. If you are unclear about what I did here (with ",(function (){var G__295510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"->>"], null);
var G__295511 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__295510,G__295511) : tailrecursion.hoplon.markdown.code_node.call(null,G__295510,G__295511));
})(),") look up Clojure",(function (){var G__295512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__295513 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__295512,G__295513) : tailrecursion.hoplon.markdown.simple_node.call(null,G__295512,G__295513));
})(),"s ",(function (){var G__295514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__295515 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["threading macro"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__295514,G__295515) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__295514,G__295515));
})()," or shoot me an email and I",(function (){var G__295516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__295517 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__295516,G__295517) : tailrecursion.hoplon.markdown.simple_node.call(null,G__295516,G__295517));
})(),"ll be happy to clarify things. Again, I would appreciate hearing exactly what is unclear so that I can make this site as clear as possible for future readers. So don",(function (){var G__295518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__295519 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__295518,G__295519) : tailrecursion.hoplon.markdown.simple_node.call(null,G__295518,G__295519));
})(),"t be shy! Email me! (My email address is in the footer)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__295508,G__295509) : tailrecursion.hoplon.markdown.para_node.call(null,G__295508,G__295509));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_294550;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_294549;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_294548;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_294547;
}})()], 0))], 0))], 0));
var G__288700 = "";
var G__288701 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Example: Representing Sets"], null),(function (){var _STAR_references_STAR_295520 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_295521 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_295522 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_295523 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__295524 = cljs.core.PersistentArrayMap.EMPTY;
var G__295525 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In the previous examples we built representations for two kinds of compound data objects: rational numbers and algebraic expressions. In one of these examples we had the choice of simplifying (reducing) the expressions at either construction time or selection time, but other than that the choice of a representation for these structures in terms of lists was straightforward. When we turn to the representation of sets, the choice of a representation is not so obvious. Indeed, there are a number of possible representations, and they differ significantly from one another in several ways."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__295524,G__295525) : tailrecursion.hoplon.markdown.para_node.call(null,G__295524,G__295525));
})(),(function (){var G__295526 = cljs.core.PersistentArrayMap.EMPTY;
var G__295527 = new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Informally, a set is simply a collection of distinct objects. To give a more precise definition we can employ the method of data abstraction. That is, we define ",(function (){var G__295528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__295529 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["set"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__295528,G__295529) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__295528,G__295529));
})()," by specifying the operations that are to be used on sets. These are ",(function (){var G__295530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"union-set"], null);
var G__295531 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__295530,G__295531) : tailrecursion.hoplon.markdown.code_node.call(null,G__295530,G__295531));
})(),", ",(function (){var G__295532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-set"], null);
var G__295533 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__295532,G__295533) : tailrecursion.hoplon.markdown.code_node.call(null,G__295532,G__295533));
})(),", ",(function (){var G__295534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__295535 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__295534,G__295535) : tailrecursion.hoplon.markdown.code_node.call(null,G__295534,G__295535));
})(),", and ",(function (){var G__295536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__295537 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__295536,G__295537) : tailrecursion.hoplon.markdown.code_node.call(null,G__295536,G__295537));
})(),". ",(function (){var G__295538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"Element-of-set?"], null);
var G__295539 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__295538,G__295539) : tailrecursion.hoplon.markdown.code_node.call(null,G__295538,G__295539));
})()," is a predicate that determines whether a given element is a member of a set. ",(function (){var G__295540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"Adjoin-set"], null);
var G__295541 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__295540,G__295541) : tailrecursion.hoplon.markdown.code_node.call(null,G__295540,G__295541));
})()," takes an object and a set as arguments and returns a set that contains the elements of the original set and also the adjoined element. ",(function (){var G__295542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"Union-set"], null);
var G__295543 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__295542,G__295543) : tailrecursion.hoplon.markdown.code_node.call(null,G__295542,G__295543));
})()," computes the union of two sets, which is the set containing each element that appears in either argument. ",(function (){var G__295544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"Intersection-set"], null);
var G__295545 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__295544,G__295545) : tailrecursion.hoplon.markdown.code_node.call(null,G__295544,G__295545));
})()," computes the intersection of two sets, which is the set containing only elements that appear in both arguments. From the viewpoint of data abstraction, we are free to design any representation that implements these operations in a way consistent with the interpretations given above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__295526,G__295527) : tailrecursion.hoplon.markdown.para_node.call(null,G__295526,G__295527));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_295523;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_295522;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_295521;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_295520;
}})()], 0));
var G__288702 = "";
var G__288703 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Sets as Unordered Lists"], null),(function (){var _STAR_references_STAR_295546 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_295547 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_295548 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_295549 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__295550 = cljs.core.PersistentArrayMap.EMPTY;
var G__295551 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One way to represent a set is as a list of its elements in which no element appears more than once. The empty set is represented by the empty list. In this representation, ",(function (){var G__295552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__295553 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__295552,G__295553) : tailrecursion.hoplon.markdown.code_node.call(null,G__295552,G__295553));
})()," is similar to the procedure ",(function (){var G__295554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"memq"], null);
var G__295555 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__295554,G__295555) : tailrecursion.hoplon.markdown.code_node.call(null,G__295554,G__295555));
})()," of section 2.3.1."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__295550,G__295551) : tailrecursion.hoplon.markdown.para_node.call(null,G__295550,G__295551));
})(),(function (){var G__295636 = (function (){var G__295637 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__295638 = (function (){var G__295639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__295640 = "(";
var G__295641 = (function (){var G__295677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__295678 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295677,G__295678) : tailrecursion.hoplon.span.call(null,G__295677,G__295678));
})();
var G__295642 = (function (){var G__295679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295680 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295679,G__295680) : tailrecursion.hoplon.span.call(null,G__295679,G__295680));
})();
var G__295643 = " [";
var G__295644 = (function (){var G__295681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295682 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295681,G__295682) : tailrecursion.hoplon.span.call(null,G__295681,G__295682));
})();
var G__295645 = " ";
var G__295646 = (function (){var G__295683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295684 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295683,G__295684) : tailrecursion.hoplon.span.call(null,G__295683,G__295684));
})();
var G__295647 = "]\n  (";
var G__295648 = (function (){var G__295685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__295686 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295685,G__295686) : tailrecursion.hoplon.span.call(null,G__295685,G__295686));
})();
var G__295649 = "[";
var G__295650 = (function (){var G__295687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295688 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295687,G__295688) : tailrecursion.hoplon.span.call(null,G__295687,G__295688));
})();
var G__295651 = " ";
var G__295652 = (function (){var G__295689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295690 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295689,G__295690) : tailrecursion.hoplon.span.call(null,G__295689,G__295690));
})();
var G__295653 = "]\n    (";
var G__295654 = (function (){var G__295691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295692 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295691,G__295692) : tailrecursion.hoplon.span.call(null,G__295691,G__295692));
})();
var G__295655 = "(";
var G__295656 = (function (){var G__295693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__295694 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295693,G__295694) : tailrecursion.hoplon.span.call(null,G__295693,G__295694));
})();
var G__295657 = " ";
var G__295658 = (function (){var G__295695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295696 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295695,G__295696) : tailrecursion.hoplon.span.call(null,G__295695,G__295696));
})();
var G__295659 = ") ";
var G__295660 = (function (){var G__295697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295698 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295697,G__295698) : tailrecursion.hoplon.span.call(null,G__295697,G__295698));
})();
var G__295661 = "\n          (";
var G__295662 = (function (){var G__295699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295700 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295699,G__295700) : tailrecursion.hoplon.span.call(null,G__295699,G__295700));
})();
var G__295663 = (function (){var G__295701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295702 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295701,G__295702) : tailrecursion.hoplon.span.call(null,G__295701,G__295702));
})();
var G__295664 = " (";
var G__295665 = (function (){var G__295703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295704 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295703,G__295704) : tailrecursion.hoplon.span.call(null,G__295703,G__295704));
})();
var G__295666 = (function (){var G__295705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295706 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295705,G__295706) : tailrecursion.hoplon.span.call(null,G__295705,G__295706));
})();
var G__295667 = ")) ";
var G__295668 = (function (){var G__295707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295708 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295707,G__295708) : tailrecursion.hoplon.span.call(null,G__295707,G__295708));
})();
var G__295669 = "\n          ";
var G__295670 = (function (){var G__295709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295710 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295709,G__295710) : tailrecursion.hoplon.span.call(null,G__295709,G__295710));
})();
var G__295671 = "  (";
var G__295672 = (function (){var G__295711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__295712 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295711,G__295712) : tailrecursion.hoplon.span.call(null,G__295711,G__295712));
})();
var G__295673 = " (";
var G__295674 = (function (){var G__295713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295714 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295713,G__295714) : tailrecursion.hoplon.span.call(null,G__295713,G__295714));
})();
var G__295675 = (function (){var G__295715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295716 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295715,G__295716) : tailrecursion.hoplon.span.call(null,G__295715,G__295716));
})();
var G__295676 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38(G__295639,G__295640,G__295641,G__295642,G__295643,G__295644,G__295645,G__295646,G__295647,G__295648,G__295649,G__295650,G__295651,G__295652,G__295653,G__295654,G__295655,G__295656,G__295657,G__295658,G__295659,G__295660,G__295661,G__295662,G__295663,G__295664,G__295665,G__295666,G__295667,G__295668,G__295669,G__295670,G__295671,G__295672,G__295673,G__295674,G__295675,G__295676) : tailrecursion.hoplon.pre.call(null,G__295639,G__295640,G__295641,G__295642,G__295643,G__295644,G__295645,G__295646,G__295647,G__295648,G__295649,G__295650,G__295651,G__295652,G__295653,G__295654,G__295655,G__295656,G__295657,G__295658,G__295659,G__295660,G__295661,G__295662,G__295663,G__295664,G__295665,G__295666,G__295667,G__295668,G__295669,G__295670,G__295671,G__295672,G__295673,G__295674,G__295675,G__295676));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__295637,G__295638) : tailrecursion.hoplon.div.call(null,G__295637,G__295638));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__295636) : tailrecursion.hoplon.div.call(null,G__295636));
})(),(function (){var G__295717 = cljs.core.PersistentArrayMap.EMPTY;
var G__295718 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using this, we can write ",(function (){var G__295719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__295720 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__295719,G__295720) : tailrecursion.hoplon.markdown.code_node.call(null,G__295719,G__295720));
})(),". If the object to be adjoined is already in the set, we just return the set. Otherwise, we use ",(function (){var G__295721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__295722 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__295721,G__295722) : tailrecursion.hoplon.markdown.code_node.call(null,G__295721,G__295722));
})()," to add the object to the list that represents the set:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__295717,G__295718) : tailrecursion.hoplon.markdown.para_node.call(null,G__295717,G__295718));
})(),(function (){var G__295769 = (function (){var G__295770 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__295771 = (function (){var G__295772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__295773 = "(";
var G__295774 = (function (){var G__295794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__295795 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295794,G__295795) : tailrecursion.hoplon.span.call(null,G__295794,G__295795));
})();
var G__295775 = (function (){var G__295796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295797 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295796,G__295797) : tailrecursion.hoplon.span.call(null,G__295796,G__295797));
})();
var G__295776 = " [";
var G__295777 = (function (){var G__295798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295799 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295798,G__295799) : tailrecursion.hoplon.span.call(null,G__295798,G__295799));
})();
var G__295778 = " ";
var G__295779 = (function (){var G__295800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295801 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295800,G__295801) : tailrecursion.hoplon.span.call(null,G__295800,G__295801));
})();
var G__295780 = "]\n  (";
var G__295781 = (function (){var G__295802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__295803 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295802,G__295803) : tailrecursion.hoplon.span.call(null,G__295802,G__295803));
})();
var G__295782 = "(";
var G__295783 = (function (){var G__295804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__295805 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295804,G__295805) : tailrecursion.hoplon.span.call(null,G__295804,G__295805));
})();
var G__295784 = " ";
var G__295785 = (function (){var G__295806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295807 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295806,G__295807) : tailrecursion.hoplon.span.call(null,G__295806,G__295807));
})();
var G__295786 = " ";
var G__295787 = (function (){var G__295808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295809 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295808,G__295809) : tailrecursion.hoplon.span.call(null,G__295808,G__295809));
})();
var G__295788 = ")\n      ";
var G__295789 = (function (){var G__295810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295811 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295810,G__295811) : tailrecursion.hoplon.span.call(null,G__295810,G__295811));
})();
var G__295790 = "\n      (";
var G__295791 = (function (){var G__295812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__295813 = "conj set ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295812,G__295813) : tailrecursion.hoplon.span.call(null,G__295812,G__295813));
})();
var G__295792 = (function (){var G__295814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295815 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295814,G__295815) : tailrecursion.hoplon.span.call(null,G__295814,G__295815));
})();
var G__295793 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__295772,G__295773,G__295774,G__295775,G__295776,G__295777,G__295778,G__295779,G__295780,G__295781,G__295782,G__295783,G__295784,G__295785,G__295786,G__295787,G__295788,G__295789,G__295790,G__295791,G__295792,G__295793) : tailrecursion.hoplon.pre.call(null,G__295772,G__295773,G__295774,G__295775,G__295776,G__295777,G__295778,G__295779,G__295780,G__295781,G__295782,G__295783,G__295784,G__295785,G__295786,G__295787,G__295788,G__295789,G__295790,G__295791,G__295792,G__295793));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__295770,G__295771) : tailrecursion.hoplon.div.call(null,G__295770,G__295771));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__295769) : tailrecursion.hoplon.div.call(null,G__295769));
})(),(function (){var G__295816 = cljs.core.PersistentArrayMap.EMPTY;
var G__295817 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For ",(function (){var G__295818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-of-set"], null);
var G__295819 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__295818,G__295819) : tailrecursion.hoplon.markdown.code_node.call(null,G__295818,G__295819));
})()," we can use a recursive strategy. If we know how to form the intersection of ",(function (){var G__295820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__295821 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__295820,G__295821) : tailrecursion.hoplon.markdown.code_node.call(null,G__295820,G__295821));
})()," and the ",(function (){var G__295822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__295823 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__295822,G__295823) : tailrecursion.hoplon.markdown.code_node.call(null,G__295822,G__295823));
})()," of ",(function (){var G__295824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__295825 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__295824,G__295825) : tailrecursion.hoplon.markdown.code_node.call(null,G__295824,G__295825));
})(),", we only need to decide whether to include the ",(function (){var G__295826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__295827 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__295826,G__295827) : tailrecursion.hoplon.markdown.code_node.call(null,G__295826,G__295827));
})()," of ",(function (){var G__295828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__295829 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__295828,G__295829) : tailrecursion.hoplon.markdown.code_node.call(null,G__295828,G__295829));
})()," in this. But this depends on whether ",(function (){var G__295830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first set1)"], null);
var G__295831 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__295830,G__295831) : tailrecursion.hoplon.markdown.code_node.call(null,G__295830,G__295831));
})()," is also in ",(function (){var G__295832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__295833 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__295832,G__295833) : tailrecursion.hoplon.markdown.code_node.call(null,G__295832,G__295833));
})(),". Here is the resulting procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__295816,G__295817) : tailrecursion.hoplon.markdown.para_node.call(null,G__295816,G__295817));
})(),(function (){var G__295941 = (function (){var G__295942 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__295943 = (function (){var G__295944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__295945 = "(";
var G__295946 = (function (){var G__295995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__295996 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295995,G__295996) : tailrecursion.hoplon.span.call(null,G__295995,G__295996));
})();
var G__295947 = (function (){var G__295997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__295998 = "intersection-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295997,G__295998) : tailrecursion.hoplon.span.call(null,G__295997,G__295998));
})();
var G__295948 = " [";
var G__295949 = (function (){var G__295999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296000 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__295999,G__296000) : tailrecursion.hoplon.span.call(null,G__295999,G__296000));
})();
var G__295950 = " ";
var G__295951 = (function (){var G__296001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296002 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296001,G__296002) : tailrecursion.hoplon.span.call(null,G__296001,G__296002));
})();
var G__295952 = "]\n  (";
var G__295953 = (function (){var G__296003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__296004 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296003,G__296004) : tailrecursion.hoplon.span.call(null,G__296003,G__296004));
})();
var G__295954 = "(";
var G__295955 = (function (){var G__296005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__296006 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296005,G__296006) : tailrecursion.hoplon.span.call(null,G__296005,G__296006));
})();
var G__295956 = "(";
var G__295957 = (function (){var G__296007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__296008 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296007,G__296008) : tailrecursion.hoplon.span.call(null,G__296007,G__296008));
})();
var G__295958 = " ";
var G__295959 = (function (){var G__296009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296010 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296009,G__296010) : tailrecursion.hoplon.span.call(null,G__296009,G__296010));
})();
var G__295960 = ") (";
var G__295961 = (function (){var G__296011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__296012 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296011,G__296012) : tailrecursion.hoplon.span.call(null,G__296011,G__296012));
})();
var G__295962 = " ";
var G__295963 = (function (){var G__296013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296014 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296013,G__296014) : tailrecursion.hoplon.span.call(null,G__296013,G__296014));
})();
var G__295964 = ")) ";
var G__295965 = (function (){var G__296015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__296016 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296015,G__296016) : tailrecursion.hoplon.span.call(null,G__296015,G__296016));
})();
var G__295966 = "()\n        (";
var G__295967 = (function (){var G__296017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__296018 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296017,G__296018) : tailrecursion.hoplon.span.call(null,G__296017,G__296018));
})();
var G__295968 = " (";
var G__295969 = (function (){var G__296019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__296020 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296019,G__296020) : tailrecursion.hoplon.span.call(null,G__296019,G__296020));
})();
var G__295970 = (function (){var G__296021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296022 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296021,G__296022) : tailrecursion.hoplon.span.call(null,G__296021,G__296022));
})();
var G__295971 = ") ";
var G__295972 = (function (){var G__296023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296024 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296023,G__296024) : tailrecursion.hoplon.span.call(null,G__296023,G__296024));
})();
var G__295973 = ")\n          (";
var G__295974 = (function (){var G__296025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__296026 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296025,G__296026) : tailrecursion.hoplon.span.call(null,G__296025,G__296026));
})();
var G__295975 = "(";
var G__295976 = (function (){var G__296027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__296028 = "intersection-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296027,G__296028) : tailrecursion.hoplon.span.call(null,G__296027,G__296028));
})();
var G__295977 = " (";
var G__295978 = (function (){var G__296029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__296030 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296029,G__296030) : tailrecursion.hoplon.span.call(null,G__296029,G__296030));
})();
var G__295979 = (function (){var G__296031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296032 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296031,G__296032) : tailrecursion.hoplon.span.call(null,G__296031,G__296032));
})();
var G__295980 = ") ";
var G__295981 = (function (){var G__296033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296034 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296033,G__296034) : tailrecursion.hoplon.span.call(null,G__296033,G__296034));
})();
var G__295982 = ")\n                (";
var G__295983 = (function (){var G__296035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__296036 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296035,G__296036) : tailrecursion.hoplon.span.call(null,G__296035,G__296036));
})();
var G__295984 = (function (){var G__296037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296038 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296037,G__296038) : tailrecursion.hoplon.span.call(null,G__296037,G__296038));
})();
var G__295985 = "))\n        ";
var G__295986 = (function (){var G__296039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296040 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296039,G__296040) : tailrecursion.hoplon.span.call(null,G__296039,G__296040));
})();
var G__295987 = " (";
var G__295988 = (function (){var G__296041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__296042 = "intersection-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296041,G__296042) : tailrecursion.hoplon.span.call(null,G__296041,G__296042));
})();
var G__295989 = " (";
var G__295990 = (function (){var G__296043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__296044 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296043,G__296044) : tailrecursion.hoplon.span.call(null,G__296043,G__296044));
})();
var G__295991 = (function (){var G__296045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296046 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296045,G__296046) : tailrecursion.hoplon.span.call(null,G__296045,G__296046));
})();
var G__295992 = ") ";
var G__295993 = (function (){var G__296047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296048 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296047,G__296048) : tailrecursion.hoplon.span.call(null,G__296047,G__296048));
})();
var G__295994 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$51 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$51(G__295944,G__295945,G__295946,G__295947,G__295948,G__295949,G__295950,G__295951,G__295952,G__295953,G__295954,G__295955,G__295956,G__295957,G__295958,G__295959,G__295960,G__295961,G__295962,G__295963,G__295964,G__295965,G__295966,G__295967,G__295968,G__295969,G__295970,G__295971,G__295972,G__295973,G__295974,G__295975,G__295976,G__295977,G__295978,G__295979,G__295980,G__295981,G__295982,G__295983,G__295984,G__295985,G__295986,G__295987,G__295988,G__295989,G__295990,G__295991,G__295992,G__295993,G__295994) : tailrecursion.hoplon.pre.call(null,G__295944,G__295945,G__295946,G__295947,G__295948,G__295949,G__295950,G__295951,G__295952,G__295953,G__295954,G__295955,G__295956,G__295957,G__295958,G__295959,G__295960,G__295961,G__295962,G__295963,G__295964,G__295965,G__295966,G__295967,G__295968,G__295969,G__295970,G__295971,G__295972,G__295973,G__295974,G__295975,G__295976,G__295977,G__295978,G__295979,G__295980,G__295981,G__295982,G__295983,G__295984,G__295985,G__295986,G__295987,G__295988,G__295989,G__295990,G__295991,G__295992,G__295993,G__295994));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__295942,G__295943) : tailrecursion.hoplon.div.call(null,G__295942,G__295943));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__295941) : tailrecursion.hoplon.div.call(null,G__295941));
})(),(function (){var G__296049 = cljs.core.PersistentArrayMap.EMPTY;
var G__296050 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Can you turn this into an iterative procedure using ",(function (){var G__296051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"loop"], null);
var G__296052 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__296051,G__296052) : tailrecursion.hoplon.markdown.code_node.call(null,G__296051,G__296052));
})(),"?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__296049,G__296050) : tailrecursion.hoplon.markdown.para_node.call(null,G__296049,G__296050));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_295549;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_295548;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_295547;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_295546;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_296053 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_296054 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_296055 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_296056 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__296171 = (function (){var G__296172 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__296173 = (function (){var G__296174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__296175 = "(";
var G__296176 = (function (){var G__296228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__296229 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296228,G__296229) : tailrecursion.hoplon.span.call(null,G__296228,G__296229));
})();
var G__296177 = (function (){var G__296230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296231 = "intersection-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296230,G__296231) : tailrecursion.hoplon.span.call(null,G__296230,G__296231));
})();
var G__296178 = " [";
var G__296179 = (function (){var G__296232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296233 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296232,G__296233) : tailrecursion.hoplon.span.call(null,G__296232,G__296233));
})();
var G__296180 = " ";
var G__296181 = (function (){var G__296234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296235 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296234,G__296235) : tailrecursion.hoplon.span.call(null,G__296234,G__296235));
})();
var G__296182 = "]\n  (";
var G__296183 = (function (){var G__296236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__296237 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296236,G__296237) : tailrecursion.hoplon.span.call(null,G__296236,G__296237));
})();
var G__296184 = "[";
var G__296185 = (function (){var G__296238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296239 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296238,G__296239) : tailrecursion.hoplon.span.call(null,G__296238,G__296239));
})();
var G__296186 = "   ";
var G__296187 = (function (){var G__296240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__296241 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296240,G__296241) : tailrecursion.hoplon.span.call(null,G__296240,G__296241));
})();
var G__296188 = "()\n         ";
var G__296189 = (function (){var G__296242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296243 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296242,G__296243) : tailrecursion.hoplon.span.call(null,G__296242,G__296243));
})();
var G__296190 = " ";
var G__296191 = (function (){var G__296244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296245 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296244,G__296245) : tailrecursion.hoplon.span.call(null,G__296244,G__296245));
})();
var G__296192 = "]\n    (";
var G__296193 = (function (){var G__296246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__296247 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296246,G__296247) : tailrecursion.hoplon.span.call(null,G__296246,G__296247));
})();
var G__296194 = "(";
var G__296195 = (function (){var G__296248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__296249 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296248,G__296249) : tailrecursion.hoplon.span.call(null,G__296248,G__296249));
})();
var G__296196 = " ";
var G__296197 = (function (){var G__296250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296251 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296250,G__296251) : tailrecursion.hoplon.span.call(null,G__296250,G__296251));
})();
var G__296198 = ") ";
var G__296199 = (function (){var G__296252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296253 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296252,G__296253) : tailrecursion.hoplon.span.call(null,G__296252,G__296253));
})();
var G__296200 = "\n          (";
var G__296201 = (function (){var G__296254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__296255 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296254,G__296255) : tailrecursion.hoplon.span.call(null,G__296254,G__296255));
})();
var G__296202 = " (";
var G__296203 = (function (){var G__296256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__296257 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296256,G__296257) : tailrecursion.hoplon.span.call(null,G__296256,G__296257));
})();
var G__296204 = (function (){var G__296258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296259 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296258,G__296259) : tailrecursion.hoplon.span.call(null,G__296258,G__296259));
})();
var G__296205 = ") ";
var G__296206 = (function (){var G__296260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296261 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296260,G__296261) : tailrecursion.hoplon.span.call(null,G__296260,G__296261));
})();
var G__296207 = ") (";
var G__296208 = (function (){var G__296262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__296263 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296262,G__296263) : tailrecursion.hoplon.span.call(null,G__296262,G__296263));
})();
var G__296209 = " (";
var G__296210 = (function (){var G__296264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__296265 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296264,G__296265) : tailrecursion.hoplon.span.call(null,G__296264,G__296265));
})();
var G__296211 = (function (){var G__296266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296267 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296266,G__296267) : tailrecursion.hoplon.span.call(null,G__296266,G__296267));
})();
var G__296212 = " (";
var G__296213 = (function (){var G__296268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__296269 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296268,G__296269) : tailrecursion.hoplon.span.call(null,G__296268,G__296269));
})();
var G__296214 = (function (){var G__296270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296271 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296270,G__296271) : tailrecursion.hoplon.span.call(null,G__296270,G__296271));
})();
var G__296215 = ")) (";
var G__296216 = (function (){var G__296272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__296273 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296272,G__296273) : tailrecursion.hoplon.span.call(null,G__296272,G__296273));
})();
var G__296217 = (function (){var G__296274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296275 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296274,G__296275) : tailrecursion.hoplon.span.call(null,G__296274,G__296275));
})();
var G__296218 = "))\n          ";
var G__296219 = (function (){var G__296276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296277 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296276,G__296277) : tailrecursion.hoplon.span.call(null,G__296276,G__296277));
})();
var G__296220 = " (";
var G__296221 = (function (){var G__296278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__296279 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296278,G__296279) : tailrecursion.hoplon.span.call(null,G__296278,G__296279));
})();
var G__296222 = " ";
var G__296223 = (function (){var G__296280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296281 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296280,G__296281) : tailrecursion.hoplon.span.call(null,G__296280,G__296281));
})();
var G__296224 = " (";
var G__296225 = (function (){var G__296282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__296283 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296282,G__296283) : tailrecursion.hoplon.span.call(null,G__296282,G__296283));
})();
var G__296226 = (function (){var G__296284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296285 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296284,G__296285) : tailrecursion.hoplon.span.call(null,G__296284,G__296285));
})();
var G__296227 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54(G__296174,G__296175,G__296176,G__296177,G__296178,G__296179,G__296180,G__296181,G__296182,G__296183,G__296184,G__296185,G__296186,G__296187,G__296188,G__296189,G__296190,G__296191,G__296192,G__296193,G__296194,G__296195,G__296196,G__296197,G__296198,G__296199,G__296200,G__296201,G__296202,G__296203,G__296204,G__296205,G__296206,G__296207,G__296208,G__296209,G__296210,G__296211,G__296212,G__296213,G__296214,G__296215,G__296216,G__296217,G__296218,G__296219,G__296220,G__296221,G__296222,G__296223,G__296224,G__296225,G__296226,G__296227) : tailrecursion.hoplon.pre.call(null,G__296174,G__296175,G__296176,G__296177,G__296178,G__296179,G__296180,G__296181,G__296182,G__296183,G__296184,G__296185,G__296186,G__296187,G__296188,G__296189,G__296190,G__296191,G__296192,G__296193,G__296194,G__296195,G__296196,G__296197,G__296198,G__296199,G__296200,G__296201,G__296202,G__296203,G__296204,G__296205,G__296206,G__296207,G__296208,G__296209,G__296210,G__296211,G__296212,G__296213,G__296214,G__296215,G__296216,G__296217,G__296218,G__296219,G__296220,G__296221,G__296222,G__296223,G__296224,G__296225,G__296226,G__296227));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__296172,G__296173) : tailrecursion.hoplon.div.call(null,G__296172,G__296173));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__296171) : tailrecursion.hoplon.div.call(null,G__296171));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_296056;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_296055;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_296054;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_296053;
}})()], 0)),"",(function (){var _STAR_references_STAR_296286 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_296287 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_296288 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_296289 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__296290 = cljs.core.PersistentArrayMap.EMPTY;
var G__296291 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In designing a representation, one of the issues we should be concerned with is efficiency. Consider the number of steps required by our set operations. Since they all use ",(function (){var G__296292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__296293 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__296292,G__296293) : tailrecursion.hoplon.markdown.code_node.call(null,G__296292,G__296293));
})(),", the speed of this operation has a major impact on the efficiency of the set implementation as a whole. Now, in order to check whether an object is a member of a set, ",(function (){var G__296294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__296295 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__296294,G__296295) : tailrecursion.hoplon.markdown.code_node.call(null,G__296294,G__296295));
})()," may have to scan the entire set. (In the worst case, the object turns out not to be in the set.) Hence, if the set has \\(n\\) elements, ",(function (){var G__296296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__296297 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__296296,G__296297) : tailrecursion.hoplon.markdown.code_node.call(null,G__296296,G__296297));
})()," might take up to \\(n\\) steps. Thus, the number of steps required grows as \\(\\Theta(n)\\). The number of steps required by ",(function (){var G__296298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__296299 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__296298,G__296299) : tailrecursion.hoplon.markdown.code_node.call(null,G__296298,G__296299));
})(),", which uses this operation, also grows as \\(\\Theta(n)\\). For ",(function (){var G__296300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-of-set"], null);
var G__296301 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__296300,G__296301) : tailrecursion.hoplon.markdown.code_node.call(null,G__296300,G__296301));
})(),", which does an ",(function (){var G__296302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__296303 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__296302,G__296303) : tailrecursion.hoplon.markdown.code_node.call(null,G__296302,G__296303));
})()," check for each element of ",(function (){var G__296304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__296305 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__296304,G__296305) : tailrecursion.hoplon.markdown.code_node.call(null,G__296304,G__296305));
})(),", the number of steps required grows as the product of the sizes of the sets involved, or \\(\\Theta(n^2)\\) for two sets of size \\(n\\). The same will be true of ",(function (){var G__296306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"union-set"], null);
var G__296307 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__296306,G__296307) : tailrecursion.hoplon.markdown.code_node.call(null,G__296306,G__296307));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__296290,G__296291) : tailrecursion.hoplon.markdown.para_node.call(null,G__296290,G__296291));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_296289;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_296288;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_296287;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_296286;
}})()], 0));
var G__288704 = "";
var G__288705 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_296308 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_296309 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_296310 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_296311 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__296312 = cljs.core.PersistentArrayMap.EMPTY;
var G__296313 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Implement the ",(function (){var G__296314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"union-set"], null);
var G__296315 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__296314,G__296315) : tailrecursion.hoplon.markdown.code_node.call(null,G__296314,G__296315));
})()," operation for the unordered-list representation of sets."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__296312,G__296313) : tailrecursion.hoplon.markdown.para_node.call(null,G__296312,G__296313));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_296311;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_296310;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_296309;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_296308;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_296316 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_296317 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_296318 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_296319 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__296434 = (function (){var G__296435 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__296436 = (function (){var G__296437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__296438 = "(";
var G__296439 = (function (){var G__296491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__296492 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296491,G__296492) : tailrecursion.hoplon.span.call(null,G__296491,G__296492));
})();
var G__296440 = (function (){var G__296493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296494 = "union-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296493,G__296494) : tailrecursion.hoplon.span.call(null,G__296493,G__296494));
})();
var G__296441 = " [";
var G__296442 = (function (){var G__296495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296496 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296495,G__296496) : tailrecursion.hoplon.span.call(null,G__296495,G__296496));
})();
var G__296443 = " ";
var G__296444 = (function (){var G__296497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296498 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296497,G__296498) : tailrecursion.hoplon.span.call(null,G__296497,G__296498));
})();
var G__296445 = "]\n  (";
var G__296446 = (function (){var G__296499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__296500 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296499,G__296500) : tailrecursion.hoplon.span.call(null,G__296499,G__296500));
})();
var G__296447 = "[";
var G__296448 = (function (){var G__296501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296502 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296501,G__296502) : tailrecursion.hoplon.span.call(null,G__296501,G__296502));
})();
var G__296449 = "   ";
var G__296450 = (function (){var G__296503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296504 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296503,G__296504) : tailrecursion.hoplon.span.call(null,G__296503,G__296504));
})();
var G__296451 = "\n         ";
var G__296452 = (function (){var G__296505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296506 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296505,G__296506) : tailrecursion.hoplon.span.call(null,G__296505,G__296506));
})();
var G__296453 = " ";
var G__296454 = (function (){var G__296507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296508 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296507,G__296508) : tailrecursion.hoplon.span.call(null,G__296507,G__296508));
})();
var G__296455 = "]\n    (";
var G__296456 = (function (){var G__296509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__296510 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296509,G__296510) : tailrecursion.hoplon.span.call(null,G__296509,G__296510));
})();
var G__296457 = "(";
var G__296458 = (function (){var G__296511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__296512 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296511,G__296512) : tailrecursion.hoplon.span.call(null,G__296511,G__296512));
})();
var G__296459 = " ";
var G__296460 = (function (){var G__296513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296514 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296513,G__296514) : tailrecursion.hoplon.span.call(null,G__296513,G__296514));
})();
var G__296461 = ") ";
var G__296462 = (function (){var G__296515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296516 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296515,G__296516) : tailrecursion.hoplon.span.call(null,G__296515,G__296516));
})();
var G__296463 = "\n          (";
var G__296464 = (function (){var G__296517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__296518 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296517,G__296518) : tailrecursion.hoplon.span.call(null,G__296517,G__296518));
})();
var G__296465 = " (";
var G__296466 = (function (){var G__296519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__296520 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296519,G__296520) : tailrecursion.hoplon.span.call(null,G__296519,G__296520));
})();
var G__296467 = (function (){var G__296521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296522 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296521,G__296522) : tailrecursion.hoplon.span.call(null,G__296521,G__296522));
})();
var G__296468 = ") ";
var G__296469 = (function (){var G__296523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296524 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296523,G__296524) : tailrecursion.hoplon.span.call(null,G__296523,G__296524));
})();
var G__296470 = ") (";
var G__296471 = (function (){var G__296525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__296526 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296525,G__296526) : tailrecursion.hoplon.span.call(null,G__296525,G__296526));
})();
var G__296472 = " ";
var G__296473 = (function (){var G__296527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296528 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296527,G__296528) : tailrecursion.hoplon.span.call(null,G__296527,G__296528));
})();
var G__296474 = " (";
var G__296475 = (function (){var G__296529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__296530 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296529,G__296530) : tailrecursion.hoplon.span.call(null,G__296529,G__296530));
})();
var G__296476 = (function (){var G__296531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296532 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296531,G__296532) : tailrecursion.hoplon.span.call(null,G__296531,G__296532));
})();
var G__296477 = "))\n          ";
var G__296478 = (function (){var G__296533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296534 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296533,G__296534) : tailrecursion.hoplon.span.call(null,G__296533,G__296534));
})();
var G__296479 = " (";
var G__296480 = (function (){var G__296535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__296536 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296535,G__296536) : tailrecursion.hoplon.span.call(null,G__296535,G__296536));
})();
var G__296481 = " (";
var G__296482 = (function (){var G__296537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__296538 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296537,G__296538) : tailrecursion.hoplon.span.call(null,G__296537,G__296538));
})();
var G__296483 = (function (){var G__296539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296540 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296539,G__296540) : tailrecursion.hoplon.span.call(null,G__296539,G__296540));
})();
var G__296484 = " (";
var G__296485 = (function (){var G__296541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__296542 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296541,G__296542) : tailrecursion.hoplon.span.call(null,G__296541,G__296542));
})();
var G__296486 = (function (){var G__296543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296544 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296543,G__296544) : tailrecursion.hoplon.span.call(null,G__296543,G__296544));
})();
var G__296487 = ")) (";
var G__296488 = (function (){var G__296545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__296546 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296545,G__296546) : tailrecursion.hoplon.span.call(null,G__296545,G__296546));
})();
var G__296489 = (function (){var G__296547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296548 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296547,G__296548) : tailrecursion.hoplon.span.call(null,G__296547,G__296548));
})();
var G__296490 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54(G__296437,G__296438,G__296439,G__296440,G__296441,G__296442,G__296443,G__296444,G__296445,G__296446,G__296447,G__296448,G__296449,G__296450,G__296451,G__296452,G__296453,G__296454,G__296455,G__296456,G__296457,G__296458,G__296459,G__296460,G__296461,G__296462,G__296463,G__296464,G__296465,G__296466,G__296467,G__296468,G__296469,G__296470,G__296471,G__296472,G__296473,G__296474,G__296475,G__296476,G__296477,G__296478,G__296479,G__296480,G__296481,G__296482,G__296483,G__296484,G__296485,G__296486,G__296487,G__296488,G__296489,G__296490) : tailrecursion.hoplon.pre.call(null,G__296437,G__296438,G__296439,G__296440,G__296441,G__296442,G__296443,G__296444,G__296445,G__296446,G__296447,G__296448,G__296449,G__296450,G__296451,G__296452,G__296453,G__296454,G__296455,G__296456,G__296457,G__296458,G__296459,G__296460,G__296461,G__296462,G__296463,G__296464,G__296465,G__296466,G__296467,G__296468,G__296469,G__296470,G__296471,G__296472,G__296473,G__296474,G__296475,G__296476,G__296477,G__296478,G__296479,G__296480,G__296481,G__296482,G__296483,G__296484,G__296485,G__296486,G__296487,G__296488,G__296489,G__296490));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__296435,G__296436) : tailrecursion.hoplon.div.call(null,G__296435,G__296436));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__296434) : tailrecursion.hoplon.div.call(null,G__296434));
})(),(function (){var G__296549 = cljs.core.PersistentArrayMap.EMPTY;
var G__296550 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Or, we could take advantage of the function, ",(function (){var G__296551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"accumulate"], null);
var G__296552 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__296551,G__296552) : tailrecursion.hoplon.markdown.code_node.call(null,G__296551,G__296552));
})()," we made in section 2.2.3"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__296549,G__296550) : tailrecursion.hoplon.markdown.para_node.call(null,G__296549,G__296550));
})(),(function (){var G__296600 = (function (){var G__296601 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__296602 = (function (){var G__296603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__296604 = "(";
var G__296605 = (function (){var G__296626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__296627 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296626,G__296627) : tailrecursion.hoplon.span.call(null,G__296626,G__296627));
})();
var G__296606 = (function (){var G__296628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296629 = "union-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296628,G__296629) : tailrecursion.hoplon.span.call(null,G__296628,G__296629));
})();
var G__296607 = " [";
var G__296608 = (function (){var G__296630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296631 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296630,G__296631) : tailrecursion.hoplon.span.call(null,G__296630,G__296631));
})();
var G__296609 = " ";
var G__296610 = (function (){var G__296632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296633 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296632,G__296633) : tailrecursion.hoplon.span.call(null,G__296632,G__296633));
})();
var G__296611 = "]\n  (";
var G__296612 = (function (){var G__296634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__296635 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296634,G__296635) : tailrecursion.hoplon.span.call(null,G__296634,G__296635));
})();
var G__296613 = " ";
var G__296614 = (function (){var G__296636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__296637 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296636,G__296637) : tailrecursion.hoplon.span.call(null,G__296636,G__296637));
})();
var G__296615 = "(";
var G__296616 = (function (){var G__296638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__296639 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296638,G__296639) : tailrecursion.hoplon.span.call(null,G__296638,G__296639));
})();
var G__296617 = " ";
var G__296618 = (function (){var G__296640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296641 = "%1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296640,G__296641) : tailrecursion.hoplon.span.call(null,G__296640,G__296641));
})();
var G__296619 = " ";
var G__296620 = (function (){var G__296642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296643 = "%2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296642,G__296643) : tailrecursion.hoplon.span.call(null,G__296642,G__296643));
})();
var G__296621 = ")\n              ";
var G__296622 = (function (){var G__296644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296645 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296644,G__296645) : tailrecursion.hoplon.span.call(null,G__296644,G__296645));
})();
var G__296623 = "\n              ";
var G__296624 = (function (){var G__296646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__296647 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__296646,G__296647) : tailrecursion.hoplon.span.call(null,G__296646,G__296647));
})();
var G__296625 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__296603,G__296604,G__296605,G__296606,G__296607,G__296608,G__296609,G__296610,G__296611,G__296612,G__296613,G__296614,G__296615,G__296616,G__296617,G__296618,G__296619,G__296620,G__296621,G__296622,G__296623,G__296624,G__296625) : tailrecursion.hoplon.pre.call(null,G__296603,G__296604,G__296605,G__296606,G__296607,G__296608,G__296609,G__296610,G__296611,G__296612,G__296613,G__296614,G__296615,G__296616,G__296617,G__296618,G__296619,G__296620,G__296621,G__296622,G__296623,G__296624,G__296625));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__296601,G__296602) : tailrecursion.hoplon.div.call(null,G__296601,G__296602));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__296600) : tailrecursion.hoplon.div.call(null,G__296600));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_296319;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_296318;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_296317;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_296316;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_296648 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_296649 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_296650 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_296651 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__296652 = cljs.core.PersistentArrayMap.EMPTY;
var G__296653 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We specified that a set would be represented as a list with no diplicates. Now suppose we allow duplicates. For instance, the set \\({1,2,3}\\) could be represented as the list ",(function (){var G__296654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(2 3 2 1 3 2 2)"], null);
var G__296655 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__296654,G__296655) : tailrecursion.hoplon.markdown.code_node.call(null,G__296654,G__296655));
})(),". Design procedures ",(function (){var G__296656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__296657 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__296656,G__296657) : tailrecursion.hoplon.markdown.code_node.call(null,G__296656,G__296657));
})(),", ",(function (){var G__296658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__296659 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__296658,G__296659) : tailrecursion.hoplon.markdown.code_node.call(null,G__296658,G__296659));
})(),", ",(function (){var G__296660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"union-set"], null);
var G__296661 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__296660,G__296661) : tailrecursion.hoplon.markdown.code_node.call(null,G__296660,G__296661));
})(),", and ",(function (){var G__296662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-set"], null);
var G__296663 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__296662,G__296663) : tailrecursion.hoplon.markdown.code_node.call(null,G__296662,G__296663));
})()," that operation on this representation. How does the efficiency of each compare with the corresponding procedure for the non-duplicate representation? Are there applications for which you would use this representatioin in preference to the non-duplicate one?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__296652,G__296653) : tailrecursion.hoplon.markdown.para_node.call(null,G__296652,G__296653));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_296651;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_296650;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_296649;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_296648;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_296664 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_296665 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_296666 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_296667 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__296668 = cljs.core.PersistentArrayMap.EMPTY;
var G__296669 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__296670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__296671 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__296670,G__296671) : tailrecursion.hoplon.markdown.simple_node.call(null,G__296670,G__296671));
})(),"s use some of Clojure Core",(function (){var G__296672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__296673 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__296672,G__296673) : tailrecursion.hoplon.markdown.simple_node.call(null,G__296672,G__296673));
})(),"s functions for this. We",(function (){var G__296674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__296675 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__296674,G__296675) : tailrecursion.hoplon.markdown.simple_node.call(null,G__296674,G__296675));
})(),"ll have to make some assumptions about their efficiency (you can look this up if you",(function (){var G__296676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__296677 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__296676,G__296677) : tailrecursion.hoplon.markdown.simple_node.call(null,G__296676,G__296677));
})(),"re actually interested)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__296668,G__296669) : tailrecursion.hoplon.markdown.para_node.call(null,G__296668,G__296669));
})(),(function (){var G__296917 = (function (){var G__296918 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__296919 = (function (){var G__296920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__296921 = "(";
var G__296922 = (function (){var G__297033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__297034 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297033,G__297034) : tailrecursion.hoplon.span.call(null,G__297033,G__297034));
})();
var G__296923 = (function (){var G__297035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297036 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297035,G__297036) : tailrecursion.hoplon.span.call(null,G__297035,G__297036));
})();
var G__296924 = " [";
var G__296925 = (function (){var G__297037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297038 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297037,G__297038) : tailrecursion.hoplon.span.call(null,G__297037,G__297038));
})();
var G__296926 = " ";
var G__296927 = (function (){var G__297039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297040 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297039,G__297040) : tailrecursion.hoplon.span.call(null,G__297039,G__297040));
})();
var G__296928 = "]\n  (";
var G__296929 = (function (){var G__297041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__297042 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297041,G__297042) : tailrecursion.hoplon.span.call(null,G__297041,G__297042));
})();
var G__296930 = "[";
var G__296931 = (function (){var G__297043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297044 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297043,G__297044) : tailrecursion.hoplon.span.call(null,G__297043,G__297044));
})();
var G__296932 = " ";
var G__296933 = (function (){var G__297045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297046 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297045,G__297046) : tailrecursion.hoplon.span.call(null,G__297045,G__297046));
})();
var G__296934 = "]\n    (";
var G__296935 = (function (){var G__297047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297048 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297047,G__297048) : tailrecursion.hoplon.span.call(null,G__297047,G__297048));
})();
var G__296936 = "(";
var G__296937 = (function (){var G__297049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__297050 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297049,G__297050) : tailrecursion.hoplon.span.call(null,G__297049,G__297050));
})();
var G__296938 = " ";
var G__296939 = (function (){var G__297051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297052 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297051,G__297052) : tailrecursion.hoplon.span.call(null,G__297051,G__297052));
})();
var G__296940 = ") ";
var G__296941 = (function (){var G__297053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297054 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297053,G__297054) : tailrecursion.hoplon.span.call(null,G__297053,G__297054));
})();
var G__296942 = "\n          (";
var G__296943 = (function (){var G__297055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297056 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297055,G__297056) : tailrecursion.hoplon.span.call(null,G__297055,G__297056));
})();
var G__296944 = "(";
var G__296945 = (function (){var G__297057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297058 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297057,G__297058) : tailrecursion.hoplon.span.call(null,G__297057,G__297058));
})();
var G__296946 = (function (){var G__297059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297060 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297059,G__297060) : tailrecursion.hoplon.span.call(null,G__297059,G__297060));
})();
var G__296947 = ") ";
var G__296948 = (function (){var G__297061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297062 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297061,G__297062) : tailrecursion.hoplon.span.call(null,G__297061,G__297062));
})();
var G__296949 = ") ";
var G__296950 = (function (){var G__297063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297064 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297063,G__297064) : tailrecursion.hoplon.span.call(null,G__297063,G__297064));
})();
var G__296951 = "\n          ";
var G__296952 = (function (){var G__297065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297066 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297065,G__297066) : tailrecursion.hoplon.span.call(null,G__297065,G__297066));
})();
var G__296953 = " (";
var G__296954 = (function (){var G__297067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__297068 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297067,G__297068) : tailrecursion.hoplon.span.call(null,G__297067,G__297068));
})();
var G__296955 = " (";
var G__296956 = (function (){var G__297069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297070 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297069,G__297070) : tailrecursion.hoplon.span.call(null,G__297069,G__297070));
})();
var G__296957 = (function (){var G__297071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297072 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297071,G__297072) : tailrecursion.hoplon.span.call(null,G__297071,G__297072));
})();
var G__296958 = ")))))\n\n(";
var G__296959 = (function (){var G__297073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__297074 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297073,G__297074) : tailrecursion.hoplon.span.call(null,G__297073,G__297074));
})();
var G__296960 = (function (){var G__297075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297076 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297075,G__297076) : tailrecursion.hoplon.span.call(null,G__297075,G__297076));
})();
var G__296961 = " [";
var G__296962 = (function (){var G__297077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297078 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297077,G__297078) : tailrecursion.hoplon.span.call(null,G__297077,G__297078));
})();
var G__296963 = " ";
var G__296964 = (function (){var G__297079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297080 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297079,G__297080) : tailrecursion.hoplon.span.call(null,G__297079,G__297080));
})();
var G__296965 = "]\n  (";
var G__296966 = (function (){var G__297081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297082 = "conj set ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297081,G__297082) : tailrecursion.hoplon.span.call(null,G__297081,G__297082));
})();
var G__296967 = (function (){var G__297083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297084 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297083,G__297084) : tailrecursion.hoplon.span.call(null,G__297083,G__297084));
})();
var G__296968 = "))\n\n(";
var G__296969 = (function (){var G__297085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__297086 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297085,G__297086) : tailrecursion.hoplon.span.call(null,G__297085,G__297086));
})();
var G__296970 = (function (){var G__297087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297088 = "intersection-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297087,G__297088) : tailrecursion.hoplon.span.call(null,G__297087,G__297088));
})();
var G__296971 = " [";
var G__296972 = (function (){var G__297089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297090 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297089,G__297090) : tailrecursion.hoplon.span.call(null,G__297089,G__297090));
})();
var G__296973 = " ";
var G__296974 = (function (){var G__297091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297092 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297091,G__297092) : tailrecursion.hoplon.span.call(null,G__297091,G__297092));
})();
var G__296975 = "]\n  (";
var G__296976 = (function (){var G__297093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__297094 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297093,G__297094) : tailrecursion.hoplon.span.call(null,G__297093,G__297094));
})();
var G__296977 = "[";
var G__296978 = (function (){var G__297095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297096 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297095,G__297096) : tailrecursion.hoplon.span.call(null,G__297095,G__297096));
})();
var G__296979 = "   ";
var G__296980 = (function (){var G__297097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__297098 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297097,G__297098) : tailrecursion.hoplon.span.call(null,G__297097,G__297098));
})();
var G__296981 = "()\n         ";
var G__296982 = (function (){var G__297099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297100 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297099,G__297100) : tailrecursion.hoplon.span.call(null,G__297099,G__297100));
})();
var G__296983 = " ";
var G__296984 = (function (){var G__297101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297102 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297101,G__297102) : tailrecursion.hoplon.span.call(null,G__297101,G__297102));
})();
var G__296985 = "]\n    (";
var G__296986 = (function (){var G__297103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297104 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297103,G__297104) : tailrecursion.hoplon.span.call(null,G__297103,G__297104));
})();
var G__296987 = "(";
var G__296988 = (function (){var G__297105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__297106 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297105,G__297106) : tailrecursion.hoplon.span.call(null,G__297105,G__297106));
})();
var G__296989 = " ";
var G__296990 = (function (){var G__297107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297108 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297107,G__297108) : tailrecursion.hoplon.span.call(null,G__297107,G__297108));
})();
var G__296991 = ") ";
var G__296992 = (function (){var G__297109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297110 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297109,G__297110) : tailrecursion.hoplon.span.call(null,G__297109,G__297110));
})();
var G__296993 = "\n          (";
var G__296994 = (function (){var G__297111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__297112 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297111,G__297112) : tailrecursion.hoplon.span.call(null,G__297111,G__297112));
})();
var G__296995 = " (";
var G__296996 = (function (){var G__297113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297114 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297113,G__297114) : tailrecursion.hoplon.span.call(null,G__297113,G__297114));
})();
var G__296997 = (function (){var G__297115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297116 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297115,G__297116) : tailrecursion.hoplon.span.call(null,G__297115,G__297116));
})();
var G__296998 = ") ";
var G__296999 = (function (){var G__297117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297118 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297117,G__297118) : tailrecursion.hoplon.span.call(null,G__297117,G__297118));
})();
var G__297000 = ") (";
var G__297001 = (function (){var G__297119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__297120 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297119,G__297120) : tailrecursion.hoplon.span.call(null,G__297119,G__297120));
})();
var G__297002 = " (";
var G__297003 = (function (){var G__297121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297122 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297121,G__297122) : tailrecursion.hoplon.span.call(null,G__297121,G__297122));
})();
var G__297004 = (function (){var G__297123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297124 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297123,G__297124) : tailrecursion.hoplon.span.call(null,G__297123,G__297124));
})();
var G__297005 = " (";
var G__297006 = (function (){var G__297125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297126 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297125,G__297126) : tailrecursion.hoplon.span.call(null,G__297125,G__297126));
})();
var G__297007 = (function (){var G__297127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297128 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297127,G__297128) : tailrecursion.hoplon.span.call(null,G__297127,G__297128));
})();
var G__297008 = ")) (";
var G__297009 = (function (){var G__297129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297130 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297129,G__297130) : tailrecursion.hoplon.span.call(null,G__297129,G__297130));
})();
var G__297010 = (function (){var G__297131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297132 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297131,G__297132) : tailrecursion.hoplon.span.call(null,G__297131,G__297132));
})();
var G__297011 = "))\n          ";
var G__297012 = (function (){var G__297133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297134 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297133,G__297134) : tailrecursion.hoplon.span.call(null,G__297133,G__297134));
})();
var G__297013 = " (";
var G__297014 = (function (){var G__297135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__297136 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297135,G__297136) : tailrecursion.hoplon.span.call(null,G__297135,G__297136));
})();
var G__297015 = " ";
var G__297016 = (function (){var G__297137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297138 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297137,G__297138) : tailrecursion.hoplon.span.call(null,G__297137,G__297138));
})();
var G__297017 = " (";
var G__297018 = (function (){var G__297139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297140 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297139,G__297140) : tailrecursion.hoplon.span.call(null,G__297139,G__297140));
})();
var G__297019 = (function (){var G__297141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297142 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297141,G__297142) : tailrecursion.hoplon.span.call(null,G__297141,G__297142));
})();
var G__297020 = ")))))\n\n(";
var G__297021 = (function (){var G__297143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__297144 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297143,G__297144) : tailrecursion.hoplon.span.call(null,G__297143,G__297144));
})();
var G__297022 = (function (){var G__297145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297146 = "union-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297145,G__297146) : tailrecursion.hoplon.span.call(null,G__297145,G__297146));
})();
var G__297023 = " [";
var G__297024 = (function (){var G__297147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297148 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297147,G__297148) : tailrecursion.hoplon.span.call(null,G__297147,G__297148));
})();
var G__297025 = " ";
var G__297026 = (function (){var G__297149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297150 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297149,G__297150) : tailrecursion.hoplon.span.call(null,G__297149,G__297150));
})();
var G__297027 = "]\n  (";
var G__297028 = (function (){var G__297151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297152 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297151,G__297152) : tailrecursion.hoplon.span.call(null,G__297151,G__297152));
})();
var G__297029 = (function (){var G__297153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297154 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297153,G__297154) : tailrecursion.hoplon.span.call(null,G__297153,G__297154));
})();
var G__297030 = " ";
var G__297031 = (function (){var G__297155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297156 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297155,G__297156) : tailrecursion.hoplon.span.call(null,G__297155,G__297156));
})();
var G__297032 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$113 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$113(G__296920,G__296921,G__296922,G__296923,G__296924,G__296925,G__296926,G__296927,G__296928,G__296929,G__296930,G__296931,G__296932,G__296933,G__296934,G__296935,G__296936,G__296937,G__296938,G__296939,G__296940,G__296941,G__296942,G__296943,G__296944,G__296945,G__296946,G__296947,G__296948,G__296949,G__296950,G__296951,G__296952,G__296953,G__296954,G__296955,G__296956,G__296957,G__296958,G__296959,G__296960,G__296961,G__296962,G__296963,G__296964,G__296965,G__296966,G__296967,G__296968,G__296969,G__296970,G__296971,G__296972,G__296973,G__296974,G__296975,G__296976,G__296977,G__296978,G__296979,G__296980,G__296981,G__296982,G__296983,G__296984,G__296985,G__296986,G__296987,G__296988,G__296989,G__296990,G__296991,G__296992,G__296993,G__296994,G__296995,G__296996,G__296997,G__296998,G__296999,G__297000,G__297001,G__297002,G__297003,G__297004,G__297005,G__297006,G__297007,G__297008,G__297009,G__297010,G__297011,G__297012,G__297013,G__297014,G__297015,G__297016,G__297017,G__297018,G__297019,G__297020,G__297021,G__297022,G__297023,G__297024,G__297025,G__297026,G__297027,G__297028,G__297029,G__297030,G__297031,G__297032) : tailrecursion.hoplon.pre.call(null,G__296920,G__296921,G__296922,G__296923,G__296924,G__296925,G__296926,G__296927,G__296928,G__296929,G__296930,G__296931,G__296932,G__296933,G__296934,G__296935,G__296936,G__296937,G__296938,G__296939,G__296940,G__296941,G__296942,G__296943,G__296944,G__296945,G__296946,G__296947,G__296948,G__296949,G__296950,G__296951,G__296952,G__296953,G__296954,G__296955,G__296956,G__296957,G__296958,G__296959,G__296960,G__296961,G__296962,G__296963,G__296964,G__296965,G__296966,G__296967,G__296968,G__296969,G__296970,G__296971,G__296972,G__296973,G__296974,G__296975,G__296976,G__296977,G__296978,G__296979,G__296980,G__296981,G__296982,G__296983,G__296984,G__296985,G__296986,G__296987,G__296988,G__296989,G__296990,G__296991,G__296992,G__296993,G__296994,G__296995,G__296996,G__296997,G__296998,G__296999,G__297000,G__297001,G__297002,G__297003,G__297004,G__297005,G__297006,G__297007,G__297008,G__297009,G__297010,G__297011,G__297012,G__297013,G__297014,G__297015,G__297016,G__297017,G__297018,G__297019,G__297020,G__297021,G__297022,G__297023,G__297024,G__297025,G__297026,G__297027,G__297028,G__297029,G__297030,G__297031,G__297032));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__296918,G__296919) : tailrecursion.hoplon.div.call(null,G__296918,G__296919));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__296917) : tailrecursion.hoplon.div.call(null,G__296917));
})(),(function (){var G__297157 = cljs.core.PersistentArrayMap.EMPTY;
var G__297158 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This would be a useful representation for client-side computing (if we wanted to minimize client-side computation at the cost of server-side computation) where the client can only add things to sets, and never remove things (not even in the form of ",(function (){var G__297159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-set"], null);
var G__297160 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297159,G__297160) : tailrecursion.hoplon.markdown.code_node.call(null,G__297159,G__297160));
})(),"). That way everything is constant time \\(\\Theta(1)\\). For instance, if you wanted to keep a tally of the links each user clicks while on your site. Since a user cannot ",(function (){var G__297161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__297162 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["unclick"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__297161,G__297162) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__297161,G__297162));
})()," a link, we will never have a need for removing items from our set (of links clicked for this user). Anything where you need to ensure an element is not in this list is going to be costly (because we have to use ",(function (){var G__297163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__297164 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297163,G__297164) : tailrecursion.hoplon.markdown.code_node.call(null,G__297163,G__297164));
})(),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__297157,G__297158) : tailrecursion.hoplon.markdown.para_node.call(null,G__297157,G__297158));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_296667;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_296666;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_296665;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_296664;
}})()], 0))], 0))], 0));
var G__288706 = "";
var G__288707 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Sets as Ordered Lists"], null),(function (){var _STAR_references_STAR_297165 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_297166 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_297167 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_297168 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__297169 = cljs.core.PersistentArrayMap.EMPTY;
var G__297170 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["one way to speed up our set operations is to change the representation so that the set elements are listed in increasing order. To do this, we need some way to compare two objects so that we can say which is bigger. For example, we could compare symbols lexicographically, or we could agree on some method for assigning a unique number to an object and then compare the elements by comparing the corresponding numbers. To keep our discussion simple, we will consider only the case where the set elements are numbers, so that we can compare elements using \\(\\gt\\) and \\(\\lt\\). We will represent a set of numbers by listing its elements in increasing order. Whereas our first representation above allowed us to represent the set \\({1,3,6,10}\\) by listing the elements in any order, our new representation allows only the list ",(function (){var G__297171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(1\n3 6 10)"], null);
var G__297172 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297171,G__297172) : tailrecursion.hoplon.markdown.code_node.call(null,G__297171,G__297172));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__297169,G__297170) : tailrecursion.hoplon.markdown.para_node.call(null,G__297169,G__297170));
})(),(function (){var G__297173 = cljs.core.PersistentArrayMap.EMPTY;
var G__297174 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One advantage of ordering shows up in element-of-set?: In checking for the presence of an item, we no longer have to scan the entire set. If we reach a set element that is larger than the item we are looking for, then we know that the item is not in the set:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__297173,G__297174) : tailrecursion.hoplon.markdown.para_node.call(null,G__297173,G__297174));
})(),(function (){var G__297263 = (function (){var G__297264 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__297265 = (function (){var G__297266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__297267 = "(";
var G__297268 = (function (){var G__297308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__297309 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297308,G__297309) : tailrecursion.hoplon.span.call(null,G__297308,G__297309));
})();
var G__297269 = (function (){var G__297310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297311 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297310,G__297311) : tailrecursion.hoplon.span.call(null,G__297310,G__297311));
})();
var G__297270 = " [";
var G__297271 = (function (){var G__297312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297313 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297312,G__297313) : tailrecursion.hoplon.span.call(null,G__297312,G__297313));
})();
var G__297272 = " ";
var G__297273 = (function (){var G__297314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297315 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297314,G__297315) : tailrecursion.hoplon.span.call(null,G__297314,G__297315));
})();
var G__297274 = "]\n  (";
var G__297275 = (function (){var G__297316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__297317 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297316,G__297317) : tailrecursion.hoplon.span.call(null,G__297316,G__297317));
})();
var G__297276 = "[";
var G__297277 = (function (){var G__297318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297319 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297318,G__297319) : tailrecursion.hoplon.span.call(null,G__297318,G__297319));
})();
var G__297278 = " ";
var G__297279 = (function (){var G__297320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297321 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297320,G__297321) : tailrecursion.hoplon.span.call(null,G__297320,G__297321));
})();
var G__297280 = "]\n    (";
var G__297281 = (function (){var G__297322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297323 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297322,G__297323) : tailrecursion.hoplon.span.call(null,G__297322,G__297323));
})();
var G__297282 = "(";
var G__297283 = (function (){var G__297324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297325 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297324,G__297325) : tailrecursion.hoplon.span.call(null,G__297324,G__297325));
})();
var G__297284 = "(";
var G__297285 = (function (){var G__297326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297327 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297326,G__297327) : tailrecursion.hoplon.span.call(null,G__297326,G__297327));
})();
var G__297286 = (function (){var G__297328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297329 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297328,G__297329) : tailrecursion.hoplon.span.call(null,G__297328,G__297329));
})();
var G__297287 = ") ";
var G__297288 = (function (){var G__297330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297331 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297330,G__297331) : tailrecursion.hoplon.span.call(null,G__297330,G__297331));
})();
var G__297289 = ") ";
var G__297290 = (function (){var G__297332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297333 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297332,G__297333) : tailrecursion.hoplon.span.call(null,G__297332,G__297333));
})();
var G__297291 = "\n          (";
var G__297292 = (function (){var G__297334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297335 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297334,G__297335) : tailrecursion.hoplon.span.call(null,G__297334,G__297335));
})();
var G__297293 = "(";
var G__297294 = (function (){var G__297336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297337 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297336,G__297337) : tailrecursion.hoplon.span.call(null,G__297336,G__297337));
})();
var G__297295 = (function (){var G__297338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297339 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297338,G__297339) : tailrecursion.hoplon.span.call(null,G__297338,G__297339));
})();
var G__297296 = ") ";
var G__297297 = (function (){var G__297340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297341 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297340,G__297341) : tailrecursion.hoplon.span.call(null,G__297340,G__297341));
})();
var G__297298 = ") ";
var G__297299 = (function (){var G__297342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297343 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297342,G__297343) : tailrecursion.hoplon.span.call(null,G__297342,G__297343));
})();
var G__297300 = "\n          ";
var G__297301 = (function (){var G__297344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297345 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297344,G__297345) : tailrecursion.hoplon.span.call(null,G__297344,G__297345));
})();
var G__297302 = " (";
var G__297303 = (function (){var G__297346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__297347 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297346,G__297347) : tailrecursion.hoplon.span.call(null,G__297346,G__297347));
})();
var G__297304 = " (";
var G__297305 = (function (){var G__297348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297349 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297348,G__297349) : tailrecursion.hoplon.span.call(null,G__297348,G__297349));
})();
var G__297306 = (function (){var G__297350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297351 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297350,G__297351) : tailrecursion.hoplon.span.call(null,G__297350,G__297351));
})();
var G__297307 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42(G__297266,G__297267,G__297268,G__297269,G__297270,G__297271,G__297272,G__297273,G__297274,G__297275,G__297276,G__297277,G__297278,G__297279,G__297280,G__297281,G__297282,G__297283,G__297284,G__297285,G__297286,G__297287,G__297288,G__297289,G__297290,G__297291,G__297292,G__297293,G__297294,G__297295,G__297296,G__297297,G__297298,G__297299,G__297300,G__297301,G__297302,G__297303,G__297304,G__297305,G__297306,G__297307) : tailrecursion.hoplon.pre.call(null,G__297266,G__297267,G__297268,G__297269,G__297270,G__297271,G__297272,G__297273,G__297274,G__297275,G__297276,G__297277,G__297278,G__297279,G__297280,G__297281,G__297282,G__297283,G__297284,G__297285,G__297286,G__297287,G__297288,G__297289,G__297290,G__297291,G__297292,G__297293,G__297294,G__297295,G__297296,G__297297,G__297298,G__297299,G__297300,G__297301,G__297302,G__297303,G__297304,G__297305,G__297306,G__297307));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__297264,G__297265) : tailrecursion.hoplon.div.call(null,G__297264,G__297265));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__297263) : tailrecursion.hoplon.div.call(null,G__297263));
})(),(function (){var G__297352 = cljs.core.PersistentArrayMap.EMPTY;
var G__297353 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["How many steps does this save? In the worst case, the item we are looking for may be the largest one in the set, so the number of steps is the same as for the unordered representation. On the other hand, if we search for items of many different sizes we can expect that sometimes we will be able to stop searching at a point near the beginning of the list and that other times we will still need to examine most of the list. On the average we should expect to have to examine about half of the items in the set. Thus, the average number of steps required will be about \\(n/2\\). This is still \\(\\Theta(n)\\) growth, but it does save us, on the average, a factor of 2 in number of steps over the previous implementation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__297352,G__297353) : tailrecursion.hoplon.markdown.para_node.call(null,G__297352,G__297353));
})(),(function (){var G__297354 = cljs.core.PersistentArrayMap.EMPTY;
var G__297355 = cljs.core.PersistentVector.fromArray(["We obtain a more impressive speedup with ",(function (){var G__297356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"intersection-set"], null);
var G__297357 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297356,G__297357) : tailrecursion.hoplon.markdown.code_node.call(null,G__297356,G__297357));
})(),". In the unordered representation this operation required \\(\\Theta(n^2)\\) steps, because we performed a complete scan of ",(function (){var G__297358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__297359 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297358,G__297359) : tailrecursion.hoplon.markdown.code_node.call(null,G__297358,G__297359));
})()," for each element of ",(function (){var G__297360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__297361 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297360,G__297361) : tailrecursion.hoplon.markdown.code_node.call(null,G__297360,G__297361));
})(),". But with the ordered representation, we can use a more clever method. Begin by comparing the initial elements, ",(function (){var G__297362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x1"], null);
var G__297363 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297362,G__297363) : tailrecursion.hoplon.markdown.code_node.call(null,G__297362,G__297363));
})()," and ",(function (){var G__297364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x2"], null);
var G__297365 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297364,G__297365) : tailrecursion.hoplon.markdown.code_node.call(null,G__297364,G__297365));
})(),", of the two sets. If ",(function (){var G__297366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x1"], null);
var G__297367 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297366,G__297367) : tailrecursion.hoplon.markdown.code_node.call(null,G__297366,G__297367));
})()," equals ",(function (){var G__297368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x2"], null);
var G__297369 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297368,G__297369) : tailrecursion.hoplon.markdown.code_node.call(null,G__297368,G__297369));
})(),", then that gives an element of the intersection, and the rest of the intersection is the intersection of the ",(function (){var G__297370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__297371 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297370,G__297371) : tailrecursion.hoplon.markdown.code_node.call(null,G__297370,G__297371));
})()," of the two sets. Suppose, however, that ",(function (){var G__297372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x1"], null);
var G__297373 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297372,G__297373) : tailrecursion.hoplon.markdown.code_node.call(null,G__297372,G__297373));
})()," is less than ",(function (){var G__297374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x2"], null);
var G__297375 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297374,G__297375) : tailrecursion.hoplon.markdown.code_node.call(null,G__297374,G__297375));
})(),". Since ",(function (){var G__297376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x2"], null);
var G__297377 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297376,G__297377) : tailrecursion.hoplon.markdown.code_node.call(null,G__297376,G__297377));
})()," is the smallest element in ",(function (){var G__297378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__297379 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297378,G__297379) : tailrecursion.hoplon.markdown.code_node.call(null,G__297378,G__297379));
})(),", we can immediately conclude that ",(function (){var G__297380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x1"], null);
var G__297381 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297380,G__297381) : tailrecursion.hoplon.markdown.code_node.call(null,G__297380,G__297381));
})()," cannot appear anywhere in ",(function (){var G__297382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__297383 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297382,G__297383) : tailrecursion.hoplon.markdown.code_node.call(null,G__297382,G__297383));
})()," and hence is not in the intersection. Hence, the intersection is equal to the intersection of ",(function (){var G__297384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__297385 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297384,G__297385) : tailrecursion.hoplon.markdown.code_node.call(null,G__297384,G__297385));
})()," with the ",(function (){var G__297386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__297387 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297386,G__297387) : tailrecursion.hoplon.markdown.code_node.call(null,G__297386,G__297387));
})()," of ",(function (){var G__297388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__297389 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297388,G__297389) : tailrecursion.hoplon.markdown.code_node.call(null,G__297388,G__297389));
})(),". Similarly, if ",(function (){var G__297390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x2"], null);
var G__297391 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297390,G__297391) : tailrecursion.hoplon.markdown.code_node.call(null,G__297390,G__297391));
})()," is less than ",(function (){var G__297392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x1"], null);
var G__297393 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297392,G__297393) : tailrecursion.hoplon.markdown.code_node.call(null,G__297392,G__297393));
})(),", then the intersection is given by the intersection of ",(function (){var G__297394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__297395 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297394,G__297395) : tailrecursion.hoplon.markdown.code_node.call(null,G__297394,G__297395));
})()," with the ",(function (){var G__297396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__297397 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297396,G__297397) : tailrecursion.hoplon.markdown.code_node.call(null,G__297396,G__297397));
})()," of ",(function (){var G__297398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__297399 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297398,G__297399) : tailrecursion.hoplon.markdown.code_node.call(null,G__297398,G__297399));
})(),". Here is the procedure:"], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__297354,G__297355) : tailrecursion.hoplon.markdown.para_node.call(null,G__297354,G__297355));
})(),(function (){var G__297636 = (function (){var G__297637 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__297638 = (function (){var G__297639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__297640 = "(";
var G__297641 = (function (){var G__297751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__297752 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297751,G__297752) : tailrecursion.hoplon.span.call(null,G__297751,G__297752));
})();
var G__297642 = (function (){var G__297753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297754 = "intersection-set*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297753,G__297754) : tailrecursion.hoplon.span.call(null,G__297753,G__297754));
})();
var G__297643 = " [";
var G__297644 = (function (){var G__297755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297756 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297755,G__297756) : tailrecursion.hoplon.span.call(null,G__297755,G__297756));
})();
var G__297645 = " ";
var G__297646 = (function (){var G__297757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297758 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297757,G__297758) : tailrecursion.hoplon.span.call(null,G__297757,G__297758));
})();
var G__297647 = "]\n  (";
var G__297648 = (function (){var G__297759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__297760 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297759,G__297760) : tailrecursion.hoplon.span.call(null,G__297759,G__297760));
})();
var G__297649 = "[";
var G__297650 = (function (){var G__297761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297762 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297761,G__297762) : tailrecursion.hoplon.span.call(null,G__297761,G__297762));
})();
var G__297651 = "    ";
var G__297652 = (function (){var G__297763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__297764 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297763,G__297764) : tailrecursion.hoplon.span.call(null,G__297763,G__297764));
})();
var G__297653 = "()\n         ";
var G__297654 = (function (){var G__297765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297766 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297765,G__297766) : tailrecursion.hoplon.span.call(null,G__297765,G__297766));
})();
var G__297655 = " ";
var G__297656 = (function (){var G__297767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297768 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297767,G__297768) : tailrecursion.hoplon.span.call(null,G__297767,G__297768));
})();
var G__297657 = "\n         ";
var G__297658 = (function (){var G__297769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297770 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297769,G__297770) : tailrecursion.hoplon.span.call(null,G__297769,G__297770));
})();
var G__297659 = " ";
var G__297660 = (function (){var G__297771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297772 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297771,G__297772) : tailrecursion.hoplon.span.call(null,G__297771,G__297772));
})();
var G__297661 = "]\n    (";
var G__297662 = (function (){var G__297773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__297774 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297773,G__297774) : tailrecursion.hoplon.span.call(null,G__297773,G__297774));
})();
var G__297663 = "(";
var G__297664 = (function (){var G__297775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297776 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297775,G__297776) : tailrecursion.hoplon.span.call(null,G__297775,G__297776));
})();
var G__297665 = "(";
var G__297666 = (function (){var G__297777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__297778 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297777,G__297778) : tailrecursion.hoplon.span.call(null,G__297777,G__297778));
})();
var G__297667 = " ";
var G__297668 = (function (){var G__297779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297780 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297779,G__297780) : tailrecursion.hoplon.span.call(null,G__297779,G__297780));
})();
var G__297669 = ") (";
var G__297670 = (function (){var G__297781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__297782 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297781,G__297782) : tailrecursion.hoplon.span.call(null,G__297781,G__297782));
})();
var G__297671 = " ";
var G__297672 = (function (){var G__297783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297784 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297783,G__297784) : tailrecursion.hoplon.span.call(null,G__297783,G__297784));
})();
var G__297673 = ")) ";
var G__297674 = (function (){var G__297785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297786 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297785,G__297786) : tailrecursion.hoplon.span.call(null,G__297785,G__297786));
})();
var G__297675 = "\n      (";
var G__297676 = (function (){var G__297787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__297788 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297787,G__297788) : tailrecursion.hoplon.span.call(null,G__297787,G__297788));
})();
var G__297677 = "[";
var G__297678 = (function (){var G__297789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297790 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297789,G__297790) : tailrecursion.hoplon.span.call(null,G__297789,G__297790));
})();
var G__297679 = " (";
var G__297680 = (function (){var G__297791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297792 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297791,G__297792) : tailrecursion.hoplon.span.call(null,G__297791,G__297792));
})();
var G__297681 = (function (){var G__297793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297794 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297793,G__297794) : tailrecursion.hoplon.span.call(null,G__297793,G__297794));
})();
var G__297682 = ")\n            ";
var G__297683 = (function (){var G__297795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297796 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297795,G__297796) : tailrecursion.hoplon.span.call(null,G__297795,G__297796));
})();
var G__297684 = " (";
var G__297685 = (function (){var G__297797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297798 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297797,G__297798) : tailrecursion.hoplon.span.call(null,G__297797,G__297798));
})();
var G__297686 = (function (){var G__297799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297800 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297799,G__297800) : tailrecursion.hoplon.span.call(null,G__297799,G__297800));
})();
var G__297687 = ")]\n        (";
var G__297688 = (function (){var G__297801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297802 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297801,G__297802) : tailrecursion.hoplon.span.call(null,G__297801,G__297802));
})();
var G__297689 = "(";
var G__297690 = (function (){var G__297803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297804 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297803,G__297804) : tailrecursion.hoplon.span.call(null,G__297803,G__297804));
})();
var G__297691 = (function (){var G__297805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297806 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297805,G__297806) : tailrecursion.hoplon.span.call(null,G__297805,G__297806));
})();
var G__297692 = " ";
var G__297693 = (function (){var G__297807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297808 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297807,G__297808) : tailrecursion.hoplon.span.call(null,G__297807,G__297808));
})();
var G__297694 = ") (";
var G__297695 = (function (){var G__297809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__297810 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297809,G__297810) : tailrecursion.hoplon.span.call(null,G__297809,G__297810));
})();
var G__297696 = " (";
var G__297697 = (function (){var G__297811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297812 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297811,G__297812) : tailrecursion.hoplon.span.call(null,G__297811,G__297812));
})();
var G__297698 = (function (){var G__297813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297814 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297813,G__297814) : tailrecursion.hoplon.span.call(null,G__297813,G__297814));
})();
var G__297699 = " ";
var G__297700 = (function (){var G__297815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297816 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297815,G__297816) : tailrecursion.hoplon.span.call(null,G__297815,G__297816));
})();
var G__297701 = ") (";
var G__297702 = (function (){var G__297817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297818 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297817,G__297818) : tailrecursion.hoplon.span.call(null,G__297817,G__297818));
})();
var G__297703 = (function (){var G__297819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297820 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297819,G__297820) : tailrecursion.hoplon.span.call(null,G__297819,G__297820));
})();
var G__297704 = ") (";
var G__297705 = (function (){var G__297821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297822 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297821,G__297822) : tailrecursion.hoplon.span.call(null,G__297821,G__297822));
})();
var G__297706 = (function (){var G__297823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297824 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297823,G__297824) : tailrecursion.hoplon.span.call(null,G__297823,G__297824));
})();
var G__297707 = "))\n              (";
var G__297708 = (function (){var G__297825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297826 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297825,G__297826) : tailrecursion.hoplon.span.call(null,G__297825,G__297826));
})();
var G__297709 = (function (){var G__297827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297828 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297827,G__297828) : tailrecursion.hoplon.span.call(null,G__297827,G__297828));
})();
var G__297710 = " ";
var G__297711 = (function (){var G__297829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297830 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297829,G__297830) : tailrecursion.hoplon.span.call(null,G__297829,G__297830));
})();
var G__297712 = ") (";
var G__297713 = (function (){var G__297831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__297832 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297831,G__297832) : tailrecursion.hoplon.span.call(null,G__297831,G__297832));
})();
var G__297714 = " ";
var G__297715 = (function (){var G__297833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297834 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297833,G__297834) : tailrecursion.hoplon.span.call(null,G__297833,G__297834));
})();
var G__297716 = " (";
var G__297717 = (function (){var G__297835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297836 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297835,G__297836) : tailrecursion.hoplon.span.call(null,G__297835,G__297836));
})();
var G__297718 = (function (){var G__297837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297838 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297837,G__297838) : tailrecursion.hoplon.span.call(null,G__297837,G__297838));
})();
var G__297719 = ") ";
var G__297720 = (function (){var G__297839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297840 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297839,G__297840) : tailrecursion.hoplon.span.call(null,G__297839,G__297840));
})();
var G__297721 = ")\n              (";
var G__297722 = (function (){var G__297841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297842 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297841,G__297842) : tailrecursion.hoplon.span.call(null,G__297841,G__297842));
})();
var G__297723 = (function (){var G__297843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297844 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297843,G__297844) : tailrecursion.hoplon.span.call(null,G__297843,G__297844));
})();
var G__297724 = " ";
var G__297725 = (function (){var G__297845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297846 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297845,G__297846) : tailrecursion.hoplon.span.call(null,G__297845,G__297846));
})();
var G__297726 = ") (";
var G__297727 = (function (){var G__297847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__297848 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297847,G__297848) : tailrecursion.hoplon.span.call(null,G__297847,G__297848));
})();
var G__297728 = " ";
var G__297729 = (function (){var G__297849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297850 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297849,G__297850) : tailrecursion.hoplon.span.call(null,G__297849,G__297850));
})();
var G__297730 = " ";
var G__297731 = (function (){var G__297851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297852 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297851,G__297852) : tailrecursion.hoplon.span.call(null,G__297851,G__297852));
})();
var G__297732 = " (";
var G__297733 = (function (){var G__297853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297854 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297853,G__297854) : tailrecursion.hoplon.span.call(null,G__297853,G__297854));
})();
var G__297734 = (function (){var G__297855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297856 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297855,G__297856) : tailrecursion.hoplon.span.call(null,G__297855,G__297856));
})();
var G__297735 = ")))))))\n\n(";
var G__297736 = (function (){var G__297857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__297858 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297857,G__297858) : tailrecursion.hoplon.span.call(null,G__297857,G__297858));
})();
var G__297737 = (function (){var G__297859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297860 = "intersection-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297859,G__297860) : tailrecursion.hoplon.span.call(null,G__297859,G__297860));
})();
var G__297738 = " [";
var G__297739 = (function (){var G__297861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297862 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297861,G__297862) : tailrecursion.hoplon.span.call(null,G__297861,G__297862));
})();
var G__297740 = " ";
var G__297741 = (function (){var G__297863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297864 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297863,G__297864) : tailrecursion.hoplon.span.call(null,G__297863,G__297864));
})();
var G__297742 = "]\n  (";
var G__297743 = (function (){var G__297865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__297866 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297865,G__297866) : tailrecursion.hoplon.span.call(null,G__297865,G__297866));
})();
var G__297744 = "(";
var G__297745 = (function (){var G__297867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__297868 = "intersection-set*";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297867,G__297868) : tailrecursion.hoplon.span.call(null,G__297867,G__297868));
})();
var G__297746 = " ";
var G__297747 = (function (){var G__297869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297870 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297869,G__297870) : tailrecursion.hoplon.span.call(null,G__297869,G__297870));
})();
var G__297748 = " ";
var G__297749 = (function (){var G__297871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__297872 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__297871,G__297872) : tailrecursion.hoplon.span.call(null,G__297871,G__297872));
})();
var G__297750 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$112 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$112(G__297639,G__297640,G__297641,G__297642,G__297643,G__297644,G__297645,G__297646,G__297647,G__297648,G__297649,G__297650,G__297651,G__297652,G__297653,G__297654,G__297655,G__297656,G__297657,G__297658,G__297659,G__297660,G__297661,G__297662,G__297663,G__297664,G__297665,G__297666,G__297667,G__297668,G__297669,G__297670,G__297671,G__297672,G__297673,G__297674,G__297675,G__297676,G__297677,G__297678,G__297679,G__297680,G__297681,G__297682,G__297683,G__297684,G__297685,G__297686,G__297687,G__297688,G__297689,G__297690,G__297691,G__297692,G__297693,G__297694,G__297695,G__297696,G__297697,G__297698,G__297699,G__297700,G__297701,G__297702,G__297703,G__297704,G__297705,G__297706,G__297707,G__297708,G__297709,G__297710,G__297711,G__297712,G__297713,G__297714,G__297715,G__297716,G__297717,G__297718,G__297719,G__297720,G__297721,G__297722,G__297723,G__297724,G__297725,G__297726,G__297727,G__297728,G__297729,G__297730,G__297731,G__297732,G__297733,G__297734,G__297735,G__297736,G__297737,G__297738,G__297739,G__297740,G__297741,G__297742,G__297743,G__297744,G__297745,G__297746,G__297747,G__297748,G__297749,G__297750) : tailrecursion.hoplon.pre.call(null,G__297639,G__297640,G__297641,G__297642,G__297643,G__297644,G__297645,G__297646,G__297647,G__297648,G__297649,G__297650,G__297651,G__297652,G__297653,G__297654,G__297655,G__297656,G__297657,G__297658,G__297659,G__297660,G__297661,G__297662,G__297663,G__297664,G__297665,G__297666,G__297667,G__297668,G__297669,G__297670,G__297671,G__297672,G__297673,G__297674,G__297675,G__297676,G__297677,G__297678,G__297679,G__297680,G__297681,G__297682,G__297683,G__297684,G__297685,G__297686,G__297687,G__297688,G__297689,G__297690,G__297691,G__297692,G__297693,G__297694,G__297695,G__297696,G__297697,G__297698,G__297699,G__297700,G__297701,G__297702,G__297703,G__297704,G__297705,G__297706,G__297707,G__297708,G__297709,G__297710,G__297711,G__297712,G__297713,G__297714,G__297715,G__297716,G__297717,G__297718,G__297719,G__297720,G__297721,G__297722,G__297723,G__297724,G__297725,G__297726,G__297727,G__297728,G__297729,G__297730,G__297731,G__297732,G__297733,G__297734,G__297735,G__297736,G__297737,G__297738,G__297739,G__297740,G__297741,G__297742,G__297743,G__297744,G__297745,G__297746,G__297747,G__297748,G__297749,G__297750));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__297637,G__297638) : tailrecursion.hoplon.div.call(null,G__297637,G__297638));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__297636) : tailrecursion.hoplon.div.call(null,G__297636));
})(),(function (){var G__297873 = cljs.core.PersistentArrayMap.EMPTY;
var G__297874 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To estimate the number of steps required by this process, observe that at each step we reduce the intersection problem to computing intersections of smaller sets ",(function (){var G__297875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__297876 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__297875,G__297876) : tailrecursion.hoplon.markdown.simple_node.call(null,G__297875,G__297876));
})()," removing the first element from ",(function (){var G__297877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__297878 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297877,G__297878) : tailrecursion.hoplon.markdown.code_node.call(null,G__297877,G__297878));
})()," or ",(function (){var G__297879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__297880 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297879,G__297880) : tailrecursion.hoplon.markdown.code_node.call(null,G__297879,G__297880));
})()," or both. Thus, the number of steps required is at most the sum of the sizes of ",(function (){var G__297881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set1"], null);
var G__297882 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297881,G__297882) : tailrecursion.hoplon.markdown.code_node.call(null,G__297881,G__297882));
})()," and ",(function (){var G__297883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"set2"], null);
var G__297884 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297883,G__297884) : tailrecursion.hoplon.markdown.code_node.call(null,G__297883,G__297884));
})(),", rather than the product of the sizes as with the unordered representation. This is \\(\\Theta(n)\\) growth rather than \\(\\Theta(n^2)\\) ",(function (){var G__297885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__297886 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__297885,G__297886) : tailrecursion.hoplon.markdown.simple_node.call(null,G__297885,G__297886));
})()," a considerable speedup, even for sets of moderate size."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__297873,G__297874) : tailrecursion.hoplon.markdown.para_node.call(null,G__297873,G__297874));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_297168;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_297167;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_297166;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_297165;
}})()], 0));
var G__288708 = "";
var G__288709 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_297887 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_297888 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_297889 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_297890 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__297891 = cljs.core.PersistentArrayMap.EMPTY;
var G__297892 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Give an implementation of ",(function (){var G__297893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__297894 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297893,G__297894) : tailrecursion.hoplon.markdown.code_node.call(null,G__297893,G__297894));
})()," using the ordered representation. By analogy with ",(function (){var G__297895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__297896 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__297895,G__297896) : tailrecursion.hoplon.markdown.code_node.call(null,G__297895,G__297896));
})()," show how to take advantage of the ordering to produce a procedure that requires on average about half as many steps as with the unordered representatioin."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__297891,G__297892) : tailrecursion.hoplon.markdown.para_node.call(null,G__297891,G__297892));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_297890;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_297889;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_297888;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_297887;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_297897 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_297898 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_297899 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_297900 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__298076 = (function (){var G__298077 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__298078 = (function (){var G__298079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__298080 = "(";
var G__298081 = (function (){var G__298160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__298161 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298160,G__298161) : tailrecursion.hoplon.span.call(null,G__298160,G__298161));
})();
var G__298082 = (function (){var G__298162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298163 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298162,G__298163) : tailrecursion.hoplon.span.call(null,G__298162,G__298163));
})();
var G__298083 = " [";
var G__298084 = (function (){var G__298164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298165 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298164,G__298165) : tailrecursion.hoplon.span.call(null,G__298164,G__298165));
})();
var G__298085 = " ";
var G__298086 = (function (){var G__298166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298167 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298166,G__298167) : tailrecursion.hoplon.span.call(null,G__298166,G__298167));
})();
var G__298087 = "]\n  (";
var G__298088 = (function (){var G__298168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__298169 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298168,G__298169) : tailrecursion.hoplon.span.call(null,G__298168,G__298169));
})();
var G__298089 = "[";
var G__298090 = (function (){var G__298170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298171 = "searched";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298170,G__298171) : tailrecursion.hoplon.span.call(null,G__298170,G__298171));
})();
var G__298091 = "  ";
var G__298092 = (function (){var G__298172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__298173 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298172,G__298173) : tailrecursion.hoplon.span.call(null,G__298172,G__298173));
})();
var G__298093 = "()\n         ";
var G__298094 = (function (){var G__298174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298175 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298174,G__298175) : tailrecursion.hoplon.span.call(null,G__298174,G__298175));
})();
var G__298095 = " ";
var G__298096 = (function (){var G__298176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298177 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298176,G__298177) : tailrecursion.hoplon.span.call(null,G__298176,G__298177));
})();
var G__298097 = "]\n    (";
var G__298098 = (function (){var G__298178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298179 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298178,G__298179) : tailrecursion.hoplon.span.call(null,G__298178,G__298179));
})();
var G__298099 = "(";
var G__298100 = (function (){var G__298180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__298181 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298180,G__298181) : tailrecursion.hoplon.span.call(null,G__298180,G__298181));
})();
var G__298101 = " ";
var G__298102 = (function (){var G__298182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298183 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298182,G__298183) : tailrecursion.hoplon.span.call(null,G__298182,G__298183));
})();
var G__298103 = ") (";
var G__298104 = (function (){var G__298184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298185 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298184,G__298185) : tailrecursion.hoplon.span.call(null,G__298184,G__298185));
})();
var G__298105 = "(";
var G__298106 = (function (){var G__298186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298187 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298186,G__298187) : tailrecursion.hoplon.span.call(null,G__298186,G__298187));
})();
var G__298107 = (function (){var G__298188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298189 = "searched";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298188,G__298189) : tailrecursion.hoplon.span.call(null,G__298188,G__298189));
})();
var G__298108 = " ";
var G__298109 = (function (){var G__298190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298191 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298190,G__298191) : tailrecursion.hoplon.span.call(null,G__298190,G__298191));
})();
var G__298110 = "))\n          (";
var G__298111 = (function (){var G__298192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298193 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298192,G__298193) : tailrecursion.hoplon.span.call(null,G__298192,G__298193));
})();
var G__298112 = (function (){var G__298194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298195 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298194,G__298195) : tailrecursion.hoplon.span.call(null,G__298194,G__298195));
})();
var G__298113 = " (";
var G__298114 = (function (){var G__298196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298197 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298196,G__298197) : tailrecursion.hoplon.span.call(null,G__298196,G__298197));
})();
var G__298115 = (function (){var G__298198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298199 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298198,G__298199) : tailrecursion.hoplon.span.call(null,G__298198,G__298199));
})();
var G__298116 = ")) ";
var G__298117 = (function (){var G__298200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298201 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298200,G__298201) : tailrecursion.hoplon.span.call(null,G__298200,G__298201));
})();
var G__298118 = "\n          (";
var G__298119 = (function (){var G__298202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298203 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298202,G__298203) : tailrecursion.hoplon.span.call(null,G__298202,G__298203));
})();
var G__298120 = (function (){var G__298204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298205 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298204,G__298205) : tailrecursion.hoplon.span.call(null,G__298204,G__298205));
})();
var G__298121 = " (";
var G__298122 = (function (){var G__298206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298207 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298206,G__298207) : tailrecursion.hoplon.span.call(null,G__298206,G__298207));
})();
var G__298123 = (function (){var G__298208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298209 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298208,G__298209) : tailrecursion.hoplon.span.call(null,G__298208,G__298209));
})();
var G__298124 = ")) (";
var G__298125 = (function (){var G__298210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__298211 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298210,G__298211) : tailrecursion.hoplon.span.call(null,G__298210,G__298211));
})();
var G__298126 = " (";
var G__298127 = (function (){var G__298212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298213 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298212,G__298213) : tailrecursion.hoplon.span.call(null,G__298212,G__298213));
})();
var G__298128 = (function (){var G__298214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298215 = "searched";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298214,G__298215) : tailrecursion.hoplon.span.call(null,G__298214,G__298215));
})();
var G__298129 = " (";
var G__298130 = (function (){var G__298216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298217 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298216,G__298217) : tailrecursion.hoplon.span.call(null,G__298216,G__298217));
})();
var G__298131 = (function (){var G__298218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298219 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298218,G__298219) : tailrecursion.hoplon.span.call(null,G__298218,G__298219));
})();
var G__298132 = "))\n                                         (";
var G__298133 = (function (){var G__298220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298221 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298220,G__298221) : tailrecursion.hoplon.span.call(null,G__298220,G__298221));
})();
var G__298134 = (function (){var G__298222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298223 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298222,G__298223) : tailrecursion.hoplon.span.call(null,G__298222,G__298223));
})();
var G__298135 = "))\n          (";
var G__298136 = (function (){var G__298224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298225 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298224,G__298225) : tailrecursion.hoplon.span.call(null,G__298224,G__298225));
})();
var G__298137 = (function (){var G__298226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298227 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298226,G__298227) : tailrecursion.hoplon.span.call(null,G__298226,G__298227));
})();
var G__298138 = " (";
var G__298139 = (function (){var G__298228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298229 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298228,G__298229) : tailrecursion.hoplon.span.call(null,G__298228,G__298229));
})();
var G__298140 = (function (){var G__298230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298231 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298230,G__298231) : tailrecursion.hoplon.span.call(null,G__298230,G__298231));
})();
var G__298141 = ")) (";
var G__298142 = (function (){var G__298232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298233 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298232,G__298233) : tailrecursion.hoplon.span.call(null,G__298232,G__298233));
})();
var G__298143 = "(";
var G__298144 = (function (){var G__298234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298235 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298234,G__298235) : tailrecursion.hoplon.span.call(null,G__298234,G__298235));
})();
var G__298145 = (function (){var G__298236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298237 = "searched";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298236,G__298237) : tailrecursion.hoplon.span.call(null,G__298236,G__298237));
})();
var G__298146 = ") (";
var G__298147 = (function (){var G__298238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298239 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298238,G__298239) : tailrecursion.hoplon.span.call(null,G__298238,G__298239));
})();
var G__298148 = (function (){var G__298240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298241 = "searching";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298240,G__298241) : tailrecursion.hoplon.span.call(null,G__298240,G__298241));
})();
var G__298149 = " ";
var G__298150 = (function (){var G__298242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298243 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298242,G__298243) : tailrecursion.hoplon.span.call(null,G__298242,G__298243));
})();
var G__298151 = "))\n          ";
var G__298152 = (function (){var G__298244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298245 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298244,G__298245) : tailrecursion.hoplon.span.call(null,G__298244,G__298245));
})();
var G__298153 = " (";
var G__298154 = (function (){var G__298246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__298247 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298246,G__298247) : tailrecursion.hoplon.span.call(null,G__298246,G__298247));
})();
var G__298155 = " (";
var G__298156 = (function (){var G__298248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__298249 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298248,G__298249) : tailrecursion.hoplon.span.call(null,G__298248,G__298249));
})();
var G__298157 = " ";
var G__298158 = (function (){var G__298250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__298251 = "\"Something went wrong with the adjoin. Try again.\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298250,G__298251) : tailrecursion.hoplon.span.call(null,G__298250,G__298251));
})();
var G__298159 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$81 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$81(G__298079,G__298080,G__298081,G__298082,G__298083,G__298084,G__298085,G__298086,G__298087,G__298088,G__298089,G__298090,G__298091,G__298092,G__298093,G__298094,G__298095,G__298096,G__298097,G__298098,G__298099,G__298100,G__298101,G__298102,G__298103,G__298104,G__298105,G__298106,G__298107,G__298108,G__298109,G__298110,G__298111,G__298112,G__298113,G__298114,G__298115,G__298116,G__298117,G__298118,G__298119,G__298120,G__298121,G__298122,G__298123,G__298124,G__298125,G__298126,G__298127,G__298128,G__298129,G__298130,G__298131,G__298132,G__298133,G__298134,G__298135,G__298136,G__298137,G__298138,G__298139,G__298140,G__298141,G__298142,G__298143,G__298144,G__298145,G__298146,G__298147,G__298148,G__298149,G__298150,G__298151,G__298152,G__298153,G__298154,G__298155,G__298156,G__298157,G__298158,G__298159) : tailrecursion.hoplon.pre.call(null,G__298079,G__298080,G__298081,G__298082,G__298083,G__298084,G__298085,G__298086,G__298087,G__298088,G__298089,G__298090,G__298091,G__298092,G__298093,G__298094,G__298095,G__298096,G__298097,G__298098,G__298099,G__298100,G__298101,G__298102,G__298103,G__298104,G__298105,G__298106,G__298107,G__298108,G__298109,G__298110,G__298111,G__298112,G__298113,G__298114,G__298115,G__298116,G__298117,G__298118,G__298119,G__298120,G__298121,G__298122,G__298123,G__298124,G__298125,G__298126,G__298127,G__298128,G__298129,G__298130,G__298131,G__298132,G__298133,G__298134,G__298135,G__298136,G__298137,G__298138,G__298139,G__298140,G__298141,G__298142,G__298143,G__298144,G__298145,G__298146,G__298147,G__298148,G__298149,G__298150,G__298151,G__298152,G__298153,G__298154,G__298155,G__298156,G__298157,G__298158,G__298159));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__298077,G__298078) : tailrecursion.hoplon.div.call(null,G__298077,G__298078));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__298076) : tailrecursion.hoplon.div.call(null,G__298076));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_297900;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_297899;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_297898;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_297897;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_298252 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_298253 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_298254 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_298255 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__298256 = cljs.core.PersistentArrayMap.EMPTY;
var G__298257 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Give a \\(\\Theta(n)\\) implementation of ",(function (){var G__298258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"union-set"], null);
var G__298259 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__298258,G__298259) : tailrecursion.hoplon.markdown.code_node.call(null,G__298258,G__298259));
})()," for sets represented as ordered lists."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__298256,G__298257) : tailrecursion.hoplon.markdown.para_node.call(null,G__298256,G__298257));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_298255;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_298254;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_298253;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_298252;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_298260 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_298261 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_298262 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_298263 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__298478 = (function (){var G__298479 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__298480 = (function (){var G__298481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__298482 = "(";
var G__298483 = (function (){var G__298583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__298584 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298583,G__298584) : tailrecursion.hoplon.span.call(null,G__298583,G__298584));
})();
var G__298484 = (function (){var G__298585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298586 = "union-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298585,G__298586) : tailrecursion.hoplon.span.call(null,G__298585,G__298586));
})();
var G__298485 = " [";
var G__298486 = (function (){var G__298587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298588 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298587,G__298588) : tailrecursion.hoplon.span.call(null,G__298587,G__298588));
})();
var G__298487 = " ";
var G__298488 = (function (){var G__298589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298590 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298589,G__298590) : tailrecursion.hoplon.span.call(null,G__298589,G__298590));
})();
var G__298489 = "]\n  (";
var G__298490 = (function (){var G__298591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__298592 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298591,G__298592) : tailrecursion.hoplon.span.call(null,G__298591,G__298592));
})();
var G__298491 = "[";
var G__298492 = (function (){var G__298593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298594 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298593,G__298594) : tailrecursion.hoplon.span.call(null,G__298593,G__298594));
})();
var G__298493 = "    ";
var G__298494 = (function (){var G__298595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__298596 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298595,G__298596) : tailrecursion.hoplon.span.call(null,G__298595,G__298596));
})();
var G__298495 = "()\n         ";
var G__298496 = (function (){var G__298597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298598 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298597,G__298598) : tailrecursion.hoplon.span.call(null,G__298597,G__298598));
})();
var G__298497 = " ";
var G__298498 = (function (){var G__298599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298600 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298599,G__298600) : tailrecursion.hoplon.span.call(null,G__298599,G__298600));
})();
var G__298499 = "\n         ";
var G__298500 = (function (){var G__298601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298602 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298601,G__298602) : tailrecursion.hoplon.span.call(null,G__298601,G__298602));
})();
var G__298501 = " ";
var G__298502 = (function (){var G__298603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298604 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298603,G__298604) : tailrecursion.hoplon.span.call(null,G__298603,G__298604));
})();
var G__298503 = "]\n    (";
var G__298504 = (function (){var G__298605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__298606 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298605,G__298606) : tailrecursion.hoplon.span.call(null,G__298605,G__298606));
})();
var G__298505 = "[";
var G__298506 = (function (){var G__298607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298608 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298607,G__298608) : tailrecursion.hoplon.span.call(null,G__298607,G__298608));
})();
var G__298507 = " (";
var G__298508 = (function (){var G__298609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298610 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298609,G__298610) : tailrecursion.hoplon.span.call(null,G__298609,G__298610));
})();
var G__298509 = (function (){var G__298611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298612 = "set1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298611,G__298612) : tailrecursion.hoplon.span.call(null,G__298611,G__298612));
})();
var G__298510 = ")\n          ";
var G__298511 = (function (){var G__298613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298614 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298613,G__298614) : tailrecursion.hoplon.span.call(null,G__298613,G__298614));
})();
var G__298512 = " (";
var G__298513 = (function (){var G__298615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298616 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298615,G__298616) : tailrecursion.hoplon.span.call(null,G__298615,G__298616));
})();
var G__298514 = (function (){var G__298617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298618 = "set2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298617,G__298618) : tailrecursion.hoplon.span.call(null,G__298617,G__298618));
})();
var G__298515 = ")]\n      (";
var G__298516 = (function (){var G__298619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298620 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298619,G__298620) : tailrecursion.hoplon.span.call(null,G__298619,G__298620));
})();
var G__298517 = "(";
var G__298518 = (function (){var G__298621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__298622 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298621,G__298622) : tailrecursion.hoplon.span.call(null,G__298621,G__298622));
})();
var G__298519 = " ";
var G__298520 = (function (){var G__298623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298624 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298623,G__298624) : tailrecursion.hoplon.span.call(null,G__298623,G__298624));
})();
var G__298521 = ") (";
var G__298522 = (function (){var G__298625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298626 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298625,G__298626) : tailrecursion.hoplon.span.call(null,G__298625,G__298626));
})();
var G__298523 = "(";
var G__298524 = (function (){var G__298627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298628 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298627,G__298628) : tailrecursion.hoplon.span.call(null,G__298627,G__298628));
})();
var G__298525 = (function (){var G__298629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298630 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298629,G__298630) : tailrecursion.hoplon.span.call(null,G__298629,G__298630));
})();
var G__298526 = ") (";
var G__298527 = (function (){var G__298631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__298632 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298631,G__298632) : tailrecursion.hoplon.span.call(null,G__298631,G__298632));
})();
var G__298528 = "))\n            (";
var G__298529 = (function (){var G__298633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__298634 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298633,G__298634) : tailrecursion.hoplon.span.call(null,G__298633,G__298634));
})();
var G__298530 = " ";
var G__298531 = (function (){var G__298635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298636 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298635,G__298636) : tailrecursion.hoplon.span.call(null,G__298635,G__298636));
})();
var G__298532 = ") (";
var G__298533 = (function (){var G__298637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298638 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298637,G__298638) : tailrecursion.hoplon.span.call(null,G__298637,G__298638));
})();
var G__298534 = "(";
var G__298535 = (function (){var G__298639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298640 = "reverse ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298639,G__298640) : tailrecursion.hoplon.span.call(null,G__298639,G__298640));
})();
var G__298536 = (function (){var G__298641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298642 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298641,G__298642) : tailrecursion.hoplon.span.call(null,G__298641,G__298642));
})();
var G__298537 = ") (";
var G__298538 = (function (){var G__298643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__298644 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298643,G__298644) : tailrecursion.hoplon.span.call(null,G__298643,G__298644));
})();
var G__298539 = "))\n            (";
var G__298540 = (function (){var G__298645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298646 = "<= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298645,G__298646) : tailrecursion.hoplon.span.call(null,G__298645,G__298646));
})();
var G__298541 = (function (){var G__298647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298648 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298647,G__298648) : tailrecursion.hoplon.span.call(null,G__298647,G__298648));
})();
var G__298542 = " ";
var G__298543 = (function (){var G__298649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298650 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298649,G__298650) : tailrecursion.hoplon.span.call(null,G__298649,G__298650));
})();
var G__298544 = ") (";
var G__298545 = (function (){var G__298651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__298652 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298651,G__298652) : tailrecursion.hoplon.span.call(null,G__298651,G__298652));
})();
var G__298546 = " (";
var G__298547 = (function (){var G__298653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298654 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298653,G__298654) : tailrecursion.hoplon.span.call(null,G__298653,G__298654));
})();
var G__298548 = (function (){var G__298655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298656 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298655,G__298656) : tailrecursion.hoplon.span.call(null,G__298655,G__298656));
})();
var G__298549 = " ";
var G__298550 = (function (){var G__298657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298658 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298657,G__298658) : tailrecursion.hoplon.span.call(null,G__298657,G__298658));
})();
var G__298551 = ") (";
var G__298552 = (function (){var G__298659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298660 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298659,G__298660) : tailrecursion.hoplon.span.call(null,G__298659,G__298660));
})();
var G__298553 = (function (){var G__298661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298662 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298661,G__298662) : tailrecursion.hoplon.span.call(null,G__298661,G__298662));
})();
var G__298554 = ") ";
var G__298555 = (function (){var G__298663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298664 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298663,G__298664) : tailrecursion.hoplon.span.call(null,G__298663,G__298664));
})();
var G__298556 = ")\n            (";
var G__298557 = (function (){var G__298665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298666 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298665,G__298666) : tailrecursion.hoplon.span.call(null,G__298665,G__298666));
})();
var G__298558 = " ";
var G__298559 = (function (){var G__298667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298668 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298667,G__298668) : tailrecursion.hoplon.span.call(null,G__298667,G__298668));
})();
var G__298560 = " ";
var G__298561 = (function (){var G__298669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298670 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298669,G__298670) : tailrecursion.hoplon.span.call(null,G__298669,G__298670));
})();
var G__298562 = ") (";
var G__298563 = (function (){var G__298671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__298672 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298671,G__298672) : tailrecursion.hoplon.span.call(null,G__298671,G__298672));
})();
var G__298564 = " (";
var G__298565 = (function (){var G__298673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298674 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298673,G__298674) : tailrecursion.hoplon.span.call(null,G__298673,G__298674));
})();
var G__298566 = (function (){var G__298675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298676 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298675,G__298676) : tailrecursion.hoplon.span.call(null,G__298675,G__298676));
})();
var G__298567 = " ";
var G__298568 = (function (){var G__298677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298678 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298677,G__298678) : tailrecursion.hoplon.span.call(null,G__298677,G__298678));
})();
var G__298569 = ") ";
var G__298570 = (function (){var G__298679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298680 = "things1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298679,G__298680) : tailrecursion.hoplon.span.call(null,G__298679,G__298680));
})();
var G__298571 = " (";
var G__298572 = (function (){var G__298681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298682 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298681,G__298682) : tailrecursion.hoplon.span.call(null,G__298681,G__298682));
})();
var G__298573 = (function (){var G__298683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298684 = "things2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298683,G__298684) : tailrecursion.hoplon.span.call(null,G__298683,G__298684));
})();
var G__298574 = "))\n            ";
var G__298575 = (function (){var G__298685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298686 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298685,G__298686) : tailrecursion.hoplon.span.call(null,G__298685,G__298686));
})();
var G__298576 = " (";
var G__298577 = (function (){var G__298687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__298688 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298687,G__298688) : tailrecursion.hoplon.span.call(null,G__298687,G__298688));
})();
var G__298578 = " (";
var G__298579 = (function (){var G__298689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__298690 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298689,G__298690) : tailrecursion.hoplon.span.call(null,G__298689,G__298690));
})();
var G__298580 = " ";
var G__298581 = (function (){var G__298691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__298692 = "\"Something went wrong with the union. Try again.\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298691,G__298692) : tailrecursion.hoplon.span.call(null,G__298691,G__298692));
})();
var G__298582 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$102 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$102(G__298481,G__298482,G__298483,G__298484,G__298485,G__298486,G__298487,G__298488,G__298489,G__298490,G__298491,G__298492,G__298493,G__298494,G__298495,G__298496,G__298497,G__298498,G__298499,G__298500,G__298501,G__298502,G__298503,G__298504,G__298505,G__298506,G__298507,G__298508,G__298509,G__298510,G__298511,G__298512,G__298513,G__298514,G__298515,G__298516,G__298517,G__298518,G__298519,G__298520,G__298521,G__298522,G__298523,G__298524,G__298525,G__298526,G__298527,G__298528,G__298529,G__298530,G__298531,G__298532,G__298533,G__298534,G__298535,G__298536,G__298537,G__298538,G__298539,G__298540,G__298541,G__298542,G__298543,G__298544,G__298545,G__298546,G__298547,G__298548,G__298549,G__298550,G__298551,G__298552,G__298553,G__298554,G__298555,G__298556,G__298557,G__298558,G__298559,G__298560,G__298561,G__298562,G__298563,G__298564,G__298565,G__298566,G__298567,G__298568,G__298569,G__298570,G__298571,G__298572,G__298573,G__298574,G__298575,G__298576,G__298577,G__298578,G__298579,G__298580,G__298581,G__298582) : tailrecursion.hoplon.pre.call(null,G__298481,G__298482,G__298483,G__298484,G__298485,G__298486,G__298487,G__298488,G__298489,G__298490,G__298491,G__298492,G__298493,G__298494,G__298495,G__298496,G__298497,G__298498,G__298499,G__298500,G__298501,G__298502,G__298503,G__298504,G__298505,G__298506,G__298507,G__298508,G__298509,G__298510,G__298511,G__298512,G__298513,G__298514,G__298515,G__298516,G__298517,G__298518,G__298519,G__298520,G__298521,G__298522,G__298523,G__298524,G__298525,G__298526,G__298527,G__298528,G__298529,G__298530,G__298531,G__298532,G__298533,G__298534,G__298535,G__298536,G__298537,G__298538,G__298539,G__298540,G__298541,G__298542,G__298543,G__298544,G__298545,G__298546,G__298547,G__298548,G__298549,G__298550,G__298551,G__298552,G__298553,G__298554,G__298555,G__298556,G__298557,G__298558,G__298559,G__298560,G__298561,G__298562,G__298563,G__298564,G__298565,G__298566,G__298567,G__298568,G__298569,G__298570,G__298571,G__298572,G__298573,G__298574,G__298575,G__298576,G__298577,G__298578,G__298579,G__298580,G__298581,G__298582));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__298479,G__298480) : tailrecursion.hoplon.div.call(null,G__298479,G__298480));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__298478) : tailrecursion.hoplon.div.call(null,G__298478));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_298263;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_298262;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_298261;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_298260;
}})()], 0))], 0))], 0));
var G__288710 = "";
var G__288711 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Sets as Binary Trees"], null),(function (){var _STAR_references_STAR_298693 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_298694 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_298695 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_298696 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__298697 = cljs.core.PersistentArrayMap.EMPTY;
var G__298698 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can do better than the ordered-list representation by arranging the set elements in the form of a tree. Each node of the tree holds one element of the set, called the ",(function (){var G__298699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__298700 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["entry"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__298699,G__298700) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__298699,G__298700));
})()," at that node, and a link to each of two other (possibly empty) nodes. The ",(function (){var G__298701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__298702 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["left"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__298701,G__298702) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__298701,G__298702));
})()," link points to elements smaller than the one at the node, and the ",(function (){var G__298703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__298704 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["right"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__298703,G__298704) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__298703,G__298704));
})()," link to elements greater than one at the node. Figure 2.16 shows some trees that represent the set \\({1,3,5,7,9,11}\\). The same set may be represented by a tree in a number of different ways. The only thing we require for valid representation is that all elements in the left subtree be smaller than the node entry and that all elements in the right subtree be larger."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__298697,G__298698) : tailrecursion.hoplon.markdown.para_node.call(null,G__298697,G__298698));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_298696;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_298695;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_298694;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_298693;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"Various binary trees represent the set {1,3,5,7,9,11}"], null)], 0)),"",(function (){var _STAR_references_STAR_298705 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_298706 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_298707 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_298708 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__298709 = cljs.core.PersistentArrayMap.EMPTY;
var G__298710 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The advantage of the tree representation is this: Suppose we want to check whether a number \\(x\\) is contained in a set. We begin by comparing \\(x\\) with the entry in the top node. If \\(x\\) is less than this, we know that we need only search the left subtree; if \\(x\\) is greater, we need only search the right subtree. Now, if the tree is ",(function (){var G__298711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__298712 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["balanced,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__298711,G__298712) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__298711,G__298712));
})()," each of these subtrees will be about half the size of the original. Thus, in one step we have reduced the problem of searching a tree of size \\(n\\) to searching a tree of size \\(n/2\\). Since the size of the tree is halved at each step, we should expect that the number of steps needed to search a tree of size \\(n\\) grows as \\(\\Theta(\\log n)\\).",(function (){var G__298713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__298714 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Halving the size of the problem at each step is the distinguishing characteristic of logarithmic growth, as we saw with the fast-exponentiation algorithm of section 1.2.4 and the half-interval search method of section 1.3.3."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__298713,G__298714) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__298713,G__298714));
})()," For large sets, this will be a significant speedup over the previous representations."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__298709,G__298710) : tailrecursion.hoplon.markdown.para_node.call(null,G__298709,G__298710));
})(),(function (){var G__298715 = cljs.core.PersistentArrayMap.EMPTY;
var G__298716 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can represent trees by using lists. Each node will be a list of three items: the entry at the node, the left subtree, and the right subtree. A left or right subtree of the empty list will indicate that there is no subtree connected there. We can describe this representation by the following procedure:",(function (){var G__298717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__298718 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We are representing sets in terms of trees, and trees in terms of lists ",(function (){var G__298719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__298720 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__298719,G__298720) : tailrecursion.hoplon.markdown.simple_node.call(null,G__298719,G__298720));
})()," in effect, a data abstraction built upon a data abstraction. We can regard the procedures entry, left-branch, right-branch, and make-tree as a way of isolating the abstraction of a ",(function (){var G__298721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__298722 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["binary tree"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__298721,G__298722) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__298721,G__298722));
})()," from the particular way we might wish to represent such a tree in terms of list structure."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__298717,G__298718) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__298717,G__298718));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__298715,G__298716) : tailrecursion.hoplon.markdown.para_node.call(null,G__298715,G__298716));
})(),(function (){var G__298817 = (function (){var G__298818 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__298819 = (function (){var G__298820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__298821 = "(";
var G__298822 = (function (){var G__298862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__298863 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298862,G__298863) : tailrecursion.hoplon.span.call(null,G__298862,G__298863));
})();
var G__298823 = (function (){var G__298864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298865 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298864,G__298865) : tailrecursion.hoplon.span.call(null,G__298864,G__298865));
})();
var G__298824 = " [";
var G__298825 = (function (){var G__298866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298867 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298866,G__298867) : tailrecursion.hoplon.span.call(null,G__298866,G__298867));
})();
var G__298826 = "]\n  (";
var G__298827 = (function (){var G__298868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298869 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298868,G__298869) : tailrecursion.hoplon.span.call(null,G__298868,G__298869));
})();
var G__298828 = (function (){var G__298870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298871 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298870,G__298871) : tailrecursion.hoplon.span.call(null,G__298870,G__298871));
})();
var G__298829 = "))\n\n(";
var G__298830 = (function (){var G__298872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__298873 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298872,G__298873) : tailrecursion.hoplon.span.call(null,G__298872,G__298873));
})();
var G__298831 = (function (){var G__298874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298875 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298874,G__298875) : tailrecursion.hoplon.span.call(null,G__298874,G__298875));
})();
var G__298832 = " [";
var G__298833 = (function (){var G__298876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298877 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298876,G__298877) : tailrecursion.hoplon.span.call(null,G__298876,G__298877));
})();
var G__298834 = "]\n  (";
var G__298835 = (function (){var G__298878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298879 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298878,G__298879) : tailrecursion.hoplon.span.call(null,G__298878,G__298879));
})();
var G__298836 = (function (){var G__298880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298881 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298880,G__298881) : tailrecursion.hoplon.span.call(null,G__298880,G__298881));
})();
var G__298837 = "))\n\n(";
var G__298838 = (function (){var G__298882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__298883 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298882,G__298883) : tailrecursion.hoplon.span.call(null,G__298882,G__298883));
})();
var G__298839 = (function (){var G__298884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298885 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298884,G__298885) : tailrecursion.hoplon.span.call(null,G__298884,G__298885));
})();
var G__298840 = " [";
var G__298841 = (function (){var G__298886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298887 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298886,G__298887) : tailrecursion.hoplon.span.call(null,G__298886,G__298887));
})();
var G__298842 = "]\n  (";
var G__298843 = (function (){var G__298888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298889 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298888,G__298889) : tailrecursion.hoplon.span.call(null,G__298888,G__298889));
})();
var G__298844 = (function (){var G__298890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298891 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298890,G__298891) : tailrecursion.hoplon.span.call(null,G__298890,G__298891));
})();
var G__298845 = " ";
var G__298846 = (function (){var G__298892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__298893 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298892,G__298893) : tailrecursion.hoplon.span.call(null,G__298892,G__298893));
})();
var G__298847 = "))\n\n(";
var G__298848 = (function (){var G__298894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__298895 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298894,G__298895) : tailrecursion.hoplon.span.call(null,G__298894,G__298895));
})();
var G__298849 = (function (){var G__298896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298897 = "make-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298896,G__298897) : tailrecursion.hoplon.span.call(null,G__298896,G__298897));
})();
var G__298850 = " [";
var G__298851 = (function (){var G__298898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298899 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298898,G__298899) : tailrecursion.hoplon.span.call(null,G__298898,G__298899));
})();
var G__298852 = " ";
var G__298853 = (function (){var G__298900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298901 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298900,G__298901) : tailrecursion.hoplon.span.call(null,G__298900,G__298901));
})();
var G__298854 = (function (){var G__298902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298903 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298902,G__298903) : tailrecursion.hoplon.span.call(null,G__298902,G__298903));
})();
var G__298855 = "]\n  (";
var G__298856 = (function (){var G__298904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298905 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298904,G__298905) : tailrecursion.hoplon.span.call(null,G__298904,G__298905));
})();
var G__298857 = (function (){var G__298906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298907 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298906,G__298907) : tailrecursion.hoplon.span.call(null,G__298906,G__298907));
})();
var G__298858 = " ";
var G__298859 = (function (){var G__298908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__298909 = "left ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298908,G__298909) : tailrecursion.hoplon.span.call(null,G__298908,G__298909));
})();
var G__298860 = (function (){var G__298910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__298911 = "right";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__298910,G__298911) : tailrecursion.hoplon.span.call(null,G__298910,G__298911));
})();
var G__298861 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$42(G__298820,G__298821,G__298822,G__298823,G__298824,G__298825,G__298826,G__298827,G__298828,G__298829,G__298830,G__298831,G__298832,G__298833,G__298834,G__298835,G__298836,G__298837,G__298838,G__298839,G__298840,G__298841,G__298842,G__298843,G__298844,G__298845,G__298846,G__298847,G__298848,G__298849,G__298850,G__298851,G__298852,G__298853,G__298854,G__298855,G__298856,G__298857,G__298858,G__298859,G__298860,G__298861) : tailrecursion.hoplon.pre.call(null,G__298820,G__298821,G__298822,G__298823,G__298824,G__298825,G__298826,G__298827,G__298828,G__298829,G__298830,G__298831,G__298832,G__298833,G__298834,G__298835,G__298836,G__298837,G__298838,G__298839,G__298840,G__298841,G__298842,G__298843,G__298844,G__298845,G__298846,G__298847,G__298848,G__298849,G__298850,G__298851,G__298852,G__298853,G__298854,G__298855,G__298856,G__298857,G__298858,G__298859,G__298860,G__298861));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__298818,G__298819) : tailrecursion.hoplon.div.call(null,G__298818,G__298819));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__298817) : tailrecursion.hoplon.div.call(null,G__298817));
})(),(function (){var G__298912 = cljs.core.PersistentArrayMap.EMPTY;
var G__298913 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we can write the ",(function (){var G__298914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"element-of-set?"], null);
var G__298915 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__298914,G__298915) : tailrecursion.hoplon.markdown.code_node.call(null,G__298914,G__298915));
})()," procedure using the strategy described above:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__298912,G__298913) : tailrecursion.hoplon.markdown.para_node.call(null,G__298912,G__298913));
})(),(function (){var G__299048 = (function (){var G__299049 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__299050 = (function (){var G__299051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__299052 = "(";
var G__299053 = (function (){var G__299115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__299116 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299115,G__299116) : tailrecursion.hoplon.span.call(null,G__299115,G__299116));
})();
var G__299054 = (function (){var G__299117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299118 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299117,G__299118) : tailrecursion.hoplon.span.call(null,G__299117,G__299118));
})();
var G__299055 = " [";
var G__299056 = (function (){var G__299119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299120 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299119,G__299120) : tailrecursion.hoplon.span.call(null,G__299119,G__299120));
})();
var G__299057 = " ";
var G__299058 = (function (){var G__299121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299122 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299121,G__299122) : tailrecursion.hoplon.span.call(null,G__299121,G__299122));
})();
var G__299059 = "]\n  (";
var G__299060 = (function (){var G__299123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299124 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299123,G__299124) : tailrecursion.hoplon.span.call(null,G__299123,G__299124));
})();
var G__299061 = "(";
var G__299062 = (function (){var G__299125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299126 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299125,G__299126) : tailrecursion.hoplon.span.call(null,G__299125,G__299126));
})();
var G__299063 = " ";
var G__299064 = (function (){var G__299127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299128 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299127,G__299128) : tailrecursion.hoplon.span.call(null,G__299127,G__299128));
})();
var G__299065 = ") ";
var G__299066 = (function (){var G__299129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299130 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299129,G__299130) : tailrecursion.hoplon.span.call(null,G__299129,G__299130));
})();
var G__299067 = "\n        (";
var G__299068 = (function (){var G__299131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299132 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299131,G__299132) : tailrecursion.hoplon.span.call(null,G__299131,G__299132));
})();
var G__299069 = (function (){var G__299133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299134 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299133,G__299134) : tailrecursion.hoplon.span.call(null,G__299133,G__299134));
})();
var G__299070 = " (";
var G__299071 = (function (){var G__299135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299136 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299135,G__299136) : tailrecursion.hoplon.span.call(null,G__299135,G__299136));
})();
var G__299072 = " ";
var G__299073 = (function (){var G__299137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299138 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299137,G__299138) : tailrecursion.hoplon.span.call(null,G__299137,G__299138));
})();
var G__299074 = ")) ";
var G__299075 = (function (){var G__299139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299140 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299139,G__299140) : tailrecursion.hoplon.span.call(null,G__299139,G__299140));
})();
var G__299076 = "\n        (";
var G__299077 = (function (){var G__299141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299142 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299141,G__299142) : tailrecursion.hoplon.span.call(null,G__299141,G__299142));
})();
var G__299078 = (function (){var G__299143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299144 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299143,G__299144) : tailrecursion.hoplon.span.call(null,G__299143,G__299144));
})();
var G__299079 = " (";
var G__299080 = (function (){var G__299145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299146 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299145,G__299146) : tailrecursion.hoplon.span.call(null,G__299145,G__299146));
})();
var G__299081 = " ";
var G__299082 = (function (){var G__299147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299148 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299147,G__299148) : tailrecursion.hoplon.span.call(null,G__299147,G__299148));
})();
var G__299083 = ")) (";
var G__299084 = (function (){var G__299149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299150 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299149,G__299150) : tailrecursion.hoplon.span.call(null,G__299149,G__299150));
})();
var G__299085 = " ";
var G__299086 = (function (){var G__299151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299152 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299151,G__299152) : tailrecursion.hoplon.span.call(null,G__299151,G__299152));
})();
var G__299087 = " (";
var G__299088 = (function (){var G__299153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299154 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299153,G__299154) : tailrecursion.hoplon.span.call(null,G__299153,G__299154));
})();
var G__299089 = " ";
var G__299090 = (function (){var G__299155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299156 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299155,G__299156) : tailrecursion.hoplon.span.call(null,G__299155,G__299156));
})();
var G__299091 = "))\n        (";
var G__299092 = (function (){var G__299157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299158 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299157,G__299158) : tailrecursion.hoplon.span.call(null,G__299157,G__299158));
})();
var G__299093 = (function (){var G__299159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299160 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299159,G__299160) : tailrecursion.hoplon.span.call(null,G__299159,G__299160));
})();
var G__299094 = " (";
var G__299095 = (function (){var G__299161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299162 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299161,G__299162) : tailrecursion.hoplon.span.call(null,G__299161,G__299162));
})();
var G__299096 = " ";
var G__299097 = (function (){var G__299163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299164 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299163,G__299164) : tailrecursion.hoplon.span.call(null,G__299163,G__299164));
})();
var G__299098 = ")) (";
var G__299099 = (function (){var G__299165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299166 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299165,G__299166) : tailrecursion.hoplon.span.call(null,G__299165,G__299166));
})();
var G__299100 = " ";
var G__299101 = (function (){var G__299167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299168 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299167,G__299168) : tailrecursion.hoplon.span.call(null,G__299167,G__299168));
})();
var G__299102 = " (";
var G__299103 = (function (){var G__299169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299170 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299169,G__299170) : tailrecursion.hoplon.span.call(null,G__299169,G__299170));
})();
var G__299104 = " ";
var G__299105 = (function (){var G__299171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299172 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299171,G__299172) : tailrecursion.hoplon.span.call(null,G__299171,G__299172));
})();
var G__299106 = "))\n        ";
var G__299107 = (function (){var G__299173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299174 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299173,G__299174) : tailrecursion.hoplon.span.call(null,G__299173,G__299174));
})();
var G__299108 = " (";
var G__299109 = (function (){var G__299175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299176 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299175,G__299176) : tailrecursion.hoplon.span.call(null,G__299175,G__299176));
})();
var G__299110 = " (";
var G__299111 = (function (){var G__299177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299178 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299177,G__299178) : tailrecursion.hoplon.span.call(null,G__299177,G__299178));
})();
var G__299112 = " ";
var G__299113 = (function (){var G__299179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__299180 = "\"Something went wrong with element-of-set?\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299179,G__299180) : tailrecursion.hoplon.span.call(null,G__299179,G__299180));
})();
var G__299114 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$64 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$64(G__299051,G__299052,G__299053,G__299054,G__299055,G__299056,G__299057,G__299058,G__299059,G__299060,G__299061,G__299062,G__299063,G__299064,G__299065,G__299066,G__299067,G__299068,G__299069,G__299070,G__299071,G__299072,G__299073,G__299074,G__299075,G__299076,G__299077,G__299078,G__299079,G__299080,G__299081,G__299082,G__299083,G__299084,G__299085,G__299086,G__299087,G__299088,G__299089,G__299090,G__299091,G__299092,G__299093,G__299094,G__299095,G__299096,G__299097,G__299098,G__299099,G__299100,G__299101,G__299102,G__299103,G__299104,G__299105,G__299106,G__299107,G__299108,G__299109,G__299110,G__299111,G__299112,G__299113,G__299114) : tailrecursion.hoplon.pre.call(null,G__299051,G__299052,G__299053,G__299054,G__299055,G__299056,G__299057,G__299058,G__299059,G__299060,G__299061,G__299062,G__299063,G__299064,G__299065,G__299066,G__299067,G__299068,G__299069,G__299070,G__299071,G__299072,G__299073,G__299074,G__299075,G__299076,G__299077,G__299078,G__299079,G__299080,G__299081,G__299082,G__299083,G__299084,G__299085,G__299086,G__299087,G__299088,G__299089,G__299090,G__299091,G__299092,G__299093,G__299094,G__299095,G__299096,G__299097,G__299098,G__299099,G__299100,G__299101,G__299102,G__299103,G__299104,G__299105,G__299106,G__299107,G__299108,G__299109,G__299110,G__299111,G__299112,G__299113,G__299114));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__299049,G__299050) : tailrecursion.hoplon.div.call(null,G__299049,G__299050));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__299048) : tailrecursion.hoplon.div.call(null,G__299048));
})(),(function (){var G__299181 = cljs.core.PersistentArrayMap.EMPTY;
var G__299182 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["But since this involves recursion, we should try to formulate this using ",(function (){var G__299183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"loop"], null);
var G__299184 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299183,G__299184) : tailrecursion.hoplon.markdown.code_node.call(null,G__299183,G__299184));
})()," and ",(function (){var G__299185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"recur"], null);
var G__299186 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299185,G__299186) : tailrecursion.hoplon.markdown.code_node.call(null,G__299185,G__299186));
})()," as follows:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299181,G__299182) : tailrecursion.hoplon.markdown.para_node.call(null,G__299181,G__299182));
})(),(function (){var G__299331 = (function (){var G__299332 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__299333 = (function (){var G__299334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__299335 = "(";
var G__299336 = (function (){var G__299404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__299405 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299404,G__299405) : tailrecursion.hoplon.span.call(null,G__299404,G__299405));
})();
var G__299337 = (function (){var G__299406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299407 = "element-of-set?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299406,G__299407) : tailrecursion.hoplon.span.call(null,G__299406,G__299407));
})();
var G__299338 = " [";
var G__299339 = (function (){var G__299408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299409 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299408,G__299409) : tailrecursion.hoplon.span.call(null,G__299408,G__299409));
})();
var G__299340 = " ";
var G__299341 = (function (){var G__299410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299411 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299410,G__299411) : tailrecursion.hoplon.span.call(null,G__299410,G__299411));
})();
var G__299342 = "]\n  (";
var G__299343 = (function (){var G__299412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__299413 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299412,G__299413) : tailrecursion.hoplon.span.call(null,G__299412,G__299413));
})();
var G__299344 = "[";
var G__299345 = (function (){var G__299414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299415 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299414,G__299415) : tailrecursion.hoplon.span.call(null,G__299414,G__299415));
})();
var G__299346 = " ";
var G__299347 = (function (){var G__299416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299417 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299416,G__299417) : tailrecursion.hoplon.span.call(null,G__299416,G__299417));
})();
var G__299348 = "]\n    (";
var G__299349 = (function (){var G__299418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299419 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299418,G__299419) : tailrecursion.hoplon.span.call(null,G__299418,G__299419));
})();
var G__299350 = "(";
var G__299351 = (function (){var G__299420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299421 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299420,G__299421) : tailrecursion.hoplon.span.call(null,G__299420,G__299421));
})();
var G__299352 = " ";
var G__299353 = (function (){var G__299422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299423 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299422,G__299423) : tailrecursion.hoplon.span.call(null,G__299422,G__299423));
})();
var G__299354 = ") ";
var G__299355 = (function (){var G__299424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299425 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299424,G__299425) : tailrecursion.hoplon.span.call(null,G__299424,G__299425));
})();
var G__299356 = "\n          (";
var G__299357 = (function (){var G__299426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299427 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299426,G__299427) : tailrecursion.hoplon.span.call(null,G__299426,G__299427));
})();
var G__299358 = (function (){var G__299428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299429 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299428,G__299429) : tailrecursion.hoplon.span.call(null,G__299428,G__299429));
})();
var G__299359 = " (";
var G__299360 = (function (){var G__299430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299431 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299430,G__299431) : tailrecursion.hoplon.span.call(null,G__299430,G__299431));
})();
var G__299361 = " ";
var G__299362 = (function (){var G__299432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299433 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299432,G__299433) : tailrecursion.hoplon.span.call(null,G__299432,G__299433));
})();
var G__299363 = ")) ";
var G__299364 = (function (){var G__299434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299435 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299434,G__299435) : tailrecursion.hoplon.span.call(null,G__299434,G__299435));
})();
var G__299365 = "\n          (";
var G__299366 = (function (){var G__299436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299437 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299436,G__299437) : tailrecursion.hoplon.span.call(null,G__299436,G__299437));
})();
var G__299367 = (function (){var G__299438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299439 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299438,G__299439) : tailrecursion.hoplon.span.call(null,G__299438,G__299439));
})();
var G__299368 = " (";
var G__299369 = (function (){var G__299440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299441 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299440,G__299441) : tailrecursion.hoplon.span.call(null,G__299440,G__299441));
})();
var G__299370 = " ";
var G__299371 = (function (){var G__299442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299443 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299442,G__299443) : tailrecursion.hoplon.span.call(null,G__299442,G__299443));
})();
var G__299372 = ")) (";
var G__299373 = (function (){var G__299444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299445 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299444,G__299445) : tailrecursion.hoplon.span.call(null,G__299444,G__299445));
})();
var G__299374 = " ";
var G__299375 = (function (){var G__299446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299447 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299446,G__299447) : tailrecursion.hoplon.span.call(null,G__299446,G__299447));
})();
var G__299376 = " (";
var G__299377 = (function (){var G__299448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299449 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299448,G__299449) : tailrecursion.hoplon.span.call(null,G__299448,G__299449));
})();
var G__299378 = " ";
var G__299379 = (function (){var G__299450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299451 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299450,G__299451) : tailrecursion.hoplon.span.call(null,G__299450,G__299451));
})();
var G__299380 = "))\n          (";
var G__299381 = (function (){var G__299452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299453 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299452,G__299453) : tailrecursion.hoplon.span.call(null,G__299452,G__299453));
})();
var G__299382 = (function (){var G__299454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299455 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299454,G__299455) : tailrecursion.hoplon.span.call(null,G__299454,G__299455));
})();
var G__299383 = " (";
var G__299384 = (function (){var G__299456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299457 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299456,G__299457) : tailrecursion.hoplon.span.call(null,G__299456,G__299457));
})();
var G__299385 = " ";
var G__299386 = (function (){var G__299458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299459 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299458,G__299459) : tailrecursion.hoplon.span.call(null,G__299458,G__299459));
})();
var G__299387 = ")) (";
var G__299388 = (function (){var G__299460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299461 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299460,G__299461) : tailrecursion.hoplon.span.call(null,G__299460,G__299461));
})();
var G__299389 = " ";
var G__299390 = (function (){var G__299462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299463 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299462,G__299463) : tailrecursion.hoplon.span.call(null,G__299462,G__299463));
})();
var G__299391 = " (";
var G__299392 = (function (){var G__299464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299465 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299464,G__299465) : tailrecursion.hoplon.span.call(null,G__299464,G__299465));
})();
var G__299393 = " ";
var G__299394 = (function (){var G__299466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299467 = "things";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299466,G__299467) : tailrecursion.hoplon.span.call(null,G__299466,G__299467));
})();
var G__299395 = "))\n          ";
var G__299396 = (function (){var G__299468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299469 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299468,G__299469) : tailrecursion.hoplon.span.call(null,G__299468,G__299469));
})();
var G__299397 = " (";
var G__299398 = (function (){var G__299470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299471 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299470,G__299471) : tailrecursion.hoplon.span.call(null,G__299470,G__299471));
})();
var G__299399 = " (";
var G__299400 = (function (){var G__299472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299473 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299472,G__299473) : tailrecursion.hoplon.span.call(null,G__299472,G__299473));
})();
var G__299401 = " ";
var G__299402 = (function (){var G__299474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__299475 = "\"Something went wrong with element-of-set?\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299474,G__299475) : tailrecursion.hoplon.span.call(null,G__299474,G__299475));
})();
var G__299403 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$70 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$70(G__299334,G__299335,G__299336,G__299337,G__299338,G__299339,G__299340,G__299341,G__299342,G__299343,G__299344,G__299345,G__299346,G__299347,G__299348,G__299349,G__299350,G__299351,G__299352,G__299353,G__299354,G__299355,G__299356,G__299357,G__299358,G__299359,G__299360,G__299361,G__299362,G__299363,G__299364,G__299365,G__299366,G__299367,G__299368,G__299369,G__299370,G__299371,G__299372,G__299373,G__299374,G__299375,G__299376,G__299377,G__299378,G__299379,G__299380,G__299381,G__299382,G__299383,G__299384,G__299385,G__299386,G__299387,G__299388,G__299389,G__299390,G__299391,G__299392,G__299393,G__299394,G__299395,G__299396,G__299397,G__299398,G__299399,G__299400,G__299401,G__299402,G__299403) : tailrecursion.hoplon.pre.call(null,G__299334,G__299335,G__299336,G__299337,G__299338,G__299339,G__299340,G__299341,G__299342,G__299343,G__299344,G__299345,G__299346,G__299347,G__299348,G__299349,G__299350,G__299351,G__299352,G__299353,G__299354,G__299355,G__299356,G__299357,G__299358,G__299359,G__299360,G__299361,G__299362,G__299363,G__299364,G__299365,G__299366,G__299367,G__299368,G__299369,G__299370,G__299371,G__299372,G__299373,G__299374,G__299375,G__299376,G__299377,G__299378,G__299379,G__299380,G__299381,G__299382,G__299383,G__299384,G__299385,G__299386,G__299387,G__299388,G__299389,G__299390,G__299391,G__299392,G__299393,G__299394,G__299395,G__299396,G__299397,G__299398,G__299399,G__299400,G__299401,G__299402,G__299403));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__299332,G__299333) : tailrecursion.hoplon.div.call(null,G__299332,G__299333));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__299331) : tailrecursion.hoplon.div.call(null,G__299331));
})(),(function (){var G__299476 = cljs.core.PersistentArrayMap.EMPTY;
var G__299477 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Adjoining an item to a set is implemented similarly and also requires \\(\\Theta(\\log n)\\) steps. To adjoin an item \\(x\\), we compare \\(x\\) with the node entry to determine whether \\(x\\) should be added to the right or to the left branch, and having adjoined \\(x\\) to the appropriate branch we piece this newly constructed branch together with the original entry and the other branch. If \\(x\\) is equal to the entry, we just return the node. If we are asked to adjoin \\(x\\) to an empty tree, we generate a tree that has \\(x\\) as the entry and empty right and left branches. Here is the procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299476,G__299477) : tailrecursion.hoplon.markdown.para_node.call(null,G__299476,G__299477));
})(),(function (){var G__299662 = (function (){var G__299663 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__299664 = (function (){var G__299665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__299666 = "(";
var G__299667 = (function (){var G__299755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__299756 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299755,G__299756) : tailrecursion.hoplon.span.call(null,G__299755,G__299756));
})();
var G__299668 = (function (){var G__299757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299758 = "adjoin-set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299757,G__299758) : tailrecursion.hoplon.span.call(null,G__299757,G__299758));
})();
var G__299669 = " [";
var G__299670 = (function (){var G__299759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299760 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299759,G__299760) : tailrecursion.hoplon.span.call(null,G__299759,G__299760));
})();
var G__299671 = " ";
var G__299672 = (function (){var G__299761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299762 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299761,G__299762) : tailrecursion.hoplon.span.call(null,G__299761,G__299762));
})();
var G__299673 = "]\n  (";
var G__299674 = (function (){var G__299763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299764 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299763,G__299764) : tailrecursion.hoplon.span.call(null,G__299763,G__299764));
})();
var G__299675 = "(";
var G__299676 = (function (){var G__299765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299766 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299765,G__299766) : tailrecursion.hoplon.span.call(null,G__299765,G__299766));
})();
var G__299677 = " ";
var G__299678 = (function (){var G__299767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299768 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299767,G__299768) : tailrecursion.hoplon.span.call(null,G__299767,G__299768));
})();
var G__299679 = ") (";
var G__299680 = (function (){var G__299769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299770 = "make-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299769,G__299770) : tailrecursion.hoplon.span.call(null,G__299769,G__299770));
})();
var G__299681 = " ";
var G__299682 = (function (){var G__299771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299772 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299771,G__299772) : tailrecursion.hoplon.span.call(null,G__299771,G__299772));
})();
var G__299683 = " ";
var G__299684 = (function (){var G__299773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__299774 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299773,G__299774) : tailrecursion.hoplon.span.call(null,G__299773,G__299774));
})();
var G__299685 = "() ";
var G__299686 = (function (){var G__299775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__299776 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299775,G__299776) : tailrecursion.hoplon.span.call(null,G__299775,G__299776));
})();
var G__299687 = "())\n        (";
var G__299688 = (function (){var G__299777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299778 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299777,G__299778) : tailrecursion.hoplon.span.call(null,G__299777,G__299778));
})();
var G__299689 = (function (){var G__299779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299780 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299779,G__299780) : tailrecursion.hoplon.span.call(null,G__299779,G__299780));
})();
var G__299690 = " (";
var G__299691 = (function (){var G__299781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299782 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299781,G__299782) : tailrecursion.hoplon.span.call(null,G__299781,G__299782));
})();
var G__299692 = " ";
var G__299693 = (function (){var G__299783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299784 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299783,G__299784) : tailrecursion.hoplon.span.call(null,G__299783,G__299784));
})();
var G__299694 = ")) ";
var G__299695 = (function (){var G__299785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299786 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299785,G__299786) : tailrecursion.hoplon.span.call(null,G__299785,G__299786));
})();
var G__299696 = "\n        (";
var G__299697 = (function (){var G__299787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299788 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299787,G__299788) : tailrecursion.hoplon.span.call(null,G__299787,G__299788));
})();
var G__299698 = (function (){var G__299789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299790 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299789,G__299790) : tailrecursion.hoplon.span.call(null,G__299789,G__299790));
})();
var G__299699 = " (";
var G__299700 = (function (){var G__299791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299792 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299791,G__299792) : tailrecursion.hoplon.span.call(null,G__299791,G__299792));
})();
var G__299701 = " ";
var G__299702 = (function (){var G__299793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299794 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299793,G__299794) : tailrecursion.hoplon.span.call(null,G__299793,G__299794));
})();
var G__299703 = ")) (";
var G__299704 = (function (){var G__299795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299796 = "make-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299795,G__299796) : tailrecursion.hoplon.span.call(null,G__299795,G__299796));
})();
var G__299705 = " (";
var G__299706 = (function (){var G__299797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299798 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299797,G__299798) : tailrecursion.hoplon.span.call(null,G__299797,G__299798));
})();
var G__299707 = " ";
var G__299708 = (function (){var G__299799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299800 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299799,G__299800) : tailrecursion.hoplon.span.call(null,G__299799,G__299800));
})();
var G__299709 = ")\n                                     (";
var G__299710 = (function (){var G__299801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299802 = "adjoin";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299801,G__299802) : tailrecursion.hoplon.span.call(null,G__299801,G__299802));
})();
var G__299711 = " ";
var G__299712 = (function (){var G__299803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299804 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299803,G__299804) : tailrecursion.hoplon.span.call(null,G__299803,G__299804));
})();
var G__299713 = " (";
var G__299714 = (function (){var G__299805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299806 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299805,G__299806) : tailrecursion.hoplon.span.call(null,G__299805,G__299806));
})();
var G__299715 = " ";
var G__299716 = (function (){var G__299807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299808 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299807,G__299808) : tailrecursion.hoplon.span.call(null,G__299807,G__299808));
})();
var G__299717 = "))\n                                     (";
var G__299718 = (function (){var G__299809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299810 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299809,G__299810) : tailrecursion.hoplon.span.call(null,G__299809,G__299810));
})();
var G__299719 = " ";
var G__299720 = (function (){var G__299811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299812 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299811,G__299812) : tailrecursion.hoplon.span.call(null,G__299811,G__299812));
})();
var G__299721 = "))\n        (";
var G__299722 = (function (){var G__299813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299814 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299813,G__299814) : tailrecursion.hoplon.span.call(null,G__299813,G__299814));
})();
var G__299723 = (function (){var G__299815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299816 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299815,G__299816) : tailrecursion.hoplon.span.call(null,G__299815,G__299816));
})();
var G__299724 = " (";
var G__299725 = (function (){var G__299817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299818 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299817,G__299818) : tailrecursion.hoplon.span.call(null,G__299817,G__299818));
})();
var G__299726 = " ";
var G__299727 = (function (){var G__299819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299820 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299819,G__299820) : tailrecursion.hoplon.span.call(null,G__299819,G__299820));
})();
var G__299728 = ")) (";
var G__299729 = (function (){var G__299821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299822 = "make-tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299821,G__299822) : tailrecursion.hoplon.span.call(null,G__299821,G__299822));
})();
var G__299730 = " (";
var G__299731 = (function (){var G__299823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299824 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299823,G__299824) : tailrecursion.hoplon.span.call(null,G__299823,G__299824));
})();
var G__299732 = " ";
var G__299733 = (function (){var G__299825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299826 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299825,G__299826) : tailrecursion.hoplon.span.call(null,G__299825,G__299826));
})();
var G__299734 = ")\n                                     (";
var G__299735 = (function (){var G__299827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299828 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299827,G__299828) : tailrecursion.hoplon.span.call(null,G__299827,G__299828));
})();
var G__299736 = " ";
var G__299737 = (function (){var G__299829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299830 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299829,G__299830) : tailrecursion.hoplon.span.call(null,G__299829,G__299830));
})();
var G__299738 = ")\n                                     (";
var G__299739 = (function (){var G__299831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299832 = "adjoin";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299831,G__299832) : tailrecursion.hoplon.span.call(null,G__299831,G__299832));
})();
var G__299740 = " ";
var G__299741 = (function (){var G__299833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299834 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299833,G__299834) : tailrecursion.hoplon.span.call(null,G__299833,G__299834));
})();
var G__299742 = " (";
var G__299743 = (function (){var G__299835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299836 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299835,G__299836) : tailrecursion.hoplon.span.call(null,G__299835,G__299836));
})();
var G__299744 = " ";
var G__299745 = (function (){var G__299837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299838 = "set";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299837,G__299838) : tailrecursion.hoplon.span.call(null,G__299837,G__299838));
})();
var G__299746 = ")))\n        ";
var G__299747 = (function (){var G__299839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299840 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299839,G__299840) : tailrecursion.hoplon.span.call(null,G__299839,G__299840));
})();
var G__299748 = " (";
var G__299749 = (function (){var G__299841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299842 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299841,G__299842) : tailrecursion.hoplon.span.call(null,G__299841,G__299842));
})();
var G__299750 = " (";
var G__299751 = (function (){var G__299843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299844 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299843,G__299844) : tailrecursion.hoplon.span.call(null,G__299843,G__299844));
})();
var G__299752 = " ";
var G__299753 = (function (){var G__299845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__299846 = "\"Something went wrong with adjoin-set\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299845,G__299846) : tailrecursion.hoplon.span.call(null,G__299845,G__299846));
})();
var G__299754 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$90 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$90(G__299665,G__299666,G__299667,G__299668,G__299669,G__299670,G__299671,G__299672,G__299673,G__299674,G__299675,G__299676,G__299677,G__299678,G__299679,G__299680,G__299681,G__299682,G__299683,G__299684,G__299685,G__299686,G__299687,G__299688,G__299689,G__299690,G__299691,G__299692,G__299693,G__299694,G__299695,G__299696,G__299697,G__299698,G__299699,G__299700,G__299701,G__299702,G__299703,G__299704,G__299705,G__299706,G__299707,G__299708,G__299709,G__299710,G__299711,G__299712,G__299713,G__299714,G__299715,G__299716,G__299717,G__299718,G__299719,G__299720,G__299721,G__299722,G__299723,G__299724,G__299725,G__299726,G__299727,G__299728,G__299729,G__299730,G__299731,G__299732,G__299733,G__299734,G__299735,G__299736,G__299737,G__299738,G__299739,G__299740,G__299741,G__299742,G__299743,G__299744,G__299745,G__299746,G__299747,G__299748,G__299749,G__299750,G__299751,G__299752,G__299753,G__299754) : tailrecursion.hoplon.pre.call(null,G__299665,G__299666,G__299667,G__299668,G__299669,G__299670,G__299671,G__299672,G__299673,G__299674,G__299675,G__299676,G__299677,G__299678,G__299679,G__299680,G__299681,G__299682,G__299683,G__299684,G__299685,G__299686,G__299687,G__299688,G__299689,G__299690,G__299691,G__299692,G__299693,G__299694,G__299695,G__299696,G__299697,G__299698,G__299699,G__299700,G__299701,G__299702,G__299703,G__299704,G__299705,G__299706,G__299707,G__299708,G__299709,G__299710,G__299711,G__299712,G__299713,G__299714,G__299715,G__299716,G__299717,G__299718,G__299719,G__299720,G__299721,G__299722,G__299723,G__299724,G__299725,G__299726,G__299727,G__299728,G__299729,G__299730,G__299731,G__299732,G__299733,G__299734,G__299735,G__299736,G__299737,G__299738,G__299739,G__299740,G__299741,G__299742,G__299743,G__299744,G__299745,G__299746,G__299747,G__299748,G__299749,G__299750,G__299751,G__299752,G__299753,G__299754));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__299663,G__299664) : tailrecursion.hoplon.div.call(null,G__299663,G__299664));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__299662) : tailrecursion.hoplon.div.call(null,G__299662));
})(),(function (){var G__299847 = cljs.core.PersistentArrayMap.EMPTY;
var G__299848 = new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The above claim that searching the tree can be performed in a logarithmic number of steps rests on the assumption that the tree is ",(function (){var G__299849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299850 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["balanced,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299849,G__299850) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299849,G__299850));
})()," i.e., that the left and right subtree of every tree have approximately the same number of elements, so that each subtree contains about half the elements of its parent. But how can we be certain that the trees we construct will be balanced? Even if we start with a balanced tree, adding elements with ",(function (){var G__299851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__299852 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299851,G__299852) : tailrecursion.hoplon.markdown.code_node.call(null,G__299851,G__299852));
})()," may produce an unbalanced result. Since the position of a newly adjoined element depends on how the element compares with the items already in the set, we can expect that if we add elements ",(function (){var G__299853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299854 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["randomly"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299853,G__299854) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299853,G__299854));
})()," the tree will tend to be balanced on the average (note: in this example, the top level might not be balanced, but as we add more and more elements in this ",(function (){var G__299855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299856 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["random"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299855,G__299856) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299855,G__299856));
})()," fashion, we can safely assume that on the average, each level approximately halves the number of elements, even if it",(function (){var G__299857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__299858 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__299857,G__299858) : tailrecursion.hoplon.markdown.simple_node.call(null,G__299857,G__299858));
})(),"s not true for the first level in particular). But this is not a guarantee. For example, if we start with an ampty set and adjoin the numbers 1 through 7 in a sequence we end up with the highly unbalanced tree shown in figure 2.17. In this tree all the left subtrees are empty, so it has no advantage over a simple ordered list. One way to solve this problem is to define an operation that transforms an arbitrary tree into a balanced tree with the same elements. Then we can perform this transformation after every few ",(function (){var G__299859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"adjoin-set"], null);
var G__299860 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299859,G__299860) : tailrecursion.hoplon.markdown.code_node.call(null,G__299859,G__299860));
})()," operations to keep our set in balance. There are also other ways to solve this problem, most of which involve designing new data structures for which searching and insertion both can be done in \\(\\Theta(\\log n)\\) setps.",(function (){var G__299861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__299862 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Examples of such structures include ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["B-trees"], null)], 0))," and ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["red-black trees"], null)], 0)),". There is a large literature on data structures devoted to this problem. See Cormen, Leiserson, and Rivest 1990."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299861,G__299862) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299861,G__299862));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299847,G__299848) : tailrecursion.hoplon.markdown.para_node.call(null,G__299847,G__299848));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_298708;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_298707;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_298706;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_298705;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"Unbalanced tree produced by adjoining 1 through 7 in sequence."], null)], 0))], 0));
var G__288712 = "";
var G__288713 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_299863 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_299864 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_299865 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_299866 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__299867 = cljs.core.PersistentArrayMap.EMPTY;
var G__299868 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Each of the following two procedures converts a binary tree to a list."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299867,G__299868) : tailrecursion.hoplon.markdown.para_node.call(null,G__299867,G__299868));
})(),(function (){var G__300039 = (function (){var G__300040 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__300041 = (function (){var G__300042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__300043 = "(";
var G__300044 = (function (){var G__300126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300127 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300126,G__300127) : tailrecursion.hoplon.span.call(null,G__300126,G__300127));
})();
var G__300045 = (function (){var G__300128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300129 = "tree->list-1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300128,G__300129) : tailrecursion.hoplon.span.call(null,G__300128,G__300129));
})();
var G__300046 = " [";
var G__300047 = (function (){var G__300130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300131 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300130,G__300131) : tailrecursion.hoplon.span.call(null,G__300130,G__300131));
})();
var G__300048 = "]\n  (";
var G__300049 = (function (){var G__300132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300133 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300132,G__300133) : tailrecursion.hoplon.span.call(null,G__300132,G__300133));
})();
var G__300050 = "(";
var G__300051 = (function (){var G__300134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300135 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300134,G__300135) : tailrecursion.hoplon.span.call(null,G__300134,G__300135));
})();
var G__300052 = " ";
var G__300053 = (function (){var G__300136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300137 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300136,G__300137) : tailrecursion.hoplon.span.call(null,G__300136,G__300137));
})();
var G__300054 = ")\n      ";
var G__300055 = (function (){var G__300138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__300139 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300138,G__300139) : tailrecursion.hoplon.span.call(null,G__300138,G__300139));
})();
var G__300056 = "()\n      (";
var G__300057 = (function (){var G__300140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300141 = "concat ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300140,G__300141) : tailrecursion.hoplon.span.call(null,G__300140,G__300141));
})();
var G__300058 = "(";
var G__300059 = (function (){var G__300142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300143 = "tree->list-1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300142,G__300143) : tailrecursion.hoplon.span.call(null,G__300142,G__300143));
})();
var G__300060 = " (";
var G__300061 = (function (){var G__300144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300145 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300144,G__300145) : tailrecursion.hoplon.span.call(null,G__300144,G__300145));
})();
var G__300062 = " ";
var G__300063 = (function (){var G__300146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300147 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300146,G__300147) : tailrecursion.hoplon.span.call(null,G__300146,G__300147));
})();
var G__300064 = "))\n              (";
var G__300065 = (function (){var G__300148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300149 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300148,G__300149) : tailrecursion.hoplon.span.call(null,G__300148,G__300149));
})();
var G__300066 = "(";
var G__300067 = (function (){var G__300150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300151 = "tree->list-1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300150,G__300151) : tailrecursion.hoplon.span.call(null,G__300150,G__300151));
})();
var G__300068 = " (";
var G__300069 = (function (){var G__300152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300153 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300152,G__300153) : tailrecursion.hoplon.span.call(null,G__300152,G__300153));
})();
var G__300070 = " ";
var G__300071 = (function (){var G__300154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300155 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300154,G__300155) : tailrecursion.hoplon.span.call(null,G__300154,G__300155));
})();
var G__300072 = "))\n                    (";
var G__300073 = (function (){var G__300156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300157 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300156,G__300157) : tailrecursion.hoplon.span.call(null,G__300156,G__300157));
})();
var G__300074 = " ";
var G__300075 = (function (){var G__300158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300159 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300158,G__300159) : tailrecursion.hoplon.span.call(null,G__300158,G__300159));
})();
var G__300076 = ")))))\n\n(";
var G__300077 = (function (){var G__300160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300161 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300160,G__300161) : tailrecursion.hoplon.span.call(null,G__300160,G__300161));
})();
var G__300078 = (function (){var G__300162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300163 = "tree->list-2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300162,G__300163) : tailrecursion.hoplon.span.call(null,G__300162,G__300163));
})();
var G__300079 = " [";
var G__300080 = (function (){var G__300164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300165 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300164,G__300165) : tailrecursion.hoplon.span.call(null,G__300164,G__300165));
})();
var G__300081 = "]\n  (";
var G__300082 = (function (){var G__300166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300167 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300166,G__300167) : tailrecursion.hoplon.span.call(null,G__300166,G__300167));
})();
var G__300083 = "[";
var G__300084 = (function (){var G__300168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300169 = "copy-to-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300168,G__300169) : tailrecursion.hoplon.span.call(null,G__300168,G__300169));
})();
var G__300085 = " (";
var G__300086 = (function (){var G__300170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300171 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300170,G__300171) : tailrecursion.hoplon.span.call(null,G__300170,G__300171));
})();
var G__300087 = "[";
var G__300088 = (function (){var G__300172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300173 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300172,G__300173) : tailrecursion.hoplon.span.call(null,G__300172,G__300173));
})();
var G__300089 = " ";
var G__300090 = (function (){var G__300174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300175 = "result-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300174,G__300175) : tailrecursion.hoplon.span.call(null,G__300174,G__300175));
})();
var G__300091 = "]\n                       (";
var G__300092 = (function (){var G__300176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300177 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300176,G__300177) : tailrecursion.hoplon.span.call(null,G__300176,G__300177));
})();
var G__300093 = "(";
var G__300094 = (function (){var G__300178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300179 = "empty?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300178,G__300179) : tailrecursion.hoplon.span.call(null,G__300178,G__300179));
})();
var G__300095 = " ";
var G__300096 = (function (){var G__300180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300181 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300180,G__300181) : tailrecursion.hoplon.span.call(null,G__300180,G__300181));
})();
var G__300097 = ")\n                           ";
var G__300098 = (function (){var G__300182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300183 = "result-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300182,G__300183) : tailrecursion.hoplon.span.call(null,G__300182,G__300183));
})();
var G__300099 = "\n                           (";
var G__300100 = (function (){var G__300184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300185 = "copy-to-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300184,G__300185) : tailrecursion.hoplon.span.call(null,G__300184,G__300185));
})();
var G__300101 = " (";
var G__300102 = (function (){var G__300186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300187 = "left-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300186,G__300187) : tailrecursion.hoplon.span.call(null,G__300186,G__300187));
})();
var G__300103 = " ";
var G__300104 = (function (){var G__300188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300189 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300188,G__300189) : tailrecursion.hoplon.span.call(null,G__300188,G__300189));
})();
var G__300105 = ")\n                                         (";
var G__300106 = (function (){var G__300190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300191 = "conj ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300190,G__300191) : tailrecursion.hoplon.span.call(null,G__300190,G__300191));
})();
var G__300107 = "(";
var G__300108 = (function (){var G__300192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300193 = "copy-to-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300192,G__300193) : tailrecursion.hoplon.span.call(null,G__300192,G__300193));
})();
var G__300109 = " \n                                                 (";
var G__300110 = (function (){var G__300194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300195 = "right-branch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300194,G__300195) : tailrecursion.hoplon.span.call(null,G__300194,G__300195));
})();
var G__300111 = " ";
var G__300112 = (function (){var G__300196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300197 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300196,G__300197) : tailrecursion.hoplon.span.call(null,G__300196,G__300197));
})();
var G__300113 = ")\n                                                 ";
var G__300114 = (function (){var G__300198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300199 = "result-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300198,G__300199) : tailrecursion.hoplon.span.call(null,G__300198,G__300199));
})();
var G__300115 = ")\n                                               (";
var G__300116 = (function (){var G__300200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300201 = "entry";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300200,G__300201) : tailrecursion.hoplon.span.call(null,G__300200,G__300201));
})();
var G__300117 = " ";
var G__300118 = (function (){var G__300202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300203 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300202,G__300203) : tailrecursion.hoplon.span.call(null,G__300202,G__300203));
})();
var G__300119 = ")))))]\n    (";
var G__300120 = (function (){var G__300204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300205 = "copy-to-list";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300204,G__300205) : tailrecursion.hoplon.span.call(null,G__300204,G__300205));
})();
var G__300121 = " ";
var G__300122 = (function (){var G__300206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300207 = "tree";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300206,G__300207) : tailrecursion.hoplon.span.call(null,G__300206,G__300207));
})();
var G__300123 = " ";
var G__300124 = (function (){var G__300208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__300209 = "'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300208,G__300209) : tailrecursion.hoplon.span.call(null,G__300208,G__300209));
})();
var G__300125 = "())))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$84 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$84(G__300042,G__300043,G__300044,G__300045,G__300046,G__300047,G__300048,G__300049,G__300050,G__300051,G__300052,G__300053,G__300054,G__300055,G__300056,G__300057,G__300058,G__300059,G__300060,G__300061,G__300062,G__300063,G__300064,G__300065,G__300066,G__300067,G__300068,G__300069,G__300070,G__300071,G__300072,G__300073,G__300074,G__300075,G__300076,G__300077,G__300078,G__300079,G__300080,G__300081,G__300082,G__300083,G__300084,G__300085,G__300086,G__300087,G__300088,G__300089,G__300090,G__300091,G__300092,G__300093,G__300094,G__300095,G__300096,G__300097,G__300098,G__300099,G__300100,G__300101,G__300102,G__300103,G__300104,G__300105,G__300106,G__300107,G__300108,G__300109,G__300110,G__300111,G__300112,G__300113,G__300114,G__300115,G__300116,G__300117,G__300118,G__300119,G__300120,G__300121,G__300122,G__300123,G__300124,G__300125) : tailrecursion.hoplon.pre.call(null,G__300042,G__300043,G__300044,G__300045,G__300046,G__300047,G__300048,G__300049,G__300050,G__300051,G__300052,G__300053,G__300054,G__300055,G__300056,G__300057,G__300058,G__300059,G__300060,G__300061,G__300062,G__300063,G__300064,G__300065,G__300066,G__300067,G__300068,G__300069,G__300070,G__300071,G__300072,G__300073,G__300074,G__300075,G__300076,G__300077,G__300078,G__300079,G__300080,G__300081,G__300082,G__300083,G__300084,G__300085,G__300086,G__300087,G__300088,G__300089,G__300090,G__300091,G__300092,G__300093,G__300094,G__300095,G__300096,G__300097,G__300098,G__300099,G__300100,G__300101,G__300102,G__300103,G__300104,G__300105,G__300106,G__300107,G__300108,G__300109,G__300110,G__300111,G__300112,G__300113,G__300114,G__300115,G__300116,G__300117,G__300118,G__300119,G__300120,G__300121,G__300122,G__300123,G__300124,G__300125));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__300040,G__300041) : tailrecursion.hoplon.div.call(null,G__300040,G__300041));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__300039) : tailrecursion.hoplon.div.call(null,G__300039));
})(),(function (){var G__300210 = cljs.core.PersistentArrayMap.EMPTY;
var G__300211 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a. Do the two procedures produce the same result for every tree? If not, how do the results differ? What lists do the two procedures produce for the trees in figure 2.16?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300210,G__300211) : tailrecursion.hoplon.markdown.para_node.call(null,G__300210,G__300211));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_299866;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_299865;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_299864;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_299863;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_300212 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_300213 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_300214 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_300215 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__300216 = cljs.core.PersistentArrayMap.EMPTY;
var G__300217 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since both procedures put the ",(function (){var G__300218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"entry"], null);
var G__300219 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300218,G__300219) : tailrecursion.hoplon.markdown.code_node.call(null,G__300218,G__300219));
})()," in the middle of the ",(function (){var G__300220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__300221 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["lesser"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__300220,G__300221) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__300220,G__300221));
})()," elements and the ",(function (){var G__300222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__300223 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["greater"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__300222,G__300223) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__300222,G__300223));
})()," elements, we can be guaranteed that the elements of the tree will show up in the same order. It is for that reason we also know that each of the trees in figure 2.16 will give the same list with both procedures. Each of them turns this sort of tree into an ordered list, so the trees from figure 2.16 would turn into,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300216,G__300217) : tailrecursion.hoplon.markdown.para_node.call(null,G__300216,G__300217));
})(),(function (){var G__300255 = (function (){var G__300256 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__300257 = (function (){var G__300258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__300259 = (function (){var G__300273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300274 = "=>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300273,G__300274) : tailrecursion.hoplon.span.call(null,G__300273,G__300274));
})();
var G__300260 = " (";
var G__300261 = (function (){var G__300275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__300276 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300275,G__300276) : tailrecursion.hoplon.span.call(null,G__300275,G__300276));
})();
var G__300262 = " ";
var G__300263 = (function (){var G__300277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__300278 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300277,G__300278) : tailrecursion.hoplon.span.call(null,G__300277,G__300278));
})();
var G__300264 = " ";
var G__300265 = (function (){var G__300279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__300280 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300279,G__300280) : tailrecursion.hoplon.span.call(null,G__300279,G__300280));
})();
var G__300266 = " ";
var G__300267 = (function (){var G__300281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__300282 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300281,G__300282) : tailrecursion.hoplon.span.call(null,G__300281,G__300282));
})();
var G__300268 = " ";
var G__300269 = (function (){var G__300283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__300284 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300283,G__300284) : tailrecursion.hoplon.span.call(null,G__300283,G__300284));
})();
var G__300270 = " ";
var G__300271 = (function (){var G__300285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__300286 = "11";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300285,G__300286) : tailrecursion.hoplon.span.call(null,G__300285,G__300286));
})();
var G__300272 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$15 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$15(G__300258,G__300259,G__300260,G__300261,G__300262,G__300263,G__300264,G__300265,G__300266,G__300267,G__300268,G__300269,G__300270,G__300271,G__300272) : tailrecursion.hoplon.pre.call(null,G__300258,G__300259,G__300260,G__300261,G__300262,G__300263,G__300264,G__300265,G__300266,G__300267,G__300268,G__300269,G__300270,G__300271,G__300272));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__300256,G__300257) : tailrecursion.hoplon.div.call(null,G__300256,G__300257));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__300255) : tailrecursion.hoplon.div.call(null,G__300255));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_300215;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_300214;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_300213;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_300212;
}})()], 0)),"",(function (){var _STAR_references_STAR_300287 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_300288 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_300289 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_300290 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__300291 = cljs.core.PersistentArrayMap.EMPTY;
var G__300292 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b. Do the two procedures have the same order of growth in the number of steps required to convert a balanced tree with \\(n\\) elements to a list? If not, which one grows more slowly?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300291,G__300292) : tailrecursion.hoplon.markdown.para_node.call(null,G__300291,G__300292));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_300290;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_300289;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_300288;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_300287;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_300293 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_300294 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_300295 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_300296 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__300297 = cljs.core.PersistentArrayMap.EMPTY;
var G__300298 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since the ",(function (){var G__300299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"concat"], null);
var G__300300 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300299,G__300300) : tailrecursion.hoplon.markdown.code_node.call(null,G__300299,G__300300));
})()," function is \\(\\Theta(n)\\) in terms of steps required and the length of the first list (the prepending one), we can see that ",(function (){var G__300301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"tree->list-1"], null);
var G__300302 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300301,G__300302) : tailrecursion.hoplon.markdown.code_node.call(null,G__300301,G__300302));
})()," is going to take more steps than ",(function (){var G__300303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"tree->list-2"], null);
var G__300304 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300303,G__300304) : tailrecursion.hoplon.markdown.code_node.call(null,G__300303,G__300304));
})(),". Exactly how many more, we can only estimate (it depends on how balanced the tree is)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300297,G__300298) : tailrecursion.hoplon.markdown.para_node.call(null,G__300297,G__300298));
})(),(function (){var G__300305 = cljs.core.PersistentArrayMap.EMPTY;
var G__300306 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If we assume that the tree is balanced, then every level doubles the number of calls to ",(function (){var G__300307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"concat"], null);
var G__300308 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300307,G__300308) : tailrecursion.hoplon.markdown.code_node.call(null,G__300307,G__300308));
})()," but halves the number of elements in each ",(function (){var G__300309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"concat"], null);
var G__300310 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300309,G__300310) : tailrecursion.hoplon.markdown.code_node.call(null,G__300309,G__300310));
})(),". Hence the number of computations done in an ",(function (){var G__300311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"concat"], null);
var G__300312 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300311,G__300312) : tailrecursion.hoplon.markdown.code_node.call(null,G__300311,G__300312));
})()," procedure remains constant at \\(n\\) (roughly) accross all levels. Since there are approximately \\(\\log n\\) levels, we can conclude that the calls to ",(function (){var G__300313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"concat"], null);
var G__300314 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300313,G__300314) : tailrecursion.hoplon.markdown.code_node.call(null,G__300313,G__300314));
})()," take \\(\\theta(n\\log n)\\) steps. If we are to include the calls to ",(function (){var G__300315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__300316 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300315,G__300316) : tailrecursion.hoplon.markdown.code_node.call(null,G__300315,G__300316));
})()," as well, we find (through similar reasoning), that the total number of steps should be approximately \\(\\Theta(n\\log n+n)=\\Theta(n\\log n)\\) steps."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300305,G__300306) : tailrecursion.hoplon.markdown.para_node.call(null,G__300305,G__300306));
})(),(function (){var G__300317 = cljs.core.PersistentArrayMap.EMPTY;
var G__300318 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The second procedure, ",(function (){var G__300319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"tree->list-2"], null);
var G__300320 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300319,G__300320) : tailrecursion.hoplon.markdown.code_node.call(null,G__300319,G__300320));
})(),", however, uses ",(function (){var G__300321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__300322 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300321,G__300322) : tailrecursion.hoplon.markdown.code_node.call(null,G__300321,G__300322));
})()," which is always constant time \\(\\Theta(1)\\) as the main building block, which really speeds things up for larger trees. As a matter of fact, if we notice that ",(function (){var G__300323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__300324 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300323,G__300324) : tailrecursion.hoplon.markdown.code_node.call(null,G__300323,G__300324));
})()," is called approximately once per element, we find that the number of steps required is approximately \\(\\Theta(n)\\). So, to answer the question, ",(function (){var G__300325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"tree->list-2"], null);
var G__300326 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300325,G__300326) : tailrecursion.hoplon.markdown.code_node.call(null,G__300325,G__300326));
})()," grows more slowly (which is to say it is faster) than ",(function (){var G__300327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"tree->list-1"], null);
var G__300328 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300327,G__300328) : tailrecursion.hoplon.markdown.code_node.call(null,G__300327,G__300328));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300317,G__300318) : tailrecursion.hoplon.markdown.para_node.call(null,G__300317,G__300318));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_300296;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_300295;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_300294;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_300293;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_300329 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_300330 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_300331 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_300332 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__300333 = cljs.core.PersistentArrayMap.EMPTY;
var G__300334 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following procedure ",(function (){var G__300335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list->tree"], null);
var G__300336 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300335,G__300336) : tailrecursion.hoplon.markdown.code_node.call(null,G__300335,G__300336));
})()," converts an ordered list to a balanced binary tree. The helper procedure ",(function (){var G__300337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"partial-tree"], null);
var G__300338 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300337,G__300338) : tailrecursion.hoplon.markdown.code_node.call(null,G__300337,G__300338));
})()," takes as arguments an integer \\(n\\) and list of at least \\(n\\) elements and constructs a balanced tree containing the first \\(n\\) elements of the list. The result returned by ",(function (){var G__300339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"partial-tree"], null);
var G__300340 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300339,G__300340) : tailrecursion.hoplon.markdown.code_node.call(null,G__300339,G__300340));
})()," is a pair (formed with ",(function (){var G__300341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__300342 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300341,G__300342) : tailrecursion.hoplon.markdown.code_node.call(null,G__300341,G__300342));
})(),") whose ",(function (){var G__300343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__300344 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300343,G__300344) : tailrecursion.hoplon.markdown.code_node.call(null,G__300343,G__300344));
})()," is the constructed tree and whose ",(function (){var G__300345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__300346 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300345,G__300346) : tailrecursion.hoplon.markdown.code_node.call(null,G__300345,G__300346));
})()," is the list of elements not included in the tree."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300333,G__300334) : tailrecursion.hoplon.markdown.para_node.call(null,G__300333,G__300334));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_300332;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_300331;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_300330;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_300329;
}})()], 0))], 0));
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$28(G__288686,G__288687,G__288688,G__288689,G__288690,G__288691,G__288692,G__288693,G__288694,G__288695,G__288696,G__288697,G__288698,G__288699,G__288700,G__288701,G__288702,G__288703,G__288704,G__288705,G__288706,G__288707,G__288708,G__288709,G__288710,G__288711,G__288712,G__288713) : tailrecursion.hoplon.div.call(null,G__288686,G__288687,G__288688,G__288689,G__288690,G__288691,G__288692,G__288693,G__288694,G__288695,G__288696,G__288697,G__288698,G__288699,G__288700,G__288701,G__288702,G__288703,G__288704,G__288705,G__288706,G__288707,G__288708,G__288709,G__288710,G__288711,G__288712,G__288713));
};
var book$sicp$texts$ch2sect3$content = function (var_args){
var args__8262__auto__ = null;
if (arguments.length > 0) {
var G__300347__i = 0, G__300347__a = new Array(arguments.length -  0);
while (G__300347__i < G__300347__a.length) {G__300347__a[G__300347__i] = arguments[G__300347__i + 0]; ++G__300347__i;}
  args__8262__auto__ = new cljs.core.IndexedSeq(G__300347__a,0);
} 
return book$sicp$texts$ch2sect3$content__delegate.call(this,args__8262__auto__);};
book$sicp$texts$ch2sect3$content.cljs$lang$maxFixedArity = 0;
book$sicp$texts$ch2sect3$content.cljs$lang$applyTo = (function (arglist__300348){
var args__8262__auto__ = cljs.core.seq(arglist__300348);
return book$sicp$texts$ch2sect3$content__delegate(args__8262__auto__);
});
book$sicp$texts$ch2sect3$content.cljs$core$IFn$_invoke$arity$variadic = book$sicp$texts$ch2sect3$content__delegate;
return book$sicp$texts$ch2sect3$content;
})()
;

// Compiled by ClojureScript 1.7.48 {:static-fns true, :optimize-constants true}
goog.provide('book.sicp.texts.ch2sect4');
goog.require('cljs.core');
goog.require('tailrecursion.hoplon.markdown');
goog.require('book.sicp.book_data');
goog.require('tailrecursion.hoplon');
goog.require('tailrecursion.javelin');
/**
 * @param {...*} var_args
 */
book.sicp.texts.ch2sect4.content = (function() { 
var book$sicp$texts$ch2sect4$content__delegate = function (args__8262__auto__){
var vec__299125 = tailrecursion.hoplon.parse_args(args__8262__auto__);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__299125,(0),null);
var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__299125,(1),null);
var G__299126 = cljs.core.PersistentArrayMap.EMPTY;
var G__299127 = book.sicp.book_data.sect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Multiple Representations for Abstract Data"], null),(function (){var _STAR_references_STAR_299134 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_299135 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_299136 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_299137 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__299138 = cljs.core.PersistentArrayMap.EMPTY;
var G__299139 = new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We have introduced data abstraction, a methodology for structuring systems in such a way that much of a program can be specified independent of the choices involved in implementing the data objects that the program manipulates. For example, we saw in section 2.1.1 how to separate the task of designing a program that uses rational numbers from the task of implementing rational numbers in terms of the computer language",(function (){var G__299140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__299141 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__299140,G__299141) : tailrecursion.hoplon.markdown.simple_node.call(null,G__299140,G__299141));
})(),"s primitive mechanisms for constructing compound data. The key idea was to erect an abstraction barrier ",(function (){var G__299142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__299143 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__299142,G__299143) : tailrecursion.hoplon.markdown.simple_node.call(null,G__299142,G__299143));
})()," in this case, the selectors and constructors for rational numbers (",(function (){var G__299144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__299145 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299144,G__299145) : tailrecursion.hoplon.markdown.code_node.call(null,G__299144,G__299145));
})(),", ",(function (){var G__299146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__299147 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299146,G__299147) : tailrecursion.hoplon.markdown.code_node.call(null,G__299146,G__299147));
})(),", ",(function (){var G__299148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__299149 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299148,G__299149) : tailrecursion.hoplon.markdown.code_node.call(null,G__299148,G__299149));
})(),") ",(function (){var G__299150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__299151 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__299150,G__299151) : tailrecursion.hoplon.markdown.simple_node.call(null,G__299150,G__299151));
})()," that isolates the way rational numbers are used from their underlying representation in terms of list structure. A similar abstraction barrier isolates the details of the procedures that perform rational arithmetic (",(function (){var G__299152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__299153 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299152,G__299153) : tailrecursion.hoplon.markdown.code_node.call(null,G__299152,G__299153));
})(),", ",(function (){var G__299154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-rat"], null);
var G__299155 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299154,G__299155) : tailrecursion.hoplon.markdown.code_node.call(null,G__299154,G__299155));
})(),", ",(function (){var G__299156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mul-rat"], null);
var G__299157 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299156,G__299157) : tailrecursion.hoplon.markdown.code_node.call(null,G__299156,G__299157));
})(),", and ",(function (){var G__299158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"div-rat"], null);
var G__299159 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299158,G__299159) : tailrecursion.hoplon.markdown.code_node.call(null,G__299158,G__299159));
})(),") from the ",(function (){var G__299160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299161 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["higher-level"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299160,G__299161) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299160,G__299161));
})()," procedures that use rational numbers. The resulting program has the structure shown in figure 2.1."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299138,G__299139) : tailrecursion.hoplon.markdown.para_node.call(null,G__299138,G__299139));
})(),(function (){var G__299162 = cljs.core.PersistentArrayMap.EMPTY;
var G__299163 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["These data-abstraction barriers are powerful tools for controlling complexity. By isolating the underlying representations of data objects, we can divide the task of designing a large program into smaller tasks that can be performed separately. But this kind of data abstraction is not yet powerful enough, because it may not always make sense to speak of ",(function (){var G__299164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299165 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the underlying representation"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299164,G__299165) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299164,G__299165));
})()," for a data object."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299162,G__299163) : tailrecursion.hoplon.markdown.para_node.call(null,G__299162,G__299163));
})(),(function (){var G__299166 = cljs.core.PersistentArrayMap.EMPTY;
var G__299167 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For one thing, there might be more than one useful representation for a data object, and we might like to design systems that can deal with multiple representations. To take a simple example, complex numbers may be represented in two almost equivalent ways: in rectangular form (real and imaginary parts) and in polar form (magnitude and angle). Sometimes rectangular form is more appropriate and sometimes polar form is more appropriate. Indeed, it is perfectly plausible to imagine a system in which complex numbers are represented in both ways, and in which the procedures for manipulating complex numbers work with either representation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299166,G__299167) : tailrecursion.hoplon.markdown.para_node.call(null,G__299166,G__299167));
})(),(function (){var G__299168 = cljs.core.PersistentArrayMap.EMPTY;
var G__299169 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["More importantly, programming systems are often designed by many people working over extended periods of time, subject to requirements that change over time. In such an environment, it is simply not possible for everyone to agree in advance on choices of data representation. So in addition to the data-abstraction barriers that isolate representation from use, we need abstraction barriers that isolate different design choices from each other and permit different choices to coexist in a single program. Furthermore, since large programs are often created by combining pre-existing modules that were designed in isolation, we need conventions that permit programmers to incorporate modules into larger systems additively, that is, without having to redesign or reimplement these modules."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299168,G__299169) : tailrecursion.hoplon.markdown.para_node.call(null,G__299168,G__299169));
})(),(function (){var G__299170 = cljs.core.PersistentArrayMap.EMPTY;
var G__299171 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In this section, we will learn how to cope with data that may be represented in different ways by different parts of a program. This requires constructing ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["generic procedures"], null)], 0))," ",(function (){var G__299172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__299173 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__299172,G__299173) : tailrecursion.hoplon.markdown.simple_node.call(null,G__299172,G__299173));
})()," procedures that can operate on data that may be represented in more than one way. Our main technique for building generic procedures will be to work in terms of data objects that have ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["type tags"], null)], 0)),", that is, data objects that include explicit information about how they are to be processed. We will also discuss ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data-directed"], null)], 0))," programming, a powerful and convenient implementation strategy for additively assembling systems with generic operations."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299170,G__299171) : tailrecursion.hoplon.markdown.para_node.call(null,G__299170,G__299171));
})(),(function (){var G__299174 = cljs.core.PersistentArrayMap.EMPTY;
var G__299175 = new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We begin with the simple complex-number example. We will see how type tags and data-directed style enable us to design separate rectangular and polar representations for complex numbers while maintaining the notion of an abstract ",(function (){var G__299176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299177 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["complex-number"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299176,G__299177) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299176,G__299177));
})()," data object. We will accomplish this by defining arithmetic procedures for complex numbers (",(function (){var G__299178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-complex"], null);
var G__299179 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299178,G__299179) : tailrecursion.hoplon.markdown.code_node.call(null,G__299178,G__299179));
})(),", ",(function (){var G__299180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-complex"], null);
var G__299181 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299180,G__299181) : tailrecursion.hoplon.markdown.code_node.call(null,G__299180,G__299181));
})(),", ",(function (){var G__299182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mul-complex"], null);
var G__299183 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299182,G__299183) : tailrecursion.hoplon.markdown.code_node.call(null,G__299182,G__299183));
})(),", and ",(function (){var G__299184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"div-complex"], null);
var G__299185 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299184,G__299185) : tailrecursion.hoplon.markdown.code_node.call(null,G__299184,G__299185));
})(),") in terms of generic selectors that access parts of a complex number independent of how the number is represented. The resulting complex-number system, as shown in figure 2.19, contains two different kinds of abstraction barriers. The ",(function (){var G__299186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299187 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["horizontal"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299186,G__299187) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299186,G__299187));
})()," abstraction barriers play the same role as the ones in figure 2.1. They isolate ",(function (){var G__299188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299189 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["higher-level"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299188,G__299189) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299188,G__299189));
})()," operations from ",(function (){var G__299190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299191 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["lower-level"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299190,G__299191) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299190,G__299191));
})()," representations. In addition, there is a ",(function (){var G__299192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299193 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["vertical"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299192,G__299193) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299192,G__299193));
})()," barrier that gives us the ability to separately design and install alternative representations."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299174,G__299175) : tailrecursion.hoplon.markdown.para_node.call(null,G__299174,G__299175));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_299137;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_299136;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_299135;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_299134;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"Data-abstraction barriers in the complex-number system."], null)], 0)),"",(function (){var _STAR_references_STAR_299194 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_299195 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_299196 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_299197 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__299198 = cljs.core.PersistentArrayMap.EMPTY;
var G__299199 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In section 2.5 we will show how to use type tags and data-directed style to develope a generic arithmetic package. This provides procedures (",(function (){var G__299200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add"], null);
var G__299201 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299200,G__299201) : tailrecursion.hoplon.markdown.code_node.call(null,G__299200,G__299201));
})(),",",(function (){var G__299202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mul"], null);
var G__299203 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299202,G__299203) : tailrecursion.hoplon.markdown.code_node.call(null,G__299202,G__299203));
})(),", and so on) that can be used to manipulate all sorts of ",(function (){var G__299204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299205 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["numbers"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299204,G__299205) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299204,G__299205));
})()," and can be easily extended when a new kind of number is needed. In section 2.5.3, we",(function (){var G__299206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__299207 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__299206,G__299207) : tailrecursion.hoplon.markdown.simple_node.call(null,G__299206,G__299207));
})(),"ll show how to use generic arithmetic in a system that performs symbolic algebra."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299198,G__299199) : tailrecursion.hoplon.markdown.para_node.call(null,G__299198,G__299199));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_299197;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_299196;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_299195;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_299194;
}})()], 0));
var G__299128 = "";
var G__299129 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Representations for Complex Numbers"], null),(function (){var _STAR_references_STAR_299208 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_299209 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_299210 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_299211 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__299212 = cljs.core.PersistentArrayMap.EMPTY;
var G__299213 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We will develope a system that performs arithmetic operations on complex numbers as a simple but unrealistic example of a program that uses generic operations. We begin by discussing two plausible representations for complex numbers as ordered pairs: rectangular form (real part and imaginary part) and polar form (magnitude and angle).",(function (){var G__299214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__299215 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In actual computational systems, rectangular form is preferable to polar form most of the time because of roundoff errors in conversion between rectangular and polar form. This is why the complex-number example is unrealistic. Nevertheless, it provides a clear illustration of the design of a system using generic operations and a good introduction to the more substantial systems to be developed later in this chapter."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299214,G__299215) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299214,G__299215));
})()," Section 2.4.2 will show how both representations can be made to coexist in a single system through the use of type tags and generic operations."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299212,G__299213) : tailrecursion.hoplon.markdown.para_node.call(null,G__299212,G__299213));
})(),(function (){var G__299216 = cljs.core.PersistentArrayMap.EMPTY;
var G__299217 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Like rational numbers, complex numbers are naturally represented as ordered pairs. The set of complex numbers can be thought of as a two-dimensional space with two orthogonal axes, the ",(function (){var G__299218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299219 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["real"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299218,G__299219) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299218,G__299219));
})()," axis and the ",(function (){var G__299220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299221 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["imaginary"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299220,G__299221) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299220,G__299221));
})()," axis. (See figure 2.20.) From this point of view, the complex number \\(z=x+iy\\) (where \\(i^2=-1\\)) can be thought of as the point in the plane whose real coordinate is \\(x\\) and whose imaginary coordinate is \\(y\\). Addition of complex numbers reduces in this representation to addition of coordinates:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299216,G__299217) : tailrecursion.hoplon.markdown.para_node.call(null,G__299216,G__299217));
})(),(function (){var G__299222 = cljs.core.PersistentArrayMap.EMPTY;
var G__299223 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\text{Real-part }(z_1+z_2)=\\text{Real-part }(z_1)+\\text{Real-part }(z_2) \\\\\\text{Imaginary-part }(z_1+z_2) = \\text{Imaginary-part }(z_1)+\\text{Imaginary-part }(z_2)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299222,G__299223) : tailrecursion.hoplon.markdown.para_node.call(null,G__299222,G__299223));
})(),(function (){var G__299224 = cljs.core.PersistentArrayMap.EMPTY;
var G__299225 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["When multiplying complex numbers, it is more natural to think in terms of representing a complex number in polar form, as a magnitude and an angle (\\(r\\) and \\(A\\) in figure 2.20). The product of two complex numbers is the vector obtained by stretching one complex number by the length of the other and then rotating it through the angle of the other:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299224,G__299225) : tailrecursion.hoplon.markdown.para_node.call(null,G__299224,G__299225));
})(),(function (){var G__299226 = cljs.core.PersistentArrayMap.EMPTY;
var G__299227 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\text{Magnitude }(z_1\\cdot z_2)= \\text{Magnitude }(z_1)\\cdot\\text{Magnitude }(z_2) \\\\\\text{Angle }(z_1\\cdot z_2)=\\text{Angle }(z_1)+\\text{Angle }(z_2)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299226,G__299227) : tailrecursion.hoplon.markdown.para_node.call(null,G__299226,G__299227));
})(),(function (){var G__299228 = cljs.core.PersistentArrayMap.EMPTY;
var G__299229 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Thus, there are two different representations for complex numbers, which are appropriate for different operations. Yet, from the viewpoint of someone writing a program that uses complex numbers, the principle of data abstraction suggests that all the operations for manipulating complex numbers should be available regardless of which representation is used by the computer. For example, it is often useful to be able to find the magnitude of a complex number that is specified by rectangular coordinates. Similarly, it is often useful to be able to determine the real part of a complex number that is specified by polar coordinates."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299228,G__299229) : tailrecursion.hoplon.markdown.para_node.call(null,G__299228,G__299229));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_299211;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_299210;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_299209;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_299208;
}})(),"\n",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"Complex numbers as points in the plane."], null)], 0)),"",(function (){var _STAR_references_STAR_299230 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_299231 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_299232 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_299233 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__299234 = cljs.core.PersistentArrayMap.EMPTY;
var G__299235 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To design such a system, we can follow the same data-abstraction strategy we followed in designing the rational-number package in section 2.1.1. Assume that the operations on complex numbers are implemented in terms of four selectors: ",(function (){var G__299236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"real-part"], null);
var G__299237 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299236,G__299237) : tailrecursion.hoplon.markdown.code_node.call(null,G__299236,G__299237));
})(),", ",(function (){var G__299238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"imag-part"], null);
var G__299239 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299238,G__299239) : tailrecursion.hoplon.markdown.code_node.call(null,G__299238,G__299239));
})(),", ",(function (){var G__299240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"magnitude"], null);
var G__299241 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299240,G__299241) : tailrecursion.hoplon.markdown.code_node.call(null,G__299240,G__299241));
})(),", and ",(function (){var G__299242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"angle"], null);
var G__299243 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299242,G__299243) : tailrecursion.hoplon.markdown.code_node.call(null,G__299242,G__299243));
})(),". Also assume that we have two procedures for constructing complex numbers: ",(function (){var G__299244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-from-real-imag"], null);
var G__299245 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299244,G__299245) : tailrecursion.hoplon.markdown.code_node.call(null,G__299244,G__299245));
})()," which returns a complex number with the specified real and imaginary parts, and ",(function (){var G__299246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-from-mag-ang"], null);
var G__299247 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299246,G__299247) : tailrecursion.hoplon.markdown.code_node.call(null,G__299246,G__299247));
})()," which returns a complex number with the specified magnitude and angle. These procedures have the property that, for any complex number \\(z\\), both"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299234,G__299235) : tailrecursion.hoplon.markdown.para_node.call(null,G__299234,G__299235));
})(),(function (){var G__299272 = (function (){var G__299273 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__299274 = (function (){var G__299275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__299276 = "(";
var G__299277 = (function (){var G__299287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299288 = "make-from-real-imag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299287,G__299288) : tailrecursion.hoplon.span.call(null,G__299287,G__299288));
})();
var G__299278 = " (";
var G__299279 = (function (){var G__299289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299290 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299289,G__299290) : tailrecursion.hoplon.span.call(null,G__299289,G__299290));
})();
var G__299280 = " ";
var G__299281 = (function (){var G__299291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299292 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299291,G__299292) : tailrecursion.hoplon.span.call(null,G__299291,G__299292));
})();
var G__299282 = ") (";
var G__299283 = (function (){var G__299293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299294 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299293,G__299294) : tailrecursion.hoplon.span.call(null,G__299293,G__299294));
})();
var G__299284 = " ";
var G__299285 = (function (){var G__299295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299296 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299295,G__299296) : tailrecursion.hoplon.span.call(null,G__299295,G__299296));
})();
var G__299286 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12(G__299275,G__299276,G__299277,G__299278,G__299279,G__299280,G__299281,G__299282,G__299283,G__299284,G__299285,G__299286) : tailrecursion.hoplon.pre.call(null,G__299275,G__299276,G__299277,G__299278,G__299279,G__299280,G__299281,G__299282,G__299283,G__299284,G__299285,G__299286));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__299273,G__299274) : tailrecursion.hoplon.div.call(null,G__299273,G__299274));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__299272) : tailrecursion.hoplon.div.call(null,G__299272));
})(),(function (){var G__299297 = cljs.core.PersistentArrayMap.EMPTY;
var G__299298 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and ",(function (){var G__299299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"clj\n(make-from-mag-ang (magnitude z) (angle z))\n"], null);
var G__299300 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299299,G__299300) : tailrecursion.hoplon.markdown.code_node.call(null,G__299299,G__299300));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299297,G__299298) : tailrecursion.hoplon.markdown.para_node.call(null,G__299297,G__299298));
})(),(function (){var G__299301 = cljs.core.PersistentArrayMap.EMPTY;
var G__299302 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["produce complex numbers that are equal to \\(z\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299301,G__299302) : tailrecursion.hoplon.markdown.para_node.call(null,G__299301,G__299302));
})(),(function (){var G__299303 = cljs.core.PersistentArrayMap.EMPTY;
var G__299304 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using these constructors and selectors, we can implement arithmetic on complex numbers using the ",(function (){var G__299305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299306 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstract data"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299305,G__299306) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299305,G__299306));
})()," specified by the constructors and selectors, just as we did for rational numbers in section 2.1.1. As shown in the formulas above, we can add and subtract complex numbers in terms of real and imaginary parts while multiplying and dividing complex numbers in terms of magnitudes and angles:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299303,G__299304) : tailrecursion.hoplon.markdown.para_node.call(null,G__299303,G__299304));
})(),(function (){var G__299547 = (function (){var G__299548 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__299549 = (function (){var G__299550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__299551 = "(";
var G__299552 = (function (){var G__299668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__299669 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299668,G__299669) : tailrecursion.hoplon.span.call(null,G__299668,G__299669));
})();
var G__299553 = (function (){var G__299670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299671 = "add-complex";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299670,G__299671) : tailrecursion.hoplon.span.call(null,G__299670,G__299671));
})();
var G__299554 = " [";
var G__299555 = (function (){var G__299672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299673 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299672,G__299673) : tailrecursion.hoplon.span.call(null,G__299672,G__299673));
})();
var G__299556 = " ";
var G__299557 = (function (){var G__299674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299675 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299674,G__299675) : tailrecursion.hoplon.span.call(null,G__299674,G__299675));
})();
var G__299558 = "]\n  (";
var G__299559 = (function (){var G__299676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299677 = "make-from-real-imag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299676,G__299677) : tailrecursion.hoplon.span.call(null,G__299676,G__299677));
})();
var G__299560 = " (";
var G__299561 = (function (){var G__299678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299679 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299678,G__299679) : tailrecursion.hoplon.span.call(null,G__299678,G__299679));
})();
var G__299562 = "(";
var G__299563 = (function (){var G__299680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299681 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299680,G__299681) : tailrecursion.hoplon.span.call(null,G__299680,G__299681));
})();
var G__299564 = " ";
var G__299565 = (function (){var G__299682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299683 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299682,G__299683) : tailrecursion.hoplon.span.call(null,G__299682,G__299683));
})();
var G__299566 = ") (";
var G__299567 = (function (){var G__299684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299685 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299684,G__299685) : tailrecursion.hoplon.span.call(null,G__299684,G__299685));
})();
var G__299568 = " ";
var G__299569 = (function (){var G__299686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299687 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299686,G__299687) : tailrecursion.hoplon.span.call(null,G__299686,G__299687));
})();
var G__299570 = "))\n                       (";
var G__299571 = (function (){var G__299688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299689 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299688,G__299689) : tailrecursion.hoplon.span.call(null,G__299688,G__299689));
})();
var G__299572 = "(";
var G__299573 = (function (){var G__299690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299691 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299690,G__299691) : tailrecursion.hoplon.span.call(null,G__299690,G__299691));
})();
var G__299574 = " ";
var G__299575 = (function (){var G__299692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299693 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299692,G__299693) : tailrecursion.hoplon.span.call(null,G__299692,G__299693));
})();
var G__299576 = ") (";
var G__299577 = (function (){var G__299694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299695 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299694,G__299695) : tailrecursion.hoplon.span.call(null,G__299694,G__299695));
})();
var G__299578 = " ";
var G__299579 = (function (){var G__299696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299697 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299696,G__299697) : tailrecursion.hoplon.span.call(null,G__299696,G__299697));
})();
var G__299580 = "))))\n\n(";
var G__299581 = (function (){var G__299698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__299699 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299698,G__299699) : tailrecursion.hoplon.span.call(null,G__299698,G__299699));
})();
var G__299582 = (function (){var G__299700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299701 = "sub-complex";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299700,G__299701) : tailrecursion.hoplon.span.call(null,G__299700,G__299701));
})();
var G__299583 = " [";
var G__299584 = (function (){var G__299702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299703 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299702,G__299703) : tailrecursion.hoplon.span.call(null,G__299702,G__299703));
})();
var G__299585 = " ";
var G__299586 = (function (){var G__299704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299705 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299704,G__299705) : tailrecursion.hoplon.span.call(null,G__299704,G__299705));
})();
var G__299587 = "]\n  (";
var G__299588 = (function (){var G__299706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299707 = "make-from-real-imag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299706,G__299707) : tailrecursion.hoplon.span.call(null,G__299706,G__299707));
})();
var G__299589 = " (";
var G__299590 = (function (){var G__299708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299709 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299708,G__299709) : tailrecursion.hoplon.span.call(null,G__299708,G__299709));
})();
var G__299591 = "(";
var G__299592 = (function (){var G__299710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299711 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299710,G__299711) : tailrecursion.hoplon.span.call(null,G__299710,G__299711));
})();
var G__299593 = " ";
var G__299594 = (function (){var G__299712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299713 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299712,G__299713) : tailrecursion.hoplon.span.call(null,G__299712,G__299713));
})();
var G__299595 = ") (";
var G__299596 = (function (){var G__299714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299715 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299714,G__299715) : tailrecursion.hoplon.span.call(null,G__299714,G__299715));
})();
var G__299597 = " ";
var G__299598 = (function (){var G__299716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299717 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299716,G__299717) : tailrecursion.hoplon.span.call(null,G__299716,G__299717));
})();
var G__299599 = "))\n                       (";
var G__299600 = (function (){var G__299718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299719 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299718,G__299719) : tailrecursion.hoplon.span.call(null,G__299718,G__299719));
})();
var G__299601 = "(";
var G__299602 = (function (){var G__299720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299721 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299720,G__299721) : tailrecursion.hoplon.span.call(null,G__299720,G__299721));
})();
var G__299603 = " ";
var G__299604 = (function (){var G__299722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299723 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299722,G__299723) : tailrecursion.hoplon.span.call(null,G__299722,G__299723));
})();
var G__299605 = ") (";
var G__299606 = (function (){var G__299724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299725 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299724,G__299725) : tailrecursion.hoplon.span.call(null,G__299724,G__299725));
})();
var G__299607 = " ";
var G__299608 = (function (){var G__299726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299727 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299726,G__299727) : tailrecursion.hoplon.span.call(null,G__299726,G__299727));
})();
var G__299609 = "))))\n\n(";
var G__299610 = (function (){var G__299728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__299729 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299728,G__299729) : tailrecursion.hoplon.span.call(null,G__299728,G__299729));
})();
var G__299611 = (function (){var G__299730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299731 = "mul-complex";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299730,G__299731) : tailrecursion.hoplon.span.call(null,G__299730,G__299731));
})();
var G__299612 = " [";
var G__299613 = (function (){var G__299732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299733 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299732,G__299733) : tailrecursion.hoplon.span.call(null,G__299732,G__299733));
})();
var G__299614 = " ";
var G__299615 = (function (){var G__299734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299735 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299734,G__299735) : tailrecursion.hoplon.span.call(null,G__299734,G__299735));
})();
var G__299616 = "]\n  (";
var G__299617 = (function (){var G__299736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299737 = "make-from-mag-ang";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299736,G__299737) : tailrecursion.hoplon.span.call(null,G__299736,G__299737));
})();
var G__299618 = " (";
var G__299619 = (function (){var G__299738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299739 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299738,G__299739) : tailrecursion.hoplon.span.call(null,G__299738,G__299739));
})();
var G__299620 = "(";
var G__299621 = (function (){var G__299740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299741 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299740,G__299741) : tailrecursion.hoplon.span.call(null,G__299740,G__299741));
})();
var G__299622 = " ";
var G__299623 = (function (){var G__299742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299743 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299742,G__299743) : tailrecursion.hoplon.span.call(null,G__299742,G__299743));
})();
var G__299624 = ") (";
var G__299625 = (function (){var G__299744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299745 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299744,G__299745) : tailrecursion.hoplon.span.call(null,G__299744,G__299745));
})();
var G__299626 = " ";
var G__299627 = (function (){var G__299746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299747 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299746,G__299747) : tailrecursion.hoplon.span.call(null,G__299746,G__299747));
})();
var G__299628 = "))\n                     (";
var G__299629 = (function (){var G__299748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299749 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299748,G__299749) : tailrecursion.hoplon.span.call(null,G__299748,G__299749));
})();
var G__299630 = "(";
var G__299631 = (function (){var G__299750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299751 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299750,G__299751) : tailrecursion.hoplon.span.call(null,G__299750,G__299751));
})();
var G__299632 = " ";
var G__299633 = (function (){var G__299752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299753 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299752,G__299753) : tailrecursion.hoplon.span.call(null,G__299752,G__299753));
})();
var G__299634 = ") (";
var G__299635 = (function (){var G__299754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299755 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299754,G__299755) : tailrecursion.hoplon.span.call(null,G__299754,G__299755));
})();
var G__299636 = " ";
var G__299637 = (function (){var G__299756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299757 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299756,G__299757) : tailrecursion.hoplon.span.call(null,G__299756,G__299757));
})();
var G__299638 = "))))\n\n(";
var G__299639 = (function (){var G__299758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__299759 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299758,G__299759) : tailrecursion.hoplon.span.call(null,G__299758,G__299759));
})();
var G__299640 = (function (){var G__299760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299761 = "div-complex";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299760,G__299761) : tailrecursion.hoplon.span.call(null,G__299760,G__299761));
})();
var G__299641 = " [";
var G__299642 = (function (){var G__299762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299763 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299762,G__299763) : tailrecursion.hoplon.span.call(null,G__299762,G__299763));
})();
var G__299643 = " ";
var G__299644 = (function (){var G__299764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299765 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299764,G__299765) : tailrecursion.hoplon.span.call(null,G__299764,G__299765));
})();
var G__299645 = "]\n  (";
var G__299646 = (function (){var G__299766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299767 = "make-from-mag-ang";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299766,G__299767) : tailrecursion.hoplon.span.call(null,G__299766,G__299767));
})();
var G__299647 = " (";
var G__299648 = (function (){var G__299768 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299769 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299768,G__299769) : tailrecursion.hoplon.span.call(null,G__299768,G__299769));
})();
var G__299649 = "(";
var G__299650 = (function (){var G__299770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299771 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299770,G__299771) : tailrecursion.hoplon.span.call(null,G__299770,G__299771));
})();
var G__299651 = " ";
var G__299652 = (function (){var G__299772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299773 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299772,G__299773) : tailrecursion.hoplon.span.call(null,G__299772,G__299773));
})();
var G__299653 = ") (";
var G__299654 = (function (){var G__299774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299775 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299774,G__299775) : tailrecursion.hoplon.span.call(null,G__299774,G__299775));
})();
var G__299655 = " ";
var G__299656 = (function (){var G__299776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299777 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299776,G__299777) : tailrecursion.hoplon.span.call(null,G__299776,G__299777));
})();
var G__299657 = "))\n                     (";
var G__299658 = (function (){var G__299778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299779 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299778,G__299779) : tailrecursion.hoplon.span.call(null,G__299778,G__299779));
})();
var G__299659 = "(";
var G__299660 = (function (){var G__299780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299781 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299780,G__299781) : tailrecursion.hoplon.span.call(null,G__299780,G__299781));
})();
var G__299661 = " ";
var G__299662 = (function (){var G__299782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299783 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299782,G__299783) : tailrecursion.hoplon.span.call(null,G__299782,G__299783));
})();
var G__299663 = ") (";
var G__299664 = (function (){var G__299784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299785 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299784,G__299785) : tailrecursion.hoplon.span.call(null,G__299784,G__299785));
})();
var G__299665 = " ";
var G__299666 = (function (){var G__299786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299787 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299786,G__299787) : tailrecursion.hoplon.span.call(null,G__299786,G__299787));
})();
var G__299667 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$118 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$118(G__299550,G__299551,G__299552,G__299553,G__299554,G__299555,G__299556,G__299557,G__299558,G__299559,G__299560,G__299561,G__299562,G__299563,G__299564,G__299565,G__299566,G__299567,G__299568,G__299569,G__299570,G__299571,G__299572,G__299573,G__299574,G__299575,G__299576,G__299577,G__299578,G__299579,G__299580,G__299581,G__299582,G__299583,G__299584,G__299585,G__299586,G__299587,G__299588,G__299589,G__299590,G__299591,G__299592,G__299593,G__299594,G__299595,G__299596,G__299597,G__299598,G__299599,G__299600,G__299601,G__299602,G__299603,G__299604,G__299605,G__299606,G__299607,G__299608,G__299609,G__299610,G__299611,G__299612,G__299613,G__299614,G__299615,G__299616,G__299617,G__299618,G__299619,G__299620,G__299621,G__299622,G__299623,G__299624,G__299625,G__299626,G__299627,G__299628,G__299629,G__299630,G__299631,G__299632,G__299633,G__299634,G__299635,G__299636,G__299637,G__299638,G__299639,G__299640,G__299641,G__299642,G__299643,G__299644,G__299645,G__299646,G__299647,G__299648,G__299649,G__299650,G__299651,G__299652,G__299653,G__299654,G__299655,G__299656,G__299657,G__299658,G__299659,G__299660,G__299661,G__299662,G__299663,G__299664,G__299665,G__299666,G__299667) : tailrecursion.hoplon.pre.call(null,G__299550,G__299551,G__299552,G__299553,G__299554,G__299555,G__299556,G__299557,G__299558,G__299559,G__299560,G__299561,G__299562,G__299563,G__299564,G__299565,G__299566,G__299567,G__299568,G__299569,G__299570,G__299571,G__299572,G__299573,G__299574,G__299575,G__299576,G__299577,G__299578,G__299579,G__299580,G__299581,G__299582,G__299583,G__299584,G__299585,G__299586,G__299587,G__299588,G__299589,G__299590,G__299591,G__299592,G__299593,G__299594,G__299595,G__299596,G__299597,G__299598,G__299599,G__299600,G__299601,G__299602,G__299603,G__299604,G__299605,G__299606,G__299607,G__299608,G__299609,G__299610,G__299611,G__299612,G__299613,G__299614,G__299615,G__299616,G__299617,G__299618,G__299619,G__299620,G__299621,G__299622,G__299623,G__299624,G__299625,G__299626,G__299627,G__299628,G__299629,G__299630,G__299631,G__299632,G__299633,G__299634,G__299635,G__299636,G__299637,G__299638,G__299639,G__299640,G__299641,G__299642,G__299643,G__299644,G__299645,G__299646,G__299647,G__299648,G__299649,G__299650,G__299651,G__299652,G__299653,G__299654,G__299655,G__299656,G__299657,G__299658,G__299659,G__299660,G__299661,G__299662,G__299663,G__299664,G__299665,G__299666,G__299667));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__299548,G__299549) : tailrecursion.hoplon.div.call(null,G__299548,G__299549));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__299547) : tailrecursion.hoplon.div.call(null,G__299547));
})(),(function (){var G__299788 = cljs.core.PersistentArrayMap.EMPTY;
var G__299789 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To complete the complex-number package, we must choose a representation and we must implement the constructors and selectors in terms of primitive numbers and primative list structure. There are two obvious ways to do this: We can represent a complex number in ",(function (){var G__299790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299791 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["rectangular form"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299790,G__299791) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299790,G__299791));
})()," as a pair (real part, imaginary part) or in ",(function (){var G__299792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299793 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["polar form"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299792,G__299793) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299792,G__299793));
})()," as a pair (magnitude, angle). Which shall we choose?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299788,G__299789) : tailrecursion.hoplon.markdown.para_node.call(null,G__299788,G__299789));
})(),(function (){var G__299794 = cljs.core.PersistentArrayMap.EMPTY;
var G__299795 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In order to make the different choices concrete, imagine that there are two programmers, Ben Bitdiddle and Alyssa P. Hacker, who are independently designing representations for the complex-number system. Ben chooses to represent complex numbers in rectangular form. With this choice, selecting the real and imaginary parts of a complex number is straightforward, as is constructing a complex number with given real and imaginary parts. To find the magnitude and the angle, or to construct a complex number with a given magnitude and angle, he uses the trigonometric relations:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299794,G__299795) : tailrecursion.hoplon.markdown.para_node.call(null,G__299794,G__299795));
})(),(function (){var G__299796 = cljs.core.PersistentArrayMap.EMPTY;
var G__299797 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} x=&r\\cos A & r=&\\sqrt{x^2+y^2} \\\\y=&r\\sin A & A=&\\arctan(y,x) \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299796,G__299797) : tailrecursion.hoplon.markdown.para_node.call(null,G__299796,G__299797));
})(),(function (){var G__299798 = cljs.core.PersistentArrayMap.EMPTY;
var G__299799 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["which relate the real and imaginary parts \\((x,y)\\) to the magnitude and angle \\((r,A)\\).",(function (){var G__299800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__299801 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The arctangent function referred to here, is a combination of the Java arctan function and a conditional that accounts for the quadrants via the signs of the arguments."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299800,G__299801) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299800,G__299801));
})()," Ben",(function (){var G__299802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__299803 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__299802,G__299803) : tailrecursion.hoplon.markdown.simple_node.call(null,G__299802,G__299803));
})(),"s representation is therefore given by the following selectors and constructors:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299798,G__299799) : tailrecursion.hoplon.markdown.para_node.call(null,G__299798,G__299799));
})(),(function (){var G__299993 = (function (){var G__299994 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__299995 = (function (){var G__299996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__299997 = "(";
var G__299998 = (function (){var G__300085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300086 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300085,G__300086) : tailrecursion.hoplon.span.call(null,G__300085,G__300086));
})();
var G__299999 = (function (){var G__300087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300088 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300087,G__300088) : tailrecursion.hoplon.span.call(null,G__300087,G__300088));
})();
var G__300000 = " [";
var G__300001 = (function (){var G__300089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300090 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300089,G__300090) : tailrecursion.hoplon.span.call(null,G__300089,G__300090));
})();
var G__300002 = "] (";
var G__300003 = (function (){var G__300091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300092 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300091,G__300092) : tailrecursion.hoplon.span.call(null,G__300091,G__300092));
})();
var G__300004 = (function (){var G__300093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300094 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300093,G__300094) : tailrecursion.hoplon.span.call(null,G__300093,G__300094));
})();
var G__300005 = "))\n\n(";
var G__300006 = (function (){var G__300095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300096 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300095,G__300096) : tailrecursion.hoplon.span.call(null,G__300095,G__300096));
})();
var G__300007 = (function (){var G__300097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300098 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300097,G__300098) : tailrecursion.hoplon.span.call(null,G__300097,G__300098));
})();
var G__300008 = " [";
var G__300009 = (function (){var G__300099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300100 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300099,G__300100) : tailrecursion.hoplon.span.call(null,G__300099,G__300100));
})();
var G__300010 = "] (";
var G__300011 = (function (){var G__300101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300102 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300101,G__300102) : tailrecursion.hoplon.span.call(null,G__300101,G__300102));
})();
var G__300012 = (function (){var G__300103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300104 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300103,G__300104) : tailrecursion.hoplon.span.call(null,G__300103,G__300104));
})();
var G__300013 = "))\n\n(";
var G__300014 = (function (){var G__300105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300106 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300105,G__300106) : tailrecursion.hoplon.span.call(null,G__300105,G__300106));
})();
var G__300015 = (function (){var G__300107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300108 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300107,G__300108) : tailrecursion.hoplon.span.call(null,G__300107,G__300108));
})();
var G__300016 = " [";
var G__300017 = (function (){var G__300109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300110 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300109,G__300110) : tailrecursion.hoplon.span.call(null,G__300109,G__300110));
})();
var G__300018 = "]\n  (";
var G__300019 = (function (){var G__300111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300112 = "sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300111,G__300112) : tailrecursion.hoplon.span.call(null,G__300111,G__300112));
})();
var G__300020 = " (";
var G__300021 = (function (){var G__300113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300114 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300113,G__300114) : tailrecursion.hoplon.span.call(null,G__300113,G__300114));
})();
var G__300022 = "(";
var G__300023 = (function (){var G__300115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300116 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300115,G__300116) : tailrecursion.hoplon.span.call(null,G__300115,G__300116));
})();
var G__300024 = " (";
var G__300025 = (function (){var G__300117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300118 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300117,G__300118) : tailrecursion.hoplon.span.call(null,G__300117,G__300118));
})();
var G__300026 = " ";
var G__300027 = (function (){var G__300119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300120 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300119,G__300120) : tailrecursion.hoplon.span.call(null,G__300119,G__300120));
})();
var G__300028 = ")) (";
var G__300029 = (function (){var G__300121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300122 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300121,G__300122) : tailrecursion.hoplon.span.call(null,G__300121,G__300122));
})();
var G__300030 = " (";
var G__300031 = (function (){var G__300123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300124 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300123,G__300124) : tailrecursion.hoplon.span.call(null,G__300123,G__300124));
})();
var G__300032 = " ";
var G__300033 = (function (){var G__300125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300126 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300125,G__300126) : tailrecursion.hoplon.span.call(null,G__300125,G__300126));
})();
var G__300034 = ")))))\n\n(";
var G__300035 = (function (){var G__300127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300128 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300127,G__300128) : tailrecursion.hoplon.span.call(null,G__300127,G__300128));
})();
var G__300036 = (function (){var G__300129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300130 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300129,G__300130) : tailrecursion.hoplon.span.call(null,G__300129,G__300130));
})();
var G__300037 = " [";
var G__300038 = (function (){var G__300131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300132 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300131,G__300132) : tailrecursion.hoplon.span.call(null,G__300131,G__300132));
})();
var G__300039 = "]\n  (";
var G__300040 = (function (){var G__300133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300134 = "arctan";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300133,G__300134) : tailrecursion.hoplon.span.call(null,G__300133,G__300134));
})();
var G__300041 = " (";
var G__300042 = (function (){var G__300135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300136 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300135,G__300136) : tailrecursion.hoplon.span.call(null,G__300135,G__300136));
})();
var G__300043 = " ";
var G__300044 = (function (){var G__300137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300138 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300137,G__300138) : tailrecursion.hoplon.span.call(null,G__300137,G__300138));
})();
var G__300045 = ") (";
var G__300046 = (function (){var G__300139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300140 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300139,G__300140) : tailrecursion.hoplon.span.call(null,G__300139,G__300140));
})();
var G__300047 = " ";
var G__300048 = (function (){var G__300141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300142 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300141,G__300142) : tailrecursion.hoplon.span.call(null,G__300141,G__300142));
})();
var G__300049 = ")))\n\n(";
var G__300050 = (function (){var G__300143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300144 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300143,G__300144) : tailrecursion.hoplon.span.call(null,G__300143,G__300144));
})();
var G__300051 = (function (){var G__300145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300146 = "make-from-real-imag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300145,G__300146) : tailrecursion.hoplon.span.call(null,G__300145,G__300146));
})();
var G__300052 = " [";
var G__300053 = (function (){var G__300147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300148 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300147,G__300148) : tailrecursion.hoplon.span.call(null,G__300147,G__300148));
})();
var G__300054 = " ";
var G__300055 = (function (){var G__300149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300150 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300149,G__300150) : tailrecursion.hoplon.span.call(null,G__300149,G__300150));
})();
var G__300056 = "]\n  (";
var G__300057 = (function (){var G__300151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300152 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300151,G__300152) : tailrecursion.hoplon.span.call(null,G__300151,G__300152));
})();
var G__300058 = (function (){var G__300153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300154 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300153,G__300154) : tailrecursion.hoplon.span.call(null,G__300153,G__300154));
})();
var G__300059 = " ";
var G__300060 = (function (){var G__300155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300156 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300155,G__300156) : tailrecursion.hoplon.span.call(null,G__300155,G__300156));
})();
var G__300061 = "))\n\n(";
var G__300062 = (function (){var G__300157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300158 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300157,G__300158) : tailrecursion.hoplon.span.call(null,G__300157,G__300158));
})();
var G__300063 = (function (){var G__300159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300160 = "make-from-mag-ang";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300159,G__300160) : tailrecursion.hoplon.span.call(null,G__300159,G__300160));
})();
var G__300064 = " [";
var G__300065 = (function (){var G__300161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300162 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300161,G__300162) : tailrecursion.hoplon.span.call(null,G__300161,G__300162));
})();
var G__300066 = " ";
var G__300067 = (function (){var G__300163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300164 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300163,G__300164) : tailrecursion.hoplon.span.call(null,G__300163,G__300164));
})();
var G__300068 = "]\n  (";
var G__300069 = (function (){var G__300165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300166 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300165,G__300166) : tailrecursion.hoplon.span.call(null,G__300165,G__300166));
})();
var G__300070 = "(";
var G__300071 = (function (){var G__300167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300168 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300167,G__300168) : tailrecursion.hoplon.span.call(null,G__300167,G__300168));
})();
var G__300072 = (function (){var G__300169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300170 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300169,G__300170) : tailrecursion.hoplon.span.call(null,G__300169,G__300170));
})();
var G__300073 = " (";
var G__300074 = (function (){var G__300171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300172 = "Math/cos";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300171,G__300172) : tailrecursion.hoplon.span.call(null,G__300171,G__300172));
})();
var G__300075 = " ";
var G__300076 = (function (){var G__300173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300174 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300173,G__300174) : tailrecursion.hoplon.span.call(null,G__300173,G__300174));
})();
var G__300077 = ")) (";
var G__300078 = (function (){var G__300175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300176 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300175,G__300176) : tailrecursion.hoplon.span.call(null,G__300175,G__300176));
})();
var G__300079 = (function (){var G__300177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300178 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300177,G__300178) : tailrecursion.hoplon.span.call(null,G__300177,G__300178));
})();
var G__300080 = " (";
var G__300081 = (function (){var G__300179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300180 = "Math/sin";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300179,G__300180) : tailrecursion.hoplon.span.call(null,G__300179,G__300180));
})();
var G__300082 = " ";
var G__300083 = (function (){var G__300181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300182 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300181,G__300182) : tailrecursion.hoplon.span.call(null,G__300181,G__300182));
})();
var G__300084 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$89 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$89(G__299996,G__299997,G__299998,G__299999,G__300000,G__300001,G__300002,G__300003,G__300004,G__300005,G__300006,G__300007,G__300008,G__300009,G__300010,G__300011,G__300012,G__300013,G__300014,G__300015,G__300016,G__300017,G__300018,G__300019,G__300020,G__300021,G__300022,G__300023,G__300024,G__300025,G__300026,G__300027,G__300028,G__300029,G__300030,G__300031,G__300032,G__300033,G__300034,G__300035,G__300036,G__300037,G__300038,G__300039,G__300040,G__300041,G__300042,G__300043,G__300044,G__300045,G__300046,G__300047,G__300048,G__300049,G__300050,G__300051,G__300052,G__300053,G__300054,G__300055,G__300056,G__300057,G__300058,G__300059,G__300060,G__300061,G__300062,G__300063,G__300064,G__300065,G__300066,G__300067,G__300068,G__300069,G__300070,G__300071,G__300072,G__300073,G__300074,G__300075,G__300076,G__300077,G__300078,G__300079,G__300080,G__300081,G__300082,G__300083,G__300084) : tailrecursion.hoplon.pre.call(null,G__299996,G__299997,G__299998,G__299999,G__300000,G__300001,G__300002,G__300003,G__300004,G__300005,G__300006,G__300007,G__300008,G__300009,G__300010,G__300011,G__300012,G__300013,G__300014,G__300015,G__300016,G__300017,G__300018,G__300019,G__300020,G__300021,G__300022,G__300023,G__300024,G__300025,G__300026,G__300027,G__300028,G__300029,G__300030,G__300031,G__300032,G__300033,G__300034,G__300035,G__300036,G__300037,G__300038,G__300039,G__300040,G__300041,G__300042,G__300043,G__300044,G__300045,G__300046,G__300047,G__300048,G__300049,G__300050,G__300051,G__300052,G__300053,G__300054,G__300055,G__300056,G__300057,G__300058,G__300059,G__300060,G__300061,G__300062,G__300063,G__300064,G__300065,G__300066,G__300067,G__300068,G__300069,G__300070,G__300071,G__300072,G__300073,G__300074,G__300075,G__300076,G__300077,G__300078,G__300079,G__300080,G__300081,G__300082,G__300083,G__300084));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__299994,G__299995) : tailrecursion.hoplon.div.call(null,G__299994,G__299995));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__299993) : tailrecursion.hoplon.div.call(null,G__299993));
})(),(function (){var G__300183 = cljs.core.PersistentArrayMap.EMPTY;
var G__300184 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If you tried this code (which I hope you did), you may have noticed that our ",(function (){var G__300185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"angle"], null);
var G__300186 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300185,G__300186) : tailrecursion.hoplon.markdown.code_node.call(null,G__300185,G__300186));
})()," procedure doesn",(function (){var G__300187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__300188 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300187,G__300188) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300187,G__300188));
})(),"t work! The ",(function (){var G__300189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"arctan"], null);
var G__300190 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300189,G__300190) : tailrecursion.hoplon.markdown.code_node.call(null,G__300189,G__300190));
})()," function is not defined. If you define it, remember to account for the quadrants!"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300183,G__300184) : tailrecursion.hoplon.markdown.para_node.call(null,G__300183,G__300184));
})(),(function (){var G__300191 = cljs.core.PersistentArrayMap.EMPTY;
var G__300192 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa, in contrast, chooses to represent complex numbers in polar form. For her, selecting the magnitude and angle is straightforward, but she has to use the trigonometric relations to obtain the real and imaginary parts. Alyssa",(function (){var G__300193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__300194 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300193,G__300194) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300193,G__300194));
})(),"s representation is:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300191,G__300192) : tailrecursion.hoplon.markdown.para_node.call(null,G__300191,G__300192));
})(),(function (){var G__300386 = (function (){var G__300387 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__300388 = (function (){var G__300389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__300390 = "(";
var G__300391 = (function (){var G__300480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300481 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300480,G__300481) : tailrecursion.hoplon.span.call(null,G__300480,G__300481));
})();
var G__300392 = (function (){var G__300482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300483 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300482,G__300483) : tailrecursion.hoplon.span.call(null,G__300482,G__300483));
})();
var G__300393 = " [";
var G__300394 = (function (){var G__300484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300485 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300484,G__300485) : tailrecursion.hoplon.span.call(null,G__300484,G__300485));
})();
var G__300395 = "]\n  (";
var G__300396 = (function (){var G__300486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300487 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300486,G__300487) : tailrecursion.hoplon.span.call(null,G__300486,G__300487));
})();
var G__300397 = "(";
var G__300398 = (function (){var G__300488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300489 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300488,G__300489) : tailrecursion.hoplon.span.call(null,G__300488,G__300489));
})();
var G__300399 = " ";
var G__300400 = (function (){var G__300490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300491 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300490,G__300491) : tailrecursion.hoplon.span.call(null,G__300490,G__300491));
})();
var G__300401 = ") \n     (";
var G__300402 = (function (){var G__300492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300493 = "Math/cos";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300492,G__300493) : tailrecursion.hoplon.span.call(null,G__300492,G__300493));
})();
var G__300403 = " (";
var G__300404 = (function (){var G__300494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300495 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300494,G__300495) : tailrecursion.hoplon.span.call(null,G__300494,G__300495));
})();
var G__300405 = " ";
var G__300406 = (function (){var G__300496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300497 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300496,G__300497) : tailrecursion.hoplon.span.call(null,G__300496,G__300497));
})();
var G__300407 = "))))\n\n(";
var G__300408 = (function (){var G__300498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300499 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300498,G__300499) : tailrecursion.hoplon.span.call(null,G__300498,G__300499));
})();
var G__300409 = (function (){var G__300500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300501 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300500,G__300501) : tailrecursion.hoplon.span.call(null,G__300500,G__300501));
})();
var G__300410 = " [";
var G__300411 = (function (){var G__300502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300503 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300502,G__300503) : tailrecursion.hoplon.span.call(null,G__300502,G__300503));
})();
var G__300412 = "]\n  (";
var G__300413 = (function (){var G__300504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300505 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300504,G__300505) : tailrecursion.hoplon.span.call(null,G__300504,G__300505));
})();
var G__300414 = "(";
var G__300415 = (function (){var G__300506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300507 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300506,G__300507) : tailrecursion.hoplon.span.call(null,G__300506,G__300507));
})();
var G__300416 = " ";
var G__300417 = (function (){var G__300508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300509 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300508,G__300509) : tailrecursion.hoplon.span.call(null,G__300508,G__300509));
})();
var G__300418 = ")\n     (";
var G__300419 = (function (){var G__300510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300511 = "Math/sin";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300510,G__300511) : tailrecursion.hoplon.span.call(null,G__300510,G__300511));
})();
var G__300420 = " (";
var G__300421 = (function (){var G__300512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300513 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300512,G__300513) : tailrecursion.hoplon.span.call(null,G__300512,G__300513));
})();
var G__300422 = " ";
var G__300423 = (function (){var G__300514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300515 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300514,G__300515) : tailrecursion.hoplon.span.call(null,G__300514,G__300515));
})();
var G__300424 = "))))\n\n(";
var G__300425 = (function (){var G__300516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300517 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300516,G__300517) : tailrecursion.hoplon.span.call(null,G__300516,G__300517));
})();
var G__300426 = (function (){var G__300518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300519 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300518,G__300519) : tailrecursion.hoplon.span.call(null,G__300518,G__300519));
})();
var G__300427 = " [";
var G__300428 = (function (){var G__300520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300521 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300520,G__300521) : tailrecursion.hoplon.span.call(null,G__300520,G__300521));
})();
var G__300429 = "]\n  (";
var G__300430 = (function (){var G__300522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300523 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300522,G__300523) : tailrecursion.hoplon.span.call(null,G__300522,G__300523));
})();
var G__300431 = (function (){var G__300524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300525 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300524,G__300525) : tailrecursion.hoplon.span.call(null,G__300524,G__300525));
})();
var G__300432 = "))\n\n(";
var G__300433 = (function (){var G__300526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300527 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300526,G__300527) : tailrecursion.hoplon.span.call(null,G__300526,G__300527));
})();
var G__300434 = (function (){var G__300528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300529 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300528,G__300529) : tailrecursion.hoplon.span.call(null,G__300528,G__300529));
})();
var G__300435 = " [";
var G__300436 = (function (){var G__300530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300531 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300530,G__300531) : tailrecursion.hoplon.span.call(null,G__300530,G__300531));
})();
var G__300437 = "]\n  (";
var G__300438 = (function (){var G__300532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300533 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300532,G__300533) : tailrecursion.hoplon.span.call(null,G__300532,G__300533));
})();
var G__300439 = (function (){var G__300534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300535 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300534,G__300535) : tailrecursion.hoplon.span.call(null,G__300534,G__300535));
})();
var G__300440 = "))\n\n(";
var G__300441 = (function (){var G__300536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300537 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300536,G__300537) : tailrecursion.hoplon.span.call(null,G__300536,G__300537));
})();
var G__300442 = (function (){var G__300538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300539 = "make-from-real-imag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300538,G__300539) : tailrecursion.hoplon.span.call(null,G__300538,G__300539));
})();
var G__300443 = " [";
var G__300444 = (function (){var G__300540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300541 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300540,G__300541) : tailrecursion.hoplon.span.call(null,G__300540,G__300541));
})();
var G__300445 = " ";
var G__300446 = (function (){var G__300542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300543 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300542,G__300543) : tailrecursion.hoplon.span.call(null,G__300542,G__300543));
})();
var G__300447 = "]\n  (";
var G__300448 = (function (){var G__300544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300545 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300544,G__300545) : tailrecursion.hoplon.span.call(null,G__300544,G__300545));
})();
var G__300449 = "(";
var G__300450 = (function (){var G__300546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300547 = "sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300546,G__300547) : tailrecursion.hoplon.span.call(null,G__300546,G__300547));
})();
var G__300451 = " (";
var G__300452 = (function (){var G__300548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300549 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300548,G__300549) : tailrecursion.hoplon.span.call(null,G__300548,G__300549));
})();
var G__300453 = "(";
var G__300454 = (function (){var G__300550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300551 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300550,G__300551) : tailrecursion.hoplon.span.call(null,G__300550,G__300551));
})();
var G__300455 = " ";
var G__300456 = (function (){var G__300552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300553 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300552,G__300553) : tailrecursion.hoplon.span.call(null,G__300552,G__300553));
})();
var G__300457 = ") \n                 (";
var G__300458 = (function (){var G__300554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300555 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300554,G__300555) : tailrecursion.hoplon.span.call(null,G__300554,G__300555));
})();
var G__300459 = " ";
var G__300460 = (function (){var G__300556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300557 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300556,G__300557) : tailrecursion.hoplon.span.call(null,G__300556,G__300557));
})();
var G__300461 = ")))\n        (";
var G__300462 = (function (){var G__300558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300559 = "arctan";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300558,G__300559) : tailrecursion.hoplon.span.call(null,G__300558,G__300559));
})();
var G__300463 = " ";
var G__300464 = (function (){var G__300560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300561 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300560,G__300561) : tailrecursion.hoplon.span.call(null,G__300560,G__300561));
})();
var G__300465 = " ";
var G__300466 = (function (){var G__300562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300563 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300562,G__300563) : tailrecursion.hoplon.span.call(null,G__300562,G__300563));
})();
var G__300467 = ")))\n\n(";
var G__300468 = (function (){var G__300564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300565 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300564,G__300565) : tailrecursion.hoplon.span.call(null,G__300564,G__300565));
})();
var G__300469 = (function (){var G__300566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300567 = "make-from-mag-ang";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300566,G__300567) : tailrecursion.hoplon.span.call(null,G__300566,G__300567));
})();
var G__300470 = " [";
var G__300471 = (function (){var G__300568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300569 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300568,G__300569) : tailrecursion.hoplon.span.call(null,G__300568,G__300569));
})();
var G__300472 = " ";
var G__300473 = (function (){var G__300570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300571 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300570,G__300571) : tailrecursion.hoplon.span.call(null,G__300570,G__300571));
})();
var G__300474 = "]\n  (";
var G__300475 = (function (){var G__300572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300573 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300572,G__300573) : tailrecursion.hoplon.span.call(null,G__300572,G__300573));
})();
var G__300476 = (function (){var G__300574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300575 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300574,G__300575) : tailrecursion.hoplon.span.call(null,G__300574,G__300575));
})();
var G__300477 = " ";
var G__300478 = (function (){var G__300576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300577 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300576,G__300577) : tailrecursion.hoplon.span.call(null,G__300576,G__300577));
})();
var G__300479 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$91 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$91(G__300389,G__300390,G__300391,G__300392,G__300393,G__300394,G__300395,G__300396,G__300397,G__300398,G__300399,G__300400,G__300401,G__300402,G__300403,G__300404,G__300405,G__300406,G__300407,G__300408,G__300409,G__300410,G__300411,G__300412,G__300413,G__300414,G__300415,G__300416,G__300417,G__300418,G__300419,G__300420,G__300421,G__300422,G__300423,G__300424,G__300425,G__300426,G__300427,G__300428,G__300429,G__300430,G__300431,G__300432,G__300433,G__300434,G__300435,G__300436,G__300437,G__300438,G__300439,G__300440,G__300441,G__300442,G__300443,G__300444,G__300445,G__300446,G__300447,G__300448,G__300449,G__300450,G__300451,G__300452,G__300453,G__300454,G__300455,G__300456,G__300457,G__300458,G__300459,G__300460,G__300461,G__300462,G__300463,G__300464,G__300465,G__300466,G__300467,G__300468,G__300469,G__300470,G__300471,G__300472,G__300473,G__300474,G__300475,G__300476,G__300477,G__300478,G__300479) : tailrecursion.hoplon.pre.call(null,G__300389,G__300390,G__300391,G__300392,G__300393,G__300394,G__300395,G__300396,G__300397,G__300398,G__300399,G__300400,G__300401,G__300402,G__300403,G__300404,G__300405,G__300406,G__300407,G__300408,G__300409,G__300410,G__300411,G__300412,G__300413,G__300414,G__300415,G__300416,G__300417,G__300418,G__300419,G__300420,G__300421,G__300422,G__300423,G__300424,G__300425,G__300426,G__300427,G__300428,G__300429,G__300430,G__300431,G__300432,G__300433,G__300434,G__300435,G__300436,G__300437,G__300438,G__300439,G__300440,G__300441,G__300442,G__300443,G__300444,G__300445,G__300446,G__300447,G__300448,G__300449,G__300450,G__300451,G__300452,G__300453,G__300454,G__300455,G__300456,G__300457,G__300458,G__300459,G__300460,G__300461,G__300462,G__300463,G__300464,G__300465,G__300466,G__300467,G__300468,G__300469,G__300470,G__300471,G__300472,G__300473,G__300474,G__300475,G__300476,G__300477,G__300478,G__300479));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__300387,G__300388) : tailrecursion.hoplon.div.call(null,G__300387,G__300388));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__300386) : tailrecursion.hoplon.div.call(null,G__300386));
})(),(function (){var G__300578 = cljs.core.PersistentArrayMap.EMPTY;
var G__300579 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The discipline of data abstraction ensures that the same implementation of ",(function (){var G__300580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-complex"], null);
var G__300581 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300580,G__300581) : tailrecursion.hoplon.markdown.code_node.call(null,G__300580,G__300581));
})(),", ",(function (){var G__300582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-complex"], null);
var G__300583 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300582,G__300583) : tailrecursion.hoplon.markdown.code_node.call(null,G__300582,G__300583));
})(),", ",(function (){var G__300584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mul-complex"], null);
var G__300585 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300584,G__300585) : tailrecursion.hoplon.markdown.code_node.call(null,G__300584,G__300585));
})(),", and ",(function (){var G__300586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"div-complex"], null);
var G__300587 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300586,G__300587) : tailrecursion.hoplon.markdown.code_node.call(null,G__300586,G__300587));
})()," will work with either Ben",(function (){var G__300588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__300589 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300588,G__300589) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300588,G__300589));
})(),"s representation or Alyssa",(function (){var G__300590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__300591 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300590,G__300591) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300590,G__300591));
})(),"s representation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300578,G__300579) : tailrecursion.hoplon.markdown.para_node.call(null,G__300578,G__300579));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_299233;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_299232;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_299231;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_299230;
}})()], 0));
var G__299130 = "";
var G__299131 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Tagged Data"], null),(function (){var _STAR_references_STAR_300592 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_300593 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_300594 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_300595 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__300596 = cljs.core.PersistentArrayMap.EMPTY;
var G__300597 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One way to view data abstraction is as an application of the ",(function (){var G__300598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__300599 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["principal of least commitment."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__300598,G__300599) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__300598,G__300599));
})()," In implementing the complex-number system in secion 2.4.1, we can use either Ben",(function (){var G__300600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__300601 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300600,G__300601) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300600,G__300601));
})(),"s rectangular representation or Alyssa",(function (){var G__300602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__300603 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300602,G__300603) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300602,G__300603));
})(),"s polar representation. The abstraction barrier formed by the selectors and constructors permits us to defer to the last possible moment the choice of a concrete representation for our data objects and thus retain maximum flexibility in our system design."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300596,G__300597) : tailrecursion.hoplon.markdown.para_node.call(null,G__300596,G__300597));
})(),(function (){var G__300604 = cljs.core.PersistentArrayMap.EMPTY;
var G__300605 = new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The principle of least commitment can be carried to even further extremes. If we desire, we can maintain the ambiguity of representation even ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["after"], null)], 0))," we have designed the selectors and constructors, and elect to use both Ben",(function (){var G__300606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__300607 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300606,G__300607) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300606,G__300607));
})(),"s representation ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and"], null)], 0))," Alyssa",(function (){var G__300608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__300609 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300608,G__300609) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300608,G__300609));
})(),"s representaion. If both representations are included in a single system, however, we will need some way to distinguish data in polar form from data in rectangular form. Otherwise, if we were asked, for instance, to find the ",(function (){var G__300610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"magnitude"], null);
var G__300611 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300610,G__300611) : tailrecursion.hoplon.markdown.code_node.call(null,G__300610,G__300611));
})()," of the pair (3,4), we wouldn",(function (){var G__300612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__300613 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300612,G__300613) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300612,G__300613));
})(),"t know whether to answer 5 (interpreting the number in rectangular form) or 3 (interpreting the number in polar form). A straightforward way to accomplish this distinction is to include a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["type tag"], null)], 0))," ",(function (){var G__300614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__300615 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300614,G__300615) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300614,G__300615));
})()," the symbol ",(function (){var G__300616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rectangular"], null);
var G__300617 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300616,G__300617) : tailrecursion.hoplon.markdown.code_node.call(null,G__300616,G__300617));
})()," or ",(function (){var G__300618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"polar"], null);
var G__300619 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300618,G__300619) : tailrecursion.hoplon.markdown.code_node.call(null,G__300618,G__300619));
})()," ",(function (){var G__300620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__300621 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300620,G__300621) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300620,G__300621));
})()," as part of each complex number. Then when we need to manipulate a complex number we can use the tag to decide which selector to apply."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300604,G__300605) : tailrecursion.hoplon.markdown.para_node.call(null,G__300604,G__300605));
})(),(function (){var G__300622 = cljs.core.PersistentArrayMap.EMPTY;
var G__300623 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In order to manipulate tagged data, we will assume that we have procedures ",(function (){var G__300624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"type-tag"], null);
var G__300625 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300624,G__300625) : tailrecursion.hoplon.markdown.code_node.call(null,G__300624,G__300625));
})()," and ",(function (){var G__300626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"contents"], null);
var G__300627 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300626,G__300627) : tailrecursion.hoplon.markdown.code_node.call(null,G__300626,G__300627));
})()," that extract from a data object the tag and the actual contents (the polar or rectangular coordinates, in the case of a complex number). We will also postulate a procedure ",(function (){var G__300628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"attach-tag"], null);
var G__300629 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300628,G__300629) : tailrecursion.hoplon.markdown.code_node.call(null,G__300628,G__300629));
})()," that takes a tag and contents and produces a tagged data object. A straightforward way to implement this is to ordinary list structure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300622,G__300623) : tailrecursion.hoplon.markdown.para_node.call(null,G__300622,G__300623));
})(),(function (){var G__300744 = (function (){var G__300745 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__300746 = (function (){var G__300747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__300748 = "(";
var G__300749 = (function (){var G__300801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300802 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300801,G__300802) : tailrecursion.hoplon.span.call(null,G__300801,G__300802));
})();
var G__300750 = (function (){var G__300803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300804 = "attach-tag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300803,G__300804) : tailrecursion.hoplon.span.call(null,G__300803,G__300804));
})();
var G__300751 = " [";
var G__300752 = (function (){var G__300805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300806 = "type-tag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300805,G__300806) : tailrecursion.hoplon.span.call(null,G__300805,G__300806));
})();
var G__300753 = " ";
var G__300754 = (function (){var G__300807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300808 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300807,G__300808) : tailrecursion.hoplon.span.call(null,G__300807,G__300808));
})();
var G__300755 = "]\n  (";
var G__300756 = (function (){var G__300809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300810 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300809,G__300810) : tailrecursion.hoplon.span.call(null,G__300809,G__300810));
})();
var G__300757 = (function (){var G__300811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300812 = "type-tag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300811,G__300812) : tailrecursion.hoplon.span.call(null,G__300811,G__300812));
})();
var G__300758 = " ";
var G__300759 = (function (){var G__300813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300814 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300813,G__300814) : tailrecursion.hoplon.span.call(null,G__300813,G__300814));
})();
var G__300760 = "))\n\n(";
var G__300761 = (function (){var G__300815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300816 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300815,G__300816) : tailrecursion.hoplon.span.call(null,G__300815,G__300816));
})();
var G__300762 = (function (){var G__300817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300818 = "type-tag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300817,G__300818) : tailrecursion.hoplon.span.call(null,G__300817,G__300818));
})();
var G__300763 = " [";
var G__300764 = (function (){var G__300819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300820 = "datum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300819,G__300820) : tailrecursion.hoplon.span.call(null,G__300819,G__300820));
})();
var G__300765 = "]\n  (";
var G__300766 = (function (){var G__300821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300822 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300821,G__300822) : tailrecursion.hoplon.span.call(null,G__300821,G__300822));
})();
var G__300767 = "(";
var G__300768 = (function (){var G__300823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300824 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300823,G__300824) : tailrecursion.hoplon.span.call(null,G__300823,G__300824));
})();
var G__300769 = " ";
var G__300770 = (function (){var G__300825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300826 = "datum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300825,G__300826) : tailrecursion.hoplon.span.call(null,G__300825,G__300826));
})();
var G__300771 = ")\n      (";
var G__300772 = (function (){var G__300827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300828 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300827,G__300828) : tailrecursion.hoplon.span.call(null,G__300827,G__300828));
})();
var G__300773 = (function (){var G__300829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300830 = "datum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300829,G__300830) : tailrecursion.hoplon.span.call(null,G__300829,G__300830));
})();
var G__300774 = ")\n      (";
var G__300775 = (function (){var G__300831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300832 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300831,G__300832) : tailrecursion.hoplon.span.call(null,G__300831,G__300832));
})();
var G__300776 = " (";
var G__300777 = (function (){var G__300833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300834 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300833,G__300834) : tailrecursion.hoplon.span.call(null,G__300833,G__300834));
})();
var G__300778 = " ";
var G__300779 = (function (){var G__300835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__300836 = "\"Bad tagged dataum -- TYPE-TAG\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300835,G__300836) : tailrecursion.hoplon.span.call(null,G__300835,G__300836));
})();
var G__300780 = "))))\n\n(";
var G__300781 = (function (){var G__300837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300838 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300837,G__300838) : tailrecursion.hoplon.span.call(null,G__300837,G__300838));
})();
var G__300782 = (function (){var G__300839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300840 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300839,G__300840) : tailrecursion.hoplon.span.call(null,G__300839,G__300840));
})();
var G__300783 = " [";
var G__300784 = (function (){var G__300841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300842 = "datum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300841,G__300842) : tailrecursion.hoplon.span.call(null,G__300841,G__300842));
})();
var G__300785 = "]\n  (";
var G__300786 = (function (){var G__300843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300844 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300843,G__300844) : tailrecursion.hoplon.span.call(null,G__300843,G__300844));
})();
var G__300787 = "(";
var G__300788 = (function (){var G__300845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300846 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300845,G__300846) : tailrecursion.hoplon.span.call(null,G__300845,G__300846));
})();
var G__300789 = " ";
var G__300790 = (function (){var G__300847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300848 = "datum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300847,G__300848) : tailrecursion.hoplon.span.call(null,G__300847,G__300848));
})();
var G__300791 = ")\n      (";
var G__300792 = (function (){var G__300849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300850 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300849,G__300850) : tailrecursion.hoplon.span.call(null,G__300849,G__300850));
})();
var G__300793 = (function (){var G__300851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300852 = "datum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300851,G__300852) : tailrecursion.hoplon.span.call(null,G__300851,G__300852));
})();
var G__300794 = ")\n      (";
var G__300795 = (function (){var G__300853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300854 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300853,G__300854) : tailrecursion.hoplon.span.call(null,G__300853,G__300854));
})();
var G__300796 = " (";
var G__300797 = (function (){var G__300855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300856 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300855,G__300856) : tailrecursion.hoplon.span.call(null,G__300855,G__300856));
})();
var G__300798 = " ";
var G__300799 = (function (){var G__300857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__300858 = "\"Bad tagged datum -- CONTENTS\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300857,G__300858) : tailrecursion.hoplon.span.call(null,G__300857,G__300858));
})();
var G__300800 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54(G__300747,G__300748,G__300749,G__300750,G__300751,G__300752,G__300753,G__300754,G__300755,G__300756,G__300757,G__300758,G__300759,G__300760,G__300761,G__300762,G__300763,G__300764,G__300765,G__300766,G__300767,G__300768,G__300769,G__300770,G__300771,G__300772,G__300773,G__300774,G__300775,G__300776,G__300777,G__300778,G__300779,G__300780,G__300781,G__300782,G__300783,G__300784,G__300785,G__300786,G__300787,G__300788,G__300789,G__300790,G__300791,G__300792,G__300793,G__300794,G__300795,G__300796,G__300797,G__300798,G__300799,G__300800) : tailrecursion.hoplon.pre.call(null,G__300747,G__300748,G__300749,G__300750,G__300751,G__300752,G__300753,G__300754,G__300755,G__300756,G__300757,G__300758,G__300759,G__300760,G__300761,G__300762,G__300763,G__300764,G__300765,G__300766,G__300767,G__300768,G__300769,G__300770,G__300771,G__300772,G__300773,G__300774,G__300775,G__300776,G__300777,G__300778,G__300779,G__300780,G__300781,G__300782,G__300783,G__300784,G__300785,G__300786,G__300787,G__300788,G__300789,G__300790,G__300791,G__300792,G__300793,G__300794,G__300795,G__300796,G__300797,G__300798,G__300799,G__300800));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__300745,G__300746) : tailrecursion.hoplon.div.call(null,G__300745,G__300746));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__300744) : tailrecursion.hoplon.div.call(null,G__300744));
})(),(function (){var G__300859 = cljs.core.PersistentArrayMap.EMPTY;
var G__300860 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using these procedures, we can define predicates ",(function (){var G__300861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rectangular?"], null);
var G__300862 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300861,G__300862) : tailrecursion.hoplon.markdown.code_node.call(null,G__300861,G__300862));
})()," and ",(function (){var G__300863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"polar?"], null);
var G__300864 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300863,G__300864) : tailrecursion.hoplon.markdown.code_node.call(null,G__300863,G__300864));
})(),", which recognize polar and rectangular numbers, respectively:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300859,G__300860) : tailrecursion.hoplon.markdown.para_node.call(null,G__300859,G__300860));
})(),(function (){var G__300923 = (function (){var G__300924 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__300925 = (function (){var G__300926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__300927 = "(";
var G__300928 = (function (){var G__300954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300955 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300954,G__300955) : tailrecursion.hoplon.span.call(null,G__300954,G__300955));
})();
var G__300929 = (function (){var G__300956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300957 = "rectangular?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300956,G__300957) : tailrecursion.hoplon.span.call(null,G__300956,G__300957));
})();
var G__300930 = " [";
var G__300931 = (function (){var G__300958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300959 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300958,G__300959) : tailrecursion.hoplon.span.call(null,G__300958,G__300959));
})();
var G__300932 = "]\n  (";
var G__300933 = (function (){var G__300960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300961 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300960,G__300961) : tailrecursion.hoplon.span.call(null,G__300960,G__300961));
})();
var G__300934 = "(";
var G__300935 = (function (){var G__300962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300963 = "type-tag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300962,G__300963) : tailrecursion.hoplon.span.call(null,G__300962,G__300963));
})();
var G__300936 = " ";
var G__300937 = (function (){var G__300964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300965 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300964,G__300965) : tailrecursion.hoplon.span.call(null,G__300964,G__300965));
})();
var G__300938 = ") ";
var G__300939 = (function (){var G__300966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300967 = "'rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300966,G__300967) : tailrecursion.hoplon.span.call(null,G__300966,G__300967));
})();
var G__300940 = "))\n\n(";
var G__300941 = (function (){var G__300968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300969 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300968,G__300969) : tailrecursion.hoplon.span.call(null,G__300968,G__300969));
})();
var G__300942 = (function (){var G__300970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300971 = "polar?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300970,G__300971) : tailrecursion.hoplon.span.call(null,G__300970,G__300971));
})();
var G__300943 = " [";
var G__300944 = (function (){var G__300972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300973 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300972,G__300973) : tailrecursion.hoplon.span.call(null,G__300972,G__300973));
})();
var G__300945 = "]\n  (";
var G__300946 = (function (){var G__300974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300975 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300974,G__300975) : tailrecursion.hoplon.span.call(null,G__300974,G__300975));
})();
var G__300947 = "(";
var G__300948 = (function (){var G__300976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300977 = "type-tag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300976,G__300977) : tailrecursion.hoplon.span.call(null,G__300976,G__300977));
})();
var G__300949 = " ";
var G__300950 = (function (){var G__300978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300979 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300978,G__300979) : tailrecursion.hoplon.span.call(null,G__300978,G__300979));
})();
var G__300951 = ") ";
var G__300952 = (function (){var G__300980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300981 = "'polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300980,G__300981) : tailrecursion.hoplon.span.call(null,G__300980,G__300981));
})();
var G__300953 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__300926,G__300927,G__300928,G__300929,G__300930,G__300931,G__300932,G__300933,G__300934,G__300935,G__300936,G__300937,G__300938,G__300939,G__300940,G__300941,G__300942,G__300943,G__300944,G__300945,G__300946,G__300947,G__300948,G__300949,G__300950,G__300951,G__300952,G__300953) : tailrecursion.hoplon.pre.call(null,G__300926,G__300927,G__300928,G__300929,G__300930,G__300931,G__300932,G__300933,G__300934,G__300935,G__300936,G__300937,G__300938,G__300939,G__300940,G__300941,G__300942,G__300943,G__300944,G__300945,G__300946,G__300947,G__300948,G__300949,G__300950,G__300951,G__300952,G__300953));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__300924,G__300925) : tailrecursion.hoplon.div.call(null,G__300924,G__300925));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__300923) : tailrecursion.hoplon.div.call(null,G__300923));
})(),(function (){var G__300982 = cljs.core.PersistentArrayMap.EMPTY;
var G__300983 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With type tags, Ben and Alyssa can now modify their code so that their two different representations can coexist in the same system. Whenever Ben constructs a complex number, he tags it as rectangular. Whenever Alyssa constructs a complex number, she tags it as polar. In addition, Ben and Alyssa must make sure that the names of their procedures do not conflict. One way to do this is for Ben to append the suffix ",(function (){var G__300984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rectangular"], null);
var G__300985 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300984,G__300985) : tailrecursion.hoplon.markdown.code_node.call(null,G__300984,G__300985));
})()," to the name of each of his representation procedures and for Alyssa to append ",(function (){var G__300986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"polar"], null);
var G__300987 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300986,G__300987) : tailrecursion.hoplon.markdown.code_node.call(null,G__300986,G__300987));
})()," to the names of hers. Here is Ben",(function (){var G__300988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__300989 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300988,G__300989) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300988,G__300989));
})(),"s revised rectangular representation from section 2.4.1:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300982,G__300983) : tailrecursion.hoplon.markdown.para_node.call(null,G__300982,G__300983));
})(),(function (){var G__301195 = (function (){var G__301196 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__301197 = (function (){var G__301198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__301199 = "(";
var G__301200 = (function (){var G__301295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301296 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301295,G__301296) : tailrecursion.hoplon.span.call(null,G__301295,G__301296));
})();
var G__301201 = (function (){var G__301297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301298 = "real-part-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301297,G__301298) : tailrecursion.hoplon.span.call(null,G__301297,G__301298));
})();
var G__301202 = " [";
var G__301203 = (function (){var G__301299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301300 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301299,G__301300) : tailrecursion.hoplon.span.call(null,G__301299,G__301300));
})();
var G__301204 = "] (";
var G__301205 = (function (){var G__301301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301302 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301301,G__301302) : tailrecursion.hoplon.span.call(null,G__301301,G__301302));
})();
var G__301206 = (function (){var G__301303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301304 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301303,G__301304) : tailrecursion.hoplon.span.call(null,G__301303,G__301304));
})();
var G__301207 = "))\n\n(";
var G__301208 = (function (){var G__301305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301306 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301305,G__301306) : tailrecursion.hoplon.span.call(null,G__301305,G__301306));
})();
var G__301209 = (function (){var G__301307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301308 = "imag-part-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301307,G__301308) : tailrecursion.hoplon.span.call(null,G__301307,G__301308));
})();
var G__301210 = " [";
var G__301211 = (function (){var G__301309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301310 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301309,G__301310) : tailrecursion.hoplon.span.call(null,G__301309,G__301310));
})();
var G__301212 = "] (";
var G__301213 = (function (){var G__301311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301312 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301311,G__301312) : tailrecursion.hoplon.span.call(null,G__301311,G__301312));
})();
var G__301214 = (function (){var G__301313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301314 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301313,G__301314) : tailrecursion.hoplon.span.call(null,G__301313,G__301314));
})();
var G__301215 = "))\n\n(";
var G__301216 = (function (){var G__301315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301316 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301315,G__301316) : tailrecursion.hoplon.span.call(null,G__301315,G__301316));
})();
var G__301217 = (function (){var G__301317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301318 = "magnitude-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301317,G__301318) : tailrecursion.hoplon.span.call(null,G__301317,G__301318));
})();
var G__301218 = " [";
var G__301219 = (function (){var G__301319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301320 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301319,G__301320) : tailrecursion.hoplon.span.call(null,G__301319,G__301320));
})();
var G__301220 = "]\n  (";
var G__301221 = (function (){var G__301321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301322 = "sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301321,G__301322) : tailrecursion.hoplon.span.call(null,G__301321,G__301322));
})();
var G__301222 = " (";
var G__301223 = (function (){var G__301323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301324 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301323,G__301324) : tailrecursion.hoplon.span.call(null,G__301323,G__301324));
})();
var G__301224 = "(";
var G__301225 = (function (){var G__301325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301326 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301325,G__301326) : tailrecursion.hoplon.span.call(null,G__301325,G__301326));
})();
var G__301226 = " (";
var G__301227 = (function (){var G__301327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301328 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301327,G__301328) : tailrecursion.hoplon.span.call(null,G__301327,G__301328));
})();
var G__301228 = " ";
var G__301229 = (function (){var G__301329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301330 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301329,G__301330) : tailrecursion.hoplon.span.call(null,G__301329,G__301330));
})();
var G__301230 = ")) (";
var G__301231 = (function (){var G__301331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301332 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301331,G__301332) : tailrecursion.hoplon.span.call(null,G__301331,G__301332));
})();
var G__301232 = " (";
var G__301233 = (function (){var G__301333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301334 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301333,G__301334) : tailrecursion.hoplon.span.call(null,G__301333,G__301334));
})();
var G__301234 = " ";
var G__301235 = (function (){var G__301335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301336 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301335,G__301336) : tailrecursion.hoplon.span.call(null,G__301335,G__301336));
})();
var G__301236 = ")))))\n\n(";
var G__301237 = (function (){var G__301337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301338 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301337,G__301338) : tailrecursion.hoplon.span.call(null,G__301337,G__301338));
})();
var G__301238 = (function (){var G__301339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301340 = "angle-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301339,G__301340) : tailrecursion.hoplon.span.call(null,G__301339,G__301340));
})();
var G__301239 = " [";
var G__301240 = (function (){var G__301341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301342 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301341,G__301342) : tailrecursion.hoplon.span.call(null,G__301341,G__301342));
})();
var G__301241 = "]\n  (";
var G__301242 = (function (){var G__301343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301344 = "arctan";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301343,G__301344) : tailrecursion.hoplon.span.call(null,G__301343,G__301344));
})();
var G__301243 = " (";
var G__301244 = (function (){var G__301345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301346 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301345,G__301346) : tailrecursion.hoplon.span.call(null,G__301345,G__301346));
})();
var G__301245 = " ";
var G__301246 = (function (){var G__301347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301348 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301347,G__301348) : tailrecursion.hoplon.span.call(null,G__301347,G__301348));
})();
var G__301247 = ") (";
var G__301248 = (function (){var G__301349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301350 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301349,G__301350) : tailrecursion.hoplon.span.call(null,G__301349,G__301350));
})();
var G__301249 = " ";
var G__301250 = (function (){var G__301351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301352 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301351,G__301352) : tailrecursion.hoplon.span.call(null,G__301351,G__301352));
})();
var G__301251 = ")))\n\n(";
var G__301252 = (function (){var G__301353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301354 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301353,G__301354) : tailrecursion.hoplon.span.call(null,G__301353,G__301354));
})();
var G__301253 = (function (){var G__301355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301356 = "make-from-real-imag-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301355,G__301356) : tailrecursion.hoplon.span.call(null,G__301355,G__301356));
})();
var G__301254 = " [";
var G__301255 = (function (){var G__301357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301358 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301357,G__301358) : tailrecursion.hoplon.span.call(null,G__301357,G__301358));
})();
var G__301256 = " ";
var G__301257 = (function (){var G__301359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301360 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301359,G__301360) : tailrecursion.hoplon.span.call(null,G__301359,G__301360));
})();
var G__301258 = "]\n  (";
var G__301259 = (function (){var G__301361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301362 = "attach-tag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301361,G__301362) : tailrecursion.hoplon.span.call(null,G__301361,G__301362));
})();
var G__301260 = " ";
var G__301261 = (function (){var G__301363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301364 = "'rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301363,G__301364) : tailrecursion.hoplon.span.call(null,G__301363,G__301364));
})();
var G__301262 = " (";
var G__301263 = (function (){var G__301365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301366 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301365,G__301366) : tailrecursion.hoplon.span.call(null,G__301365,G__301366));
})();
var G__301264 = (function (){var G__301367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301368 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301367,G__301368) : tailrecursion.hoplon.span.call(null,G__301367,G__301368));
})();
var G__301265 = " ";
var G__301266 = (function (){var G__301369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301370 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301369,G__301370) : tailrecursion.hoplon.span.call(null,G__301369,G__301370));
})();
var G__301267 = ")))\n\n(";
var G__301268 = (function (){var G__301371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301372 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301371,G__301372) : tailrecursion.hoplon.span.call(null,G__301371,G__301372));
})();
var G__301269 = (function (){var G__301373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301374 = "make-from-mag-ang-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301373,G__301374) : tailrecursion.hoplon.span.call(null,G__301373,G__301374));
})();
var G__301270 = " [";
var G__301271 = (function (){var G__301375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301376 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301375,G__301376) : tailrecursion.hoplon.span.call(null,G__301375,G__301376));
})();
var G__301272 = " ";
var G__301273 = (function (){var G__301377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301378 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301377,G__301378) : tailrecursion.hoplon.span.call(null,G__301377,G__301378));
})();
var G__301274 = "]\n  (";
var G__301275 = (function (){var G__301379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301380 = "attach-tag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301379,G__301380) : tailrecursion.hoplon.span.call(null,G__301379,G__301380));
})();
var G__301276 = " ";
var G__301277 = (function (){var G__301381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301382 = "'rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301381,G__301382) : tailrecursion.hoplon.span.call(null,G__301381,G__301382));
})();
var G__301278 = " \n    (";
var G__301279 = (function (){var G__301383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301384 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301383,G__301384) : tailrecursion.hoplon.span.call(null,G__301383,G__301384));
})();
var G__301280 = "(";
var G__301281 = (function (){var G__301385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301386 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301385,G__301386) : tailrecursion.hoplon.span.call(null,G__301385,G__301386));
})();
var G__301282 = (function (){var G__301387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301388 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301387,G__301388) : tailrecursion.hoplon.span.call(null,G__301387,G__301388));
})();
var G__301283 = " (";
var G__301284 = (function (){var G__301389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301390 = "Math/cos";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301389,G__301390) : tailrecursion.hoplon.span.call(null,G__301389,G__301390));
})();
var G__301285 = " ";
var G__301286 = (function (){var G__301391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301392 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301391,G__301392) : tailrecursion.hoplon.span.call(null,G__301391,G__301392));
})();
var G__301287 = ")) \n          (";
var G__301288 = (function (){var G__301393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301394 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301393,G__301394) : tailrecursion.hoplon.span.call(null,G__301393,G__301394));
})();
var G__301289 = (function (){var G__301395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301396 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301395,G__301396) : tailrecursion.hoplon.span.call(null,G__301395,G__301396));
})();
var G__301290 = " (";
var G__301291 = (function (){var G__301397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301398 = "Math/sin";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301397,G__301398) : tailrecursion.hoplon.span.call(null,G__301397,G__301398));
})();
var G__301292 = " ";
var G__301293 = (function (){var G__301399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301400 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301399,G__301400) : tailrecursion.hoplon.span.call(null,G__301399,G__301400));
})();
var G__301294 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$97 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$97(G__301198,G__301199,G__301200,G__301201,G__301202,G__301203,G__301204,G__301205,G__301206,G__301207,G__301208,G__301209,G__301210,G__301211,G__301212,G__301213,G__301214,G__301215,G__301216,G__301217,G__301218,G__301219,G__301220,G__301221,G__301222,G__301223,G__301224,G__301225,G__301226,G__301227,G__301228,G__301229,G__301230,G__301231,G__301232,G__301233,G__301234,G__301235,G__301236,G__301237,G__301238,G__301239,G__301240,G__301241,G__301242,G__301243,G__301244,G__301245,G__301246,G__301247,G__301248,G__301249,G__301250,G__301251,G__301252,G__301253,G__301254,G__301255,G__301256,G__301257,G__301258,G__301259,G__301260,G__301261,G__301262,G__301263,G__301264,G__301265,G__301266,G__301267,G__301268,G__301269,G__301270,G__301271,G__301272,G__301273,G__301274,G__301275,G__301276,G__301277,G__301278,G__301279,G__301280,G__301281,G__301282,G__301283,G__301284,G__301285,G__301286,G__301287,G__301288,G__301289,G__301290,G__301291,G__301292,G__301293,G__301294) : tailrecursion.hoplon.pre.call(null,G__301198,G__301199,G__301200,G__301201,G__301202,G__301203,G__301204,G__301205,G__301206,G__301207,G__301208,G__301209,G__301210,G__301211,G__301212,G__301213,G__301214,G__301215,G__301216,G__301217,G__301218,G__301219,G__301220,G__301221,G__301222,G__301223,G__301224,G__301225,G__301226,G__301227,G__301228,G__301229,G__301230,G__301231,G__301232,G__301233,G__301234,G__301235,G__301236,G__301237,G__301238,G__301239,G__301240,G__301241,G__301242,G__301243,G__301244,G__301245,G__301246,G__301247,G__301248,G__301249,G__301250,G__301251,G__301252,G__301253,G__301254,G__301255,G__301256,G__301257,G__301258,G__301259,G__301260,G__301261,G__301262,G__301263,G__301264,G__301265,G__301266,G__301267,G__301268,G__301269,G__301270,G__301271,G__301272,G__301273,G__301274,G__301275,G__301276,G__301277,G__301278,G__301279,G__301280,G__301281,G__301282,G__301283,G__301284,G__301285,G__301286,G__301287,G__301288,G__301289,G__301290,G__301291,G__301292,G__301293,G__301294));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__301196,G__301197) : tailrecursion.hoplon.div.call(null,G__301196,G__301197));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__301195) : tailrecursion.hoplon.div.call(null,G__301195));
})(),(function (){var G__301401 = cljs.core.PersistentArrayMap.EMPTY;
var G__301402 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and here is Alyssa",(function (){var G__301403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__301404 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__301403,G__301404) : tailrecursion.hoplon.markdown.simple_node.call(null,G__301403,G__301404));
})(),"s revised polar representation:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__301401,G__301402) : tailrecursion.hoplon.markdown.para_node.call(null,G__301401,G__301402));
})(),(function (){var G__301612 = (function (){var G__301613 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__301614 = (function (){var G__301615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__301616 = "(";
var G__301617 = (function (){var G__301714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301715 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301714,G__301715) : tailrecursion.hoplon.span.call(null,G__301714,G__301715));
})();
var G__301618 = (function (){var G__301716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301717 = "real-part-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301716,G__301717) : tailrecursion.hoplon.span.call(null,G__301716,G__301717));
})();
var G__301619 = " [";
var G__301620 = (function (){var G__301718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301719 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301718,G__301719) : tailrecursion.hoplon.span.call(null,G__301718,G__301719));
})();
var G__301621 = "]\n  (";
var G__301622 = (function (){var G__301720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301721 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301720,G__301721) : tailrecursion.hoplon.span.call(null,G__301720,G__301721));
})();
var G__301623 = "(";
var G__301624 = (function (){var G__301722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301723 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301722,G__301723) : tailrecursion.hoplon.span.call(null,G__301722,G__301723));
})();
var G__301625 = " ";
var G__301626 = (function (){var G__301724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301725 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301724,G__301725) : tailrecursion.hoplon.span.call(null,G__301724,G__301725));
})();
var G__301627 = ") \n     (";
var G__301628 = (function (){var G__301726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301727 = "Math/cos";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301726,G__301727) : tailrecursion.hoplon.span.call(null,G__301726,G__301727));
})();
var G__301629 = " (";
var G__301630 = (function (){var G__301728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301729 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301728,G__301729) : tailrecursion.hoplon.span.call(null,G__301728,G__301729));
})();
var G__301631 = " ";
var G__301632 = (function (){var G__301730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301731 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301730,G__301731) : tailrecursion.hoplon.span.call(null,G__301730,G__301731));
})();
var G__301633 = "))))\n\n(";
var G__301634 = (function (){var G__301732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301733 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301732,G__301733) : tailrecursion.hoplon.span.call(null,G__301732,G__301733));
})();
var G__301635 = (function (){var G__301734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301735 = "imag-part-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301734,G__301735) : tailrecursion.hoplon.span.call(null,G__301734,G__301735));
})();
var G__301636 = " [";
var G__301637 = (function (){var G__301736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301737 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301736,G__301737) : tailrecursion.hoplon.span.call(null,G__301736,G__301737));
})();
var G__301638 = "]\n  (";
var G__301639 = (function (){var G__301738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301739 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301738,G__301739) : tailrecursion.hoplon.span.call(null,G__301738,G__301739));
})();
var G__301640 = "(";
var G__301641 = (function (){var G__301740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301741 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301740,G__301741) : tailrecursion.hoplon.span.call(null,G__301740,G__301741));
})();
var G__301642 = " ";
var G__301643 = (function (){var G__301742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301743 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301742,G__301743) : tailrecursion.hoplon.span.call(null,G__301742,G__301743));
})();
var G__301644 = ")\n     (";
var G__301645 = (function (){var G__301744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301745 = "Math/sin";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301744,G__301745) : tailrecursion.hoplon.span.call(null,G__301744,G__301745));
})();
var G__301646 = " (";
var G__301647 = (function (){var G__301746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301747 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301746,G__301747) : tailrecursion.hoplon.span.call(null,G__301746,G__301747));
})();
var G__301648 = " ";
var G__301649 = (function (){var G__301748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301749 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301748,G__301749) : tailrecursion.hoplon.span.call(null,G__301748,G__301749));
})();
var G__301650 = "))))\n\n(";
var G__301651 = (function (){var G__301750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301751 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301750,G__301751) : tailrecursion.hoplon.span.call(null,G__301750,G__301751));
})();
var G__301652 = (function (){var G__301752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301753 = "magnitude-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301752,G__301753) : tailrecursion.hoplon.span.call(null,G__301752,G__301753));
})();
var G__301653 = " [";
var G__301654 = (function (){var G__301754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301755 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301754,G__301755) : tailrecursion.hoplon.span.call(null,G__301754,G__301755));
})();
var G__301655 = "]\n  (";
var G__301656 = (function (){var G__301756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301757 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301756,G__301757) : tailrecursion.hoplon.span.call(null,G__301756,G__301757));
})();
var G__301657 = (function (){var G__301758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301759 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301758,G__301759) : tailrecursion.hoplon.span.call(null,G__301758,G__301759));
})();
var G__301658 = "))\n\n(";
var G__301659 = (function (){var G__301760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301761 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301760,G__301761) : tailrecursion.hoplon.span.call(null,G__301760,G__301761));
})();
var G__301660 = (function (){var G__301762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301763 = "angle-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301762,G__301763) : tailrecursion.hoplon.span.call(null,G__301762,G__301763));
})();
var G__301661 = " [";
var G__301662 = (function (){var G__301764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301765 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301764,G__301765) : tailrecursion.hoplon.span.call(null,G__301764,G__301765));
})();
var G__301663 = "]\n  (";
var G__301664 = (function (){var G__301766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301767 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301766,G__301767) : tailrecursion.hoplon.span.call(null,G__301766,G__301767));
})();
var G__301665 = (function (){var G__301768 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301769 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301768,G__301769) : tailrecursion.hoplon.span.call(null,G__301768,G__301769));
})();
var G__301666 = "))\n\n(";
var G__301667 = (function (){var G__301770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301771 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301770,G__301771) : tailrecursion.hoplon.span.call(null,G__301770,G__301771));
})();
var G__301668 = (function (){var G__301772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301773 = "make-from-real-imag-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301772,G__301773) : tailrecursion.hoplon.span.call(null,G__301772,G__301773));
})();
var G__301669 = " [";
var G__301670 = (function (){var G__301774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301775 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301774,G__301775) : tailrecursion.hoplon.span.call(null,G__301774,G__301775));
})();
var G__301671 = " ";
var G__301672 = (function (){var G__301776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301777 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301776,G__301777) : tailrecursion.hoplon.span.call(null,G__301776,G__301777));
})();
var G__301673 = "]\n  (";
var G__301674 = (function (){var G__301778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301779 = "attach-tag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301778,G__301779) : tailrecursion.hoplon.span.call(null,G__301778,G__301779));
})();
var G__301675 = " ";
var G__301676 = (function (){var G__301780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301781 = "'polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301780,G__301781) : tailrecursion.hoplon.span.call(null,G__301780,G__301781));
})();
var G__301677 = "\n              (";
var G__301678 = (function (){var G__301782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301783 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301782,G__301783) : tailrecursion.hoplon.span.call(null,G__301782,G__301783));
})();
var G__301679 = "(";
var G__301680 = (function (){var G__301784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301785 = "sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301784,G__301785) : tailrecursion.hoplon.span.call(null,G__301784,G__301785));
})();
var G__301681 = " (";
var G__301682 = (function (){var G__301786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301787 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301786,G__301787) : tailrecursion.hoplon.span.call(null,G__301786,G__301787));
})();
var G__301683 = "(";
var G__301684 = (function (){var G__301788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301789 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301788,G__301789) : tailrecursion.hoplon.span.call(null,G__301788,G__301789));
})();
var G__301685 = " ";
var G__301686 = (function (){var G__301790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301791 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301790,G__301791) : tailrecursion.hoplon.span.call(null,G__301790,G__301791));
})();
var G__301687 = ") \n                             (";
var G__301688 = (function (){var G__301792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301793 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301792,G__301793) : tailrecursion.hoplon.span.call(null,G__301792,G__301793));
})();
var G__301689 = " ";
var G__301690 = (function (){var G__301794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301795 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301794,G__301795) : tailrecursion.hoplon.span.call(null,G__301794,G__301795));
})();
var G__301691 = ")))\n                    (";
var G__301692 = (function (){var G__301796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301797 = "arctan";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301796,G__301797) : tailrecursion.hoplon.span.call(null,G__301796,G__301797));
})();
var G__301693 = " ";
var G__301694 = (function (){var G__301798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301799 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301798,G__301799) : tailrecursion.hoplon.span.call(null,G__301798,G__301799));
})();
var G__301695 = " ";
var G__301696 = (function (){var G__301800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301801 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301800,G__301801) : tailrecursion.hoplon.span.call(null,G__301800,G__301801));
})();
var G__301697 = "))))\n\n(";
var G__301698 = (function (){var G__301802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301803 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301802,G__301803) : tailrecursion.hoplon.span.call(null,G__301802,G__301803));
})();
var G__301699 = (function (){var G__301804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301805 = "make-from-mag-ang-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301804,G__301805) : tailrecursion.hoplon.span.call(null,G__301804,G__301805));
})();
var G__301700 = " [";
var G__301701 = (function (){var G__301806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301807 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301806,G__301807) : tailrecursion.hoplon.span.call(null,G__301806,G__301807));
})();
var G__301702 = " ";
var G__301703 = (function (){var G__301808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301809 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301808,G__301809) : tailrecursion.hoplon.span.call(null,G__301808,G__301809));
})();
var G__301704 = "]\n  (";
var G__301705 = (function (){var G__301810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301811 = "attach-tag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301810,G__301811) : tailrecursion.hoplon.span.call(null,G__301810,G__301811));
})();
var G__301706 = " ";
var G__301707 = (function (){var G__301812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301813 = "'polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301812,G__301813) : tailrecursion.hoplon.span.call(null,G__301812,G__301813));
})();
var G__301708 = "\n              (";
var G__301709 = (function (){var G__301814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301815 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301814,G__301815) : tailrecursion.hoplon.span.call(null,G__301814,G__301815));
})();
var G__301710 = (function (){var G__301816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301817 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301816,G__301817) : tailrecursion.hoplon.span.call(null,G__301816,G__301817));
})();
var G__301711 = " ";
var G__301712 = (function (){var G__301818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301819 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301818,G__301819) : tailrecursion.hoplon.span.call(null,G__301818,G__301819));
})();
var G__301713 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$99 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$99(G__301615,G__301616,G__301617,G__301618,G__301619,G__301620,G__301621,G__301622,G__301623,G__301624,G__301625,G__301626,G__301627,G__301628,G__301629,G__301630,G__301631,G__301632,G__301633,G__301634,G__301635,G__301636,G__301637,G__301638,G__301639,G__301640,G__301641,G__301642,G__301643,G__301644,G__301645,G__301646,G__301647,G__301648,G__301649,G__301650,G__301651,G__301652,G__301653,G__301654,G__301655,G__301656,G__301657,G__301658,G__301659,G__301660,G__301661,G__301662,G__301663,G__301664,G__301665,G__301666,G__301667,G__301668,G__301669,G__301670,G__301671,G__301672,G__301673,G__301674,G__301675,G__301676,G__301677,G__301678,G__301679,G__301680,G__301681,G__301682,G__301683,G__301684,G__301685,G__301686,G__301687,G__301688,G__301689,G__301690,G__301691,G__301692,G__301693,G__301694,G__301695,G__301696,G__301697,G__301698,G__301699,G__301700,G__301701,G__301702,G__301703,G__301704,G__301705,G__301706,G__301707,G__301708,G__301709,G__301710,G__301711,G__301712,G__301713) : tailrecursion.hoplon.pre.call(null,G__301615,G__301616,G__301617,G__301618,G__301619,G__301620,G__301621,G__301622,G__301623,G__301624,G__301625,G__301626,G__301627,G__301628,G__301629,G__301630,G__301631,G__301632,G__301633,G__301634,G__301635,G__301636,G__301637,G__301638,G__301639,G__301640,G__301641,G__301642,G__301643,G__301644,G__301645,G__301646,G__301647,G__301648,G__301649,G__301650,G__301651,G__301652,G__301653,G__301654,G__301655,G__301656,G__301657,G__301658,G__301659,G__301660,G__301661,G__301662,G__301663,G__301664,G__301665,G__301666,G__301667,G__301668,G__301669,G__301670,G__301671,G__301672,G__301673,G__301674,G__301675,G__301676,G__301677,G__301678,G__301679,G__301680,G__301681,G__301682,G__301683,G__301684,G__301685,G__301686,G__301687,G__301688,G__301689,G__301690,G__301691,G__301692,G__301693,G__301694,G__301695,G__301696,G__301697,G__301698,G__301699,G__301700,G__301701,G__301702,G__301703,G__301704,G__301705,G__301706,G__301707,G__301708,G__301709,G__301710,G__301711,G__301712,G__301713));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__301613,G__301614) : tailrecursion.hoplon.div.call(null,G__301613,G__301614));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__301612) : tailrecursion.hoplon.div.call(null,G__301612));
})(),(function (){var G__301820 = cljs.core.PersistentArrayMap.EMPTY;
var G__301821 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Each generic selector is implemented as a procedure that checks the tag of its argument and calls the appropriate procedure for handling data of that type. For example, to obtain the real part of a complex number, ",(function (){var G__301822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"real-part"], null);
var G__301823 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__301822,G__301823) : tailrecursion.hoplon.markdown.code_node.call(null,G__301822,G__301823));
})()," examines the tag to determine whether to use Ben",(function (){var G__301824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__301825 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__301824,G__301825) : tailrecursion.hoplon.markdown.simple_node.call(null,G__301824,G__301825));
})(),"s ",(function (){var G__301826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"real-part-rectangular"], null);
var G__301827 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__301826,G__301827) : tailrecursion.hoplon.markdown.code_node.call(null,G__301826,G__301827));
})()," or Alyssa",(function (){var G__301828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__301829 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__301828,G__301829) : tailrecursion.hoplon.markdown.simple_node.call(null,G__301828,G__301829));
})(),"s ",(function (){var G__301830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"real-part-polar"], null);
var G__301831 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__301830,G__301831) : tailrecursion.hoplon.markdown.code_node.call(null,G__301830,G__301831));
})(),". In either case, we use ",(function (){var G__301832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"contents"], null);
var G__301833 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__301832,G__301833) : tailrecursion.hoplon.markdown.code_node.call(null,G__301832,G__301833));
})()," to extract the bare, untagged datum and send this to the rectangular or polar procedure as required:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__301820,G__301821) : tailrecursion.hoplon.markdown.para_node.call(null,G__301820,G__301821));
})(),(function (){var G__302122 = (function (){var G__302123 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__302124 = (function (){var G__302125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__302126 = "(";
var G__302127 = (function (){var G__302267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__302268 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302267,G__302268) : tailrecursion.hoplon.span.call(null,G__302267,G__302268));
})();
var G__302128 = (function (){var G__302269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302270 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302269,G__302270) : tailrecursion.hoplon.span.call(null,G__302269,G__302270));
})();
var G__302129 = " [";
var G__302130 = (function (){var G__302271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302272 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302271,G__302272) : tailrecursion.hoplon.span.call(null,G__302271,G__302272));
})();
var G__302131 = "]\n  (";
var G__302132 = (function (){var G__302273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__302274 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302273,G__302274) : tailrecursion.hoplon.span.call(null,G__302273,G__302274));
})();
var G__302133 = "(";
var G__302134 = (function (){var G__302275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302276 = "rectangular?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302275,G__302276) : tailrecursion.hoplon.span.call(null,G__302275,G__302276));
})();
var G__302135 = " ";
var G__302136 = (function (){var G__302277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302278 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302277,G__302278) : tailrecursion.hoplon.span.call(null,G__302277,G__302278));
})();
var G__302137 = ") (";
var G__302138 = (function (){var G__302279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302280 = "real-part-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302279,G__302280) : tailrecursion.hoplon.span.call(null,G__302279,G__302280));
})();
var G__302139 = " (";
var G__302140 = (function (){var G__302281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302282 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302281,G__302282) : tailrecursion.hoplon.span.call(null,G__302281,G__302282));
})();
var G__302141 = " ";
var G__302142 = (function (){var G__302283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302284 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302283,G__302284) : tailrecursion.hoplon.span.call(null,G__302283,G__302284));
})();
var G__302143 = "))\n        (";
var G__302144 = (function (){var G__302285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302286 = "polar?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302285,G__302286) : tailrecursion.hoplon.span.call(null,G__302285,G__302286));
})();
var G__302145 = " ";
var G__302146 = (function (){var G__302287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302288 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302287,G__302288) : tailrecursion.hoplon.span.call(null,G__302287,G__302288));
})();
var G__302147 = ")       (";
var G__302148 = (function (){var G__302289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302290 = "real-part-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302289,G__302290) : tailrecursion.hoplon.span.call(null,G__302289,G__302290));
})();
var G__302149 = "       (";
var G__302150 = (function (){var G__302291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302292 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302291,G__302292) : tailrecursion.hoplon.span.call(null,G__302291,G__302292));
})();
var G__302151 = " ";
var G__302152 = (function (){var G__302293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302294 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302293,G__302294) : tailrecursion.hoplon.span.call(null,G__302293,G__302294));
})();
var G__302153 = "))\n        ";
var G__302154 = (function (){var G__302295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302296 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302295,G__302296) : tailrecursion.hoplon.span.call(null,G__302295,G__302296));
})();
var G__302155 = " (";
var G__302156 = (function (){var G__302297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302298 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302297,G__302298) : tailrecursion.hoplon.span.call(null,G__302297,G__302298));
})();
var G__302157 = " (";
var G__302158 = (function (){var G__302299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302300 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302299,G__302300) : tailrecursion.hoplon.span.call(null,G__302299,G__302300));
})();
var G__302159 = " ";
var G__302160 = (function (){var G__302301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__302302 = "\"Unknown type -- REAL-PART\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302301,G__302302) : tailrecursion.hoplon.span.call(null,G__302301,G__302302));
})();
var G__302161 = "))))\n\n(";
var G__302162 = (function (){var G__302303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__302304 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302303,G__302304) : tailrecursion.hoplon.span.call(null,G__302303,G__302304));
})();
var G__302163 = (function (){var G__302305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302306 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302305,G__302306) : tailrecursion.hoplon.span.call(null,G__302305,G__302306));
})();
var G__302164 = " [";
var G__302165 = (function (){var G__302307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302308 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302307,G__302308) : tailrecursion.hoplon.span.call(null,G__302307,G__302308));
})();
var G__302166 = "]\n  (";
var G__302167 = (function (){var G__302309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__302310 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302309,G__302310) : tailrecursion.hoplon.span.call(null,G__302309,G__302310));
})();
var G__302168 = "(";
var G__302169 = (function (){var G__302311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302312 = "rectangular?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302311,G__302312) : tailrecursion.hoplon.span.call(null,G__302311,G__302312));
})();
var G__302170 = " ";
var G__302171 = (function (){var G__302313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302314 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302313,G__302314) : tailrecursion.hoplon.span.call(null,G__302313,G__302314));
})();
var G__302172 = ") (";
var G__302173 = (function (){var G__302315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302316 = "imag-part-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302315,G__302316) : tailrecursion.hoplon.span.call(null,G__302315,G__302316));
})();
var G__302174 = " (";
var G__302175 = (function (){var G__302317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302318 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302317,G__302318) : tailrecursion.hoplon.span.call(null,G__302317,G__302318));
})();
var G__302176 = " ";
var G__302177 = (function (){var G__302319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302320 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302319,G__302320) : tailrecursion.hoplon.span.call(null,G__302319,G__302320));
})();
var G__302178 = "))\n        (";
var G__302179 = (function (){var G__302321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302322 = "polar?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302321,G__302322) : tailrecursion.hoplon.span.call(null,G__302321,G__302322));
})();
var G__302180 = " ";
var G__302181 = (function (){var G__302323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302324 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302323,G__302324) : tailrecursion.hoplon.span.call(null,G__302323,G__302324));
})();
var G__302182 = ")       (";
var G__302183 = (function (){var G__302325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302326 = "imag-part-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302325,G__302326) : tailrecursion.hoplon.span.call(null,G__302325,G__302326));
})();
var G__302184 = "       (";
var G__302185 = (function (){var G__302327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302328 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302327,G__302328) : tailrecursion.hoplon.span.call(null,G__302327,G__302328));
})();
var G__302186 = " ";
var G__302187 = (function (){var G__302329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302330 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302329,G__302330) : tailrecursion.hoplon.span.call(null,G__302329,G__302330));
})();
var G__302188 = "))\n        ";
var G__302189 = (function (){var G__302331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302332 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302331,G__302332) : tailrecursion.hoplon.span.call(null,G__302331,G__302332));
})();
var G__302190 = " (";
var G__302191 = (function (){var G__302333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302334 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302333,G__302334) : tailrecursion.hoplon.span.call(null,G__302333,G__302334));
})();
var G__302192 = " (";
var G__302193 = (function (){var G__302335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302336 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302335,G__302336) : tailrecursion.hoplon.span.call(null,G__302335,G__302336));
})();
var G__302194 = " ";
var G__302195 = (function (){var G__302337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__302338 = "\"Unknown type -- IMAG-PART\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302337,G__302338) : tailrecursion.hoplon.span.call(null,G__302337,G__302338));
})();
var G__302196 = "))))\n\n(";
var G__302197 = (function (){var G__302339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__302340 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302339,G__302340) : tailrecursion.hoplon.span.call(null,G__302339,G__302340));
})();
var G__302198 = (function (){var G__302341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302342 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302341,G__302342) : tailrecursion.hoplon.span.call(null,G__302341,G__302342));
})();
var G__302199 = " [";
var G__302200 = (function (){var G__302343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302344 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302343,G__302344) : tailrecursion.hoplon.span.call(null,G__302343,G__302344));
})();
var G__302201 = "]\n  (";
var G__302202 = (function (){var G__302345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__302346 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302345,G__302346) : tailrecursion.hoplon.span.call(null,G__302345,G__302346));
})();
var G__302203 = "(";
var G__302204 = (function (){var G__302347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302348 = "rectangular?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302347,G__302348) : tailrecursion.hoplon.span.call(null,G__302347,G__302348));
})();
var G__302205 = " ";
var G__302206 = (function (){var G__302349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302350 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302349,G__302350) : tailrecursion.hoplon.span.call(null,G__302349,G__302350));
})();
var G__302207 = ") (";
var G__302208 = (function (){var G__302351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302352 = "magnitude-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302351,G__302352) : tailrecursion.hoplon.span.call(null,G__302351,G__302352));
})();
var G__302209 = " (";
var G__302210 = (function (){var G__302353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302354 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302353,G__302354) : tailrecursion.hoplon.span.call(null,G__302353,G__302354));
})();
var G__302211 = " ";
var G__302212 = (function (){var G__302355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302356 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302355,G__302356) : tailrecursion.hoplon.span.call(null,G__302355,G__302356));
})();
var G__302213 = "))\n        (";
var G__302214 = (function (){var G__302357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302358 = "polar?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302357,G__302358) : tailrecursion.hoplon.span.call(null,G__302357,G__302358));
})();
var G__302215 = " ";
var G__302216 = (function (){var G__302359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302360 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302359,G__302360) : tailrecursion.hoplon.span.call(null,G__302359,G__302360));
})();
var G__302217 = ")       (";
var G__302218 = (function (){var G__302361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302362 = "magnitude-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302361,G__302362) : tailrecursion.hoplon.span.call(null,G__302361,G__302362));
})();
var G__302219 = "       (";
var G__302220 = (function (){var G__302363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302364 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302363,G__302364) : tailrecursion.hoplon.span.call(null,G__302363,G__302364));
})();
var G__302221 = " ";
var G__302222 = (function (){var G__302365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302366 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302365,G__302366) : tailrecursion.hoplon.span.call(null,G__302365,G__302366));
})();
var G__302223 = "))\n        ";
var G__302224 = (function (){var G__302367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302368 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302367,G__302368) : tailrecursion.hoplon.span.call(null,G__302367,G__302368));
})();
var G__302225 = " (";
var G__302226 = (function (){var G__302369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302370 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302369,G__302370) : tailrecursion.hoplon.span.call(null,G__302369,G__302370));
})();
var G__302227 = " (";
var G__302228 = (function (){var G__302371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302372 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302371,G__302372) : tailrecursion.hoplon.span.call(null,G__302371,G__302372));
})();
var G__302229 = " ";
var G__302230 = (function (){var G__302373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__302374 = "\"Unknown type -- MAGNITUDE\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302373,G__302374) : tailrecursion.hoplon.span.call(null,G__302373,G__302374));
})();
var G__302231 = "))))\n\n(";
var G__302232 = (function (){var G__302375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__302376 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302375,G__302376) : tailrecursion.hoplon.span.call(null,G__302375,G__302376));
})();
var G__302233 = (function (){var G__302377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302378 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302377,G__302378) : tailrecursion.hoplon.span.call(null,G__302377,G__302378));
})();
var G__302234 = " [";
var G__302235 = (function (){var G__302379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302380 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302379,G__302380) : tailrecursion.hoplon.span.call(null,G__302379,G__302380));
})();
var G__302236 = "]\n  (";
var G__302237 = (function (){var G__302381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__302382 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302381,G__302382) : tailrecursion.hoplon.span.call(null,G__302381,G__302382));
})();
var G__302238 = "(";
var G__302239 = (function (){var G__302383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302384 = "rectangular?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302383,G__302384) : tailrecursion.hoplon.span.call(null,G__302383,G__302384));
})();
var G__302240 = " ";
var G__302241 = (function (){var G__302385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302386 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302385,G__302386) : tailrecursion.hoplon.span.call(null,G__302385,G__302386));
})();
var G__302242 = ") (";
var G__302243 = (function (){var G__302387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302388 = "angle-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302387,G__302388) : tailrecursion.hoplon.span.call(null,G__302387,G__302388));
})();
var G__302244 = " (";
var G__302245 = (function (){var G__302389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302390 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302389,G__302390) : tailrecursion.hoplon.span.call(null,G__302389,G__302390));
})();
var G__302246 = " ";
var G__302247 = (function (){var G__302391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302392 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302391,G__302392) : tailrecursion.hoplon.span.call(null,G__302391,G__302392));
})();
var G__302248 = "))\n        (";
var G__302249 = (function (){var G__302393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302394 = "polar?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302393,G__302394) : tailrecursion.hoplon.span.call(null,G__302393,G__302394));
})();
var G__302250 = " ";
var G__302251 = (function (){var G__302395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302396 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302395,G__302396) : tailrecursion.hoplon.span.call(null,G__302395,G__302396));
})();
var G__302252 = ")       (";
var G__302253 = (function (){var G__302397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302398 = "angle-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302397,G__302398) : tailrecursion.hoplon.span.call(null,G__302397,G__302398));
})();
var G__302254 = "       (";
var G__302255 = (function (){var G__302399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302400 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302399,G__302400) : tailrecursion.hoplon.span.call(null,G__302399,G__302400));
})();
var G__302256 = " ";
var G__302257 = (function (){var G__302401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302402 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302401,G__302402) : tailrecursion.hoplon.span.call(null,G__302401,G__302402));
})();
var G__302258 = "))\n        ";
var G__302259 = (function (){var G__302403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302404 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302403,G__302404) : tailrecursion.hoplon.span.call(null,G__302403,G__302404));
})();
var G__302260 = " (";
var G__302261 = (function (){var G__302405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302406 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302405,G__302406) : tailrecursion.hoplon.span.call(null,G__302405,G__302406));
})();
var G__302262 = " (";
var G__302263 = (function (){var G__302407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302408 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302407,G__302408) : tailrecursion.hoplon.span.call(null,G__302407,G__302408));
})();
var G__302264 = " ";
var G__302265 = (function (){var G__302409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__302410 = "\"Unknown type -- ANGLE\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302409,G__302410) : tailrecursion.hoplon.span.call(null,G__302409,G__302410));
})();
var G__302266 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$142 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$142(G__302125,G__302126,G__302127,G__302128,G__302129,G__302130,G__302131,G__302132,G__302133,G__302134,G__302135,G__302136,G__302137,G__302138,G__302139,G__302140,G__302141,G__302142,G__302143,G__302144,G__302145,G__302146,G__302147,G__302148,G__302149,G__302150,G__302151,G__302152,G__302153,G__302154,G__302155,G__302156,G__302157,G__302158,G__302159,G__302160,G__302161,G__302162,G__302163,G__302164,G__302165,G__302166,G__302167,G__302168,G__302169,G__302170,G__302171,G__302172,G__302173,G__302174,G__302175,G__302176,G__302177,G__302178,G__302179,G__302180,G__302181,G__302182,G__302183,G__302184,G__302185,G__302186,G__302187,G__302188,G__302189,G__302190,G__302191,G__302192,G__302193,G__302194,G__302195,G__302196,G__302197,G__302198,G__302199,G__302200,G__302201,G__302202,G__302203,G__302204,G__302205,G__302206,G__302207,G__302208,G__302209,G__302210,G__302211,G__302212,G__302213,G__302214,G__302215,G__302216,G__302217,G__302218,G__302219,G__302220,G__302221,G__302222,G__302223,G__302224,G__302225,G__302226,G__302227,G__302228,G__302229,G__302230,G__302231,G__302232,G__302233,G__302234,G__302235,G__302236,G__302237,G__302238,G__302239,G__302240,G__302241,G__302242,G__302243,G__302244,G__302245,G__302246,G__302247,G__302248,G__302249,G__302250,G__302251,G__302252,G__302253,G__302254,G__302255,G__302256,G__302257,G__302258,G__302259,G__302260,G__302261,G__302262,G__302263,G__302264,G__302265,G__302266) : tailrecursion.hoplon.pre.call(null,G__302125,G__302126,G__302127,G__302128,G__302129,G__302130,G__302131,G__302132,G__302133,G__302134,G__302135,G__302136,G__302137,G__302138,G__302139,G__302140,G__302141,G__302142,G__302143,G__302144,G__302145,G__302146,G__302147,G__302148,G__302149,G__302150,G__302151,G__302152,G__302153,G__302154,G__302155,G__302156,G__302157,G__302158,G__302159,G__302160,G__302161,G__302162,G__302163,G__302164,G__302165,G__302166,G__302167,G__302168,G__302169,G__302170,G__302171,G__302172,G__302173,G__302174,G__302175,G__302176,G__302177,G__302178,G__302179,G__302180,G__302181,G__302182,G__302183,G__302184,G__302185,G__302186,G__302187,G__302188,G__302189,G__302190,G__302191,G__302192,G__302193,G__302194,G__302195,G__302196,G__302197,G__302198,G__302199,G__302200,G__302201,G__302202,G__302203,G__302204,G__302205,G__302206,G__302207,G__302208,G__302209,G__302210,G__302211,G__302212,G__302213,G__302214,G__302215,G__302216,G__302217,G__302218,G__302219,G__302220,G__302221,G__302222,G__302223,G__302224,G__302225,G__302226,G__302227,G__302228,G__302229,G__302230,G__302231,G__302232,G__302233,G__302234,G__302235,G__302236,G__302237,G__302238,G__302239,G__302240,G__302241,G__302242,G__302243,G__302244,G__302245,G__302246,G__302247,G__302248,G__302249,G__302250,G__302251,G__302252,G__302253,G__302254,G__302255,G__302256,G__302257,G__302258,G__302259,G__302260,G__302261,G__302262,G__302263,G__302264,G__302265,G__302266));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__302123,G__302124) : tailrecursion.hoplon.div.call(null,G__302123,G__302124));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__302122) : tailrecursion.hoplon.div.call(null,G__302122));
})(),(function (){var G__302411 = cljs.core.PersistentArrayMap.EMPTY;
var G__302412 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To implement the complex-number arithmetic operations, we can use the same procedures ",(function (){var G__302413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-complex"], null);
var G__302414 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__302413,G__302414) : tailrecursion.hoplon.markdown.code_node.call(null,G__302413,G__302414));
})(),", ",(function (){var G__302415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-complex"], null);
var G__302416 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__302415,G__302416) : tailrecursion.hoplon.markdown.code_node.call(null,G__302415,G__302416));
})(),", ",(function (){var G__302417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mul-complex"], null);
var G__302418 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__302417,G__302418) : tailrecursion.hoplon.markdown.code_node.call(null,G__302417,G__302418));
})(),", and ",(function (){var G__302419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"div-complex"], null);
var G__302420 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__302419,G__302420) : tailrecursion.hoplon.markdown.code_node.call(null,G__302419,G__302420));
})()," from section 2.4.1, because the selectors they call are generic, and so will work with either representation. For example, the procedure ",(function (){var G__302421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-complex"], null);
var G__302422 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__302421,G__302422) : tailrecursion.hoplon.markdown.code_node.call(null,G__302421,G__302422));
})()," is still"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__302411,G__302412) : tailrecursion.hoplon.markdown.para_node.call(null,G__302411,G__302412));
})(),(function (){var G__302486 = (function (){var G__302487 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__302488 = (function (){var G__302489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__302490 = "(";
var G__302491 = (function (){var G__302520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__302521 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302520,G__302521) : tailrecursion.hoplon.span.call(null,G__302520,G__302521));
})();
var G__302492 = (function (){var G__302522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302523 = "add-complex";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302522,G__302523) : tailrecursion.hoplon.span.call(null,G__302522,G__302523));
})();
var G__302493 = " [";
var G__302494 = (function (){var G__302524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302525 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302524,G__302525) : tailrecursion.hoplon.span.call(null,G__302524,G__302525));
})();
var G__302495 = " ";
var G__302496 = (function (){var G__302526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302527 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302526,G__302527) : tailrecursion.hoplon.span.call(null,G__302526,G__302527));
})();
var G__302497 = "]\n  (";
var G__302498 = (function (){var G__302528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302529 = "make-from-real-imag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302528,G__302529) : tailrecursion.hoplon.span.call(null,G__302528,G__302529));
})();
var G__302499 = " (";
var G__302500 = (function (){var G__302530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__302531 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302530,G__302531) : tailrecursion.hoplon.span.call(null,G__302530,G__302531));
})();
var G__302501 = "(";
var G__302502 = (function (){var G__302532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302533 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302532,G__302533) : tailrecursion.hoplon.span.call(null,G__302532,G__302533));
})();
var G__302503 = " ";
var G__302504 = (function (){var G__302534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302535 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302534,G__302535) : tailrecursion.hoplon.span.call(null,G__302534,G__302535));
})();
var G__302505 = ") (";
var G__302506 = (function (){var G__302536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302537 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302536,G__302537) : tailrecursion.hoplon.span.call(null,G__302536,G__302537));
})();
var G__302507 = " ";
var G__302508 = (function (){var G__302538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302539 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302538,G__302539) : tailrecursion.hoplon.span.call(null,G__302538,G__302539));
})();
var G__302509 = "))\n                       (";
var G__302510 = (function (){var G__302540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__302541 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302540,G__302541) : tailrecursion.hoplon.span.call(null,G__302540,G__302541));
})();
var G__302511 = "(";
var G__302512 = (function (){var G__302542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302543 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302542,G__302543) : tailrecursion.hoplon.span.call(null,G__302542,G__302543));
})();
var G__302513 = " ";
var G__302514 = (function (){var G__302544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302545 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302544,G__302545) : tailrecursion.hoplon.span.call(null,G__302544,G__302545));
})();
var G__302515 = ") (";
var G__302516 = (function (){var G__302546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302547 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302546,G__302547) : tailrecursion.hoplon.span.call(null,G__302546,G__302547));
})();
var G__302517 = " ";
var G__302518 = (function (){var G__302548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302549 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302548,G__302549) : tailrecursion.hoplon.span.call(null,G__302548,G__302549));
})();
var G__302519 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__302489,G__302490,G__302491,G__302492,G__302493,G__302494,G__302495,G__302496,G__302497,G__302498,G__302499,G__302500,G__302501,G__302502,G__302503,G__302504,G__302505,G__302506,G__302507,G__302508,G__302509,G__302510,G__302511,G__302512,G__302513,G__302514,G__302515,G__302516,G__302517,G__302518,G__302519) : tailrecursion.hoplon.pre.call(null,G__302489,G__302490,G__302491,G__302492,G__302493,G__302494,G__302495,G__302496,G__302497,G__302498,G__302499,G__302500,G__302501,G__302502,G__302503,G__302504,G__302505,G__302506,G__302507,G__302508,G__302509,G__302510,G__302511,G__302512,G__302513,G__302514,G__302515,G__302516,G__302517,G__302518,G__302519));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__302487,G__302488) : tailrecursion.hoplon.div.call(null,G__302487,G__302488));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__302486) : tailrecursion.hoplon.div.call(null,G__302486));
})(),(function (){var G__302550 = cljs.core.PersistentArrayMap.EMPTY;
var G__302551 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Finally, we must choose whether to construct complex numbers using Ben",(function (){var G__302552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__302553 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__302552,G__302553) : tailrecursion.hoplon.markdown.simple_node.call(null,G__302552,G__302553));
})(),"s representation or Alyssa",(function (){var G__302554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__302555 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__302554,G__302555) : tailrecursion.hoplon.markdown.simple_node.call(null,G__302554,G__302555));
})(),"s representation. One reasonable choice is to construct rectangular numbers whenever we have real and imaginary parts and to construct polar numbers whenever we have magnitudes and angles:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__302550,G__302551) : tailrecursion.hoplon.markdown.para_node.call(null,G__302550,G__302551));
})(),(function (){var G__302614 = (function (){var G__302615 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__302616 = (function (){var G__302617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__302618 = "(";
var G__302619 = (function (){var G__302645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__302646 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302645,G__302646) : tailrecursion.hoplon.span.call(null,G__302645,G__302646));
})();
var G__302620 = (function (){var G__302647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302648 = "make-from-real-imag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302647,G__302648) : tailrecursion.hoplon.span.call(null,G__302647,G__302648));
})();
var G__302621 = " [";
var G__302622 = (function (){var G__302649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302650 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302649,G__302650) : tailrecursion.hoplon.span.call(null,G__302649,G__302650));
})();
var G__302623 = " ";
var G__302624 = (function (){var G__302651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302652 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302651,G__302652) : tailrecursion.hoplon.span.call(null,G__302651,G__302652));
})();
var G__302625 = "]\n  (";
var G__302626 = (function (){var G__302653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302654 = "make-from-real-imag-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302653,G__302654) : tailrecursion.hoplon.span.call(null,G__302653,G__302654));
})();
var G__302627 = " ";
var G__302628 = (function (){var G__302655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302656 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302655,G__302656) : tailrecursion.hoplon.span.call(null,G__302655,G__302656));
})();
var G__302629 = " ";
var G__302630 = (function (){var G__302657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302658 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302657,G__302658) : tailrecursion.hoplon.span.call(null,G__302657,G__302658));
})();
var G__302631 = "))\n\n(";
var G__302632 = (function (){var G__302659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__302660 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302659,G__302660) : tailrecursion.hoplon.span.call(null,G__302659,G__302660));
})();
var G__302633 = (function (){var G__302661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302662 = "make-from-mag-ang";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302661,G__302662) : tailrecursion.hoplon.span.call(null,G__302661,G__302662));
})();
var G__302634 = " [";
var G__302635 = (function (){var G__302663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302664 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302663,G__302664) : tailrecursion.hoplon.span.call(null,G__302663,G__302664));
})();
var G__302636 = " ";
var G__302637 = (function (){var G__302665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302666 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302665,G__302666) : tailrecursion.hoplon.span.call(null,G__302665,G__302666));
})();
var G__302638 = "]\n  (";
var G__302639 = (function (){var G__302667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302668 = "make-from-mag-ang-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302667,G__302668) : tailrecursion.hoplon.span.call(null,G__302667,G__302668));
})();
var G__302640 = " ";
var G__302641 = (function (){var G__302669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302670 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302669,G__302670) : tailrecursion.hoplon.span.call(null,G__302669,G__302670));
})();
var G__302642 = " ";
var G__302643 = (function (){var G__302671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302672 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302671,G__302672) : tailrecursion.hoplon.span.call(null,G__302671,G__302672));
})();
var G__302644 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__302617,G__302618,G__302619,G__302620,G__302621,G__302622,G__302623,G__302624,G__302625,G__302626,G__302627,G__302628,G__302629,G__302630,G__302631,G__302632,G__302633,G__302634,G__302635,G__302636,G__302637,G__302638,G__302639,G__302640,G__302641,G__302642,G__302643,G__302644) : tailrecursion.hoplon.pre.call(null,G__302617,G__302618,G__302619,G__302620,G__302621,G__302622,G__302623,G__302624,G__302625,G__302626,G__302627,G__302628,G__302629,G__302630,G__302631,G__302632,G__302633,G__302634,G__302635,G__302636,G__302637,G__302638,G__302639,G__302640,G__302641,G__302642,G__302643,G__302644));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__302615,G__302616) : tailrecursion.hoplon.div.call(null,G__302615,G__302616));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__302614) : tailrecursion.hoplon.div.call(null,G__302614));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_300595;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_300594;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_300593;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_300592;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"Structure of the generic complex-arithmetic system."], null)], 0)),"",(function (){var _STAR_references_STAR_302673 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_302674 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_302675 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_302676 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__302677 = cljs.core.PersistentArrayMap.EMPTY;
var G__302678 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The resulting complex-number system has the structure shown in figure 2.21. The system has been decomposed into three relatively independent parts: the complex-number-arithmetic operations, Alyssa",(function (){var G__302679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__302680 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__302679,G__302680) : tailrecursion.hoplon.markdown.simple_node.call(null,G__302679,G__302680));
})(),"s polar implementation, and Ben",(function (){var G__302681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__302682 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__302681,G__302682) : tailrecursion.hoplon.markdown.simple_node.call(null,G__302681,G__302682));
})(),"s rectangular implementation. The polar and rectangular implementations could have been written by Ben and Alyssa working seperately, and both of these can be used as underlying representations by a third programmer implementing the complex-arithmetic procedures in terms of the abstract constructor/selector interface."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__302677,G__302678) : tailrecursion.hoplon.markdown.para_node.call(null,G__302677,G__302678));
})(),(function (){var G__302683 = cljs.core.PersistentArrayMap.EMPTY;
var G__302684 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since each data object is tagged with its type, the selectors operate on the data in a generic manner. That is, each selector is defined to have a behavior that depends upon the particular type of data it is applied to. Notice the general mechanism for interfacing the separate representations: Within a given representation implementation (say, Alyssa",(function (){var G__302685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__302686 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__302685,G__302686) : tailrecursion.hoplon.markdown.simple_node.call(null,G__302685,G__302686));
})(),"s polar package) a complex number is an untyped pair (magnitude, angle). When a generic selector operates on a number of ",(function (){var G__302687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"polar type"], null);
var G__302688 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__302687,G__302688) : tailrecursion.hoplon.markdown.code_node.call(null,G__302687,G__302688));
})(),", it strips off the tag and passes the contents on to Alyssa",(function (){var G__302689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__302690 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__302689,G__302690) : tailrecursion.hoplon.markdown.simple_node.call(null,G__302689,G__302690));
})(),"s code. Conversely, when Alyssa constructs a number for general use, she tags it with a type so that it can be appropriately recognized by the higher-level procedures. This discipline of stripping off and attaching tags as data objects are passed from level to level can be an important organizational strategy, as we shall see in section 2.5."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__302683,G__302684) : tailrecursion.hoplon.markdown.para_node.call(null,G__302683,G__302684));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_302676;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_302675;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_302674;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_302673;
}})()], 0));
var G__299132 = "";
var G__299133 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Data-Directed Programming and Additivity"], null),(function (){var _STAR_references_STAR_302691 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_302692 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_302693 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_302694 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__302695 = cljs.core.PersistentArrayMap.EMPTY;
var G__302696 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The general strategy of checking the type of a datum and calling an appropriate procedure is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["dispatching on type"], null)], 0)),". This is a powerful strategy for obtaining modularity in system design. On the other hand, implementing the dispatch as in section 2.4.2 has two significant weaknesses. One weakness is that the generic interface procedures (",(function (){var G__302697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"real-part"], null);
var G__302698 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__302697,G__302698) : tailrecursion.hoplon.markdown.code_node.call(null,G__302697,G__302698));
})(),", ",(function (){var G__302699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"imag-part"], null);
var G__302700 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__302699,G__302700) : tailrecursion.hoplon.markdown.code_node.call(null,G__302699,G__302700));
})(),", ",(function (){var G__302701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"magnitude"], null);
var G__302702 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__302701,G__302702) : tailrecursion.hoplon.markdown.code_node.call(null,G__302701,G__302702));
})(),", and ",(function (){var G__302703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"angle"], null);
var G__302704 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__302703,G__302704) : tailrecursion.hoplon.markdown.code_node.call(null,G__302703,G__302704));
})(),") must know about all the different representations. For instance, suppose we wanted to incorporate a new representation for complex numbers into our complex-number system. We would need to indentify this new representation with a type, and then add a clause to each of the generic interface procedures to check for the new type and apply the appropriate selector for that representation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__302695,G__302696) : tailrecursion.hoplon.markdown.para_node.call(null,G__302695,G__302696));
})(),(function (){var G__302705 = cljs.core.PersistentArrayMap.EMPTY;
var G__302706 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Another weakness of the technique is that even though the individual representations can be designed separately, we must guarantee that no two procedures in the entire system have the same name. This is why Ben and Alyssa had to change the names of their original procedures from section 2.4.1."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__302705,G__302706) : tailrecursion.hoplon.markdown.para_node.call(null,G__302705,G__302706));
})(),(function (){var G__302707 = cljs.core.PersistentArrayMap.EMPTY;
var G__302708 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The issue underlying both of these weaknesses is that the technique for implementing generic interfaces is not additive. The person implementing the generic selector procedures must modify those procedures each time a new representation is installed, and the people interfacing the individual representations must modify their code to avoid name conflicts. In each of these cases, the changes that must be made to the code are straightforward, but they must be made nonetheless, and this is a source of inconvenience and error. This is not much of a problem for the complex-number system as it stands, but suppose there were not two but hundreds of different representations for complex numbers. And suppose that there were many generic selectors to be maintained in the abstract-data interface. Suppose, in fact, that no one programmer knew all the interface procedures or all the representations. The problem is real and must be addressed in such programs as large-scale data-base-management systems."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__302707,G__302708) : tailrecursion.hoplon.markdown.para_node.call(null,G__302707,G__302708));
})(),(function (){var G__302709 = cljs.core.PersistentArrayMap.EMPTY;
var G__302710 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What we need is a means for modularizing the system design even further. This is provided by the programming technique known as data-directed programming. To understand how data-directed programming works, begin with the observation that whenever we deal with a set of generic operations that are common to a set of different types we are, in effect, dealing with a two-dimensional table that contains the possible operations on one axis and the possible types on the other axis. The entries in the table are the procedures that implement each operation for each type of argument presented. In the complex-number system developed in the previous section, the correspondence between operation name, data type, and actual procedure was spread out among the various conditional clauses in the generic interface procedures. But the same information could have been organized in a table, as shown in figure 2.22."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__302709,G__302710) : tailrecursion.hoplon.markdown.para_node.call(null,G__302709,G__302710));
})(),(function (){var G__302711 = cljs.core.PersistentArrayMap.EMPTY;
var G__302712 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Data-directed programming is the technique of designing programs to work with such a table directly. Previously, we implemented the mechanism that interfaces the complex-arithmetic code with the two representation packages as a set of procedures that each perform an explicit dispatch on type. Here we will implement the interface as a single procedure that looks up the combination of the operation name and argument type in the table to find the correct procedure to apply, and then applies it to the contents of the argument. If we do this, then to add a new representation package to the system we need not change any existing procedures; we need only add new entries to the table."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__302711,G__302712) : tailrecursion.hoplon.markdown.para_node.call(null,G__302711,G__302712));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_302694;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_302693;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_302692;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_302691;
}})()], 0));
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$8(G__299126,G__299127,G__299128,G__299129,G__299130,G__299131,G__299132,G__299133) : tailrecursion.hoplon.div.call(null,G__299126,G__299127,G__299128,G__299129,G__299130,G__299131,G__299132,G__299133));
};
var book$sicp$texts$ch2sect4$content = function (var_args){
var args__8262__auto__ = null;
if (arguments.length > 0) {
var G__302713__i = 0, G__302713__a = new Array(arguments.length -  0);
while (G__302713__i < G__302713__a.length) {G__302713__a[G__302713__i] = arguments[G__302713__i + 0]; ++G__302713__i;}
  args__8262__auto__ = new cljs.core.IndexedSeq(G__302713__a,0);
} 
return book$sicp$texts$ch2sect4$content__delegate.call(this,args__8262__auto__);};
book$sicp$texts$ch2sect4$content.cljs$lang$maxFixedArity = 0;
book$sicp$texts$ch2sect4$content.cljs$lang$applyTo = (function (arglist__302714){
var args__8262__auto__ = cljs.core.seq(arglist__302714);
return book$sicp$texts$ch2sect4$content__delegate(args__8262__auto__);
});
book$sicp$texts$ch2sect4$content.cljs$core$IFn$_invoke$arity$variadic = book$sicp$texts$ch2sect4$content__delegate;
return book$sicp$texts$ch2sect4$content;
})()
;

// Compiled by ClojureScript 1.7.48 {:static-fns true, :optimize-constants true}
goog.provide('book.sicp.texts.ch2sect4');
goog.require('cljs.core');
goog.require('tailrecursion.hoplon.markdown');
goog.require('book.sicp.book_data');
goog.require('tailrecursion.hoplon');
goog.require('tailrecursion.javelin');
/**
 * @param {...*} var_args
 */
book.sicp.texts.ch2sect4.content = (function() { 
var book$sicp$texts$ch2sect4$content__delegate = function (args__8082__auto__){
var vec__298945 = tailrecursion.hoplon.parse_args(args__8082__auto__);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__298945,(0),null);
var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__298945,(1),null);
var G__298946 = cljs.core.PersistentArrayMap.EMPTY;
var G__298947 = book.sicp.book_data.sect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Multiple Representations for Abstract Data"], null),(function (){var _STAR_references_STAR_298954 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_298955 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_298956 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_298957 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__298958 = cljs.core.PersistentArrayMap.EMPTY;
var G__298959 = new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We have introduced data abstraction, a methodology for structuring systems in such a way that much of a program can be specified independent of the choices involved in implementing the data objects that the program manipulates. For example, we saw in section 2.1.1 how to separate the task of designing a program that uses rational numbers from the task of implementing rational numbers in terms of the computer language",(function (){var G__298960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__298961 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__298960,G__298961) : tailrecursion.hoplon.markdown.simple_node.call(null,G__298960,G__298961));
})(),"s primitive mechanisms for constructing compound data. The key idea was to erect an abstraction barrier ",(function (){var G__298962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__298963 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__298962,G__298963) : tailrecursion.hoplon.markdown.simple_node.call(null,G__298962,G__298963));
})()," in this case, the selectors and constructors for rational numbers (",(function (){var G__298964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__298965 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__298964,G__298965) : tailrecursion.hoplon.markdown.code_node.call(null,G__298964,G__298965));
})(),", ",(function (){var G__298966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__298967 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__298966,G__298967) : tailrecursion.hoplon.markdown.code_node.call(null,G__298966,G__298967));
})(),", ",(function (){var G__298968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__298969 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__298968,G__298969) : tailrecursion.hoplon.markdown.code_node.call(null,G__298968,G__298969));
})(),") ",(function (){var G__298970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__298971 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__298970,G__298971) : tailrecursion.hoplon.markdown.simple_node.call(null,G__298970,G__298971));
})()," that isolates the way rational numbers are used from their underlying representation in terms of list structure. A similar abstraction barrier isolates the details of the procedures that perform rational arithmetic (",(function (){var G__298972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__298973 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__298972,G__298973) : tailrecursion.hoplon.markdown.code_node.call(null,G__298972,G__298973));
})(),", ",(function (){var G__298974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-rat"], null);
var G__298975 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__298974,G__298975) : tailrecursion.hoplon.markdown.code_node.call(null,G__298974,G__298975));
})(),", ",(function (){var G__298976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mul-rat"], null);
var G__298977 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__298976,G__298977) : tailrecursion.hoplon.markdown.code_node.call(null,G__298976,G__298977));
})(),", and ",(function (){var G__298978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"div-rat"], null);
var G__298979 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__298978,G__298979) : tailrecursion.hoplon.markdown.code_node.call(null,G__298978,G__298979));
})(),") from the ",(function (){var G__298980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__298981 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["higher-level"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__298980,G__298981) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__298980,G__298981));
})()," procedures that use rational numbers. The resulting program has the structure shown in figure 2.1."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__298958,G__298959) : tailrecursion.hoplon.markdown.para_node.call(null,G__298958,G__298959));
})(),(function (){var G__298982 = cljs.core.PersistentArrayMap.EMPTY;
var G__298983 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["These data-abstraction barriers are powerful tools for controlling complexity. By isolating the underlying representations of data objects, we can divide the task of designing a large program into smaller tasks that can be performed separately. But this kind of data abstraction is not yet powerful enough, because it may not always make sense to speak of ",(function (){var G__298984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__298985 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the underlying representation"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__298984,G__298985) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__298984,G__298985));
})()," for a data object."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__298982,G__298983) : tailrecursion.hoplon.markdown.para_node.call(null,G__298982,G__298983));
})(),(function (){var G__298986 = cljs.core.PersistentArrayMap.EMPTY;
var G__298987 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For one thing, there might be more than one useful representation for a data object, and we might like to design systems that can deal with multiple representations. To take a simple example, complex numbers may be represented in two almost equivalent ways: in rectangular form (real and imaginary parts) and in polar form (magnitude and angle). Sometimes rectangular form is more appropriate and sometimes polar form is more appropriate. Indeed, it is perfectly plausible to imagine a system in which complex numbers are represented in both ways, and in which the procedures for manipulating complex numbers work with either representation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__298986,G__298987) : tailrecursion.hoplon.markdown.para_node.call(null,G__298986,G__298987));
})(),(function (){var G__298988 = cljs.core.PersistentArrayMap.EMPTY;
var G__298989 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["More importantly, programming systems are often designed by many people working over extended periods of time, subject to requirements that change over time. In such an environment, it is simply not possible for everyone to agree in advance on choices of data representation. So in addition to the data-abstraction barriers that isolate representation from use, we need abstraction barriers that isolate different design choices from each other and permit different choices to coexist in a single program. Furthermore, since large programs are often created by combining pre-existing modules that were designed in isolation, we need conventions that permit programmers to incorporate modules into larger systems additively, that is, without having to redesign or reimplement these modules."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__298988,G__298989) : tailrecursion.hoplon.markdown.para_node.call(null,G__298988,G__298989));
})(),(function (){var G__298990 = cljs.core.PersistentArrayMap.EMPTY;
var G__298991 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In this section, we will learn how to cope with data that may be represented in different ways by different parts of a program. This requires constructing ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["generic procedures"], null)], 0))," ",(function (){var G__298992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__298993 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__298992,G__298993) : tailrecursion.hoplon.markdown.simple_node.call(null,G__298992,G__298993));
})()," procedures that can operate on data that may be represented in more than one way. Our main technique for building generic procedures will be to work in terms of data objects that have ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["type tags"], null)], 0)),", that is, data objects that include explicit information about how they are to be processed. We will also discuss ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data-directed"], null)], 0))," programming, a powerful and convenient implementation strategy for additively assembling systems with generic operations."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__298990,G__298991) : tailrecursion.hoplon.markdown.para_node.call(null,G__298990,G__298991));
})(),(function (){var G__298994 = cljs.core.PersistentArrayMap.EMPTY;
var G__298995 = new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We begin with the simple complex-number example. We will see how type tags and data-directed style enable us to design separate rectangular and polar representations for complex numbers while maintaining the notion of an abstract ",(function (){var G__298996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__298997 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["complex-number"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__298996,G__298997) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__298996,G__298997));
})()," data object. We will accomplish this by defining arithmetic procedures for complex numbers (",(function (){var G__298998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-complex"], null);
var G__298999 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__298998,G__298999) : tailrecursion.hoplon.markdown.code_node.call(null,G__298998,G__298999));
})(),", ",(function (){var G__299000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-complex"], null);
var G__299001 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299000,G__299001) : tailrecursion.hoplon.markdown.code_node.call(null,G__299000,G__299001));
})(),", ",(function (){var G__299002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mul-complex"], null);
var G__299003 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299002,G__299003) : tailrecursion.hoplon.markdown.code_node.call(null,G__299002,G__299003));
})(),", and ",(function (){var G__299004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"div-complex"], null);
var G__299005 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299004,G__299005) : tailrecursion.hoplon.markdown.code_node.call(null,G__299004,G__299005));
})(),") in terms of generic selectors that access parts of a complex number independent of how the number is represented. The resulting complex-number system, as shown in figure 2.19, contains two different kinds of abstraction barriers. The ",(function (){var G__299006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299007 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["horizontal"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299006,G__299007) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299006,G__299007));
})()," abstraction barriers play the same role as the ones in figure 2.1. They isolate ",(function (){var G__299008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299009 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["higher-level"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299008,G__299009) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299008,G__299009));
})()," operations from ",(function (){var G__299010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299011 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["lower-level"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299010,G__299011) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299010,G__299011));
})()," representations. In addition, there is a ",(function (){var G__299012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299013 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["vertical"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299012,G__299013) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299012,G__299013));
})()," barrier that gives us the ability to separately design and install alternative representations."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__298994,G__298995) : tailrecursion.hoplon.markdown.para_node.call(null,G__298994,G__298995));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_298957;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_298956;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_298955;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_298954;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"Data-abstraction barriers in the complex-number system."], null)], 0)),"",(function (){var _STAR_references_STAR_299014 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_299015 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_299016 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_299017 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__299018 = cljs.core.PersistentArrayMap.EMPTY;
var G__299019 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In section 2.5 we will show how to use type tags and data-directed style to develope a generic arithmetic package. This provides procedures (",(function (){var G__299020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add"], null);
var G__299021 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299020,G__299021) : tailrecursion.hoplon.markdown.code_node.call(null,G__299020,G__299021));
})(),",",(function (){var G__299022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mul"], null);
var G__299023 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299022,G__299023) : tailrecursion.hoplon.markdown.code_node.call(null,G__299022,G__299023));
})(),", and so on) that can be used to manipulate all sorts of ",(function (){var G__299024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299025 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["numbers"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299024,G__299025) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299024,G__299025));
})()," and can be easily extended when a new kind of number is needed. In section 2.5.3, we",(function (){var G__299026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__299027 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__299026,G__299027) : tailrecursion.hoplon.markdown.simple_node.call(null,G__299026,G__299027));
})(),"ll show how to use generic arithmetic in a system that performs symbolic algebra."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299018,G__299019) : tailrecursion.hoplon.markdown.para_node.call(null,G__299018,G__299019));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_299017;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_299016;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_299015;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_299014;
}})()], 0));
var G__298948 = "";
var G__298949 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Representations for Complex Numbers"], null),(function (){var _STAR_references_STAR_299028 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_299029 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_299030 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_299031 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__299032 = cljs.core.PersistentArrayMap.EMPTY;
var G__299033 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We will develope a system that performs arithmetic operations on complex numbers as a simple but unrealistic example of a program that uses generic operations. We begin by discussing two plausible representations for complex numbers as ordered pairs: rectangular form (real part and imaginary part) and polar form (magnitude and angle).",(function (){var G__299034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__299035 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In actual computational systems, rectangular form is preferable to polar form most of the time because of roundoff errors in conversion between rectangular and polar form. This is why the complex-number example is unrealistic. Nevertheless, it provides a clear illustration of the design of a system using generic operations and a good introduction to the more substantial systems to be developed later in this chapter."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299034,G__299035) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299034,G__299035));
})()," Section 2.4.2 will show how both representations can be made to coexist in a single system through the use of type tags and generic operations."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299032,G__299033) : tailrecursion.hoplon.markdown.para_node.call(null,G__299032,G__299033));
})(),(function (){var G__299036 = cljs.core.PersistentArrayMap.EMPTY;
var G__299037 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Like rational numbers, complex numbers are naturally represented as ordered pairs. The set of complex numbers can be thought of as a two-dimensional space with two orthogonal axes, the ",(function (){var G__299038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299039 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["real"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299038,G__299039) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299038,G__299039));
})()," axis and the ",(function (){var G__299040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299041 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["imaginary"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299040,G__299041) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299040,G__299041));
})()," axis. (See figure 2.20.) From this point of view, the complex number \\(z=x+iy\\) (where \\(i^2=-1\\)) can be thought of as the point in the plane whose real coordinate is \\(x\\) and whose imaginary coordinate is \\(y\\). Addition of complex numbers reduces in this representation to addition of coordinates:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299036,G__299037) : tailrecursion.hoplon.markdown.para_node.call(null,G__299036,G__299037));
})(),(function (){var G__299042 = cljs.core.PersistentArrayMap.EMPTY;
var G__299043 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\text{Real-part }(z_1+z_2)=\\text{Real-part }(z_1)+\\text{Real-part }(z_2) \\\\\\text{Imaginary-part }(z_1+z_2) = \\text{Imaginary-part }(z_1)+\\text{Imaginary-part }(z_2)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299042,G__299043) : tailrecursion.hoplon.markdown.para_node.call(null,G__299042,G__299043));
})(),(function (){var G__299044 = cljs.core.PersistentArrayMap.EMPTY;
var G__299045 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["When multiplying complex numbers, it is more natural to think in terms of representing a complex number in polar form, as a magnitude and an angle (\\(r\\) and \\(A\\) in figure 2.20). The product of two complex numbers is the vector obtained by stretching one complex number by the length of the other and then rotating it through the angle of the other:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299044,G__299045) : tailrecursion.hoplon.markdown.para_node.call(null,G__299044,G__299045));
})(),(function (){var G__299046 = cljs.core.PersistentArrayMap.EMPTY;
var G__299047 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\text{Magnitude }(z_1\\cdot z_2)= \\text{Magnitude }(z_1)\\cdot\\text{Magnitude }(z_2) \\\\\\text{Angle }(z_1\\cdot z_2)=\\text{Angle }(z_1)+\\text{Angle }(z_2)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299046,G__299047) : tailrecursion.hoplon.markdown.para_node.call(null,G__299046,G__299047));
})(),(function (){var G__299048 = cljs.core.PersistentArrayMap.EMPTY;
var G__299049 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Thus, there are two different representations for complex numbers, which are appropriate for different operations. Yet, from the viewpoint of someone writing a program that uses complex numbers, the principle of data abstraction suggests that all the operations for manipulating complex numbers should be available regardless of which representation is used by the computer. For example, it is often useful to be able to find the magnitude of a complex number that is specified by rectangular coordinates. Similarly, it is often useful to be able to determine the real part of a complex number that is specified by polar coordinates."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299048,G__299049) : tailrecursion.hoplon.markdown.para_node.call(null,G__299048,G__299049));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_299031;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_299030;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_299029;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_299028;
}})(),"\n",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"Complex numbers as points in the plane."], null)], 0)),"",(function (){var _STAR_references_STAR_299050 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_299051 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_299052 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_299053 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__299054 = cljs.core.PersistentArrayMap.EMPTY;
var G__299055 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To design such a system, we can follow the same data-abstraction strategy we followed in designing the rational-number package in section 2.1.1. Assume that the operations on complex numbers are implemented in terms of four selectors: ",(function (){var G__299056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"real-part"], null);
var G__299057 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299056,G__299057) : tailrecursion.hoplon.markdown.code_node.call(null,G__299056,G__299057));
})(),", ",(function (){var G__299058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"imag-part"], null);
var G__299059 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299058,G__299059) : tailrecursion.hoplon.markdown.code_node.call(null,G__299058,G__299059));
})(),", ",(function (){var G__299060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"magnitude"], null);
var G__299061 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299060,G__299061) : tailrecursion.hoplon.markdown.code_node.call(null,G__299060,G__299061));
})(),", and ",(function (){var G__299062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"angle"], null);
var G__299063 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299062,G__299063) : tailrecursion.hoplon.markdown.code_node.call(null,G__299062,G__299063));
})(),". Also assume that we have two procedures for constructing complex numbers: ",(function (){var G__299064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-from-real-imag"], null);
var G__299065 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299064,G__299065) : tailrecursion.hoplon.markdown.code_node.call(null,G__299064,G__299065));
})()," which returns a complex number with the specified real and imaginary parts, and ",(function (){var G__299066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-from-mag-ang"], null);
var G__299067 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299066,G__299067) : tailrecursion.hoplon.markdown.code_node.call(null,G__299066,G__299067));
})()," which returns a complex number with the specified magnitude and angle. These procedures have the property that, for any complex number \\(z\\), both"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299054,G__299055) : tailrecursion.hoplon.markdown.para_node.call(null,G__299054,G__299055));
})(),(function (){var G__299092 = (function (){var G__299093 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__299094 = (function (){var G__299095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__299096 = "(";
var G__299097 = (function (){var G__299107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299108 = "make-from-real-imag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299107,G__299108) : tailrecursion.hoplon.span.call(null,G__299107,G__299108));
})();
var G__299098 = " (";
var G__299099 = (function (){var G__299109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299110 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299109,G__299110) : tailrecursion.hoplon.span.call(null,G__299109,G__299110));
})();
var G__299100 = " ";
var G__299101 = (function (){var G__299111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299112 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299111,G__299112) : tailrecursion.hoplon.span.call(null,G__299111,G__299112));
})();
var G__299102 = ") (";
var G__299103 = (function (){var G__299113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299114 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299113,G__299114) : tailrecursion.hoplon.span.call(null,G__299113,G__299114));
})();
var G__299104 = " ";
var G__299105 = (function (){var G__299115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299116 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299115,G__299116) : tailrecursion.hoplon.span.call(null,G__299115,G__299116));
})();
var G__299106 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12(G__299095,G__299096,G__299097,G__299098,G__299099,G__299100,G__299101,G__299102,G__299103,G__299104,G__299105,G__299106) : tailrecursion.hoplon.pre.call(null,G__299095,G__299096,G__299097,G__299098,G__299099,G__299100,G__299101,G__299102,G__299103,G__299104,G__299105,G__299106));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__299093,G__299094) : tailrecursion.hoplon.div.call(null,G__299093,G__299094));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__299092) : tailrecursion.hoplon.div.call(null,G__299092));
})(),(function (){var G__299117 = cljs.core.PersistentArrayMap.EMPTY;
var G__299118 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and ",(function (){var G__299119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"clj\n(make-from-mag-ang (magnitude z) (angle z))\n"], null);
var G__299120 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__299119,G__299120) : tailrecursion.hoplon.markdown.code_node.call(null,G__299119,G__299120));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299117,G__299118) : tailrecursion.hoplon.markdown.para_node.call(null,G__299117,G__299118));
})(),(function (){var G__299121 = cljs.core.PersistentArrayMap.EMPTY;
var G__299122 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["produce complex numbers that are equal to \\(z\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299121,G__299122) : tailrecursion.hoplon.markdown.para_node.call(null,G__299121,G__299122));
})(),(function (){var G__299123 = cljs.core.PersistentArrayMap.EMPTY;
var G__299124 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using these constructors and selectors, we can implement arithmetic on complex numbers using the ",(function (){var G__299125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299126 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstract data"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299125,G__299126) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299125,G__299126));
})()," specified by the constructors and selectors, just as we did for rational numbers in section 2.1.1. As shown in the formulas above, we can add and subtract complex numbers in terms of real and imaginary parts while multiplying and dividing complex numbers in terms of magnitudes and angles:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299123,G__299124) : tailrecursion.hoplon.markdown.para_node.call(null,G__299123,G__299124));
})(),(function (){var G__299367 = (function (){var G__299368 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__299369 = (function (){var G__299370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__299371 = "(";
var G__299372 = (function (){var G__299488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__299489 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299488,G__299489) : tailrecursion.hoplon.span.call(null,G__299488,G__299489));
})();
var G__299373 = (function (){var G__299490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299491 = "add-complex";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299490,G__299491) : tailrecursion.hoplon.span.call(null,G__299490,G__299491));
})();
var G__299374 = " [";
var G__299375 = (function (){var G__299492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299493 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299492,G__299493) : tailrecursion.hoplon.span.call(null,G__299492,G__299493));
})();
var G__299376 = " ";
var G__299377 = (function (){var G__299494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299495 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299494,G__299495) : tailrecursion.hoplon.span.call(null,G__299494,G__299495));
})();
var G__299378 = "]\n  (";
var G__299379 = (function (){var G__299496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299497 = "make-from-real-imag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299496,G__299497) : tailrecursion.hoplon.span.call(null,G__299496,G__299497));
})();
var G__299380 = " (";
var G__299381 = (function (){var G__299498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299499 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299498,G__299499) : tailrecursion.hoplon.span.call(null,G__299498,G__299499));
})();
var G__299382 = "(";
var G__299383 = (function (){var G__299500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299501 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299500,G__299501) : tailrecursion.hoplon.span.call(null,G__299500,G__299501));
})();
var G__299384 = " ";
var G__299385 = (function (){var G__299502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299503 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299502,G__299503) : tailrecursion.hoplon.span.call(null,G__299502,G__299503));
})();
var G__299386 = ") (";
var G__299387 = (function (){var G__299504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299505 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299504,G__299505) : tailrecursion.hoplon.span.call(null,G__299504,G__299505));
})();
var G__299388 = " ";
var G__299389 = (function (){var G__299506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299507 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299506,G__299507) : tailrecursion.hoplon.span.call(null,G__299506,G__299507));
})();
var G__299390 = "))\n                       (";
var G__299391 = (function (){var G__299508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299509 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299508,G__299509) : tailrecursion.hoplon.span.call(null,G__299508,G__299509));
})();
var G__299392 = "(";
var G__299393 = (function (){var G__299510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299511 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299510,G__299511) : tailrecursion.hoplon.span.call(null,G__299510,G__299511));
})();
var G__299394 = " ";
var G__299395 = (function (){var G__299512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299513 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299512,G__299513) : tailrecursion.hoplon.span.call(null,G__299512,G__299513));
})();
var G__299396 = ") (";
var G__299397 = (function (){var G__299514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299515 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299514,G__299515) : tailrecursion.hoplon.span.call(null,G__299514,G__299515));
})();
var G__299398 = " ";
var G__299399 = (function (){var G__299516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299517 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299516,G__299517) : tailrecursion.hoplon.span.call(null,G__299516,G__299517));
})();
var G__299400 = "))))\n\n(";
var G__299401 = (function (){var G__299518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__299519 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299518,G__299519) : tailrecursion.hoplon.span.call(null,G__299518,G__299519));
})();
var G__299402 = (function (){var G__299520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299521 = "sub-complex";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299520,G__299521) : tailrecursion.hoplon.span.call(null,G__299520,G__299521));
})();
var G__299403 = " [";
var G__299404 = (function (){var G__299522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299523 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299522,G__299523) : tailrecursion.hoplon.span.call(null,G__299522,G__299523));
})();
var G__299405 = " ";
var G__299406 = (function (){var G__299524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299525 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299524,G__299525) : tailrecursion.hoplon.span.call(null,G__299524,G__299525));
})();
var G__299407 = "]\n  (";
var G__299408 = (function (){var G__299526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299527 = "make-from-real-imag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299526,G__299527) : tailrecursion.hoplon.span.call(null,G__299526,G__299527));
})();
var G__299409 = " (";
var G__299410 = (function (){var G__299528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299529 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299528,G__299529) : tailrecursion.hoplon.span.call(null,G__299528,G__299529));
})();
var G__299411 = "(";
var G__299412 = (function (){var G__299530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299531 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299530,G__299531) : tailrecursion.hoplon.span.call(null,G__299530,G__299531));
})();
var G__299413 = " ";
var G__299414 = (function (){var G__299532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299533 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299532,G__299533) : tailrecursion.hoplon.span.call(null,G__299532,G__299533));
})();
var G__299415 = ") (";
var G__299416 = (function (){var G__299534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299535 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299534,G__299535) : tailrecursion.hoplon.span.call(null,G__299534,G__299535));
})();
var G__299417 = " ";
var G__299418 = (function (){var G__299536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299537 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299536,G__299537) : tailrecursion.hoplon.span.call(null,G__299536,G__299537));
})();
var G__299419 = "))\n                       (";
var G__299420 = (function (){var G__299538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299539 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299538,G__299539) : tailrecursion.hoplon.span.call(null,G__299538,G__299539));
})();
var G__299421 = "(";
var G__299422 = (function (){var G__299540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299541 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299540,G__299541) : tailrecursion.hoplon.span.call(null,G__299540,G__299541));
})();
var G__299423 = " ";
var G__299424 = (function (){var G__299542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299543 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299542,G__299543) : tailrecursion.hoplon.span.call(null,G__299542,G__299543));
})();
var G__299425 = ") (";
var G__299426 = (function (){var G__299544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299545 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299544,G__299545) : tailrecursion.hoplon.span.call(null,G__299544,G__299545));
})();
var G__299427 = " ";
var G__299428 = (function (){var G__299546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299547 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299546,G__299547) : tailrecursion.hoplon.span.call(null,G__299546,G__299547));
})();
var G__299429 = "))))\n\n(";
var G__299430 = (function (){var G__299548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__299549 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299548,G__299549) : tailrecursion.hoplon.span.call(null,G__299548,G__299549));
})();
var G__299431 = (function (){var G__299550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299551 = "mul-complex";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299550,G__299551) : tailrecursion.hoplon.span.call(null,G__299550,G__299551));
})();
var G__299432 = " [";
var G__299433 = (function (){var G__299552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299553 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299552,G__299553) : tailrecursion.hoplon.span.call(null,G__299552,G__299553));
})();
var G__299434 = " ";
var G__299435 = (function (){var G__299554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299555 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299554,G__299555) : tailrecursion.hoplon.span.call(null,G__299554,G__299555));
})();
var G__299436 = "]\n  (";
var G__299437 = (function (){var G__299556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299557 = "make-from-mag-ang";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299556,G__299557) : tailrecursion.hoplon.span.call(null,G__299556,G__299557));
})();
var G__299438 = " (";
var G__299439 = (function (){var G__299558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299559 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299558,G__299559) : tailrecursion.hoplon.span.call(null,G__299558,G__299559));
})();
var G__299440 = "(";
var G__299441 = (function (){var G__299560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299561 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299560,G__299561) : tailrecursion.hoplon.span.call(null,G__299560,G__299561));
})();
var G__299442 = " ";
var G__299443 = (function (){var G__299562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299563 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299562,G__299563) : tailrecursion.hoplon.span.call(null,G__299562,G__299563));
})();
var G__299444 = ") (";
var G__299445 = (function (){var G__299564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299565 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299564,G__299565) : tailrecursion.hoplon.span.call(null,G__299564,G__299565));
})();
var G__299446 = " ";
var G__299447 = (function (){var G__299566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299567 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299566,G__299567) : tailrecursion.hoplon.span.call(null,G__299566,G__299567));
})();
var G__299448 = "))\n                     (";
var G__299449 = (function (){var G__299568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299569 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299568,G__299569) : tailrecursion.hoplon.span.call(null,G__299568,G__299569));
})();
var G__299450 = "(";
var G__299451 = (function (){var G__299570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299571 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299570,G__299571) : tailrecursion.hoplon.span.call(null,G__299570,G__299571));
})();
var G__299452 = " ";
var G__299453 = (function (){var G__299572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299573 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299572,G__299573) : tailrecursion.hoplon.span.call(null,G__299572,G__299573));
})();
var G__299454 = ") (";
var G__299455 = (function (){var G__299574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299575 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299574,G__299575) : tailrecursion.hoplon.span.call(null,G__299574,G__299575));
})();
var G__299456 = " ";
var G__299457 = (function (){var G__299576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299577 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299576,G__299577) : tailrecursion.hoplon.span.call(null,G__299576,G__299577));
})();
var G__299458 = "))))\n\n(";
var G__299459 = (function (){var G__299578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__299579 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299578,G__299579) : tailrecursion.hoplon.span.call(null,G__299578,G__299579));
})();
var G__299460 = (function (){var G__299580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299581 = "div-complex";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299580,G__299581) : tailrecursion.hoplon.span.call(null,G__299580,G__299581));
})();
var G__299461 = " [";
var G__299462 = (function (){var G__299582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299583 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299582,G__299583) : tailrecursion.hoplon.span.call(null,G__299582,G__299583));
})();
var G__299463 = " ";
var G__299464 = (function (){var G__299584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299585 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299584,G__299585) : tailrecursion.hoplon.span.call(null,G__299584,G__299585));
})();
var G__299465 = "]\n  (";
var G__299466 = (function (){var G__299586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299587 = "make-from-mag-ang";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299586,G__299587) : tailrecursion.hoplon.span.call(null,G__299586,G__299587));
})();
var G__299467 = " (";
var G__299468 = (function (){var G__299588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299589 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299588,G__299589) : tailrecursion.hoplon.span.call(null,G__299588,G__299589));
})();
var G__299469 = "(";
var G__299470 = (function (){var G__299590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299591 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299590,G__299591) : tailrecursion.hoplon.span.call(null,G__299590,G__299591));
})();
var G__299471 = " ";
var G__299472 = (function (){var G__299592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299593 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299592,G__299593) : tailrecursion.hoplon.span.call(null,G__299592,G__299593));
})();
var G__299473 = ") (";
var G__299474 = (function (){var G__299594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299595 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299594,G__299595) : tailrecursion.hoplon.span.call(null,G__299594,G__299595));
})();
var G__299475 = " ";
var G__299476 = (function (){var G__299596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299597 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299596,G__299597) : tailrecursion.hoplon.span.call(null,G__299596,G__299597));
})();
var G__299477 = "))\n                     (";
var G__299478 = (function (){var G__299598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299599 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299598,G__299599) : tailrecursion.hoplon.span.call(null,G__299598,G__299599));
})();
var G__299479 = "(";
var G__299480 = (function (){var G__299600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299601 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299600,G__299601) : tailrecursion.hoplon.span.call(null,G__299600,G__299601));
})();
var G__299481 = " ";
var G__299482 = (function (){var G__299602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299603 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299602,G__299603) : tailrecursion.hoplon.span.call(null,G__299602,G__299603));
})();
var G__299483 = ") (";
var G__299484 = (function (){var G__299604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299605 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299604,G__299605) : tailrecursion.hoplon.span.call(null,G__299604,G__299605));
})();
var G__299485 = " ";
var G__299486 = (function (){var G__299606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299607 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299606,G__299607) : tailrecursion.hoplon.span.call(null,G__299606,G__299607));
})();
var G__299487 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$118 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$118(G__299370,G__299371,G__299372,G__299373,G__299374,G__299375,G__299376,G__299377,G__299378,G__299379,G__299380,G__299381,G__299382,G__299383,G__299384,G__299385,G__299386,G__299387,G__299388,G__299389,G__299390,G__299391,G__299392,G__299393,G__299394,G__299395,G__299396,G__299397,G__299398,G__299399,G__299400,G__299401,G__299402,G__299403,G__299404,G__299405,G__299406,G__299407,G__299408,G__299409,G__299410,G__299411,G__299412,G__299413,G__299414,G__299415,G__299416,G__299417,G__299418,G__299419,G__299420,G__299421,G__299422,G__299423,G__299424,G__299425,G__299426,G__299427,G__299428,G__299429,G__299430,G__299431,G__299432,G__299433,G__299434,G__299435,G__299436,G__299437,G__299438,G__299439,G__299440,G__299441,G__299442,G__299443,G__299444,G__299445,G__299446,G__299447,G__299448,G__299449,G__299450,G__299451,G__299452,G__299453,G__299454,G__299455,G__299456,G__299457,G__299458,G__299459,G__299460,G__299461,G__299462,G__299463,G__299464,G__299465,G__299466,G__299467,G__299468,G__299469,G__299470,G__299471,G__299472,G__299473,G__299474,G__299475,G__299476,G__299477,G__299478,G__299479,G__299480,G__299481,G__299482,G__299483,G__299484,G__299485,G__299486,G__299487) : tailrecursion.hoplon.pre.call(null,G__299370,G__299371,G__299372,G__299373,G__299374,G__299375,G__299376,G__299377,G__299378,G__299379,G__299380,G__299381,G__299382,G__299383,G__299384,G__299385,G__299386,G__299387,G__299388,G__299389,G__299390,G__299391,G__299392,G__299393,G__299394,G__299395,G__299396,G__299397,G__299398,G__299399,G__299400,G__299401,G__299402,G__299403,G__299404,G__299405,G__299406,G__299407,G__299408,G__299409,G__299410,G__299411,G__299412,G__299413,G__299414,G__299415,G__299416,G__299417,G__299418,G__299419,G__299420,G__299421,G__299422,G__299423,G__299424,G__299425,G__299426,G__299427,G__299428,G__299429,G__299430,G__299431,G__299432,G__299433,G__299434,G__299435,G__299436,G__299437,G__299438,G__299439,G__299440,G__299441,G__299442,G__299443,G__299444,G__299445,G__299446,G__299447,G__299448,G__299449,G__299450,G__299451,G__299452,G__299453,G__299454,G__299455,G__299456,G__299457,G__299458,G__299459,G__299460,G__299461,G__299462,G__299463,G__299464,G__299465,G__299466,G__299467,G__299468,G__299469,G__299470,G__299471,G__299472,G__299473,G__299474,G__299475,G__299476,G__299477,G__299478,G__299479,G__299480,G__299481,G__299482,G__299483,G__299484,G__299485,G__299486,G__299487));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__299368,G__299369) : tailrecursion.hoplon.div.call(null,G__299368,G__299369));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__299367) : tailrecursion.hoplon.div.call(null,G__299367));
})(),(function (){var G__299608 = cljs.core.PersistentArrayMap.EMPTY;
var G__299609 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To complete the complex-number package, we must choose a representation and we must implement the constructors and selectors in terms of primitive numbers and primative list structure. There are two obvious ways to do this: We can represent a complex number in ",(function (){var G__299610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299611 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["rectangular form"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299610,G__299611) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299610,G__299611));
})()," as a pair (real part, imaginary part) or in ",(function (){var G__299612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__299613 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["polar form"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299612,G__299613) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299612,G__299613));
})()," as a pair (magnitude, angle). Which shall we choose?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299608,G__299609) : tailrecursion.hoplon.markdown.para_node.call(null,G__299608,G__299609));
})(),(function (){var G__299614 = cljs.core.PersistentArrayMap.EMPTY;
var G__299615 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In order to make the different choices concrete, imagine that there are two programmers, Ben Bitdiddle and Alyssa P. Hacker, who are independently designing representations for the complex-number system. Ben chooses to represent complex numbers in rectangular form. With this choice, selecting the real and imaginary parts of a complex number is straightforward, as is constructing a complex number with given real and imaginary parts. To find the magnitude and the angle, or to construct a complex number with a given magnitude and angle, he uses the trigonometric relations:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299614,G__299615) : tailrecursion.hoplon.markdown.para_node.call(null,G__299614,G__299615));
})(),(function (){var G__299616 = cljs.core.PersistentArrayMap.EMPTY;
var G__299617 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} x=&r\\cos A & r=&\\sqrt{x^2+y^2} \\\\y=&r\\sin A & A=&\\arctan(y,x) \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299616,G__299617) : tailrecursion.hoplon.markdown.para_node.call(null,G__299616,G__299617));
})(),(function (){var G__299618 = cljs.core.PersistentArrayMap.EMPTY;
var G__299619 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["which relate the real and imaginary parts \\((x,y)\\) to the magnitude and angle \\((r,A)\\).",(function (){var G__299620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__299621 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The arctangent function referred to here, is a combination of the Java arctan function and a conditional that accounts for the quadrants via the signs of the arguments."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__299620,G__299621) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__299620,G__299621));
})()," Ben",(function (){var G__299622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__299623 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__299622,G__299623) : tailrecursion.hoplon.markdown.simple_node.call(null,G__299622,G__299623));
})(),"s representation is therefore given by the following selectors and constructors:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__299618,G__299619) : tailrecursion.hoplon.markdown.para_node.call(null,G__299618,G__299619));
})(),(function (){var G__299813 = (function (){var G__299814 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__299815 = (function (){var G__299816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__299817 = "(";
var G__299818 = (function (){var G__299905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__299906 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299905,G__299906) : tailrecursion.hoplon.span.call(null,G__299905,G__299906));
})();
var G__299819 = (function (){var G__299907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299908 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299907,G__299908) : tailrecursion.hoplon.span.call(null,G__299907,G__299908));
})();
var G__299820 = " [";
var G__299821 = (function (){var G__299909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299910 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299909,G__299910) : tailrecursion.hoplon.span.call(null,G__299909,G__299910));
})();
var G__299822 = "] (";
var G__299823 = (function (){var G__299911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299912 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299911,G__299912) : tailrecursion.hoplon.span.call(null,G__299911,G__299912));
})();
var G__299824 = (function (){var G__299913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299914 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299913,G__299914) : tailrecursion.hoplon.span.call(null,G__299913,G__299914));
})();
var G__299825 = "))\n\n(";
var G__299826 = (function (){var G__299915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__299916 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299915,G__299916) : tailrecursion.hoplon.span.call(null,G__299915,G__299916));
})();
var G__299827 = (function (){var G__299917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299918 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299917,G__299918) : tailrecursion.hoplon.span.call(null,G__299917,G__299918));
})();
var G__299828 = " [";
var G__299829 = (function (){var G__299919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299920 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299919,G__299920) : tailrecursion.hoplon.span.call(null,G__299919,G__299920));
})();
var G__299830 = "] (";
var G__299831 = (function (){var G__299921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299922 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299921,G__299922) : tailrecursion.hoplon.span.call(null,G__299921,G__299922));
})();
var G__299832 = (function (){var G__299923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299924 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299923,G__299924) : tailrecursion.hoplon.span.call(null,G__299923,G__299924));
})();
var G__299833 = "))\n\n(";
var G__299834 = (function (){var G__299925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__299926 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299925,G__299926) : tailrecursion.hoplon.span.call(null,G__299925,G__299926));
})();
var G__299835 = (function (){var G__299927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299928 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299927,G__299928) : tailrecursion.hoplon.span.call(null,G__299927,G__299928));
})();
var G__299836 = " [";
var G__299837 = (function (){var G__299929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299930 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299929,G__299930) : tailrecursion.hoplon.span.call(null,G__299929,G__299930));
})();
var G__299838 = "]\n  (";
var G__299839 = (function (){var G__299931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299932 = "sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299931,G__299932) : tailrecursion.hoplon.span.call(null,G__299931,G__299932));
})();
var G__299840 = " (";
var G__299841 = (function (){var G__299933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299934 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299933,G__299934) : tailrecursion.hoplon.span.call(null,G__299933,G__299934));
})();
var G__299842 = "(";
var G__299843 = (function (){var G__299935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299936 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299935,G__299936) : tailrecursion.hoplon.span.call(null,G__299935,G__299936));
})();
var G__299844 = " (";
var G__299845 = (function (){var G__299937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299938 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299937,G__299938) : tailrecursion.hoplon.span.call(null,G__299937,G__299938));
})();
var G__299846 = " ";
var G__299847 = (function (){var G__299939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299940 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299939,G__299940) : tailrecursion.hoplon.span.call(null,G__299939,G__299940));
})();
var G__299848 = ")) (";
var G__299849 = (function (){var G__299941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299942 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299941,G__299942) : tailrecursion.hoplon.span.call(null,G__299941,G__299942));
})();
var G__299850 = " (";
var G__299851 = (function (){var G__299943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299944 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299943,G__299944) : tailrecursion.hoplon.span.call(null,G__299943,G__299944));
})();
var G__299852 = " ";
var G__299853 = (function (){var G__299945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299946 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299945,G__299946) : tailrecursion.hoplon.span.call(null,G__299945,G__299946));
})();
var G__299854 = ")))))\n\n(";
var G__299855 = (function (){var G__299947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__299948 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299947,G__299948) : tailrecursion.hoplon.span.call(null,G__299947,G__299948));
})();
var G__299856 = (function (){var G__299949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299950 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299949,G__299950) : tailrecursion.hoplon.span.call(null,G__299949,G__299950));
})();
var G__299857 = " [";
var G__299858 = (function (){var G__299951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299952 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299951,G__299952) : tailrecursion.hoplon.span.call(null,G__299951,G__299952));
})();
var G__299859 = "]\n  (";
var G__299860 = (function (){var G__299953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299954 = "arctan";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299953,G__299954) : tailrecursion.hoplon.span.call(null,G__299953,G__299954));
})();
var G__299861 = " (";
var G__299862 = (function (){var G__299955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299956 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299955,G__299956) : tailrecursion.hoplon.span.call(null,G__299955,G__299956));
})();
var G__299863 = " ";
var G__299864 = (function (){var G__299957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299958 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299957,G__299958) : tailrecursion.hoplon.span.call(null,G__299957,G__299958));
})();
var G__299865 = ") (";
var G__299866 = (function (){var G__299959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299960 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299959,G__299960) : tailrecursion.hoplon.span.call(null,G__299959,G__299960));
})();
var G__299867 = " ";
var G__299868 = (function (){var G__299961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299962 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299961,G__299962) : tailrecursion.hoplon.span.call(null,G__299961,G__299962));
})();
var G__299869 = ")))\n\n(";
var G__299870 = (function (){var G__299963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__299964 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299963,G__299964) : tailrecursion.hoplon.span.call(null,G__299963,G__299964));
})();
var G__299871 = (function (){var G__299965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299966 = "make-from-real-imag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299965,G__299966) : tailrecursion.hoplon.span.call(null,G__299965,G__299966));
})();
var G__299872 = " [";
var G__299873 = (function (){var G__299967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299968 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299967,G__299968) : tailrecursion.hoplon.span.call(null,G__299967,G__299968));
})();
var G__299874 = " ";
var G__299875 = (function (){var G__299969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299970 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299969,G__299970) : tailrecursion.hoplon.span.call(null,G__299969,G__299970));
})();
var G__299876 = "]\n  (";
var G__299877 = (function (){var G__299971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299972 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299971,G__299972) : tailrecursion.hoplon.span.call(null,G__299971,G__299972));
})();
var G__299878 = (function (){var G__299973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299974 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299973,G__299974) : tailrecursion.hoplon.span.call(null,G__299973,G__299974));
})();
var G__299879 = " ";
var G__299880 = (function (){var G__299975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299976 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299975,G__299976) : tailrecursion.hoplon.span.call(null,G__299975,G__299976));
})();
var G__299881 = "))\n\n(";
var G__299882 = (function (){var G__299977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__299978 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299977,G__299978) : tailrecursion.hoplon.span.call(null,G__299977,G__299978));
})();
var G__299883 = (function (){var G__299979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299980 = "make-from-mag-ang";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299979,G__299980) : tailrecursion.hoplon.span.call(null,G__299979,G__299980));
})();
var G__299884 = " [";
var G__299885 = (function (){var G__299981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299982 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299981,G__299982) : tailrecursion.hoplon.span.call(null,G__299981,G__299982));
})();
var G__299886 = " ";
var G__299887 = (function (){var G__299983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299984 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299983,G__299984) : tailrecursion.hoplon.span.call(null,G__299983,G__299984));
})();
var G__299888 = "]\n  (";
var G__299889 = (function (){var G__299985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299986 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299985,G__299986) : tailrecursion.hoplon.span.call(null,G__299985,G__299986));
})();
var G__299890 = "(";
var G__299891 = (function (){var G__299987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299988 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299987,G__299988) : tailrecursion.hoplon.span.call(null,G__299987,G__299988));
})();
var G__299892 = (function (){var G__299989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299990 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299989,G__299990) : tailrecursion.hoplon.span.call(null,G__299989,G__299990));
})();
var G__299893 = " (";
var G__299894 = (function (){var G__299991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__299992 = "Math/cos";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299991,G__299992) : tailrecursion.hoplon.span.call(null,G__299991,G__299992));
})();
var G__299895 = " ";
var G__299896 = (function (){var G__299993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299994 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299993,G__299994) : tailrecursion.hoplon.span.call(null,G__299993,G__299994));
})();
var G__299897 = ")) (";
var G__299898 = (function (){var G__299995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__299996 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299995,G__299996) : tailrecursion.hoplon.span.call(null,G__299995,G__299996));
})();
var G__299899 = (function (){var G__299997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__299998 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299997,G__299998) : tailrecursion.hoplon.span.call(null,G__299997,G__299998));
})();
var G__299900 = " (";
var G__299901 = (function (){var G__299999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300000 = "Math/sin";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__299999,G__300000) : tailrecursion.hoplon.span.call(null,G__299999,G__300000));
})();
var G__299902 = " ";
var G__299903 = (function (){var G__300001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300002 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300001,G__300002) : tailrecursion.hoplon.span.call(null,G__300001,G__300002));
})();
var G__299904 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$89 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$89(G__299816,G__299817,G__299818,G__299819,G__299820,G__299821,G__299822,G__299823,G__299824,G__299825,G__299826,G__299827,G__299828,G__299829,G__299830,G__299831,G__299832,G__299833,G__299834,G__299835,G__299836,G__299837,G__299838,G__299839,G__299840,G__299841,G__299842,G__299843,G__299844,G__299845,G__299846,G__299847,G__299848,G__299849,G__299850,G__299851,G__299852,G__299853,G__299854,G__299855,G__299856,G__299857,G__299858,G__299859,G__299860,G__299861,G__299862,G__299863,G__299864,G__299865,G__299866,G__299867,G__299868,G__299869,G__299870,G__299871,G__299872,G__299873,G__299874,G__299875,G__299876,G__299877,G__299878,G__299879,G__299880,G__299881,G__299882,G__299883,G__299884,G__299885,G__299886,G__299887,G__299888,G__299889,G__299890,G__299891,G__299892,G__299893,G__299894,G__299895,G__299896,G__299897,G__299898,G__299899,G__299900,G__299901,G__299902,G__299903,G__299904) : tailrecursion.hoplon.pre.call(null,G__299816,G__299817,G__299818,G__299819,G__299820,G__299821,G__299822,G__299823,G__299824,G__299825,G__299826,G__299827,G__299828,G__299829,G__299830,G__299831,G__299832,G__299833,G__299834,G__299835,G__299836,G__299837,G__299838,G__299839,G__299840,G__299841,G__299842,G__299843,G__299844,G__299845,G__299846,G__299847,G__299848,G__299849,G__299850,G__299851,G__299852,G__299853,G__299854,G__299855,G__299856,G__299857,G__299858,G__299859,G__299860,G__299861,G__299862,G__299863,G__299864,G__299865,G__299866,G__299867,G__299868,G__299869,G__299870,G__299871,G__299872,G__299873,G__299874,G__299875,G__299876,G__299877,G__299878,G__299879,G__299880,G__299881,G__299882,G__299883,G__299884,G__299885,G__299886,G__299887,G__299888,G__299889,G__299890,G__299891,G__299892,G__299893,G__299894,G__299895,G__299896,G__299897,G__299898,G__299899,G__299900,G__299901,G__299902,G__299903,G__299904));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__299814,G__299815) : tailrecursion.hoplon.div.call(null,G__299814,G__299815));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__299813) : tailrecursion.hoplon.div.call(null,G__299813));
})(),(function (){var G__300003 = cljs.core.PersistentArrayMap.EMPTY;
var G__300004 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If you tried this code (which I hope you did), you may have noticed that our ",(function (){var G__300005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"angle"], null);
var G__300006 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300005,G__300006) : tailrecursion.hoplon.markdown.code_node.call(null,G__300005,G__300006));
})()," procedure doesn",(function (){var G__300007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__300008 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300007,G__300008) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300007,G__300008));
})(),"t work! The ",(function (){var G__300009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"arctan"], null);
var G__300010 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300009,G__300010) : tailrecursion.hoplon.markdown.code_node.call(null,G__300009,G__300010));
})()," function is not defined. If you define it, remember to account for the quadrants!"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300003,G__300004) : tailrecursion.hoplon.markdown.para_node.call(null,G__300003,G__300004));
})(),(function (){var G__300011 = cljs.core.PersistentArrayMap.EMPTY;
var G__300012 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa, in contrast, chooses to represent complex numbers in polar form. For her, selecting the magnitude and angle is straightforward, but she has to use the trigonometric relations to obtain the real and imaginary parts. Alyssa",(function (){var G__300013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__300014 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300013,G__300014) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300013,G__300014));
})(),"s representation is:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300011,G__300012) : tailrecursion.hoplon.markdown.para_node.call(null,G__300011,G__300012));
})(),(function (){var G__300206 = (function (){var G__300207 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__300208 = (function (){var G__300209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__300210 = "(";
var G__300211 = (function (){var G__300300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300301 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300300,G__300301) : tailrecursion.hoplon.span.call(null,G__300300,G__300301));
})();
var G__300212 = (function (){var G__300302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300303 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300302,G__300303) : tailrecursion.hoplon.span.call(null,G__300302,G__300303));
})();
var G__300213 = " [";
var G__300214 = (function (){var G__300304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300305 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300304,G__300305) : tailrecursion.hoplon.span.call(null,G__300304,G__300305));
})();
var G__300215 = "]\n  (";
var G__300216 = (function (){var G__300306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300307 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300306,G__300307) : tailrecursion.hoplon.span.call(null,G__300306,G__300307));
})();
var G__300217 = "(";
var G__300218 = (function (){var G__300308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300309 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300308,G__300309) : tailrecursion.hoplon.span.call(null,G__300308,G__300309));
})();
var G__300219 = " ";
var G__300220 = (function (){var G__300310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300311 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300310,G__300311) : tailrecursion.hoplon.span.call(null,G__300310,G__300311));
})();
var G__300221 = ") \n     (";
var G__300222 = (function (){var G__300312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300313 = "Math/cos";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300312,G__300313) : tailrecursion.hoplon.span.call(null,G__300312,G__300313));
})();
var G__300223 = " (";
var G__300224 = (function (){var G__300314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300315 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300314,G__300315) : tailrecursion.hoplon.span.call(null,G__300314,G__300315));
})();
var G__300225 = " ";
var G__300226 = (function (){var G__300316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300317 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300316,G__300317) : tailrecursion.hoplon.span.call(null,G__300316,G__300317));
})();
var G__300227 = "))))\n\n(";
var G__300228 = (function (){var G__300318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300319 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300318,G__300319) : tailrecursion.hoplon.span.call(null,G__300318,G__300319));
})();
var G__300229 = (function (){var G__300320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300321 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300320,G__300321) : tailrecursion.hoplon.span.call(null,G__300320,G__300321));
})();
var G__300230 = " [";
var G__300231 = (function (){var G__300322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300323 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300322,G__300323) : tailrecursion.hoplon.span.call(null,G__300322,G__300323));
})();
var G__300232 = "]\n  (";
var G__300233 = (function (){var G__300324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300325 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300324,G__300325) : tailrecursion.hoplon.span.call(null,G__300324,G__300325));
})();
var G__300234 = "(";
var G__300235 = (function (){var G__300326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300327 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300326,G__300327) : tailrecursion.hoplon.span.call(null,G__300326,G__300327));
})();
var G__300236 = " ";
var G__300237 = (function (){var G__300328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300329 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300328,G__300329) : tailrecursion.hoplon.span.call(null,G__300328,G__300329));
})();
var G__300238 = ")\n     (";
var G__300239 = (function (){var G__300330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300331 = "Math/sin";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300330,G__300331) : tailrecursion.hoplon.span.call(null,G__300330,G__300331));
})();
var G__300240 = " (";
var G__300241 = (function (){var G__300332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300333 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300332,G__300333) : tailrecursion.hoplon.span.call(null,G__300332,G__300333));
})();
var G__300242 = " ";
var G__300243 = (function (){var G__300334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300335 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300334,G__300335) : tailrecursion.hoplon.span.call(null,G__300334,G__300335));
})();
var G__300244 = "))))\n\n(";
var G__300245 = (function (){var G__300336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300337 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300336,G__300337) : tailrecursion.hoplon.span.call(null,G__300336,G__300337));
})();
var G__300246 = (function (){var G__300338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300339 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300338,G__300339) : tailrecursion.hoplon.span.call(null,G__300338,G__300339));
})();
var G__300247 = " [";
var G__300248 = (function (){var G__300340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300341 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300340,G__300341) : tailrecursion.hoplon.span.call(null,G__300340,G__300341));
})();
var G__300249 = "]\n  (";
var G__300250 = (function (){var G__300342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300343 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300342,G__300343) : tailrecursion.hoplon.span.call(null,G__300342,G__300343));
})();
var G__300251 = (function (){var G__300344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300345 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300344,G__300345) : tailrecursion.hoplon.span.call(null,G__300344,G__300345));
})();
var G__300252 = "))\n\n(";
var G__300253 = (function (){var G__300346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300347 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300346,G__300347) : tailrecursion.hoplon.span.call(null,G__300346,G__300347));
})();
var G__300254 = (function (){var G__300348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300349 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300348,G__300349) : tailrecursion.hoplon.span.call(null,G__300348,G__300349));
})();
var G__300255 = " [";
var G__300256 = (function (){var G__300350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300351 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300350,G__300351) : tailrecursion.hoplon.span.call(null,G__300350,G__300351));
})();
var G__300257 = "]\n  (";
var G__300258 = (function (){var G__300352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300353 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300352,G__300353) : tailrecursion.hoplon.span.call(null,G__300352,G__300353));
})();
var G__300259 = (function (){var G__300354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300355 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300354,G__300355) : tailrecursion.hoplon.span.call(null,G__300354,G__300355));
})();
var G__300260 = "))\n\n(";
var G__300261 = (function (){var G__300356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300357 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300356,G__300357) : tailrecursion.hoplon.span.call(null,G__300356,G__300357));
})();
var G__300262 = (function (){var G__300358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300359 = "make-from-real-imag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300358,G__300359) : tailrecursion.hoplon.span.call(null,G__300358,G__300359));
})();
var G__300263 = " [";
var G__300264 = (function (){var G__300360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300361 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300360,G__300361) : tailrecursion.hoplon.span.call(null,G__300360,G__300361));
})();
var G__300265 = " ";
var G__300266 = (function (){var G__300362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300363 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300362,G__300363) : tailrecursion.hoplon.span.call(null,G__300362,G__300363));
})();
var G__300267 = "]\n  (";
var G__300268 = (function (){var G__300364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300365 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300364,G__300365) : tailrecursion.hoplon.span.call(null,G__300364,G__300365));
})();
var G__300269 = "(";
var G__300270 = (function (){var G__300366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300367 = "sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300366,G__300367) : tailrecursion.hoplon.span.call(null,G__300366,G__300367));
})();
var G__300271 = " (";
var G__300272 = (function (){var G__300368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300369 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300368,G__300369) : tailrecursion.hoplon.span.call(null,G__300368,G__300369));
})();
var G__300273 = "(";
var G__300274 = (function (){var G__300370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300371 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300370,G__300371) : tailrecursion.hoplon.span.call(null,G__300370,G__300371));
})();
var G__300275 = " ";
var G__300276 = (function (){var G__300372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300373 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300372,G__300373) : tailrecursion.hoplon.span.call(null,G__300372,G__300373));
})();
var G__300277 = ") \n                 (";
var G__300278 = (function (){var G__300374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300375 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300374,G__300375) : tailrecursion.hoplon.span.call(null,G__300374,G__300375));
})();
var G__300279 = " ";
var G__300280 = (function (){var G__300376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300377 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300376,G__300377) : tailrecursion.hoplon.span.call(null,G__300376,G__300377));
})();
var G__300281 = ")))\n        (";
var G__300282 = (function (){var G__300378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300379 = "arctan";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300378,G__300379) : tailrecursion.hoplon.span.call(null,G__300378,G__300379));
})();
var G__300283 = " ";
var G__300284 = (function (){var G__300380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300381 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300380,G__300381) : tailrecursion.hoplon.span.call(null,G__300380,G__300381));
})();
var G__300285 = " ";
var G__300286 = (function (){var G__300382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300383 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300382,G__300383) : tailrecursion.hoplon.span.call(null,G__300382,G__300383));
})();
var G__300287 = ")))\n\n(";
var G__300288 = (function (){var G__300384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300385 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300384,G__300385) : tailrecursion.hoplon.span.call(null,G__300384,G__300385));
})();
var G__300289 = (function (){var G__300386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300387 = "make-from-mag-ang";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300386,G__300387) : tailrecursion.hoplon.span.call(null,G__300386,G__300387));
})();
var G__300290 = " [";
var G__300291 = (function (){var G__300388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300389 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300388,G__300389) : tailrecursion.hoplon.span.call(null,G__300388,G__300389));
})();
var G__300292 = " ";
var G__300293 = (function (){var G__300390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300391 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300390,G__300391) : tailrecursion.hoplon.span.call(null,G__300390,G__300391));
})();
var G__300294 = "]\n  (";
var G__300295 = (function (){var G__300392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300393 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300392,G__300393) : tailrecursion.hoplon.span.call(null,G__300392,G__300393));
})();
var G__300296 = (function (){var G__300394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300395 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300394,G__300395) : tailrecursion.hoplon.span.call(null,G__300394,G__300395));
})();
var G__300297 = " ";
var G__300298 = (function (){var G__300396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300397 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300396,G__300397) : tailrecursion.hoplon.span.call(null,G__300396,G__300397));
})();
var G__300299 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$91 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$91(G__300209,G__300210,G__300211,G__300212,G__300213,G__300214,G__300215,G__300216,G__300217,G__300218,G__300219,G__300220,G__300221,G__300222,G__300223,G__300224,G__300225,G__300226,G__300227,G__300228,G__300229,G__300230,G__300231,G__300232,G__300233,G__300234,G__300235,G__300236,G__300237,G__300238,G__300239,G__300240,G__300241,G__300242,G__300243,G__300244,G__300245,G__300246,G__300247,G__300248,G__300249,G__300250,G__300251,G__300252,G__300253,G__300254,G__300255,G__300256,G__300257,G__300258,G__300259,G__300260,G__300261,G__300262,G__300263,G__300264,G__300265,G__300266,G__300267,G__300268,G__300269,G__300270,G__300271,G__300272,G__300273,G__300274,G__300275,G__300276,G__300277,G__300278,G__300279,G__300280,G__300281,G__300282,G__300283,G__300284,G__300285,G__300286,G__300287,G__300288,G__300289,G__300290,G__300291,G__300292,G__300293,G__300294,G__300295,G__300296,G__300297,G__300298,G__300299) : tailrecursion.hoplon.pre.call(null,G__300209,G__300210,G__300211,G__300212,G__300213,G__300214,G__300215,G__300216,G__300217,G__300218,G__300219,G__300220,G__300221,G__300222,G__300223,G__300224,G__300225,G__300226,G__300227,G__300228,G__300229,G__300230,G__300231,G__300232,G__300233,G__300234,G__300235,G__300236,G__300237,G__300238,G__300239,G__300240,G__300241,G__300242,G__300243,G__300244,G__300245,G__300246,G__300247,G__300248,G__300249,G__300250,G__300251,G__300252,G__300253,G__300254,G__300255,G__300256,G__300257,G__300258,G__300259,G__300260,G__300261,G__300262,G__300263,G__300264,G__300265,G__300266,G__300267,G__300268,G__300269,G__300270,G__300271,G__300272,G__300273,G__300274,G__300275,G__300276,G__300277,G__300278,G__300279,G__300280,G__300281,G__300282,G__300283,G__300284,G__300285,G__300286,G__300287,G__300288,G__300289,G__300290,G__300291,G__300292,G__300293,G__300294,G__300295,G__300296,G__300297,G__300298,G__300299));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__300207,G__300208) : tailrecursion.hoplon.div.call(null,G__300207,G__300208));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__300206) : tailrecursion.hoplon.div.call(null,G__300206));
})(),(function (){var G__300398 = cljs.core.PersistentArrayMap.EMPTY;
var G__300399 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The discipline of data abstraction ensures that the same implementation of ",(function (){var G__300400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-complex"], null);
var G__300401 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300400,G__300401) : tailrecursion.hoplon.markdown.code_node.call(null,G__300400,G__300401));
})(),", ",(function (){var G__300402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-complex"], null);
var G__300403 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300402,G__300403) : tailrecursion.hoplon.markdown.code_node.call(null,G__300402,G__300403));
})(),", ",(function (){var G__300404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mul-complex"], null);
var G__300405 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300404,G__300405) : tailrecursion.hoplon.markdown.code_node.call(null,G__300404,G__300405));
})(),", and ",(function (){var G__300406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"div-complex"], null);
var G__300407 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300406,G__300407) : tailrecursion.hoplon.markdown.code_node.call(null,G__300406,G__300407));
})()," will work with either Ben",(function (){var G__300408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__300409 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300408,G__300409) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300408,G__300409));
})(),"s representation or Alyssa",(function (){var G__300410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__300411 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300410,G__300411) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300410,G__300411));
})(),"s representation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300398,G__300399) : tailrecursion.hoplon.markdown.para_node.call(null,G__300398,G__300399));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_299053;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_299052;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_299051;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_299050;
}})()], 0));
var G__298950 = "";
var G__298951 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Tagged Data"], null),(function (){var _STAR_references_STAR_300412 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_300413 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_300414 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_300415 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__300416 = cljs.core.PersistentArrayMap.EMPTY;
var G__300417 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One way to view data abstraction is as an application of the ",(function (){var G__300418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__300419 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["principal of least commitment."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__300418,G__300419) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__300418,G__300419));
})()," In implementing the complex-number system in secion 2.4.1, we can use either Ben",(function (){var G__300420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__300421 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300420,G__300421) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300420,G__300421));
})(),"s rectangular representation or Alyssa",(function (){var G__300422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__300423 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300422,G__300423) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300422,G__300423));
})(),"s polar representation. The abstraction barrier formed by the selectors and constructors permits us to defer to the last possible moment the choice of a concrete representation for our data objects and thus retain maximum flexibility in our system design."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300416,G__300417) : tailrecursion.hoplon.markdown.para_node.call(null,G__300416,G__300417));
})(),(function (){var G__300424 = cljs.core.PersistentArrayMap.EMPTY;
var G__300425 = new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The principle of least commitment can be carried to even further extremes. If we desire, we can maintain the ambiguity of representation even ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["after"], null)], 0))," we have designed the selectors and constructors, and elect to use both Ben",(function (){var G__300426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__300427 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300426,G__300427) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300426,G__300427));
})(),"s representation ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and"], null)], 0))," Alyssa",(function (){var G__300428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__300429 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300428,G__300429) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300428,G__300429));
})(),"s representaion. If both representations are included in a single system, however, we will need some way to distinguish data in polar form from data in rectangular form. Otherwise, if we were asked, for instance, to find the ",(function (){var G__300430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"magnitude"], null);
var G__300431 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300430,G__300431) : tailrecursion.hoplon.markdown.code_node.call(null,G__300430,G__300431));
})()," of the pair (3,4), we wouldn",(function (){var G__300432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__300433 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300432,G__300433) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300432,G__300433));
})(),"t know whether to answer 5 (interpreting the number in rectangular form) or 3 (interpreting the number in polar form). A straightforward way to accomplish this distinction is to include a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["type tag"], null)], 0))," ",(function (){var G__300434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__300435 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300434,G__300435) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300434,G__300435));
})()," the symbol ",(function (){var G__300436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rectangular"], null);
var G__300437 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300436,G__300437) : tailrecursion.hoplon.markdown.code_node.call(null,G__300436,G__300437));
})()," or ",(function (){var G__300438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"polar"], null);
var G__300439 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300438,G__300439) : tailrecursion.hoplon.markdown.code_node.call(null,G__300438,G__300439));
})()," ",(function (){var G__300440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__300441 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300440,G__300441) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300440,G__300441));
})()," as part of each complex number. Then when we need to manipulate a complex number we can use the tag to decide which selector to apply."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300424,G__300425) : tailrecursion.hoplon.markdown.para_node.call(null,G__300424,G__300425));
})(),(function (){var G__300442 = cljs.core.PersistentArrayMap.EMPTY;
var G__300443 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In order to manipulate tagged data, we will assume that we have procedures ",(function (){var G__300444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"type-tag"], null);
var G__300445 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300444,G__300445) : tailrecursion.hoplon.markdown.code_node.call(null,G__300444,G__300445));
})()," and ",(function (){var G__300446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"contents"], null);
var G__300447 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300446,G__300447) : tailrecursion.hoplon.markdown.code_node.call(null,G__300446,G__300447));
})()," that extract from a data object the tag and the actual contents (the polar or rectangular coordinates, in the case of a complex number). We will also postulate a procedure ",(function (){var G__300448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"attach-tag"], null);
var G__300449 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300448,G__300449) : tailrecursion.hoplon.markdown.code_node.call(null,G__300448,G__300449));
})()," that takes a tag and contents and produces a tagged data object. A straightforward way to implement this is to ordinary list structure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300442,G__300443) : tailrecursion.hoplon.markdown.para_node.call(null,G__300442,G__300443));
})(),(function (){var G__300564 = (function (){var G__300565 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__300566 = (function (){var G__300567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__300568 = "(";
var G__300569 = (function (){var G__300621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300622 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300621,G__300622) : tailrecursion.hoplon.span.call(null,G__300621,G__300622));
})();
var G__300570 = (function (){var G__300623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300624 = "attach-tag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300623,G__300624) : tailrecursion.hoplon.span.call(null,G__300623,G__300624));
})();
var G__300571 = " [";
var G__300572 = (function (){var G__300625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300626 = "type-tag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300625,G__300626) : tailrecursion.hoplon.span.call(null,G__300625,G__300626));
})();
var G__300573 = " ";
var G__300574 = (function (){var G__300627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300628 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300627,G__300628) : tailrecursion.hoplon.span.call(null,G__300627,G__300628));
})();
var G__300575 = "]\n  (";
var G__300576 = (function (){var G__300629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300630 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300629,G__300630) : tailrecursion.hoplon.span.call(null,G__300629,G__300630));
})();
var G__300577 = (function (){var G__300631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300632 = "type-tag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300631,G__300632) : tailrecursion.hoplon.span.call(null,G__300631,G__300632));
})();
var G__300578 = " ";
var G__300579 = (function (){var G__300633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300634 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300633,G__300634) : tailrecursion.hoplon.span.call(null,G__300633,G__300634));
})();
var G__300580 = "))\n\n(";
var G__300581 = (function (){var G__300635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300636 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300635,G__300636) : tailrecursion.hoplon.span.call(null,G__300635,G__300636));
})();
var G__300582 = (function (){var G__300637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300638 = "type-tag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300637,G__300638) : tailrecursion.hoplon.span.call(null,G__300637,G__300638));
})();
var G__300583 = " [";
var G__300584 = (function (){var G__300639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300640 = "datum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300639,G__300640) : tailrecursion.hoplon.span.call(null,G__300639,G__300640));
})();
var G__300585 = "]\n  (";
var G__300586 = (function (){var G__300641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300642 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300641,G__300642) : tailrecursion.hoplon.span.call(null,G__300641,G__300642));
})();
var G__300587 = "(";
var G__300588 = (function (){var G__300643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300644 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300643,G__300644) : tailrecursion.hoplon.span.call(null,G__300643,G__300644));
})();
var G__300589 = " ";
var G__300590 = (function (){var G__300645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300646 = "datum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300645,G__300646) : tailrecursion.hoplon.span.call(null,G__300645,G__300646));
})();
var G__300591 = ")\n      (";
var G__300592 = (function (){var G__300647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300648 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300647,G__300648) : tailrecursion.hoplon.span.call(null,G__300647,G__300648));
})();
var G__300593 = (function (){var G__300649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300650 = "datum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300649,G__300650) : tailrecursion.hoplon.span.call(null,G__300649,G__300650));
})();
var G__300594 = ")\n      (";
var G__300595 = (function (){var G__300651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300652 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300651,G__300652) : tailrecursion.hoplon.span.call(null,G__300651,G__300652));
})();
var G__300596 = " (";
var G__300597 = (function (){var G__300653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300654 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300653,G__300654) : tailrecursion.hoplon.span.call(null,G__300653,G__300654));
})();
var G__300598 = " ";
var G__300599 = (function (){var G__300655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__300656 = "\"Bad tagged dataum -- TYPE-TAG\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300655,G__300656) : tailrecursion.hoplon.span.call(null,G__300655,G__300656));
})();
var G__300600 = "))))\n\n(";
var G__300601 = (function (){var G__300657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300658 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300657,G__300658) : tailrecursion.hoplon.span.call(null,G__300657,G__300658));
})();
var G__300602 = (function (){var G__300659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300660 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300659,G__300660) : tailrecursion.hoplon.span.call(null,G__300659,G__300660));
})();
var G__300603 = " [";
var G__300604 = (function (){var G__300661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300662 = "datum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300661,G__300662) : tailrecursion.hoplon.span.call(null,G__300661,G__300662));
})();
var G__300605 = "]\n  (";
var G__300606 = (function (){var G__300663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300664 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300663,G__300664) : tailrecursion.hoplon.span.call(null,G__300663,G__300664));
})();
var G__300607 = "(";
var G__300608 = (function (){var G__300665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300666 = "list?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300665,G__300666) : tailrecursion.hoplon.span.call(null,G__300665,G__300666));
})();
var G__300609 = " ";
var G__300610 = (function (){var G__300667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300668 = "datum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300667,G__300668) : tailrecursion.hoplon.span.call(null,G__300667,G__300668));
})();
var G__300611 = ")\n      (";
var G__300612 = (function (){var G__300669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300670 = "rest ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300669,G__300670) : tailrecursion.hoplon.span.call(null,G__300669,G__300670));
})();
var G__300613 = (function (){var G__300671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300672 = "datum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300671,G__300672) : tailrecursion.hoplon.span.call(null,G__300671,G__300672));
})();
var G__300614 = ")\n      (";
var G__300615 = (function (){var G__300673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300674 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300673,G__300674) : tailrecursion.hoplon.span.call(null,G__300673,G__300674));
})();
var G__300616 = " (";
var G__300617 = (function (){var G__300675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300676 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300675,G__300676) : tailrecursion.hoplon.span.call(null,G__300675,G__300676));
})();
var G__300618 = " ";
var G__300619 = (function (){var G__300677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__300678 = "\"Bad tagged datum -- CONTENTS\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300677,G__300678) : tailrecursion.hoplon.span.call(null,G__300677,G__300678));
})();
var G__300620 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$54(G__300567,G__300568,G__300569,G__300570,G__300571,G__300572,G__300573,G__300574,G__300575,G__300576,G__300577,G__300578,G__300579,G__300580,G__300581,G__300582,G__300583,G__300584,G__300585,G__300586,G__300587,G__300588,G__300589,G__300590,G__300591,G__300592,G__300593,G__300594,G__300595,G__300596,G__300597,G__300598,G__300599,G__300600,G__300601,G__300602,G__300603,G__300604,G__300605,G__300606,G__300607,G__300608,G__300609,G__300610,G__300611,G__300612,G__300613,G__300614,G__300615,G__300616,G__300617,G__300618,G__300619,G__300620) : tailrecursion.hoplon.pre.call(null,G__300567,G__300568,G__300569,G__300570,G__300571,G__300572,G__300573,G__300574,G__300575,G__300576,G__300577,G__300578,G__300579,G__300580,G__300581,G__300582,G__300583,G__300584,G__300585,G__300586,G__300587,G__300588,G__300589,G__300590,G__300591,G__300592,G__300593,G__300594,G__300595,G__300596,G__300597,G__300598,G__300599,G__300600,G__300601,G__300602,G__300603,G__300604,G__300605,G__300606,G__300607,G__300608,G__300609,G__300610,G__300611,G__300612,G__300613,G__300614,G__300615,G__300616,G__300617,G__300618,G__300619,G__300620));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__300565,G__300566) : tailrecursion.hoplon.div.call(null,G__300565,G__300566));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__300564) : tailrecursion.hoplon.div.call(null,G__300564));
})(),(function (){var G__300679 = cljs.core.PersistentArrayMap.EMPTY;
var G__300680 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using these procedures, we can define predicates ",(function (){var G__300681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rectangular?"], null);
var G__300682 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300681,G__300682) : tailrecursion.hoplon.markdown.code_node.call(null,G__300681,G__300682));
})()," and ",(function (){var G__300683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"polar?"], null);
var G__300684 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300683,G__300684) : tailrecursion.hoplon.markdown.code_node.call(null,G__300683,G__300684));
})(),", which recognize polar and rectangular numbers, respectively:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300679,G__300680) : tailrecursion.hoplon.markdown.para_node.call(null,G__300679,G__300680));
})(),(function (){var G__300743 = (function (){var G__300744 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__300745 = (function (){var G__300746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__300747 = "(";
var G__300748 = (function (){var G__300774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300775 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300774,G__300775) : tailrecursion.hoplon.span.call(null,G__300774,G__300775));
})();
var G__300749 = (function (){var G__300776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300777 = "rectangular?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300776,G__300777) : tailrecursion.hoplon.span.call(null,G__300776,G__300777));
})();
var G__300750 = " [";
var G__300751 = (function (){var G__300778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300779 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300778,G__300779) : tailrecursion.hoplon.span.call(null,G__300778,G__300779));
})();
var G__300752 = "]\n  (";
var G__300753 = (function (){var G__300780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300781 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300780,G__300781) : tailrecursion.hoplon.span.call(null,G__300780,G__300781));
})();
var G__300754 = "(";
var G__300755 = (function (){var G__300782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300783 = "type-tag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300782,G__300783) : tailrecursion.hoplon.span.call(null,G__300782,G__300783));
})();
var G__300756 = " ";
var G__300757 = (function (){var G__300784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300785 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300784,G__300785) : tailrecursion.hoplon.span.call(null,G__300784,G__300785));
})();
var G__300758 = ") ";
var G__300759 = (function (){var G__300786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300787 = "'rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300786,G__300787) : tailrecursion.hoplon.span.call(null,G__300786,G__300787));
})();
var G__300760 = "))\n\n(";
var G__300761 = (function (){var G__300788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__300789 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300788,G__300789) : tailrecursion.hoplon.span.call(null,G__300788,G__300789));
})();
var G__300762 = (function (){var G__300790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300791 = "polar?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300790,G__300791) : tailrecursion.hoplon.span.call(null,G__300790,G__300791));
})();
var G__300763 = " [";
var G__300764 = (function (){var G__300792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300793 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300792,G__300793) : tailrecursion.hoplon.span.call(null,G__300792,G__300793));
})();
var G__300765 = "]\n  (";
var G__300766 = (function (){var G__300794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__300795 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300794,G__300795) : tailrecursion.hoplon.span.call(null,G__300794,G__300795));
})();
var G__300767 = "(";
var G__300768 = (function (){var G__300796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__300797 = "type-tag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300796,G__300797) : tailrecursion.hoplon.span.call(null,G__300796,G__300797));
})();
var G__300769 = " ";
var G__300770 = (function (){var G__300798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300799 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300798,G__300799) : tailrecursion.hoplon.span.call(null,G__300798,G__300799));
})();
var G__300771 = ") ";
var G__300772 = (function (){var G__300800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__300801 = "'polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__300800,G__300801) : tailrecursion.hoplon.span.call(null,G__300800,G__300801));
})();
var G__300773 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__300746,G__300747,G__300748,G__300749,G__300750,G__300751,G__300752,G__300753,G__300754,G__300755,G__300756,G__300757,G__300758,G__300759,G__300760,G__300761,G__300762,G__300763,G__300764,G__300765,G__300766,G__300767,G__300768,G__300769,G__300770,G__300771,G__300772,G__300773) : tailrecursion.hoplon.pre.call(null,G__300746,G__300747,G__300748,G__300749,G__300750,G__300751,G__300752,G__300753,G__300754,G__300755,G__300756,G__300757,G__300758,G__300759,G__300760,G__300761,G__300762,G__300763,G__300764,G__300765,G__300766,G__300767,G__300768,G__300769,G__300770,G__300771,G__300772,G__300773));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__300744,G__300745) : tailrecursion.hoplon.div.call(null,G__300744,G__300745));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__300743) : tailrecursion.hoplon.div.call(null,G__300743));
})(),(function (){var G__300802 = cljs.core.PersistentArrayMap.EMPTY;
var G__300803 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With type tags, Ben and Alyssa can now modify their code so that their two different representations can coexist in the same system. Whenever Ben constructs a complex number, he tags it as rectangular. Whenever Alyssa constructs a complex number, she tags it as polar. In addition, Ben and Alyssa must make sure that the names of their procedures do not conflict. One way to do this is for Ben to append the suffix ",(function (){var G__300804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rectangular"], null);
var G__300805 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300804,G__300805) : tailrecursion.hoplon.markdown.code_node.call(null,G__300804,G__300805));
})()," to the name of each of his representation procedures and for Alyssa to append ",(function (){var G__300806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"polar"], null);
var G__300807 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__300806,G__300807) : tailrecursion.hoplon.markdown.code_node.call(null,G__300806,G__300807));
})()," to the names of hers. Here is Ben",(function (){var G__300808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__300809 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__300808,G__300809) : tailrecursion.hoplon.markdown.simple_node.call(null,G__300808,G__300809));
})(),"s revised rectangular representation from section 2.4.1:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__300802,G__300803) : tailrecursion.hoplon.markdown.para_node.call(null,G__300802,G__300803));
})(),(function (){var G__301015 = (function (){var G__301016 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__301017 = (function (){var G__301018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__301019 = "(";
var G__301020 = (function (){var G__301115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301116 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301115,G__301116) : tailrecursion.hoplon.span.call(null,G__301115,G__301116));
})();
var G__301021 = (function (){var G__301117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301118 = "real-part-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301117,G__301118) : tailrecursion.hoplon.span.call(null,G__301117,G__301118));
})();
var G__301022 = " [";
var G__301023 = (function (){var G__301119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301120 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301119,G__301120) : tailrecursion.hoplon.span.call(null,G__301119,G__301120));
})();
var G__301024 = "] (";
var G__301025 = (function (){var G__301121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301122 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301121,G__301122) : tailrecursion.hoplon.span.call(null,G__301121,G__301122));
})();
var G__301026 = (function (){var G__301123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301124 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301123,G__301124) : tailrecursion.hoplon.span.call(null,G__301123,G__301124));
})();
var G__301027 = "))\n\n(";
var G__301028 = (function (){var G__301125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301126 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301125,G__301126) : tailrecursion.hoplon.span.call(null,G__301125,G__301126));
})();
var G__301029 = (function (){var G__301127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301128 = "imag-part-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301127,G__301128) : tailrecursion.hoplon.span.call(null,G__301127,G__301128));
})();
var G__301030 = " [";
var G__301031 = (function (){var G__301129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301130 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301129,G__301130) : tailrecursion.hoplon.span.call(null,G__301129,G__301130));
})();
var G__301032 = "] (";
var G__301033 = (function (){var G__301131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301132 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301131,G__301132) : tailrecursion.hoplon.span.call(null,G__301131,G__301132));
})();
var G__301034 = (function (){var G__301133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301134 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301133,G__301134) : tailrecursion.hoplon.span.call(null,G__301133,G__301134));
})();
var G__301035 = "))\n\n(";
var G__301036 = (function (){var G__301135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301136 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301135,G__301136) : tailrecursion.hoplon.span.call(null,G__301135,G__301136));
})();
var G__301037 = (function (){var G__301137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301138 = "magnitude-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301137,G__301138) : tailrecursion.hoplon.span.call(null,G__301137,G__301138));
})();
var G__301038 = " [";
var G__301039 = (function (){var G__301139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301140 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301139,G__301140) : tailrecursion.hoplon.span.call(null,G__301139,G__301140));
})();
var G__301040 = "]\n  (";
var G__301041 = (function (){var G__301141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301142 = "sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301141,G__301142) : tailrecursion.hoplon.span.call(null,G__301141,G__301142));
})();
var G__301042 = " (";
var G__301043 = (function (){var G__301143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301144 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301143,G__301144) : tailrecursion.hoplon.span.call(null,G__301143,G__301144));
})();
var G__301044 = "(";
var G__301045 = (function (){var G__301145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301146 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301145,G__301146) : tailrecursion.hoplon.span.call(null,G__301145,G__301146));
})();
var G__301046 = " (";
var G__301047 = (function (){var G__301147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301148 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301147,G__301148) : tailrecursion.hoplon.span.call(null,G__301147,G__301148));
})();
var G__301048 = " ";
var G__301049 = (function (){var G__301149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301150 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301149,G__301150) : tailrecursion.hoplon.span.call(null,G__301149,G__301150));
})();
var G__301050 = ")) (";
var G__301051 = (function (){var G__301151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301152 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301151,G__301152) : tailrecursion.hoplon.span.call(null,G__301151,G__301152));
})();
var G__301052 = " (";
var G__301053 = (function (){var G__301153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301154 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301153,G__301154) : tailrecursion.hoplon.span.call(null,G__301153,G__301154));
})();
var G__301054 = " ";
var G__301055 = (function (){var G__301155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301156 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301155,G__301156) : tailrecursion.hoplon.span.call(null,G__301155,G__301156));
})();
var G__301056 = ")))))\n\n(";
var G__301057 = (function (){var G__301157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301158 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301157,G__301158) : tailrecursion.hoplon.span.call(null,G__301157,G__301158));
})();
var G__301058 = (function (){var G__301159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301160 = "angle-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301159,G__301160) : tailrecursion.hoplon.span.call(null,G__301159,G__301160));
})();
var G__301059 = " [";
var G__301060 = (function (){var G__301161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301162 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301161,G__301162) : tailrecursion.hoplon.span.call(null,G__301161,G__301162));
})();
var G__301061 = "]\n  (";
var G__301062 = (function (){var G__301163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301164 = "arctan";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301163,G__301164) : tailrecursion.hoplon.span.call(null,G__301163,G__301164));
})();
var G__301063 = " (";
var G__301064 = (function (){var G__301165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301166 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301165,G__301166) : tailrecursion.hoplon.span.call(null,G__301165,G__301166));
})();
var G__301065 = " ";
var G__301066 = (function (){var G__301167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301168 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301167,G__301168) : tailrecursion.hoplon.span.call(null,G__301167,G__301168));
})();
var G__301067 = ") (";
var G__301068 = (function (){var G__301169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301170 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301169,G__301170) : tailrecursion.hoplon.span.call(null,G__301169,G__301170));
})();
var G__301069 = " ";
var G__301070 = (function (){var G__301171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301172 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301171,G__301172) : tailrecursion.hoplon.span.call(null,G__301171,G__301172));
})();
var G__301071 = ")))\n\n(";
var G__301072 = (function (){var G__301173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301174 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301173,G__301174) : tailrecursion.hoplon.span.call(null,G__301173,G__301174));
})();
var G__301073 = (function (){var G__301175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301176 = "make-from-real-imag-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301175,G__301176) : tailrecursion.hoplon.span.call(null,G__301175,G__301176));
})();
var G__301074 = " [";
var G__301075 = (function (){var G__301177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301178 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301177,G__301178) : tailrecursion.hoplon.span.call(null,G__301177,G__301178));
})();
var G__301076 = " ";
var G__301077 = (function (){var G__301179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301180 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301179,G__301180) : tailrecursion.hoplon.span.call(null,G__301179,G__301180));
})();
var G__301078 = "]\n  (";
var G__301079 = (function (){var G__301181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301182 = "attach-tag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301181,G__301182) : tailrecursion.hoplon.span.call(null,G__301181,G__301182));
})();
var G__301080 = " ";
var G__301081 = (function (){var G__301183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301184 = "'rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301183,G__301184) : tailrecursion.hoplon.span.call(null,G__301183,G__301184));
})();
var G__301082 = " (";
var G__301083 = (function (){var G__301185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301186 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301185,G__301186) : tailrecursion.hoplon.span.call(null,G__301185,G__301186));
})();
var G__301084 = (function (){var G__301187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301188 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301187,G__301188) : tailrecursion.hoplon.span.call(null,G__301187,G__301188));
})();
var G__301085 = " ";
var G__301086 = (function (){var G__301189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301190 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301189,G__301190) : tailrecursion.hoplon.span.call(null,G__301189,G__301190));
})();
var G__301087 = ")))\n\n(";
var G__301088 = (function (){var G__301191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301192 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301191,G__301192) : tailrecursion.hoplon.span.call(null,G__301191,G__301192));
})();
var G__301089 = (function (){var G__301193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301194 = "make-from-mag-ang-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301193,G__301194) : tailrecursion.hoplon.span.call(null,G__301193,G__301194));
})();
var G__301090 = " [";
var G__301091 = (function (){var G__301195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301196 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301195,G__301196) : tailrecursion.hoplon.span.call(null,G__301195,G__301196));
})();
var G__301092 = " ";
var G__301093 = (function (){var G__301197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301198 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301197,G__301198) : tailrecursion.hoplon.span.call(null,G__301197,G__301198));
})();
var G__301094 = "]\n  (";
var G__301095 = (function (){var G__301199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301200 = "attach-tag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301199,G__301200) : tailrecursion.hoplon.span.call(null,G__301199,G__301200));
})();
var G__301096 = " ";
var G__301097 = (function (){var G__301201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301202 = "'rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301201,G__301202) : tailrecursion.hoplon.span.call(null,G__301201,G__301202));
})();
var G__301098 = " \n    (";
var G__301099 = (function (){var G__301203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301204 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301203,G__301204) : tailrecursion.hoplon.span.call(null,G__301203,G__301204));
})();
var G__301100 = "(";
var G__301101 = (function (){var G__301205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301206 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301205,G__301206) : tailrecursion.hoplon.span.call(null,G__301205,G__301206));
})();
var G__301102 = (function (){var G__301207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301208 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301207,G__301208) : tailrecursion.hoplon.span.call(null,G__301207,G__301208));
})();
var G__301103 = " (";
var G__301104 = (function (){var G__301209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301210 = "Math/cos";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301209,G__301210) : tailrecursion.hoplon.span.call(null,G__301209,G__301210));
})();
var G__301105 = " ";
var G__301106 = (function (){var G__301211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301212 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301211,G__301212) : tailrecursion.hoplon.span.call(null,G__301211,G__301212));
})();
var G__301107 = ")) \n          (";
var G__301108 = (function (){var G__301213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301214 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301213,G__301214) : tailrecursion.hoplon.span.call(null,G__301213,G__301214));
})();
var G__301109 = (function (){var G__301215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301216 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301215,G__301216) : tailrecursion.hoplon.span.call(null,G__301215,G__301216));
})();
var G__301110 = " (";
var G__301111 = (function (){var G__301217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301218 = "Math/sin";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301217,G__301218) : tailrecursion.hoplon.span.call(null,G__301217,G__301218));
})();
var G__301112 = " ";
var G__301113 = (function (){var G__301219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301220 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301219,G__301220) : tailrecursion.hoplon.span.call(null,G__301219,G__301220));
})();
var G__301114 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$97 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$97(G__301018,G__301019,G__301020,G__301021,G__301022,G__301023,G__301024,G__301025,G__301026,G__301027,G__301028,G__301029,G__301030,G__301031,G__301032,G__301033,G__301034,G__301035,G__301036,G__301037,G__301038,G__301039,G__301040,G__301041,G__301042,G__301043,G__301044,G__301045,G__301046,G__301047,G__301048,G__301049,G__301050,G__301051,G__301052,G__301053,G__301054,G__301055,G__301056,G__301057,G__301058,G__301059,G__301060,G__301061,G__301062,G__301063,G__301064,G__301065,G__301066,G__301067,G__301068,G__301069,G__301070,G__301071,G__301072,G__301073,G__301074,G__301075,G__301076,G__301077,G__301078,G__301079,G__301080,G__301081,G__301082,G__301083,G__301084,G__301085,G__301086,G__301087,G__301088,G__301089,G__301090,G__301091,G__301092,G__301093,G__301094,G__301095,G__301096,G__301097,G__301098,G__301099,G__301100,G__301101,G__301102,G__301103,G__301104,G__301105,G__301106,G__301107,G__301108,G__301109,G__301110,G__301111,G__301112,G__301113,G__301114) : tailrecursion.hoplon.pre.call(null,G__301018,G__301019,G__301020,G__301021,G__301022,G__301023,G__301024,G__301025,G__301026,G__301027,G__301028,G__301029,G__301030,G__301031,G__301032,G__301033,G__301034,G__301035,G__301036,G__301037,G__301038,G__301039,G__301040,G__301041,G__301042,G__301043,G__301044,G__301045,G__301046,G__301047,G__301048,G__301049,G__301050,G__301051,G__301052,G__301053,G__301054,G__301055,G__301056,G__301057,G__301058,G__301059,G__301060,G__301061,G__301062,G__301063,G__301064,G__301065,G__301066,G__301067,G__301068,G__301069,G__301070,G__301071,G__301072,G__301073,G__301074,G__301075,G__301076,G__301077,G__301078,G__301079,G__301080,G__301081,G__301082,G__301083,G__301084,G__301085,G__301086,G__301087,G__301088,G__301089,G__301090,G__301091,G__301092,G__301093,G__301094,G__301095,G__301096,G__301097,G__301098,G__301099,G__301100,G__301101,G__301102,G__301103,G__301104,G__301105,G__301106,G__301107,G__301108,G__301109,G__301110,G__301111,G__301112,G__301113,G__301114));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__301016,G__301017) : tailrecursion.hoplon.div.call(null,G__301016,G__301017));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__301015) : tailrecursion.hoplon.div.call(null,G__301015));
})(),(function (){var G__301221 = cljs.core.PersistentArrayMap.EMPTY;
var G__301222 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and here is Alyssa",(function (){var G__301223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__301224 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__301223,G__301224) : tailrecursion.hoplon.markdown.simple_node.call(null,G__301223,G__301224));
})(),"s revised polar representation:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__301221,G__301222) : tailrecursion.hoplon.markdown.para_node.call(null,G__301221,G__301222));
})(),(function (){var G__301432 = (function (){var G__301433 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__301434 = (function (){var G__301435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__301436 = "(";
var G__301437 = (function (){var G__301534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301535 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301534,G__301535) : tailrecursion.hoplon.span.call(null,G__301534,G__301535));
})();
var G__301438 = (function (){var G__301536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301537 = "real-part-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301536,G__301537) : tailrecursion.hoplon.span.call(null,G__301536,G__301537));
})();
var G__301439 = " [";
var G__301440 = (function (){var G__301538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301539 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301538,G__301539) : tailrecursion.hoplon.span.call(null,G__301538,G__301539));
})();
var G__301441 = "]\n  (";
var G__301442 = (function (){var G__301540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301541 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301540,G__301541) : tailrecursion.hoplon.span.call(null,G__301540,G__301541));
})();
var G__301443 = "(";
var G__301444 = (function (){var G__301542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301543 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301542,G__301543) : tailrecursion.hoplon.span.call(null,G__301542,G__301543));
})();
var G__301445 = " ";
var G__301446 = (function (){var G__301544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301545 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301544,G__301545) : tailrecursion.hoplon.span.call(null,G__301544,G__301545));
})();
var G__301447 = ") \n     (";
var G__301448 = (function (){var G__301546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301547 = "Math/cos";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301546,G__301547) : tailrecursion.hoplon.span.call(null,G__301546,G__301547));
})();
var G__301449 = " (";
var G__301450 = (function (){var G__301548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301549 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301548,G__301549) : tailrecursion.hoplon.span.call(null,G__301548,G__301549));
})();
var G__301451 = " ";
var G__301452 = (function (){var G__301550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301551 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301550,G__301551) : tailrecursion.hoplon.span.call(null,G__301550,G__301551));
})();
var G__301453 = "))))\n\n(";
var G__301454 = (function (){var G__301552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301553 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301552,G__301553) : tailrecursion.hoplon.span.call(null,G__301552,G__301553));
})();
var G__301455 = (function (){var G__301554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301555 = "imag-part-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301554,G__301555) : tailrecursion.hoplon.span.call(null,G__301554,G__301555));
})();
var G__301456 = " [";
var G__301457 = (function (){var G__301556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301557 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301556,G__301557) : tailrecursion.hoplon.span.call(null,G__301556,G__301557));
})();
var G__301458 = "]\n  (";
var G__301459 = (function (){var G__301558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301559 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301558,G__301559) : tailrecursion.hoplon.span.call(null,G__301558,G__301559));
})();
var G__301460 = "(";
var G__301461 = (function (){var G__301560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301561 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301560,G__301561) : tailrecursion.hoplon.span.call(null,G__301560,G__301561));
})();
var G__301462 = " ";
var G__301463 = (function (){var G__301562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301563 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301562,G__301563) : tailrecursion.hoplon.span.call(null,G__301562,G__301563));
})();
var G__301464 = ")\n     (";
var G__301465 = (function (){var G__301564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301565 = "Math/sin";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301564,G__301565) : tailrecursion.hoplon.span.call(null,G__301564,G__301565));
})();
var G__301466 = " (";
var G__301467 = (function (){var G__301566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301567 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301566,G__301567) : tailrecursion.hoplon.span.call(null,G__301566,G__301567));
})();
var G__301468 = " ";
var G__301469 = (function (){var G__301568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301569 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301568,G__301569) : tailrecursion.hoplon.span.call(null,G__301568,G__301569));
})();
var G__301470 = "))))\n\n(";
var G__301471 = (function (){var G__301570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301571 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301570,G__301571) : tailrecursion.hoplon.span.call(null,G__301570,G__301571));
})();
var G__301472 = (function (){var G__301572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301573 = "magnitude-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301572,G__301573) : tailrecursion.hoplon.span.call(null,G__301572,G__301573));
})();
var G__301473 = " [";
var G__301474 = (function (){var G__301574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301575 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301574,G__301575) : tailrecursion.hoplon.span.call(null,G__301574,G__301575));
})();
var G__301475 = "]\n  (";
var G__301476 = (function (){var G__301576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301577 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301576,G__301577) : tailrecursion.hoplon.span.call(null,G__301576,G__301577));
})();
var G__301477 = (function (){var G__301578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301579 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301578,G__301579) : tailrecursion.hoplon.span.call(null,G__301578,G__301579));
})();
var G__301478 = "))\n\n(";
var G__301479 = (function (){var G__301580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301581 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301580,G__301581) : tailrecursion.hoplon.span.call(null,G__301580,G__301581));
})();
var G__301480 = (function (){var G__301582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301583 = "angle-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301582,G__301583) : tailrecursion.hoplon.span.call(null,G__301582,G__301583));
})();
var G__301481 = " [";
var G__301482 = (function (){var G__301584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301585 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301584,G__301585) : tailrecursion.hoplon.span.call(null,G__301584,G__301585));
})();
var G__301483 = "]\n  (";
var G__301484 = (function (){var G__301586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301587 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301586,G__301587) : tailrecursion.hoplon.span.call(null,G__301586,G__301587));
})();
var G__301485 = (function (){var G__301588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301589 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301588,G__301589) : tailrecursion.hoplon.span.call(null,G__301588,G__301589));
})();
var G__301486 = "))\n\n(";
var G__301487 = (function (){var G__301590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301591 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301590,G__301591) : tailrecursion.hoplon.span.call(null,G__301590,G__301591));
})();
var G__301488 = (function (){var G__301592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301593 = "make-from-real-imag-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301592,G__301593) : tailrecursion.hoplon.span.call(null,G__301592,G__301593));
})();
var G__301489 = " [";
var G__301490 = (function (){var G__301594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301595 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301594,G__301595) : tailrecursion.hoplon.span.call(null,G__301594,G__301595));
})();
var G__301491 = " ";
var G__301492 = (function (){var G__301596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301597 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301596,G__301597) : tailrecursion.hoplon.span.call(null,G__301596,G__301597));
})();
var G__301493 = "]\n  (";
var G__301494 = (function (){var G__301598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301599 = "attach-tag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301598,G__301599) : tailrecursion.hoplon.span.call(null,G__301598,G__301599));
})();
var G__301495 = " ";
var G__301496 = (function (){var G__301600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301601 = "'polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301600,G__301601) : tailrecursion.hoplon.span.call(null,G__301600,G__301601));
})();
var G__301497 = "\n              (";
var G__301498 = (function (){var G__301602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301603 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301602,G__301603) : tailrecursion.hoplon.span.call(null,G__301602,G__301603));
})();
var G__301499 = "(";
var G__301500 = (function (){var G__301604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301605 = "sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301604,G__301605) : tailrecursion.hoplon.span.call(null,G__301604,G__301605));
})();
var G__301501 = " (";
var G__301502 = (function (){var G__301606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301607 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301606,G__301607) : tailrecursion.hoplon.span.call(null,G__301606,G__301607));
})();
var G__301503 = "(";
var G__301504 = (function (){var G__301608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301609 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301608,G__301609) : tailrecursion.hoplon.span.call(null,G__301608,G__301609));
})();
var G__301505 = " ";
var G__301506 = (function (){var G__301610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301611 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301610,G__301611) : tailrecursion.hoplon.span.call(null,G__301610,G__301611));
})();
var G__301507 = ") \n                             (";
var G__301508 = (function (){var G__301612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301613 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301612,G__301613) : tailrecursion.hoplon.span.call(null,G__301612,G__301613));
})();
var G__301509 = " ";
var G__301510 = (function (){var G__301614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301615 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301614,G__301615) : tailrecursion.hoplon.span.call(null,G__301614,G__301615));
})();
var G__301511 = ")))\n                    (";
var G__301512 = (function (){var G__301616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301617 = "arctan";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301616,G__301617) : tailrecursion.hoplon.span.call(null,G__301616,G__301617));
})();
var G__301513 = " ";
var G__301514 = (function (){var G__301618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301619 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301618,G__301619) : tailrecursion.hoplon.span.call(null,G__301618,G__301619));
})();
var G__301515 = " ";
var G__301516 = (function (){var G__301620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301621 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301620,G__301621) : tailrecursion.hoplon.span.call(null,G__301620,G__301621));
})();
var G__301517 = "))))\n\n(";
var G__301518 = (function (){var G__301622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__301623 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301622,G__301623) : tailrecursion.hoplon.span.call(null,G__301622,G__301623));
})();
var G__301519 = (function (){var G__301624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301625 = "make-from-mag-ang-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301624,G__301625) : tailrecursion.hoplon.span.call(null,G__301624,G__301625));
})();
var G__301520 = " [";
var G__301521 = (function (){var G__301626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301627 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301626,G__301627) : tailrecursion.hoplon.span.call(null,G__301626,G__301627));
})();
var G__301522 = " ";
var G__301523 = (function (){var G__301628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301629 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301628,G__301629) : tailrecursion.hoplon.span.call(null,G__301628,G__301629));
})();
var G__301524 = "]\n  (";
var G__301525 = (function (){var G__301630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__301631 = "attach-tag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301630,G__301631) : tailrecursion.hoplon.span.call(null,G__301630,G__301631));
})();
var G__301526 = " ";
var G__301527 = (function (){var G__301632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301633 = "'polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301632,G__301633) : tailrecursion.hoplon.span.call(null,G__301632,G__301633));
})();
var G__301528 = "\n              (";
var G__301529 = (function (){var G__301634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__301635 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301634,G__301635) : tailrecursion.hoplon.span.call(null,G__301634,G__301635));
})();
var G__301530 = (function (){var G__301636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301637 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301636,G__301637) : tailrecursion.hoplon.span.call(null,G__301636,G__301637));
})();
var G__301531 = " ";
var G__301532 = (function (){var G__301638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__301639 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__301638,G__301639) : tailrecursion.hoplon.span.call(null,G__301638,G__301639));
})();
var G__301533 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$99 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$99(G__301435,G__301436,G__301437,G__301438,G__301439,G__301440,G__301441,G__301442,G__301443,G__301444,G__301445,G__301446,G__301447,G__301448,G__301449,G__301450,G__301451,G__301452,G__301453,G__301454,G__301455,G__301456,G__301457,G__301458,G__301459,G__301460,G__301461,G__301462,G__301463,G__301464,G__301465,G__301466,G__301467,G__301468,G__301469,G__301470,G__301471,G__301472,G__301473,G__301474,G__301475,G__301476,G__301477,G__301478,G__301479,G__301480,G__301481,G__301482,G__301483,G__301484,G__301485,G__301486,G__301487,G__301488,G__301489,G__301490,G__301491,G__301492,G__301493,G__301494,G__301495,G__301496,G__301497,G__301498,G__301499,G__301500,G__301501,G__301502,G__301503,G__301504,G__301505,G__301506,G__301507,G__301508,G__301509,G__301510,G__301511,G__301512,G__301513,G__301514,G__301515,G__301516,G__301517,G__301518,G__301519,G__301520,G__301521,G__301522,G__301523,G__301524,G__301525,G__301526,G__301527,G__301528,G__301529,G__301530,G__301531,G__301532,G__301533) : tailrecursion.hoplon.pre.call(null,G__301435,G__301436,G__301437,G__301438,G__301439,G__301440,G__301441,G__301442,G__301443,G__301444,G__301445,G__301446,G__301447,G__301448,G__301449,G__301450,G__301451,G__301452,G__301453,G__301454,G__301455,G__301456,G__301457,G__301458,G__301459,G__301460,G__301461,G__301462,G__301463,G__301464,G__301465,G__301466,G__301467,G__301468,G__301469,G__301470,G__301471,G__301472,G__301473,G__301474,G__301475,G__301476,G__301477,G__301478,G__301479,G__301480,G__301481,G__301482,G__301483,G__301484,G__301485,G__301486,G__301487,G__301488,G__301489,G__301490,G__301491,G__301492,G__301493,G__301494,G__301495,G__301496,G__301497,G__301498,G__301499,G__301500,G__301501,G__301502,G__301503,G__301504,G__301505,G__301506,G__301507,G__301508,G__301509,G__301510,G__301511,G__301512,G__301513,G__301514,G__301515,G__301516,G__301517,G__301518,G__301519,G__301520,G__301521,G__301522,G__301523,G__301524,G__301525,G__301526,G__301527,G__301528,G__301529,G__301530,G__301531,G__301532,G__301533));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__301433,G__301434) : tailrecursion.hoplon.div.call(null,G__301433,G__301434));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__301432) : tailrecursion.hoplon.div.call(null,G__301432));
})(),(function (){var G__301640 = cljs.core.PersistentArrayMap.EMPTY;
var G__301641 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Each generic selector is implemented as a procedure that checks the tag of its argument and calls the appropriate procedure for handling data of that type. For example, to obtain the real part of a complex number, ",(function (){var G__301642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"real-part"], null);
var G__301643 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__301642,G__301643) : tailrecursion.hoplon.markdown.code_node.call(null,G__301642,G__301643));
})()," examines the tag to determine whether to use Ben",(function (){var G__301644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__301645 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__301644,G__301645) : tailrecursion.hoplon.markdown.simple_node.call(null,G__301644,G__301645));
})(),"s ",(function (){var G__301646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"real-part-rectangular"], null);
var G__301647 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__301646,G__301647) : tailrecursion.hoplon.markdown.code_node.call(null,G__301646,G__301647));
})()," or Alyssa",(function (){var G__301648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__301649 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__301648,G__301649) : tailrecursion.hoplon.markdown.simple_node.call(null,G__301648,G__301649));
})(),"s ",(function (){var G__301650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"real-part-polar"], null);
var G__301651 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__301650,G__301651) : tailrecursion.hoplon.markdown.code_node.call(null,G__301650,G__301651));
})(),". In either case, we use ",(function (){var G__301652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"contents"], null);
var G__301653 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__301652,G__301653) : tailrecursion.hoplon.markdown.code_node.call(null,G__301652,G__301653));
})()," to extract the bare, untagged datum and send this to the rectangular or polar procedure as required:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__301640,G__301641) : tailrecursion.hoplon.markdown.para_node.call(null,G__301640,G__301641));
})(),(function (){var G__301942 = (function (){var G__301943 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__301944 = (function (){var G__301945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__301946 = "(";
var G__301947 = (function (){var G__302087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__302088 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302087,G__302088) : tailrecursion.hoplon.span.call(null,G__302087,G__302088));
})();
var G__301948 = (function (){var G__302089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302090 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302089,G__302090) : tailrecursion.hoplon.span.call(null,G__302089,G__302090));
})();
var G__301949 = " [";
var G__301950 = (function (){var G__302091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302092 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302091,G__302092) : tailrecursion.hoplon.span.call(null,G__302091,G__302092));
})();
var G__301951 = "]\n  (";
var G__301952 = (function (){var G__302093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__302094 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302093,G__302094) : tailrecursion.hoplon.span.call(null,G__302093,G__302094));
})();
var G__301953 = "(";
var G__301954 = (function (){var G__302095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302096 = "rectangular?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302095,G__302096) : tailrecursion.hoplon.span.call(null,G__302095,G__302096));
})();
var G__301955 = " ";
var G__301956 = (function (){var G__302097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302098 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302097,G__302098) : tailrecursion.hoplon.span.call(null,G__302097,G__302098));
})();
var G__301957 = ") (";
var G__301958 = (function (){var G__302099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302100 = "real-part-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302099,G__302100) : tailrecursion.hoplon.span.call(null,G__302099,G__302100));
})();
var G__301959 = " (";
var G__301960 = (function (){var G__302101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302102 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302101,G__302102) : tailrecursion.hoplon.span.call(null,G__302101,G__302102));
})();
var G__301961 = " ";
var G__301962 = (function (){var G__302103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302104 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302103,G__302104) : tailrecursion.hoplon.span.call(null,G__302103,G__302104));
})();
var G__301963 = "))\n        (";
var G__301964 = (function (){var G__302105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302106 = "polar?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302105,G__302106) : tailrecursion.hoplon.span.call(null,G__302105,G__302106));
})();
var G__301965 = " ";
var G__301966 = (function (){var G__302107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302108 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302107,G__302108) : tailrecursion.hoplon.span.call(null,G__302107,G__302108));
})();
var G__301967 = ")       (";
var G__301968 = (function (){var G__302109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302110 = "real-part-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302109,G__302110) : tailrecursion.hoplon.span.call(null,G__302109,G__302110));
})();
var G__301969 = "       (";
var G__301970 = (function (){var G__302111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302112 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302111,G__302112) : tailrecursion.hoplon.span.call(null,G__302111,G__302112));
})();
var G__301971 = " ";
var G__301972 = (function (){var G__302113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302114 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302113,G__302114) : tailrecursion.hoplon.span.call(null,G__302113,G__302114));
})();
var G__301973 = "))\n        ";
var G__301974 = (function (){var G__302115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302116 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302115,G__302116) : tailrecursion.hoplon.span.call(null,G__302115,G__302116));
})();
var G__301975 = " (";
var G__301976 = (function (){var G__302117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302118 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302117,G__302118) : tailrecursion.hoplon.span.call(null,G__302117,G__302118));
})();
var G__301977 = " (";
var G__301978 = (function (){var G__302119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302120 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302119,G__302120) : tailrecursion.hoplon.span.call(null,G__302119,G__302120));
})();
var G__301979 = " ";
var G__301980 = (function (){var G__302121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__302122 = "\"Unknown type -- REAL-PART\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302121,G__302122) : tailrecursion.hoplon.span.call(null,G__302121,G__302122));
})();
var G__301981 = "))))\n\n(";
var G__301982 = (function (){var G__302123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__302124 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302123,G__302124) : tailrecursion.hoplon.span.call(null,G__302123,G__302124));
})();
var G__301983 = (function (){var G__302125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302126 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302125,G__302126) : tailrecursion.hoplon.span.call(null,G__302125,G__302126));
})();
var G__301984 = " [";
var G__301985 = (function (){var G__302127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302128 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302127,G__302128) : tailrecursion.hoplon.span.call(null,G__302127,G__302128));
})();
var G__301986 = "]\n  (";
var G__301987 = (function (){var G__302129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__302130 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302129,G__302130) : tailrecursion.hoplon.span.call(null,G__302129,G__302130));
})();
var G__301988 = "(";
var G__301989 = (function (){var G__302131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302132 = "rectangular?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302131,G__302132) : tailrecursion.hoplon.span.call(null,G__302131,G__302132));
})();
var G__301990 = " ";
var G__301991 = (function (){var G__302133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302134 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302133,G__302134) : tailrecursion.hoplon.span.call(null,G__302133,G__302134));
})();
var G__301992 = ") (";
var G__301993 = (function (){var G__302135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302136 = "imag-part-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302135,G__302136) : tailrecursion.hoplon.span.call(null,G__302135,G__302136));
})();
var G__301994 = " (";
var G__301995 = (function (){var G__302137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302138 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302137,G__302138) : tailrecursion.hoplon.span.call(null,G__302137,G__302138));
})();
var G__301996 = " ";
var G__301997 = (function (){var G__302139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302140 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302139,G__302140) : tailrecursion.hoplon.span.call(null,G__302139,G__302140));
})();
var G__301998 = "))\n        (";
var G__301999 = (function (){var G__302141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302142 = "polar?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302141,G__302142) : tailrecursion.hoplon.span.call(null,G__302141,G__302142));
})();
var G__302000 = " ";
var G__302001 = (function (){var G__302143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302144 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302143,G__302144) : tailrecursion.hoplon.span.call(null,G__302143,G__302144));
})();
var G__302002 = ")       (";
var G__302003 = (function (){var G__302145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302146 = "imag-part-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302145,G__302146) : tailrecursion.hoplon.span.call(null,G__302145,G__302146));
})();
var G__302004 = "       (";
var G__302005 = (function (){var G__302147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302148 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302147,G__302148) : tailrecursion.hoplon.span.call(null,G__302147,G__302148));
})();
var G__302006 = " ";
var G__302007 = (function (){var G__302149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302150 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302149,G__302150) : tailrecursion.hoplon.span.call(null,G__302149,G__302150));
})();
var G__302008 = "))\n        ";
var G__302009 = (function (){var G__302151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302152 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302151,G__302152) : tailrecursion.hoplon.span.call(null,G__302151,G__302152));
})();
var G__302010 = " (";
var G__302011 = (function (){var G__302153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302154 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302153,G__302154) : tailrecursion.hoplon.span.call(null,G__302153,G__302154));
})();
var G__302012 = " (";
var G__302013 = (function (){var G__302155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302156 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302155,G__302156) : tailrecursion.hoplon.span.call(null,G__302155,G__302156));
})();
var G__302014 = " ";
var G__302015 = (function (){var G__302157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__302158 = "\"Unknown type -- IMAG-PART\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302157,G__302158) : tailrecursion.hoplon.span.call(null,G__302157,G__302158));
})();
var G__302016 = "))))\n\n(";
var G__302017 = (function (){var G__302159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__302160 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302159,G__302160) : tailrecursion.hoplon.span.call(null,G__302159,G__302160));
})();
var G__302018 = (function (){var G__302161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302162 = "magnitude";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302161,G__302162) : tailrecursion.hoplon.span.call(null,G__302161,G__302162));
})();
var G__302019 = " [";
var G__302020 = (function (){var G__302163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302164 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302163,G__302164) : tailrecursion.hoplon.span.call(null,G__302163,G__302164));
})();
var G__302021 = "]\n  (";
var G__302022 = (function (){var G__302165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__302166 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302165,G__302166) : tailrecursion.hoplon.span.call(null,G__302165,G__302166));
})();
var G__302023 = "(";
var G__302024 = (function (){var G__302167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302168 = "rectangular?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302167,G__302168) : tailrecursion.hoplon.span.call(null,G__302167,G__302168));
})();
var G__302025 = " ";
var G__302026 = (function (){var G__302169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302170 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302169,G__302170) : tailrecursion.hoplon.span.call(null,G__302169,G__302170));
})();
var G__302027 = ") (";
var G__302028 = (function (){var G__302171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302172 = "magnitude-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302171,G__302172) : tailrecursion.hoplon.span.call(null,G__302171,G__302172));
})();
var G__302029 = " (";
var G__302030 = (function (){var G__302173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302174 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302173,G__302174) : tailrecursion.hoplon.span.call(null,G__302173,G__302174));
})();
var G__302031 = " ";
var G__302032 = (function (){var G__302175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302176 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302175,G__302176) : tailrecursion.hoplon.span.call(null,G__302175,G__302176));
})();
var G__302033 = "))\n        (";
var G__302034 = (function (){var G__302177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302178 = "polar?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302177,G__302178) : tailrecursion.hoplon.span.call(null,G__302177,G__302178));
})();
var G__302035 = " ";
var G__302036 = (function (){var G__302179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302180 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302179,G__302180) : tailrecursion.hoplon.span.call(null,G__302179,G__302180));
})();
var G__302037 = ")       (";
var G__302038 = (function (){var G__302181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302182 = "magnitude-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302181,G__302182) : tailrecursion.hoplon.span.call(null,G__302181,G__302182));
})();
var G__302039 = "       (";
var G__302040 = (function (){var G__302183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302184 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302183,G__302184) : tailrecursion.hoplon.span.call(null,G__302183,G__302184));
})();
var G__302041 = " ";
var G__302042 = (function (){var G__302185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302186 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302185,G__302186) : tailrecursion.hoplon.span.call(null,G__302185,G__302186));
})();
var G__302043 = "))\n        ";
var G__302044 = (function (){var G__302187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302188 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302187,G__302188) : tailrecursion.hoplon.span.call(null,G__302187,G__302188));
})();
var G__302045 = " (";
var G__302046 = (function (){var G__302189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302190 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302189,G__302190) : tailrecursion.hoplon.span.call(null,G__302189,G__302190));
})();
var G__302047 = " (";
var G__302048 = (function (){var G__302191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302192 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302191,G__302192) : tailrecursion.hoplon.span.call(null,G__302191,G__302192));
})();
var G__302049 = " ";
var G__302050 = (function (){var G__302193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__302194 = "\"Unknown type -- MAGNITUDE\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302193,G__302194) : tailrecursion.hoplon.span.call(null,G__302193,G__302194));
})();
var G__302051 = "))))\n\n(";
var G__302052 = (function (){var G__302195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__302196 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302195,G__302196) : tailrecursion.hoplon.span.call(null,G__302195,G__302196));
})();
var G__302053 = (function (){var G__302197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302198 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302197,G__302198) : tailrecursion.hoplon.span.call(null,G__302197,G__302198));
})();
var G__302054 = " [";
var G__302055 = (function (){var G__302199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302200 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302199,G__302200) : tailrecursion.hoplon.span.call(null,G__302199,G__302200));
})();
var G__302056 = "]\n  (";
var G__302057 = (function (){var G__302201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__302202 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302201,G__302202) : tailrecursion.hoplon.span.call(null,G__302201,G__302202));
})();
var G__302058 = "(";
var G__302059 = (function (){var G__302203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302204 = "rectangular?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302203,G__302204) : tailrecursion.hoplon.span.call(null,G__302203,G__302204));
})();
var G__302060 = " ";
var G__302061 = (function (){var G__302205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302206 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302205,G__302206) : tailrecursion.hoplon.span.call(null,G__302205,G__302206));
})();
var G__302062 = ") (";
var G__302063 = (function (){var G__302207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302208 = "angle-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302207,G__302208) : tailrecursion.hoplon.span.call(null,G__302207,G__302208));
})();
var G__302064 = " (";
var G__302065 = (function (){var G__302209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302210 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302209,G__302210) : tailrecursion.hoplon.span.call(null,G__302209,G__302210));
})();
var G__302066 = " ";
var G__302067 = (function (){var G__302211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302212 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302211,G__302212) : tailrecursion.hoplon.span.call(null,G__302211,G__302212));
})();
var G__302068 = "))\n        (";
var G__302069 = (function (){var G__302213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302214 = "polar?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302213,G__302214) : tailrecursion.hoplon.span.call(null,G__302213,G__302214));
})();
var G__302070 = " ";
var G__302071 = (function (){var G__302215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302216 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302215,G__302216) : tailrecursion.hoplon.span.call(null,G__302215,G__302216));
})();
var G__302072 = ")       (";
var G__302073 = (function (){var G__302217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302218 = "angle-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302217,G__302218) : tailrecursion.hoplon.span.call(null,G__302217,G__302218));
})();
var G__302074 = "       (";
var G__302075 = (function (){var G__302219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302220 = "contents";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302219,G__302220) : tailrecursion.hoplon.span.call(null,G__302219,G__302220));
})();
var G__302076 = " ";
var G__302077 = (function (){var G__302221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302222 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302221,G__302222) : tailrecursion.hoplon.span.call(null,G__302221,G__302222));
})();
var G__302078 = "))\n        ";
var G__302079 = (function (){var G__302223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302224 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302223,G__302224) : tailrecursion.hoplon.span.call(null,G__302223,G__302224));
})();
var G__302080 = " (";
var G__302081 = (function (){var G__302225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302226 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302225,G__302226) : tailrecursion.hoplon.span.call(null,G__302225,G__302226));
})();
var G__302082 = " (";
var G__302083 = (function (){var G__302227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302228 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302227,G__302228) : tailrecursion.hoplon.span.call(null,G__302227,G__302228));
})();
var G__302084 = " ";
var G__302085 = (function (){var G__302229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__302230 = "\"Unknown type -- ANGLE\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302229,G__302230) : tailrecursion.hoplon.span.call(null,G__302229,G__302230));
})();
var G__302086 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$142 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$142(G__301945,G__301946,G__301947,G__301948,G__301949,G__301950,G__301951,G__301952,G__301953,G__301954,G__301955,G__301956,G__301957,G__301958,G__301959,G__301960,G__301961,G__301962,G__301963,G__301964,G__301965,G__301966,G__301967,G__301968,G__301969,G__301970,G__301971,G__301972,G__301973,G__301974,G__301975,G__301976,G__301977,G__301978,G__301979,G__301980,G__301981,G__301982,G__301983,G__301984,G__301985,G__301986,G__301987,G__301988,G__301989,G__301990,G__301991,G__301992,G__301993,G__301994,G__301995,G__301996,G__301997,G__301998,G__301999,G__302000,G__302001,G__302002,G__302003,G__302004,G__302005,G__302006,G__302007,G__302008,G__302009,G__302010,G__302011,G__302012,G__302013,G__302014,G__302015,G__302016,G__302017,G__302018,G__302019,G__302020,G__302021,G__302022,G__302023,G__302024,G__302025,G__302026,G__302027,G__302028,G__302029,G__302030,G__302031,G__302032,G__302033,G__302034,G__302035,G__302036,G__302037,G__302038,G__302039,G__302040,G__302041,G__302042,G__302043,G__302044,G__302045,G__302046,G__302047,G__302048,G__302049,G__302050,G__302051,G__302052,G__302053,G__302054,G__302055,G__302056,G__302057,G__302058,G__302059,G__302060,G__302061,G__302062,G__302063,G__302064,G__302065,G__302066,G__302067,G__302068,G__302069,G__302070,G__302071,G__302072,G__302073,G__302074,G__302075,G__302076,G__302077,G__302078,G__302079,G__302080,G__302081,G__302082,G__302083,G__302084,G__302085,G__302086) : tailrecursion.hoplon.pre.call(null,G__301945,G__301946,G__301947,G__301948,G__301949,G__301950,G__301951,G__301952,G__301953,G__301954,G__301955,G__301956,G__301957,G__301958,G__301959,G__301960,G__301961,G__301962,G__301963,G__301964,G__301965,G__301966,G__301967,G__301968,G__301969,G__301970,G__301971,G__301972,G__301973,G__301974,G__301975,G__301976,G__301977,G__301978,G__301979,G__301980,G__301981,G__301982,G__301983,G__301984,G__301985,G__301986,G__301987,G__301988,G__301989,G__301990,G__301991,G__301992,G__301993,G__301994,G__301995,G__301996,G__301997,G__301998,G__301999,G__302000,G__302001,G__302002,G__302003,G__302004,G__302005,G__302006,G__302007,G__302008,G__302009,G__302010,G__302011,G__302012,G__302013,G__302014,G__302015,G__302016,G__302017,G__302018,G__302019,G__302020,G__302021,G__302022,G__302023,G__302024,G__302025,G__302026,G__302027,G__302028,G__302029,G__302030,G__302031,G__302032,G__302033,G__302034,G__302035,G__302036,G__302037,G__302038,G__302039,G__302040,G__302041,G__302042,G__302043,G__302044,G__302045,G__302046,G__302047,G__302048,G__302049,G__302050,G__302051,G__302052,G__302053,G__302054,G__302055,G__302056,G__302057,G__302058,G__302059,G__302060,G__302061,G__302062,G__302063,G__302064,G__302065,G__302066,G__302067,G__302068,G__302069,G__302070,G__302071,G__302072,G__302073,G__302074,G__302075,G__302076,G__302077,G__302078,G__302079,G__302080,G__302081,G__302082,G__302083,G__302084,G__302085,G__302086));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__301943,G__301944) : tailrecursion.hoplon.div.call(null,G__301943,G__301944));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__301942) : tailrecursion.hoplon.div.call(null,G__301942));
})(),(function (){var G__302231 = cljs.core.PersistentArrayMap.EMPTY;
var G__302232 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To implement the complex-number arithmetic operations, we can use the same procedures ",(function (){var G__302233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-complex"], null);
var G__302234 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__302233,G__302234) : tailrecursion.hoplon.markdown.code_node.call(null,G__302233,G__302234));
})(),", ",(function (){var G__302235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-complex"], null);
var G__302236 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__302235,G__302236) : tailrecursion.hoplon.markdown.code_node.call(null,G__302235,G__302236));
})(),", ",(function (){var G__302237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mul-complex"], null);
var G__302238 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__302237,G__302238) : tailrecursion.hoplon.markdown.code_node.call(null,G__302237,G__302238));
})(),", and ",(function (){var G__302239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"div-complex"], null);
var G__302240 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__302239,G__302240) : tailrecursion.hoplon.markdown.code_node.call(null,G__302239,G__302240));
})()," from section 2.4.1, because the selectors they call are generic, and so will work with either representation. For example, the procedure ",(function (){var G__302241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-complex"], null);
var G__302242 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__302241,G__302242) : tailrecursion.hoplon.markdown.code_node.call(null,G__302241,G__302242));
})()," is still"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__302231,G__302232) : tailrecursion.hoplon.markdown.para_node.call(null,G__302231,G__302232));
})(),(function (){var G__302306 = (function (){var G__302307 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__302308 = (function (){var G__302309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__302310 = "(";
var G__302311 = (function (){var G__302340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__302341 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302340,G__302341) : tailrecursion.hoplon.span.call(null,G__302340,G__302341));
})();
var G__302312 = (function (){var G__302342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302343 = "add-complex";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302342,G__302343) : tailrecursion.hoplon.span.call(null,G__302342,G__302343));
})();
var G__302313 = " [";
var G__302314 = (function (){var G__302344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302345 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302344,G__302345) : tailrecursion.hoplon.span.call(null,G__302344,G__302345));
})();
var G__302315 = " ";
var G__302316 = (function (){var G__302346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302347 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302346,G__302347) : tailrecursion.hoplon.span.call(null,G__302346,G__302347));
})();
var G__302317 = "]\n  (";
var G__302318 = (function (){var G__302348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302349 = "make-from-real-imag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302348,G__302349) : tailrecursion.hoplon.span.call(null,G__302348,G__302349));
})();
var G__302319 = " (";
var G__302320 = (function (){var G__302350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__302351 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302350,G__302351) : tailrecursion.hoplon.span.call(null,G__302350,G__302351));
})();
var G__302321 = "(";
var G__302322 = (function (){var G__302352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302353 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302352,G__302353) : tailrecursion.hoplon.span.call(null,G__302352,G__302353));
})();
var G__302323 = " ";
var G__302324 = (function (){var G__302354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302355 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302354,G__302355) : tailrecursion.hoplon.span.call(null,G__302354,G__302355));
})();
var G__302325 = ") (";
var G__302326 = (function (){var G__302356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302357 = "real-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302356,G__302357) : tailrecursion.hoplon.span.call(null,G__302356,G__302357));
})();
var G__302327 = " ";
var G__302328 = (function (){var G__302358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302359 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302358,G__302359) : tailrecursion.hoplon.span.call(null,G__302358,G__302359));
})();
var G__302329 = "))\n                       (";
var G__302330 = (function (){var G__302360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__302361 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302360,G__302361) : tailrecursion.hoplon.span.call(null,G__302360,G__302361));
})();
var G__302331 = "(";
var G__302332 = (function (){var G__302362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302363 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302362,G__302363) : tailrecursion.hoplon.span.call(null,G__302362,G__302363));
})();
var G__302333 = " ";
var G__302334 = (function (){var G__302364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302365 = "z1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302364,G__302365) : tailrecursion.hoplon.span.call(null,G__302364,G__302365));
})();
var G__302335 = ") (";
var G__302336 = (function (){var G__302366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302367 = "imag-part";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302366,G__302367) : tailrecursion.hoplon.span.call(null,G__302366,G__302367));
})();
var G__302337 = " ";
var G__302338 = (function (){var G__302368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302369 = "z2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302368,G__302369) : tailrecursion.hoplon.span.call(null,G__302368,G__302369));
})();
var G__302339 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__302309,G__302310,G__302311,G__302312,G__302313,G__302314,G__302315,G__302316,G__302317,G__302318,G__302319,G__302320,G__302321,G__302322,G__302323,G__302324,G__302325,G__302326,G__302327,G__302328,G__302329,G__302330,G__302331,G__302332,G__302333,G__302334,G__302335,G__302336,G__302337,G__302338,G__302339) : tailrecursion.hoplon.pre.call(null,G__302309,G__302310,G__302311,G__302312,G__302313,G__302314,G__302315,G__302316,G__302317,G__302318,G__302319,G__302320,G__302321,G__302322,G__302323,G__302324,G__302325,G__302326,G__302327,G__302328,G__302329,G__302330,G__302331,G__302332,G__302333,G__302334,G__302335,G__302336,G__302337,G__302338,G__302339));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__302307,G__302308) : tailrecursion.hoplon.div.call(null,G__302307,G__302308));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__302306) : tailrecursion.hoplon.div.call(null,G__302306));
})(),(function (){var G__302370 = cljs.core.PersistentArrayMap.EMPTY;
var G__302371 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Finally, we must choose whether to construct complex numbers using Ben",(function (){var G__302372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__302373 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__302372,G__302373) : tailrecursion.hoplon.markdown.simple_node.call(null,G__302372,G__302373));
})(),"s representation or Alyssa",(function (){var G__302374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__302375 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__302374,G__302375) : tailrecursion.hoplon.markdown.simple_node.call(null,G__302374,G__302375));
})(),"s representation. One reasonable choice is to construct rectangular numbers whenever we have real and imaginary parts and to construct polar numbers whenever we have magnitudes and angles:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__302370,G__302371) : tailrecursion.hoplon.markdown.para_node.call(null,G__302370,G__302371));
})(),(function (){var G__302434 = (function (){var G__302435 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__302436 = (function (){var G__302437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__302438 = "(";
var G__302439 = (function (){var G__302465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__302466 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302465,G__302466) : tailrecursion.hoplon.span.call(null,G__302465,G__302466));
})();
var G__302440 = (function (){var G__302467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302468 = "make-from-real-imag";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302467,G__302468) : tailrecursion.hoplon.span.call(null,G__302467,G__302468));
})();
var G__302441 = " [";
var G__302442 = (function (){var G__302469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302470 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302469,G__302470) : tailrecursion.hoplon.span.call(null,G__302469,G__302470));
})();
var G__302443 = " ";
var G__302444 = (function (){var G__302471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302472 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302471,G__302472) : tailrecursion.hoplon.span.call(null,G__302471,G__302472));
})();
var G__302445 = "]\n  (";
var G__302446 = (function (){var G__302473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302474 = "make-from-real-imag-rectangular";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302473,G__302474) : tailrecursion.hoplon.span.call(null,G__302473,G__302474));
})();
var G__302447 = " ";
var G__302448 = (function (){var G__302475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302476 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302475,G__302476) : tailrecursion.hoplon.span.call(null,G__302475,G__302476));
})();
var G__302449 = " ";
var G__302450 = (function (){var G__302477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302478 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302477,G__302478) : tailrecursion.hoplon.span.call(null,G__302477,G__302478));
})();
var G__302451 = "))\n\n(";
var G__302452 = (function (){var G__302479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__302480 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302479,G__302480) : tailrecursion.hoplon.span.call(null,G__302479,G__302480));
})();
var G__302453 = (function (){var G__302481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302482 = "make-from-mag-ang";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302481,G__302482) : tailrecursion.hoplon.span.call(null,G__302481,G__302482));
})();
var G__302454 = " [";
var G__302455 = (function (){var G__302483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302484 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302483,G__302484) : tailrecursion.hoplon.span.call(null,G__302483,G__302484));
})();
var G__302456 = " ";
var G__302457 = (function (){var G__302485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302486 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302485,G__302486) : tailrecursion.hoplon.span.call(null,G__302485,G__302486));
})();
var G__302458 = "]\n  (";
var G__302459 = (function (){var G__302487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__302488 = "make-from-mag-ang-polar";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302487,G__302488) : tailrecursion.hoplon.span.call(null,G__302487,G__302488));
})();
var G__302460 = " ";
var G__302461 = (function (){var G__302489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302490 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302489,G__302490) : tailrecursion.hoplon.span.call(null,G__302489,G__302490));
})();
var G__302462 = " ";
var G__302463 = (function (){var G__302491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__302492 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__302491,G__302492) : tailrecursion.hoplon.span.call(null,G__302491,G__302492));
})();
var G__302464 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__302437,G__302438,G__302439,G__302440,G__302441,G__302442,G__302443,G__302444,G__302445,G__302446,G__302447,G__302448,G__302449,G__302450,G__302451,G__302452,G__302453,G__302454,G__302455,G__302456,G__302457,G__302458,G__302459,G__302460,G__302461,G__302462,G__302463,G__302464) : tailrecursion.hoplon.pre.call(null,G__302437,G__302438,G__302439,G__302440,G__302441,G__302442,G__302443,G__302444,G__302445,G__302446,G__302447,G__302448,G__302449,G__302450,G__302451,G__302452,G__302453,G__302454,G__302455,G__302456,G__302457,G__302458,G__302459,G__302460,G__302461,G__302462,G__302463,G__302464));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__302435,G__302436) : tailrecursion.hoplon.div.call(null,G__302435,G__302436));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__302434) : tailrecursion.hoplon.div.call(null,G__302434));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_300415;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_300414;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_300413;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_300412;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"Structure of the generic complex-arithmetic system."], null)], 0)),"",(function (){var _STAR_references_STAR_302493 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_302494 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_302495 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_302496 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__302497 = cljs.core.PersistentArrayMap.EMPTY;
var G__302498 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The resulting complex-number system has the structure shown in figure 2.21. The system has been decomposed into three relatively independent parts: the complex-number-arithmetic operations, Alyssa",(function (){var G__302499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__302500 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__302499,G__302500) : tailrecursion.hoplon.markdown.simple_node.call(null,G__302499,G__302500));
})(),"s polar implementation, and Ben",(function (){var G__302501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__302502 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__302501,G__302502) : tailrecursion.hoplon.markdown.simple_node.call(null,G__302501,G__302502));
})(),"s rectangular implementation. The polar and rectangular implementations could have been written by Ben and Alyssa working seperately, and both of these can be used as underlying representations by a third programmer implementing the complex-arithmetic procedures in terms of the abstract constructor/selector interface."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__302497,G__302498) : tailrecursion.hoplon.markdown.para_node.call(null,G__302497,G__302498));
})(),(function (){var G__302503 = cljs.core.PersistentArrayMap.EMPTY;
var G__302504 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since each data object is tagged with its type, the selectors operate on the data in a generic manner. That is, each selector is defined to have a behavior that depends upon the particular type of data it is applied to. Notice the general mechanism for interfacing the separate representations: Within a given representation implementation (say, Alyssa",(function (){var G__302505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__302506 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__302505,G__302506) : tailrecursion.hoplon.markdown.simple_node.call(null,G__302505,G__302506));
})(),"s polar package) a complex number is an untyped pair (magnitude, angle). When a generic selector operates on a number of ",(function (){var G__302507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"polar type"], null);
var G__302508 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__302507,G__302508) : tailrecursion.hoplon.markdown.code_node.call(null,G__302507,G__302508));
})(),", it strips off the tag and passes the contents on to Alyssa",(function (){var G__302509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__302510 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__302509,G__302510) : tailrecursion.hoplon.markdown.simple_node.call(null,G__302509,G__302510));
})(),"s code. Conversely, when Alyssa constructs a number for general use, she tags it with a type so that it can be appropriately recognized by the higher-level procedures. This discipline of stripping off and attaching tags as data objects are passed from level to level can be an important organizational strategy, as we shall see in section 2.5."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__302503,G__302504) : tailrecursion.hoplon.markdown.para_node.call(null,G__302503,G__302504));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_302496;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_302495;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_302494;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_302493;
}})()], 0));
var G__298952 = "";
var G__298953 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Data-Directed Programming and Additivity"], null),(function (){var _STAR_references_STAR_302511 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_302512 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_302513 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_302514 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__302515 = cljs.core.PersistentArrayMap.EMPTY;
var G__302516 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The general strategy of checking the type of a datum and calling an appropriate procedure is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["dispatching on type"], null)], 0)),". This is a powerful strategy for obtaining modularity in system design. On the other hand, implementing the dispatch as in section 2.4.2 has two significant weaknesses. One weakness is that the generic interface procedures (",(function (){var G__302517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"real-part"], null);
var G__302518 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__302517,G__302518) : tailrecursion.hoplon.markdown.code_node.call(null,G__302517,G__302518));
})(),", ",(function (){var G__302519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"imag-part"], null);
var G__302520 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__302519,G__302520) : tailrecursion.hoplon.markdown.code_node.call(null,G__302519,G__302520));
})(),", ",(function (){var G__302521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"magnitude"], null);
var G__302522 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__302521,G__302522) : tailrecursion.hoplon.markdown.code_node.call(null,G__302521,G__302522));
})(),", and ",(function (){var G__302523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"angle"], null);
var G__302524 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__302523,G__302524) : tailrecursion.hoplon.markdown.code_node.call(null,G__302523,G__302524));
})(),") must know about all the different representations. For instance, suppose we wanted to incorporate a new representation for complex numbers into our complex-number system. We would need to indentify this new representation with a type, and then add a clause to each of the generic interface procedures to check for the new type and apply the appropriate selector for that representation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__302515,G__302516) : tailrecursion.hoplon.markdown.para_node.call(null,G__302515,G__302516));
})(),(function (){var G__302525 = cljs.core.PersistentArrayMap.EMPTY;
var G__302526 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Another weakness of the technique is that even though the individual representations can be designed separately, we must guarantee that no two procedures in the entire system have the same name. This is why Ben and Alyssa had to change the names of their original procedures from section 2.4.1."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__302525,G__302526) : tailrecursion.hoplon.markdown.para_node.call(null,G__302525,G__302526));
})(),(function (){var G__302527 = cljs.core.PersistentArrayMap.EMPTY;
var G__302528 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The issue underlying both of these weaknesses is that the technique for implementing generic interfaces is not additive. The person implementing the generic selector procedures must modify those procedures each time a new representation is installed, and the people interfacing the individual representations must modify their code to avoid name conflicts. In each of these cases, the changes that must be made to the code are straightforward, but they must be made nonetheless, and this is a source of inconvenience and error. This is not much of a problem for the complex-number system as it stands, but suppose there were not two but hundreds of different representations for complex numbers. And suppose that there were many generic selectors to be maintained in the abstract-data interface. Suppose, in fact, that no one programmer knew all the interface procedures or all the representations. The problem is real and must be addressed in such programs as large-scale data-base-management systems."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__302527,G__302528) : tailrecursion.hoplon.markdown.para_node.call(null,G__302527,G__302528));
})(),(function (){var G__302529 = cljs.core.PersistentArrayMap.EMPTY;
var G__302530 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What we need is a means for modularizing the system design even further. This is provided by the programming technique known as data-directed programming. To understand how data-directed programming works, begin with the observation that whenever we deal with a set of generic operations that are common to a set of different types we are, in effect, dealing with a two-dimensional table that contains the possible operations on one axis and the possible types on the other axis. The entries in the table are the procedures that implement each operation for each type of argument presented. In the complex-number system developed in the previous section, the correspondence between operation name, data type, and actual procedure was spread out among the various conditional clauses in the generic interface procedures. But the same information could have been organized in a table, as shown in figure 2.22."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__302529,G__302530) : tailrecursion.hoplon.markdown.para_node.call(null,G__302529,G__302530));
})(),(function (){var G__302531 = cljs.core.PersistentArrayMap.EMPTY;
var G__302532 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Data-directed programming is the technique of designing programs to work with such a table directly. Previously, we implemented the mechanism that interfaces the complex-arithmetic code with the two representation packages as a set of procedures that each perform an explicit dispatch on type. Here we will implement the interface as a single procedure that looks up the combination of the operation name and argument type in the table to find the correct procedure to apply, and then applies it to the contents of the argument. If we do this, then to add a new representation package to the system we need not change any existing procedures; we need only add new entries to the table."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__302531,G__302532) : tailrecursion.hoplon.markdown.para_node.call(null,G__302531,G__302532));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_302514;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_302513;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_302512;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_302511;
}})()], 0));
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$8(G__298946,G__298947,G__298948,G__298949,G__298950,G__298951,G__298952,G__298953) : tailrecursion.hoplon.div.call(null,G__298946,G__298947,G__298948,G__298949,G__298950,G__298951,G__298952,G__298953));
};
var book$sicp$texts$ch2sect4$content = function (var_args){
var args__8082__auto__ = null;
if (arguments.length > 0) {
var G__302533__i = 0, G__302533__a = new Array(arguments.length -  0);
while (G__302533__i < G__302533__a.length) {G__302533__a[G__302533__i] = arguments[G__302533__i + 0]; ++G__302533__i;}
  args__8082__auto__ = new cljs.core.IndexedSeq(G__302533__a,0);
} 
return book$sicp$texts$ch2sect4$content__delegate.call(this,args__8082__auto__);};
book$sicp$texts$ch2sect4$content.cljs$lang$maxFixedArity = 0;
book$sicp$texts$ch2sect4$content.cljs$lang$applyTo = (function (arglist__302534){
var args__8082__auto__ = cljs.core.seq(arglist__302534);
return book$sicp$texts$ch2sect4$content__delegate(args__8082__auto__);
});
book$sicp$texts$ch2sect4$content.cljs$core$IFn$_invoke$arity$variadic = book$sicp$texts$ch2sect4$content__delegate;
return book$sicp$texts$ch2sect4$content;
})()
;

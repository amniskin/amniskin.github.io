// Compiled by ClojureScript 1.7.48 {:static-fns true, :optimize-constants true}
goog.provide('book.sicp.texts.ch1sect2');
goog.require('cljs.core');
goog.require('tailrecursion.hoplon.markdown');
goog.require('book.sicp.book_data');
goog.require('tailrecursion.hoplon');
goog.require('tailrecursion.javelin');
/**
 * @param {...*} var_args
 */
book.sicp.texts.ch1sect2.content = (function() { 
var book$sicp$texts$ch1sect2$content__delegate = function (args__8082__auto__){
var vec__279802 = tailrecursion.hoplon.parse_args(args__8082__auto__);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__279802,(0),null);
var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__279802,(1),null);
var G__279803 = cljs.core.PersistentArrayMap.EMPTY;
var G__279804 = book.sicp.book_data.sect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Procedures and the Processes They Generate"], null),(function (){var _STAR_references_STAR_279834 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_279835 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_279836 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_279837 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__279838 = cljs.core.PersistentArrayMap.EMPTY;
var G__279839 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We have now considered the elements of programming: We have used primitive arithmetic operations, we have combined these operations, and we have abstracted these composite operations by defining them as compound procedures. But that is not enough to enable us to say that we know how to program. Our situation is analogous to that of someone who has learned the rules for how the pieces move in chess but knows nothing of typical openings, tactics, or strategy. Like the novice chess player, we don",(function (){var G__279840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__279841 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__279840,G__279841) : tailrecursion.hoplon.markdown.simple_node.call(null,G__279840,G__279841));
})(),"t yet know the common patterns of usage in the domain. We lack the knowledge of which moves are worth making (which procedures are worth defining). We lack the experience to predict the consequences of making a move (executing a procedure)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__279838,G__279839) : tailrecursion.hoplon.markdown.para_node.call(null,G__279838,G__279839));
})(),(function (){var G__279842 = cljs.core.PersistentArrayMap.EMPTY;
var G__279843 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ability to visualize the consequences of the actions under consideration is crucial to becoming an expert programmer, just as it is in any synthetic, creative activity. In becoming an expert photographer, for example, one must learn how to look at a scene and know how dark each region will appear on a print for each possible choice of exposure and development conditions. Only then can one reason backward, planning framing, lighting, exposure, and development to obtain the desired effects. So it is with programming, where we are planning the course of action to be taken by a process and where we control the process by means of a program. To become experts, we must learn to visualize the processes generated by various types of procedures. Only after we have developed such a skill can we learn to reliably construct programs that exhibit the desired behavior."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__279842,G__279843) : tailrecursion.hoplon.markdown.para_node.call(null,G__279842,G__279843));
})(),(function (){var G__279844 = cljs.core.PersistentArrayMap.EMPTY;
var G__279845 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A procedure is a pattern for the local evolution of a computational process. It specifies how each stage of the process is built upon the previous stage. We would like to be able to make statements about the overall, or global, behavior of a process whose local evolution has been specified by a procedure. This is very difficult to do in general, but we can at least try to describe some typical patterns of process evolution."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__279844,G__279845) : tailrecursion.hoplon.markdown.para_node.call(null,G__279844,G__279845));
})(),(function (){var G__279846 = cljs.core.PersistentArrayMap.EMPTY;
var G__279847 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In this section we will examine some common ",(function (){var G__279848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__279849 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["shapes"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__279848,G__279849) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__279848,G__279849));
})()," for processes generated by simple procedures. We will also investigate the rates at which these processes consume the important computational resources of time and space. The procedures we will consider are very simple. Their role is like that played by test patterns in photography: as oversimplified prototypical patterns, rather than practical examples in their own right."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__279846,G__279847) : tailrecursion.hoplon.markdown.para_node.call(null,G__279846,G__279847));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_279837;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_279836;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_279835;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_279834;
}})()], 0));
var G__279805 = "";
var G__279806 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Linear Recursion and Iteration"], null),book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"A linear recursive process for computing 6!."], null)], 0)),(function (){var _STAR_references_STAR_279850 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_279851 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_279852 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_279853 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__279854 = cljs.core.PersistentArrayMap.EMPTY;
var G__279855 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We begin by considering the factorial function, defined by"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__279854,G__279855) : tailrecursion.hoplon.markdown.para_node.call(null,G__279854,G__279855));
})(),(function (){var G__279856 = cljs.core.PersistentArrayMap.EMPTY;
var G__279857 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$n!=n\\cdot(n-1)\\cdot(n-2)\\cdot\\cdot\\cdot3\\cdot2\\cdot1$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__279856,G__279857) : tailrecursion.hoplon.markdown.para_node.call(null,G__279856,G__279857));
})(),(function (){var G__279858 = cljs.core.PersistentArrayMap.EMPTY;
var G__279859 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["There are many ways to compute factorials. One way is to make use of the observation that ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n!"], null)], 0))," is equal to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0))," times ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(n-1)!"], null)], 0))," for any positive integer ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__279858,G__279859) : tailrecursion.hoplon.markdown.para_node.call(null,G__279858,G__279859));
})(),(function (){var G__279860 = cljs.core.PersistentArrayMap.EMPTY;
var G__279861 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$n!=n\\cdot\\left",tailrecursion.hoplon.markdown.ref_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$separator_DASH_space,null,cljs.core.cst$kw$reference_DASH_key,null], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(n-1)\\cdot(n-2)\\cdot\\cdot\\cdot3\\cdot2\\cdot1\\right"], null)], 0)),"=n\\cdot(n-1)!$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__279860,G__279861) : tailrecursion.hoplon.markdown.para_node.call(null,G__279860,G__279861));
})(),(function (){var G__279862 = cljs.core.PersistentArrayMap.EMPTY;
var G__279863 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Thus we can compute ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"! by computing ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(n-1)"], null)], 0)),"! and multiplying the result by ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". If we add the stipulation that 1! is equal to 1, this observation translates directly into a procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__279862,G__279863) : tailrecursion.hoplon.markdown.para_node.call(null,G__279862,G__279863));
})(),(function (){var G__279920 = (function (){var G__279921 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__279922 = (function (){var G__279923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__279924 = "(";
var G__279925 = (function (){var G__279949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__279950 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__279949,G__279950) : tailrecursion.hoplon.span.call(null,G__279949,G__279950));
})();
var G__279926 = (function (){var G__279951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__279952 = "factorial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__279951,G__279952) : tailrecursion.hoplon.span.call(null,G__279951,G__279952));
})();
var G__279927 = " [";
var G__279928 = (function (){var G__279953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__279954 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__279953,G__279954) : tailrecursion.hoplon.span.call(null,G__279953,G__279954));
})();
var G__279929 = "]\n  (";
var G__279930 = (function (){var G__279955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__279956 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__279955,G__279956) : tailrecursion.hoplon.span.call(null,G__279955,G__279956));
})();
var G__279931 = "(";
var G__279932 = (function (){var G__279957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__279958 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__279957,G__279958) : tailrecursion.hoplon.span.call(null,G__279957,G__279958));
})();
var G__279933 = (function (){var G__279959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__279960 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__279959,G__279960) : tailrecursion.hoplon.span.call(null,G__279959,G__279960));
})();
var G__279934 = " ";
var G__279935 = (function (){var G__279961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__279962 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__279961,G__279962) : tailrecursion.hoplon.span.call(null,G__279961,G__279962));
})();
var G__279936 = ")\n      ";
var G__279937 = (function (){var G__279963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__279964 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__279963,G__279964) : tailrecursion.hoplon.span.call(null,G__279963,G__279964));
})();
var G__279938 = "\n      (";
var G__279939 = (function (){var G__279965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__279966 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__279965,G__279966) : tailrecursion.hoplon.span.call(null,G__279965,G__279966));
})();
var G__279940 = (function (){var G__279967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__279968 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__279967,G__279968) : tailrecursion.hoplon.span.call(null,G__279967,G__279968));
})();
var G__279941 = " (";
var G__279942 = (function (){var G__279969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__279970 = "factorial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__279969,G__279970) : tailrecursion.hoplon.span.call(null,G__279969,G__279970));
})();
var G__279943 = " (";
var G__279944 = (function (){var G__279971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__279972 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__279971,G__279972) : tailrecursion.hoplon.span.call(null,G__279971,G__279972));
})();
var G__279945 = (function (){var G__279973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__279974 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__279973,G__279974) : tailrecursion.hoplon.span.call(null,G__279973,G__279974));
})();
var G__279946 = " ";
var G__279947 = (function (){var G__279975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__279976 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__279975,G__279976) : tailrecursion.hoplon.span.call(null,G__279975,G__279976));
})();
var G__279948 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26(G__279923,G__279924,G__279925,G__279926,G__279927,G__279928,G__279929,G__279930,G__279931,G__279932,G__279933,G__279934,G__279935,G__279936,G__279937,G__279938,G__279939,G__279940,G__279941,G__279942,G__279943,G__279944,G__279945,G__279946,G__279947,G__279948) : tailrecursion.hoplon.pre.call(null,G__279923,G__279924,G__279925,G__279926,G__279927,G__279928,G__279929,G__279930,G__279931,G__279932,G__279933,G__279934,G__279935,G__279936,G__279937,G__279938,G__279939,G__279940,G__279941,G__279942,G__279943,G__279944,G__279945,G__279946,G__279947,G__279948));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__279921,G__279922) : tailrecursion.hoplon.div.call(null,G__279921,G__279922));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__279920) : tailrecursion.hoplon.div.call(null,G__279920));
})(),(function (){var G__279977 = cljs.core.PersistentArrayMap.EMPTY;
var G__279978 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can use the substitution model of section ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/ch/1/sect/1/sub/5/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["1.1.5"], null)], 0))," to watch this procedure in action computing 6!, as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/figure1-3",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.3"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__279977,G__279978) : tailrecursion.hoplon.markdown.para_node.call(null,G__279977,G__279978));
})(),(function (){var G__279979 = cljs.core.PersistentArrayMap.EMPTY;
var G__279980 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now let",(function (){var G__279981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__279982 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__279981,G__279982) : tailrecursion.hoplon.markdown.simple_node.call(null,G__279981,G__279982));
})(),"s take a different perspective on computing factorials. We could describe a rule for computing ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"! by specifying that we first multiply 1 by 2, then multiply the result by 3, then by 4, and so on until we reach ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". More formally, we maintain a running product, together with a counter that counts from 1 up to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". We can describe the computation by saying that the counter and the product simultaneously change from one step to the next according to the rule:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__279979,G__279980) : tailrecursion.hoplon.markdown.para_node.call(null,G__279979,G__279980));
})(),(function (){var G__279983 = cljs.core.PersistentArrayMap.EMPTY;
var G__279984 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\text{product }\\rightarrow\\text{counter }\\cdot\\text{product}$$ $$\\text{counter }\\rightarrow\\text{ counter }+1$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__279983,G__279984) : tailrecursion.hoplon.markdown.para_node.call(null,G__279983,G__279984));
})(),(function (){var G__279985 = cljs.core.PersistentArrayMap.EMPTY;
var G__279986 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and stipulating that ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"! is the value of the product when the counter exceeds ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__279985,G__279986) : tailrecursion.hoplon.markdown.para_node.call(null,G__279985,G__279986));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_279853;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_279852;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_279851;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_279850;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"A linear iterative process for computing 6!"], null)], 0)),"",(function (){var _STAR_references_STAR_279987 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_279988 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_279989 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_279990 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__279991 = cljs.core.PersistentArrayMap.EMPTY;
var G__279992 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Once again, we can recast our description as a procedure for computing factorials:",(function (){var G__279993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__279994 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In a real program we would hide the definition of ",(function (){var G__279995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fact-iter"], null);
var G__279996 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__279995,G__279996) : tailrecursion.hoplon.markdown.code_node.call(null,G__279995,G__279996));
})()," using what",(function (){var G__279997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__279998 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__279997,G__279998) : tailrecursion.hoplon.markdown.simple_node.call(null,G__279997,G__279998));
})(),"s called a ",(function (){var G__279999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__280000 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__279999,G__280000) : tailrecursion.hoplon.markdown.code_node.call(null,G__279999,G__280000));
})()," binding, but we",(function (){var G__280001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__280002 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__280001,G__280002) : tailrecursion.hoplon.markdown.simple_node.call(null,G__280001,G__280002));
})(),"ll learn more about that later on."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__279993,G__279994) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__279993,G__279994));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__279991,G__279992) : tailrecursion.hoplon.markdown.para_node.call(null,G__279991,G__279992));
})(),(function (){var G__280102 = (function (){var G__280103 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__280104 = (function (){var G__280105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__280106 = "(";
var G__280107 = (function (){var G__280152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__280153 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280152,G__280153) : tailrecursion.hoplon.span.call(null,G__280152,G__280153));
})();
var G__280108 = (function (){var G__280154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280155 = "factorial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280154,G__280155) : tailrecursion.hoplon.span.call(null,G__280154,G__280155));
})();
var G__280109 = " [";
var G__280110 = (function (){var G__280156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280157 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280156,G__280157) : tailrecursion.hoplon.span.call(null,G__280156,G__280157));
})();
var G__280111 = "]\n  (";
var G__280112 = (function (){var G__280158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__280159 = "fact-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280158,G__280159) : tailrecursion.hoplon.span.call(null,G__280158,G__280159));
})();
var G__280113 = " ";
var G__280114 = (function (){var G__280160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280161 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280160,G__280161) : tailrecursion.hoplon.span.call(null,G__280160,G__280161));
})();
var G__280115 = " ";
var G__280116 = (function (){var G__280162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280163 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280162,G__280163) : tailrecursion.hoplon.span.call(null,G__280162,G__280163));
})();
var G__280117 = " ";
var G__280118 = (function (){var G__280164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280165 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280164,G__280165) : tailrecursion.hoplon.span.call(null,G__280164,G__280165));
})();
var G__280119 = "))\n(";
var G__280120 = (function (){var G__280166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__280167 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280166,G__280167) : tailrecursion.hoplon.span.call(null,G__280166,G__280167));
})();
var G__280121 = (function (){var G__280168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280169 = "fact-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280168,G__280169) : tailrecursion.hoplon.span.call(null,G__280168,G__280169));
})();
var G__280122 = " [";
var G__280123 = (function (){var G__280170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280171 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280170,G__280171) : tailrecursion.hoplon.span.call(null,G__280170,G__280171));
})();
var G__280124 = " ";
var G__280125 = (function (){var G__280172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280173 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280172,G__280173) : tailrecursion.hoplon.span.call(null,G__280172,G__280173));
})();
var G__280126 = " ";
var G__280127 = (function (){var G__280174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280175 = "max-count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280174,G__280175) : tailrecursion.hoplon.span.call(null,G__280174,G__280175));
})();
var G__280128 = "]\n  (";
var G__280129 = (function (){var G__280176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__280177 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280176,G__280177) : tailrecursion.hoplon.span.call(null,G__280176,G__280177));
})();
var G__280130 = "(";
var G__280131 = (function (){var G__280178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280179 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280178,G__280179) : tailrecursion.hoplon.span.call(null,G__280178,G__280179));
})();
var G__280132 = (function (){var G__280180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280181 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280180,G__280181) : tailrecursion.hoplon.span.call(null,G__280180,G__280181));
})();
var G__280133 = " ";
var G__280134 = (function (){var G__280182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280183 = "max-count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280182,G__280183) : tailrecursion.hoplon.span.call(null,G__280182,G__280183));
})();
var G__280135 = ")\n      ";
var G__280136 = (function (){var G__280184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280185 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280184,G__280185) : tailrecursion.hoplon.span.call(null,G__280184,G__280185));
})();
var G__280137 = "\n      (";
var G__280138 = (function (){var G__280186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__280187 = "fact-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280186,G__280187) : tailrecursion.hoplon.span.call(null,G__280186,G__280187));
})();
var G__280139 = " (";
var G__280140 = (function (){var G__280188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280189 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280188,G__280189) : tailrecursion.hoplon.span.call(null,G__280188,G__280189));
})();
var G__280141 = (function (){var G__280190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280191 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280190,G__280191) : tailrecursion.hoplon.span.call(null,G__280190,G__280191));
})();
var G__280142 = " ";
var G__280143 = (function (){var G__280192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280193 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280192,G__280193) : tailrecursion.hoplon.span.call(null,G__280192,G__280193));
})();
var G__280144 = ")\n                 (";
var G__280145 = (function (){var G__280194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280195 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280194,G__280195) : tailrecursion.hoplon.span.call(null,G__280194,G__280195));
})();
var G__280146 = (function (){var G__280196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280197 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280196,G__280197) : tailrecursion.hoplon.span.call(null,G__280196,G__280197));
})();
var G__280147 = " ";
var G__280148 = (function (){var G__280198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280199 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280198,G__280199) : tailrecursion.hoplon.span.call(null,G__280198,G__280199));
})();
var G__280149 = ")\n                 ";
var G__280150 = (function (){var G__280200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280201 = "max-count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280200,G__280201) : tailrecursion.hoplon.span.call(null,G__280200,G__280201));
})();
var G__280151 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47(G__280105,G__280106,G__280107,G__280108,G__280109,G__280110,G__280111,G__280112,G__280113,G__280114,G__280115,G__280116,G__280117,G__280118,G__280119,G__280120,G__280121,G__280122,G__280123,G__280124,G__280125,G__280126,G__280127,G__280128,G__280129,G__280130,G__280131,G__280132,G__280133,G__280134,G__280135,G__280136,G__280137,G__280138,G__280139,G__280140,G__280141,G__280142,G__280143,G__280144,G__280145,G__280146,G__280147,G__280148,G__280149,G__280150,G__280151) : tailrecursion.hoplon.pre.call(null,G__280105,G__280106,G__280107,G__280108,G__280109,G__280110,G__280111,G__280112,G__280113,G__280114,G__280115,G__280116,G__280117,G__280118,G__280119,G__280120,G__280121,G__280122,G__280123,G__280124,G__280125,G__280126,G__280127,G__280128,G__280129,G__280130,G__280131,G__280132,G__280133,G__280134,G__280135,G__280136,G__280137,G__280138,G__280139,G__280140,G__280141,G__280142,G__280143,G__280144,G__280145,G__280146,G__280147,G__280148,G__280149,G__280150,G__280151));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__280103,G__280104) : tailrecursion.hoplon.div.call(null,G__280103,G__280104));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__280102) : tailrecursion.hoplon.div.call(null,G__280102));
})(),(function (){var G__280202 = cljs.core.PersistentArrayMap.EMPTY;
var G__280203 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As before, we can use the substitution model to visualize the process of computing 6!, as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/figure/1-4",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.4"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280202,G__280203) : tailrecursion.hoplon.markdown.para_node.call(null,G__280202,G__280203));
})(),(function (){var G__280204 = cljs.core.PersistentArrayMap.EMPTY;
var G__280205 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compare the two processes. From one point of view, they seem hardly different at all. Both compute the sam emathematical function on the same domain, and each reauires a number of steps proportional to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0))," to compute ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"!. Indeed, both processes even carry out the same sequence of multiplications, obtaining the same sequence of partial products. On the other hand, when we consider the ",(function (){var G__280206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__280207 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["shapes"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__280206,G__280207) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__280206,G__280207));
})()," of the two processes, we find that they evolve quite differently."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280204,G__280205) : tailrecursion.hoplon.markdown.para_node.call(null,G__280204,G__280205));
})(),(function (){var G__280208 = cljs.core.PersistentArrayMap.EMPTY;
var G__280209 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the first process. The substitution model reveals a shape of expansion followed by contraction, indicated by the arrow in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/figure/1-3",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.3"], null)], 0)),". The expansion occurs as the process builds up a chain of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["deferred operations"], null)], 0))," (in this case, a chain of multiplications). The contraction occurs as the operations are actually performed. This type of process, characterized by a chain of deferred operations, is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["recursive process"], null)], 0)),". Carrying out this process requires that the interpreter keep track of the operations to be performed later on. In the computation of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"!, the length of the chain of deffered multiplications, and hence the amount of information needed to keep track of it, grows linearly with ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0))," (is proportional to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"), just like the number of steps. Such a process is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["linear recursive process"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280208,G__280209) : tailrecursion.hoplon.markdown.para_node.call(null,G__280208,G__280209));
})(),(function (){var G__280210 = cljs.core.PersistentArrayMap.EMPTY;
var G__280211 = new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["By contrast, the second process does not grow and shrink. At each step, all we need to keep track of, for any ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),", are the current values of the variables ",(function (){var G__280212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"product"], null);
var G__280213 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280212,G__280213) : tailrecursion.hoplon.markdown.code_node.call(null,G__280212,G__280213));
})(),", ",(function (){var G__280214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"counter"], null);
var G__280215 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280214,G__280215) : tailrecursion.hoplon.markdown.code_node.call(null,G__280214,G__280215));
})(),", and ",(function (){var G__280216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"max-count"], null);
var G__280217 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280216,G__280217) : tailrecursion.hoplon.markdown.code_node.call(null,G__280216,G__280217));
})(),". We call this an ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["iterative process"], null)], 0)),". In general, an iterative process is one whose state can be summarized by a fixed number of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["state variables"], null)], 0)),", together with a fixed rule that describes how the state variables should be updated as the process moves from state to state and an (optional) end test that specifies conditions under which the process should terminate. In computing ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"!, the number of steps required grows linearly with ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". Such a process is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["linear iterative process"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280210,G__280211) : tailrecursion.hoplon.markdown.para_node.call(null,G__280210,G__280211));
})(),(function (){var G__280218 = cljs.core.PersistentArrayMap.EMPTY;
var G__280219 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The contrast between the two processes can be seen in another way. In the iterative case, the program variables provide a complete description of the state of the process at any point. If we stopped the computation between steps, all we would need to do to resume the computation is to supply the interpreter with the values of the three program variables. Not so with the recursive process. In this case there is some additional ",(function (){var G__280220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__280221 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["hidden"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__280220,G__280221) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__280220,G__280221));
})()," information, maintained by the interpreter and not contained in the program variables, which indicates ",(function (){var G__280222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__280223 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["where the process is"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__280222,G__280223) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__280222,G__280223));
})()," in negotiating the chain of deferred operations. The longer the chain, the more information must be maintained.",(function (){var G__280224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__280225 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["When we discuss the implementation of procedures on register machines in chapter 5, we will see that any iterative process can be realized ",(function (){var G__280226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__280227 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["in hardware"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__280226,G__280227) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__280226,G__280227));
})()," as a machine that has a fixed set of registers and no auxiliary memory. In contrast, realizing a recursive process requires a machine that uses an auxiliary data structure known as a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["stack"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__280224,G__280225) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__280224,G__280225));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280218,G__280219) : tailrecursion.hoplon.markdown.para_node.call(null,G__280218,G__280219));
})(),(function (){var G__280228 = cljs.core.PersistentArrayMap.EMPTY;
var G__280229 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In contrasting iteration and recursion, we must be careful not to confuse the notion of a recursive ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["process"], null)], 0))," and the notion of a recursive ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["procedure"], null)], 0)),". When we describe a procedure as recursive, we are referring to the syntactic fact that the procedure definition refers (either directly or indirectly) to the procedure itself. But when we describe a process as following a pattern that is, say, linearly recursive, we are speaking about how the process evolves, not about the syntax of how a procedure is written. It may seem disturbing that we refer to a recursive procedure such as ",(function (){var G__280230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fact-iter"], null);
var G__280231 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280230,G__280231) : tailrecursion.hoplon.markdown.code_node.call(null,G__280230,G__280231));
})()," as generating an iterative process. However, the process really is iterative: Its state is captured completely by its three state variables, and an interpreter need keep track of only three variables in order to execute the process."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280228,G__280229) : tailrecursion.hoplon.markdown.para_node.call(null,G__280228,G__280229));
})(),(function (){var G__280232 = cljs.core.PersistentArrayMap.EMPTY;
var G__280233 = new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One reason that the distinction between process and procedure may be confusing is that most implementations of common languages (including Ada, Pascal, and C) are designed in such a way that the interpretation of any recursive procedure consumes an amount of memory that grows with the number of procedure calls, even when the process described is, in principle, iterative. As a consequence, these languages can describe iterative processes only by resorting to special-purpose ",(function (){var G__280234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__280235 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["looping constructs"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__280234,G__280235) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__280234,G__280235));
})()," such as ",(function (){var G__280236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"do"], null);
var G__280237 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280236,G__280237) : tailrecursion.hoplon.markdown.code_node.call(null,G__280236,G__280237));
})(),", ",(function (){var G__280238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"repeat"], null);
var G__280239 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280238,G__280239) : tailrecursion.hoplon.markdown.code_node.call(null,G__280238,G__280239));
})(),", ",(function (){var G__280240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"until"], null);
var G__280241 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280240,G__280241) : tailrecursion.hoplon.markdown.code_node.call(null,G__280240,G__280241));
})(),", ",(function (){var G__280242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"for"], null);
var G__280243 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280242,G__280243) : tailrecursion.hoplon.markdown.code_node.call(null,G__280242,G__280243));
})(),", and ",(function (){var G__280244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"while"], null);
var G__280245 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280244,G__280245) : tailrecursion.hoplon.markdown.code_node.call(null,G__280244,G__280245));
})(),". The implemenation of Scheme we shall consider in chapter 5 does not share this defect. It will execute an iterative process in constant space, even if the iterative process is described by a recursive procedure. An implementation with this property is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tail-recursive"], null)], 0)),". With a tail-recursive implementation, iteration can be expressed using the ordinary procedure call mechanism, so that special iteration constructs are useful only as syntactic sugar.",(function (){var G__280246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__280247 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Tail recursion has long been known as a compiler optimization trick. A coherent semantic basis for tail recursion was provided by Carl Hewitt (1977), who explained it in terms of the ",(function (){var G__280248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__280249 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["message-passing"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__280248,G__280249) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__280248,G__280249));
})()," model of computation that we shall discuss in chapter 3. Inspired by this, Gerald Jay Sussman and Guy Lewis Steele Jr. (see Steele 1975) constructed a tail-recursive interpreter for Scheme. Steele later showed how tail recursion is a consequence of the natural way to compile procedure calls (Steele 1977). The IEEE standard for Scheme requires that Scheme implementations be tail-recursive."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__280246,G__280247) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__280246,G__280247));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280232,G__280233) : tailrecursion.hoplon.markdown.para_node.call(null,G__280232,G__280233));
})(),(function (){var G__280250 = cljs.core.PersistentArrayMap.EMPTY;
var G__280251 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__280252 = cljs.core.PersistentArrayMap.EMPTY;
var G__280253 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It is worthwhile to note at this point that Clojure is not tail-recursive."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280252,G__280253) : tailrecursion.hoplon.markdown.para_node.call(null,G__280252,G__280253));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__280250,G__280251) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__280250,G__280251));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_279990;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_279989;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_279988;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_279987;
}})()], 0));
var G__279807 = "";
var G__279808 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"9-10"], null),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(9)], null),(function (){var _STAR_references_STAR_280254 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_280255 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_280256 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_280257 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__280258 = cljs.core.PersistentArrayMap.EMPTY;
var G__280259 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Each of the following two procedures defines a method for adding two positive integers in terms of the procedures ",(function (){var G__280260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"inc"], null);
var G__280261 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280260,G__280261) : tailrecursion.hoplon.markdown.code_node.call(null,G__280260,G__280261));
})(),", which increments its arguments by 1, and ",(function (){var G__280262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"dec"], null);
var G__280263 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280262,G__280263) : tailrecursion.hoplon.markdown.code_node.call(null,G__280262,G__280263));
})(),", which decrements its arguments by 1."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280258,G__280259) : tailrecursion.hoplon.markdown.para_node.call(null,G__280258,G__280259));
})(),(function (){var G__280321 = (function (){var G__280322 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__280323 = (function (){var G__280324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__280325 = "(";
var G__280326 = (function (){var G__280351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__280352 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280351,G__280352) : tailrecursion.hoplon.span.call(null,G__280351,G__280352));
})();
var G__280327 = (function (){var G__280353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280354 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280353,G__280354) : tailrecursion.hoplon.span.call(null,G__280353,G__280354));
})();
var G__280328 = "[";
var G__280329 = (function (){var G__280355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280356 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280355,G__280356) : tailrecursion.hoplon.span.call(null,G__280355,G__280356));
})();
var G__280330 = " ";
var G__280331 = (function (){var G__280357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280358 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280357,G__280358) : tailrecursion.hoplon.span.call(null,G__280357,G__280358));
})();
var G__280332 = "]\n  (";
var G__280333 = (function (){var G__280359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__280360 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280359,G__280360) : tailrecursion.hoplon.span.call(null,G__280359,G__280360));
})();
var G__280334 = "(";
var G__280335 = (function (){var G__280361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280362 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280361,G__280362) : tailrecursion.hoplon.span.call(null,G__280361,G__280362));
})();
var G__280336 = (function (){var G__280363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280364 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280363,G__280364) : tailrecursion.hoplon.span.call(null,G__280363,G__280364));
})();
var G__280337 = " ";
var G__280338 = (function (){var G__280365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280366 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280365,G__280366) : tailrecursion.hoplon.span.call(null,G__280365,G__280366));
})();
var G__280339 = ")\n      ";
var G__280340 = (function (){var G__280367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280368 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280367,G__280368) : tailrecursion.hoplon.span.call(null,G__280367,G__280368));
})();
var G__280341 = "\n      (";
var G__280342 = (function (){var G__280369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280370 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280369,G__280370) : tailrecursion.hoplon.span.call(null,G__280369,G__280370));
})();
var G__280343 = "(";
var G__280344 = (function (){var G__280371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280372 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280371,G__280372) : tailrecursion.hoplon.span.call(null,G__280371,G__280372));
})();
var G__280345 = "(";
var G__280346 = (function (){var G__280373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280374 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280373,G__280374) : tailrecursion.hoplon.span.call(null,G__280373,G__280374));
})();
var G__280347 = (function (){var G__280375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280376 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280375,G__280376) : tailrecursion.hoplon.span.call(null,G__280375,G__280376));
})();
var G__280348 = ") ";
var G__280349 = (function (){var G__280377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280378 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280377,G__280378) : tailrecursion.hoplon.span.call(null,G__280377,G__280378));
})();
var G__280350 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27(G__280324,G__280325,G__280326,G__280327,G__280328,G__280329,G__280330,G__280331,G__280332,G__280333,G__280334,G__280335,G__280336,G__280337,G__280338,G__280339,G__280340,G__280341,G__280342,G__280343,G__280344,G__280345,G__280346,G__280347,G__280348,G__280349,G__280350) : tailrecursion.hoplon.pre.call(null,G__280324,G__280325,G__280326,G__280327,G__280328,G__280329,G__280330,G__280331,G__280332,G__280333,G__280334,G__280335,G__280336,G__280337,G__280338,G__280339,G__280340,G__280341,G__280342,G__280343,G__280344,G__280345,G__280346,G__280347,G__280348,G__280349,G__280350));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__280322,G__280323) : tailrecursion.hoplon.div.call(null,G__280322,G__280323));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__280321) : tailrecursion.hoplon.div.call(null,G__280321));
})(),(function (){var G__280435 = (function (){var G__280436 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__280437 = (function (){var G__280438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__280439 = "(";
var G__280440 = (function (){var G__280464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__280465 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280464,G__280465) : tailrecursion.hoplon.span.call(null,G__280464,G__280465));
})();
var G__280441 = (function (){var G__280466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280467 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280466,G__280467) : tailrecursion.hoplon.span.call(null,G__280466,G__280467));
})();
var G__280442 = "[";
var G__280443 = (function (){var G__280468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280469 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280468,G__280469) : tailrecursion.hoplon.span.call(null,G__280468,G__280469));
})();
var G__280444 = " ";
var G__280445 = (function (){var G__280470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280471 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280470,G__280471) : tailrecursion.hoplon.span.call(null,G__280470,G__280471));
})();
var G__280446 = "]\n  (";
var G__280447 = (function (){var G__280472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__280473 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280472,G__280473) : tailrecursion.hoplon.span.call(null,G__280472,G__280473));
})();
var G__280448 = "(";
var G__280449 = (function (){var G__280474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280475 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280474,G__280475) : tailrecursion.hoplon.span.call(null,G__280474,G__280475));
})();
var G__280450 = (function (){var G__280476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280477 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280476,G__280477) : tailrecursion.hoplon.span.call(null,G__280476,G__280477));
})();
var G__280451 = " ";
var G__280452 = (function (){var G__280478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280479 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280478,G__280479) : tailrecursion.hoplon.span.call(null,G__280478,G__280479));
})();
var G__280453 = ")\n      ";
var G__280454 = (function (){var G__280480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280481 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280480,G__280481) : tailrecursion.hoplon.span.call(null,G__280480,G__280481));
})();
var G__280455 = "\n      (";
var G__280456 = (function (){var G__280482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280483 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280482,G__280483) : tailrecursion.hoplon.span.call(null,G__280482,G__280483));
})();
var G__280457 = "(";
var G__280458 = (function (){var G__280484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280485 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280484,G__280485) : tailrecursion.hoplon.span.call(null,G__280484,G__280485));
})();
var G__280459 = (function (){var G__280486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280487 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280486,G__280487) : tailrecursion.hoplon.span.call(null,G__280486,G__280487));
})();
var G__280460 = ") (";
var G__280461 = (function (){var G__280488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280489 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280488,G__280489) : tailrecursion.hoplon.span.call(null,G__280488,G__280489));
})();
var G__280462 = (function (){var G__280490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280491 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280490,G__280491) : tailrecursion.hoplon.span.call(null,G__280490,G__280491));
})();
var G__280463 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26(G__280438,G__280439,G__280440,G__280441,G__280442,G__280443,G__280444,G__280445,G__280446,G__280447,G__280448,G__280449,G__280450,G__280451,G__280452,G__280453,G__280454,G__280455,G__280456,G__280457,G__280458,G__280459,G__280460,G__280461,G__280462,G__280463) : tailrecursion.hoplon.pre.call(null,G__280438,G__280439,G__280440,G__280441,G__280442,G__280443,G__280444,G__280445,G__280446,G__280447,G__280448,G__280449,G__280450,G__280451,G__280452,G__280453,G__280454,G__280455,G__280456,G__280457,G__280458,G__280459,G__280460,G__280461,G__280462,G__280463));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__280436,G__280437) : tailrecursion.hoplon.div.call(null,G__280436,G__280437));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__280435) : tailrecursion.hoplon.div.call(null,G__280435));
})(),(function (){var G__280492 = cljs.core.PersistentArrayMap.EMPTY;
var G__280493 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using the substitution model, illustrate the process generated by each procedure in evaluating ",(function (){var G__280494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(+ 4 5)"], null);
var G__280495 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280494,G__280495) : tailrecursion.hoplon.markdown.code_node.call(null,G__280494,G__280495));
})(),". Are these processes iterative or recursive?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280492,G__280493) : tailrecursion.hoplon.markdown.para_node.call(null,G__280492,G__280493));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_280257;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_280256;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_280255;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_280254;
}})(),book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_280496 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_280497 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_280498 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_280499 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__280500 = cljs.core.PersistentArrayMap.EMPTY;
var G__280501 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The first is recursive, and the second is iterative. Let",(function (){var G__280502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__280503 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__280502,G__280503) : tailrecursion.hoplon.markdown.simple_node.call(null,G__280502,G__280503));
})(),"s see why",(function (){var G__280504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__280505 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__280504,G__280505) : tailrecursion.hoplon.markdown.simple_node.call(null,G__280504,G__280505));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280500,G__280501) : tailrecursion.hoplon.markdown.para_node.call(null,G__280500,G__280501));
})(),(function (){var G__280506 = cljs.core.PersistentArrayMap.EMPTY;
var G__280507 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With the first definition,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280506,G__280507) : tailrecursion.hoplon.markdown.para_node.call(null,G__280506,G__280507));
})(),(function (){var G__280763 = (function (){var G__280764 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__280765 = (function (){var G__280766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__280767 = "(";
var G__280768 = (function (){var G__280887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280888 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280887,G__280888) : tailrecursion.hoplon.span.call(null,G__280887,G__280888));
})();
var G__280769 = (function (){var G__280889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280890 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280889,G__280890) : tailrecursion.hoplon.span.call(null,G__280889,G__280890));
})();
var G__280770 = " ";
var G__280771 = (function (){var G__280891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280892 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280891,G__280892) : tailrecursion.hoplon.span.call(null,G__280891,G__280892));
})();
var G__280772 = ")\n(";
var G__280773 = (function (){var G__280893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280894 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280893,G__280894) : tailrecursion.hoplon.span.call(null,G__280893,G__280894));
})();
var G__280774 = "(";
var G__280775 = (function (){var G__280895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280896 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280895,G__280896) : tailrecursion.hoplon.span.call(null,G__280895,G__280896));
})();
var G__280776 = "(";
var G__280777 = (function (){var G__280897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280898 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280897,G__280898) : tailrecursion.hoplon.span.call(null,G__280897,G__280898));
})();
var G__280778 = (function (){var G__280899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280900 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280899,G__280900) : tailrecursion.hoplon.span.call(null,G__280899,G__280900));
})();
var G__280779 = ") ";
var G__280780 = (function (){var G__280901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280902 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280901,G__280902) : tailrecursion.hoplon.span.call(null,G__280901,G__280902));
})();
var G__280781 = "))\n(";
var G__280782 = (function (){var G__280903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280904 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280903,G__280904) : tailrecursion.hoplon.span.call(null,G__280903,G__280904));
})();
var G__280783 = "(";
var G__280784 = (function (){var G__280905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280906 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280905,G__280906) : tailrecursion.hoplon.span.call(null,G__280905,G__280906));
})();
var G__280785 = (function (){var G__280907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280908 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280907,G__280908) : tailrecursion.hoplon.span.call(null,G__280907,G__280908));
})();
var G__280786 = " ";
var G__280787 = (function (){var G__280909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280910 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280909,G__280910) : tailrecursion.hoplon.span.call(null,G__280909,G__280910));
})();
var G__280788 = "))\n(";
var G__280789 = (function (){var G__280911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280912 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280911,G__280912) : tailrecursion.hoplon.span.call(null,G__280911,G__280912));
})();
var G__280790 = "(";
var G__280791 = (function (){var G__280913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280914 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280913,G__280914) : tailrecursion.hoplon.span.call(null,G__280913,G__280914));
})();
var G__280792 = "(";
var G__280793 = (function (){var G__280915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280916 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280915,G__280916) : tailrecursion.hoplon.span.call(null,G__280915,G__280916));
})();
var G__280794 = "(";
var G__280795 = (function (){var G__280917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280918 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280917,G__280918) : tailrecursion.hoplon.span.call(null,G__280917,G__280918));
})();
var G__280796 = (function (){var G__280919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280920 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280919,G__280920) : tailrecursion.hoplon.span.call(null,G__280919,G__280920));
})();
var G__280797 = ") ";
var G__280798 = (function (){var G__280921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280922 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280921,G__280922) : tailrecursion.hoplon.span.call(null,G__280921,G__280922));
})();
var G__280799 = ")))\n(";
var G__280800 = (function (){var G__280923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280924 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280923,G__280924) : tailrecursion.hoplon.span.call(null,G__280923,G__280924));
})();
var G__280801 = "(";
var G__280802 = (function (){var G__280925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280926 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280925,G__280926) : tailrecursion.hoplon.span.call(null,G__280925,G__280926));
})();
var G__280803 = "(";
var G__280804 = (function (){var G__280927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280928 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280927,G__280928) : tailrecursion.hoplon.span.call(null,G__280927,G__280928));
})();
var G__280805 = (function (){var G__280929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280930 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280929,G__280930) : tailrecursion.hoplon.span.call(null,G__280929,G__280930));
})();
var G__280806 = " ";
var G__280807 = (function (){var G__280931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280932 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280931,G__280932) : tailrecursion.hoplon.span.call(null,G__280931,G__280932));
})();
var G__280808 = ")))\n(";
var G__280809 = (function (){var G__280933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280934 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280933,G__280934) : tailrecursion.hoplon.span.call(null,G__280933,G__280934));
})();
var G__280810 = "(";
var G__280811 = (function (){var G__280935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280936 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280935,G__280936) : tailrecursion.hoplon.span.call(null,G__280935,G__280936));
})();
var G__280812 = "(";
var G__280813 = (function (){var G__280937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280938 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280937,G__280938) : tailrecursion.hoplon.span.call(null,G__280937,G__280938));
})();
var G__280814 = "(";
var G__280815 = (function (){var G__280939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280940 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280939,G__280940) : tailrecursion.hoplon.span.call(null,G__280939,G__280940));
})();
var G__280816 = "(";
var G__280817 = (function (){var G__280941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280942 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280941,G__280942) : tailrecursion.hoplon.span.call(null,G__280941,G__280942));
})();
var G__280818 = (function (){var G__280943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280944 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280943,G__280944) : tailrecursion.hoplon.span.call(null,G__280943,G__280944));
})();
var G__280819 = ") ";
var G__280820 = (function (){var G__280945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280946 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280945,G__280946) : tailrecursion.hoplon.span.call(null,G__280945,G__280946));
})();
var G__280821 = "))))\n(";
var G__280822 = (function (){var G__280947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280948 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280947,G__280948) : tailrecursion.hoplon.span.call(null,G__280947,G__280948));
})();
var G__280823 = "(";
var G__280824 = (function (){var G__280949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280950 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280949,G__280950) : tailrecursion.hoplon.span.call(null,G__280949,G__280950));
})();
var G__280825 = "(";
var G__280826 = (function (){var G__280951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280952 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280951,G__280952) : tailrecursion.hoplon.span.call(null,G__280951,G__280952));
})();
var G__280827 = "(";
var G__280828 = (function (){var G__280953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280954 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280953,G__280954) : tailrecursion.hoplon.span.call(null,G__280953,G__280954));
})();
var G__280829 = (function (){var G__280955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280956 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280955,G__280956) : tailrecursion.hoplon.span.call(null,G__280955,G__280956));
})();
var G__280830 = " ";
var G__280831 = (function (){var G__280957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280958 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280957,G__280958) : tailrecursion.hoplon.span.call(null,G__280957,G__280958));
})();
var G__280832 = "))))\n(";
var G__280833 = (function (){var G__280959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280960 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280959,G__280960) : tailrecursion.hoplon.span.call(null,G__280959,G__280960));
})();
var G__280834 = "(";
var G__280835 = (function (){var G__280961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280962 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280961,G__280962) : tailrecursion.hoplon.span.call(null,G__280961,G__280962));
})();
var G__280836 = "(";
var G__280837 = (function (){var G__280963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280964 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280963,G__280964) : tailrecursion.hoplon.span.call(null,G__280963,G__280964));
})();
var G__280838 = "(";
var G__280839 = (function (){var G__280965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280966 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280965,G__280966) : tailrecursion.hoplon.span.call(null,G__280965,G__280966));
})();
var G__280840 = "(";
var G__280841 = (function (){var G__280967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280968 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280967,G__280968) : tailrecursion.hoplon.span.call(null,G__280967,G__280968));
})();
var G__280842 = "(";
var G__280843 = (function (){var G__280969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280970 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280969,G__280970) : tailrecursion.hoplon.span.call(null,G__280969,G__280970));
})();
var G__280844 = (function (){var G__280971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280972 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280971,G__280972) : tailrecursion.hoplon.span.call(null,G__280971,G__280972));
})();
var G__280845 = ") ";
var G__280846 = (function (){var G__280973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280974 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280973,G__280974) : tailrecursion.hoplon.span.call(null,G__280973,G__280974));
})();
var G__280847 = ")))))\n(";
var G__280848 = (function (){var G__280975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280976 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280975,G__280976) : tailrecursion.hoplon.span.call(null,G__280975,G__280976));
})();
var G__280849 = "(";
var G__280850 = (function (){var G__280977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280978 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280977,G__280978) : tailrecursion.hoplon.span.call(null,G__280977,G__280978));
})();
var G__280851 = "(";
var G__280852 = (function (){var G__280979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280980 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280979,G__280980) : tailrecursion.hoplon.span.call(null,G__280979,G__280980));
})();
var G__280853 = "(";
var G__280854 = (function (){var G__280981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280982 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280981,G__280982) : tailrecursion.hoplon.span.call(null,G__280981,G__280982));
})();
var G__280855 = "(";
var G__280856 = (function (){var G__280983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280984 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280983,G__280984) : tailrecursion.hoplon.span.call(null,G__280983,G__280984));
})();
var G__280857 = (function (){var G__280985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280986 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280985,G__280986) : tailrecursion.hoplon.span.call(null,G__280985,G__280986));
})();
var G__280858 = " ";
var G__280859 = (function (){var G__280987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280988 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280987,G__280988) : tailrecursion.hoplon.span.call(null,G__280987,G__280988));
})();
var G__280860 = ")))))\n(";
var G__280861 = (function (){var G__280989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280990 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280989,G__280990) : tailrecursion.hoplon.span.call(null,G__280989,G__280990));
})();
var G__280862 = "(";
var G__280863 = (function (){var G__280991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280992 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280991,G__280992) : tailrecursion.hoplon.span.call(null,G__280991,G__280992));
})();
var G__280864 = "(";
var G__280865 = (function (){var G__280993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280994 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280993,G__280994) : tailrecursion.hoplon.span.call(null,G__280993,G__280994));
})();
var G__280866 = "(";
var G__280867 = (function (){var G__280995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280996 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280995,G__280996) : tailrecursion.hoplon.span.call(null,G__280995,G__280996));
})();
var G__280868 = (function (){var G__280997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280998 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280997,G__280998) : tailrecursion.hoplon.span.call(null,G__280997,G__280998));
})();
var G__280869 = "))))\n(";
var G__280870 = (function (){var G__280999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281000 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280999,G__281000) : tailrecursion.hoplon.span.call(null,G__280999,G__281000));
})();
var G__280871 = "(";
var G__280872 = (function (){var G__281001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281002 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281001,G__281002) : tailrecursion.hoplon.span.call(null,G__281001,G__281002));
})();
var G__280873 = "(";
var G__280874 = (function (){var G__281003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281004 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281003,G__281004) : tailrecursion.hoplon.span.call(null,G__281003,G__281004));
})();
var G__280875 = (function (){var G__281005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281006 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281005,G__281006) : tailrecursion.hoplon.span.call(null,G__281005,G__281006));
})();
var G__280876 = ")))\n(";
var G__280877 = (function (){var G__281007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281008 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281007,G__281008) : tailrecursion.hoplon.span.call(null,G__281007,G__281008));
})();
var G__280878 = "(";
var G__280879 = (function (){var G__281009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281010 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281009,G__281010) : tailrecursion.hoplon.span.call(null,G__281009,G__281010));
})();
var G__280880 = (function (){var G__281011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281012 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281011,G__281012) : tailrecursion.hoplon.span.call(null,G__281011,G__281012));
})();
var G__280881 = "))\n(";
var G__280882 = (function (){var G__281013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281014 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281013,G__281014) : tailrecursion.hoplon.span.call(null,G__281013,G__281014));
})();
var G__280883 = (function (){var G__281015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281016 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281015,G__281016) : tailrecursion.hoplon.span.call(null,G__281015,G__281016));
})();
var G__280884 = ")\n";
var G__280885 = (function (){var G__281017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281018 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281017,G__281018) : tailrecursion.hoplon.span.call(null,G__281017,G__281018));
})();
var G__280886 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$121 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$121(G__280766,G__280767,G__280768,G__280769,G__280770,G__280771,G__280772,G__280773,G__280774,G__280775,G__280776,G__280777,G__280778,G__280779,G__280780,G__280781,G__280782,G__280783,G__280784,G__280785,G__280786,G__280787,G__280788,G__280789,G__280790,G__280791,G__280792,G__280793,G__280794,G__280795,G__280796,G__280797,G__280798,G__280799,G__280800,G__280801,G__280802,G__280803,G__280804,G__280805,G__280806,G__280807,G__280808,G__280809,G__280810,G__280811,G__280812,G__280813,G__280814,G__280815,G__280816,G__280817,G__280818,G__280819,G__280820,G__280821,G__280822,G__280823,G__280824,G__280825,G__280826,G__280827,G__280828,G__280829,G__280830,G__280831,G__280832,G__280833,G__280834,G__280835,G__280836,G__280837,G__280838,G__280839,G__280840,G__280841,G__280842,G__280843,G__280844,G__280845,G__280846,G__280847,G__280848,G__280849,G__280850,G__280851,G__280852,G__280853,G__280854,G__280855,G__280856,G__280857,G__280858,G__280859,G__280860,G__280861,G__280862,G__280863,G__280864,G__280865,G__280866,G__280867,G__280868,G__280869,G__280870,G__280871,G__280872,G__280873,G__280874,G__280875,G__280876,G__280877,G__280878,G__280879,G__280880,G__280881,G__280882,G__280883,G__280884,G__280885,G__280886) : tailrecursion.hoplon.pre.call(null,G__280766,G__280767,G__280768,G__280769,G__280770,G__280771,G__280772,G__280773,G__280774,G__280775,G__280776,G__280777,G__280778,G__280779,G__280780,G__280781,G__280782,G__280783,G__280784,G__280785,G__280786,G__280787,G__280788,G__280789,G__280790,G__280791,G__280792,G__280793,G__280794,G__280795,G__280796,G__280797,G__280798,G__280799,G__280800,G__280801,G__280802,G__280803,G__280804,G__280805,G__280806,G__280807,G__280808,G__280809,G__280810,G__280811,G__280812,G__280813,G__280814,G__280815,G__280816,G__280817,G__280818,G__280819,G__280820,G__280821,G__280822,G__280823,G__280824,G__280825,G__280826,G__280827,G__280828,G__280829,G__280830,G__280831,G__280832,G__280833,G__280834,G__280835,G__280836,G__280837,G__280838,G__280839,G__280840,G__280841,G__280842,G__280843,G__280844,G__280845,G__280846,G__280847,G__280848,G__280849,G__280850,G__280851,G__280852,G__280853,G__280854,G__280855,G__280856,G__280857,G__280858,G__280859,G__280860,G__280861,G__280862,G__280863,G__280864,G__280865,G__280866,G__280867,G__280868,G__280869,G__280870,G__280871,G__280872,G__280873,G__280874,G__280875,G__280876,G__280877,G__280878,G__280879,G__280880,G__280881,G__280882,G__280883,G__280884,G__280885,G__280886));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__280764,G__280765) : tailrecursion.hoplon.div.call(null,G__280764,G__280765));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__280763) : tailrecursion.hoplon.div.call(null,G__280763));
})(),(function (){var G__281019 = cljs.core.PersistentArrayMap.EMPTY;
var G__281020 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Clearly recursive in the way it grows."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__281019,G__281020) : tailrecursion.hoplon.markdown.para_node.call(null,G__281019,G__281020));
})(),(function (){var G__281021 = cljs.core.PersistentArrayMap.EMPTY;
var G__281022 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With the second, however,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__281021,G__281022) : tailrecursion.hoplon.markdown.para_node.call(null,G__281021,G__281022));
})(),(function (){var G__281158 = (function (){var G__281159 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__281160 = (function (){var G__281161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__281162 = "(";
var G__281163 = (function (){var G__281222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281223 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281222,G__281223) : tailrecursion.hoplon.span.call(null,G__281222,G__281223));
})();
var G__281164 = (function (){var G__281224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281225 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281224,G__281225) : tailrecursion.hoplon.span.call(null,G__281224,G__281225));
})();
var G__281165 = " ";
var G__281166 = (function (){var G__281226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281227 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281226,G__281227) : tailrecursion.hoplon.span.call(null,G__281226,G__281227));
})();
var G__281167 = ")\n(";
var G__281168 = (function (){var G__281228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281229 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281228,G__281229) : tailrecursion.hoplon.span.call(null,G__281228,G__281229));
})();
var G__281169 = "(";
var G__281170 = (function (){var G__281230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281231 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281230,G__281231) : tailrecursion.hoplon.span.call(null,G__281230,G__281231));
})();
var G__281171 = (function (){var G__281232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281233 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281232,G__281233) : tailrecursion.hoplon.span.call(null,G__281232,G__281233));
})();
var G__281172 = ") (";
var G__281173 = (function (){var G__281234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281235 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281234,G__281235) : tailrecursion.hoplon.span.call(null,G__281234,G__281235));
})();
var G__281174 = (function (){var G__281236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281237 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281236,G__281237) : tailrecursion.hoplon.span.call(null,G__281236,G__281237));
})();
var G__281175 = "))\n(";
var G__281176 = (function (){var G__281238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281239 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281238,G__281239) : tailrecursion.hoplon.span.call(null,G__281238,G__281239));
})();
var G__281177 = (function (){var G__281240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281241 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281240,G__281241) : tailrecursion.hoplon.span.call(null,G__281240,G__281241));
})();
var G__281178 = " ";
var G__281179 = (function (){var G__281242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281243 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281242,G__281243) : tailrecursion.hoplon.span.call(null,G__281242,G__281243));
})();
var G__281180 = ")\n(";
var G__281181 = (function (){var G__281244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281245 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281244,G__281245) : tailrecursion.hoplon.span.call(null,G__281244,G__281245));
})();
var G__281182 = "(";
var G__281183 = (function (){var G__281246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281247 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281246,G__281247) : tailrecursion.hoplon.span.call(null,G__281246,G__281247));
})();
var G__281184 = (function (){var G__281248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281249 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281248,G__281249) : tailrecursion.hoplon.span.call(null,G__281248,G__281249));
})();
var G__281185 = ") (";
var G__281186 = (function (){var G__281250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281251 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281250,G__281251) : tailrecursion.hoplon.span.call(null,G__281250,G__281251));
})();
var G__281187 = (function (){var G__281252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281253 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281252,G__281253) : tailrecursion.hoplon.span.call(null,G__281252,G__281253));
})();
var G__281188 = "))\n(";
var G__281189 = (function (){var G__281254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281255 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281254,G__281255) : tailrecursion.hoplon.span.call(null,G__281254,G__281255));
})();
var G__281190 = (function (){var G__281256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281257 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281256,G__281257) : tailrecursion.hoplon.span.call(null,G__281256,G__281257));
})();
var G__281191 = " ";
var G__281192 = (function (){var G__281258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281259 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281258,G__281259) : tailrecursion.hoplon.span.call(null,G__281258,G__281259));
})();
var G__281193 = ")\n(";
var G__281194 = (function (){var G__281260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281261 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281260,G__281261) : tailrecursion.hoplon.span.call(null,G__281260,G__281261));
})();
var G__281195 = "(";
var G__281196 = (function (){var G__281262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281263 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281262,G__281263) : tailrecursion.hoplon.span.call(null,G__281262,G__281263));
})();
var G__281197 = (function (){var G__281264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281265 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281264,G__281265) : tailrecursion.hoplon.span.call(null,G__281264,G__281265));
})();
var G__281198 = ") (";
var G__281199 = (function (){var G__281266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281267 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281266,G__281267) : tailrecursion.hoplon.span.call(null,G__281266,G__281267));
})();
var G__281200 = (function (){var G__281268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281269 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281268,G__281269) : tailrecursion.hoplon.span.call(null,G__281268,G__281269));
})();
var G__281201 = "))\n(";
var G__281202 = (function (){var G__281270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281271 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281270,G__281271) : tailrecursion.hoplon.span.call(null,G__281270,G__281271));
})();
var G__281203 = (function (){var G__281272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281273 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281272,G__281273) : tailrecursion.hoplon.span.call(null,G__281272,G__281273));
})();
var G__281204 = " ";
var G__281205 = (function (){var G__281274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281275 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281274,G__281275) : tailrecursion.hoplon.span.call(null,G__281274,G__281275));
})();
var G__281206 = ")\n(";
var G__281207 = (function (){var G__281276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281277 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281276,G__281277) : tailrecursion.hoplon.span.call(null,G__281276,G__281277));
})();
var G__281208 = "(";
var G__281209 = (function (){var G__281278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281279 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281278,G__281279) : tailrecursion.hoplon.span.call(null,G__281278,G__281279));
})();
var G__281210 = (function (){var G__281280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281281 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281280,G__281281) : tailrecursion.hoplon.span.call(null,G__281280,G__281281));
})();
var G__281211 = ") (";
var G__281212 = (function (){var G__281282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281283 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281282,G__281283) : tailrecursion.hoplon.span.call(null,G__281282,G__281283));
})();
var G__281213 = (function (){var G__281284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281285 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281284,G__281285) : tailrecursion.hoplon.span.call(null,G__281284,G__281285));
})();
var G__281214 = "))\n(";
var G__281215 = (function (){var G__281286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281287 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281286,G__281287) : tailrecursion.hoplon.span.call(null,G__281286,G__281287));
})();
var G__281216 = (function (){var G__281288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281289 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281288,G__281289) : tailrecursion.hoplon.span.call(null,G__281288,G__281289));
})();
var G__281217 = " ";
var G__281218 = (function (){var G__281290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281291 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281290,G__281291) : tailrecursion.hoplon.span.call(null,G__281290,G__281291));
})();
var G__281219 = ")\n";
var G__281220 = (function (){var G__281292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281293 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281292,G__281293) : tailrecursion.hoplon.span.call(null,G__281292,G__281293));
})();
var G__281221 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61(G__281161,G__281162,G__281163,G__281164,G__281165,G__281166,G__281167,G__281168,G__281169,G__281170,G__281171,G__281172,G__281173,G__281174,G__281175,G__281176,G__281177,G__281178,G__281179,G__281180,G__281181,G__281182,G__281183,G__281184,G__281185,G__281186,G__281187,G__281188,G__281189,G__281190,G__281191,G__281192,G__281193,G__281194,G__281195,G__281196,G__281197,G__281198,G__281199,G__281200,G__281201,G__281202,G__281203,G__281204,G__281205,G__281206,G__281207,G__281208,G__281209,G__281210,G__281211,G__281212,G__281213,G__281214,G__281215,G__281216,G__281217,G__281218,G__281219,G__281220,G__281221) : tailrecursion.hoplon.pre.call(null,G__281161,G__281162,G__281163,G__281164,G__281165,G__281166,G__281167,G__281168,G__281169,G__281170,G__281171,G__281172,G__281173,G__281174,G__281175,G__281176,G__281177,G__281178,G__281179,G__281180,G__281181,G__281182,G__281183,G__281184,G__281185,G__281186,G__281187,G__281188,G__281189,G__281190,G__281191,G__281192,G__281193,G__281194,G__281195,G__281196,G__281197,G__281198,G__281199,G__281200,G__281201,G__281202,G__281203,G__281204,G__281205,G__281206,G__281207,G__281208,G__281209,G__281210,G__281211,G__281212,G__281213,G__281214,G__281215,G__281216,G__281217,G__281218,G__281219,G__281220,G__281221));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__281159,G__281160) : tailrecursion.hoplon.div.call(null,G__281159,G__281160));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__281158) : tailrecursion.hoplon.div.call(null,G__281158));
})(),(function (){var G__281294 = cljs.core.PersistentArrayMap.EMPTY;
var G__281295 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["You see the space needed to compute the second was significantly less than that of the first."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__281294,G__281295) : tailrecursion.hoplon.markdown.para_node.call(null,G__281294,G__281295));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_280499;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_280498;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_280497;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_280496;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(10)], null),(function (){var _STAR_references_STAR_281296 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_281297 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_281298 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_281299 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__281300 = cljs.core.PersistentArrayMap.EMPTY;
var G__281301 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following procedure computes a mathematical function called Ackermann",(function (){var G__281302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__281303 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__281302,G__281303) : tailrecursion.hoplon.markdown.simple_node.call(null,G__281302,G__281303));
})(),"s function."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__281300,G__281301) : tailrecursion.hoplon.markdown.para_node.call(null,G__281300,G__281301));
})(),(function (){var G__281417 = (function (){var G__281418 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__281419 = (function (){var G__281420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__281421 = "(";
var G__281422 = (function (){var G__281473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__281474 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281473,G__281474) : tailrecursion.hoplon.span.call(null,G__281473,G__281474));
})();
var G__281423 = (function (){var G__281475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281476 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281475,G__281476) : tailrecursion.hoplon.span.call(null,G__281475,G__281476));
})();
var G__281424 = " [";
var G__281425 = (function (){var G__281477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281478 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281477,G__281478) : tailrecursion.hoplon.span.call(null,G__281477,G__281478));
})();
var G__281426 = " ";
var G__281427 = (function (){var G__281479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281480 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281479,G__281480) : tailrecursion.hoplon.span.call(null,G__281479,G__281480));
})();
var G__281428 = "]\n  (";
var G__281429 = (function (){var G__281481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281482 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281481,G__281482) : tailrecursion.hoplon.span.call(null,G__281481,G__281482));
})();
var G__281430 = "(";
var G__281431 = (function (){var G__281483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281484 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281483,G__281484) : tailrecursion.hoplon.span.call(null,G__281483,G__281484));
})();
var G__281432 = (function (){var G__281485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281486 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281485,G__281486) : tailrecursion.hoplon.span.call(null,G__281485,G__281486));
})();
var G__281433 = " ";
var G__281434 = (function (){var G__281487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281488 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281487,G__281488) : tailrecursion.hoplon.span.call(null,G__281487,G__281488));
})();
var G__281435 = ") ";
var G__281436 = (function (){var G__281489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281490 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281489,G__281490) : tailrecursion.hoplon.span.call(null,G__281489,G__281490));
})();
var G__281437 = "\n        (";
var G__281438 = (function (){var G__281491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281492 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281491,G__281492) : tailrecursion.hoplon.span.call(null,G__281491,G__281492));
})();
var G__281439 = (function (){var G__281493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281494 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281493,G__281494) : tailrecursion.hoplon.span.call(null,G__281493,G__281494));
})();
var G__281440 = " ";
var G__281441 = (function (){var G__281495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281496 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281495,G__281496) : tailrecursion.hoplon.span.call(null,G__281495,G__281496));
})();
var G__281442 = ") (";
var G__281443 = (function (){var G__281497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281498 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281497,G__281498) : tailrecursion.hoplon.span.call(null,G__281497,G__281498));
})();
var G__281444 = (function (){var G__281499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281500 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281499,G__281500) : tailrecursion.hoplon.span.call(null,G__281499,G__281500));
})();
var G__281445 = " ";
var G__281446 = (function (){var G__281501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281502 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281501,G__281502) : tailrecursion.hoplon.span.call(null,G__281501,G__281502));
})();
var G__281447 = ")\n        (";
var G__281448 = (function (){var G__281503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281504 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281503,G__281504) : tailrecursion.hoplon.span.call(null,G__281503,G__281504));
})();
var G__281449 = (function (){var G__281505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281506 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281505,G__281506) : tailrecursion.hoplon.span.call(null,G__281505,G__281506));
})();
var G__281450 = " ";
var G__281451 = (function (){var G__281507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281508 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281507,G__281508) : tailrecursion.hoplon.span.call(null,G__281507,G__281508));
})();
var G__281452 = ") ";
var G__281453 = (function (){var G__281509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281510 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281509,G__281510) : tailrecursion.hoplon.span.call(null,G__281509,G__281510));
})();
var G__281454 = "\n        ";
var G__281455 = (function (){var G__281511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281512 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281511,G__281512) : tailrecursion.hoplon.span.call(null,G__281511,G__281512));
})();
var G__281456 = " (";
var G__281457 = (function (){var G__281513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__281514 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281513,G__281514) : tailrecursion.hoplon.span.call(null,G__281513,G__281514));
})();
var G__281458 = " (";
var G__281459 = (function (){var G__281515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281516 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281515,G__281516) : tailrecursion.hoplon.span.call(null,G__281515,G__281516));
})();
var G__281460 = (function (){var G__281517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281518 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281517,G__281518) : tailrecursion.hoplon.span.call(null,G__281517,G__281518));
})();
var G__281461 = " ";
var G__281462 = (function (){var G__281519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281520 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281519,G__281520) : tailrecursion.hoplon.span.call(null,G__281519,G__281520));
})();
var G__281463 = ")\n                 (";
var G__281464 = (function (){var G__281521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__281522 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281521,G__281522) : tailrecursion.hoplon.span.call(null,G__281521,G__281522));
})();
var G__281465 = " ";
var G__281466 = (function (){var G__281523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281524 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281523,G__281524) : tailrecursion.hoplon.span.call(null,G__281523,G__281524));
})();
var G__281467 = " (";
var G__281468 = (function (){var G__281525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281526 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281525,G__281526) : tailrecursion.hoplon.span.call(null,G__281525,G__281526));
})();
var G__281469 = (function (){var G__281527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281528 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281527,G__281528) : tailrecursion.hoplon.span.call(null,G__281527,G__281528));
})();
var G__281470 = " ";
var G__281471 = (function (){var G__281529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281530 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281529,G__281530) : tailrecursion.hoplon.span.call(null,G__281529,G__281530));
})();
var G__281472 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$53 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$53(G__281420,G__281421,G__281422,G__281423,G__281424,G__281425,G__281426,G__281427,G__281428,G__281429,G__281430,G__281431,G__281432,G__281433,G__281434,G__281435,G__281436,G__281437,G__281438,G__281439,G__281440,G__281441,G__281442,G__281443,G__281444,G__281445,G__281446,G__281447,G__281448,G__281449,G__281450,G__281451,G__281452,G__281453,G__281454,G__281455,G__281456,G__281457,G__281458,G__281459,G__281460,G__281461,G__281462,G__281463,G__281464,G__281465,G__281466,G__281467,G__281468,G__281469,G__281470,G__281471,G__281472) : tailrecursion.hoplon.pre.call(null,G__281420,G__281421,G__281422,G__281423,G__281424,G__281425,G__281426,G__281427,G__281428,G__281429,G__281430,G__281431,G__281432,G__281433,G__281434,G__281435,G__281436,G__281437,G__281438,G__281439,G__281440,G__281441,G__281442,G__281443,G__281444,G__281445,G__281446,G__281447,G__281448,G__281449,G__281450,G__281451,G__281452,G__281453,G__281454,G__281455,G__281456,G__281457,G__281458,G__281459,G__281460,G__281461,G__281462,G__281463,G__281464,G__281465,G__281466,G__281467,G__281468,G__281469,G__281470,G__281471,G__281472));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__281418,G__281419) : tailrecursion.hoplon.div.call(null,G__281418,G__281419));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__281417) : tailrecursion.hoplon.div.call(null,G__281417));
})(),(function (){var G__281531 = cljs.core.PersistentArrayMap.EMPTY;
var G__281532 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What are the values of the following expressions?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__281531,G__281532) : tailrecursion.hoplon.markdown.para_node.call(null,G__281531,G__281532));
})(),(function (){var G__281549 = (function (){var G__281550 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__281551 = (function (){var G__281552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__281553 = "(";
var G__281554 = (function (){var G__281560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__281561 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281560,G__281561) : tailrecursion.hoplon.span.call(null,G__281560,G__281561));
})();
var G__281555 = " ";
var G__281556 = (function (){var G__281562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281563 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281562,G__281563) : tailrecursion.hoplon.span.call(null,G__281562,G__281563));
})();
var G__281557 = " ";
var G__281558 = (function (){var G__281564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281565 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281564,G__281565) : tailrecursion.hoplon.span.call(null,G__281564,G__281565));
})();
var G__281559 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__281552,G__281553,G__281554,G__281555,G__281556,G__281557,G__281558,G__281559) : tailrecursion.hoplon.pre.call(null,G__281552,G__281553,G__281554,G__281555,G__281556,G__281557,G__281558,G__281559));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__281550,G__281551) : tailrecursion.hoplon.div.call(null,G__281550,G__281551));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__281549) : tailrecursion.hoplon.div.call(null,G__281549));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_281299;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_281298;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_281297;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_281296;
}})(),book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_281566 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_281567 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_281568 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_281569 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__282610 = (function (){var G__282611 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__282612 = (function (){var G__282613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__282614 = "(";
var G__282615 = (function (){var G__283127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283128 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283127,G__283128) : tailrecursion.hoplon.span.call(null,G__283127,G__283128));
})();
var G__282616 = " ";
var G__282617 = (function (){var G__283129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283130 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283129,G__283130) : tailrecursion.hoplon.span.call(null,G__283129,G__283130));
})();
var G__282618 = " ";
var G__282619 = (function (){var G__283131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283132 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283131,G__283132) : tailrecursion.hoplon.span.call(null,G__283131,G__283132));
})();
var G__282620 = ")\n(";
var G__282621 = (function (){var G__283133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283134 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283133,G__283134) : tailrecursion.hoplon.span.call(null,G__283133,G__283134));
})();
var G__282622 = " (";
var G__282623 = (function (){var G__283135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283136 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283135,G__283136) : tailrecursion.hoplon.span.call(null,G__283135,G__283136));
})();
var G__282624 = (function (){var G__283137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283138 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283137,G__283138) : tailrecursion.hoplon.span.call(null,G__283137,G__283138));
})();
var G__282625 = " ";
var G__282626 = (function (){var G__283139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283140 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283139,G__283140) : tailrecursion.hoplon.span.call(null,G__283139,G__283140));
})();
var G__282627 = ") (";
var G__282628 = (function (){var G__283141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283142 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283141,G__283142) : tailrecursion.hoplon.span.call(null,G__283141,G__283142));
})();
var G__282629 = " ";
var G__282630 = (function (){var G__283143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283144 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283143,G__283144) : tailrecursion.hoplon.span.call(null,G__283143,G__283144));
})();
var G__282631 = " (";
var G__282632 = (function (){var G__283145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283146 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283145,G__283146) : tailrecursion.hoplon.span.call(null,G__283145,G__283146));
})();
var G__282633 = (function (){var G__283147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283148 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283147,G__283148) : tailrecursion.hoplon.span.call(null,G__283147,G__283148));
})();
var G__282634 = " ";
var G__282635 = (function (){var G__283149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283150 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283149,G__283150) : tailrecursion.hoplon.span.call(null,G__283149,G__283150));
})();
var G__282636 = ")))\n(";
var G__282637 = (function (){var G__283151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283152 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283151,G__283152) : tailrecursion.hoplon.span.call(null,G__283151,G__283152));
})();
var G__282638 = " ";
var G__282639 = (function (){var G__283153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283154 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283153,G__283154) : tailrecursion.hoplon.span.call(null,G__283153,G__283154));
})();
var G__282640 = " (";
var G__282641 = (function (){var G__283155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283156 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283155,G__283156) : tailrecursion.hoplon.span.call(null,G__283155,G__283156));
})();
var G__282642 = " ";
var G__282643 = (function (){var G__283157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283158 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283157,G__283158) : tailrecursion.hoplon.span.call(null,G__283157,G__283158));
})();
var G__282644 = " ";
var G__282645 = (function (){var G__283159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283160 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283159,G__283160) : tailrecursion.hoplon.span.call(null,G__283159,G__283160));
})();
var G__282646 = "))\n(";
var G__282647 = (function (){var G__283161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283162 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283161,G__283162) : tailrecursion.hoplon.span.call(null,G__283161,G__283162));
})();
var G__282648 = " ";
var G__282649 = (function (){var G__283163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283164 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283163,G__283164) : tailrecursion.hoplon.span.call(null,G__283163,G__283164));
})();
var G__282650 = " (";
var G__282651 = (function (){var G__283165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283166 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283165,G__283166) : tailrecursion.hoplon.span.call(null,G__283165,G__283166));
})();
var G__282652 = " ";
var G__282653 = (function (){var G__283167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283168 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283167,G__283168) : tailrecursion.hoplon.span.call(null,G__283167,G__283168));
})();
var G__282654 = " (";
var G__282655 = (function (){var G__283169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283170 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283169,G__283170) : tailrecursion.hoplon.span.call(null,G__283169,G__283170));
})();
var G__282656 = " ";
var G__282657 = (function (){var G__283171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283172 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283171,G__283172) : tailrecursion.hoplon.span.call(null,G__283171,G__283172));
})();
var G__282658 = " (";
var G__282659 = (function (){var G__283173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283174 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283173,G__283174) : tailrecursion.hoplon.span.call(null,G__283173,G__283174));
})();
var G__282660 = (function (){var G__283175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283176 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283175,G__283176) : tailrecursion.hoplon.span.call(null,G__283175,G__283176));
})();
var G__282661 = " ";
var G__282662 = (function (){var G__283177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283178 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283177,G__283178) : tailrecursion.hoplon.span.call(null,G__283177,G__283178));
})();
var G__282663 = "))))\n(";
var G__282664 = (function (){var G__283179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283180 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283179,G__283180) : tailrecursion.hoplon.span.call(null,G__283179,G__283180));
})();
var G__282665 = " ";
var G__282666 = (function (){var G__283181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283182 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283181,G__283182) : tailrecursion.hoplon.span.call(null,G__283181,G__283182));
})();
var G__282667 = " (";
var G__282668 = (function (){var G__283183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283184 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283183,G__283184) : tailrecursion.hoplon.span.call(null,G__283183,G__283184));
})();
var G__282669 = " ";
var G__282670 = (function (){var G__283185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283186 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283185,G__283186) : tailrecursion.hoplon.span.call(null,G__283185,G__283186));
})();
var G__282671 = " (";
var G__282672 = (function (){var G__283187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283188 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283187,G__283188) : tailrecursion.hoplon.span.call(null,G__283187,G__283188));
})();
var G__282673 = " ";
var G__282674 = (function (){var G__283189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283190 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283189,G__283190) : tailrecursion.hoplon.span.call(null,G__283189,G__283190));
})();
var G__282675 = " ";
var G__282676 = (function (){var G__283191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283192 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283191,G__283192) : tailrecursion.hoplon.span.call(null,G__283191,G__283192));
})();
var G__282677 = ")))\n(";
var G__282678 = (function (){var G__283193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283194 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283193,G__283194) : tailrecursion.hoplon.span.call(null,G__283193,G__283194));
})();
var G__282679 = " ";
var G__282680 = (function (){var G__283195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283196 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283195,G__283196) : tailrecursion.hoplon.span.call(null,G__283195,G__283196));
})();
var G__282681 = " (";
var G__282682 = (function (){var G__283197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283198 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283197,G__283198) : tailrecursion.hoplon.span.call(null,G__283197,G__283198));
})();
var G__282683 = " ";
var G__282684 = (function (){var G__283199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283200 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283199,G__283200) : tailrecursion.hoplon.span.call(null,G__283199,G__283200));
})();
var G__282685 = " (";
var G__282686 = (function (){var G__283201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283202 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283201,G__283202) : tailrecursion.hoplon.span.call(null,G__283201,G__283202));
})();
var G__282687 = " ";
var G__282688 = (function (){var G__283203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283204 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283203,G__283204) : tailrecursion.hoplon.span.call(null,G__283203,G__283204));
})();
var G__282689 = " (";
var G__282690 = (function (){var G__283205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283206 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283205,G__283206) : tailrecursion.hoplon.span.call(null,G__283205,G__283206));
})();
var G__282691 = " ";
var G__282692 = (function (){var G__283207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283208 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283207,G__283208) : tailrecursion.hoplon.span.call(null,G__283207,G__283208));
})();
var G__282693 = " (";
var G__282694 = (function (){var G__283209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283210 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283209,G__283210) : tailrecursion.hoplon.span.call(null,G__283209,G__283210));
})();
var G__282695 = (function (){var G__283211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283212 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283211,G__283212) : tailrecursion.hoplon.span.call(null,G__283211,G__283212));
})();
var G__282696 = " ";
var G__282697 = (function (){var G__283213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283214 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283213,G__283214) : tailrecursion.hoplon.span.call(null,G__283213,G__283214));
})();
var G__282698 = ")))))\n(";
var G__282699 = (function (){var G__283215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283216 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283215,G__283216) : tailrecursion.hoplon.span.call(null,G__283215,G__283216));
})();
var G__282700 = " ";
var G__282701 = (function (){var G__283217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283218 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283217,G__283218) : tailrecursion.hoplon.span.call(null,G__283217,G__283218));
})();
var G__282702 = " (";
var G__282703 = (function (){var G__283219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283220 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283219,G__283220) : tailrecursion.hoplon.span.call(null,G__283219,G__283220));
})();
var G__282704 = " ";
var G__282705 = (function (){var G__283221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283222 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283221,G__283222) : tailrecursion.hoplon.span.call(null,G__283221,G__283222));
})();
var G__282706 = " (";
var G__282707 = (function (){var G__283223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283224 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283223,G__283224) : tailrecursion.hoplon.span.call(null,G__283223,G__283224));
})();
var G__282708 = " ";
var G__282709 = (function (){var G__283225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283226 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283225,G__283226) : tailrecursion.hoplon.span.call(null,G__283225,G__283226));
})();
var G__282710 = " (";
var G__282711 = (function (){var G__283227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283228 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283227,G__283228) : tailrecursion.hoplon.span.call(null,G__283227,G__283228));
})();
var G__282712 = " ";
var G__282713 = (function (){var G__283229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283230 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283229,G__283230) : tailrecursion.hoplon.span.call(null,G__283229,G__283230));
})();
var G__282714 = " (";
var G__282715 = (function (){var G__283231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283232 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283231,G__283232) : tailrecursion.hoplon.span.call(null,G__283231,G__283232));
})();
var G__282716 = " ";
var G__282717 = (function (){var G__283233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283234 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283233,G__283234) : tailrecursion.hoplon.span.call(null,G__283233,G__283234));
})();
var G__282718 = " (";
var G__282719 = (function (){var G__283235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283236 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283235,G__283236) : tailrecursion.hoplon.span.call(null,G__283235,G__283236));
})();
var G__282720 = (function (){var G__283237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283238 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283237,G__283238) : tailrecursion.hoplon.span.call(null,G__283237,G__283238));
})();
var G__282721 = " ";
var G__282722 = (function (){var G__283239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283240 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283239,G__283240) : tailrecursion.hoplon.span.call(null,G__283239,G__283240));
})();
var G__282723 = "))))))\n(";
var G__282724 = (function (){var G__283241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283242 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283241,G__283242) : tailrecursion.hoplon.span.call(null,G__283241,G__283242));
})();
var G__282725 = " ";
var G__282726 = (function (){var G__283243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283244 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283243,G__283244) : tailrecursion.hoplon.span.call(null,G__283243,G__283244));
})();
var G__282727 = " (";
var G__282728 = (function (){var G__283245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283246 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283245,G__283246) : tailrecursion.hoplon.span.call(null,G__283245,G__283246));
})();
var G__282729 = " ";
var G__282730 = (function (){var G__283247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283248 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283247,G__283248) : tailrecursion.hoplon.span.call(null,G__283247,G__283248));
})();
var G__282731 = " (";
var G__282732 = (function (){var G__283249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283250 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283249,G__283250) : tailrecursion.hoplon.span.call(null,G__283249,G__283250));
})();
var G__282733 = " ";
var G__282734 = (function (){var G__283251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283252 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283251,G__283252) : tailrecursion.hoplon.span.call(null,G__283251,G__283252));
})();
var G__282735 = " (";
var G__282736 = (function (){var G__283253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283254 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283253,G__283254) : tailrecursion.hoplon.span.call(null,G__283253,G__283254));
})();
var G__282737 = " ";
var G__282738 = (function (){var G__283255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283256 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283255,G__283256) : tailrecursion.hoplon.span.call(null,G__283255,G__283256));
})();
var G__282739 = " (";
var G__282740 = (function (){var G__283257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283258 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283257,G__283258) : tailrecursion.hoplon.span.call(null,G__283257,G__283258));
})();
var G__282741 = " ";
var G__282742 = (function (){var G__283259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283260 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283259,G__283260) : tailrecursion.hoplon.span.call(null,G__283259,G__283260));
})();
var G__282743 = " (";
var G__282744 = (function (){var G__283261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283262 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283261,G__283262) : tailrecursion.hoplon.span.call(null,G__283261,G__283262));
})();
var G__282745 = " ";
var G__282746 = (function (){var G__283263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283264 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283263,G__283264) : tailrecursion.hoplon.span.call(null,G__283263,G__283264));
})();
var G__282747 = " (";
var G__282748 = (function (){var G__283265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283266 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283265,G__283266) : tailrecursion.hoplon.span.call(null,G__283265,G__283266));
})();
var G__282749 = (function (){var G__283267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283268 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283267,G__283268) : tailrecursion.hoplon.span.call(null,G__283267,G__283268));
})();
var G__282750 = " ";
var G__282751 = (function (){var G__283269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283270 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283269,G__283270) : tailrecursion.hoplon.span.call(null,G__283269,G__283270));
})();
var G__282752 = ")))))))\n(";
var G__282753 = (function (){var G__283271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283272 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283271,G__283272) : tailrecursion.hoplon.span.call(null,G__283271,G__283272));
})();
var G__282754 = " ";
var G__282755 = (function (){var G__283273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283274 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283273,G__283274) : tailrecursion.hoplon.span.call(null,G__283273,G__283274));
})();
var G__282756 = " (";
var G__282757 = (function (){var G__283275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283276 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283275,G__283276) : tailrecursion.hoplon.span.call(null,G__283275,G__283276));
})();
var G__282758 = " ";
var G__282759 = (function (){var G__283277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283278 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283277,G__283278) : tailrecursion.hoplon.span.call(null,G__283277,G__283278));
})();
var G__282760 = " (";
var G__282761 = (function (){var G__283279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283280 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283279,G__283280) : tailrecursion.hoplon.span.call(null,G__283279,G__283280));
})();
var G__282762 = " ";
var G__282763 = (function (){var G__283281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283282 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283281,G__283282) : tailrecursion.hoplon.span.call(null,G__283281,G__283282));
})();
var G__282764 = " (";
var G__282765 = (function (){var G__283283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283284 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283283,G__283284) : tailrecursion.hoplon.span.call(null,G__283283,G__283284));
})();
var G__282766 = " ";
var G__282767 = (function (){var G__283285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283286 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283285,G__283286) : tailrecursion.hoplon.span.call(null,G__283285,G__283286));
})();
var G__282768 = " (";
var G__282769 = (function (){var G__283287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283288 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283287,G__283288) : tailrecursion.hoplon.span.call(null,G__283287,G__283288));
})();
var G__282770 = " ";
var G__282771 = (function (){var G__283289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283290 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283289,G__283290) : tailrecursion.hoplon.span.call(null,G__283289,G__283290));
})();
var G__282772 = " (";
var G__282773 = (function (){var G__283291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283292 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283291,G__283292) : tailrecursion.hoplon.span.call(null,G__283291,G__283292));
})();
var G__282774 = " ";
var G__282775 = (function (){var G__283293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283294 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283293,G__283294) : tailrecursion.hoplon.span.call(null,G__283293,G__283294));
})();
var G__282776 = " (";
var G__282777 = (function (){var G__283295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283296 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283295,G__283296) : tailrecursion.hoplon.span.call(null,G__283295,G__283296));
})();
var G__282778 = " ";
var G__282779 = (function (){var G__283297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283298 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283297,G__283298) : tailrecursion.hoplon.span.call(null,G__283297,G__283298));
})();
var G__282780 = " (";
var G__282781 = (function (){var G__283299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283300 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283299,G__283300) : tailrecursion.hoplon.span.call(null,G__283299,G__283300));
})();
var G__282782 = (function (){var G__283301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283302 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283301,G__283302) : tailrecursion.hoplon.span.call(null,G__283301,G__283302));
})();
var G__282783 = " ";
var G__282784 = (function (){var G__283303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283304 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283303,G__283304) : tailrecursion.hoplon.span.call(null,G__283303,G__283304));
})();
var G__282785 = "))))))))\n(";
var G__282786 = (function (){var G__283305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283306 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283305,G__283306) : tailrecursion.hoplon.span.call(null,G__283305,G__283306));
})();
var G__282787 = " ";
var G__282788 = (function (){var G__283307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283308 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283307,G__283308) : tailrecursion.hoplon.span.call(null,G__283307,G__283308));
})();
var G__282789 = " (";
var G__282790 = (function (){var G__283309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283310 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283309,G__283310) : tailrecursion.hoplon.span.call(null,G__283309,G__283310));
})();
var G__282791 = " ";
var G__282792 = (function (){var G__283311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283312 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283311,G__283312) : tailrecursion.hoplon.span.call(null,G__283311,G__283312));
})();
var G__282793 = " (";
var G__282794 = (function (){var G__283313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283314 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283313,G__283314) : tailrecursion.hoplon.span.call(null,G__283313,G__283314));
})();
var G__282795 = " ";
var G__282796 = (function (){var G__283315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283316 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283315,G__283316) : tailrecursion.hoplon.span.call(null,G__283315,G__283316));
})();
var G__282797 = " (";
var G__282798 = (function (){var G__283317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283318 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283317,G__283318) : tailrecursion.hoplon.span.call(null,G__283317,G__283318));
})();
var G__282799 = " ";
var G__282800 = (function (){var G__283319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283320 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283319,G__283320) : tailrecursion.hoplon.span.call(null,G__283319,G__283320));
})();
var G__282801 = " (";
var G__282802 = (function (){var G__283321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283322 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283321,G__283322) : tailrecursion.hoplon.span.call(null,G__283321,G__283322));
})();
var G__282803 = " ";
var G__282804 = (function (){var G__283323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283324 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283323,G__283324) : tailrecursion.hoplon.span.call(null,G__283323,G__283324));
})();
var G__282805 = " (";
var G__282806 = (function (){var G__283325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283326 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283325,G__283326) : tailrecursion.hoplon.span.call(null,G__283325,G__283326));
})();
var G__282807 = " ";
var G__282808 = (function (){var G__283327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283328 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283327,G__283328) : tailrecursion.hoplon.span.call(null,G__283327,G__283328));
})();
var G__282809 = " (";
var G__282810 = (function (){var G__283329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283330 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283329,G__283330) : tailrecursion.hoplon.span.call(null,G__283329,G__283330));
})();
var G__282811 = " ";
var G__282812 = (function (){var G__283331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283332 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283331,G__283332) : tailrecursion.hoplon.span.call(null,G__283331,G__283332));
})();
var G__282813 = " (";
var G__282814 = (function (){var G__283333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283334 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283333,G__283334) : tailrecursion.hoplon.span.call(null,G__283333,G__283334));
})();
var G__282815 = " ";
var G__282816 = (function (){var G__283335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283336 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283335,G__283336) : tailrecursion.hoplon.span.call(null,G__283335,G__283336));
})();
var G__282817 = " (";
var G__282818 = (function (){var G__283337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283338 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283337,G__283338) : tailrecursion.hoplon.span.call(null,G__283337,G__283338));
})();
var G__282819 = (function (){var G__283339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283340 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283339,G__283340) : tailrecursion.hoplon.span.call(null,G__283339,G__283340));
})();
var G__282820 = " ";
var G__282821 = (function (){var G__283341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283342 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283341,G__283342) : tailrecursion.hoplon.span.call(null,G__283341,G__283342));
})();
var G__282822 = ")))))))))\n(";
var G__282823 = (function (){var G__283343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283344 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283343,G__283344) : tailrecursion.hoplon.span.call(null,G__283343,G__283344));
})();
var G__282824 = " ";
var G__282825 = (function (){var G__283345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283346 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283345,G__283346) : tailrecursion.hoplon.span.call(null,G__283345,G__283346));
})();
var G__282826 = " (";
var G__282827 = (function (){var G__283347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283348 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283347,G__283348) : tailrecursion.hoplon.span.call(null,G__283347,G__283348));
})();
var G__282828 = " ";
var G__282829 = (function (){var G__283349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283350 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283349,G__283350) : tailrecursion.hoplon.span.call(null,G__283349,G__283350));
})();
var G__282830 = " (";
var G__282831 = (function (){var G__283351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283352 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283351,G__283352) : tailrecursion.hoplon.span.call(null,G__283351,G__283352));
})();
var G__282832 = " ";
var G__282833 = (function (){var G__283353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283354 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283353,G__283354) : tailrecursion.hoplon.span.call(null,G__283353,G__283354));
})();
var G__282834 = " (";
var G__282835 = (function (){var G__283355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283356 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283355,G__283356) : tailrecursion.hoplon.span.call(null,G__283355,G__283356));
})();
var G__282836 = " ";
var G__282837 = (function (){var G__283357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283358 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283357,G__283358) : tailrecursion.hoplon.span.call(null,G__283357,G__283358));
})();
var G__282838 = " (";
var G__282839 = (function (){var G__283359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283360 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283359,G__283360) : tailrecursion.hoplon.span.call(null,G__283359,G__283360));
})();
var G__282840 = " ";
var G__282841 = (function (){var G__283361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283362 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283361,G__283362) : tailrecursion.hoplon.span.call(null,G__283361,G__283362));
})();
var G__282842 = " (";
var G__282843 = (function (){var G__283363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283364 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283363,G__283364) : tailrecursion.hoplon.span.call(null,G__283363,G__283364));
})();
var G__282844 = " ";
var G__282845 = (function (){var G__283365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283366 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283365,G__283366) : tailrecursion.hoplon.span.call(null,G__283365,G__283366));
})();
var G__282846 = " (";
var G__282847 = (function (){var G__283367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283368 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283367,G__283368) : tailrecursion.hoplon.span.call(null,G__283367,G__283368));
})();
var G__282848 = " ";
var G__282849 = (function (){var G__283369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283370 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283369,G__283370) : tailrecursion.hoplon.span.call(null,G__283369,G__283370));
})();
var G__282850 = " (";
var G__282851 = (function (){var G__283371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283372 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283371,G__283372) : tailrecursion.hoplon.span.call(null,G__283371,G__283372));
})();
var G__282852 = " ";
var G__282853 = (function (){var G__283373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283374 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283373,G__283374) : tailrecursion.hoplon.span.call(null,G__283373,G__283374));
})();
var G__282854 = " (";
var G__282855 = (function (){var G__283375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283376 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283375,G__283376) : tailrecursion.hoplon.span.call(null,G__283375,G__283376));
})();
var G__282856 = " ";
var G__282857 = (function (){var G__283377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283378 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283377,G__283378) : tailrecursion.hoplon.span.call(null,G__283377,G__283378));
})();
var G__282858 = " (";
var G__282859 = (function (){var G__283379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283380 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283379,G__283380) : tailrecursion.hoplon.span.call(null,G__283379,G__283380));
})();
var G__282860 = (function (){var G__283381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283382 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283381,G__283382) : tailrecursion.hoplon.span.call(null,G__283381,G__283382));
})();
var G__282861 = " ";
var G__282862 = (function (){var G__283383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283384 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283383,G__283384) : tailrecursion.hoplon.span.call(null,G__283383,G__283384));
})();
var G__282863 = "))))))))))\n(";
var G__282864 = (function (){var G__283385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283386 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283385,G__283386) : tailrecursion.hoplon.span.call(null,G__283385,G__283386));
})();
var G__282865 = " ";
var G__282866 = (function (){var G__283387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283388 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283387,G__283388) : tailrecursion.hoplon.span.call(null,G__283387,G__283388));
})();
var G__282867 = " (";
var G__282868 = (function (){var G__283389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283390 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283389,G__283390) : tailrecursion.hoplon.span.call(null,G__283389,G__283390));
})();
var G__282869 = " ";
var G__282870 = (function (){var G__283391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283392 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283391,G__283392) : tailrecursion.hoplon.span.call(null,G__283391,G__283392));
})();
var G__282871 = " (";
var G__282872 = (function (){var G__283393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283394 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283393,G__283394) : tailrecursion.hoplon.span.call(null,G__283393,G__283394));
})();
var G__282873 = " ";
var G__282874 = (function (){var G__283395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283396 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283395,G__283396) : tailrecursion.hoplon.span.call(null,G__283395,G__283396));
})();
var G__282875 = " (";
var G__282876 = (function (){var G__283397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283398 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283397,G__283398) : tailrecursion.hoplon.span.call(null,G__283397,G__283398));
})();
var G__282877 = " ";
var G__282878 = (function (){var G__283399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283400 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283399,G__283400) : tailrecursion.hoplon.span.call(null,G__283399,G__283400));
})();
var G__282879 = " (";
var G__282880 = (function (){var G__283401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283402 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283401,G__283402) : tailrecursion.hoplon.span.call(null,G__283401,G__283402));
})();
var G__282881 = " ";
var G__282882 = (function (){var G__283403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283404 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283403,G__283404) : tailrecursion.hoplon.span.call(null,G__283403,G__283404));
})();
var G__282883 = " (";
var G__282884 = (function (){var G__283405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283406 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283405,G__283406) : tailrecursion.hoplon.span.call(null,G__283405,G__283406));
})();
var G__282885 = " ";
var G__282886 = (function (){var G__283407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283408 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283407,G__283408) : tailrecursion.hoplon.span.call(null,G__283407,G__283408));
})();
var G__282887 = " (";
var G__282888 = (function (){var G__283409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283410 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283409,G__283410) : tailrecursion.hoplon.span.call(null,G__283409,G__283410));
})();
var G__282889 = " ";
var G__282890 = (function (){var G__283411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283412 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283411,G__283412) : tailrecursion.hoplon.span.call(null,G__283411,G__283412));
})();
var G__282891 = " (";
var G__282892 = (function (){var G__283413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283414 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283413,G__283414) : tailrecursion.hoplon.span.call(null,G__283413,G__283414));
})();
var G__282893 = " ";
var G__282894 = (function (){var G__283415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283416 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283415,G__283416) : tailrecursion.hoplon.span.call(null,G__283415,G__283416));
})();
var G__282895 = " (";
var G__282896 = (function (){var G__283417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283418 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283417,G__283418) : tailrecursion.hoplon.span.call(null,G__283417,G__283418));
})();
var G__282897 = " ";
var G__282898 = (function (){var G__283419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283420 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283419,G__283420) : tailrecursion.hoplon.span.call(null,G__283419,G__283420));
})();
var G__282899 = " (";
var G__282900 = (function (){var G__283421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283422 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283421,G__283422) : tailrecursion.hoplon.span.call(null,G__283421,G__283422));
})();
var G__282901 = " ";
var G__282902 = (function (){var G__283423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283424 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283423,G__283424) : tailrecursion.hoplon.span.call(null,G__283423,G__283424));
})();
var G__282903 = " (";
var G__282904 = (function (){var G__283425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283426 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283425,G__283426) : tailrecursion.hoplon.span.call(null,G__283425,G__283426));
})();
var G__282905 = (function (){var G__283427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283428 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283427,G__283428) : tailrecursion.hoplon.span.call(null,G__283427,G__283428));
})();
var G__282906 = " ";
var G__282907 = (function (){var G__283429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283430 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283429,G__283430) : tailrecursion.hoplon.span.call(null,G__283429,G__283430));
})();
var G__282908 = ")))))))))))\n(";
var G__282909 = (function (){var G__283431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283432 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283431,G__283432) : tailrecursion.hoplon.span.call(null,G__283431,G__283432));
})();
var G__282910 = " ";
var G__282911 = (function (){var G__283433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283434 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283433,G__283434) : tailrecursion.hoplon.span.call(null,G__283433,G__283434));
})();
var G__282912 = " (";
var G__282913 = (function (){var G__283435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283436 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283435,G__283436) : tailrecursion.hoplon.span.call(null,G__283435,G__283436));
})();
var G__282914 = " ";
var G__282915 = (function (){var G__283437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283438 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283437,G__283438) : tailrecursion.hoplon.span.call(null,G__283437,G__283438));
})();
var G__282916 = " (";
var G__282917 = (function (){var G__283439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283440 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283439,G__283440) : tailrecursion.hoplon.span.call(null,G__283439,G__283440));
})();
var G__282918 = " ";
var G__282919 = (function (){var G__283441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283442 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283441,G__283442) : tailrecursion.hoplon.span.call(null,G__283441,G__283442));
})();
var G__282920 = " (";
var G__282921 = (function (){var G__283443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283444 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283443,G__283444) : tailrecursion.hoplon.span.call(null,G__283443,G__283444));
})();
var G__282922 = " ";
var G__282923 = (function (){var G__283445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283446 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283445,G__283446) : tailrecursion.hoplon.span.call(null,G__283445,G__283446));
})();
var G__282924 = " (";
var G__282925 = (function (){var G__283447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283448 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283447,G__283448) : tailrecursion.hoplon.span.call(null,G__283447,G__283448));
})();
var G__282926 = " ";
var G__282927 = (function (){var G__283449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283450 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283449,G__283450) : tailrecursion.hoplon.span.call(null,G__283449,G__283450));
})();
var G__282928 = " (";
var G__282929 = (function (){var G__283451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283452 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283451,G__283452) : tailrecursion.hoplon.span.call(null,G__283451,G__283452));
})();
var G__282930 = " ";
var G__282931 = (function (){var G__283453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283454 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283453,G__283454) : tailrecursion.hoplon.span.call(null,G__283453,G__283454));
})();
var G__282932 = " (";
var G__282933 = (function (){var G__283455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283456 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283455,G__283456) : tailrecursion.hoplon.span.call(null,G__283455,G__283456));
})();
var G__282934 = " ";
var G__282935 = (function (){var G__283457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283458 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283457,G__283458) : tailrecursion.hoplon.span.call(null,G__283457,G__283458));
})();
var G__282936 = " (";
var G__282937 = (function (){var G__283459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283460 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283459,G__283460) : tailrecursion.hoplon.span.call(null,G__283459,G__283460));
})();
var G__282938 = " ";
var G__282939 = (function (){var G__283461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283462 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283461,G__283462) : tailrecursion.hoplon.span.call(null,G__283461,G__283462));
})();
var G__282940 = " (";
var G__282941 = (function (){var G__283463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283464 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283463,G__283464) : tailrecursion.hoplon.span.call(null,G__283463,G__283464));
})();
var G__282942 = " ";
var G__282943 = (function (){var G__283465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283466 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283465,G__283466) : tailrecursion.hoplon.span.call(null,G__283465,G__283466));
})();
var G__282944 = " (";
var G__282945 = (function (){var G__283467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283468 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283467,G__283468) : tailrecursion.hoplon.span.call(null,G__283467,G__283468));
})();
var G__282946 = " ";
var G__282947 = (function (){var G__283469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283470 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283469,G__283470) : tailrecursion.hoplon.span.call(null,G__283469,G__283470));
})();
var G__282948 = " ";
var G__282949 = (function (){var G__283471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283472 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283471,G__283472) : tailrecursion.hoplon.span.call(null,G__283471,G__283472));
})();
var G__282950 = "))))))))))\n(";
var G__282951 = (function (){var G__283473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283474 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283473,G__283474) : tailrecursion.hoplon.span.call(null,G__283473,G__283474));
})();
var G__282952 = " ";
var G__282953 = (function (){var G__283475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283476 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283475,G__283476) : tailrecursion.hoplon.span.call(null,G__283475,G__283476));
})();
var G__282954 = " (";
var G__282955 = (function (){var G__283477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283478 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283477,G__283478) : tailrecursion.hoplon.span.call(null,G__283477,G__283478));
})();
var G__282956 = " ";
var G__282957 = (function (){var G__283479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283480 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283479,G__283480) : tailrecursion.hoplon.span.call(null,G__283479,G__283480));
})();
var G__282958 = " (";
var G__282959 = (function (){var G__283481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283482 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283481,G__283482) : tailrecursion.hoplon.span.call(null,G__283481,G__283482));
})();
var G__282960 = " ";
var G__282961 = (function (){var G__283483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283484 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283483,G__283484) : tailrecursion.hoplon.span.call(null,G__283483,G__283484));
})();
var G__282962 = " (";
var G__282963 = (function (){var G__283485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283486 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283485,G__283486) : tailrecursion.hoplon.span.call(null,G__283485,G__283486));
})();
var G__282964 = " ";
var G__282965 = (function (){var G__283487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283488 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283487,G__283488) : tailrecursion.hoplon.span.call(null,G__283487,G__283488));
})();
var G__282966 = " (";
var G__282967 = (function (){var G__283489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283490 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283489,G__283490) : tailrecursion.hoplon.span.call(null,G__283489,G__283490));
})();
var G__282968 = " ";
var G__282969 = (function (){var G__283491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283492 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283491,G__283492) : tailrecursion.hoplon.span.call(null,G__283491,G__283492));
})();
var G__282970 = " (";
var G__282971 = (function (){var G__283493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283494 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283493,G__283494) : tailrecursion.hoplon.span.call(null,G__283493,G__283494));
})();
var G__282972 = " ";
var G__282973 = (function (){var G__283495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283496 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283495,G__283496) : tailrecursion.hoplon.span.call(null,G__283495,G__283496));
})();
var G__282974 = " (";
var G__282975 = (function (){var G__283497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283498 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283497,G__283498) : tailrecursion.hoplon.span.call(null,G__283497,G__283498));
})();
var G__282976 = " ";
var G__282977 = (function (){var G__283499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283500 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283499,G__283500) : tailrecursion.hoplon.span.call(null,G__283499,G__283500));
})();
var G__282978 = " (";
var G__282979 = (function (){var G__283501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283502 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283501,G__283502) : tailrecursion.hoplon.span.call(null,G__283501,G__283502));
})();
var G__282980 = " ";
var G__282981 = (function (){var G__283503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283504 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283503,G__283504) : tailrecursion.hoplon.span.call(null,G__283503,G__283504));
})();
var G__282982 = " (";
var G__282983 = (function (){var G__283505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283506 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283505,G__283506) : tailrecursion.hoplon.span.call(null,G__283505,G__283506));
})();
var G__282984 = " ";
var G__282985 = (function (){var G__283507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283508 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283507,G__283508) : tailrecursion.hoplon.span.call(null,G__283507,G__283508));
})();
var G__282986 = " ";
var G__282987 = (function (){var G__283509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283510 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283509,G__283510) : tailrecursion.hoplon.span.call(null,G__283509,G__283510));
})();
var G__282988 = ")))))))))\n(";
var G__282989 = (function (){var G__283511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283512 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283511,G__283512) : tailrecursion.hoplon.span.call(null,G__283511,G__283512));
})();
var G__282990 = " ";
var G__282991 = (function (){var G__283513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283514 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283513,G__283514) : tailrecursion.hoplon.span.call(null,G__283513,G__283514));
})();
var G__282992 = " (";
var G__282993 = (function (){var G__283515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283516 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283515,G__283516) : tailrecursion.hoplon.span.call(null,G__283515,G__283516));
})();
var G__282994 = " ";
var G__282995 = (function (){var G__283517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283518 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283517,G__283518) : tailrecursion.hoplon.span.call(null,G__283517,G__283518));
})();
var G__282996 = " (";
var G__282997 = (function (){var G__283519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283520 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283519,G__283520) : tailrecursion.hoplon.span.call(null,G__283519,G__283520));
})();
var G__282998 = " ";
var G__282999 = (function (){var G__283521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283522 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283521,G__283522) : tailrecursion.hoplon.span.call(null,G__283521,G__283522));
})();
var G__283000 = " (";
var G__283001 = (function (){var G__283523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283524 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283523,G__283524) : tailrecursion.hoplon.span.call(null,G__283523,G__283524));
})();
var G__283002 = " ";
var G__283003 = (function (){var G__283525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283526 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283525,G__283526) : tailrecursion.hoplon.span.call(null,G__283525,G__283526));
})();
var G__283004 = " (";
var G__283005 = (function (){var G__283527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283528 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283527,G__283528) : tailrecursion.hoplon.span.call(null,G__283527,G__283528));
})();
var G__283006 = " ";
var G__283007 = (function (){var G__283529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283530 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283529,G__283530) : tailrecursion.hoplon.span.call(null,G__283529,G__283530));
})();
var G__283008 = " (";
var G__283009 = (function (){var G__283531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283532 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283531,G__283532) : tailrecursion.hoplon.span.call(null,G__283531,G__283532));
})();
var G__283010 = " ";
var G__283011 = (function (){var G__283533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283534 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283533,G__283534) : tailrecursion.hoplon.span.call(null,G__283533,G__283534));
})();
var G__283012 = " (";
var G__283013 = (function (){var G__283535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283536 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283535,G__283536) : tailrecursion.hoplon.span.call(null,G__283535,G__283536));
})();
var G__283014 = " ";
var G__283015 = (function (){var G__283537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283538 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283537,G__283538) : tailrecursion.hoplon.span.call(null,G__283537,G__283538));
})();
var G__283016 = " (";
var G__283017 = (function (){var G__283539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283540 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283539,G__283540) : tailrecursion.hoplon.span.call(null,G__283539,G__283540));
})();
var G__283018 = " ";
var G__283019 = (function (){var G__283541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283542 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283541,G__283542) : tailrecursion.hoplon.span.call(null,G__283541,G__283542));
})();
var G__283020 = " (";
var G__283021 = (function (){var G__283543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283544 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283543,G__283544) : tailrecursion.hoplon.span.call(null,G__283543,G__283544));
})();
var G__283022 = (function (){var G__283545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283546 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283545,G__283546) : tailrecursion.hoplon.span.call(null,G__283545,G__283546));
})();
var G__283023 = " ";
var G__283024 = (function (){var G__283547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283548 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283547,G__283548) : tailrecursion.hoplon.span.call(null,G__283547,G__283548));
})();
var G__283025 = ")))))))))\n(";
var G__283026 = (function (){var G__283549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283550 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283549,G__283550) : tailrecursion.hoplon.span.call(null,G__283549,G__283550));
})();
var G__283027 = " ";
var G__283028 = (function (){var G__283551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283552 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283551,G__283552) : tailrecursion.hoplon.span.call(null,G__283551,G__283552));
})();
var G__283029 = " (";
var G__283030 = (function (){var G__283553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283554 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283553,G__283554) : tailrecursion.hoplon.span.call(null,G__283553,G__283554));
})();
var G__283031 = " ";
var G__283032 = (function (){var G__283555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283556 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283555,G__283556) : tailrecursion.hoplon.span.call(null,G__283555,G__283556));
})();
var G__283033 = " (";
var G__283034 = (function (){var G__283557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283558 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283557,G__283558) : tailrecursion.hoplon.span.call(null,G__283557,G__283558));
})();
var G__283035 = " ";
var G__283036 = (function (){var G__283559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283560 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283559,G__283560) : tailrecursion.hoplon.span.call(null,G__283559,G__283560));
})();
var G__283037 = " (";
var G__283038 = (function (){var G__283561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283562 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283561,G__283562) : tailrecursion.hoplon.span.call(null,G__283561,G__283562));
})();
var G__283039 = " ";
var G__283040 = (function (){var G__283563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283564 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283563,G__283564) : tailrecursion.hoplon.span.call(null,G__283563,G__283564));
})();
var G__283041 = " (";
var G__283042 = (function (){var G__283565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283566 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283565,G__283566) : tailrecursion.hoplon.span.call(null,G__283565,G__283566));
})();
var G__283043 = " ";
var G__283044 = (function (){var G__283567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283568 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283567,G__283568) : tailrecursion.hoplon.span.call(null,G__283567,G__283568));
})();
var G__283045 = " (";
var G__283046 = (function (){var G__283569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283570 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283569,G__283570) : tailrecursion.hoplon.span.call(null,G__283569,G__283570));
})();
var G__283047 = " ";
var G__283048 = (function (){var G__283571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283572 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283571,G__283572) : tailrecursion.hoplon.span.call(null,G__283571,G__283572));
})();
var G__283049 = " (";
var G__283050 = (function (){var G__283573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283574 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283573,G__283574) : tailrecursion.hoplon.span.call(null,G__283573,G__283574));
})();
var G__283051 = " ";
var G__283052 = (function (){var G__283575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283576 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283575,G__283576) : tailrecursion.hoplon.span.call(null,G__283575,G__283576));
})();
var G__283053 = " (";
var G__283054 = (function (){var G__283577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283578 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283577,G__283578) : tailrecursion.hoplon.span.call(null,G__283577,G__283578));
})();
var G__283055 = " ";
var G__283056 = (function (){var G__283579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283580 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283579,G__283580) : tailrecursion.hoplon.span.call(null,G__283579,G__283580));
})();
var G__283057 = " ";
var G__283058 = (function (){var G__283581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283582 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283581,G__283582) : tailrecursion.hoplon.span.call(null,G__283581,G__283582));
})();
var G__283059 = "))))))))\n(";
var G__283060 = (function (){var G__283583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283584 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283583,G__283584) : tailrecursion.hoplon.span.call(null,G__283583,G__283584));
})();
var G__283061 = " ";
var G__283062 = (function (){var G__283585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283586 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283585,G__283586) : tailrecursion.hoplon.span.call(null,G__283585,G__283586));
})();
var G__283063 = " (";
var G__283064 = (function (){var G__283587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283588 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283587,G__283588) : tailrecursion.hoplon.span.call(null,G__283587,G__283588));
})();
var G__283065 = " ";
var G__283066 = (function (){var G__283589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283590 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283589,G__283590) : tailrecursion.hoplon.span.call(null,G__283589,G__283590));
})();
var G__283067 = " (";
var G__283068 = (function (){var G__283591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283592 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283591,G__283592) : tailrecursion.hoplon.span.call(null,G__283591,G__283592));
})();
var G__283069 = " ";
var G__283070 = (function (){var G__283593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283594 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283593,G__283594) : tailrecursion.hoplon.span.call(null,G__283593,G__283594));
})();
var G__283071 = " (";
var G__283072 = (function (){var G__283595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283596 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283595,G__283596) : tailrecursion.hoplon.span.call(null,G__283595,G__283596));
})();
var G__283073 = " ";
var G__283074 = (function (){var G__283597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283598 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283597,G__283598) : tailrecursion.hoplon.span.call(null,G__283597,G__283598));
})();
var G__283075 = " (";
var G__283076 = (function (){var G__283599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283600 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283599,G__283600) : tailrecursion.hoplon.span.call(null,G__283599,G__283600));
})();
var G__283077 = " ";
var G__283078 = (function (){var G__283601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283602 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283601,G__283602) : tailrecursion.hoplon.span.call(null,G__283601,G__283602));
})();
var G__283079 = " (";
var G__283080 = (function (){var G__283603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283604 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283603,G__283604) : tailrecursion.hoplon.span.call(null,G__283603,G__283604));
})();
var G__283081 = " ";
var G__283082 = (function (){var G__283605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283606 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283605,G__283606) : tailrecursion.hoplon.span.call(null,G__283605,G__283606));
})();
var G__283083 = " (";
var G__283084 = (function (){var G__283607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283608 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283607,G__283608) : tailrecursion.hoplon.span.call(null,G__283607,G__283608));
})();
var G__283085 = " ";
var G__283086 = (function (){var G__283609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283610 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283609,G__283610) : tailrecursion.hoplon.span.call(null,G__283609,G__283610));
})();
var G__283087 = " (";
var G__283088 = (function (){var G__283611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283612 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283611,G__283612) : tailrecursion.hoplon.span.call(null,G__283611,G__283612));
})();
var G__283089 = (function (){var G__283613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283614 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283613,G__283614) : tailrecursion.hoplon.span.call(null,G__283613,G__283614));
})();
var G__283090 = " ";
var G__283091 = (function (){var G__283615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283616 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283615,G__283616) : tailrecursion.hoplon.span.call(null,G__283615,G__283616));
})();
var G__283092 = "))))))))\n(";
var G__283093 = (function (){var G__283617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283618 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283617,G__283618) : tailrecursion.hoplon.span.call(null,G__283617,G__283618));
})();
var G__283094 = " ";
var G__283095 = (function (){var G__283619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283620 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283619,G__283620) : tailrecursion.hoplon.span.call(null,G__283619,G__283620));
})();
var G__283096 = " (";
var G__283097 = (function (){var G__283621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283622 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283621,G__283622) : tailrecursion.hoplon.span.call(null,G__283621,G__283622));
})();
var G__283098 = " ";
var G__283099 = (function (){var G__283623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283624 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283623,G__283624) : tailrecursion.hoplon.span.call(null,G__283623,G__283624));
})();
var G__283100 = " (";
var G__283101 = (function (){var G__283625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283626 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283625,G__283626) : tailrecursion.hoplon.span.call(null,G__283625,G__283626));
})();
var G__283102 = " ";
var G__283103 = (function (){var G__283627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283628 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283627,G__283628) : tailrecursion.hoplon.span.call(null,G__283627,G__283628));
})();
var G__283104 = " (";
var G__283105 = (function (){var G__283629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283630 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283629,G__283630) : tailrecursion.hoplon.span.call(null,G__283629,G__283630));
})();
var G__283106 = " ";
var G__283107 = (function (){var G__283631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283632 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283631,G__283632) : tailrecursion.hoplon.span.call(null,G__283631,G__283632));
})();
var G__283108 = " (";
var G__283109 = (function (){var G__283633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283634 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283633,G__283634) : tailrecursion.hoplon.span.call(null,G__283633,G__283634));
})();
var G__283110 = " ";
var G__283111 = (function (){var G__283635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283636 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283635,G__283636) : tailrecursion.hoplon.span.call(null,G__283635,G__283636));
})();
var G__283112 = " (";
var G__283113 = (function (){var G__283637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283638 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283637,G__283638) : tailrecursion.hoplon.span.call(null,G__283637,G__283638));
})();
var G__283114 = " ";
var G__283115 = (function (){var G__283639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283640 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283639,G__283640) : tailrecursion.hoplon.span.call(null,G__283639,G__283640));
})();
var G__283116 = " (";
var G__283117 = (function (){var G__283641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283642 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283641,G__283642) : tailrecursion.hoplon.span.call(null,G__283641,G__283642));
})();
var G__283118 = " ";
var G__283119 = (function (){var G__283643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283644 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283643,G__283644) : tailrecursion.hoplon.span.call(null,G__283643,G__283644));
})();
var G__283120 = " ";
var G__283121 = (function (){var G__283645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283646 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283645,G__283646) : tailrecursion.hoplon.span.call(null,G__283645,G__283646));
})();
var G__283122 = ")))))))\n";
var G__283123 = (function (){var G__283647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__283648 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283647,G__283648) : tailrecursion.hoplon.span.call(null,G__283647,G__283648));
})();
var G__283124 = "\n";
var G__283125 = (function (){var G__283649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283650 = "1024";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283649,G__283650) : tailrecursion.hoplon.span.call(null,G__283649,G__283650));
})();
var G__283126 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$514 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$514(G__282613,G__282614,G__282615,G__282616,G__282617,G__282618,G__282619,G__282620,G__282621,G__282622,G__282623,G__282624,G__282625,G__282626,G__282627,G__282628,G__282629,G__282630,G__282631,G__282632,G__282633,G__282634,G__282635,G__282636,G__282637,G__282638,G__282639,G__282640,G__282641,G__282642,G__282643,G__282644,G__282645,G__282646,G__282647,G__282648,G__282649,G__282650,G__282651,G__282652,G__282653,G__282654,G__282655,G__282656,G__282657,G__282658,G__282659,G__282660,G__282661,G__282662,G__282663,G__282664,G__282665,G__282666,G__282667,G__282668,G__282669,G__282670,G__282671,G__282672,G__282673,G__282674,G__282675,G__282676,G__282677,G__282678,G__282679,G__282680,G__282681,G__282682,G__282683,G__282684,G__282685,G__282686,G__282687,G__282688,G__282689,G__282690,G__282691,G__282692,G__282693,G__282694,G__282695,G__282696,G__282697,G__282698,G__282699,G__282700,G__282701,G__282702,G__282703,G__282704,G__282705,G__282706,G__282707,G__282708,G__282709,G__282710,G__282711,G__282712,G__282713,G__282714,G__282715,G__282716,G__282717,G__282718,G__282719,G__282720,G__282721,G__282722,G__282723,G__282724,G__282725,G__282726,G__282727,G__282728,G__282729,G__282730,G__282731,G__282732,G__282733,G__282734,G__282735,G__282736,G__282737,G__282738,G__282739,G__282740,G__282741,G__282742,G__282743,G__282744,G__282745,G__282746,G__282747,G__282748,G__282749,G__282750,G__282751,G__282752,G__282753,G__282754,G__282755,G__282756,G__282757,G__282758,G__282759,G__282760,G__282761,G__282762,G__282763,G__282764,G__282765,G__282766,G__282767,G__282768,G__282769,G__282770,G__282771,G__282772,G__282773,G__282774,G__282775,G__282776,G__282777,G__282778,G__282779,G__282780,G__282781,G__282782,G__282783,G__282784,G__282785,G__282786,G__282787,G__282788,G__282789,G__282790,G__282791,G__282792,G__282793,G__282794,G__282795,G__282796,G__282797,G__282798,G__282799,G__282800,G__282801,G__282802,G__282803,G__282804,G__282805,G__282806,G__282807,G__282808,G__282809,G__282810,G__282811,G__282812,G__282813,G__282814,G__282815,G__282816,G__282817,G__282818,G__282819,G__282820,G__282821,G__282822,G__282823,G__282824,G__282825,G__282826,G__282827,G__282828,G__282829,G__282830,G__282831,G__282832,G__282833,G__282834,G__282835,G__282836,G__282837,G__282838,G__282839,G__282840,G__282841,G__282842,G__282843,G__282844,G__282845,G__282846,G__282847,G__282848,G__282849,G__282850,G__282851,G__282852,G__282853,G__282854,G__282855,G__282856,G__282857,G__282858,G__282859,G__282860,G__282861,G__282862,G__282863,G__282864,G__282865,G__282866,G__282867,G__282868,G__282869,G__282870,G__282871,G__282872,G__282873,G__282874,G__282875,G__282876,G__282877,G__282878,G__282879,G__282880,G__282881,G__282882,G__282883,G__282884,G__282885,G__282886,G__282887,G__282888,G__282889,G__282890,G__282891,G__282892,G__282893,G__282894,G__282895,G__282896,G__282897,G__282898,G__282899,G__282900,G__282901,G__282902,G__282903,G__282904,G__282905,G__282906,G__282907,G__282908,G__282909,G__282910,G__282911,G__282912,G__282913,G__282914,G__282915,G__282916,G__282917,G__282918,G__282919,G__282920,G__282921,G__282922,G__282923,G__282924,G__282925,G__282926,G__282927,G__282928,G__282929,G__282930,G__282931,G__282932,G__282933,G__282934,G__282935,G__282936,G__282937,G__282938,G__282939,G__282940,G__282941,G__282942,G__282943,G__282944,G__282945,G__282946,G__282947,G__282948,G__282949,G__282950,G__282951,G__282952,G__282953,G__282954,G__282955,G__282956,G__282957,G__282958,G__282959,G__282960,G__282961,G__282962,G__282963,G__282964,G__282965,G__282966,G__282967,G__282968,G__282969,G__282970,G__282971,G__282972,G__282973,G__282974,G__282975,G__282976,G__282977,G__282978,G__282979,G__282980,G__282981,G__282982,G__282983,G__282984,G__282985,G__282986,G__282987,G__282988,G__282989,G__282990,G__282991,G__282992,G__282993,G__282994,G__282995,G__282996,G__282997,G__282998,G__282999,G__283000,G__283001,G__283002,G__283003,G__283004,G__283005,G__283006,G__283007,G__283008,G__283009,G__283010,G__283011,G__283012,G__283013,G__283014,G__283015,G__283016,G__283017,G__283018,G__283019,G__283020,G__283021,G__283022,G__283023,G__283024,G__283025,G__283026,G__283027,G__283028,G__283029,G__283030,G__283031,G__283032,G__283033,G__283034,G__283035,G__283036,G__283037,G__283038,G__283039,G__283040,G__283041,G__283042,G__283043,G__283044,G__283045,G__283046,G__283047,G__283048,G__283049,G__283050,G__283051,G__283052,G__283053,G__283054,G__283055,G__283056,G__283057,G__283058,G__283059,G__283060,G__283061,G__283062,G__283063,G__283064,G__283065,G__283066,G__283067,G__283068,G__283069,G__283070,G__283071,G__283072,G__283073,G__283074,G__283075,G__283076,G__283077,G__283078,G__283079,G__283080,G__283081,G__283082,G__283083,G__283084,G__283085,G__283086,G__283087,G__283088,G__283089,G__283090,G__283091,G__283092,G__283093,G__283094,G__283095,G__283096,G__283097,G__283098,G__283099,G__283100,G__283101,G__283102,G__283103,G__283104,G__283105,G__283106,G__283107,G__283108,G__283109,G__283110,G__283111,G__283112,G__283113,G__283114,G__283115,G__283116,G__283117,G__283118,G__283119,G__283120,G__283121,G__283122,G__283123,G__283124,G__283125,G__283126) : tailrecursion.hoplon.pre.call(null,G__282613,G__282614,G__282615,G__282616,G__282617,G__282618,G__282619,G__282620,G__282621,G__282622,G__282623,G__282624,G__282625,G__282626,G__282627,G__282628,G__282629,G__282630,G__282631,G__282632,G__282633,G__282634,G__282635,G__282636,G__282637,G__282638,G__282639,G__282640,G__282641,G__282642,G__282643,G__282644,G__282645,G__282646,G__282647,G__282648,G__282649,G__282650,G__282651,G__282652,G__282653,G__282654,G__282655,G__282656,G__282657,G__282658,G__282659,G__282660,G__282661,G__282662,G__282663,G__282664,G__282665,G__282666,G__282667,G__282668,G__282669,G__282670,G__282671,G__282672,G__282673,G__282674,G__282675,G__282676,G__282677,G__282678,G__282679,G__282680,G__282681,G__282682,G__282683,G__282684,G__282685,G__282686,G__282687,G__282688,G__282689,G__282690,G__282691,G__282692,G__282693,G__282694,G__282695,G__282696,G__282697,G__282698,G__282699,G__282700,G__282701,G__282702,G__282703,G__282704,G__282705,G__282706,G__282707,G__282708,G__282709,G__282710,G__282711,G__282712,G__282713,G__282714,G__282715,G__282716,G__282717,G__282718,G__282719,G__282720,G__282721,G__282722,G__282723,G__282724,G__282725,G__282726,G__282727,G__282728,G__282729,G__282730,G__282731,G__282732,G__282733,G__282734,G__282735,G__282736,G__282737,G__282738,G__282739,G__282740,G__282741,G__282742,G__282743,G__282744,G__282745,G__282746,G__282747,G__282748,G__282749,G__282750,G__282751,G__282752,G__282753,G__282754,G__282755,G__282756,G__282757,G__282758,G__282759,G__282760,G__282761,G__282762,G__282763,G__282764,G__282765,G__282766,G__282767,G__282768,G__282769,G__282770,G__282771,G__282772,G__282773,G__282774,G__282775,G__282776,G__282777,G__282778,G__282779,G__282780,G__282781,G__282782,G__282783,G__282784,G__282785,G__282786,G__282787,G__282788,G__282789,G__282790,G__282791,G__282792,G__282793,G__282794,G__282795,G__282796,G__282797,G__282798,G__282799,G__282800,G__282801,G__282802,G__282803,G__282804,G__282805,G__282806,G__282807,G__282808,G__282809,G__282810,G__282811,G__282812,G__282813,G__282814,G__282815,G__282816,G__282817,G__282818,G__282819,G__282820,G__282821,G__282822,G__282823,G__282824,G__282825,G__282826,G__282827,G__282828,G__282829,G__282830,G__282831,G__282832,G__282833,G__282834,G__282835,G__282836,G__282837,G__282838,G__282839,G__282840,G__282841,G__282842,G__282843,G__282844,G__282845,G__282846,G__282847,G__282848,G__282849,G__282850,G__282851,G__282852,G__282853,G__282854,G__282855,G__282856,G__282857,G__282858,G__282859,G__282860,G__282861,G__282862,G__282863,G__282864,G__282865,G__282866,G__282867,G__282868,G__282869,G__282870,G__282871,G__282872,G__282873,G__282874,G__282875,G__282876,G__282877,G__282878,G__282879,G__282880,G__282881,G__282882,G__282883,G__282884,G__282885,G__282886,G__282887,G__282888,G__282889,G__282890,G__282891,G__282892,G__282893,G__282894,G__282895,G__282896,G__282897,G__282898,G__282899,G__282900,G__282901,G__282902,G__282903,G__282904,G__282905,G__282906,G__282907,G__282908,G__282909,G__282910,G__282911,G__282912,G__282913,G__282914,G__282915,G__282916,G__282917,G__282918,G__282919,G__282920,G__282921,G__282922,G__282923,G__282924,G__282925,G__282926,G__282927,G__282928,G__282929,G__282930,G__282931,G__282932,G__282933,G__282934,G__282935,G__282936,G__282937,G__282938,G__282939,G__282940,G__282941,G__282942,G__282943,G__282944,G__282945,G__282946,G__282947,G__282948,G__282949,G__282950,G__282951,G__282952,G__282953,G__282954,G__282955,G__282956,G__282957,G__282958,G__282959,G__282960,G__282961,G__282962,G__282963,G__282964,G__282965,G__282966,G__282967,G__282968,G__282969,G__282970,G__282971,G__282972,G__282973,G__282974,G__282975,G__282976,G__282977,G__282978,G__282979,G__282980,G__282981,G__282982,G__282983,G__282984,G__282985,G__282986,G__282987,G__282988,G__282989,G__282990,G__282991,G__282992,G__282993,G__282994,G__282995,G__282996,G__282997,G__282998,G__282999,G__283000,G__283001,G__283002,G__283003,G__283004,G__283005,G__283006,G__283007,G__283008,G__283009,G__283010,G__283011,G__283012,G__283013,G__283014,G__283015,G__283016,G__283017,G__283018,G__283019,G__283020,G__283021,G__283022,G__283023,G__283024,G__283025,G__283026,G__283027,G__283028,G__283029,G__283030,G__283031,G__283032,G__283033,G__283034,G__283035,G__283036,G__283037,G__283038,G__283039,G__283040,G__283041,G__283042,G__283043,G__283044,G__283045,G__283046,G__283047,G__283048,G__283049,G__283050,G__283051,G__283052,G__283053,G__283054,G__283055,G__283056,G__283057,G__283058,G__283059,G__283060,G__283061,G__283062,G__283063,G__283064,G__283065,G__283066,G__283067,G__283068,G__283069,G__283070,G__283071,G__283072,G__283073,G__283074,G__283075,G__283076,G__283077,G__283078,G__283079,G__283080,G__283081,G__283082,G__283083,G__283084,G__283085,G__283086,G__283087,G__283088,G__283089,G__283090,G__283091,G__283092,G__283093,G__283094,G__283095,G__283096,G__283097,G__283098,G__283099,G__283100,G__283101,G__283102,G__283103,G__283104,G__283105,G__283106,G__283107,G__283108,G__283109,G__283110,G__283111,G__283112,G__283113,G__283114,G__283115,G__283116,G__283117,G__283118,G__283119,G__283120,G__283121,G__283122,G__283123,G__283124,G__283125,G__283126));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__282611,G__282612) : tailrecursion.hoplon.div.call(null,G__282611,G__282612));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__282610) : tailrecursion.hoplon.div.call(null,G__282610));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_281569;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_281568;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_281567;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_281566;
}})()], 0)),"",(function (){var _STAR_references_STAR_283651 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_283652 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_283653 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_283654 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__283671 = (function (){var G__283672 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__283673 = (function (){var G__283674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__283675 = "(";
var G__283676 = (function (){var G__283682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283683 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283682,G__283683) : tailrecursion.hoplon.span.call(null,G__283682,G__283683));
})();
var G__283677 = " ";
var G__283678 = (function (){var G__283684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283685 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283684,G__283685) : tailrecursion.hoplon.span.call(null,G__283684,G__283685));
})();
var G__283679 = " ";
var G__283680 = (function (){var G__283686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283687 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283686,G__283687) : tailrecursion.hoplon.span.call(null,G__283686,G__283687));
})();
var G__283681 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__283674,G__283675,G__283676,G__283677,G__283678,G__283679,G__283680,G__283681) : tailrecursion.hoplon.pre.call(null,G__283674,G__283675,G__283676,G__283677,G__283678,G__283679,G__283680,G__283681));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__283672,G__283673) : tailrecursion.hoplon.div.call(null,G__283672,G__283673));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__283671) : tailrecursion.hoplon.div.call(null,G__283671));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_283654;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_283653;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_283652;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_283651;
}})(),book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_283688 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_283689 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_283690 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_283691 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__284344 = (function (){var G__284345 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__284346 = (function (){var G__284347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__284348 = "(";
var G__284349 = (function (){var G__284669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284670 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284669,G__284670) : tailrecursion.hoplon.span.call(null,G__284669,G__284670));
})();
var G__284350 = " ";
var G__284351 = (function (){var G__284671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284672 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284671,G__284672) : tailrecursion.hoplon.span.call(null,G__284671,G__284672));
})();
var G__284352 = " ";
var G__284353 = (function (){var G__284673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284674 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284673,G__284674) : tailrecursion.hoplon.span.call(null,G__284673,G__284674));
})();
var G__284354 = ")\n(";
var G__284355 = (function (){var G__284675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284676 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284675,G__284676) : tailrecursion.hoplon.span.call(null,G__284675,G__284676));
})();
var G__284356 = " (";
var G__284357 = (function (){var G__284677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__284678 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284677,G__284678) : tailrecursion.hoplon.span.call(null,G__284677,G__284678));
})();
var G__284358 = (function (){var G__284679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284680 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284679,G__284680) : tailrecursion.hoplon.span.call(null,G__284679,G__284680));
})();
var G__284359 = " ";
var G__284360 = (function (){var G__284681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284682 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284681,G__284682) : tailrecursion.hoplon.span.call(null,G__284681,G__284682));
})();
var G__284361 = ") (";
var G__284362 = (function (){var G__284683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284684 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284683,G__284684) : tailrecursion.hoplon.span.call(null,G__284683,G__284684));
})();
var G__284363 = " ";
var G__284364 = (function (){var G__284685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284686 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284685,G__284686) : tailrecursion.hoplon.span.call(null,G__284685,G__284686));
})();
var G__284365 = " (";
var G__284366 = (function (){var G__284687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__284688 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284687,G__284688) : tailrecursion.hoplon.span.call(null,G__284687,G__284688));
})();
var G__284367 = (function (){var G__284689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284690 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284689,G__284690) : tailrecursion.hoplon.span.call(null,G__284689,G__284690));
})();
var G__284368 = " ";
var G__284369 = (function (){var G__284691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284692 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284691,G__284692) : tailrecursion.hoplon.span.call(null,G__284691,G__284692));
})();
var G__284370 = ")))\n(";
var G__284371 = (function (){var G__284693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284694 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284693,G__284694) : tailrecursion.hoplon.span.call(null,G__284693,G__284694));
})();
var G__284372 = " ";
var G__284373 = (function (){var G__284695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284696 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284695,G__284696) : tailrecursion.hoplon.span.call(null,G__284695,G__284696));
})();
var G__284374 = " (";
var G__284375 = (function (){var G__284697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284698 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284697,G__284698) : tailrecursion.hoplon.span.call(null,G__284697,G__284698));
})();
var G__284376 = " ";
var G__284377 = (function (){var G__284699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284700 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284699,G__284700) : tailrecursion.hoplon.span.call(null,G__284699,G__284700));
})();
var G__284378 = " ";
var G__284379 = (function (){var G__284701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284702 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284701,G__284702) : tailrecursion.hoplon.span.call(null,G__284701,G__284702));
})();
var G__284380 = "))\n(";
var G__284381 = (function (){var G__284703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284704 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284703,G__284704) : tailrecursion.hoplon.span.call(null,G__284703,G__284704));
})();
var G__284382 = " ";
var G__284383 = (function (){var G__284705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284706 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284705,G__284706) : tailrecursion.hoplon.span.call(null,G__284705,G__284706));
})();
var G__284384 = " (";
var G__284385 = (function (){var G__284707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284708 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284707,G__284708) : tailrecursion.hoplon.span.call(null,G__284707,G__284708));
})();
var G__284386 = " (";
var G__284387 = (function (){var G__284709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__284710 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284709,G__284710) : tailrecursion.hoplon.span.call(null,G__284709,G__284710));
})();
var G__284388 = (function (){var G__284711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284712 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284711,G__284712) : tailrecursion.hoplon.span.call(null,G__284711,G__284712));
})();
var G__284389 = " ";
var G__284390 = (function (){var G__284713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284714 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284713,G__284714) : tailrecursion.hoplon.span.call(null,G__284713,G__284714));
})();
var G__284391 = ") (";
var G__284392 = (function (){var G__284715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284716 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284715,G__284716) : tailrecursion.hoplon.span.call(null,G__284715,G__284716));
})();
var G__284393 = " ";
var G__284394 = (function (){var G__284717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284718 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284717,G__284718) : tailrecursion.hoplon.span.call(null,G__284717,G__284718));
})();
var G__284395 = " (";
var G__284396 = (function (){var G__284719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__284720 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284719,G__284720) : tailrecursion.hoplon.span.call(null,G__284719,G__284720));
})();
var G__284397 = (function (){var G__284721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284722 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284721,G__284722) : tailrecursion.hoplon.span.call(null,G__284721,G__284722));
})();
var G__284398 = " ";
var G__284399 = (function (){var G__284723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284724 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284723,G__284724) : tailrecursion.hoplon.span.call(null,G__284723,G__284724));
})();
var G__284400 = "))))\n(";
var G__284401 = (function (){var G__284725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284726 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284725,G__284726) : tailrecursion.hoplon.span.call(null,G__284725,G__284726));
})();
var G__284402 = " ";
var G__284403 = (function (){var G__284727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284728 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284727,G__284728) : tailrecursion.hoplon.span.call(null,G__284727,G__284728));
})();
var G__284404 = " (";
var G__284405 = (function (){var G__284729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284730 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284729,G__284730) : tailrecursion.hoplon.span.call(null,G__284729,G__284730));
})();
var G__284406 = " ";
var G__284407 = (function (){var G__284731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284732 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284731,G__284732) : tailrecursion.hoplon.span.call(null,G__284731,G__284732));
})();
var G__284408 = " (";
var G__284409 = (function (){var G__284733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284734 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284733,G__284734) : tailrecursion.hoplon.span.call(null,G__284733,G__284734));
})();
var G__284410 = " ";
var G__284411 = (function (){var G__284735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284736 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284735,G__284736) : tailrecursion.hoplon.span.call(null,G__284735,G__284736));
})();
var G__284412 = " ";
var G__284413 = (function (){var G__284737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284738 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284737,G__284738) : tailrecursion.hoplon.span.call(null,G__284737,G__284738));
})();
var G__284414 = ")))\n(";
var G__284415 = (function (){var G__284739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284740 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284739,G__284740) : tailrecursion.hoplon.span.call(null,G__284739,G__284740));
})();
var G__284416 = " ";
var G__284417 = (function (){var G__284741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284742 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284741,G__284742) : tailrecursion.hoplon.span.call(null,G__284741,G__284742));
})();
var G__284418 = " (";
var G__284419 = (function (){var G__284743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284744 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284743,G__284744) : tailrecursion.hoplon.span.call(null,G__284743,G__284744));
})();
var G__284420 = " ";
var G__284421 = (function (){var G__284745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284746 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284745,G__284746) : tailrecursion.hoplon.span.call(null,G__284745,G__284746));
})();
var G__284422 = " (";
var G__284423 = (function (){var G__284747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284748 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284747,G__284748) : tailrecursion.hoplon.span.call(null,G__284747,G__284748));
})();
var G__284424 = " (";
var G__284425 = (function (){var G__284749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__284750 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284749,G__284750) : tailrecursion.hoplon.span.call(null,G__284749,G__284750));
})();
var G__284426 = (function (){var G__284751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284752 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284751,G__284752) : tailrecursion.hoplon.span.call(null,G__284751,G__284752));
})();
var G__284427 = " ";
var G__284428 = (function (){var G__284753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284754 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284753,G__284754) : tailrecursion.hoplon.span.call(null,G__284753,G__284754));
})();
var G__284429 = ") (";
var G__284430 = (function (){var G__284755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284756 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284755,G__284756) : tailrecursion.hoplon.span.call(null,G__284755,G__284756));
})();
var G__284431 = " ";
var G__284432 = (function (){var G__284757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284758 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284757,G__284758) : tailrecursion.hoplon.span.call(null,G__284757,G__284758));
})();
var G__284433 = " (";
var G__284434 = (function (){var G__284759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__284760 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284759,G__284760) : tailrecursion.hoplon.span.call(null,G__284759,G__284760));
})();
var G__284435 = (function (){var G__284761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284762 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284761,G__284762) : tailrecursion.hoplon.span.call(null,G__284761,G__284762));
})();
var G__284436 = " ";
var G__284437 = (function (){var G__284763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284764 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284763,G__284764) : tailrecursion.hoplon.span.call(null,G__284763,G__284764));
})();
var G__284438 = ")))))\n(";
var G__284439 = (function (){var G__284765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284766 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284765,G__284766) : tailrecursion.hoplon.span.call(null,G__284765,G__284766));
})();
var G__284440 = " ";
var G__284441 = (function (){var G__284767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284768 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284767,G__284768) : tailrecursion.hoplon.span.call(null,G__284767,G__284768));
})();
var G__284442 = " (";
var G__284443 = (function (){var G__284769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284770 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284769,G__284770) : tailrecursion.hoplon.span.call(null,G__284769,G__284770));
})();
var G__284444 = " ";
var G__284445 = (function (){var G__284771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284772 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284771,G__284772) : tailrecursion.hoplon.span.call(null,G__284771,G__284772));
})();
var G__284446 = " (";
var G__284447 = (function (){var G__284773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284774 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284773,G__284774) : tailrecursion.hoplon.span.call(null,G__284773,G__284774));
})();
var G__284448 = " ";
var G__284449 = (function (){var G__284775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284776 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284775,G__284776) : tailrecursion.hoplon.span.call(null,G__284775,G__284776));
})();
var G__284450 = " (";
var G__284451 = (function (){var G__284777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284778 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284777,G__284778) : tailrecursion.hoplon.span.call(null,G__284777,G__284778));
})();
var G__284452 = " ";
var G__284453 = (function (){var G__284779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284780 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284779,G__284780) : tailrecursion.hoplon.span.call(null,G__284779,G__284780));
})();
var G__284454 = " ";
var G__284455 = (function (){var G__284781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284782 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284781,G__284782) : tailrecursion.hoplon.span.call(null,G__284781,G__284782));
})();
var G__284456 = "))))\n(";
var G__284457 = (function (){var G__284783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284784 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284783,G__284784) : tailrecursion.hoplon.span.call(null,G__284783,G__284784));
})();
var G__284458 = " ";
var G__284459 = (function (){var G__284785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284786 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284785,G__284786) : tailrecursion.hoplon.span.call(null,G__284785,G__284786));
})();
var G__284460 = " (";
var G__284461 = (function (){var G__284787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284788 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284787,G__284788) : tailrecursion.hoplon.span.call(null,G__284787,G__284788));
})();
var G__284462 = " ";
var G__284463 = (function (){var G__284789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284790 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284789,G__284790) : tailrecursion.hoplon.span.call(null,G__284789,G__284790));
})();
var G__284464 = " (";
var G__284465 = (function (){var G__284791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284792 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284791,G__284792) : tailrecursion.hoplon.span.call(null,G__284791,G__284792));
})();
var G__284466 = " ";
var G__284467 = (function (){var G__284793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284794 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284793,G__284794) : tailrecursion.hoplon.span.call(null,G__284793,G__284794));
})();
var G__284468 = " ";
var G__284469 = (function (){var G__284795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284796 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284795,G__284796) : tailrecursion.hoplon.span.call(null,G__284795,G__284796));
})();
var G__284470 = ")))\n(";
var G__284471 = (function (){var G__284797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284798 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284797,G__284798) : tailrecursion.hoplon.span.call(null,G__284797,G__284798));
})();
var G__284472 = " ";
var G__284473 = (function (){var G__284799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284800 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284799,G__284800) : tailrecursion.hoplon.span.call(null,G__284799,G__284800));
})();
var G__284474 = " (";
var G__284475 = (function (){var G__284801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284802 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284801,G__284802) : tailrecursion.hoplon.span.call(null,G__284801,G__284802));
})();
var G__284476 = " ";
var G__284477 = (function (){var G__284803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284804 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284803,G__284804) : tailrecursion.hoplon.span.call(null,G__284803,G__284804));
})();
var G__284478 = " (";
var G__284479 = (function (){var G__284805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284806 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284805,G__284806) : tailrecursion.hoplon.span.call(null,G__284805,G__284806));
})();
var G__284480 = " (";
var G__284481 = (function (){var G__284807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__284808 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284807,G__284808) : tailrecursion.hoplon.span.call(null,G__284807,G__284808));
})();
var G__284482 = (function (){var G__284809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284810 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284809,G__284810) : tailrecursion.hoplon.span.call(null,G__284809,G__284810));
})();
var G__284483 = " ";
var G__284484 = (function (){var G__284811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284812 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284811,G__284812) : tailrecursion.hoplon.span.call(null,G__284811,G__284812));
})();
var G__284485 = ") (";
var G__284486 = (function (){var G__284813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284814 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284813,G__284814) : tailrecursion.hoplon.span.call(null,G__284813,G__284814));
})();
var G__284487 = " ";
var G__284488 = (function (){var G__284815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284816 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284815,G__284816) : tailrecursion.hoplon.span.call(null,G__284815,G__284816));
})();
var G__284489 = " (";
var G__284490 = (function (){var G__284817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__284818 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284817,G__284818) : tailrecursion.hoplon.span.call(null,G__284817,G__284818));
})();
var G__284491 = (function (){var G__284819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284820 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284819,G__284820) : tailrecursion.hoplon.span.call(null,G__284819,G__284820));
})();
var G__284492 = " ";
var G__284493 = (function (){var G__284821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284822 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284821,G__284822) : tailrecursion.hoplon.span.call(null,G__284821,G__284822));
})();
var G__284494 = ")))))\n(";
var G__284495 = (function (){var G__284823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284824 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284823,G__284824) : tailrecursion.hoplon.span.call(null,G__284823,G__284824));
})();
var G__284496 = " ";
var G__284497 = (function (){var G__284825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284826 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284825,G__284826) : tailrecursion.hoplon.span.call(null,G__284825,G__284826));
})();
var G__284498 = " (";
var G__284499 = (function (){var G__284827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284828 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284827,G__284828) : tailrecursion.hoplon.span.call(null,G__284827,G__284828));
})();
var G__284500 = " ";
var G__284501 = (function (){var G__284829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284830 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284829,G__284830) : tailrecursion.hoplon.span.call(null,G__284829,G__284830));
})();
var G__284502 = " (";
var G__284503 = (function (){var G__284831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284832 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284831,G__284832) : tailrecursion.hoplon.span.call(null,G__284831,G__284832));
})();
var G__284504 = " ";
var G__284505 = (function (){var G__284833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284834 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284833,G__284834) : tailrecursion.hoplon.span.call(null,G__284833,G__284834));
})();
var G__284506 = " (";
var G__284507 = (function (){var G__284835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284836 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284835,G__284836) : tailrecursion.hoplon.span.call(null,G__284835,G__284836));
})();
var G__284508 = " ";
var G__284509 = (function (){var G__284837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284838 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284837,G__284838) : tailrecursion.hoplon.span.call(null,G__284837,G__284838));
})();
var G__284510 = " ";
var G__284511 = (function (){var G__284839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284840 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284839,G__284840) : tailrecursion.hoplon.span.call(null,G__284839,G__284840));
})();
var G__284512 = "))))\n(";
var G__284513 = (function (){var G__284841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284842 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284841,G__284842) : tailrecursion.hoplon.span.call(null,G__284841,G__284842));
})();
var G__284514 = " ";
var G__284515 = (function (){var G__284843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284844 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284843,G__284844) : tailrecursion.hoplon.span.call(null,G__284843,G__284844));
})();
var G__284516 = " (";
var G__284517 = (function (){var G__284845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284846 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284845,G__284846) : tailrecursion.hoplon.span.call(null,G__284845,G__284846));
})();
var G__284518 = " ";
var G__284519 = (function (){var G__284847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284848 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284847,G__284848) : tailrecursion.hoplon.span.call(null,G__284847,G__284848));
})();
var G__284520 = " (";
var G__284521 = (function (){var G__284849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284850 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284849,G__284850) : tailrecursion.hoplon.span.call(null,G__284849,G__284850));
})();
var G__284522 = " ";
var G__284523 = (function (){var G__284851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284852 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284851,G__284852) : tailrecursion.hoplon.span.call(null,G__284851,G__284852));
})();
var G__284524 = " ";
var G__284525 = (function (){var G__284853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284854 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284853,G__284854) : tailrecursion.hoplon.span.call(null,G__284853,G__284854));
})();
var G__284526 = ")))\n(";
var G__284527 = (function (){var G__284855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284856 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284855,G__284856) : tailrecursion.hoplon.span.call(null,G__284855,G__284856));
})();
var G__284528 = " ";
var G__284529 = (function (){var G__284857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284858 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284857,G__284858) : tailrecursion.hoplon.span.call(null,G__284857,G__284858));
})();
var G__284530 = " (";
var G__284531 = (function (){var G__284859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284860 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284859,G__284860) : tailrecursion.hoplon.span.call(null,G__284859,G__284860));
})();
var G__284532 = " ";
var G__284533 = (function (){var G__284861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284862 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284861,G__284862) : tailrecursion.hoplon.span.call(null,G__284861,G__284862));
})();
var G__284534 = " ";
var G__284535 = (function (){var G__284863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284864 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284863,G__284864) : tailrecursion.hoplon.span.call(null,G__284863,G__284864));
})();
var G__284536 = "))\n(";
var G__284537 = (function (){var G__284865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284866 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284865,G__284866) : tailrecursion.hoplon.span.call(null,G__284865,G__284866));
})();
var G__284538 = " ";
var G__284539 = (function (){var G__284867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284868 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284867,G__284868) : tailrecursion.hoplon.span.call(null,G__284867,G__284868));
})();
var G__284540 = " (";
var G__284541 = (function (){var G__284869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284870 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284869,G__284870) : tailrecursion.hoplon.span.call(null,G__284869,G__284870));
})();
var G__284542 = " ";
var G__284543 = (function (){var G__284871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284872 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284871,G__284872) : tailrecursion.hoplon.span.call(null,G__284871,G__284872));
})();
var G__284544 = " (";
var G__284545 = (function (){var G__284873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284874 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284873,G__284874) : tailrecursion.hoplon.span.call(null,G__284873,G__284874));
})();
var G__284546 = " ";
var G__284547 = (function (){var G__284875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284876 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284875,G__284876) : tailrecursion.hoplon.span.call(null,G__284875,G__284876));
})();
var G__284548 = " ";
var G__284549 = (function (){var G__284877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284878 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284877,G__284878) : tailrecursion.hoplon.span.call(null,G__284877,G__284878));
})();
var G__284550 = ")))\n(";
var G__284551 = (function (){var G__284879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284880 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284879,G__284880) : tailrecursion.hoplon.span.call(null,G__284879,G__284880));
})();
var G__284552 = " ";
var G__284553 = (function (){var G__284881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284882 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284881,G__284882) : tailrecursion.hoplon.span.call(null,G__284881,G__284882));
})();
var G__284554 = " (";
var G__284555 = (function (){var G__284883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284884 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284883,G__284884) : tailrecursion.hoplon.span.call(null,G__284883,G__284884));
})();
var G__284556 = " ";
var G__284557 = (function (){var G__284885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284886 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284885,G__284886) : tailrecursion.hoplon.span.call(null,G__284885,G__284886));
})();
var G__284558 = " (";
var G__284559 = (function (){var G__284887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284888 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284887,G__284888) : tailrecursion.hoplon.span.call(null,G__284887,G__284888));
})();
var G__284560 = " ";
var G__284561 = (function (){var G__284889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284890 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284889,G__284890) : tailrecursion.hoplon.span.call(null,G__284889,G__284890));
})();
var G__284562 = " (";
var G__284563 = (function (){var G__284891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284892 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284891,G__284892) : tailrecursion.hoplon.span.call(null,G__284891,G__284892));
})();
var G__284564 = " ";
var G__284565 = (function (){var G__284893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284894 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284893,G__284894) : tailrecursion.hoplon.span.call(null,G__284893,G__284894));
})();
var G__284566 = " ";
var G__284567 = (function (){var G__284895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284896 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284895,G__284896) : tailrecursion.hoplon.span.call(null,G__284895,G__284896));
})();
var G__284568 = "))))\n(";
var G__284569 = (function (){var G__284897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284898 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284897,G__284898) : tailrecursion.hoplon.span.call(null,G__284897,G__284898));
})();
var G__284570 = " ";
var G__284571 = (function (){var G__284899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284900 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284899,G__284900) : tailrecursion.hoplon.span.call(null,G__284899,G__284900));
})();
var G__284572 = " (";
var G__284573 = (function (){var G__284901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284902 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284901,G__284902) : tailrecursion.hoplon.span.call(null,G__284901,G__284902));
})();
var G__284574 = " ";
var G__284575 = (function (){var G__284903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284904 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284903,G__284904) : tailrecursion.hoplon.span.call(null,G__284903,G__284904));
})();
var G__284576 = " (";
var G__284577 = (function (){var G__284905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284906 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284905,G__284906) : tailrecursion.hoplon.span.call(null,G__284905,G__284906));
})();
var G__284578 = " ";
var G__284579 = (function (){var G__284907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284908 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284907,G__284908) : tailrecursion.hoplon.span.call(null,G__284907,G__284908));
})();
var G__284580 = " (";
var G__284581 = (function (){var G__284909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284910 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284909,G__284910) : tailrecursion.hoplon.span.call(null,G__284909,G__284910));
})();
var G__284582 = " ";
var G__284583 = (function (){var G__284911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284912 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284911,G__284912) : tailrecursion.hoplon.span.call(null,G__284911,G__284912));
})();
var G__284584 = " (";
var G__284585 = (function (){var G__284913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284914 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284913,G__284914) : tailrecursion.hoplon.span.call(null,G__284913,G__284914));
})();
var G__284586 = " ";
var G__284587 = (function (){var G__284915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284916 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284915,G__284916) : tailrecursion.hoplon.span.call(null,G__284915,G__284916));
})();
var G__284588 = " ";
var G__284589 = (function (){var G__284917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284918 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284917,G__284918) : tailrecursion.hoplon.span.call(null,G__284917,G__284918));
})();
var G__284590 = ")))))\n(";
var G__284591 = (function (){var G__284919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284920 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284919,G__284920) : tailrecursion.hoplon.span.call(null,G__284919,G__284920));
})();
var G__284592 = " ";
var G__284593 = (function (){var G__284921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284922 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284921,G__284922) : tailrecursion.hoplon.span.call(null,G__284921,G__284922));
})();
var G__284594 = " (";
var G__284595 = (function (){var G__284923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284924 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284923,G__284924) : tailrecursion.hoplon.span.call(null,G__284923,G__284924));
})();
var G__284596 = " ";
var G__284597 = (function (){var G__284925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284926 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284925,G__284926) : tailrecursion.hoplon.span.call(null,G__284925,G__284926));
})();
var G__284598 = " (";
var G__284599 = (function (){var G__284927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284928 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284927,G__284928) : tailrecursion.hoplon.span.call(null,G__284927,G__284928));
})();
var G__284600 = " ";
var G__284601 = (function (){var G__284929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284930 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284929,G__284930) : tailrecursion.hoplon.span.call(null,G__284929,G__284930));
})();
var G__284602 = " (";
var G__284603 = (function (){var G__284931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284932 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284931,G__284932) : tailrecursion.hoplon.span.call(null,G__284931,G__284932));
})();
var G__284604 = " ";
var G__284605 = (function (){var G__284933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284934 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284933,G__284934) : tailrecursion.hoplon.span.call(null,G__284933,G__284934));
})();
var G__284606 = " ";
var G__284607 = (function (){var G__284935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284936 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284935,G__284936) : tailrecursion.hoplon.span.call(null,G__284935,G__284936));
})();
var G__284608 = "))))\n(";
var G__284609 = (function (){var G__284937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284938 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284937,G__284938) : tailrecursion.hoplon.span.call(null,G__284937,G__284938));
})();
var G__284610 = " ";
var G__284611 = (function (){var G__284939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284940 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284939,G__284940) : tailrecursion.hoplon.span.call(null,G__284939,G__284940));
})();
var G__284612 = " (";
var G__284613 = (function (){var G__284941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284942 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284941,G__284942) : tailrecursion.hoplon.span.call(null,G__284941,G__284942));
})();
var G__284614 = " ";
var G__284615 = (function (){var G__284943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284944 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284943,G__284944) : tailrecursion.hoplon.span.call(null,G__284943,G__284944));
})();
var G__284616 = " (";
var G__284617 = (function (){var G__284945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284946 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284945,G__284946) : tailrecursion.hoplon.span.call(null,G__284945,G__284946));
})();
var G__284618 = " ";
var G__284619 = (function (){var G__284947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284948 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284947,G__284948) : tailrecursion.hoplon.span.call(null,G__284947,G__284948));
})();
var G__284620 = " ";
var G__284621 = (function (){var G__284949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284950 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284949,G__284950) : tailrecursion.hoplon.span.call(null,G__284949,G__284950));
})();
var G__284622 = ")))\n(";
var G__284623 = (function (){var G__284951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284952 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284951,G__284952) : tailrecursion.hoplon.span.call(null,G__284951,G__284952));
})();
var G__284624 = " ";
var G__284625 = (function (){var G__284953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284954 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284953,G__284954) : tailrecursion.hoplon.span.call(null,G__284953,G__284954));
})();
var G__284626 = " (";
var G__284627 = (function (){var G__284955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284956 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284955,G__284956) : tailrecursion.hoplon.span.call(null,G__284955,G__284956));
})();
var G__284628 = " ";
var G__284629 = (function (){var G__284957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284958 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284957,G__284958) : tailrecursion.hoplon.span.call(null,G__284957,G__284958));
})();
var G__284630 = " ";
var G__284631 = (function (){var G__284959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284960 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284959,G__284960) : tailrecursion.hoplon.span.call(null,G__284959,G__284960));
})();
var G__284632 = "))\n(";
var G__284633 = (function (){var G__284961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284962 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284961,G__284962) : tailrecursion.hoplon.span.call(null,G__284961,G__284962));
})();
var G__284634 = " ";
var G__284635 = (function (){var G__284963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284964 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284963,G__284964) : tailrecursion.hoplon.span.call(null,G__284963,G__284964));
})();
var G__284636 = " ";
var G__284637 = (function (){var G__284965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284966 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284965,G__284966) : tailrecursion.hoplon.span.call(null,G__284965,G__284966));
})();
var G__284638 = ")\n(";
var G__284639 = (function (){var G__284967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284968 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284967,G__284968) : tailrecursion.hoplon.span.call(null,G__284967,G__284968));
})();
var G__284640 = " ";
var G__284641 = (function (){var G__284969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284970 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284969,G__284970) : tailrecursion.hoplon.span.call(null,G__284969,G__284970));
})();
var G__284642 = " (";
var G__284643 = (function (){var G__284971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284972 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284971,G__284972) : tailrecursion.hoplon.span.call(null,G__284971,G__284972));
})();
var G__284644 = " ";
var G__284645 = (function (){var G__284973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284974 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284973,G__284974) : tailrecursion.hoplon.span.call(null,G__284973,G__284974));
})();
var G__284646 = " ";
var G__284647 = (function (){var G__284975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284976 = "15";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284975,G__284976) : tailrecursion.hoplon.span.call(null,G__284975,G__284976));
})();
var G__284648 = "))\n(";
var G__284649 = (function (){var G__284977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284978 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284977,G__284978) : tailrecursion.hoplon.span.call(null,G__284977,G__284978));
})();
var G__284650 = " ";
var G__284651 = (function (){var G__284979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284980 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284979,G__284980) : tailrecursion.hoplon.span.call(null,G__284979,G__284980));
})();
var G__284652 = " (";
var G__284653 = (function (){var G__284981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284982 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284981,G__284982) : tailrecursion.hoplon.span.call(null,G__284981,G__284982));
})();
var G__284654 = " ";
var G__284655 = (function (){var G__284983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284984 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284983,G__284984) : tailrecursion.hoplon.span.call(null,G__284983,G__284984));
})();
var G__284656 = " (";
var G__284657 = (function (){var G__284985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284986 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284985,G__284986) : tailrecursion.hoplon.span.call(null,G__284985,G__284986));
})();
var G__284658 = " ";
var G__284659 = (function (){var G__284987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284988 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284987,G__284988) : tailrecursion.hoplon.span.call(null,G__284987,G__284988));
})();
var G__284660 = " ";
var G__284661 = (function (){var G__284989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284990 = "14";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284989,G__284990) : tailrecursion.hoplon.span.call(null,G__284989,G__284990));
})();
var G__284662 = ")))\n";
var G__284663 = (function (){var G__284991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__284992 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284991,G__284992) : tailrecursion.hoplon.span.call(null,G__284991,G__284992));
})();
var G__284664 = "\n";
var G__284665 = (function (){var G__284993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284994 = "65";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284993,G__284994) : tailrecursion.hoplon.span.call(null,G__284993,G__284994));
})();
var G__284666 = ",";
var G__284667 = (function (){var G__284995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284996 = "536";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284995,G__284996) : tailrecursion.hoplon.span.call(null,G__284995,G__284996));
})();
var G__284668 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$322 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$322(G__284347,G__284348,G__284349,G__284350,G__284351,G__284352,G__284353,G__284354,G__284355,G__284356,G__284357,G__284358,G__284359,G__284360,G__284361,G__284362,G__284363,G__284364,G__284365,G__284366,G__284367,G__284368,G__284369,G__284370,G__284371,G__284372,G__284373,G__284374,G__284375,G__284376,G__284377,G__284378,G__284379,G__284380,G__284381,G__284382,G__284383,G__284384,G__284385,G__284386,G__284387,G__284388,G__284389,G__284390,G__284391,G__284392,G__284393,G__284394,G__284395,G__284396,G__284397,G__284398,G__284399,G__284400,G__284401,G__284402,G__284403,G__284404,G__284405,G__284406,G__284407,G__284408,G__284409,G__284410,G__284411,G__284412,G__284413,G__284414,G__284415,G__284416,G__284417,G__284418,G__284419,G__284420,G__284421,G__284422,G__284423,G__284424,G__284425,G__284426,G__284427,G__284428,G__284429,G__284430,G__284431,G__284432,G__284433,G__284434,G__284435,G__284436,G__284437,G__284438,G__284439,G__284440,G__284441,G__284442,G__284443,G__284444,G__284445,G__284446,G__284447,G__284448,G__284449,G__284450,G__284451,G__284452,G__284453,G__284454,G__284455,G__284456,G__284457,G__284458,G__284459,G__284460,G__284461,G__284462,G__284463,G__284464,G__284465,G__284466,G__284467,G__284468,G__284469,G__284470,G__284471,G__284472,G__284473,G__284474,G__284475,G__284476,G__284477,G__284478,G__284479,G__284480,G__284481,G__284482,G__284483,G__284484,G__284485,G__284486,G__284487,G__284488,G__284489,G__284490,G__284491,G__284492,G__284493,G__284494,G__284495,G__284496,G__284497,G__284498,G__284499,G__284500,G__284501,G__284502,G__284503,G__284504,G__284505,G__284506,G__284507,G__284508,G__284509,G__284510,G__284511,G__284512,G__284513,G__284514,G__284515,G__284516,G__284517,G__284518,G__284519,G__284520,G__284521,G__284522,G__284523,G__284524,G__284525,G__284526,G__284527,G__284528,G__284529,G__284530,G__284531,G__284532,G__284533,G__284534,G__284535,G__284536,G__284537,G__284538,G__284539,G__284540,G__284541,G__284542,G__284543,G__284544,G__284545,G__284546,G__284547,G__284548,G__284549,G__284550,G__284551,G__284552,G__284553,G__284554,G__284555,G__284556,G__284557,G__284558,G__284559,G__284560,G__284561,G__284562,G__284563,G__284564,G__284565,G__284566,G__284567,G__284568,G__284569,G__284570,G__284571,G__284572,G__284573,G__284574,G__284575,G__284576,G__284577,G__284578,G__284579,G__284580,G__284581,G__284582,G__284583,G__284584,G__284585,G__284586,G__284587,G__284588,G__284589,G__284590,G__284591,G__284592,G__284593,G__284594,G__284595,G__284596,G__284597,G__284598,G__284599,G__284600,G__284601,G__284602,G__284603,G__284604,G__284605,G__284606,G__284607,G__284608,G__284609,G__284610,G__284611,G__284612,G__284613,G__284614,G__284615,G__284616,G__284617,G__284618,G__284619,G__284620,G__284621,G__284622,G__284623,G__284624,G__284625,G__284626,G__284627,G__284628,G__284629,G__284630,G__284631,G__284632,G__284633,G__284634,G__284635,G__284636,G__284637,G__284638,G__284639,G__284640,G__284641,G__284642,G__284643,G__284644,G__284645,G__284646,G__284647,G__284648,G__284649,G__284650,G__284651,G__284652,G__284653,G__284654,G__284655,G__284656,G__284657,G__284658,G__284659,G__284660,G__284661,G__284662,G__284663,G__284664,G__284665,G__284666,G__284667,G__284668) : tailrecursion.hoplon.pre.call(null,G__284347,G__284348,G__284349,G__284350,G__284351,G__284352,G__284353,G__284354,G__284355,G__284356,G__284357,G__284358,G__284359,G__284360,G__284361,G__284362,G__284363,G__284364,G__284365,G__284366,G__284367,G__284368,G__284369,G__284370,G__284371,G__284372,G__284373,G__284374,G__284375,G__284376,G__284377,G__284378,G__284379,G__284380,G__284381,G__284382,G__284383,G__284384,G__284385,G__284386,G__284387,G__284388,G__284389,G__284390,G__284391,G__284392,G__284393,G__284394,G__284395,G__284396,G__284397,G__284398,G__284399,G__284400,G__284401,G__284402,G__284403,G__284404,G__284405,G__284406,G__284407,G__284408,G__284409,G__284410,G__284411,G__284412,G__284413,G__284414,G__284415,G__284416,G__284417,G__284418,G__284419,G__284420,G__284421,G__284422,G__284423,G__284424,G__284425,G__284426,G__284427,G__284428,G__284429,G__284430,G__284431,G__284432,G__284433,G__284434,G__284435,G__284436,G__284437,G__284438,G__284439,G__284440,G__284441,G__284442,G__284443,G__284444,G__284445,G__284446,G__284447,G__284448,G__284449,G__284450,G__284451,G__284452,G__284453,G__284454,G__284455,G__284456,G__284457,G__284458,G__284459,G__284460,G__284461,G__284462,G__284463,G__284464,G__284465,G__284466,G__284467,G__284468,G__284469,G__284470,G__284471,G__284472,G__284473,G__284474,G__284475,G__284476,G__284477,G__284478,G__284479,G__284480,G__284481,G__284482,G__284483,G__284484,G__284485,G__284486,G__284487,G__284488,G__284489,G__284490,G__284491,G__284492,G__284493,G__284494,G__284495,G__284496,G__284497,G__284498,G__284499,G__284500,G__284501,G__284502,G__284503,G__284504,G__284505,G__284506,G__284507,G__284508,G__284509,G__284510,G__284511,G__284512,G__284513,G__284514,G__284515,G__284516,G__284517,G__284518,G__284519,G__284520,G__284521,G__284522,G__284523,G__284524,G__284525,G__284526,G__284527,G__284528,G__284529,G__284530,G__284531,G__284532,G__284533,G__284534,G__284535,G__284536,G__284537,G__284538,G__284539,G__284540,G__284541,G__284542,G__284543,G__284544,G__284545,G__284546,G__284547,G__284548,G__284549,G__284550,G__284551,G__284552,G__284553,G__284554,G__284555,G__284556,G__284557,G__284558,G__284559,G__284560,G__284561,G__284562,G__284563,G__284564,G__284565,G__284566,G__284567,G__284568,G__284569,G__284570,G__284571,G__284572,G__284573,G__284574,G__284575,G__284576,G__284577,G__284578,G__284579,G__284580,G__284581,G__284582,G__284583,G__284584,G__284585,G__284586,G__284587,G__284588,G__284589,G__284590,G__284591,G__284592,G__284593,G__284594,G__284595,G__284596,G__284597,G__284598,G__284599,G__284600,G__284601,G__284602,G__284603,G__284604,G__284605,G__284606,G__284607,G__284608,G__284609,G__284610,G__284611,G__284612,G__284613,G__284614,G__284615,G__284616,G__284617,G__284618,G__284619,G__284620,G__284621,G__284622,G__284623,G__284624,G__284625,G__284626,G__284627,G__284628,G__284629,G__284630,G__284631,G__284632,G__284633,G__284634,G__284635,G__284636,G__284637,G__284638,G__284639,G__284640,G__284641,G__284642,G__284643,G__284644,G__284645,G__284646,G__284647,G__284648,G__284649,G__284650,G__284651,G__284652,G__284653,G__284654,G__284655,G__284656,G__284657,G__284658,G__284659,G__284660,G__284661,G__284662,G__284663,G__284664,G__284665,G__284666,G__284667,G__284668));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__284345,G__284346) : tailrecursion.hoplon.div.call(null,G__284345,G__284346));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__284344) : tailrecursion.hoplon.div.call(null,G__284344));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_283691;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_283690;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_283689;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_283688;
}})()], 0)),(function (){var _STAR_references_STAR_284997 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_284998 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_284999 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_285000 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__285017 = (function (){var G__285018 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__285019 = (function (){var G__285020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__285021 = "(";
var G__285022 = (function (){var G__285028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285029 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285028,G__285029) : tailrecursion.hoplon.span.call(null,G__285028,G__285029));
})();
var G__285023 = " ";
var G__285024 = (function (){var G__285030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285031 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285030,G__285031) : tailrecursion.hoplon.span.call(null,G__285030,G__285031));
})();
var G__285025 = " ";
var G__285026 = (function (){var G__285032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285033 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285032,G__285033) : tailrecursion.hoplon.span.call(null,G__285032,G__285033));
})();
var G__285027 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__285020,G__285021,G__285022,G__285023,G__285024,G__285025,G__285026,G__285027) : tailrecursion.hoplon.pre.call(null,G__285020,G__285021,G__285022,G__285023,G__285024,G__285025,G__285026,G__285027));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__285018,G__285019) : tailrecursion.hoplon.div.call(null,G__285018,G__285019));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__285017) : tailrecursion.hoplon.div.call(null,G__285017));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_285000;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_284999;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_284998;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_284997;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_285034 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_285035 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_285036 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_285037 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__285642 = (function (){var G__285643 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__285644 = (function (){var G__285645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__285646 = "(";
var G__285647 = (function (){var G__285947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285948 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285947,G__285948) : tailrecursion.hoplon.span.call(null,G__285947,G__285948));
})();
var G__285648 = " ";
var G__285649 = (function (){var G__285949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285950 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285949,G__285950) : tailrecursion.hoplon.span.call(null,G__285949,G__285950));
})();
var G__285650 = " ";
var G__285651 = (function (){var G__285951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285952 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285951,G__285952) : tailrecursion.hoplon.span.call(null,G__285951,G__285952));
})();
var G__285652 = ")\n(";
var G__285653 = (function (){var G__285953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285954 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285953,G__285954) : tailrecursion.hoplon.span.call(null,G__285953,G__285954));
})();
var G__285654 = " ";
var G__285655 = (function (){var G__285955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285956 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285955,G__285956) : tailrecursion.hoplon.span.call(null,G__285955,G__285956));
})();
var G__285656 = " (";
var G__285657 = (function (){var G__285957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285958 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285957,G__285958) : tailrecursion.hoplon.span.call(null,G__285957,G__285958));
})();
var G__285658 = " ";
var G__285659 = (function (){var G__285959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285960 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285959,G__285960) : tailrecursion.hoplon.span.call(null,G__285959,G__285960));
})();
var G__285660 = " ";
var G__285661 = (function (){var G__285961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285962 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285961,G__285962) : tailrecursion.hoplon.span.call(null,G__285961,G__285962));
})();
var G__285662 = "))\n(";
var G__285663 = (function (){var G__285963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285964 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285963,G__285964) : tailrecursion.hoplon.span.call(null,G__285963,G__285964));
})();
var G__285664 = " ";
var G__285665 = (function (){var G__285965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285966 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285965,G__285966) : tailrecursion.hoplon.span.call(null,G__285965,G__285966));
})();
var G__285666 = " (";
var G__285667 = (function (){var G__285967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285968 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285967,G__285968) : tailrecursion.hoplon.span.call(null,G__285967,G__285968));
})();
var G__285668 = " ";
var G__285669 = (function (){var G__285969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285970 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285969,G__285970) : tailrecursion.hoplon.span.call(null,G__285969,G__285970));
})();
var G__285670 = " (";
var G__285671 = (function (){var G__285971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285972 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285971,G__285972) : tailrecursion.hoplon.span.call(null,G__285971,G__285972));
})();
var G__285672 = " ";
var G__285673 = (function (){var G__285973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285974 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285973,G__285974) : tailrecursion.hoplon.span.call(null,G__285973,G__285974));
})();
var G__285674 = " ";
var G__285675 = (function (){var G__285975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285976 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285975,G__285976) : tailrecursion.hoplon.span.call(null,G__285975,G__285976));
})();
var G__285676 = ")))\n(";
var G__285677 = (function (){var G__285977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285978 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285977,G__285978) : tailrecursion.hoplon.span.call(null,G__285977,G__285978));
})();
var G__285678 = " ";
var G__285679 = (function (){var G__285979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285980 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285979,G__285980) : tailrecursion.hoplon.span.call(null,G__285979,G__285980));
})();
var G__285680 = " (";
var G__285681 = (function (){var G__285981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285982 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285981,G__285982) : tailrecursion.hoplon.span.call(null,G__285981,G__285982));
})();
var G__285682 = " ";
var G__285683 = (function (){var G__285983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285984 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285983,G__285984) : tailrecursion.hoplon.span.call(null,G__285983,G__285984));
})();
var G__285684 = " ";
var G__285685 = (function (){var G__285985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285986 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285985,G__285986) : tailrecursion.hoplon.span.call(null,G__285985,G__285986));
})();
var G__285686 = "))\n(";
var G__285687 = (function (){var G__285987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285988 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285987,G__285988) : tailrecursion.hoplon.span.call(null,G__285987,G__285988));
})();
var G__285688 = " ";
var G__285689 = (function (){var G__285989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285990 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285989,G__285990) : tailrecursion.hoplon.span.call(null,G__285989,G__285990));
})();
var G__285690 = " (";
var G__285691 = (function (){var G__285991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285992 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285991,G__285992) : tailrecursion.hoplon.span.call(null,G__285991,G__285992));
})();
var G__285692 = " ";
var G__285693 = (function (){var G__285993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285994 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285993,G__285994) : tailrecursion.hoplon.span.call(null,G__285993,G__285994));
})();
var G__285694 = " (";
var G__285695 = (function (){var G__285995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285996 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285995,G__285996) : tailrecursion.hoplon.span.call(null,G__285995,G__285996));
})();
var G__285696 = " ";
var G__285697 = (function (){var G__285997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285998 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285997,G__285998) : tailrecursion.hoplon.span.call(null,G__285997,G__285998));
})();
var G__285698 = " ";
var G__285699 = (function (){var G__285999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286000 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285999,G__286000) : tailrecursion.hoplon.span.call(null,G__285999,G__286000));
})();
var G__285700 = ")))\n(";
var G__285701 = (function (){var G__286001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286002 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286001,G__286002) : tailrecursion.hoplon.span.call(null,G__286001,G__286002));
})();
var G__285702 = " ";
var G__285703 = (function (){var G__286003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286004 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286003,G__286004) : tailrecursion.hoplon.span.call(null,G__286003,G__286004));
})();
var G__285704 = " (";
var G__285705 = (function (){var G__286005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286006 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286005,G__286006) : tailrecursion.hoplon.span.call(null,G__286005,G__286006));
})();
var G__285706 = " ";
var G__285707 = (function (){var G__286007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286008 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286007,G__286008) : tailrecursion.hoplon.span.call(null,G__286007,G__286008));
})();
var G__285708 = " ";
var G__285709 = (function (){var G__286009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286010 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286009,G__286010) : tailrecursion.hoplon.span.call(null,G__286009,G__286010));
})();
var G__285710 = "))\n(";
var G__285711 = (function (){var G__286011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286012 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286011,G__286012) : tailrecursion.hoplon.span.call(null,G__286011,G__286012));
})();
var G__285712 = " ";
var G__285713 = (function (){var G__286013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286014 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286013,G__286014) : tailrecursion.hoplon.span.call(null,G__286013,G__286014));
})();
var G__285714 = " (";
var G__285715 = (function (){var G__286015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286016 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286015,G__286016) : tailrecursion.hoplon.span.call(null,G__286015,G__286016));
})();
var G__285716 = " ";
var G__285717 = (function (){var G__286017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286018 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286017,G__286018) : tailrecursion.hoplon.span.call(null,G__286017,G__286018));
})();
var G__285718 = " (";
var G__285719 = (function (){var G__286019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286020 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286019,G__286020) : tailrecursion.hoplon.span.call(null,G__286019,G__286020));
})();
var G__285720 = " ";
var G__285721 = (function (){var G__286021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286022 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286021,G__286022) : tailrecursion.hoplon.span.call(null,G__286021,G__286022));
})();
var G__285722 = " ";
var G__285723 = (function (){var G__286023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286024 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286023,G__286024) : tailrecursion.hoplon.span.call(null,G__286023,G__286024));
})();
var G__285724 = ")))\n(";
var G__285725 = (function (){var G__286025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286026 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286025,G__286026) : tailrecursion.hoplon.span.call(null,G__286025,G__286026));
})();
var G__285726 = " ";
var G__285727 = (function (){var G__286027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286028 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286027,G__286028) : tailrecursion.hoplon.span.call(null,G__286027,G__286028));
})();
var G__285728 = " (";
var G__285729 = (function (){var G__286029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286030 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286029,G__286030) : tailrecursion.hoplon.span.call(null,G__286029,G__286030));
})();
var G__285730 = " ";
var G__285731 = (function (){var G__286031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286032 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286031,G__286032) : tailrecursion.hoplon.span.call(null,G__286031,G__286032));
})();
var G__285732 = " ";
var G__285733 = (function (){var G__286033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286034 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286033,G__286034) : tailrecursion.hoplon.span.call(null,G__286033,G__286034));
})();
var G__285734 = "))\n(";
var G__285735 = (function (){var G__286035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286036 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286035,G__286036) : tailrecursion.hoplon.span.call(null,G__286035,G__286036));
})();
var G__285736 = " ";
var G__285737 = (function (){var G__286037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286038 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286037,G__286038) : tailrecursion.hoplon.span.call(null,G__286037,G__286038));
})();
var G__285738 = " ";
var G__285739 = (function (){var G__286039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286040 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286039,G__286040) : tailrecursion.hoplon.span.call(null,G__286039,G__286040));
})();
var G__285740 = ")\n(";
var G__285741 = (function (){var G__286041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286042 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286041,G__286042) : tailrecursion.hoplon.span.call(null,G__286041,G__286042));
})();
var G__285742 = " ";
var G__285743 = (function (){var G__286043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286044 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286043,G__286044) : tailrecursion.hoplon.span.call(null,G__286043,G__286044));
})();
var G__285744 = " (";
var G__285745 = (function (){var G__286045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286046 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286045,G__286046) : tailrecursion.hoplon.span.call(null,G__286045,G__286046));
})();
var G__285746 = " ";
var G__285747 = (function (){var G__286047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286048 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286047,G__286048) : tailrecursion.hoplon.span.call(null,G__286047,G__286048));
})();
var G__285748 = " ";
var G__285749 = (function (){var G__286049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286050 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286049,G__286050) : tailrecursion.hoplon.span.call(null,G__286049,G__286050));
})();
var G__285750 = "))\n(";
var G__285751 = (function (){var G__286051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286052 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286051,G__286052) : tailrecursion.hoplon.span.call(null,G__286051,G__286052));
})();
var G__285752 = " ";
var G__285753 = (function (){var G__286053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286054 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286053,G__286054) : tailrecursion.hoplon.span.call(null,G__286053,G__286054));
})();
var G__285754 = " (";
var G__285755 = (function (){var G__286055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286056 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286055,G__286056) : tailrecursion.hoplon.span.call(null,G__286055,G__286056));
})();
var G__285756 = " ";
var G__285757 = (function (){var G__286057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286058 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286057,G__286058) : tailrecursion.hoplon.span.call(null,G__286057,G__286058));
})();
var G__285758 = " (";
var G__285759 = (function (){var G__286059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286060 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286059,G__286060) : tailrecursion.hoplon.span.call(null,G__286059,G__286060));
})();
var G__285760 = " ";
var G__285761 = (function (){var G__286061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286062 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286061,G__286062) : tailrecursion.hoplon.span.call(null,G__286061,G__286062));
})();
var G__285762 = " ";
var G__285763 = (function (){var G__286063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286064 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286063,G__286064) : tailrecursion.hoplon.span.call(null,G__286063,G__286064));
})();
var G__285764 = ")))\n(";
var G__285765 = (function (){var G__286065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286066 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286065,G__286066) : tailrecursion.hoplon.span.call(null,G__286065,G__286066));
})();
var G__285766 = " ";
var G__285767 = (function (){var G__286067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286068 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286067,G__286068) : tailrecursion.hoplon.span.call(null,G__286067,G__286068));
})();
var G__285768 = " (";
var G__285769 = (function (){var G__286069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286070 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286069,G__286070) : tailrecursion.hoplon.span.call(null,G__286069,G__286070));
})();
var G__285770 = " ";
var G__285771 = (function (){var G__286071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286072 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286071,G__286072) : tailrecursion.hoplon.span.call(null,G__286071,G__286072));
})();
var G__285772 = " (";
var G__285773 = (function (){var G__286073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286074 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286073,G__286074) : tailrecursion.hoplon.span.call(null,G__286073,G__286074));
})();
var G__285774 = " ";
var G__285775 = (function (){var G__286075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286076 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286075,G__286076) : tailrecursion.hoplon.span.call(null,G__286075,G__286076));
})();
var G__285776 = " (";
var G__285777 = (function (){var G__286077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286078 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286077,G__286078) : tailrecursion.hoplon.span.call(null,G__286077,G__286078));
})();
var G__285778 = " ";
var G__285779 = (function (){var G__286079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286080 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286079,G__286080) : tailrecursion.hoplon.span.call(null,G__286079,G__286080));
})();
var G__285780 = " ";
var G__285781 = (function (){var G__286081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286082 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286081,G__286082) : tailrecursion.hoplon.span.call(null,G__286081,G__286082));
})();
var G__285782 = "))))\n(";
var G__285783 = (function (){var G__286083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286084 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286083,G__286084) : tailrecursion.hoplon.span.call(null,G__286083,G__286084));
})();
var G__285784 = " ";
var G__285785 = (function (){var G__286085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286086 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286085,G__286086) : tailrecursion.hoplon.span.call(null,G__286085,G__286086));
})();
var G__285786 = " (";
var G__285787 = (function (){var G__286087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286088 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286087,G__286088) : tailrecursion.hoplon.span.call(null,G__286087,G__286088));
})();
var G__285788 = " ";
var G__285789 = (function (){var G__286089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286090 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286089,G__286090) : tailrecursion.hoplon.span.call(null,G__286089,G__286090));
})();
var G__285790 = " (";
var G__285791 = (function (){var G__286091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286092 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286091,G__286092) : tailrecursion.hoplon.span.call(null,G__286091,G__286092));
})();
var G__285792 = " ";
var G__285793 = (function (){var G__286093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286094 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286093,G__286094) : tailrecursion.hoplon.span.call(null,G__286093,G__286094));
})();
var G__285794 = " ";
var G__285795 = (function (){var G__286095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286096 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286095,G__286096) : tailrecursion.hoplon.span.call(null,G__286095,G__286096));
})();
var G__285796 = ")))\n(";
var G__285797 = (function (){var G__286097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286098 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286097,G__286098) : tailrecursion.hoplon.span.call(null,G__286097,G__286098));
})();
var G__285798 = " ";
var G__285799 = (function (){var G__286099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286100 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286099,G__286100) : tailrecursion.hoplon.span.call(null,G__286099,G__286100));
})();
var G__285800 = " (";
var G__285801 = (function (){var G__286101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286102 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286101,G__286102) : tailrecursion.hoplon.span.call(null,G__286101,G__286102));
})();
var G__285802 = " ";
var G__285803 = (function (){var G__286103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286104 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286103,G__286104) : tailrecursion.hoplon.span.call(null,G__286103,G__286104));
})();
var G__285804 = " (";
var G__285805 = (function (){var G__286105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286106 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286105,G__286106) : tailrecursion.hoplon.span.call(null,G__286105,G__286106));
})();
var G__285806 = " ";
var G__285807 = (function (){var G__286107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286108 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286107,G__286108) : tailrecursion.hoplon.span.call(null,G__286107,G__286108));
})();
var G__285808 = " (";
var G__285809 = (function (){var G__286109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286110 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286109,G__286110) : tailrecursion.hoplon.span.call(null,G__286109,G__286110));
})();
var G__285810 = " ";
var G__285811 = (function (){var G__286111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286112 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286111,G__286112) : tailrecursion.hoplon.span.call(null,G__286111,G__286112));
})();
var G__285812 = " ";
var G__285813 = (function (){var G__286113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286114 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286113,G__286114) : tailrecursion.hoplon.span.call(null,G__286113,G__286114));
})();
var G__285814 = "))))\n(";
var G__285815 = (function (){var G__286115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286116 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286115,G__286116) : tailrecursion.hoplon.span.call(null,G__286115,G__286116));
})();
var G__285816 = " ";
var G__285817 = (function (){var G__286117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286118 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286117,G__286118) : tailrecursion.hoplon.span.call(null,G__286117,G__286118));
})();
var G__285818 = " (";
var G__285819 = (function (){var G__286119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286120 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286119,G__286120) : tailrecursion.hoplon.span.call(null,G__286119,G__286120));
})();
var G__285820 = " ";
var G__285821 = (function (){var G__286121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286122 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286121,G__286122) : tailrecursion.hoplon.span.call(null,G__286121,G__286122));
})();
var G__285822 = " (";
var G__285823 = (function (){var G__286123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286124 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286123,G__286124) : tailrecursion.hoplon.span.call(null,G__286123,G__286124));
})();
var G__285824 = " ";
var G__285825 = (function (){var G__286125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286126 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286125,G__286126) : tailrecursion.hoplon.span.call(null,G__286125,G__286126));
})();
var G__285826 = " ";
var G__285827 = (function (){var G__286127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286128 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286127,G__286128) : tailrecursion.hoplon.span.call(null,G__286127,G__286128));
})();
var G__285828 = ")))\n(";
var G__285829 = (function (){var G__286129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286130 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286129,G__286130) : tailrecursion.hoplon.span.call(null,G__286129,G__286130));
})();
var G__285830 = " ";
var G__285831 = (function (){var G__286131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286132 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286131,G__286132) : tailrecursion.hoplon.span.call(null,G__286131,G__286132));
})();
var G__285832 = " (";
var G__285833 = (function (){var G__286133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286134 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286133,G__286134) : tailrecursion.hoplon.span.call(null,G__286133,G__286134));
})();
var G__285834 = " ";
var G__285835 = (function (){var G__286135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286136 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286135,G__286136) : tailrecursion.hoplon.span.call(null,G__286135,G__286136));
})();
var G__285836 = " ";
var G__285837 = (function (){var G__286137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286138 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286137,G__286138) : tailrecursion.hoplon.span.call(null,G__286137,G__286138));
})();
var G__285838 = "))\n(";
var G__285839 = (function (){var G__286139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286140 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286139,G__286140) : tailrecursion.hoplon.span.call(null,G__286139,G__286140));
})();
var G__285840 = " ";
var G__285841 = (function (){var G__286141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286142 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286141,G__286142) : tailrecursion.hoplon.span.call(null,G__286141,G__286142));
})();
var G__285842 = " (";
var G__285843 = (function (){var G__286143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286144 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286143,G__286144) : tailrecursion.hoplon.span.call(null,G__286143,G__286144));
})();
var G__285844 = " ";
var G__285845 = (function (){var G__286145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286146 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286145,G__286146) : tailrecursion.hoplon.span.call(null,G__286145,G__286146));
})();
var G__285846 = " (";
var G__285847 = (function (){var G__286147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286148 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286147,G__286148) : tailrecursion.hoplon.span.call(null,G__286147,G__286148));
})();
var G__285848 = " ";
var G__285849 = (function (){var G__286149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286150 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286149,G__286150) : tailrecursion.hoplon.span.call(null,G__286149,G__286150));
})();
var G__285850 = " ";
var G__285851 = (function (){var G__286151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286152 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286151,G__286152) : tailrecursion.hoplon.span.call(null,G__286151,G__286152));
})();
var G__285852 = ")))\n(";
var G__285853 = (function (){var G__286153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286154 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286153,G__286154) : tailrecursion.hoplon.span.call(null,G__286153,G__286154));
})();
var G__285854 = " ";
var G__285855 = (function (){var G__286155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286156 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286155,G__286156) : tailrecursion.hoplon.span.call(null,G__286155,G__286156));
})();
var G__285856 = " (";
var G__285857 = (function (){var G__286157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286158 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286157,G__286158) : tailrecursion.hoplon.span.call(null,G__286157,G__286158));
})();
var G__285858 = " ";
var G__285859 = (function (){var G__286159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286160 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286159,G__286160) : tailrecursion.hoplon.span.call(null,G__286159,G__286160));
})();
var G__285860 = " (";
var G__285861 = (function (){var G__286161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286162 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286161,G__286162) : tailrecursion.hoplon.span.call(null,G__286161,G__286162));
})();
var G__285862 = " ";
var G__285863 = (function (){var G__286163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286164 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286163,G__286164) : tailrecursion.hoplon.span.call(null,G__286163,G__286164));
})();
var G__285864 = " (";
var G__285865 = (function (){var G__286165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286166 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286165,G__286166) : tailrecursion.hoplon.span.call(null,G__286165,G__286166));
})();
var G__285866 = " ";
var G__285867 = (function (){var G__286167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286168 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286167,G__286168) : tailrecursion.hoplon.span.call(null,G__286167,G__286168));
})();
var G__285868 = " ";
var G__285869 = (function (){var G__286169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286170 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286169,G__286170) : tailrecursion.hoplon.span.call(null,G__286169,G__286170));
})();
var G__285870 = "))))\n(";
var G__285871 = (function (){var G__286171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286172 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286171,G__286172) : tailrecursion.hoplon.span.call(null,G__286171,G__286172));
})();
var G__285872 = " ";
var G__285873 = (function (){var G__286173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286174 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286173,G__286174) : tailrecursion.hoplon.span.call(null,G__286173,G__286174));
})();
var G__285874 = " (";
var G__285875 = (function (){var G__286175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286176 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286175,G__286176) : tailrecursion.hoplon.span.call(null,G__286175,G__286176));
})();
var G__285876 = " ";
var G__285877 = (function (){var G__286177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286178 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286177,G__286178) : tailrecursion.hoplon.span.call(null,G__286177,G__286178));
})();
var G__285878 = " (";
var G__285879 = (function (){var G__286179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286180 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286179,G__286180) : tailrecursion.hoplon.span.call(null,G__286179,G__286180));
})();
var G__285880 = " ";
var G__285881 = (function (){var G__286181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286182 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286181,G__286182) : tailrecursion.hoplon.span.call(null,G__286181,G__286182));
})();
var G__285882 = " (";
var G__285883 = (function (){var G__286183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286184 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286183,G__286184) : tailrecursion.hoplon.span.call(null,G__286183,G__286184));
})();
var G__285884 = " ";
var G__285885 = (function (){var G__286185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286186 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286185,G__286186) : tailrecursion.hoplon.span.call(null,G__286185,G__286186));
})();
var G__285886 = " (";
var G__285887 = (function (){var G__286187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286188 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286187,G__286188) : tailrecursion.hoplon.span.call(null,G__286187,G__286188));
})();
var G__285888 = " ";
var G__285889 = (function (){var G__286189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286190 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286189,G__286190) : tailrecursion.hoplon.span.call(null,G__286189,G__286190));
})();
var G__285890 = " ";
var G__285891 = (function (){var G__286191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286192 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286191,G__286192) : tailrecursion.hoplon.span.call(null,G__286191,G__286192));
})();
var G__285892 = ")))))\n(";
var G__285893 = (function (){var G__286193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286194 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286193,G__286194) : tailrecursion.hoplon.span.call(null,G__286193,G__286194));
})();
var G__285894 = " ";
var G__285895 = (function (){var G__286195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286196 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286195,G__286196) : tailrecursion.hoplon.span.call(null,G__286195,G__286196));
})();
var G__285896 = " (";
var G__285897 = (function (){var G__286197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286198 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286197,G__286198) : tailrecursion.hoplon.span.call(null,G__286197,G__286198));
})();
var G__285898 = " ";
var G__285899 = (function (){var G__286199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286200 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286199,G__286200) : tailrecursion.hoplon.span.call(null,G__286199,G__286200));
})();
var G__285900 = " (";
var G__285901 = (function (){var G__286201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286202 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286201,G__286202) : tailrecursion.hoplon.span.call(null,G__286201,G__286202));
})();
var G__285902 = " ";
var G__285903 = (function (){var G__286203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286204 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286203,G__286204) : tailrecursion.hoplon.span.call(null,G__286203,G__286204));
})();
var G__285904 = " (";
var G__285905 = (function (){var G__286205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286206 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286205,G__286206) : tailrecursion.hoplon.span.call(null,G__286205,G__286206));
})();
var G__285906 = " ";
var G__285907 = (function (){var G__286207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286208 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286207,G__286208) : tailrecursion.hoplon.span.call(null,G__286207,G__286208));
})();
var G__285908 = " ";
var G__285909 = (function (){var G__286209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286210 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286209,G__286210) : tailrecursion.hoplon.span.call(null,G__286209,G__286210));
})();
var G__285910 = "))))\n(";
var G__285911 = (function (){var G__286211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286212 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286211,G__286212) : tailrecursion.hoplon.span.call(null,G__286211,G__286212));
})();
var G__285912 = " ";
var G__285913 = (function (){var G__286213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286214 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286213,G__286214) : tailrecursion.hoplon.span.call(null,G__286213,G__286214));
})();
var G__285914 = " (";
var G__285915 = (function (){var G__286215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286216 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286215,G__286216) : tailrecursion.hoplon.span.call(null,G__286215,G__286216));
})();
var G__285916 = " ";
var G__285917 = (function (){var G__286217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286218 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286217,G__286218) : tailrecursion.hoplon.span.call(null,G__286217,G__286218));
})();
var G__285918 = " (";
var G__285919 = (function (){var G__286219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286220 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286219,G__286220) : tailrecursion.hoplon.span.call(null,G__286219,G__286220));
})();
var G__285920 = " ";
var G__285921 = (function (){var G__286221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286222 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286221,G__286222) : tailrecursion.hoplon.span.call(null,G__286221,G__286222));
})();
var G__285922 = " ";
var G__285923 = (function (){var G__286223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286224 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286223,G__286224) : tailrecursion.hoplon.span.call(null,G__286223,G__286224));
})();
var G__285924 = ")))\n(";
var G__285925 = (function (){var G__286225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286226 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286225,G__286226) : tailrecursion.hoplon.span.call(null,G__286225,G__286226));
})();
var G__285926 = " ";
var G__285927 = (function (){var G__286227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286228 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286227,G__286228) : tailrecursion.hoplon.span.call(null,G__286227,G__286228));
})();
var G__285928 = " (";
var G__285929 = (function (){var G__286229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286230 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286229,G__286230) : tailrecursion.hoplon.span.call(null,G__286229,G__286230));
})();
var G__285930 = " ";
var G__285931 = (function (){var G__286231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286232 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286231,G__286232) : tailrecursion.hoplon.span.call(null,G__286231,G__286232));
})();
var G__285932 = " ";
var G__285933 = (function (){var G__286233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286234 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286233,G__286234) : tailrecursion.hoplon.span.call(null,G__286233,G__286234));
})();
var G__285934 = "))\n(";
var G__285935 = (function (){var G__286235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286236 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286235,G__286236) : tailrecursion.hoplon.span.call(null,G__286235,G__286236));
})();
var G__285936 = " ";
var G__285937 = (function (){var G__286237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286238 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286237,G__286238) : tailrecursion.hoplon.span.call(null,G__286237,G__286238));
})();
var G__285938 = " ";
var G__285939 = (function (){var G__286239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286240 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286239,G__286240) : tailrecursion.hoplon.span.call(null,G__286239,G__286240));
})();
var G__285940 = ")\n";
var G__285941 = (function (){var G__286241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286242 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286241,G__286242) : tailrecursion.hoplon.span.call(null,G__286241,G__286242));
})();
var G__285942 = "\n";
var G__285943 = (function (){var G__286243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286244 = "65";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286243,G__286244) : tailrecursion.hoplon.span.call(null,G__286243,G__286244));
})();
var G__285944 = ",";
var G__285945 = (function (){var G__286245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286246 = "536";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286245,G__286246) : tailrecursion.hoplon.span.call(null,G__286245,G__286246));
})();
var G__285946 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$302 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$302(G__285645,G__285646,G__285647,G__285648,G__285649,G__285650,G__285651,G__285652,G__285653,G__285654,G__285655,G__285656,G__285657,G__285658,G__285659,G__285660,G__285661,G__285662,G__285663,G__285664,G__285665,G__285666,G__285667,G__285668,G__285669,G__285670,G__285671,G__285672,G__285673,G__285674,G__285675,G__285676,G__285677,G__285678,G__285679,G__285680,G__285681,G__285682,G__285683,G__285684,G__285685,G__285686,G__285687,G__285688,G__285689,G__285690,G__285691,G__285692,G__285693,G__285694,G__285695,G__285696,G__285697,G__285698,G__285699,G__285700,G__285701,G__285702,G__285703,G__285704,G__285705,G__285706,G__285707,G__285708,G__285709,G__285710,G__285711,G__285712,G__285713,G__285714,G__285715,G__285716,G__285717,G__285718,G__285719,G__285720,G__285721,G__285722,G__285723,G__285724,G__285725,G__285726,G__285727,G__285728,G__285729,G__285730,G__285731,G__285732,G__285733,G__285734,G__285735,G__285736,G__285737,G__285738,G__285739,G__285740,G__285741,G__285742,G__285743,G__285744,G__285745,G__285746,G__285747,G__285748,G__285749,G__285750,G__285751,G__285752,G__285753,G__285754,G__285755,G__285756,G__285757,G__285758,G__285759,G__285760,G__285761,G__285762,G__285763,G__285764,G__285765,G__285766,G__285767,G__285768,G__285769,G__285770,G__285771,G__285772,G__285773,G__285774,G__285775,G__285776,G__285777,G__285778,G__285779,G__285780,G__285781,G__285782,G__285783,G__285784,G__285785,G__285786,G__285787,G__285788,G__285789,G__285790,G__285791,G__285792,G__285793,G__285794,G__285795,G__285796,G__285797,G__285798,G__285799,G__285800,G__285801,G__285802,G__285803,G__285804,G__285805,G__285806,G__285807,G__285808,G__285809,G__285810,G__285811,G__285812,G__285813,G__285814,G__285815,G__285816,G__285817,G__285818,G__285819,G__285820,G__285821,G__285822,G__285823,G__285824,G__285825,G__285826,G__285827,G__285828,G__285829,G__285830,G__285831,G__285832,G__285833,G__285834,G__285835,G__285836,G__285837,G__285838,G__285839,G__285840,G__285841,G__285842,G__285843,G__285844,G__285845,G__285846,G__285847,G__285848,G__285849,G__285850,G__285851,G__285852,G__285853,G__285854,G__285855,G__285856,G__285857,G__285858,G__285859,G__285860,G__285861,G__285862,G__285863,G__285864,G__285865,G__285866,G__285867,G__285868,G__285869,G__285870,G__285871,G__285872,G__285873,G__285874,G__285875,G__285876,G__285877,G__285878,G__285879,G__285880,G__285881,G__285882,G__285883,G__285884,G__285885,G__285886,G__285887,G__285888,G__285889,G__285890,G__285891,G__285892,G__285893,G__285894,G__285895,G__285896,G__285897,G__285898,G__285899,G__285900,G__285901,G__285902,G__285903,G__285904,G__285905,G__285906,G__285907,G__285908,G__285909,G__285910,G__285911,G__285912,G__285913,G__285914,G__285915,G__285916,G__285917,G__285918,G__285919,G__285920,G__285921,G__285922,G__285923,G__285924,G__285925,G__285926,G__285927,G__285928,G__285929,G__285930,G__285931,G__285932,G__285933,G__285934,G__285935,G__285936,G__285937,G__285938,G__285939,G__285940,G__285941,G__285942,G__285943,G__285944,G__285945,G__285946) : tailrecursion.hoplon.pre.call(null,G__285645,G__285646,G__285647,G__285648,G__285649,G__285650,G__285651,G__285652,G__285653,G__285654,G__285655,G__285656,G__285657,G__285658,G__285659,G__285660,G__285661,G__285662,G__285663,G__285664,G__285665,G__285666,G__285667,G__285668,G__285669,G__285670,G__285671,G__285672,G__285673,G__285674,G__285675,G__285676,G__285677,G__285678,G__285679,G__285680,G__285681,G__285682,G__285683,G__285684,G__285685,G__285686,G__285687,G__285688,G__285689,G__285690,G__285691,G__285692,G__285693,G__285694,G__285695,G__285696,G__285697,G__285698,G__285699,G__285700,G__285701,G__285702,G__285703,G__285704,G__285705,G__285706,G__285707,G__285708,G__285709,G__285710,G__285711,G__285712,G__285713,G__285714,G__285715,G__285716,G__285717,G__285718,G__285719,G__285720,G__285721,G__285722,G__285723,G__285724,G__285725,G__285726,G__285727,G__285728,G__285729,G__285730,G__285731,G__285732,G__285733,G__285734,G__285735,G__285736,G__285737,G__285738,G__285739,G__285740,G__285741,G__285742,G__285743,G__285744,G__285745,G__285746,G__285747,G__285748,G__285749,G__285750,G__285751,G__285752,G__285753,G__285754,G__285755,G__285756,G__285757,G__285758,G__285759,G__285760,G__285761,G__285762,G__285763,G__285764,G__285765,G__285766,G__285767,G__285768,G__285769,G__285770,G__285771,G__285772,G__285773,G__285774,G__285775,G__285776,G__285777,G__285778,G__285779,G__285780,G__285781,G__285782,G__285783,G__285784,G__285785,G__285786,G__285787,G__285788,G__285789,G__285790,G__285791,G__285792,G__285793,G__285794,G__285795,G__285796,G__285797,G__285798,G__285799,G__285800,G__285801,G__285802,G__285803,G__285804,G__285805,G__285806,G__285807,G__285808,G__285809,G__285810,G__285811,G__285812,G__285813,G__285814,G__285815,G__285816,G__285817,G__285818,G__285819,G__285820,G__285821,G__285822,G__285823,G__285824,G__285825,G__285826,G__285827,G__285828,G__285829,G__285830,G__285831,G__285832,G__285833,G__285834,G__285835,G__285836,G__285837,G__285838,G__285839,G__285840,G__285841,G__285842,G__285843,G__285844,G__285845,G__285846,G__285847,G__285848,G__285849,G__285850,G__285851,G__285852,G__285853,G__285854,G__285855,G__285856,G__285857,G__285858,G__285859,G__285860,G__285861,G__285862,G__285863,G__285864,G__285865,G__285866,G__285867,G__285868,G__285869,G__285870,G__285871,G__285872,G__285873,G__285874,G__285875,G__285876,G__285877,G__285878,G__285879,G__285880,G__285881,G__285882,G__285883,G__285884,G__285885,G__285886,G__285887,G__285888,G__285889,G__285890,G__285891,G__285892,G__285893,G__285894,G__285895,G__285896,G__285897,G__285898,G__285899,G__285900,G__285901,G__285902,G__285903,G__285904,G__285905,G__285906,G__285907,G__285908,G__285909,G__285910,G__285911,G__285912,G__285913,G__285914,G__285915,G__285916,G__285917,G__285918,G__285919,G__285920,G__285921,G__285922,G__285923,G__285924,G__285925,G__285926,G__285927,G__285928,G__285929,G__285930,G__285931,G__285932,G__285933,G__285934,G__285935,G__285936,G__285937,G__285938,G__285939,G__285940,G__285941,G__285942,G__285943,G__285944,G__285945,G__285946));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__285643,G__285644) : tailrecursion.hoplon.div.call(null,G__285643,G__285644));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__285642) : tailrecursion.hoplon.div.call(null,G__285642));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_285037;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_285036;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_285035;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_285034;
}})()], 0)),(function (){var _STAR_references_STAR_286247 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_286248 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_286249 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_286250 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286251 = cljs.core.PersistentArrayMap.EMPTY;
var G__286252 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the following procedures, where ",(function (){var G__286253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"A"], null);
var G__286254 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286253,G__286254) : tailrecursion.hoplon.markdown.code_node.call(null,G__286253,G__286254));
})()," is the procedure defined above:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286251,G__286252) : tailrecursion.hoplon.markdown.para_node.call(null,G__286251,G__286252));
})(),(function (){var G__286282 = (function (){var G__286283 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__286284 = (function (){var G__286285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__286286 = "(";
var G__286287 = (function (){var G__286298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__286299 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286298,G__286299) : tailrecursion.hoplon.span.call(null,G__286298,G__286299));
})();
var G__286288 = (function (){var G__286300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286301 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286300,G__286301) : tailrecursion.hoplon.span.call(null,G__286300,G__286301));
})();
var G__286289 = " [";
var G__286290 = (function (){var G__286302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286303 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286302,G__286303) : tailrecursion.hoplon.span.call(null,G__286302,G__286303));
})();
var G__286291 = "] (";
var G__286292 = (function (){var G__286304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286305 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286304,G__286305) : tailrecursion.hoplon.span.call(null,G__286304,G__286305));
})();
var G__286293 = " ";
var G__286294 = (function (){var G__286306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286307 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286306,G__286307) : tailrecursion.hoplon.span.call(null,G__286306,G__286307));
})();
var G__286295 = " ";
var G__286296 = (function (){var G__286308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286309 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286308,G__286309) : tailrecursion.hoplon.span.call(null,G__286308,G__286309));
})();
var G__286297 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__286285,G__286286,G__286287,G__286288,G__286289,G__286290,G__286291,G__286292,G__286293,G__286294,G__286295,G__286296,G__286297) : tailrecursion.hoplon.pre.call(null,G__286285,G__286286,G__286287,G__286288,G__286289,G__286290,G__286291,G__286292,G__286293,G__286294,G__286295,G__286296,G__286297));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__286283,G__286284) : tailrecursion.hoplon.div.call(null,G__286283,G__286284));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__286282) : tailrecursion.hoplon.div.call(null,G__286282));
})(),(function (){var G__286337 = (function (){var G__286338 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__286339 = (function (){var G__286340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__286341 = "(";
var G__286342 = (function (){var G__286353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__286354 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286353,G__286354) : tailrecursion.hoplon.span.call(null,G__286353,G__286354));
})();
var G__286343 = (function (){var G__286355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286356 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286355,G__286356) : tailrecursion.hoplon.span.call(null,G__286355,G__286356));
})();
var G__286344 = " [";
var G__286345 = (function (){var G__286357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286358 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286357,G__286358) : tailrecursion.hoplon.span.call(null,G__286357,G__286358));
})();
var G__286346 = "] (";
var G__286347 = (function (){var G__286359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286360 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286359,G__286360) : tailrecursion.hoplon.span.call(null,G__286359,G__286360));
})();
var G__286348 = " ";
var G__286349 = (function (){var G__286361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286362 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286361,G__286362) : tailrecursion.hoplon.span.call(null,G__286361,G__286362));
})();
var G__286350 = " ";
var G__286351 = (function (){var G__286363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286364 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286363,G__286364) : tailrecursion.hoplon.span.call(null,G__286363,G__286364));
})();
var G__286352 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__286340,G__286341,G__286342,G__286343,G__286344,G__286345,G__286346,G__286347,G__286348,G__286349,G__286350,G__286351,G__286352) : tailrecursion.hoplon.pre.call(null,G__286340,G__286341,G__286342,G__286343,G__286344,G__286345,G__286346,G__286347,G__286348,G__286349,G__286350,G__286351,G__286352));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__286338,G__286339) : tailrecursion.hoplon.div.call(null,G__286338,G__286339));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__286337) : tailrecursion.hoplon.div.call(null,G__286337));
})(),(function (){var G__286392 = (function (){var G__286393 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__286394 = (function (){var G__286395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__286396 = "(";
var G__286397 = (function (){var G__286408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__286409 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286408,G__286409) : tailrecursion.hoplon.span.call(null,G__286408,G__286409));
})();
var G__286398 = (function (){var G__286410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286411 = "h";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286410,G__286411) : tailrecursion.hoplon.span.call(null,G__286410,G__286411));
})();
var G__286399 = " [";
var G__286400 = (function (){var G__286412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286413 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286412,G__286413) : tailrecursion.hoplon.span.call(null,G__286412,G__286413));
})();
var G__286401 = "] (";
var G__286402 = (function (){var G__286414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286415 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286414,G__286415) : tailrecursion.hoplon.span.call(null,G__286414,G__286415));
})();
var G__286403 = " ";
var G__286404 = (function (){var G__286416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286417 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286416,G__286417) : tailrecursion.hoplon.span.call(null,G__286416,G__286417));
})();
var G__286405 = " ";
var G__286406 = (function (){var G__286418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286419 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286418,G__286419) : tailrecursion.hoplon.span.call(null,G__286418,G__286419));
})();
var G__286407 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__286395,G__286396,G__286397,G__286398,G__286399,G__286400,G__286401,G__286402,G__286403,G__286404,G__286405,G__286406,G__286407) : tailrecursion.hoplon.pre.call(null,G__286395,G__286396,G__286397,G__286398,G__286399,G__286400,G__286401,G__286402,G__286403,G__286404,G__286405,G__286406,G__286407));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__286393,G__286394) : tailrecursion.hoplon.div.call(null,G__286393,G__286394));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__286392) : tailrecursion.hoplon.div.call(null,G__286392));
})(),(function (){var G__286450 = (function (){var G__286451 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__286452 = (function (){var G__286453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__286454 = "(";
var G__286455 = (function (){var G__286467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__286468 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286467,G__286468) : tailrecursion.hoplon.span.call(null,G__286467,G__286468));
})();
var G__286456 = (function (){var G__286469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286470 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286469,G__286470) : tailrecursion.hoplon.span.call(null,G__286469,G__286470));
})();
var G__286457 = " [";
var G__286458 = (function (){var G__286471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286472 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286471,G__286472) : tailrecursion.hoplon.span.call(null,G__286471,G__286472));
})();
var G__286459 = "] (";
var G__286460 = (function (){var G__286473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__286474 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286473,G__286474) : tailrecursion.hoplon.span.call(null,G__286473,G__286474));
})();
var G__286461 = (function (){var G__286475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286476 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286475,G__286476) : tailrecursion.hoplon.span.call(null,G__286475,G__286476));
})();
var G__286462 = " ";
var G__286463 = (function (){var G__286477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286478 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286477,G__286478) : tailrecursion.hoplon.span.call(null,G__286477,G__286478));
})();
var G__286464 = " ";
var G__286465 = (function (){var G__286479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286480 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286479,G__286480) : tailrecursion.hoplon.span.call(null,G__286479,G__286480));
})();
var G__286466 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__286453,G__286454,G__286455,G__286456,G__286457,G__286458,G__286459,G__286460,G__286461,G__286462,G__286463,G__286464,G__286465,G__286466) : tailrecursion.hoplon.pre.call(null,G__286453,G__286454,G__286455,G__286456,G__286457,G__286458,G__286459,G__286460,G__286461,G__286462,G__286463,G__286464,G__286465,G__286466));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__286451,G__286452) : tailrecursion.hoplon.div.call(null,G__286451,G__286452));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__286450) : tailrecursion.hoplon.div.call(null,G__286450));
})(),(function (){var G__286481 = cljs.core.PersistentArrayMap.EMPTY;
var G__286482 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Give concise mathematical definitions for the functions computed by the procedures ",(function (){var G__286483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"f"], null);
var G__286484 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286483,G__286484) : tailrecursion.hoplon.markdown.code_node.call(null,G__286483,G__286484));
})(),",",(function (){var G__286485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"g"], null);
var G__286486 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286485,G__286486) : tailrecursion.hoplon.markdown.code_node.call(null,G__286485,G__286486));
})(),", and ",(function (){var G__286487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"h"], null);
var G__286488 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286487,G__286488) : tailrecursion.hoplon.markdown.code_node.call(null,G__286487,G__286488));
})()," for positive integer values of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". For example, ",(function (){var G__286489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(k n)"], null);
var G__286490 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286489,G__286490) : tailrecursion.hoplon.markdown.code_node.call(null,G__286489,G__286490));
})()," computes \\(5n^2\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286481,G__286482) : tailrecursion.hoplon.markdown.para_node.call(null,G__286481,G__286482));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_286250;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_286249;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_286248;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_286247;
}})(),book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_286491 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_286492 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_286493 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_286494 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286495 = cljs.core.PersistentArrayMap.EMPTY;
var G__286496 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(f n)"], null);
var G__286498 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286497,G__286498) : tailrecursion.hoplon.markdown.code_node.call(null,G__286497,G__286498));
})(),"\\(= 2n\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286495,G__286496) : tailrecursion.hoplon.markdown.para_node.call(null,G__286495,G__286496));
})(),(function (){var G__286499 = cljs.core.PersistentArrayMap.EMPTY;
var G__286500 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(g n)"], null);
var G__286502 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286501,G__286502) : tailrecursion.hoplon.markdown.code_node.call(null,G__286501,G__286502));
})(),"\\(=2^n\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286499,G__286500) : tailrecursion.hoplon.markdown.para_node.call(null,G__286499,G__286500));
})(),(function (){var G__286503 = cljs.core.PersistentArrayMap.EMPTY;
var G__286504 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(h n)"], null);
var G__286506 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286505,G__286506) : tailrecursion.hoplon.markdown.code_node.call(null,G__286505,G__286506));
})(),"\\(=2^{2^{",(function (){var G__286507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__286508 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__286507,G__286508) : tailrecursion.hoplon.markdown.simple_node.call(null,G__286507,G__286508));
})(),"^{2}}}\\), or alternatively, ",(function (){var G__286509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(h n)"], null);
var G__286510 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286509,G__286510) : tailrecursion.hoplon.markdown.code_node.call(null,G__286509,G__286510));
})(),"\\(= 2^{(h (n-1))}\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286503,G__286504) : tailrecursion.hoplon.markdown.para_node.call(null,G__286503,G__286504));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_286494;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_286493;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_286492;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_286491;
}})()], 0))], 0))], 0));
var G__279809 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Tree Recursion"], null),(function (){var _STAR_references_STAR_286511 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_286512 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_286513 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_286514 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286515 = cljs.core.PersistentArrayMap.EMPTY;
var G__286516 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Another common pattern of computation is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tree recursion"], null)], 0)),". As an example, consider computing the sequence of Fibonacci numbers, in which each number is the sum of the preceeding two:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286515,G__286516) : tailrecursion.hoplon.markdown.para_node.call(null,G__286515,G__286516));
})(),(function (){var G__286517 = cljs.core.PersistentArrayMap.EMPTY;
var G__286518 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$0, 1, 1, 2, 3, 5, 8, 13, 21, ",(function (){var G__286519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__286520 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__286519,G__286520) : tailrecursion.hoplon.markdown.simple_node.call(null,G__286519,G__286520));
})(),"$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286517,G__286518) : tailrecursion.hoplon.markdown.para_node.call(null,G__286517,G__286518));
})(),(function (){var G__286521 = cljs.core.PersistentArrayMap.EMPTY;
var G__286522 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In general, the Fibonacci numbers can be defined by the rule"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286521,G__286522) : tailrecursion.hoplon.markdown.para_node.call(null,G__286521,G__286522));
})(),(function (){var G__286523 = cljs.core.PersistentArrayMap.EMPTY;
var G__286524 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$ \\text{fib}(n)=\\begin{cases} 0 &\\text{ if } n=0\\cr 1 &\\text{ if } n=1 \\cr \\text{fib}(n-1)+\\text{ fib}(n-2) &\\text{ otherwise }\\end{cases}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286523,G__286524) : tailrecursion.hoplon.markdown.para_node.call(null,G__286523,G__286524));
})(),(function (){var G__286525 = cljs.core.PersistentArrayMap.EMPTY;
var G__286526 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can immediately translate this definition into a recursive procedure for computing Fibonacci numbers:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286525,G__286526) : tailrecursion.hoplon.markdown.para_node.call(null,G__286525,G__286526));
})(),(function (){var G__286614 = (function (){var G__286615 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__286616 = (function (){var G__286617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__286618 = "(";
var G__286619 = (function (){var G__286658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__286659 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286658,G__286659) : tailrecursion.hoplon.span.call(null,G__286658,G__286659));
})();
var G__286620 = (function (){var G__286660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286661 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286660,G__286661) : tailrecursion.hoplon.span.call(null,G__286660,G__286661));
})();
var G__286621 = " [";
var G__286622 = (function (){var G__286662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286663 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286662,G__286663) : tailrecursion.hoplon.span.call(null,G__286662,G__286663));
})();
var G__286623 = "]\n  (";
var G__286624 = (function (){var G__286664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__286665 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286664,G__286665) : tailrecursion.hoplon.span.call(null,G__286664,G__286665));
})();
var G__286625 = "(";
var G__286626 = (function (){var G__286666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__286667 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286666,G__286667) : tailrecursion.hoplon.span.call(null,G__286666,G__286667));
})();
var G__286627 = (function (){var G__286668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286669 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286668,G__286669) : tailrecursion.hoplon.span.call(null,G__286668,G__286669));
})();
var G__286628 = " ";
var G__286629 = (function (){var G__286670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286671 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286670,G__286671) : tailrecursion.hoplon.span.call(null,G__286670,G__286671));
})();
var G__286630 = ") ";
var G__286631 = (function (){var G__286672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286673 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286672,G__286673) : tailrecursion.hoplon.span.call(null,G__286672,G__286673));
})();
var G__286632 = "\n        (";
var G__286633 = (function (){var G__286674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__286675 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286674,G__286675) : tailrecursion.hoplon.span.call(null,G__286674,G__286675));
})();
var G__286634 = (function (){var G__286676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286677 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286676,G__286677) : tailrecursion.hoplon.span.call(null,G__286676,G__286677));
})();
var G__286635 = " ";
var G__286636 = (function (){var G__286678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286679 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286678,G__286679) : tailrecursion.hoplon.span.call(null,G__286678,G__286679));
})();
var G__286637 = ") ";
var G__286638 = (function (){var G__286680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286681 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286680,G__286681) : tailrecursion.hoplon.span.call(null,G__286680,G__286681));
})();
var G__286639 = "\n        ";
var G__286640 = (function (){var G__286682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286683 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286682,G__286683) : tailrecursion.hoplon.span.call(null,G__286682,G__286683));
})();
var G__286641 = " (";
var G__286642 = (function (){var G__286684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__286685 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286684,G__286685) : tailrecursion.hoplon.span.call(null,G__286684,G__286685));
})();
var G__286643 = "(";
var G__286644 = (function (){var G__286686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286687 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286686,G__286687) : tailrecursion.hoplon.span.call(null,G__286686,G__286687));
})();
var G__286645 = " (";
var G__286646 = (function (){var G__286688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__286689 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286688,G__286689) : tailrecursion.hoplon.span.call(null,G__286688,G__286689));
})();
var G__286647 = (function (){var G__286690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286691 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286690,G__286691) : tailrecursion.hoplon.span.call(null,G__286690,G__286691));
})();
var G__286648 = " ";
var G__286649 = (function (){var G__286692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286693 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286692,G__286693) : tailrecursion.hoplon.span.call(null,G__286692,G__286693));
})();
var G__286650 = "))\n                 (";
var G__286651 = (function (){var G__286694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286695 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286694,G__286695) : tailrecursion.hoplon.span.call(null,G__286694,G__286695));
})();
var G__286652 = " (";
var G__286653 = (function (){var G__286696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__286697 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286696,G__286697) : tailrecursion.hoplon.span.call(null,G__286696,G__286697));
})();
var G__286654 = (function (){var G__286698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286699 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286698,G__286699) : tailrecursion.hoplon.span.call(null,G__286698,G__286699));
})();
var G__286655 = " ";
var G__286656 = (function (){var G__286700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286701 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286700,G__286701) : tailrecursion.hoplon.span.call(null,G__286700,G__286701));
})();
var G__286657 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41(G__286617,G__286618,G__286619,G__286620,G__286621,G__286622,G__286623,G__286624,G__286625,G__286626,G__286627,G__286628,G__286629,G__286630,G__286631,G__286632,G__286633,G__286634,G__286635,G__286636,G__286637,G__286638,G__286639,G__286640,G__286641,G__286642,G__286643,G__286644,G__286645,G__286646,G__286647,G__286648,G__286649,G__286650,G__286651,G__286652,G__286653,G__286654,G__286655,G__286656,G__286657) : tailrecursion.hoplon.pre.call(null,G__286617,G__286618,G__286619,G__286620,G__286621,G__286622,G__286623,G__286624,G__286625,G__286626,G__286627,G__286628,G__286629,G__286630,G__286631,G__286632,G__286633,G__286634,G__286635,G__286636,G__286637,G__286638,G__286639,G__286640,G__286641,G__286642,G__286643,G__286644,G__286645,G__286646,G__286647,G__286648,G__286649,G__286650,G__286651,G__286652,G__286653,G__286654,G__286655,G__286656,G__286657));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__286615,G__286616) : tailrecursion.hoplon.div.call(null,G__286615,G__286616));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__286614) : tailrecursion.hoplon.div.call(null,G__286614));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_286514;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_286513;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_286512;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_286511;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"The tree-recursive process generated in computing (fib 5)"], null)], 0)),"",(function (){var _STAR_references_STAR_286702 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_286703 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_286704 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_286705 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286706 = cljs.core.PersistentArrayMap.EMPTY;
var G__286707 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the pattern of this computation. To compute ",(function (){var G__286708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 5)"], null);
var G__286709 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286708,G__286709) : tailrecursion.hoplon.markdown.code_node.call(null,G__286708,G__286709));
})(),", we compute ",(function (){var G__286710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 4)"], null);
var G__286711 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286710,G__286711) : tailrecursion.hoplon.markdown.code_node.call(null,G__286710,G__286711));
})()," and ",(function (){var G__286712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 3)"], null);
var G__286713 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286712,G__286713) : tailrecursion.hoplon.markdown.code_node.call(null,G__286712,G__286713));
})(),". To compute ",(function (){var G__286714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 4)"], null);
var G__286715 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286714,G__286715) : tailrecursion.hoplon.markdown.code_node.call(null,G__286714,G__286715));
})(),", we compute ",(function (){var G__286716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib\n3)"], null);
var G__286717 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286716,G__286717) : tailrecursion.hoplon.markdown.code_node.call(null,G__286716,G__286717));
})()," and ",(function (){var G__286718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 2)"], null);
var G__286719 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286718,G__286719) : tailrecursion.hoplon.markdown.code_node.call(null,G__286718,G__286719));
})(),". In general, the evolved process looks like a tree, as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/figure/1-5/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.5"], null)], 0)),". Notice that the branches split into two at each level (except at the bottom); this reflects the fact that the ",(function (){var G__286720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fib"], null);
var G__286721 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286720,G__286721) : tailrecursion.hoplon.markdown.code_node.call(null,G__286720,G__286721));
})()," procedure calls itself twice each time it is invoked."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286706,G__286707) : tailrecursion.hoplon.markdown.para_node.call(null,G__286706,G__286707));
})(),(function (){var G__286722 = cljs.core.PersistentArrayMap.EMPTY;
var G__286723 = new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This procedure is instructive as a prototypical tree recursion, but it is a terrible way to compute Fibonacci numbers because it does so much redundant computation. Notice in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/figure/1-5",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.5"], null)], 0))," that the entire computation of ",(function (){var G__286724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 3)"], null);
var G__286725 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286724,G__286725) : tailrecursion.hoplon.markdown.code_node.call(null,G__286724,G__286725));
})()," ",(function (){var G__286726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__286727 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__286726,G__286727) : tailrecursion.hoplon.markdown.simple_node.call(null,G__286726,G__286727));
})()," almost half the work ",(function (){var G__286728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__286729 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__286728,G__286729) : tailrecursion.hoplon.markdown.simple_node.call(null,G__286728,G__286729));
})()," is dubplicated. In fact, it is not hard to show that the number of times the procedure will compute ",(function (){var G__286730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 1)"], null);
var G__286731 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286730,G__286731) : tailrecursion.hoplon.markdown.code_node.call(null,G__286730,G__286731));
})()," or ",(function (){var G__286732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 0)"], null);
var G__286733 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286732,G__286733) : tailrecursion.hoplon.markdown.code_node.call(null,G__286732,G__286733));
})()," (the number of leaves in the above tree, in general) is precisely ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fib(n+1)"], null)], 0)),". To get an idea of how bad this is, one can show that the value of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fiv(n)"], null)], 0))," grows exponentially with ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". More precisely (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/ch/1/ex/13",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.13"], null)], 0)),"), ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fib(n)"], null)], 0))," is the closest integer to \\(\\phi^n/\\sqrt5\\), where"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286722,G__286723) : tailrecursion.hoplon.markdown.para_node.call(null,G__286722,G__286723));
})(),(function (){var G__286734 = cljs.core.PersistentArrayMap.EMPTY;
var G__286735 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\phi=\\left(1+\\sqrt5\\right)/2\\approx1.6180",(function (){var G__286736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__286737 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__286736,G__286737) : tailrecursion.hoplon.markdown.simple_node.call(null,G__286736,G__286737));
})(),"$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286734,G__286735) : tailrecursion.hoplon.markdown.para_node.call(null,G__286734,G__286735));
})(),(function (){var G__286738 = cljs.core.PersistentArrayMap.EMPTY;
var G__286739 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["is the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["golden ratio"], null)], 0)),", which satisfies the equation"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286738,G__286739) : tailrecursion.hoplon.markdown.para_node.call(null,G__286738,G__286739));
})(),(function (){var G__286740 = cljs.core.PersistentArrayMap.EMPTY;
var G__286741 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\phi^2=\\phi+1$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286740,G__286741) : tailrecursion.hoplon.markdown.para_node.call(null,G__286740,G__286741));
})(),(function (){var G__286742 = cljs.core.PersistentArrayMap.EMPTY;
var G__286743 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Thus, the process uses a number of steps that grows exponentially with the input. On the other hand, the space required gows only linearly with the input, because we need keep track only of which nodes are above us in the tree at any point in the computation. In general, the number of steps required by a tree-recursive process will be proportional to the number of nodes in the tree, while the space requrired will be proportional to the maximum depth of the tree."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286742,G__286743) : tailrecursion.hoplon.markdown.para_node.call(null,G__286742,G__286743));
})(),(function (){var G__286744 = cljs.core.PersistentArrayMap.EMPTY;
var G__286745 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can also formulate an iterative process for computing the Fibonacci numbers. The idea is to use a pair of integers ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a"], null)], 0))," and ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b"], null)], 0)),", initialized to \\(Fib(0)=0\\) and \\(Fib(1)=1\\), and to repeatedly apply the simultaneous transformations"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286744,G__286745) : tailrecursion.hoplon.markdown.para_node.call(null,G__286744,G__286745));
})(),(function (){var G__286746 = cljs.core.PersistentArrayMap.EMPTY;
var G__286747 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} a \\rightarrow & b \\cr b \\rightarrow & a + b\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286746,G__286747) : tailrecursion.hoplon.markdown.para_node.call(null,G__286746,G__286747));
})(),(function (){var G__286748 = cljs.core.PersistentArrayMap.EMPTY;
var G__286749 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It is not hard to show that, after applying this transformation \\(n\\) times, \\(a\\) and \\(b\\) will be equal, respectively, to \\(Fib(n)\\) and \\(Fib(n+1)\\). Thus, we can compute Fibonacci numbers iteratively using the procedure"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286748,G__286749) : tailrecursion.hoplon.markdown.para_node.call(null,G__286748,G__286749));
})(),(function (){var G__286841 = (function (){var G__286842 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__286843 = (function (){var G__286844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__286845 = "(";
var G__286846 = (function (){var G__286887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__286888 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286887,G__286888) : tailrecursion.hoplon.span.call(null,G__286887,G__286888));
})();
var G__286847 = (function (){var G__286889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286890 = "fib-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286889,G__286890) : tailrecursion.hoplon.span.call(null,G__286889,G__286890));
})();
var G__286848 = " [";
var G__286849 = (function (){var G__286891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286892 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286891,G__286892) : tailrecursion.hoplon.span.call(null,G__286891,G__286892));
})();
var G__286850 = " ";
var G__286851 = (function (){var G__286893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286894 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286893,G__286894) : tailrecursion.hoplon.span.call(null,G__286893,G__286894));
})();
var G__286852 = " ";
var G__286853 = (function (){var G__286895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286896 = "count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286895,G__286896) : tailrecursion.hoplon.span.call(null,G__286895,G__286896));
})();
var G__286854 = "]\n  (";
var G__286855 = (function (){var G__286897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__286898 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286897,G__286898) : tailrecursion.hoplon.span.call(null,G__286897,G__286898));
})();
var G__286856 = "(";
var G__286857 = (function (){var G__286899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__286900 = "= count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286899,G__286900) : tailrecursion.hoplon.span.call(null,G__286899,G__286900));
})();
var G__286858 = (function (){var G__286901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286902 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286901,G__286902) : tailrecursion.hoplon.span.call(null,G__286901,G__286902));
})();
var G__286859 = ")\n      ";
var G__286860 = (function (){var G__286903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286904 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286903,G__286904) : tailrecursion.hoplon.span.call(null,G__286903,G__286904));
})();
var G__286861 = "\n      (";
var G__286862 = (function (){var G__286905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286906 = "fib-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286905,G__286906) : tailrecursion.hoplon.span.call(null,G__286905,G__286906));
})();
var G__286863 = " ";
var G__286864 = (function (){var G__286907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286908 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286907,G__286908) : tailrecursion.hoplon.span.call(null,G__286907,G__286908));
})();
var G__286865 = " (";
var G__286866 = (function (){var G__286909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__286910 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286909,G__286910) : tailrecursion.hoplon.span.call(null,G__286909,G__286910));
})();
var G__286867 = (function (){var G__286911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286912 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286911,G__286912) : tailrecursion.hoplon.span.call(null,G__286911,G__286912));
})();
var G__286868 = " ";
var G__286869 = (function (){var G__286913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286914 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286913,G__286914) : tailrecursion.hoplon.span.call(null,G__286913,G__286914));
})();
var G__286870 = ") (";
var G__286871 = (function (){var G__286915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__286916 = "- count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286915,G__286916) : tailrecursion.hoplon.span.call(null,G__286915,G__286916));
})();
var G__286872 = (function (){var G__286917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286918 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286917,G__286918) : tailrecursion.hoplon.span.call(null,G__286917,G__286918));
})();
var G__286873 = "))))\n(";
var G__286874 = (function (){var G__286919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__286920 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286919,G__286920) : tailrecursion.hoplon.span.call(null,G__286919,G__286920));
})();
var G__286875 = (function (){var G__286921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286922 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286921,G__286922) : tailrecursion.hoplon.span.call(null,G__286921,G__286922));
})();
var G__286876 = " [";
var G__286877 = (function (){var G__286923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286924 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286923,G__286924) : tailrecursion.hoplon.span.call(null,G__286923,G__286924));
})();
var G__286878 = "]\n  (";
var G__286879 = (function (){var G__286925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286926 = "fib-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286925,G__286926) : tailrecursion.hoplon.span.call(null,G__286925,G__286926));
})();
var G__286880 = " ";
var G__286881 = (function (){var G__286927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286928 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286927,G__286928) : tailrecursion.hoplon.span.call(null,G__286927,G__286928));
})();
var G__286882 = " ";
var G__286883 = (function (){var G__286929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286930 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286929,G__286930) : tailrecursion.hoplon.span.call(null,G__286929,G__286930));
})();
var G__286884 = " ";
var G__286885 = (function (){var G__286931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286932 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286931,G__286932) : tailrecursion.hoplon.span.call(null,G__286931,G__286932));
})();
var G__286886 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43(G__286844,G__286845,G__286846,G__286847,G__286848,G__286849,G__286850,G__286851,G__286852,G__286853,G__286854,G__286855,G__286856,G__286857,G__286858,G__286859,G__286860,G__286861,G__286862,G__286863,G__286864,G__286865,G__286866,G__286867,G__286868,G__286869,G__286870,G__286871,G__286872,G__286873,G__286874,G__286875,G__286876,G__286877,G__286878,G__286879,G__286880,G__286881,G__286882,G__286883,G__286884,G__286885,G__286886) : tailrecursion.hoplon.pre.call(null,G__286844,G__286845,G__286846,G__286847,G__286848,G__286849,G__286850,G__286851,G__286852,G__286853,G__286854,G__286855,G__286856,G__286857,G__286858,G__286859,G__286860,G__286861,G__286862,G__286863,G__286864,G__286865,G__286866,G__286867,G__286868,G__286869,G__286870,G__286871,G__286872,G__286873,G__286874,G__286875,G__286876,G__286877,G__286878,G__286879,G__286880,G__286881,G__286882,G__286883,G__286884,G__286885,G__286886));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__286842,G__286843) : tailrecursion.hoplon.div.call(null,G__286842,G__286843));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__286841) : tailrecursion.hoplon.div.call(null,G__286841));
})(),(function (){var G__286933 = cljs.core.PersistentArrayMap.EMPTY;
var G__286934 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This second method for computing \\(Fib(n)\\) is a linear iteration. The difference in number of steps required by the two methods ",(function (){var G__286935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__286936 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__286935,G__286936) : tailrecursion.hoplon.markdown.simple_node.call(null,G__286935,G__286936));
})(),"one linear in \\(n\\), one growing as fast as \\(Fib(n)\\) itself ",(function (){var G__286937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__286938 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__286937,G__286938) : tailrecursion.hoplon.markdown.simple_node.call(null,G__286937,G__286938));
})()," is enormous, even for small inputs."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286933,G__286934) : tailrecursion.hoplon.markdown.para_node.call(null,G__286933,G__286934));
})(),(function (){var G__286939 = cljs.core.PersistentArrayMap.EMPTY;
var G__286940 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One should not conclude from this that tree-recursive processes are useless. When we consider processes that operate on hierarchially structured data rather than numbers, we will find that tree recursion is a natural and powerful tool.",(function (){var G__286941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__286942 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["An example of this was hinted at in section 1.1.3: The interpreter itself evaluates expressions using a tree-recursive process."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__286941,G__286942) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__286941,G__286942));
})()," But even in numerical operations, tree-recursive processes can be useful in helping us to understand and design programs. For instance, although the first ",(function (){var G__286943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fib"], null);
var G__286944 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286943,G__286944) : tailrecursion.hoplon.markdown.code_node.call(null,G__286943,G__286944));
})()," procedure is much less efficient than the second one, it is more straightforward, being little more than a translation into Lisp of the definition of the Fibonacci sequence. To formulate the iterative algorithm required noticing that the computation could be recast as an iteration with three state variables."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286939,G__286940) : tailrecursion.hoplon.markdown.para_node.call(null,G__286939,G__286940));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_286705;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_286704;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_286703;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_286702;
}})()], 0));
var G__279810 = "";
var G__279811 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Example: Counting Change"], null),(function (){var _STAR_references_STAR_286945 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_286946 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_286947 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_286948 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286949 = cljs.core.PersistentArrayMap.EMPTY;
var G__286950 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It takes only a bit of cleverness to come up with the iterative Fibonacci algorithm. In contrast, consider the following problem: How many different ways can we make change of $1.00, given half-dollars, quarters, dimes, nickels, and pennies? More generally, can we write a procedure to compute the number of ways to change any given amount of money?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286949,G__286950) : tailrecursion.hoplon.markdown.para_node.call(null,G__286949,G__286950));
})(),(function (){var G__286951 = cljs.core.PersistentArrayMap.EMPTY;
var G__286952 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This problem has a simple solution as a recursive procedure. Suppose we think of the types of coins available as arranged in some order. Then the following relation holds:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286951,G__286952) : tailrecursion.hoplon.markdown.para_node.call(null,G__286951,G__286952));
})(),(function (){var G__286953 = cljs.core.PersistentArrayMap.EMPTY;
var G__286954 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The number of ways to change amount \\(a\\) using \\(n\\) kinds of coins equals"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286953,G__286954) : tailrecursion.hoplon.markdown.para_node.call(null,G__286953,G__286954));
})(),(function (){var G__286955 = cljs.core.PersistentArrayMap.EMPTY;
var G__286956 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286957 = cljs.core.PersistentArrayMap.EMPTY;
var G__286958 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286959 = cljs.core.PersistentArrayMap.EMPTY;
var G__286960 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [" The number of ways to change amount \\(a\\) using all but the first kind of coin, plus"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286959,G__286960) : tailrecursion.hoplon.markdown.para_node.call(null,G__286959,G__286960));
})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__286957,G__286958) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__286957,G__286958));
})(),(function (){var G__286961 = cljs.core.PersistentArrayMap.EMPTY;
var G__286962 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_286963 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_286964 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286965 = cljs.core.PersistentArrayMap.EMPTY;
var G__286966 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The number of ways to change amount \\(a-d\\) using all \\(n\\) kinds of coins, where \\(d\\) is the denomination of the first kind of coin."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286965,G__286966) : tailrecursion.hoplon.markdown.para_node.call(null,G__286965,G__286966));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_286964;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_286963;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__286961,G__286962) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__286961,G__286962));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__286955,G__286956) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__286955,G__286956));
})(),(function (){var G__286967 = cljs.core.PersistentArrayMap.EMPTY;
var G__286968 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To see why this is true, observe that the ways to make change can be divided into two groups: those that do not use any of the first kind, and those that do. Therefore, the total number of ways to make change for some amount is equal to the number of ways to make change for the amount without using any of the first kind of coin, plus the number of ways to make change assuming that we do use the first kind of coin. But the latter number is equal to the number of ways to make change for the amount that remains after using a coin of the first kind."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286967,G__286968) : tailrecursion.hoplon.markdown.para_node.call(null,G__286967,G__286968));
})(),(function (){var G__286969 = cljs.core.PersistentArrayMap.EMPTY;
var G__286970 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Thus, we can recursively reduce the problem of changing a give amount to the problem of changing smaller amounts using fewer kinds of coins. Consider this reduction rule carefully, and convince yourself that we can use it to describe an algorithm if we specify the following degenerate cases:",(function (){var G__286971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__286972 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For example, work through in detail how the reduction rule applies to the problem of making change for 10 cents using pennies and nickels."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__286971,G__286972) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__286971,G__286972));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286969,G__286970) : tailrecursion.hoplon.markdown.para_node.call(null,G__286969,G__286970));
})(),(function (){var G__286973 = cljs.core.PersistentArrayMap.EMPTY;
var G__286974 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286975 = cljs.core.PersistentArrayMap.EMPTY;
var G__286976 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286977 = cljs.core.PersistentArrayMap.EMPTY;
var G__286978 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(a\\) is exactly 0, we should count that as 1 way to make change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286977,G__286978) : tailrecursion.hoplon.markdown.para_node.call(null,G__286977,G__286978));
})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__286975,G__286976) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__286975,G__286976));
})(),(function (){var G__286979 = cljs.core.PersistentArrayMap.EMPTY;
var G__286980 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_286981 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_286982 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286983 = cljs.core.PersistentArrayMap.EMPTY;
var G__286984 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(a\\) is less than 0, we should count that as 0 ways to make change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286983,G__286984) : tailrecursion.hoplon.markdown.para_node.call(null,G__286983,G__286984));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_286982;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_286981;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__286979,G__286980) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__286979,G__286980));
})(),(function (){var G__286985 = cljs.core.PersistentArrayMap.EMPTY;
var G__286986 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_286987 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_286988 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286989 = cljs.core.PersistentArrayMap.EMPTY;
var G__286990 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(n\\) is 0, we should count that as 0 ways to make change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286989,G__286990) : tailrecursion.hoplon.markdown.para_node.call(null,G__286989,G__286990));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_286988;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_286987;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__286985,G__286986) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__286985,G__286986));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__286973,G__286974) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__286973,G__286974));
})(),(function (){var G__286991 = cljs.core.PersistentArrayMap.EMPTY;
var G__286992 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can easily translate this description into a recursive procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286991,G__286992) : tailrecursion.hoplon.markdown.para_node.call(null,G__286991,G__286992));
})(),(function (){var G__287020 = (function (){var G__287021 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__287022 = (function (){var G__287023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__287024 = "(";
var G__287025 = (function (){var G__287036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__287037 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287036,G__287037) : tailrecursion.hoplon.span.call(null,G__287036,G__287037));
})();
var G__287026 = (function (){var G__287038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287039 = "count-change";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287038,G__287039) : tailrecursion.hoplon.span.call(null,G__287038,G__287039));
})();
var G__287027 = " [";
var G__287028 = (function (){var G__287040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287041 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287040,G__287041) : tailrecursion.hoplon.span.call(null,G__287040,G__287041));
})();
var G__287029 = "]\n  (";
var G__287030 = (function (){var G__287042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__287043 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287042,G__287043) : tailrecursion.hoplon.span.call(null,G__287042,G__287043));
})();
var G__287031 = " ";
var G__287032 = (function (){var G__287044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287045 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287044,G__287045) : tailrecursion.hoplon.span.call(null,G__287044,G__287045));
})();
var G__287033 = " ";
var G__287034 = (function (){var G__287046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287047 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287046,G__287047) : tailrecursion.hoplon.span.call(null,G__287046,G__287047));
})();
var G__287035 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__287023,G__287024,G__287025,G__287026,G__287027,G__287028,G__287029,G__287030,G__287031,G__287032,G__287033,G__287034,G__287035) : tailrecursion.hoplon.pre.call(null,G__287023,G__287024,G__287025,G__287026,G__287027,G__287028,G__287029,G__287030,G__287031,G__287032,G__287033,G__287034,G__287035));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__287021,G__287022) : tailrecursion.hoplon.div.call(null,G__287021,G__287022));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__287020) : tailrecursion.hoplon.div.call(null,G__287020));
})(),(function (){var G__287048 = cljs.core.PersistentArrayMap.EMPTY;
var G__287049 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["given that we",(function (){var G__287050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__287051 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__287050,G__287051) : tailrecursion.hoplon.markdown.simple_node.call(null,G__287050,G__287051));
})(),"ve defined"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287048,G__287049) : tailrecursion.hoplon.markdown.para_node.call(null,G__287048,G__287049));
})(),(function (){var G__287170 = (function (){var G__287171 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__287172 = (function (){var G__287173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__287174 = "(";
var G__287175 = (function (){var G__287229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__287230 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287229,G__287230) : tailrecursion.hoplon.span.call(null,G__287229,G__287230));
})();
var G__287176 = (function (){var G__287231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287232 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287231,G__287232) : tailrecursion.hoplon.span.call(null,G__287231,G__287232));
})();
var G__287177 = " [";
var G__287178 = (function (){var G__287233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287234 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287233,G__287234) : tailrecursion.hoplon.span.call(null,G__287233,G__287234));
})();
var G__287179 = " ";
var G__287180 = (function (){var G__287235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287236 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287235,G__287236) : tailrecursion.hoplon.span.call(null,G__287235,G__287236));
})();
var G__287181 = "]\n  (";
var G__287182 = (function (){var G__287237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287238 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287237,G__287238) : tailrecursion.hoplon.span.call(null,G__287237,G__287238));
})();
var G__287183 = "(";
var G__287184 = (function (){var G__287239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287240 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287239,G__287240) : tailrecursion.hoplon.span.call(null,G__287239,G__287240));
})();
var G__287185 = (function (){var G__287241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287242 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287241,G__287242) : tailrecursion.hoplon.span.call(null,G__287241,G__287242));
})();
var G__287186 = " ";
var G__287187 = (function (){var G__287243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287244 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287243,G__287244) : tailrecursion.hoplon.span.call(null,G__287243,G__287244));
})();
var G__287188 = ") ";
var G__287189 = (function (){var G__287245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287246 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287245,G__287246) : tailrecursion.hoplon.span.call(null,G__287245,G__287246));
})();
var G__287190 = "\n        (";
var G__287191 = (function (){var G__287247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287248 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287247,G__287248) : tailrecursion.hoplon.span.call(null,G__287247,G__287248));
})();
var G__287192 = "(";
var G__287193 = (function (){var G__287249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287250 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287249,G__287250) : tailrecursion.hoplon.span.call(null,G__287249,G__287250));
})();
var G__287194 = (function (){var G__287251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287252 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287251,G__287252) : tailrecursion.hoplon.span.call(null,G__287251,G__287252));
})();
var G__287195 = " ";
var G__287196 = (function (){var G__287253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287254 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287253,G__287254) : tailrecursion.hoplon.span.call(null,G__287253,G__287254));
})();
var G__287197 = ") (";
var G__287198 = (function (){var G__287255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287256 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287255,G__287256) : tailrecursion.hoplon.span.call(null,G__287255,G__287256));
})();
var G__287199 = (function (){var G__287257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287258 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287257,G__287258) : tailrecursion.hoplon.span.call(null,G__287257,G__287258));
})();
var G__287200 = " ";
var G__287201 = (function (){var G__287259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287260 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287259,G__287260) : tailrecursion.hoplon.span.call(null,G__287259,G__287260));
})();
var G__287202 = ")) ";
var G__287203 = (function (){var G__287261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287262 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287261,G__287262) : tailrecursion.hoplon.span.call(null,G__287261,G__287262));
})();
var G__287204 = "\n        ";
var G__287205 = (function (){var G__287263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287264 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287263,G__287264) : tailrecursion.hoplon.span.call(null,G__287263,G__287264));
})();
var G__287206 = " (";
var G__287207 = (function (){var G__287265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287266 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287265,G__287266) : tailrecursion.hoplon.span.call(null,G__287265,G__287266));
})();
var G__287208 = "(";
var G__287209 = (function (){var G__287267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__287268 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287267,G__287268) : tailrecursion.hoplon.span.call(null,G__287267,G__287268));
})();
var G__287210 = " ";
var G__287211 = (function (){var G__287269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287270 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287269,G__287270) : tailrecursion.hoplon.span.call(null,G__287269,G__287270));
})();
var G__287212 = " (";
var G__287213 = (function (){var G__287271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287272 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287271,G__287272) : tailrecursion.hoplon.span.call(null,G__287271,G__287272));
})();
var G__287214 = (function (){var G__287273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287274 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287273,G__287274) : tailrecursion.hoplon.span.call(null,G__287273,G__287274));
})();
var G__287215 = " ";
var G__287216 = (function (){var G__287275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287276 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287275,G__287276) : tailrecursion.hoplon.span.call(null,G__287275,G__287276));
})();
var G__287217 = "))\n                 (";
var G__287218 = (function (){var G__287277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__287278 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287277,G__287278) : tailrecursion.hoplon.span.call(null,G__287277,G__287278));
})();
var G__287219 = " (";
var G__287220 = (function (){var G__287279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287280 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287279,G__287280) : tailrecursion.hoplon.span.call(null,G__287279,G__287280));
})();
var G__287221 = (function (){var G__287281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287282 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287281,G__287282) : tailrecursion.hoplon.span.call(null,G__287281,G__287282));
})();
var G__287222 = " (";
var G__287223 = (function (){var G__287283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__287284 = "first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287283,G__287284) : tailrecursion.hoplon.span.call(null,G__287283,G__287284));
})();
var G__287224 = " ";
var G__287225 = (function (){var G__287285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287286 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287285,G__287286) : tailrecursion.hoplon.span.call(null,G__287285,G__287286));
})();
var G__287226 = ")) ";
var G__287227 = (function (){var G__287287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287288 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287287,G__287288) : tailrecursion.hoplon.span.call(null,G__287287,G__287288));
})();
var G__287228 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$56 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$56(G__287173,G__287174,G__287175,G__287176,G__287177,G__287178,G__287179,G__287180,G__287181,G__287182,G__287183,G__287184,G__287185,G__287186,G__287187,G__287188,G__287189,G__287190,G__287191,G__287192,G__287193,G__287194,G__287195,G__287196,G__287197,G__287198,G__287199,G__287200,G__287201,G__287202,G__287203,G__287204,G__287205,G__287206,G__287207,G__287208,G__287209,G__287210,G__287211,G__287212,G__287213,G__287214,G__287215,G__287216,G__287217,G__287218,G__287219,G__287220,G__287221,G__287222,G__287223,G__287224,G__287225,G__287226,G__287227,G__287228) : tailrecursion.hoplon.pre.call(null,G__287173,G__287174,G__287175,G__287176,G__287177,G__287178,G__287179,G__287180,G__287181,G__287182,G__287183,G__287184,G__287185,G__287186,G__287187,G__287188,G__287189,G__287190,G__287191,G__287192,G__287193,G__287194,G__287195,G__287196,G__287197,G__287198,G__287199,G__287200,G__287201,G__287202,G__287203,G__287204,G__287205,G__287206,G__287207,G__287208,G__287209,G__287210,G__287211,G__287212,G__287213,G__287214,G__287215,G__287216,G__287217,G__287218,G__287219,G__287220,G__287221,G__287222,G__287223,G__287224,G__287225,G__287226,G__287227,G__287228));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__287171,G__287172) : tailrecursion.hoplon.div.call(null,G__287171,G__287172));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__287170) : tailrecursion.hoplon.div.call(null,G__287170));
})(),(function (){var G__287289 = cljs.core.PersistentArrayMap.EMPTY;
var G__287290 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287289,G__287290) : tailrecursion.hoplon.markdown.para_node.call(null,G__287289,G__287290));
})(),(function (){var G__287385 = (function (){var G__287386 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__287387 = (function (){var G__287388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__287389 = "(";
var G__287390 = (function (){var G__287432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__287433 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287432,G__287433) : tailrecursion.hoplon.span.call(null,G__287432,G__287433));
})();
var G__287391 = (function (){var G__287434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287435 = "first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287434,G__287435) : tailrecursion.hoplon.span.call(null,G__287434,G__287435));
})();
var G__287392 = " [";
var G__287393 = (function (){var G__287436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287437 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287436,G__287437) : tailrecursion.hoplon.span.call(null,G__287436,G__287437));
})();
var G__287394 = "]\n  (";
var G__287395 = (function (){var G__287438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287439 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287438,G__287439) : tailrecursion.hoplon.span.call(null,G__287438,G__287439));
})();
var G__287396 = "(";
var G__287397 = (function (){var G__287440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287441 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287440,G__287441) : tailrecursion.hoplon.span.call(null,G__287440,G__287441));
})();
var G__287398 = (function (){var G__287442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287443 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287442,G__287443) : tailrecursion.hoplon.span.call(null,G__287442,G__287443));
})();
var G__287399 = " ";
var G__287400 = (function (){var G__287444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287445 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287444,G__287445) : tailrecursion.hoplon.span.call(null,G__287444,G__287445));
})();
var G__287401 = ") ";
var G__287402 = (function (){var G__287446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287447 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287446,G__287447) : tailrecursion.hoplon.span.call(null,G__287446,G__287447));
})();
var G__287403 = "\n        (";
var G__287404 = (function (){var G__287448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287449 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287448,G__287449) : tailrecursion.hoplon.span.call(null,G__287448,G__287449));
})();
var G__287405 = (function (){var G__287450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287451 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287450,G__287451) : tailrecursion.hoplon.span.call(null,G__287450,G__287451));
})();
var G__287406 = " ";
var G__287407 = (function (){var G__287452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287453 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287452,G__287453) : tailrecursion.hoplon.span.call(null,G__287452,G__287453));
})();
var G__287408 = ") ";
var G__287409 = (function (){var G__287454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287455 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287454,G__287455) : tailrecursion.hoplon.span.call(null,G__287454,G__287455));
})();
var G__287410 = "\n        (";
var G__287411 = (function (){var G__287456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287457 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287456,G__287457) : tailrecursion.hoplon.span.call(null,G__287456,G__287457));
})();
var G__287412 = (function (){var G__287458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287459 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287458,G__287459) : tailrecursion.hoplon.span.call(null,G__287458,G__287459));
})();
var G__287413 = " ";
var G__287414 = (function (){var G__287460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287461 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287460,G__287461) : tailrecursion.hoplon.span.call(null,G__287460,G__287461));
})();
var G__287415 = ") ";
var G__287416 = (function (){var G__287462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287463 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287462,G__287463) : tailrecursion.hoplon.span.call(null,G__287462,G__287463));
})();
var G__287417 = "\n        (";
var G__287418 = (function (){var G__287464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287465 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287464,G__287465) : tailrecursion.hoplon.span.call(null,G__287464,G__287465));
})();
var G__287419 = (function (){var G__287466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287467 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287466,G__287467) : tailrecursion.hoplon.span.call(null,G__287466,G__287467));
})();
var G__287420 = " ";
var G__287421 = (function (){var G__287468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287469 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287468,G__287469) : tailrecursion.hoplon.span.call(null,G__287468,G__287469));
})();
var G__287422 = ") ";
var G__287423 = (function (){var G__287470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287471 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287470,G__287471) : tailrecursion.hoplon.span.call(null,G__287470,G__287471));
})();
var G__287424 = "\n        (";
var G__287425 = (function (){var G__287472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287473 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287472,G__287473) : tailrecursion.hoplon.span.call(null,G__287472,G__287473));
})();
var G__287426 = (function (){var G__287474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287475 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287474,G__287475) : tailrecursion.hoplon.span.call(null,G__287474,G__287475));
})();
var G__287427 = " ";
var G__287428 = (function (){var G__287476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287477 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287476,G__287477) : tailrecursion.hoplon.span.call(null,G__287476,G__287477));
})();
var G__287429 = ") ";
var G__287430 = (function (){var G__287478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287479 = "50";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287478,G__287479) : tailrecursion.hoplon.span.call(null,G__287478,G__287479));
})();
var G__287431 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$44 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$44(G__287388,G__287389,G__287390,G__287391,G__287392,G__287393,G__287394,G__287395,G__287396,G__287397,G__287398,G__287399,G__287400,G__287401,G__287402,G__287403,G__287404,G__287405,G__287406,G__287407,G__287408,G__287409,G__287410,G__287411,G__287412,G__287413,G__287414,G__287415,G__287416,G__287417,G__287418,G__287419,G__287420,G__287421,G__287422,G__287423,G__287424,G__287425,G__287426,G__287427,G__287428,G__287429,G__287430,G__287431) : tailrecursion.hoplon.pre.call(null,G__287388,G__287389,G__287390,G__287391,G__287392,G__287393,G__287394,G__287395,G__287396,G__287397,G__287398,G__287399,G__287400,G__287401,G__287402,G__287403,G__287404,G__287405,G__287406,G__287407,G__287408,G__287409,G__287410,G__287411,G__287412,G__287413,G__287414,G__287415,G__287416,G__287417,G__287418,G__287419,G__287420,G__287421,G__287422,G__287423,G__287424,G__287425,G__287426,G__287427,G__287428,G__287429,G__287430,G__287431));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__287386,G__287387) : tailrecursion.hoplon.div.call(null,G__287386,G__287387));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__287385) : tailrecursion.hoplon.div.call(null,G__287385));
})(),(function (){var G__287480 = cljs.core.PersistentArrayMap.EMPTY;
var G__287481 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__287482 = cljs.core.PersistentArrayMap.EMPTY;
var G__287483 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note that I made the stipulation that we",(function (){var G__287484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__287485 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__287484,G__287485) : tailrecursion.hoplon.markdown.simple_node.call(null,G__287484,G__287485));
})(),"ve already defined the two next things. I said this because the REPL we",(function (){var G__287486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__287487 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__287486,G__287487) : tailrecursion.hoplon.markdown.simple_node.call(null,G__287486,G__287487));
})(),"re using for this book will return an error if you use somthing that has not been previously defined, so if we try to use ",(function (){var G__287488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first-denomination"], null);
var G__287489 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__287488,G__287489) : tailrecursion.hoplon.markdown.code_node.call(null,G__287488,G__287489));
})()," in a function definition before we",(function (){var G__287490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__287491 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__287490,G__287491) : tailrecursion.hoplon.markdown.simple_node.call(null,G__287490,G__287491));
})(),"ve defined ",(function (){var G__287492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first-denomination"], null);
var G__287493 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__287492,G__287493) : tailrecursion.hoplon.markdown.code_node.call(null,G__287492,G__287493));
})(),", the program won",(function (){var G__287494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__287495 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__287494,G__287495) : tailrecursion.hoplon.markdown.simple_node.call(null,G__287494,G__287495));
})(),"t compile. I introduced the functions in the order I did for two reasons: 1) it",(function (){var G__287496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__287497 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__287496,G__287497) : tailrecursion.hoplon.markdown.simple_node.call(null,G__287496,G__287497));
})(),"s the same order that is used in the original SICP, and 2) it makes more sense pedagogically."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287482,G__287483) : tailrecursion.hoplon.markdown.para_node.call(null,G__287482,G__287483));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__287480,G__287481) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__287480,G__287481));
})(),(function (){var G__287498 = cljs.core.PersistentArrayMap.EMPTY;
var G__287499 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(The ",(function (){var G__287500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first-denomination"], null);
var G__287501 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__287500,G__287501) : tailrecursion.hoplon.markdown.code_node.call(null,G__287500,G__287501));
})()," procedure takes as input the number of kinds of coins available and returns the denomination of the first kind. Here we are thinking of the coins as arranged in order from largest to smallest, but any order would do as well.) We can now answer our original question about changing a dollar:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287498,G__287499) : tailrecursion.hoplon.markdown.para_node.call(null,G__287498,G__287499));
})(),(function (){var G__287518 = (function (){var G__287519 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__287520 = (function (){var G__287521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__287522 = "(";
var G__287523 = (function (){var G__287529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__287530 = "count-change";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287529,G__287530) : tailrecursion.hoplon.span.call(null,G__287529,G__287530));
})();
var G__287524 = " ";
var G__287525 = (function (){var G__287531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287532 = "100";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287531,G__287532) : tailrecursion.hoplon.span.call(null,G__287531,G__287532));
})();
var G__287526 = ")\n";
var G__287527 = (function (){var G__287533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287534 = "292";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287533,G__287534) : tailrecursion.hoplon.span.call(null,G__287533,G__287534));
})();
var G__287528 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__287521,G__287522,G__287523,G__287524,G__287525,G__287526,G__287527,G__287528) : tailrecursion.hoplon.pre.call(null,G__287521,G__287522,G__287523,G__287524,G__287525,G__287526,G__287527,G__287528));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__287519,G__287520) : tailrecursion.hoplon.div.call(null,G__287519,G__287520));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__287518) : tailrecursion.hoplon.div.call(null,G__287518));
})(),(function (){var G__287535 = cljs.core.PersistentArrayMap.EMPTY;
var G__287536 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__287537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"count-change"], null);
var G__287538 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__287537,G__287538) : tailrecursion.hoplon.markdown.code_node.call(null,G__287537,G__287538));
})()," generates a tree-recursive process with redundancies similar to those in our first implementation of ",(function (){var G__287539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fib"], null);
var G__287540 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__287539,G__287540) : tailrecursion.hoplon.markdown.code_node.call(null,G__287539,G__287540));
})(),". (It will take quite a wile for that 292 to be computed.) On the other hand, it is not obvious hwo to design a better algorithm for computing the result, and we leave this problem as a challenge. The observation that a tree-recursive process may be highly inefficient but often easy to specify and understand has led people to propose that one could get the best of both worlds by designing a ",(function (){var G__287541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__287542 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["smart compiler"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__287541,G__287542) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__287541,G__287542));
})()," that could transform tree-recusive procedures into more efficient procedures that compute the same result.",(function (){var G__287543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__287544 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One approach to coping with redundant computations is to arrange matters so that we automatically construct a table of values as they are computed. Each time we are asked to apply the procedure to some argument, we first look to see if the value is already stored in the table, in which case we avoid performing the redundant computation. This strategy, known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tabulation"], null)], 0))," or ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["memoization"], null)], 0)),", can be implemented in a straightforward way. Tabulation can sometimes be used to transform processes that require an exponential number of steps (such as ",(function (){var G__287545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"count-change"], null);
var G__287546 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__287545,G__287546) : tailrecursion.hoplon.markdown.code_node.call(null,G__287545,G__287546));
})(),") into processes whose space and time requirements grow linearly with the input. See exercise 3.27."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__287543,G__287544) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__287543,G__287544));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287535,G__287536) : tailrecursion.hoplon.markdown.para_node.call(null,G__287535,G__287536));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_286948;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_286947;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_286946;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_286945;
}})()], 0));
var G__279812 = "";
var G__279813 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"11-13"], null),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(11)], null),(function (){var _STAR_references_STAR_287547 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_287548 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_287549 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_287550 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__287551 = cljs.core.PersistentArrayMap.EMPTY;
var G__287552 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A function \\(f\\) is defined by the rule that \\(f(n)=f(n-1)+2f(n-2)+3f(n-3)\\) if \\(n\\geq3\\). Write a procedure that computes \\(f\\) by means of a recursive process. Write a procedure that computes \\(f\\) by a means of an iterative process."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287551,G__287552) : tailrecursion.hoplon.markdown.para_node.call(null,G__287551,G__287552));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_287550;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_287549;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_287548;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_287547;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_287553 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_287554 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_287555 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_287556 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__287557 = cljs.core.PersistentArrayMap.EMPTY;
var G__287558 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Recursive:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287557,G__287558) : tailrecursion.hoplon.markdown.para_node.call(null,G__287557,G__287558));
})(),(function (){var G__287656 = (function (){var G__287657 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__287658 = (function (){var G__287659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__287660 = "(";
var G__287661 = (function (){var G__287704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__287705 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287704,G__287705) : tailrecursion.hoplon.span.call(null,G__287704,G__287705));
})();
var G__287662 = (function (){var G__287706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287707 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287706,G__287707) : tailrecursion.hoplon.span.call(null,G__287706,G__287707));
})();
var G__287663 = " [";
var G__287664 = (function (){var G__287708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287709 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287708,G__287709) : tailrecursion.hoplon.span.call(null,G__287708,G__287709));
})();
var G__287665 = "]\n  (";
var G__287666 = (function (){var G__287710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__287711 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287710,G__287711) : tailrecursion.hoplon.span.call(null,G__287710,G__287711));
})();
var G__287667 = "(";
var G__287668 = (function (){var G__287712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287713 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287712,G__287713) : tailrecursion.hoplon.span.call(null,G__287712,G__287713));
})();
var G__287669 = (function (){var G__287714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287715 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287714,G__287715) : tailrecursion.hoplon.span.call(null,G__287714,G__287715));
})();
var G__287670 = " ";
var G__287671 = (function (){var G__287716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287717 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287716,G__287717) : tailrecursion.hoplon.span.call(null,G__287716,G__287717));
})();
var G__287672 = ")\n      ";
var G__287673 = (function (){var G__287718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287719 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287718,G__287719) : tailrecursion.hoplon.span.call(null,G__287718,G__287719));
})();
var G__287674 = "\n      (";
var G__287675 = (function (){var G__287720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287721 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287720,G__287721) : tailrecursion.hoplon.span.call(null,G__287720,G__287721));
})();
var G__287676 = "(";
var G__287677 = (function (){var G__287722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__287723 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287722,G__287723) : tailrecursion.hoplon.span.call(null,G__287722,G__287723));
})();
var G__287678 = " (";
var G__287679 = (function (){var G__287724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287725 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287724,G__287725) : tailrecursion.hoplon.span.call(null,G__287724,G__287725));
})();
var G__287680 = (function (){var G__287726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287727 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287726,G__287727) : tailrecursion.hoplon.span.call(null,G__287726,G__287727));
})();
var G__287681 = " ";
var G__287682 = (function (){var G__287728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287729 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287728,G__287729) : tailrecursion.hoplon.span.call(null,G__287728,G__287729));
})();
var G__287683 = ")) \n         (";
var G__287684 = (function (){var G__287730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287731 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287730,G__287731) : tailrecursion.hoplon.span.call(null,G__287730,G__287731));
})();
var G__287685 = (function (){var G__287732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287733 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287732,G__287733) : tailrecursion.hoplon.span.call(null,G__287732,G__287733));
})();
var G__287686 = " (";
var G__287687 = (function (){var G__287734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__287735 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287734,G__287735) : tailrecursion.hoplon.span.call(null,G__287734,G__287735));
})();
var G__287688 = " (";
var G__287689 = (function (){var G__287736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287737 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287736,G__287737) : tailrecursion.hoplon.span.call(null,G__287736,G__287737));
})();
var G__287690 = (function (){var G__287738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287739 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287738,G__287739) : tailrecursion.hoplon.span.call(null,G__287738,G__287739));
})();
var G__287691 = " ";
var G__287692 = (function (){var G__287740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287741 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287740,G__287741) : tailrecursion.hoplon.span.call(null,G__287740,G__287741));
})();
var G__287693 = "))) \n         (";
var G__287694 = (function (){var G__287742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287743 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287742,G__287743) : tailrecursion.hoplon.span.call(null,G__287742,G__287743));
})();
var G__287695 = (function (){var G__287744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287745 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287744,G__287745) : tailrecursion.hoplon.span.call(null,G__287744,G__287745));
})();
var G__287696 = " (";
var G__287697 = (function (){var G__287746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__287747 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287746,G__287747) : tailrecursion.hoplon.span.call(null,G__287746,G__287747));
})();
var G__287698 = " (";
var G__287699 = (function (){var G__287748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287749 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287748,G__287749) : tailrecursion.hoplon.span.call(null,G__287748,G__287749));
})();
var G__287700 = (function (){var G__287750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287751 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287750,G__287751) : tailrecursion.hoplon.span.call(null,G__287750,G__287751));
})();
var G__287701 = " ";
var G__287702 = (function (){var G__287752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287753 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287752,G__287753) : tailrecursion.hoplon.span.call(null,G__287752,G__287753));
})();
var G__287703 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45(G__287659,G__287660,G__287661,G__287662,G__287663,G__287664,G__287665,G__287666,G__287667,G__287668,G__287669,G__287670,G__287671,G__287672,G__287673,G__287674,G__287675,G__287676,G__287677,G__287678,G__287679,G__287680,G__287681,G__287682,G__287683,G__287684,G__287685,G__287686,G__287687,G__287688,G__287689,G__287690,G__287691,G__287692,G__287693,G__287694,G__287695,G__287696,G__287697,G__287698,G__287699,G__287700,G__287701,G__287702,G__287703) : tailrecursion.hoplon.pre.call(null,G__287659,G__287660,G__287661,G__287662,G__287663,G__287664,G__287665,G__287666,G__287667,G__287668,G__287669,G__287670,G__287671,G__287672,G__287673,G__287674,G__287675,G__287676,G__287677,G__287678,G__287679,G__287680,G__287681,G__287682,G__287683,G__287684,G__287685,G__287686,G__287687,G__287688,G__287689,G__287690,G__287691,G__287692,G__287693,G__287694,G__287695,G__287696,G__287697,G__287698,G__287699,G__287700,G__287701,G__287702,G__287703));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__287657,G__287658) : tailrecursion.hoplon.div.call(null,G__287657,G__287658));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__287656) : tailrecursion.hoplon.div.call(null,G__287656));
})(),(function (){var G__287754 = cljs.core.PersistentArrayMap.EMPTY;
var G__287755 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Iterative:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287754,G__287755) : tailrecursion.hoplon.markdown.para_node.call(null,G__287754,G__287755));
})(),(function (){var G__287900 = (function (){var G__287901 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__287902 = (function (){var G__287903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__287904 = "(";
var G__287905 = (function (){var G__287971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__287972 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287971,G__287972) : tailrecursion.hoplon.span.call(null,G__287971,G__287972));
})();
var G__287906 = (function (){var G__287973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287974 = "f-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287973,G__287974) : tailrecursion.hoplon.span.call(null,G__287973,G__287974));
})();
var G__287907 = " [";
var G__287908 = (function (){var G__287975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287976 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287975,G__287976) : tailrecursion.hoplon.span.call(null,G__287975,G__287976));
})();
var G__287909 = " ";
var G__287910 = (function (){var G__287977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287978 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287977,G__287978) : tailrecursion.hoplon.span.call(null,G__287977,G__287978));
})();
var G__287911 = " ";
var G__287912 = (function (){var G__287979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287980 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287979,G__287980) : tailrecursion.hoplon.span.call(null,G__287979,G__287980));
})();
var G__287913 = " ";
var G__287914 = (function (){var G__287981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287982 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287981,G__287982) : tailrecursion.hoplon.span.call(null,G__287981,G__287982));
})();
var G__287915 = "]\n  (";
var G__287916 = (function (){var G__287983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__287984 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287983,G__287984) : tailrecursion.hoplon.span.call(null,G__287983,G__287984));
})();
var G__287917 = "(";
var G__287918 = (function (){var G__287985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287986 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287985,G__287986) : tailrecursion.hoplon.span.call(null,G__287985,G__287986));
})();
var G__287919 = (function (){var G__287987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287988 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287987,G__287988) : tailrecursion.hoplon.span.call(null,G__287987,G__287988));
})();
var G__287920 = " ";
var G__287921 = (function (){var G__287989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287990 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287989,G__287990) : tailrecursion.hoplon.span.call(null,G__287989,G__287990));
})();
var G__287922 = ")\n      ";
var G__287923 = (function (){var G__287991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287992 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287991,G__287992) : tailrecursion.hoplon.span.call(null,G__287991,G__287992));
})();
var G__287924 = "\n      (";
var G__287925 = (function (){var G__287993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__287994 = "f-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287993,G__287994) : tailrecursion.hoplon.span.call(null,G__287993,G__287994));
})();
var G__287926 = " (";
var G__287927 = (function (){var G__287995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287996 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287995,G__287996) : tailrecursion.hoplon.span.call(null,G__287995,G__287996));
})();
var G__287928 = (function (){var G__287997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287998 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287997,G__287998) : tailrecursion.hoplon.span.call(null,G__287997,G__287998));
})();
var G__287929 = ") (";
var G__287930 = (function (){var G__287999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288000 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287999,G__288000) : tailrecursion.hoplon.span.call(null,G__287999,G__288000));
})();
var G__287931 = (function (){var G__288001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288002 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288001,G__288002) : tailrecursion.hoplon.span.call(null,G__288001,G__288002));
})();
var G__287932 = " (";
var G__287933 = (function (){var G__288003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288004 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288003,G__288004) : tailrecursion.hoplon.span.call(null,G__288003,G__288004));
})();
var G__287934 = (function (){var G__288005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288006 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288005,G__288006) : tailrecursion.hoplon.span.call(null,G__288005,G__288006));
})();
var G__287935 = " ";
var G__287936 = (function (){var G__288007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288008 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288007,G__288008) : tailrecursion.hoplon.span.call(null,G__288007,G__288008));
})();
var G__287937 = ") (";
var G__287938 = (function (){var G__288009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288010 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288009,G__288010) : tailrecursion.hoplon.span.call(null,G__288009,G__288010));
})();
var G__287939 = (function (){var G__288011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288012 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288011,G__288012) : tailrecursion.hoplon.span.call(null,G__288011,G__288012));
})();
var G__287940 = " ";
var G__287941 = (function (){var G__288013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288014 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288013,G__288014) : tailrecursion.hoplon.span.call(null,G__288013,G__288014));
})();
var G__287942 = ")) ";
var G__287943 = (function (){var G__288015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288016 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288015,G__288016) : tailrecursion.hoplon.span.call(null,G__288015,G__288016));
})();
var G__287944 = " ";
var G__287945 = (function (){var G__288017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288018 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288017,G__288018) : tailrecursion.hoplon.span.call(null,G__288017,G__288018));
})();
var G__287946 = ")))\n(";
var G__287947 = (function (){var G__288019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__288020 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288019,G__288020) : tailrecursion.hoplon.span.call(null,G__288019,G__288020));
})();
var G__287948 = (function (){var G__288021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288022 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288021,G__288022) : tailrecursion.hoplon.span.call(null,G__288021,G__288022));
})();
var G__287949 = " [";
var G__287950 = (function (){var G__288023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288024 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288023,G__288024) : tailrecursion.hoplon.span.call(null,G__288023,G__288024));
})();
var G__287951 = "]\n  (";
var G__287952 = (function (){var G__288025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__288026 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288025,G__288026) : tailrecursion.hoplon.span.call(null,G__288025,G__288026));
})();
var G__287953 = "(";
var G__287954 = (function (){var G__288027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288028 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288027,G__288028) : tailrecursion.hoplon.span.call(null,G__288027,G__288028));
})();
var G__287955 = (function (){var G__288029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288030 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288029,G__288030) : tailrecursion.hoplon.span.call(null,G__288029,G__288030));
})();
var G__287956 = " ";
var G__287957 = (function (){var G__288031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288032 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288031,G__288032) : tailrecursion.hoplon.span.call(null,G__288031,G__288032));
})();
var G__287958 = ")\n      ";
var G__287959 = (function (){var G__288033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288034 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288033,G__288034) : tailrecursion.hoplon.span.call(null,G__288033,G__288034));
})();
var G__287960 = "\n      (";
var G__287961 = (function (){var G__288035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288036 = "f-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288035,G__288036) : tailrecursion.hoplon.span.call(null,G__288035,G__288036));
})();
var G__287962 = " ";
var G__287963 = (function (){var G__288037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288038 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288037,G__288038) : tailrecursion.hoplon.span.call(null,G__288037,G__288038));
})();
var G__287964 = " ";
var G__287965 = (function (){var G__288039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288040 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288039,G__288040) : tailrecursion.hoplon.span.call(null,G__288039,G__288040));
})();
var G__287966 = " ";
var G__287967 = (function (){var G__288041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288042 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288041,G__288042) : tailrecursion.hoplon.span.call(null,G__288041,G__288042));
})();
var G__287968 = " ";
var G__287969 = (function (){var G__288043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288044 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288043,G__288044) : tailrecursion.hoplon.span.call(null,G__288043,G__288044));
})();
var G__287970 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$68 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$68(G__287903,G__287904,G__287905,G__287906,G__287907,G__287908,G__287909,G__287910,G__287911,G__287912,G__287913,G__287914,G__287915,G__287916,G__287917,G__287918,G__287919,G__287920,G__287921,G__287922,G__287923,G__287924,G__287925,G__287926,G__287927,G__287928,G__287929,G__287930,G__287931,G__287932,G__287933,G__287934,G__287935,G__287936,G__287937,G__287938,G__287939,G__287940,G__287941,G__287942,G__287943,G__287944,G__287945,G__287946,G__287947,G__287948,G__287949,G__287950,G__287951,G__287952,G__287953,G__287954,G__287955,G__287956,G__287957,G__287958,G__287959,G__287960,G__287961,G__287962,G__287963,G__287964,G__287965,G__287966,G__287967,G__287968,G__287969,G__287970) : tailrecursion.hoplon.pre.call(null,G__287903,G__287904,G__287905,G__287906,G__287907,G__287908,G__287909,G__287910,G__287911,G__287912,G__287913,G__287914,G__287915,G__287916,G__287917,G__287918,G__287919,G__287920,G__287921,G__287922,G__287923,G__287924,G__287925,G__287926,G__287927,G__287928,G__287929,G__287930,G__287931,G__287932,G__287933,G__287934,G__287935,G__287936,G__287937,G__287938,G__287939,G__287940,G__287941,G__287942,G__287943,G__287944,G__287945,G__287946,G__287947,G__287948,G__287949,G__287950,G__287951,G__287952,G__287953,G__287954,G__287955,G__287956,G__287957,G__287958,G__287959,G__287960,G__287961,G__287962,G__287963,G__287964,G__287965,G__287966,G__287967,G__287968,G__287969,G__287970));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__287901,G__287902) : tailrecursion.hoplon.div.call(null,G__287901,G__287902));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__287900) : tailrecursion.hoplon.div.call(null,G__287900));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_287556;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_287555;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_287554;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_287553;
}})()], 0))], 0)),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(12)], null),(function (){var _STAR_references_STAR_288045 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288046 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288047 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288048 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288049 = cljs.core.PersistentArrayMap.EMPTY;
var G__288050 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following patter is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Pascal",(function (){var G__288051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__288052 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__288051,G__288052) : tailrecursion.hoplon.markdown.simple_node.call(null,G__288051,G__288052));
})(),"s Triangle"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288049,G__288050) : tailrecursion.hoplon.markdown.para_node.call(null,G__288049,G__288050));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288048;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288047;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288046;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288045;
}})(),book.sicp.book_data.image.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$src,"/img/sicp/exercise1_12.gif"], null)], 0)),(function (){var _STAR_references_STAR_288053 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288054 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288055 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288056 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288057 = cljs.core.PersistentArrayMap.EMPTY;
var G__288058 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The numbers at the edge of the triangle are all 1, and each number inside the triangle is the sum of the two numbers above it.",(function (){var G__288059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__288060 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The elements of Pascal",(function (){var G__288061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__288062 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__288061,G__288062) : tailrecursion.hoplon.markdown.simple_node.call(null,G__288061,G__288062));
})(),"s triangle are called the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["binomial coefficients"], null)], 0)),", because the \\(n\\)th row consists of the coefficients of the terms in the expansion of \\((x + y)^n\\). This pattern for computing the coefficients appeared in Blaise Pascal",(function (){var G__288063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__288064 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__288063,G__288064) : tailrecursion.hoplon.markdown.simple_node.call(null,G__288063,G__288064));
})(),"s 1653 seminal work on probability theory, ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Trait\u00E9 du triangle arithm\u00E9tique"], null)], 0)),". According to Knuth (1973), the same pattern appears in the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Szu-yuen Y\u00FC-chien"], null)], 0))," (",(function (){var G__288065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__288066 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The Precious Mirror of the Four Elements"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__288065,G__288066) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__288065,G__288066));
})(),"), published by the Chinese mathematician Chu Shih-chieh in 1303, in the works of the twelfth-century Persian poet and mathematician Omar Khayyam, and in the works of the twelfth-century Hindu mathematician Bh\u00E1scara \u00C1ch\u00E1rya."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__288059,G__288060) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__288059,G__288060));
})()," Write a procedure that computes elements of Pascal",(function (){var G__288067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__288068 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__288067,G__288068) : tailrecursion.hoplon.markdown.simple_node.call(null,G__288067,G__288068));
})(),"s Triangle by means of a recursive process."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288057,G__288058) : tailrecursion.hoplon.markdown.para_node.call(null,G__288057,G__288058));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288056;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288055;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288054;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288053;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_288069 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288070 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288071 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288072 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288220 = (function (){var G__288221 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__288222 = (function (){var G__288223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__288224 = "(";
var G__288225 = (function (){var G__288292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__288293 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288292,G__288293) : tailrecursion.hoplon.span.call(null,G__288292,G__288293));
})();
var G__288226 = (function (){var G__288294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288295 = "pascal";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288294,G__288295) : tailrecursion.hoplon.span.call(null,G__288294,G__288295));
})();
var G__288227 = " [";
var G__288228 = (function (){var G__288296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288297 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288296,G__288297) : tailrecursion.hoplon.span.call(null,G__288296,G__288297));
})();
var G__288229 = " ";
var G__288230 = (function (){var G__288298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288299 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288298,G__288299) : tailrecursion.hoplon.span.call(null,G__288298,G__288299));
})();
var G__288231 = "]\n  (";
var G__288232 = (function (){var G__288300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288301 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288300,G__288301) : tailrecursion.hoplon.span.call(null,G__288300,G__288301));
})();
var G__288233 = "(";
var G__288234 = (function (){var G__288302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288303 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288302,G__288303) : tailrecursion.hoplon.span.call(null,G__288302,G__288303));
})();
var G__288235 = "(";
var G__288236 = (function (){var G__288304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288305 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288304,G__288305) : tailrecursion.hoplon.span.call(null,G__288304,G__288305));
})();
var G__288237 = (function (){var G__288306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288307 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288306,G__288307) : tailrecursion.hoplon.span.call(null,G__288306,G__288307));
})();
var G__288238 = " ";
var G__288239 = (function (){var G__288308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288309 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288308,G__288309) : tailrecursion.hoplon.span.call(null,G__288308,G__288309));
})();
var G__288240 = ") (";
var G__288241 = (function (){var G__288310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288311 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288310,G__288311) : tailrecursion.hoplon.span.call(null,G__288310,G__288311));
})();
var G__288242 = (function (){var G__288312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288313 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288312,G__288313) : tailrecursion.hoplon.span.call(null,G__288312,G__288313));
})();
var G__288243 = " ";
var G__288244 = (function (){var G__288314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288315 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288314,G__288315) : tailrecursion.hoplon.span.call(null,G__288314,G__288315));
})();
var G__288245 = ") (";
var G__288246 = (function (){var G__288316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288317 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288316,G__288317) : tailrecursion.hoplon.span.call(null,G__288316,G__288317));
})();
var G__288247 = (function (){var G__288318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288319 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288318,G__288319) : tailrecursion.hoplon.span.call(null,G__288318,G__288319));
})();
var G__288248 = " ";
var G__288249 = (function (){var G__288320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288321 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288320,G__288321) : tailrecursion.hoplon.span.call(null,G__288320,G__288321));
})();
var G__288250 = ")) ";
var G__288251 = (function (){var G__288322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288323 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288322,G__288323) : tailrecursion.hoplon.span.call(null,G__288322,G__288323));
})();
var G__288252 = "\n        (";
var G__288253 = (function (){var G__288324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288325 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288324,G__288325) : tailrecursion.hoplon.span.call(null,G__288324,G__288325));
})();
var G__288254 = "(";
var G__288255 = (function (){var G__288326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288327 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288326,G__288327) : tailrecursion.hoplon.span.call(null,G__288326,G__288327));
})();
var G__288256 = (function (){var G__288328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288329 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288328,G__288329) : tailrecursion.hoplon.span.call(null,G__288328,G__288329));
})();
var G__288257 = " ";
var G__288258 = (function (){var G__288330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288331 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288330,G__288331) : tailrecursion.hoplon.span.call(null,G__288330,G__288331));
})();
var G__288259 = ") (";
var G__288260 = (function (){var G__288332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288333 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288332,G__288333) : tailrecursion.hoplon.span.call(null,G__288332,G__288333));
})();
var G__288261 = (function (){var G__288334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288335 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288334,G__288335) : tailrecursion.hoplon.span.call(null,G__288334,G__288335));
})();
var G__288262 = " ";
var G__288263 = (function (){var G__288336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288337 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288336,G__288337) : tailrecursion.hoplon.span.call(null,G__288336,G__288337));
})();
var G__288264 = ")) ";
var G__288265 = (function (){var G__288338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288339 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288338,G__288339) : tailrecursion.hoplon.span.call(null,G__288338,G__288339));
})();
var G__288266 = "\n        ";
var G__288267 = (function (){var G__288340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288341 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288340,G__288341) : tailrecursion.hoplon.span.call(null,G__288340,G__288341));
})();
var G__288268 = " (";
var G__288269 = (function (){var G__288342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288343 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288342,G__288343) : tailrecursion.hoplon.span.call(null,G__288342,G__288343));
})();
var G__288270 = "(";
var G__288271 = (function (){var G__288344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288345 = "pascal";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288344,G__288345) : tailrecursion.hoplon.span.call(null,G__288344,G__288345));
})();
var G__288272 = " (";
var G__288273 = (function (){var G__288346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288347 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288346,G__288347) : tailrecursion.hoplon.span.call(null,G__288346,G__288347));
})();
var G__288274 = (function (){var G__288348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288349 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288348,G__288349) : tailrecursion.hoplon.span.call(null,G__288348,G__288349));
})();
var G__288275 = " ";
var G__288276 = (function (){var G__288350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288351 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288350,G__288351) : tailrecursion.hoplon.span.call(null,G__288350,G__288351));
})();
var G__288277 = ") (";
var G__288278 = (function (){var G__288352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288353 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288352,G__288353) : tailrecursion.hoplon.span.call(null,G__288352,G__288353));
})();
var G__288279 = (function (){var G__288354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288355 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288354,G__288355) : tailrecursion.hoplon.span.call(null,G__288354,G__288355));
})();
var G__288280 = " ";
var G__288281 = (function (){var G__288356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288357 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288356,G__288357) : tailrecursion.hoplon.span.call(null,G__288356,G__288357));
})();
var G__288282 = "))\n                 (";
var G__288283 = (function (){var G__288358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288359 = "pascal";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288358,G__288359) : tailrecursion.hoplon.span.call(null,G__288358,G__288359));
})();
var G__288284 = " (";
var G__288285 = (function (){var G__288360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288361 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288360,G__288361) : tailrecursion.hoplon.span.call(null,G__288360,G__288361));
})();
var G__288286 = (function (){var G__288362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288363 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288362,G__288363) : tailrecursion.hoplon.span.call(null,G__288362,G__288363));
})();
var G__288287 = " ";
var G__288288 = (function (){var G__288364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288365 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288364,G__288365) : tailrecursion.hoplon.span.call(null,G__288364,G__288365));
})();
var G__288289 = ") ";
var G__288290 = (function (){var G__288366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288367 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288366,G__288367) : tailrecursion.hoplon.span.call(null,G__288366,G__288367));
})();
var G__288291 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69(G__288223,G__288224,G__288225,G__288226,G__288227,G__288228,G__288229,G__288230,G__288231,G__288232,G__288233,G__288234,G__288235,G__288236,G__288237,G__288238,G__288239,G__288240,G__288241,G__288242,G__288243,G__288244,G__288245,G__288246,G__288247,G__288248,G__288249,G__288250,G__288251,G__288252,G__288253,G__288254,G__288255,G__288256,G__288257,G__288258,G__288259,G__288260,G__288261,G__288262,G__288263,G__288264,G__288265,G__288266,G__288267,G__288268,G__288269,G__288270,G__288271,G__288272,G__288273,G__288274,G__288275,G__288276,G__288277,G__288278,G__288279,G__288280,G__288281,G__288282,G__288283,G__288284,G__288285,G__288286,G__288287,G__288288,G__288289,G__288290,G__288291) : tailrecursion.hoplon.pre.call(null,G__288223,G__288224,G__288225,G__288226,G__288227,G__288228,G__288229,G__288230,G__288231,G__288232,G__288233,G__288234,G__288235,G__288236,G__288237,G__288238,G__288239,G__288240,G__288241,G__288242,G__288243,G__288244,G__288245,G__288246,G__288247,G__288248,G__288249,G__288250,G__288251,G__288252,G__288253,G__288254,G__288255,G__288256,G__288257,G__288258,G__288259,G__288260,G__288261,G__288262,G__288263,G__288264,G__288265,G__288266,G__288267,G__288268,G__288269,G__288270,G__288271,G__288272,G__288273,G__288274,G__288275,G__288276,G__288277,G__288278,G__288279,G__288280,G__288281,G__288282,G__288283,G__288284,G__288285,G__288286,G__288287,G__288288,G__288289,G__288290,G__288291));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__288221,G__288222) : tailrecursion.hoplon.div.call(null,G__288221,G__288222));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__288220) : tailrecursion.hoplon.div.call(null,G__288220));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288072;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288071;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288070;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288069;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(13)], null),(function (){var _STAR_references_STAR_288368 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288369 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288370 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288371 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288372 = cljs.core.PersistentArrayMap.EMPTY;
var G__288373 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Prove that \\(Fib(n)\\) is the closest integer to \\(\\phi^n/\\sqrt5\\), where \\(\\phi=\\left(1+\\sqrt5\\right)/2\\). Hint: let \\(\\psi=\\left(1-\\sqrt5\\right)/2\\) Use induction and the definition of the Fibonacci numbers (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/ch/1/sect/2/sub/2",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0)),") to prove that \\(Fib(n)=\\left(\\phi^n-\\psi^n\\right)/\\sqrt5\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288372,G__288373) : tailrecursion.hoplon.markdown.para_node.call(null,G__288372,G__288373));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288371;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288370;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288369;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288368;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_288374 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288375 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288376 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288377 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 21, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288378 = cljs.core.PersistentArrayMap.EMPTY;
var G__288379 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__288380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__288381 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__288380,G__288381) : tailrecursion.hoplon.markdown.simple_node.call(null,G__288380,G__288381));
})(),"s pick a natural number \\(n\\) and state our inductive hypothesis:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288378,G__288379) : tailrecursion.hoplon.markdown.para_node.call(null,G__288378,G__288379));
})(),(function (){var G__288382 = cljs.core.PersistentArrayMap.EMPTY;
var G__288383 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Assume that for any \\(k< n\\), \\(Fib(k)=\\left(\\phi^k-\\psi^k\\right)/\\sqrt5\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288382,G__288383) : tailrecursion.hoplon.markdown.para_node.call(null,G__288382,G__288383));
})(),(function (){var G__288384 = cljs.core.PersistentArrayMap.EMPTY;
var G__288385 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case 1: \\(n=0\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288384,G__288385) : tailrecursion.hoplon.markdown.para_node.call(null,G__288384,G__288385));
})(),(function (){var G__288386 = cljs.core.PersistentArrayMap.EMPTY;
var G__288387 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then note: \\( Fib(0)= 0 =\\frac{1-1}{\\sqrt5}=\\frac{\\phi^0-\\psi^0}{\\sqrt5}\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288386,G__288387) : tailrecursion.hoplon.markdown.para_node.call(null,G__288386,G__288387));
})(),(function (){var G__288388 = cljs.core.PersistentArrayMap.EMPTY;
var G__288389 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case 2: \\( n = 1\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288388,G__288389) : tailrecursion.hoplon.markdown.para_node.call(null,G__288388,G__288389));
})(),(function (){var G__288390 = cljs.core.PersistentArrayMap.EMPTY;
var G__288391 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then \\(\\frac{\\phi^1-\\psi^1}{\\sqrt5} =\\frac{\\left(\\frac{1+\\sqrt5}{2}\\right)^1-\\left(\\frac{1-\\sqrt5}{2}\\right)^1}{\\sqrt5} =\\frac{\\sqrt5}{\\sqrt5}= 1= Fib(1)\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288390,G__288391) : tailrecursion.hoplon.markdown.para_node.call(null,G__288390,G__288391));
})(),(function (){var G__288392 = cljs.core.PersistentArrayMap.EMPTY;
var G__288393 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Our last case is if \\(n > 1\\):"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288392,G__288393) : tailrecursion.hoplon.markdown.para_node.call(null,G__288392,G__288393));
})(),(function (){var G__288394 = cljs.core.PersistentArrayMap.EMPTY;
var G__288395 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then, $$\\frac{\\phi^n-\\psi^n}{\\sqrt5} =\\frac{\\phi^{n-2}\\phi^2-\\psi^{n-2}\\psi^2}{\\sqrt5}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288394,G__288395) : tailrecursion.hoplon.markdown.para_node.call(null,G__288394,G__288395));
})(),(function (){var G__288396 = cljs.core.PersistentArrayMap.EMPTY;
var G__288397 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=\\frac{\\phi^{n-2}\\left(\\frac{1+\\sqrt5}{2}\\right)^2-\\psi^{n-2}\\left(\\frac{1-\\sqrt5}{2}\\right)^2}{\\sqrt5}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288396,G__288397) : tailrecursion.hoplon.markdown.para_node.call(null,G__288396,G__288397));
})(),(function (){var G__288398 = cljs.core.PersistentArrayMap.EMPTY;
var G__288399 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=\\frac{\\phi^{n-2}\\left(\\frac{6+2\\sqrt5}{4}\\right)-\\psi^{n-2}\\left(\\frac{6-2\\sqrt5}{4}\\right)}{\\sqrt5}$$ "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288398,G__288399) : tailrecursion.hoplon.markdown.para_node.call(null,G__288398,G__288399));
})(),(function (){var G__288400 = cljs.core.PersistentArrayMap.EMPTY;
var G__288401 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=\\frac{\\phi^{n-2}-\\psi^{n-2}}{\\sqrt5}+\\frac{\\phi^{n-2}\\left(\\frac{1+\\sqrt5}{2}\\right)-\\psi^{n-2}\\left(\\frac{1-2\\sqrt5}{2}\\right)}{\\sqrt5}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288400,G__288401) : tailrecursion.hoplon.markdown.para_node.call(null,G__288400,G__288401));
})(),(function (){var G__288402 = cljs.core.PersistentArrayMap.EMPTY;
var G__288403 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=Fib(n-2)+\\frac{\\phi^{n-1}-\\psi^{n-1}}{\\sqrt5}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288402,G__288403) : tailrecursion.hoplon.markdown.para_node.call(null,G__288402,G__288403));
})(),(function (){var G__288404 = cljs.core.PersistentArrayMap.EMPTY;
var G__288405 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=Fib(n-2)+Fib(n-1)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288404,G__288405) : tailrecursion.hoplon.markdown.para_node.call(null,G__288404,G__288405));
})(),(function (){var G__288406 = cljs.core.PersistentArrayMap.EMPTY;
var G__288407 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=Fib(n)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288406,G__288407) : tailrecursion.hoplon.markdown.para_node.call(null,G__288406,G__288407));
})(),(function (){var G__288408 = cljs.core.PersistentArrayMap.EMPTY;
var G__288409 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, in general, \\(Fib(n)=\\frac{\\phi^n-\\psi^n}{\\sqrt5}\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288408,G__288409) : tailrecursion.hoplon.markdown.para_node.call(null,G__288408,G__288409));
})(),(function (){var G__288410 = cljs.core.PersistentArrayMap.EMPTY;
var G__288411 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now, to prove that \\(Fib(n)\\) is the integer closest to \\(\\phi^n/\\sqrt5\\). First we note that since \\(\\psi^2< 0.4\\), \\(\\sqrt5>1\\) and \\(\\frac{\\phi^n-\\psi^n}{\\sqrt5}\\) is an integer, we know for any \\(n\\geq2\\), "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288410,G__288411) : tailrecursion.hoplon.markdown.para_node.call(null,G__288410,G__288411));
})(),(function (){var G__288412 = cljs.core.PersistentArrayMap.EMPTY;
var G__288413 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\left|\\frac{\\phi^n}{\\sqrt5}-Fib(n)\\right| =\\left|\\frac{\\phi^n}{\\sqrt5}-\\frac{\\phi^n-\\psi^n}{\\sqrt5}\\right| =\\left|\\frac{\\psi^n}{\\sqrt5}\\right|< 0.4$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288412,G__288413) : tailrecursion.hoplon.markdown.para_node.call(null,G__288412,G__288413));
})(),(function (){var G__288414 = cljs.core.PersistentArrayMap.EMPTY;
var G__288415 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So that the closest integer to \\(\\frac{\\phi^n}{\\sqrt5}\\) must be \\(Fib(n)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288414,G__288415) : tailrecursion.hoplon.markdown.para_node.call(null,G__288414,G__288415));
})(),(function (){var G__288416 = cljs.core.PersistentArrayMap.EMPTY;
var G__288417 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for when \\(n< 2\\), we can check one by one."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288416,G__288417) : tailrecursion.hoplon.markdown.para_node.call(null,G__288416,G__288417));
})(),(function (){var G__288418 = cljs.core.PersistentArrayMap.EMPTY;
var G__288419 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case \\(n = 0\\): \\(\\frac{1}{\\sqrt5}< 0.45\\), so that the closest integer is 0 (\\(Fib(0)\\))."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288418,G__288419) : tailrecursion.hoplon.markdown.para_node.call(null,G__288418,G__288419));
})(),(function (){var G__288420 = cljs.core.PersistentArrayMap.EMPTY;
var G__288421 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case \\(n=1\\): \\(\\frac{\\frac{1+\\sqrt5}{2}}{\\sqrt5}\\approx0.72\\), so that the closest integer is \\(Fib(1)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288420,G__288421) : tailrecursion.hoplon.markdown.para_node.call(null,G__288420,G__288421));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288377;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288376;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288375;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288374;
}})()], 0))], 0))], 0));
var G__279814 = "";
var G__279815 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Orders of Growth"], null),(function (){var _STAR_references_STAR_288422 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288423 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288424 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288425 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288426 = cljs.core.PersistentArrayMap.EMPTY;
var G__288427 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The previous examples illustrate that processes can differ considerably in the rates at which they consume computational resources. One convenient way to describe this difference is to use the notion of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["order of growth"], null)], 0))," to obtain a gross measure of the resources required by a process as the inputs become larger."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288426,G__288427) : tailrecursion.hoplon.markdown.para_node.call(null,G__288426,G__288427));
})(),(function (){var G__288428 = cljs.core.PersistentArrayMap.EMPTY;
var G__288429 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let \\(n\\) be a parameter that measures the size of the problem, and let \\(R(n)\\) be the amount of resources the process requires for a problem of size \\(n\\). In our previous examples we took \\(n\\) to be the number for which a given function is to be computed, but there are other possibilities. For instance, if our goal is to compute an approximation to the square root of a number, we might take \\(n\\) to be the number of digits accuracy required. For matrix multiplication we might take \\(n\\) to be the number of rows in the matrices. In general there are a number of properties of the problem with respect to which it will be desirable to analyze a given process. Similarly, \\(R(n)\\) might measure the number of internal storage registers used, the number of elementary machine operations performed, and so on. In computers that do only a fixed number of operations at a time, the time required will be proportional to the number of elementary machine operations performed."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288428,G__288429) : tailrecursion.hoplon.markdown.para_node.call(null,G__288428,G__288429));
})(),(function (){var G__288430 = cljs.core.PersistentArrayMap.EMPTY;
var G__288431 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We say \\(R(n)\\) has order of growth \\(\\Theta(f(n))\\), written \\(R(n)=\\Theta(f(n))\\) (pronounced ",(function (){var G__288432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__288433 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["theta of \\(f(n)\\)"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__288432,G__288433) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__288432,G__288433));
})(),"), if there are positive constants \\(k_1\\) and \\(k_2\\) independent of \\(n\\) such that"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288430,G__288431) : tailrecursion.hoplon.markdown.para_node.call(null,G__288430,G__288431));
})(),(function (){var G__288434 = cljs.core.PersistentArrayMap.EMPTY;
var G__288435 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$k_1f(n)\\leq R(n)\\leq k_2f(n)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288434,G__288435) : tailrecursion.hoplon.markdown.para_node.call(null,G__288434,G__288435));
})(),(function (){var G__288436 = cljs.core.PersistentArrayMap.EMPTY;
var G__288437 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["for any sufficiently large value of \\(n\\). (In other words, for large \\(n\\), the value of \\(R(n)\\) is sandwiched between \\(k_1f(n)\\) and \\(k_2f(n)\\).)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288436,G__288437) : tailrecursion.hoplon.markdown.para_node.call(null,G__288436,G__288437));
})(),(function (){var G__288438 = cljs.core.PersistentArrayMap.EMPTY;
var G__288439 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For instance, with the linear recursive process for computing factorial described in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/ch/1/sect/2/sub/1/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.1"], null)], 0))," the number of steps grows proportionally to the input \\(n\\). Thus, the steps required for this process grows as \\(\\Theta(n)\\). We also saw that the space required grows as \\(\\Theta(n)\\). For the iterative factorial, the number of steps is still \\(\\Theta(n)\\) but the space is \\(\\Theta(1)\\) ",(function (){var G__288440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__288441 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__288440,G__288441) : tailrecursion.hoplon.markdown.simple_node.call(null,G__288440,G__288441));
})()," that is, constant.",(function (){var G__288442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__288443 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["These statements mask a great deal of oversimplification. For instance, if we count process steps as ",(function (){var G__288444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__288445 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["machine operations"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__288444,G__288445) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__288444,G__288445));
})()," we are making the assumption that the number of machine operations needed to perform, say, a multiplication is independent of the size of the numbers to be multiplied, which is false if the numbers are sufficiently large. Similar remarks hold for the estimates of space. Like the design and description of a process, the analysis of a process can be carried out at various levels of abstraction."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__288442,G__288443) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__288442,G__288443));
})()," The tree-recursive Fibonacci computation requires \\(\\Theta(\\phi^n)\\) steps and space \\(\\Theta(n)\\), where \\(\\phi\\) is the golden ratio described in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/ch/1/sect/2/sub/2/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288438,G__288439) : tailrecursion.hoplon.markdown.para_node.call(null,G__288438,G__288439));
})(),(function (){var G__288446 = cljs.core.PersistentArrayMap.EMPTY;
var G__288447 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Orders of growth provide only a crude description of the behavior of a process. For example, a process requiring \\(n^2\\) steps and a process requiring \\(1000n^2\\) steps and a process requiring \\(3n^2+10n+17\\) steps all have \\(\\Theta(n^2)\\) order of growth. On the other hand, order of growth provides a useful indication of how we may expect the behavior of the process to change as we change the size of the problem. For a \\(\\Theta(n)\\) (linear) process, doubling the size will roughly double the amount of resources used. For an exponential process, each increment in problem size will multiply the resource utilization by a constant factor. In the remainder of section 1.2 we will examine two algorithms whose order of growth is logarithmic, so that doubling the problem size increases the resource requirment by a constant amount."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288446,G__288447) : tailrecursion.hoplon.markdown.para_node.call(null,G__288446,G__288447));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288425;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288424;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288423;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288422;
}})()], 0));
var G__279816 = "";
var G__279817 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"14-15"], null),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(14)], null),(function (){var _STAR_references_STAR_288448 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288449 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288450 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288451 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288452 = cljs.core.PersistentArrayMap.EMPTY;
var G__288453 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Draw the tree illustrating the process generated by the ",(function (){var G__288454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"count-change"], null);
var G__288455 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__288454,G__288455) : tailrecursion.hoplon.markdown.code_node.call(null,G__288454,G__288455));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/ch/1/sect/2/sub/2/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0))," in making change for 11 cents. What are the orders of growth of the space and number of steps used by this process as the amount to be changed increases?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288452,G__288453) : tailrecursion.hoplon.markdown.para_node.call(null,G__288452,G__288453));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288451;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288450;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288449;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288448;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_288456 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288457 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288458 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288459 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288460 = cljs.core.PersistentArrayMap.EMPTY;
var G__288461 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Things will go here (once I get this LaTeX thing all sorted out)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288460,G__288461) : tailrecursion.hoplon.markdown.para_node.call(null,G__288460,G__288461));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288459;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288458;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288457;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288456;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(15)], null),(function (){var _STAR_references_STAR_288462 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288463 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288464 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288465 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288466 = cljs.core.PersistentArrayMap.EMPTY;
var G__288467 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The sine of an angle (specified in radians) can be computed by making use of the approximation \\(\\sin x\\approx x\\) if \\(x\\) is sufficiently small, and the trigonometric identity"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288466,G__288467) : tailrecursion.hoplon.markdown.para_node.call(null,G__288466,G__288467));
})(),(function (){var G__288468 = cljs.core.PersistentArrayMap.EMPTY;
var G__288469 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\sin x = 3\\sin\\frac{x}{3}-4\\sin^3\\frac{x}{3}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288468,G__288469) : tailrecursion.hoplon.markdown.para_node.call(null,G__288468,G__288469));
})(),(function (){var G__288470 = cljs.core.PersistentArrayMap.EMPTY;
var G__288471 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["to reduce the size of the argument of \\(\\sin\\). (For purposes of this exerise an angle is considered ",(function (){var G__288472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__288473 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sufficiently small"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__288472,G__288473) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__288472,G__288473));
})()," if its magnitude is not greater than 0.1 radians.) These ideas are incorporated in the following procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288470,G__288471) : tailrecursion.hoplon.markdown.para_node.call(null,G__288470,G__288471));
})(),(function (){var G__288603 = (function (){var G__288604 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__288605 = (function (){var G__288606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__288607 = "(";
var G__288608 = (function (){var G__288667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__288668 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288667,G__288668) : tailrecursion.hoplon.span.call(null,G__288667,G__288668));
})();
var G__288609 = (function (){var G__288669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288670 = "cub";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288669,G__288670) : tailrecursion.hoplon.span.call(null,G__288669,G__288670));
})();
var G__288610 = " [";
var G__288611 = (function (){var G__288671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288672 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288671,G__288672) : tailrecursion.hoplon.span.call(null,G__288671,G__288672));
})();
var G__288612 = "] (";
var G__288613 = (function (){var G__288673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288674 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288673,G__288674) : tailrecursion.hoplon.span.call(null,G__288673,G__288674));
})();
var G__288614 = (function (){var G__288675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288676 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288675,G__288676) : tailrecursion.hoplon.span.call(null,G__288675,G__288676));
})();
var G__288615 = " ";
var G__288616 = (function (){var G__288677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288678 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288677,G__288678) : tailrecursion.hoplon.span.call(null,G__288677,G__288678));
})();
var G__288617 = " ";
var G__288618 = (function (){var G__288679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288680 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288679,G__288680) : tailrecursion.hoplon.span.call(null,G__288679,G__288680));
})();
var G__288619 = "))\n(";
var G__288620 = (function (){var G__288681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__288682 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288681,G__288682) : tailrecursion.hoplon.span.call(null,G__288681,G__288682));
})();
var G__288621 = (function (){var G__288683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288684 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288683,G__288684) : tailrecursion.hoplon.span.call(null,G__288683,G__288684));
})();
var G__288622 = " [";
var G__288623 = (function (){var G__288685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288686 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288685,G__288686) : tailrecursion.hoplon.span.call(null,G__288685,G__288686));
})();
var G__288624 = "] (";
var G__288625 = (function (){var G__288687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288688 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288687,G__288688) : tailrecursion.hoplon.span.call(null,G__288687,G__288688));
})();
var G__288626 = "(";
var G__288627 = (function (){var G__288689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288690 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288689,G__288690) : tailrecursion.hoplon.span.call(null,G__288689,G__288690));
})();
var G__288628 = (function (){var G__288691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288692 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288691,G__288692) : tailrecursion.hoplon.span.call(null,G__288691,G__288692));
})();
var G__288629 = " ";
var G__288630 = (function (){var G__288693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288694 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288693,G__288694) : tailrecursion.hoplon.span.call(null,G__288693,G__288694));
})();
var G__288631 = ") (";
var G__288632 = (function (){var G__288695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288696 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288695,G__288696) : tailrecursion.hoplon.span.call(null,G__288695,G__288696));
})();
var G__288633 = (function (){var G__288697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288698 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288697,G__288698) : tailrecursion.hoplon.span.call(null,G__288697,G__288698));
})();
var G__288634 = " (";
var G__288635 = (function (){var G__288699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288700 = "cube";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288699,G__288700) : tailrecursion.hoplon.span.call(null,G__288699,G__288700));
})();
var G__288636 = " ";
var G__288637 = (function (){var G__288701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288702 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288701,G__288702) : tailrecursion.hoplon.span.call(null,G__288701,G__288702));
})();
var G__288638 = "))))\n(";
var G__288639 = (function (){var G__288703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__288704 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288703,G__288704) : tailrecursion.hoplon.span.call(null,G__288703,G__288704));
})();
var G__288640 = (function (){var G__288705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288706 = "sine";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288705,G__288706) : tailrecursion.hoplon.span.call(null,G__288705,G__288706));
})();
var G__288641 = " [";
var G__288642 = (function (){var G__288707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288708 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288707,G__288708) : tailrecursion.hoplon.span.call(null,G__288707,G__288708));
})();
var G__288643 = "]\n  (";
var G__288644 = (function (){var G__288709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__288710 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288709,G__288710) : tailrecursion.hoplon.span.call(null,G__288709,G__288710));
})();
var G__288645 = "(";
var G__288646 = (function (){var G__288711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288712 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288711,G__288712) : tailrecursion.hoplon.span.call(null,G__288711,G__288712));
})();
var G__288647 = "(";
var G__288648 = (function (){var G__288713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288714 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288713,G__288714) : tailrecursion.hoplon.span.call(null,G__288713,G__288714));
})();
var G__288649 = "(";
var G__288650 = (function (){var G__288715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288716 = "abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288715,G__288716) : tailrecursion.hoplon.span.call(null,G__288715,G__288716));
})();
var G__288651 = " ";
var G__288652 = (function (){var G__288717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288718 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288717,G__288718) : tailrecursion.hoplon.span.call(null,G__288717,G__288718));
})();
var G__288653 = ") ";
var G__288654 = (function (){var G__288719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288720 = "0.1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288719,G__288720) : tailrecursion.hoplon.span.call(null,G__288719,G__288720));
})();
var G__288655 = "))\n      ";
var G__288656 = (function (){var G__288721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288722 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288721,G__288722) : tailrecursion.hoplon.span.call(null,G__288721,G__288722));
})();
var G__288657 = "\n      (";
var G__288658 = (function (){var G__288723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288724 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288723,G__288724) : tailrecursion.hoplon.span.call(null,G__288723,G__288724));
})();
var G__288659 = " (";
var G__288660 = (function (){var G__288725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288726 = "sine";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288725,G__288726) : tailrecursion.hoplon.span.call(null,G__288725,G__288726));
})();
var G__288661 = " (";
var G__288662 = (function (){var G__288727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288728 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288727,G__288728) : tailrecursion.hoplon.span.call(null,G__288727,G__288728));
})();
var G__288663 = (function (){var G__288729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288730 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288729,G__288730) : tailrecursion.hoplon.span.call(null,G__288729,G__288730));
})();
var G__288664 = " ";
var G__288665 = (function (){var G__288731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288732 = "3.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288731,G__288732) : tailrecursion.hoplon.span.call(null,G__288731,G__288732));
})();
var G__288666 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61(G__288606,G__288607,G__288608,G__288609,G__288610,G__288611,G__288612,G__288613,G__288614,G__288615,G__288616,G__288617,G__288618,G__288619,G__288620,G__288621,G__288622,G__288623,G__288624,G__288625,G__288626,G__288627,G__288628,G__288629,G__288630,G__288631,G__288632,G__288633,G__288634,G__288635,G__288636,G__288637,G__288638,G__288639,G__288640,G__288641,G__288642,G__288643,G__288644,G__288645,G__288646,G__288647,G__288648,G__288649,G__288650,G__288651,G__288652,G__288653,G__288654,G__288655,G__288656,G__288657,G__288658,G__288659,G__288660,G__288661,G__288662,G__288663,G__288664,G__288665,G__288666) : tailrecursion.hoplon.pre.call(null,G__288606,G__288607,G__288608,G__288609,G__288610,G__288611,G__288612,G__288613,G__288614,G__288615,G__288616,G__288617,G__288618,G__288619,G__288620,G__288621,G__288622,G__288623,G__288624,G__288625,G__288626,G__288627,G__288628,G__288629,G__288630,G__288631,G__288632,G__288633,G__288634,G__288635,G__288636,G__288637,G__288638,G__288639,G__288640,G__288641,G__288642,G__288643,G__288644,G__288645,G__288646,G__288647,G__288648,G__288649,G__288650,G__288651,G__288652,G__288653,G__288654,G__288655,G__288656,G__288657,G__288658,G__288659,G__288660,G__288661,G__288662,G__288663,G__288664,G__288665,G__288666));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__288604,G__288605) : tailrecursion.hoplon.div.call(null,G__288604,G__288605));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__288603) : tailrecursion.hoplon.div.call(null,G__288603));
})(),(function (){var G__288733 = cljs.core.PersistentArrayMap.EMPTY;
var G__288734 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a. How many times is the procedure \\(p\\) applied when ",(function (){var G__288735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(sine\n12.15)"], null);
var G__288736 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__288735,G__288736) : tailrecursion.hoplon.markdown.code_node.call(null,G__288735,G__288736));
})()," is evaluated?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288733,G__288734) : tailrecursion.hoplon.markdown.para_node.call(null,G__288733,G__288734));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288465;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288464;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288463;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288462;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_288737 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288738 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288739 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288740 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288741 = cljs.core.PersistentArrayMap.EMPTY;
var G__288742 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To do this we first realize that each iteration (until the angle \\(\\theta\\) is less than or equal to 0.1) divides the angle by three. Since this is applicative order, we know that each iteration will call ",(function (){var G__288743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"p"], null);
var G__288744 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__288743,G__288744) : tailrecursion.hoplon.markdown.code_node.call(null,G__288743,G__288744));
})()," exactly once. So this reduces to solving the equation,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288741,G__288742) : tailrecursion.hoplon.markdown.para_node.call(null,G__288741,G__288742));
})(),(function (){var G__288745 = cljs.core.PersistentArrayMap.EMPTY;
var G__288746 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$ \\frac{12.15}{3^n}\\leq 0.1 \\iff n\\geq 4.37",(function (){var G__288747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__288748 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__288747,G__288748) : tailrecursion.hoplon.markdown.simple_node.call(null,G__288747,G__288748));
})()," $$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288745,G__288746) : tailrecursion.hoplon.markdown.para_node.call(null,G__288745,G__288746));
})(),(function (){var G__288749 = cljs.core.PersistentArrayMap.EMPTY;
var G__288750 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since we",(function (){var G__288751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__288752 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__288751,G__288752) : tailrecursion.hoplon.markdown.simple_node.call(null,G__288751,G__288752));
})(),"re looking for an integer, we need \\(n=5\\). Hence, ",(function (){var G__288753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"p"], null);
var G__288754 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__288753,G__288754) : tailrecursion.hoplon.markdown.code_node.call(null,G__288753,G__288754));
})()," will be applied 5 times."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288749,G__288750) : tailrecursion.hoplon.markdown.para_node.call(null,G__288749,G__288750));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288740;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288739;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288738;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288737;
}})()], 0)),"",(function (){var _STAR_references_STAR_288755 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288756 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288757 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288758 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288759 = cljs.core.PersistentArrayMap.EMPTY;
var G__288760 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b. What is the order of growth in space and number of steps (as a function of \\(a\\)) used by the process generated by the ",(function (){var G__288761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sine"], null);
var G__288762 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__288761,G__288762) : tailrecursion.hoplon.markdown.code_node.call(null,G__288761,G__288762));
})()," procedure when ",(function (){var G__288763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(sine a)"], null);
var G__288764 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__288763,G__288764) : tailrecursion.hoplon.markdown.code_node.call(null,G__288763,G__288764));
})()," is evaluated?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288759,G__288760) : tailrecursion.hoplon.markdown.para_node.call(null,G__288759,G__288760));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288758;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288757;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288756;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288755;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_288765 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288766 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288767 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288768 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288769 = cljs.core.PersistentArrayMap.EMPTY;
var G__288770 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One could realize, just from noting that each step divides the argument by 3, that the order of growth in the number of steps required is logarithmic (doubling the argument only adds at most one more iteration, and hence a fixed number of steps)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288769,G__288770) : tailrecursion.hoplon.markdown.para_node.call(null,G__288769,G__288770));
})(),(function (){var G__288771 = cljs.core.PersistentArrayMap.EMPTY;
var G__288772 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As far as in the space required, it is also logarithmic because every time you triple the argument, you only add one more iteration."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288771,G__288772) : tailrecursion.hoplon.markdown.para_node.call(null,G__288771,G__288772));
})(),(function (){var G__288773 = cljs.core.PersistentArrayMap.EMPTY;
var G__288774 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So both have \\(\\Theta(\\log x)\\) order of growth."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288773,G__288774) : tailrecursion.hoplon.markdown.para_node.call(null,G__288773,G__288774));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288768;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288767;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288766;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288765;
}})()], 0))], 0))], 0));
var G__279818 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Exponentiation"], null),(function (){var _STAR_references_STAR_288775 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288776 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288777 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288778 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288779 = cljs.core.PersistentArrayMap.EMPTY;
var G__288780 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the problem of computing the exponential of a given number. We would like a procedure that takes as arguments a base \\(b\\) and a positive integer exponent \\(n\\) and computes \\(b^n\\). One way to do this is via the recursive definition:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288779,G__288780) : tailrecursion.hoplon.markdown.para_node.call(null,G__288779,G__288780));
})(),(function (){var G__288781 = cljs.core.PersistentArrayMap.EMPTY;
var G__288782 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}b^n =& b\\cdot b^{n-1} \\\\ b^0=&1 \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288781,G__288782) : tailrecursion.hoplon.markdown.para_node.call(null,G__288781,G__288782));
})(),(function (){var G__288783 = cljs.core.PersistentArrayMap.EMPTY;
var G__288784 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Which translates readily into the procedure"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288783,G__288784) : tailrecursion.hoplon.markdown.para_node.call(null,G__288783,G__288784));
})(),(function (){var G__288850 = (function (){var G__288851 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__288852 = (function (){var G__288853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__288854 = "(";
var G__288855 = (function (){var G__288884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288885 = "define";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288884,G__288885) : tailrecursion.hoplon.span.call(null,G__288884,G__288885));
})();
var G__288856 = " ";
var G__288857 = (function (){var G__288886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288887 = "expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288886,G__288887) : tailrecursion.hoplon.span.call(null,G__288886,G__288887));
})();
var G__288858 = " [";
var G__288859 = (function (){var G__288888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288889 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288888,G__288889) : tailrecursion.hoplon.span.call(null,G__288888,G__288889));
})();
var G__288860 = " ";
var G__288861 = (function (){var G__288890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288891 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288890,G__288891) : tailrecursion.hoplon.span.call(null,G__288890,G__288891));
})();
var G__288862 = "]\n  (";
var G__288863 = (function (){var G__288892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__288893 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288892,G__288893) : tailrecursion.hoplon.span.call(null,G__288892,G__288893));
})();
var G__288864 = "(";
var G__288865 = (function (){var G__288894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288895 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288894,G__288895) : tailrecursion.hoplon.span.call(null,G__288894,G__288895));
})();
var G__288866 = (function (){var G__288896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288897 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288896,G__288897) : tailrecursion.hoplon.span.call(null,G__288896,G__288897));
})();
var G__288867 = " ";
var G__288868 = (function (){var G__288898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288899 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288898,G__288899) : tailrecursion.hoplon.span.call(null,G__288898,G__288899));
})();
var G__288869 = ")\n      ";
var G__288870 = (function (){var G__288900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288901 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288900,G__288901) : tailrecursion.hoplon.span.call(null,G__288900,G__288901));
})();
var G__288871 = "\n      (";
var G__288872 = (function (){var G__288902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288903 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288902,G__288903) : tailrecursion.hoplon.span.call(null,G__288902,G__288903));
})();
var G__288873 = (function (){var G__288904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288905 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288904,G__288905) : tailrecursion.hoplon.span.call(null,G__288904,G__288905));
})();
var G__288874 = " (";
var G__288875 = (function (){var G__288906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288907 = "expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288906,G__288907) : tailrecursion.hoplon.span.call(null,G__288906,G__288907));
})();
var G__288876 = " ";
var G__288877 = (function (){var G__288908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288909 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288908,G__288909) : tailrecursion.hoplon.span.call(null,G__288908,G__288909));
})();
var G__288878 = " (";
var G__288879 = (function (){var G__288910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288911 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288910,G__288911) : tailrecursion.hoplon.span.call(null,G__288910,G__288911));
})();
var G__288880 = (function (){var G__288912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288913 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288912,G__288913) : tailrecursion.hoplon.span.call(null,G__288912,G__288913));
})();
var G__288881 = " ";
var G__288882 = (function (){var G__288914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288915 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288914,G__288915) : tailrecursion.hoplon.span.call(null,G__288914,G__288915));
})();
var G__288883 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__288853,G__288854,G__288855,G__288856,G__288857,G__288858,G__288859,G__288860,G__288861,G__288862,G__288863,G__288864,G__288865,G__288866,G__288867,G__288868,G__288869,G__288870,G__288871,G__288872,G__288873,G__288874,G__288875,G__288876,G__288877,G__288878,G__288879,G__288880,G__288881,G__288882,G__288883) : tailrecursion.hoplon.pre.call(null,G__288853,G__288854,G__288855,G__288856,G__288857,G__288858,G__288859,G__288860,G__288861,G__288862,G__288863,G__288864,G__288865,G__288866,G__288867,G__288868,G__288869,G__288870,G__288871,G__288872,G__288873,G__288874,G__288875,G__288876,G__288877,G__288878,G__288879,G__288880,G__288881,G__288882,G__288883));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__288851,G__288852) : tailrecursion.hoplon.div.call(null,G__288851,G__288852));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__288850) : tailrecursion.hoplon.div.call(null,G__288850));
})(),(function (){var G__288916 = cljs.core.PersistentArrayMap.EMPTY;
var G__288917 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This is a linear recursive process, which requires \\(\\Theta(n)\\) steps and \\(\\Theta(n)\\) space. Just as with factorial, we can readily formulate an equivalent linear iteration:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288916,G__288917) : tailrecursion.hoplon.markdown.para_node.call(null,G__288916,G__288917));
})(),(function (){var G__288953 = (function (){var G__288954 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__288955 = (function (){var G__288956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__288957 = "(";
var G__288958 = (function (){var G__288973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__288974 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288973,G__288974) : tailrecursion.hoplon.span.call(null,G__288973,G__288974));
})();
var G__288959 = (function (){var G__288975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288976 = "expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288975,G__288976) : tailrecursion.hoplon.span.call(null,G__288975,G__288976));
})();
var G__288960 = " [";
var G__288961 = (function (){var G__288977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288978 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288977,G__288978) : tailrecursion.hoplon.span.call(null,G__288977,G__288978));
})();
var G__288962 = " ";
var G__288963 = (function (){var G__288979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288980 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288979,G__288980) : tailrecursion.hoplon.span.call(null,G__288979,G__288980));
})();
var G__288964 = "]\n  (";
var G__288965 = (function (){var G__288981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288982 = "expt-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288981,G__288982) : tailrecursion.hoplon.span.call(null,G__288981,G__288982));
})();
var G__288966 = " ";
var G__288967 = (function (){var G__288983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288984 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288983,G__288984) : tailrecursion.hoplon.span.call(null,G__288983,G__288984));
})();
var G__288968 = " ";
var G__288969 = (function (){var G__288985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288986 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288985,G__288986) : tailrecursion.hoplon.span.call(null,G__288985,G__288986));
})();
var G__288970 = " ";
var G__288971 = (function (){var G__288987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288988 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288987,G__288988) : tailrecursion.hoplon.span.call(null,G__288987,G__288988));
})();
var G__288972 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__288956,G__288957,G__288958,G__288959,G__288960,G__288961,G__288962,G__288963,G__288964,G__288965,G__288966,G__288967,G__288968,G__288969,G__288970,G__288971,G__288972) : tailrecursion.hoplon.pre.call(null,G__288956,G__288957,G__288958,G__288959,G__288960,G__288961,G__288962,G__288963,G__288964,G__288965,G__288966,G__288967,G__288968,G__288969,G__288970,G__288971,G__288972));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__288954,G__288955) : tailrecursion.hoplon.div.call(null,G__288954,G__288955));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__288953) : tailrecursion.hoplon.div.call(null,G__288953));
})(),(function (){var G__288989 = cljs.core.PersistentArrayMap.EMPTY;
var G__288990 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["where"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288989,G__288990) : tailrecursion.hoplon.markdown.para_node.call(null,G__288989,G__288990));
})(),(function (){var G__289063 = (function (){var G__289064 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__289065 = (function (){var G__289066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__289067 = "(";
var G__289068 = (function (){var G__289100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289101 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289100,G__289101) : tailrecursion.hoplon.span.call(null,G__289100,G__289101));
})();
var G__289069 = (function (){var G__289102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289103 = "expt-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289102,G__289103) : tailrecursion.hoplon.span.call(null,G__289102,G__289103));
})();
var G__289070 = " [";
var G__289071 = (function (){var G__289104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289105 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289104,G__289105) : tailrecursion.hoplon.span.call(null,G__289104,G__289105));
})();
var G__289072 = " ";
var G__289073 = (function (){var G__289106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289107 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289106,G__289107) : tailrecursion.hoplon.span.call(null,G__289106,G__289107));
})();
var G__289074 = " ";
var G__289075 = (function (){var G__289108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289109 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289108,G__289109) : tailrecursion.hoplon.span.call(null,G__289108,G__289109));
})();
var G__289076 = "]\n  (";
var G__289077 = (function (){var G__289110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289111 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289110,G__289111) : tailrecursion.hoplon.span.call(null,G__289110,G__289111));
})();
var G__289078 = "(";
var G__289079 = (function (){var G__289112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289113 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289112,G__289113) : tailrecursion.hoplon.span.call(null,G__289112,G__289113));
})();
var G__289080 = (function (){var G__289114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289115 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289114,G__289115) : tailrecursion.hoplon.span.call(null,G__289114,G__289115));
})();
var G__289081 = " ";
var G__289082 = (function (){var G__289116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289117 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289116,G__289117) : tailrecursion.hoplon.span.call(null,G__289116,G__289117));
})();
var G__289083 = ")\n      ";
var G__289084 = (function (){var G__289118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289119 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289118,G__289119) : tailrecursion.hoplon.span.call(null,G__289118,G__289119));
})();
var G__289085 = "\n      (";
var G__289086 = (function (){var G__289120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289121 = "expt-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289120,G__289121) : tailrecursion.hoplon.span.call(null,G__289120,G__289121));
})();
var G__289087 = " ";
var G__289088 = (function (){var G__289122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289123 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289122,G__289123) : tailrecursion.hoplon.span.call(null,G__289122,G__289123));
})();
var G__289089 = "\n                 (";
var G__289090 = (function (){var G__289124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289125 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289124,G__289125) : tailrecursion.hoplon.span.call(null,G__289124,G__289125));
})();
var G__289091 = (function (){var G__289126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289127 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289126,G__289127) : tailrecursion.hoplon.span.call(null,G__289126,G__289127));
})();
var G__289092 = " ";
var G__289093 = (function (){var G__289128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289129 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289128,G__289129) : tailrecursion.hoplon.span.call(null,G__289128,G__289129));
})();
var G__289094 = ")\n                 (";
var G__289095 = (function (){var G__289130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289131 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289130,G__289131) : tailrecursion.hoplon.span.call(null,G__289130,G__289131));
})();
var G__289096 = (function (){var G__289132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289133 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289132,G__289133) : tailrecursion.hoplon.span.call(null,G__289132,G__289133));
})();
var G__289097 = " ";
var G__289098 = (function (){var G__289134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289135 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289134,G__289135) : tailrecursion.hoplon.span.call(null,G__289134,G__289135));
})();
var G__289099 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34(G__289066,G__289067,G__289068,G__289069,G__289070,G__289071,G__289072,G__289073,G__289074,G__289075,G__289076,G__289077,G__289078,G__289079,G__289080,G__289081,G__289082,G__289083,G__289084,G__289085,G__289086,G__289087,G__289088,G__289089,G__289090,G__289091,G__289092,G__289093,G__289094,G__289095,G__289096,G__289097,G__289098,G__289099) : tailrecursion.hoplon.pre.call(null,G__289066,G__289067,G__289068,G__289069,G__289070,G__289071,G__289072,G__289073,G__289074,G__289075,G__289076,G__289077,G__289078,G__289079,G__289080,G__289081,G__289082,G__289083,G__289084,G__289085,G__289086,G__289087,G__289088,G__289089,G__289090,G__289091,G__289092,G__289093,G__289094,G__289095,G__289096,G__289097,G__289098,G__289099));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__289064,G__289065) : tailrecursion.hoplon.div.call(null,G__289064,G__289065));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__289063) : tailrecursion.hoplon.div.call(null,G__289063));
})(),(function (){var G__289136 = cljs.core.PersistentArrayMap.EMPTY;
var G__289137 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This version requires \\(\\Theta(n)\\) steps and \\(\\Theta(1)\\) space."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289136,G__289137) : tailrecursion.hoplon.markdown.para_node.call(null,G__289136,G__289137));
})(),(function (){var G__289138 = cljs.core.PersistentArrayMap.EMPTY;
var G__289139 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can compute exponentials in fewer steps by using successive squaring. For instance, rather than computing \\(b^8\\) as \\(b\\cdot(b\\cdot(b\\cdot(b\\cdot(b\\cdot(b\\cdot(b\\cdot b))))))\\) we can compute it using three multiplications:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289138,G__289139) : tailrecursion.hoplon.markdown.para_node.call(null,G__289138,G__289139));
})(),(function (){var G__289140 = cljs.core.PersistentArrayMap.EMPTY;
var G__289141 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} b^2=& b\\cdot b  \\\\ b^4=& b^2\\cdot b^2  \\\\ b^8=& b^4\\cdot b^4\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289140,G__289141) : tailrecursion.hoplon.markdown.para_node.call(null,G__289140,G__289141));
})(),(function (){var G__289142 = cljs.core.PersistentArrayMap.EMPTY;
var G__289143 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This method works fine for exponents that are powers of 2. We can also take advantage of successive squaring in computing exponentials in general if we use the rule:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289142,G__289143) : tailrecursion.hoplon.markdown.para_node.call(null,G__289142,G__289143));
})(),(function (){var G__289144 = cljs.core.PersistentArrayMap.EMPTY;
var G__289145 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}  b^n=&(b^{n/2})^2 & \\text{if }& n \\text{ is even} \\\\  b^n=&b\\cdot b^{n-1} & \\text{if }& n \\text{ is odd}\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289144,G__289145) : tailrecursion.hoplon.markdown.para_node.call(null,G__289144,G__289145));
})(),(function (){var G__289146 = cljs.core.PersistentArrayMap.EMPTY;
var G__289147 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can express this method as a procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289146,G__289147) : tailrecursion.hoplon.markdown.para_node.call(null,G__289146,G__289147));
})(),(function (){var G__289183 = (function (){var G__289184 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__289185 = (function (){var G__289186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__289187 = "(";
var G__289188 = (function (){var G__289203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289204 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289203,G__289204) : tailrecursion.hoplon.span.call(null,G__289203,G__289204));
})();
var G__289189 = (function (){var G__289205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289206 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289205,G__289206) : tailrecursion.hoplon.span.call(null,G__289205,G__289206));
})();
var G__289190 = " [";
var G__289191 = (function (){var G__289207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289208 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289207,G__289208) : tailrecursion.hoplon.span.call(null,G__289207,G__289208));
})();
var G__289192 = "]\n  (";
var G__289193 = (function (){var G__289209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289210 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289209,G__289210) : tailrecursion.hoplon.span.call(null,G__289209,G__289210));
})();
var G__289194 = "(";
var G__289195 = (function (){var G__289211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289212 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289211,G__289212) : tailrecursion.hoplon.span.call(null,G__289211,G__289212));
})();
var G__289196 = " ";
var G__289197 = (function (){var G__289213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289214 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289213,G__289214) : tailrecursion.hoplon.span.call(null,G__289213,G__289214));
})();
var G__289198 = " ";
var G__289199 = (function (){var G__289215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289216 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289215,G__289216) : tailrecursion.hoplon.span.call(null,G__289215,G__289216));
})();
var G__289200 = ") ";
var G__289201 = (function (){var G__289217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289218 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289217,G__289218) : tailrecursion.hoplon.span.call(null,G__289217,G__289218));
})();
var G__289202 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__289186,G__289187,G__289188,G__289189,G__289190,G__289191,G__289192,G__289193,G__289194,G__289195,G__289196,G__289197,G__289198,G__289199,G__289200,G__289201,G__289202) : tailrecursion.hoplon.pre.call(null,G__289186,G__289187,G__289188,G__289189,G__289190,G__289191,G__289192,G__289193,G__289194,G__289195,G__289196,G__289197,G__289198,G__289199,G__289200,G__289201,G__289202));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__289184,G__289185) : tailrecursion.hoplon.div.call(null,G__289184,G__289185));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__289183) : tailrecursion.hoplon.div.call(null,G__289183));
})(),(function (){var G__289219 = cljs.core.PersistentArrayMap.EMPTY;
var G__289220 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__289221 = cljs.core.PersistentArrayMap.EMPTY;
var G__289222 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: In Clojure ",(function (){var G__289223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__289224 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289223,G__289224) : tailrecursion.hoplon.markdown.code_node.call(null,G__289223,G__289224));
})()," takes the place of ",(function (){var G__289225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"remainder"], null);
var G__289226 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289225,G__289226) : tailrecursion.hoplon.markdown.code_node.call(null,G__289225,G__289226));
})()," in Scheme."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289221,G__289222) : tailrecursion.hoplon.markdown.para_node.call(null,G__289221,G__289222));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__289219,G__289220) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__289219,G__289220));
})(),(function (){var G__289227 = cljs.core.PersistentArrayMap.EMPTY;
var G__289228 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The process evolved by ",(function (){var G__289229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-expt"], null);
var G__289230 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289229,G__289230) : tailrecursion.hoplon.markdown.code_node.call(null,G__289229,G__289230));
})()," grows logarithmically with \\(n\\) in both space and number of steps. To see this, observe that computing \\(b^{2n}\\) using ",(function (){var G__289231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-expt"], null);
var G__289232 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289231,G__289232) : tailrecursion.hoplon.markdown.code_node.call(null,G__289231,G__289232));
})()," requires only one more multiplication than computing \\(b^n\\). The size of the exponent we can compute therefore doubles (approximately) with every new multiplication we are allowed. Thus the number of multiplications required for an exponent of \\(n\\) grows about as fast as the logarithm of \\(n\\) to the base 2. The process has \\(\\Theta(\\log n)\\) growth.",(function (){var G__289233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__289234 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["More precisely, the number of multiplications required is equal to 1 less than the log base 2 of \\(n\\) plus the number of ones in the binary representation of \\(n\\). This total is always less than twice \\(\\log_2(n)\\). The arbitrary constants \\(k_1\\) and \\(k_2\\) in the definition of order notation imply that, for a logarithmic process, the base to which logarithms are taken does not matter, so all such processes are described as \\(\\Theta(\\log n)\\)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289233,G__289234) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289233,G__289234));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289227,G__289228) : tailrecursion.hoplon.markdown.para_node.call(null,G__289227,G__289228));
})(),(function (){var G__289235 = cljs.core.PersistentArrayMap.EMPTY;
var G__289236 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The difference between \\(\\Theta(\\log n) \\) growth and \\(\\Theta(n) \\) growth becomes striking as \\(n \\) becomes large. For example, ",(function (){var G__289237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-expt"], null);
var G__289238 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289237,G__289238) : tailrecursion.hoplon.markdown.code_node.call(null,G__289237,G__289238));
})()," for \\(n=1000 \\) requires only 14 multiplications. ",(function (){var G__289239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__289240 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["You may wonder why anyone would care about raising numbers to the 1000th power. See section 1.26."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289239,G__289240) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289239,G__289240));
})()," It is also possible to use the idea of successive squaring to devise an iterative algorithm that computes exponentials with a logarithmic number of steps (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/ex/1-16/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.16"], null)], 0)),"), although, as is often the case with iterative algorithms, this is not written down so straightforwardly as the recursive algorithm.",(function (){var G__289241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__289242 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This iterative algorithm is ancient. It appears in the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chandah-sutra"], null)], 0))," by \u00C1ch\u00E1rya Pingala, written before 200 B.C. See Knuth 1981, section 4.6.3, for a full discussion and analysis of this and other methods of exponentiation."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289241,G__289242) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289241,G__289242));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289235,G__289236) : tailrecursion.hoplon.markdown.para_node.call(null,G__289235,G__289236));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288778;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288777;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288776;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288775;
}})()], 0));
var G__279819 = "";
var G__279820 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"16-19"], null),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(16)], null),(function (){var _STAR_references_STAR_289243 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289244 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_289245 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289246 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__289247 = cljs.core.PersistentArrayMap.EMPTY;
var G__289248 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Design a procedure that evolves an iterative exponentiation process that uses successive squaring and uses a logarithmic number of steps, as does ",(function (){var G__289249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-expt"], null);
var G__289250 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289249,G__289250) : tailrecursion.hoplon.markdown.code_node.call(null,G__289249,G__289250));
})(),". (Hint: Using the observations that \\((b^{n/2})^2=(b^2)^{n/2}\\), keep, along with the exponent \\(n\\) and the base \\(b\\), an additional state variable \\(a\\), and define the state transformation in such a way that the product \\(ab^n\\) is unchanged from state to state. At the beginning of the process \\(a\\) is taken to be 1, and the answer is given by the value of \\(a\\) at the end of the process. In general, the technique of defining an ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["invariant quantity"], null)], 0))," that remains unchanged from state to state is a powerful way to think about the design of iterative algorithms.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289247,G__289248) : tailrecursion.hoplon.markdown.para_node.call(null,G__289247,G__289248));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289246;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289245;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289244;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289243;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_289251 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289252 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_289253 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289254 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__289402 = (function (){var G__289403 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__289404 = (function (){var G__289405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__289406 = "(";
var G__289407 = (function (){var G__289476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289477 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289476,G__289477) : tailrecursion.hoplon.span.call(null,G__289476,G__289477));
})();
var G__289408 = (function (){var G__289478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289479 = "expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289478,G__289479) : tailrecursion.hoplon.span.call(null,G__289478,G__289479));
})();
var G__289409 = " [";
var G__289410 = (function (){var G__289480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289481 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289480,G__289481) : tailrecursion.hoplon.span.call(null,G__289480,G__289481));
})();
var G__289411 = " ";
var G__289412 = (function (){var G__289482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289483 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289482,G__289483) : tailrecursion.hoplon.span.call(null,G__289482,G__289483));
})();
var G__289413 = "]\n  (";
var G__289414 = (function (){var G__289484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289485 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289484,G__289485) : tailrecursion.hoplon.span.call(null,G__289484,G__289485));
})();
var G__289415 = "[";
var G__289416 = (function (){var G__289486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289487 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289486,G__289487) : tailrecursion.hoplon.span.call(null,G__289486,G__289487));
})();
var G__289417 = "     ";
var G__289418 = (function (){var G__289488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289489 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289488,G__289489) : tailrecursion.hoplon.span.call(null,G__289488,G__289489));
})();
var G__289419 = "\n         ";
var G__289420 = (function (){var G__289490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289491 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289490,G__289491) : tailrecursion.hoplon.span.call(null,G__289490,G__289491));
})();
var G__289421 = " ";
var G__289422 = (function (){var G__289492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289493 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289492,G__289493) : tailrecursion.hoplon.span.call(null,G__289492,G__289493));
})();
var G__289423 = "\n         ";
var G__289424 = (function (){var G__289494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289495 = "accumulator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289494,G__289495) : tailrecursion.hoplon.span.call(null,G__289494,G__289495));
})();
var G__289425 = " ";
var G__289426 = (function (){var G__289496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289497 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289496,G__289497) : tailrecursion.hoplon.span.call(null,G__289496,G__289497));
})();
var G__289427 = "]\n    (";
var G__289428 = (function (){var G__289498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289499 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289498,G__289499) : tailrecursion.hoplon.span.call(null,G__289498,G__289499));
})();
var G__289429 = "(";
var G__289430 = (function (){var G__289500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289501 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289500,G__289501) : tailrecursion.hoplon.span.call(null,G__289500,G__289501));
})();
var G__289431 = (function (){var G__289502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289503 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289502,G__289503) : tailrecursion.hoplon.span.call(null,G__289502,G__289503));
})();
var G__289432 = " ";
var G__289433 = (function (){var G__289504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289505 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289504,G__289505) : tailrecursion.hoplon.span.call(null,G__289504,G__289505));
})();
var G__289434 = ") ";
var G__289435 = (function (){var G__289506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289507 = "accumulator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289506,G__289507) : tailrecursion.hoplon.span.call(null,G__289506,G__289507));
})();
var G__289436 = "\n          (";
var G__289437 = (function (){var G__289508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289509 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289508,G__289509) : tailrecursion.hoplon.span.call(null,G__289508,G__289509));
})();
var G__289438 = "(";
var G__289439 = (function (){var G__289510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289511 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289510,G__289511) : tailrecursion.hoplon.span.call(null,G__289510,G__289511));
})();
var G__289440 = " ";
var G__289441 = (function (){var G__289512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289513 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289512,G__289513) : tailrecursion.hoplon.span.call(null,G__289512,G__289513));
})();
var G__289442 = " ";
var G__289443 = (function (){var G__289514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289515 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289514,G__289515) : tailrecursion.hoplon.span.call(null,G__289514,G__289515));
})();
var G__289444 = ") ";
var G__289445 = (function (){var G__289516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289517 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289516,G__289517) : tailrecursion.hoplon.span.call(null,G__289516,G__289517));
})();
var G__289446 = ") (";
var G__289447 = (function (){var G__289518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289519 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289518,G__289519) : tailrecursion.hoplon.span.call(null,G__289518,G__289519));
})();
var G__289448 = " (";
var G__289449 = (function (){var G__289520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289521 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289520,G__289521) : tailrecursion.hoplon.span.call(null,G__289520,G__289521));
})();
var G__289450 = " ";
var G__289451 = (function (){var G__289522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289523 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289522,G__289523) : tailrecursion.hoplon.span.call(null,G__289522,G__289523));
})();
var G__289452 = ") (";
var G__289453 = (function (){var G__289524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289525 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289524,G__289525) : tailrecursion.hoplon.span.call(null,G__289524,G__289525));
})();
var G__289454 = (function (){var G__289526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289527 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289526,G__289527) : tailrecursion.hoplon.span.call(null,G__289526,G__289527));
})();
var G__289455 = " ";
var G__289456 = (function (){var G__289528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289529 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289528,G__289529) : tailrecursion.hoplon.span.call(null,G__289528,G__289529));
})();
var G__289457 = ") ";
var G__289458 = (function (){var G__289530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289531 = "accumulator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289530,G__289531) : tailrecursion.hoplon.span.call(null,G__289530,G__289531));
})();
var G__289459 = ")\n          ";
var G__289460 = (function (){var G__289532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289533 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289532,G__289533) : tailrecursion.hoplon.span.call(null,G__289532,G__289533));
})();
var G__289461 = " (";
var G__289462 = (function (){var G__289534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289535 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289534,G__289535) : tailrecursion.hoplon.span.call(null,G__289534,G__289535));
})();
var G__289463 = " ";
var G__289464 = (function (){var G__289536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289537 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289536,G__289537) : tailrecursion.hoplon.span.call(null,G__289536,G__289537));
})();
var G__289465 = " (";
var G__289466 = (function (){var G__289538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289539 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289538,G__289539) : tailrecursion.hoplon.span.call(null,G__289538,G__289539));
})();
var G__289467 = (function (){var G__289540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289541 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289540,G__289541) : tailrecursion.hoplon.span.call(null,G__289540,G__289541));
})();
var G__289468 = " ";
var G__289469 = (function (){var G__289542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289543 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289542,G__289543) : tailrecursion.hoplon.span.call(null,G__289542,G__289543));
})();
var G__289470 = ") (";
var G__289471 = (function (){var G__289544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289545 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289544,G__289545) : tailrecursion.hoplon.span.call(null,G__289544,G__289545));
})();
var G__289472 = (function (){var G__289546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289547 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289546,G__289547) : tailrecursion.hoplon.span.call(null,G__289546,G__289547));
})();
var G__289473 = " ";
var G__289474 = (function (){var G__289548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289549 = "accumulator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289548,G__289549) : tailrecursion.hoplon.span.call(null,G__289548,G__289549));
})();
var G__289475 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$71 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$71(G__289405,G__289406,G__289407,G__289408,G__289409,G__289410,G__289411,G__289412,G__289413,G__289414,G__289415,G__289416,G__289417,G__289418,G__289419,G__289420,G__289421,G__289422,G__289423,G__289424,G__289425,G__289426,G__289427,G__289428,G__289429,G__289430,G__289431,G__289432,G__289433,G__289434,G__289435,G__289436,G__289437,G__289438,G__289439,G__289440,G__289441,G__289442,G__289443,G__289444,G__289445,G__289446,G__289447,G__289448,G__289449,G__289450,G__289451,G__289452,G__289453,G__289454,G__289455,G__289456,G__289457,G__289458,G__289459,G__289460,G__289461,G__289462,G__289463,G__289464,G__289465,G__289466,G__289467,G__289468,G__289469,G__289470,G__289471,G__289472,G__289473,G__289474,G__289475) : tailrecursion.hoplon.pre.call(null,G__289405,G__289406,G__289407,G__289408,G__289409,G__289410,G__289411,G__289412,G__289413,G__289414,G__289415,G__289416,G__289417,G__289418,G__289419,G__289420,G__289421,G__289422,G__289423,G__289424,G__289425,G__289426,G__289427,G__289428,G__289429,G__289430,G__289431,G__289432,G__289433,G__289434,G__289435,G__289436,G__289437,G__289438,G__289439,G__289440,G__289441,G__289442,G__289443,G__289444,G__289445,G__289446,G__289447,G__289448,G__289449,G__289450,G__289451,G__289452,G__289453,G__289454,G__289455,G__289456,G__289457,G__289458,G__289459,G__289460,G__289461,G__289462,G__289463,G__289464,G__289465,G__289466,G__289467,G__289468,G__289469,G__289470,G__289471,G__289472,G__289473,G__289474,G__289475));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__289403,G__289404) : tailrecursion.hoplon.div.call(null,G__289403,G__289404));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__289402) : tailrecursion.hoplon.div.call(null,G__289402));
})(),(function (){var G__289550 = cljs.core.PersistentArrayMap.EMPTY;
var G__289551 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: Due to the fact that Clojure is not tail-recursive, in order to avoid a stack overflow, we want to avoid recursion whenever possible. These are the perils of working with a hosted language."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289550,G__289551) : tailrecursion.hoplon.markdown.para_node.call(null,G__289550,G__289551));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289254;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289253;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289252;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289251;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(17)], null),(function (){var _STAR_references_STAR_289552 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289553 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_289554 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289555 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__289556 = cljs.core.PersistentArrayMap.EMPTY;
var G__289557 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The exponentiation algorithms in this section are based on performing exponentiation by means of repeated multiplication. In a similar way, one can perform integer multiplication by means of repeated addition. The following multiplication procedure (in which it is assumed that our language can only add, not multiply) is analogous to the ",(function (){var G__289558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"expt"], null);
var G__289559 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289558,G__289559) : tailrecursion.hoplon.markdown.code_node.call(null,G__289558,G__289559));
})()," procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289556,G__289557) : tailrecursion.hoplon.markdown.para_node.call(null,G__289556,G__289557));
})(),(function (){var G__289623 = (function (){var G__289624 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__289625 = (function (){var G__289626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__289627 = "(";
var G__289628 = (function (){var G__289655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289656 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289655,G__289656) : tailrecursion.hoplon.span.call(null,G__289655,G__289656));
})();
var G__289629 = (function (){var G__289657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289658 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289657,G__289658) : tailrecursion.hoplon.span.call(null,G__289657,G__289658));
})();
var G__289630 = "[";
var G__289631 = (function (){var G__289659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289660 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289659,G__289660) : tailrecursion.hoplon.span.call(null,G__289659,G__289660));
})();
var G__289632 = " ";
var G__289633 = (function (){var G__289661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289662 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289661,G__289662) : tailrecursion.hoplon.span.call(null,G__289661,G__289662));
})();
var G__289634 = "]\n  (";
var G__289635 = (function (){var G__289663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289664 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289663,G__289664) : tailrecursion.hoplon.span.call(null,G__289663,G__289664));
})();
var G__289636 = "(";
var G__289637 = (function (){var G__289665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289666 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289665,G__289666) : tailrecursion.hoplon.span.call(null,G__289665,G__289666));
})();
var G__289638 = (function (){var G__289667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289668 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289667,G__289668) : tailrecursion.hoplon.span.call(null,G__289667,G__289668));
})();
var G__289639 = " ";
var G__289640 = (function (){var G__289669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289670 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289669,G__289670) : tailrecursion.hoplon.span.call(null,G__289669,G__289670));
})();
var G__289641 = ")\n      ";
var G__289642 = (function (){var G__289671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289672 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289671,G__289672) : tailrecursion.hoplon.span.call(null,G__289671,G__289672));
})();
var G__289643 = "\n      (";
var G__289644 = (function (){var G__289673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289674 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289673,G__289674) : tailrecursion.hoplon.span.call(null,G__289673,G__289674));
})();
var G__289645 = (function (){var G__289675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289676 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289675,G__289676) : tailrecursion.hoplon.span.call(null,G__289675,G__289676));
})();
var G__289646 = " (";
var G__289647 = (function (){var G__289677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289678 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289677,G__289678) : tailrecursion.hoplon.span.call(null,G__289677,G__289678));
})();
var G__289648 = (function (){var G__289679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289680 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289679,G__289680) : tailrecursion.hoplon.span.call(null,G__289679,G__289680));
})();
var G__289649 = " (";
var G__289650 = (function (){var G__289681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289682 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289681,G__289682) : tailrecursion.hoplon.span.call(null,G__289681,G__289682));
})();
var G__289651 = (function (){var G__289683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289684 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289683,G__289684) : tailrecursion.hoplon.span.call(null,G__289683,G__289684));
})();
var G__289652 = " ";
var G__289653 = (function (){var G__289685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289686 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289685,G__289686) : tailrecursion.hoplon.span.call(null,G__289685,G__289686));
})();
var G__289654 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29(G__289626,G__289627,G__289628,G__289629,G__289630,G__289631,G__289632,G__289633,G__289634,G__289635,G__289636,G__289637,G__289638,G__289639,G__289640,G__289641,G__289642,G__289643,G__289644,G__289645,G__289646,G__289647,G__289648,G__289649,G__289650,G__289651,G__289652,G__289653,G__289654) : tailrecursion.hoplon.pre.call(null,G__289626,G__289627,G__289628,G__289629,G__289630,G__289631,G__289632,G__289633,G__289634,G__289635,G__289636,G__289637,G__289638,G__289639,G__289640,G__289641,G__289642,G__289643,G__289644,G__289645,G__289646,G__289647,G__289648,G__289649,G__289650,G__289651,G__289652,G__289653,G__289654));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__289624,G__289625) : tailrecursion.hoplon.div.call(null,G__289624,G__289625));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__289623) : tailrecursion.hoplon.div.call(null,G__289623));
})(),(function (){var G__289687 = cljs.core.PersistentArrayMap.EMPTY;
var G__289688 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This algorithm takes a number of steps that is linear in ",(function (){var G__289689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"b"], null);
var G__289690 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289689,G__289690) : tailrecursion.hoplon.markdown.code_node.call(null,G__289689,G__289690));
})(),". Now suppose we include, together with addition, operations ",(function (){var G__289691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"double"], null);
var G__289692 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289691,G__289692) : tailrecursion.hoplon.markdown.code_node.call(null,G__289691,G__289692));
})(),", which doubles an integer, and ",(function (){var G__289693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"halve"], null);
var G__289694 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289693,G__289694) : tailrecursion.hoplon.markdown.code_node.call(null,G__289693,G__289694));
})(),", which divides an (even) integer by 2. Using these, design a multiplication procedure analogous to ",(function (){var G__289695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-expt"], null);
var G__289696 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289695,G__289696) : tailrecursion.hoplon.markdown.code_node.call(null,G__289695,G__289696));
})()," that uses a logarithmic number of steps."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289687,G__289688) : tailrecursion.hoplon.markdown.para_node.call(null,G__289687,G__289688));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289555;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289554;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289553;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289552;
}})(),book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_289697 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289698 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_289699 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289700 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__289844 = (function (){var G__289845 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__289846 = (function (){var G__289847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__289848 = "(";
var G__289849 = (function (){var G__289916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289917 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289916,G__289917) : tailrecursion.hoplon.span.call(null,G__289916,G__289917));
})();
var G__289850 = (function (){var G__289918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289919 = "fast-mult";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289918,G__289919) : tailrecursion.hoplon.span.call(null,G__289918,G__289919));
})();
var G__289851 = " [";
var G__289852 = (function (){var G__289920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289921 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289920,G__289921) : tailrecursion.hoplon.span.call(null,G__289920,G__289921));
})();
var G__289853 = " ";
var G__289854 = (function (){var G__289922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289923 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289922,G__289923) : tailrecursion.hoplon.span.call(null,G__289922,G__289923));
})();
var G__289855 = "]\n  (";
var G__289856 = (function (){var G__289924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289925 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289924,G__289925) : tailrecursion.hoplon.span.call(null,G__289924,G__289925));
})();
var G__289857 = "[";
var G__289858 = (function (){var G__289926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289927 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289926,G__289927) : tailrecursion.hoplon.span.call(null,G__289926,G__289927));
})();
var G__289859 = " ";
var G__289860 = (function (){var G__289928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289929 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289928,G__289929) : tailrecursion.hoplon.span.call(null,G__289928,G__289929));
})();
var G__289861 = "\n         ";
var G__289862 = (function (){var G__289930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289931 = "thing2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289930,G__289931) : tailrecursion.hoplon.span.call(null,G__289930,G__289931));
})();
var G__289863 = " ";
var G__289864 = (function (){var G__289932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289933 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289932,G__289933) : tailrecursion.hoplon.span.call(null,G__289932,G__289933));
})();
var G__289865 = "\n         ";
var G__289866 = (function (){var G__289934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289935 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289934,G__289935) : tailrecursion.hoplon.span.call(null,G__289934,G__289935));
})();
var G__289867 = "   ";
var G__289868 = (function (){var G__289936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289937 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289936,G__289937) : tailrecursion.hoplon.span.call(null,G__289936,G__289937));
})();
var G__289869 = "]\n    (";
var G__289870 = (function (){var G__289938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289939 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289938,G__289939) : tailrecursion.hoplon.span.call(null,G__289938,G__289939));
})();
var G__289871 = "(";
var G__289872 = (function (){var G__289940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289941 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289940,G__289941) : tailrecursion.hoplon.span.call(null,G__289940,G__289941));
})();
var G__289873 = (function (){var G__289942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289943 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289942,G__289943) : tailrecursion.hoplon.span.call(null,G__289942,G__289943));
})();
var G__289874 = " ";
var G__289875 = (function (){var G__289944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289945 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289944,G__289945) : tailrecursion.hoplon.span.call(null,G__289944,G__289945));
})();
var G__289876 = ") ";
var G__289877 = (function (){var G__289946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289947 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289946,G__289947) : tailrecursion.hoplon.span.call(null,G__289946,G__289947));
})();
var G__289878 = "\n          (";
var G__289879 = (function (){var G__289948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289949 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289948,G__289949) : tailrecursion.hoplon.span.call(null,G__289948,G__289949));
})();
var G__289880 = "(";
var G__289881 = (function (){var G__289950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289951 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289950,G__289951) : tailrecursion.hoplon.span.call(null,G__289950,G__289951));
})();
var G__289882 = " ";
var G__289883 = (function (){var G__289952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289953 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289952,G__289953) : tailrecursion.hoplon.span.call(null,G__289952,G__289953));
})();
var G__289884 = " ";
var G__289885 = (function (){var G__289954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289955 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289954,G__289955) : tailrecursion.hoplon.span.call(null,G__289954,G__289955));
})();
var G__289886 = ") ";
var G__289887 = (function (){var G__289956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289957 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289956,G__289957) : tailrecursion.hoplon.span.call(null,G__289956,G__289957));
})();
var G__289888 = ") (";
var G__289889 = (function (){var G__289958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289959 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289958,G__289959) : tailrecursion.hoplon.span.call(null,G__289958,G__289959));
})();
var G__289890 = " (";
var G__289891 = (function (){var G__289960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289961 = "halve";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289960,G__289961) : tailrecursion.hoplon.span.call(null,G__289960,G__289961));
})();
var G__289892 = " ";
var G__289893 = (function (){var G__289962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289963 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289962,G__289963) : tailrecursion.hoplon.span.call(null,G__289962,G__289963));
})();
var G__289894 = ") (";
var G__289895 = (function (){var G__289964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289965 = "double ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289964,G__289965) : tailrecursion.hoplon.span.call(null,G__289964,G__289965));
})();
var G__289896 = (function (){var G__289966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289967 = "thing2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289966,G__289967) : tailrecursion.hoplon.span.call(null,G__289966,G__289967));
})();
var G__289897 = ") ";
var G__289898 = (function (){var G__289968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289969 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289968,G__289969) : tailrecursion.hoplon.span.call(null,G__289968,G__289969));
})();
var G__289899 = ")\n          ";
var G__289900 = (function (){var G__289970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289971 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289970,G__289971) : tailrecursion.hoplon.span.call(null,G__289970,G__289971));
})();
var G__289901 = " (";
var G__289902 = (function (){var G__289972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289973 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289972,G__289973) : tailrecursion.hoplon.span.call(null,G__289972,G__289973));
})();
var G__289903 = " (";
var G__289904 = (function (){var G__289974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289975 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289974,G__289975) : tailrecursion.hoplon.span.call(null,G__289974,G__289975));
})();
var G__289905 = (function (){var G__289976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289977 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289976,G__289977) : tailrecursion.hoplon.span.call(null,G__289976,G__289977));
})();
var G__289906 = " ";
var G__289907 = (function (){var G__289978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289979 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289978,G__289979) : tailrecursion.hoplon.span.call(null,G__289978,G__289979));
})();
var G__289908 = ") ";
var G__289909 = (function (){var G__289980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289981 = "thing2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289980,G__289981) : tailrecursion.hoplon.span.call(null,G__289980,G__289981));
})();
var G__289910 = " (";
var G__289911 = (function (){var G__289982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289983 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289982,G__289983) : tailrecursion.hoplon.span.call(null,G__289982,G__289983));
})();
var G__289912 = (function (){var G__289984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289985 = "thing2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289984,G__289985) : tailrecursion.hoplon.span.call(null,G__289984,G__289985));
})();
var G__289913 = " ";
var G__289914 = (function (){var G__289986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289987 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289986,G__289987) : tailrecursion.hoplon.span.call(null,G__289986,G__289987));
})();
var G__289915 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69(G__289847,G__289848,G__289849,G__289850,G__289851,G__289852,G__289853,G__289854,G__289855,G__289856,G__289857,G__289858,G__289859,G__289860,G__289861,G__289862,G__289863,G__289864,G__289865,G__289866,G__289867,G__289868,G__289869,G__289870,G__289871,G__289872,G__289873,G__289874,G__289875,G__289876,G__289877,G__289878,G__289879,G__289880,G__289881,G__289882,G__289883,G__289884,G__289885,G__289886,G__289887,G__289888,G__289889,G__289890,G__289891,G__289892,G__289893,G__289894,G__289895,G__289896,G__289897,G__289898,G__289899,G__289900,G__289901,G__289902,G__289903,G__289904,G__289905,G__289906,G__289907,G__289908,G__289909,G__289910,G__289911,G__289912,G__289913,G__289914,G__289915) : tailrecursion.hoplon.pre.call(null,G__289847,G__289848,G__289849,G__289850,G__289851,G__289852,G__289853,G__289854,G__289855,G__289856,G__289857,G__289858,G__289859,G__289860,G__289861,G__289862,G__289863,G__289864,G__289865,G__289866,G__289867,G__289868,G__289869,G__289870,G__289871,G__289872,G__289873,G__289874,G__289875,G__289876,G__289877,G__289878,G__289879,G__289880,G__289881,G__289882,G__289883,G__289884,G__289885,G__289886,G__289887,G__289888,G__289889,G__289890,G__289891,G__289892,G__289893,G__289894,G__289895,G__289896,G__289897,G__289898,G__289899,G__289900,G__289901,G__289902,G__289903,G__289904,G__289905,G__289906,G__289907,G__289908,G__289909,G__289910,G__289911,G__289912,G__289913,G__289914,G__289915));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__289845,G__289846) : tailrecursion.hoplon.div.call(null,G__289845,G__289846));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__289844) : tailrecursion.hoplon.div.call(null,G__289844));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289700;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289699;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289698;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289697;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(18)], null),(function (){var _STAR_references_STAR_289988 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289989 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_289990 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289991 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__289992 = cljs.core.PersistentArrayMap.EMPTY;
var G__289993 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using the results of exercises 1.16 and 1.17, devise a procedure that generates an iterative process for multiplying two integers in terms of adding, doubling, and halving and uses a logarithmic number of steps.",(function (){var G__289994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__289995 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This algorithm, which is sometimes known as the ",(function (){var G__289996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__289997 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Russian peasant method"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289996,G__289997) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289996,G__289997));
})()," of multiplication, is ancient. Examples of its use are found in the Rhind Papyrus, one of the two oldest mathematical documents in existence, written about 1700 B.C. (and copied from an even older document) by an Egyptian scribe named A",(function (){var G__289998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__289999 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__289998,G__289999) : tailrecursion.hoplon.markdown.simple_node.call(null,G__289998,G__289999));
})(),"h-mose."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289994,G__289995) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289994,G__289995));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289992,G__289993) : tailrecursion.hoplon.markdown.para_node.call(null,G__289992,G__289993));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289991;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289990;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289989;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289988;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_290000 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290001 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290002 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290003 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290004 = cljs.core.PersistentArrayMap.EMPTY;
var G__290005 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It",(function (){var G__290006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290007 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290006,G__290007) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290006,G__290007));
})(),"s exactly the same as the one above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290004,G__290005) : tailrecursion.hoplon.markdown.para_node.call(null,G__290004,G__290005));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290003;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290002;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290001;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290000;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(19)], null),(function (){var _STAR_references_STAR_290008 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290009 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290010 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290011 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290012 = cljs.core.PersistentArrayMap.EMPTY;
var G__290013 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["There is a clever algorithm for computing the Fibonacci numbers in a logarithmic number of steps. Recall the transformation of the state variables \\(a\\) and \\(b\\) in the ",(function (){var G__290014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fib-iter"], null);
var G__290015 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290014,G__290015) : tailrecursion.hoplon.markdown.code_node.call(null,G__290014,G__290015));
})()," process of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/2/sub/2/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0)),": \\(a\\to a + b\\) and \\(b\\to a\\). Call this transformation \\(T\\), and observe that applying \\(T\\) over and over again \\(n\\) times, starting with 0 and 1, produces the pair \\(Fib(n)\\) and \\(Fib(n+1)\\). In other words, the Fibonacci numbers are produced by applying \\(T^n\\), the nth power of the transformation \\(T\\), starting with the pair (0,1). Now consider \\(T\\) to be the special case of \\(p = 0\\) and \\(q = 1\\) in a family of transformations \\(T_{pq}\\), where \\(T_{pq}\\) transforms the pair (a,b) according to \\(a\\to ap + bq\\) and \\(b\\to aq + bq + bp\\) (so that \\(T_{pq}(a,b)=(ap+bq,aq+bq+bp)\\)). Show that if we apply such a transformation \\(T_{pq}\\) twice, the effect is the same as using a single transformation \\(T_{p\u2019q\u2019}\\) of the same form, and compute \\(p\u2019\\) and \\(q\u2019\\) in terms of \\(p\\) and \\(q\\). This gives us an explicit way to square these transformations, and thus we can compute \\(T^n\\) using successive squaring, as in the ",(function (){var G__290016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-expt"], null);
var G__290017 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290016,G__290017) : tailrecursion.hoplon.markdown.code_node.call(null,G__290016,G__290017));
})()," procedure. Put this all together to complete the following procedure, which runs in a logarithmic number of steps:",(function (){var G__290018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__290019 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This exercise was suggested to us by Joe Stoy, based on an example in Kaldewaij 1990."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__290018,G__290019) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__290018,G__290019));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290012,G__290013) : tailrecursion.hoplon.markdown.para_node.call(null,G__290012,G__290013));
})(),(function (){var G__290222 = (function (){var G__290223 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__290224 = (function (){var G__290225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__290226 = "(";
var G__290227 = (function (){var G__290321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__290322 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290321,G__290322) : tailrecursion.hoplon.span.call(null,G__290321,G__290322));
})();
var G__290228 = (function (){var G__290323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290324 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290323,G__290324) : tailrecursion.hoplon.span.call(null,G__290323,G__290324));
})();
var G__290229 = " [";
var G__290230 = (function (){var G__290325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290326 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290325,G__290326) : tailrecursion.hoplon.span.call(null,G__290325,G__290326));
})();
var G__290231 = "]\n  (";
var G__290232 = (function (){var G__290327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__290328 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290327,G__290328) : tailrecursion.hoplon.span.call(null,G__290327,G__290328));
})();
var G__290233 = "[";
var G__290234 = (function (){var G__290329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290330 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290329,G__290330) : tailrecursion.hoplon.span.call(null,G__290329,G__290330));
})();
var G__290235 = " ";
var G__290236 = (function (){var G__290331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290332 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290331,G__290332) : tailrecursion.hoplon.span.call(null,G__290331,G__290332));
})();
var G__290237 = "\n         ";
var G__290238 = (function (){var G__290333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290334 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290333,G__290334) : tailrecursion.hoplon.span.call(null,G__290333,G__290334));
})();
var G__290239 = " ";
var G__290240 = (function (){var G__290335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290336 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290335,G__290336) : tailrecursion.hoplon.span.call(null,G__290335,G__290336));
})();
var G__290241 = "\n         ";
var G__290242 = (function (){var G__290337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290338 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290337,G__290338) : tailrecursion.hoplon.span.call(null,G__290337,G__290338));
})();
var G__290243 = " ";
var G__290244 = (function (){var G__290339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290340 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290339,G__290340) : tailrecursion.hoplon.span.call(null,G__290339,G__290340));
})();
var G__290245 = "\n         ";
var G__290246 = (function (){var G__290341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290342 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290341,G__290342) : tailrecursion.hoplon.span.call(null,G__290341,G__290342));
})();
var G__290247 = " ";
var G__290248 = (function (){var G__290343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290344 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290343,G__290344) : tailrecursion.hoplon.span.call(null,G__290343,G__290344));
})();
var G__290249 = "\n         ";
var G__290250 = (function (){var G__290345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290346 = "count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290345,G__290346) : tailrecursion.hoplon.span.call(null,G__290345,G__290346));
})();
var G__290251 = (function (){var G__290347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290348 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290347,G__290348) : tailrecursion.hoplon.span.call(null,G__290347,G__290348));
})();
var G__290252 = "]\n    (";
var G__290253 = (function (){var G__290349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290350 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290349,G__290350) : tailrecursion.hoplon.span.call(null,G__290349,G__290350));
})();
var G__290254 = "(";
var G__290255 = (function (){var G__290351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290352 = "= count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290351,G__290352) : tailrecursion.hoplon.span.call(null,G__290351,G__290352));
})();
var G__290256 = (function (){var G__290353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290354 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290353,G__290354) : tailrecursion.hoplon.span.call(null,G__290353,G__290354));
})();
var G__290257 = ") ";
var G__290258 = (function (){var G__290355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290356 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290355,G__290356) : tailrecursion.hoplon.span.call(null,G__290355,G__290356));
})();
var G__290259 = "\n          (";
var G__290260 = (function (){var G__290357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290358 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290357,G__290358) : tailrecursion.hoplon.span.call(null,G__290357,G__290358));
})();
var G__290261 = " ";
var G__290262 = (function (){var G__290359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290360 = "count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290359,G__290360) : tailrecursion.hoplon.span.call(null,G__290359,G__290360));
})();
var G__290263 = ") (";
var G__290264 = (function (){var G__290361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290362 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290361,G__290362) : tailrecursion.hoplon.span.call(null,G__290361,G__290362));
})();
var G__290265 = " ";
var G__290266 = (function (){var G__290363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290364 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290363,G__290364) : tailrecursion.hoplon.span.call(null,G__290363,G__290364));
})();
var G__290267 = "  ";
var G__290268 = (function (){var G__290365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #408080; font-style: italic"], null);
var G__290366 = "; compute p'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290365,G__290366) : tailrecursion.hoplon.span.call(null,G__290365,G__290366));
})();
var G__290269 = "\n                               ";
var G__290270 = (function (){var G__290367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290368 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290367,G__290368) : tailrecursion.hoplon.span.call(null,G__290367,G__290368));
})();
var G__290271 = "  ";
var G__290272 = (function (){var G__290369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #408080; font-style: italic"], null);
var G__290370 = "; compute q'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290369,G__290370) : tailrecursion.hoplon.span.call(null,G__290369,G__290370));
})();
var G__290273 = "\n                               ";
var G__290274 = (function (){var G__290371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290372 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290371,G__290372) : tailrecursion.hoplon.span.call(null,G__290371,G__290372));
})();
var G__290275 = "\n                               ";
var G__290276 = (function (){var G__290373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290374 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290373,G__290374) : tailrecursion.hoplon.span.call(null,G__290373,G__290374));
})();
var G__290277 = "\n                               (";
var G__290278 = (function (){var G__290375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290376 = "/ count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290375,G__290376) : tailrecursion.hoplon.span.call(null,G__290375,G__290376));
})();
var G__290279 = (function (){var G__290377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290378 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290377,G__290378) : tailrecursion.hoplon.span.call(null,G__290377,G__290378));
})();
var G__290280 = "))\n          ";
var G__290281 = (function (){var G__290379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290380 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290379,G__290380) : tailrecursion.hoplon.span.call(null,G__290379,G__290380));
})();
var G__290282 = " (";
var G__290283 = (function (){var G__290381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290382 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290381,G__290382) : tailrecursion.hoplon.span.call(null,G__290381,G__290382));
})();
var G__290284 = " ";
var G__290285 = (function (){var G__290383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290384 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290383,G__290384) : tailrecursion.hoplon.span.call(null,G__290383,G__290384));
})();
var G__290286 = "\n                       ";
var G__290287 = (function (){var G__290385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290386 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290385,G__290386) : tailrecursion.hoplon.span.call(null,G__290385,G__290386));
})();
var G__290288 = "\n                       (";
var G__290289 = (function (){var G__290387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290388 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290387,G__290388) : tailrecursion.hoplon.span.call(null,G__290387,G__290388));
})();
var G__290290 = "(";
var G__290291 = (function (){var G__290389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290390 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290389,G__290390) : tailrecursion.hoplon.span.call(null,G__290389,G__290390));
})();
var G__290292 = (function (){var G__290391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290392 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290391,G__290392) : tailrecursion.hoplon.span.call(null,G__290391,G__290392));
})();
var G__290293 = " ";
var G__290294 = (function (){var G__290393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290394 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290393,G__290394) : tailrecursion.hoplon.span.call(null,G__290393,G__290394));
})();
var G__290295 = ") (";
var G__290296 = (function (){var G__290395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290396 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290395,G__290396) : tailrecursion.hoplon.span.call(null,G__290395,G__290396));
})();
var G__290297 = (function (){var G__290397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290398 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290397,G__290398) : tailrecursion.hoplon.span.call(null,G__290397,G__290398));
})();
var G__290298 = " ";
var G__290299 = (function (){var G__290399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290400 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290399,G__290400) : tailrecursion.hoplon.span.call(null,G__290399,G__290400));
})();
var G__290300 = "))\n                       (";
var G__290301 = (function (){var G__290401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290402 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290401,G__290402) : tailrecursion.hoplon.span.call(null,G__290401,G__290402));
})();
var G__290302 = "(";
var G__290303 = (function (){var G__290403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290404 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290403,G__290404) : tailrecursion.hoplon.span.call(null,G__290403,G__290404));
})();
var G__290304 = (function (){var G__290405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290406 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290405,G__290406) : tailrecursion.hoplon.span.call(null,G__290405,G__290406));
})();
var G__290305 = " ";
var G__290306 = (function (){var G__290407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290408 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290407,G__290408) : tailrecursion.hoplon.span.call(null,G__290407,G__290408));
})();
var G__290307 = ") (";
var G__290308 = (function (){var G__290409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290410 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290409,G__290410) : tailrecursion.hoplon.span.call(null,G__290409,G__290410));
})();
var G__290309 = (function (){var G__290411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290412 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290411,G__290412) : tailrecursion.hoplon.span.call(null,G__290411,G__290412));
})();
var G__290310 = " ";
var G__290311 = (function (){var G__290413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290414 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290413,G__290414) : tailrecursion.hoplon.span.call(null,G__290413,G__290414));
})();
var G__290312 = ") (";
var G__290313 = (function (){var G__290415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290416 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290415,G__290416) : tailrecursion.hoplon.span.call(null,G__290415,G__290416));
})();
var G__290314 = (function (){var G__290417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290418 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290417,G__290418) : tailrecursion.hoplon.span.call(null,G__290417,G__290418));
})();
var G__290315 = " ";
var G__290316 = (function (){var G__290419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290420 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290419,G__290420) : tailrecursion.hoplon.span.call(null,G__290419,G__290420));
})();
var G__290317 = "))\n                       (";
var G__290318 = (function (){var G__290421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290422 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290421,G__290422) : tailrecursion.hoplon.span.call(null,G__290421,G__290422));
})();
var G__290319 = (function (){var G__290423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290424 = "count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290423,G__290424) : tailrecursion.hoplon.span.call(null,G__290423,G__290424));
})();
var G__290320 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$96 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$96(G__290225,G__290226,G__290227,G__290228,G__290229,G__290230,G__290231,G__290232,G__290233,G__290234,G__290235,G__290236,G__290237,G__290238,G__290239,G__290240,G__290241,G__290242,G__290243,G__290244,G__290245,G__290246,G__290247,G__290248,G__290249,G__290250,G__290251,G__290252,G__290253,G__290254,G__290255,G__290256,G__290257,G__290258,G__290259,G__290260,G__290261,G__290262,G__290263,G__290264,G__290265,G__290266,G__290267,G__290268,G__290269,G__290270,G__290271,G__290272,G__290273,G__290274,G__290275,G__290276,G__290277,G__290278,G__290279,G__290280,G__290281,G__290282,G__290283,G__290284,G__290285,G__290286,G__290287,G__290288,G__290289,G__290290,G__290291,G__290292,G__290293,G__290294,G__290295,G__290296,G__290297,G__290298,G__290299,G__290300,G__290301,G__290302,G__290303,G__290304,G__290305,G__290306,G__290307,G__290308,G__290309,G__290310,G__290311,G__290312,G__290313,G__290314,G__290315,G__290316,G__290317,G__290318,G__290319,G__290320) : tailrecursion.hoplon.pre.call(null,G__290225,G__290226,G__290227,G__290228,G__290229,G__290230,G__290231,G__290232,G__290233,G__290234,G__290235,G__290236,G__290237,G__290238,G__290239,G__290240,G__290241,G__290242,G__290243,G__290244,G__290245,G__290246,G__290247,G__290248,G__290249,G__290250,G__290251,G__290252,G__290253,G__290254,G__290255,G__290256,G__290257,G__290258,G__290259,G__290260,G__290261,G__290262,G__290263,G__290264,G__290265,G__290266,G__290267,G__290268,G__290269,G__290270,G__290271,G__290272,G__290273,G__290274,G__290275,G__290276,G__290277,G__290278,G__290279,G__290280,G__290281,G__290282,G__290283,G__290284,G__290285,G__290286,G__290287,G__290288,G__290289,G__290290,G__290291,G__290292,G__290293,G__290294,G__290295,G__290296,G__290297,G__290298,G__290299,G__290300,G__290301,G__290302,G__290303,G__290304,G__290305,G__290306,G__290307,G__290308,G__290309,G__290310,G__290311,G__290312,G__290313,G__290314,G__290315,G__290316,G__290317,G__290318,G__290319,G__290320));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__290223,G__290224) : tailrecursion.hoplon.div.call(null,G__290223,G__290224));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__290222) : tailrecursion.hoplon.div.call(null,G__290222));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290011;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290010;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290009;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290008;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_290425 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290426 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290427 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290428 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290429 = cljs.core.PersistentArrayMap.EMPTY;
var G__290430 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__290431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290432 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290431,G__290432) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290431,G__290432));
})(),"s find what \\(p",(function (){var G__290433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290434 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290433,G__290434) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290433,G__290434));
})(),",q",(function (){var G__290435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290436 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290435,G__290436) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290435,G__290436));
})(),"\\) are."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290429,G__290430) : tailrecursion.hoplon.markdown.para_node.call(null,G__290429,G__290430));
})(),(function (){var G__290437 = cljs.core.PersistentArrayMap.EMPTY;
var G__290438 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}T_{pq}^2(a,b)=&T_{pq}(ap+bq,aq+bq+bp) \\\\=&((ap+bq)p+(aq+bq+bp)q,(ap+bq)q+(aq+bq+bp)(q+p)) \\\\=&(ap^2+bpq+aq^2+bq^2+bpq, apq+bq^2+aq^2+apq+b(q+p)^2) \\\\=&(a(p^2+q^2)+b(q^2+2pq),a(q^2+2pq)+b(p^2+2q^2+2pq))\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290437,G__290438) : tailrecursion.hoplon.markdown.para_node.call(null,G__290437,G__290438));
})(),(function (){var G__290439 = cljs.core.PersistentArrayMap.EMPTY;
var G__290440 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So that, \\(p",(function (){var G__290441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290442 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290441,G__290442) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290441,G__290442));
})(),"=p^2+q^2\\) and \\(q",(function (){var G__290443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290444 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290443,G__290444) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290443,G__290444));
})(),"=q^2+2pq\\) and our missing pieces of code are, ",(function (){var G__290445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(+ (square p) (square q))"], null);
var G__290446 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290445,G__290446) : tailrecursion.hoplon.markdown.code_node.call(null,G__290445,G__290446));
})()," and ",(function (){var G__290447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(+ (square q)\n(* 2 p q))"], null);
var G__290448 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290447,G__290448) : tailrecursion.hoplon.markdown.code_node.call(null,G__290447,G__290448));
})()," respectively."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290439,G__290440) : tailrecursion.hoplon.markdown.para_node.call(null,G__290439,G__290440));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290428;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290427;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290426;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290425;
}})()], 0))], 0))], 0));
var G__279821 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Greatest Common Divisors"], null),(function (){var _STAR_references_STAR_290449 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290450 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290451 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290452 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290453 = cljs.core.PersistentArrayMap.EMPTY;
var G__290454 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The greatest common divisor (GCD) of two integers \\(a\\) and \\(b\\) is defined to be the largest integer that divides both \\(a\\) and \\(b\\) with no remainder. For example, the GCD of 16 and 28 is 4. In chapter 2, when we investigate how to implement rational-number arithmetic, we will need to be able to compute GCDs in order to reduce rational numbers to lowest terms. (To reduce a rational number to lowest terms, we must divide both the numerator and the denominator by their GCD. For example, 16/28 reduces to 4/7.) One way to find the GCD of two integers is to factor them and search for common factors, but there is a famous algorithm that is much more efficient."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290453,G__290454) : tailrecursion.hoplon.markdown.para_node.call(null,G__290453,G__290454));
})(),(function (){var G__290455 = cljs.core.PersistentArrayMap.EMPTY;
var G__290456 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The idea of the algorithm is based on the observation that, if \\(r\\) is the remainder when \\(a\\) is divided by \\(b\\), then the common divisors of \\(a\\) and \\(b\\) are precisely the same as the common divisors of \\(b\\) and \\(r\\). Thus, we can use the equation"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290455,G__290456) : tailrecursion.hoplon.markdown.para_node.call(null,G__290455,G__290456));
})(),(function (){var G__290457 = cljs.core.PersistentArrayMap.EMPTY;
var G__290458 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$GCD(a,b)=GCD(b,r)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290457,G__290458) : tailrecursion.hoplon.markdown.para_node.call(null,G__290457,G__290458));
})(),(function (){var G__290459 = cljs.core.PersistentArrayMap.EMPTY;
var G__290460 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["to successively reduce the problem of computing a GCD to the problem of computing the GCD of smaller and smaller pairs of integers. For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290459,G__290460) : tailrecursion.hoplon.markdown.para_node.call(null,G__290459,G__290460));
})(),(function (){var G__290461 = cljs.core.PersistentArrayMap.EMPTY;
var G__290462 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}  GCD(206,40)=&GCD(40,6)  \\\\=&GCD(6,4)  \\\\=&GCD(4,2)  \\\\=&GCD(2,0)  \\\\=&2  \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290461,G__290462) : tailrecursion.hoplon.markdown.para_node.call(null,G__290461,G__290462));
})(),(function (){var G__290463 = cljs.core.PersistentArrayMap.EMPTY;
var G__290464 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["reduces GCD(206,40) to GCD(2,0), which is 2. It is possible to show that starting with any two positive integers and performing repeated reductions will always eventually produce a pair where the second number is 0. Then the GCD is the other number in the pair. This method for computing the GCD is known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Euclid",(function (){var G__290465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290466 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290465,G__290466) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290465,G__290466));
})(),"s Algorithm"], null)], 0)),".",(function (){var G__290467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__290468 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Euclid",(function (){var G__290469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290470 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290469,G__290470) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290469,G__290470));
})(),"s Algorithm is so called because it appears in Euclid",(function (){var G__290471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290472 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290471,G__290472) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290471,G__290472));
})(),"s ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Elements"], null)], 0))," (Book 7, ca. 300 B.C.). According to Knuth (1973), it can be considered the oldest known nontrivial algorithm. The ancient Egyptian method of multiplication (exercise 1.18) is surely older, but, as Knuth explains, Euclid",(function (){var G__290473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290474 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290473,G__290474) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290473,G__290474));
})(),"s algorithm is the oldest known to have been presented as a general algorithm, rather than as a set of illustrative examples."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__290467,G__290468) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__290467,G__290468));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290463,G__290464) : tailrecursion.hoplon.markdown.para_node.call(null,G__290463,G__290464));
})(),(function (){var G__290475 = cljs.core.PersistentArrayMap.EMPTY;
var G__290476 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It is easy to express Euclid",(function (){var G__290477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290478 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290477,G__290478) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290477,G__290478));
})(),"s Algorithm as a procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290475,G__290476) : tailrecursion.hoplon.markdown.para_node.call(null,G__290475,G__290476));
})(),(function (){var G__290537 = (function (){var G__290538 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__290539 = (function (){var G__290540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__290541 = "(";
var G__290542 = (function (){var G__290568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__290569 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290568,G__290569) : tailrecursion.hoplon.span.call(null,G__290568,G__290569));
})();
var G__290543 = (function (){var G__290570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290571 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290570,G__290571) : tailrecursion.hoplon.span.call(null,G__290570,G__290571));
})();
var G__290544 = " [";
var G__290545 = (function (){var G__290572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290573 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290572,G__290573) : tailrecursion.hoplon.span.call(null,G__290572,G__290573));
})();
var G__290546 = " ";
var G__290547 = (function (){var G__290574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290575 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290574,G__290575) : tailrecursion.hoplon.span.call(null,G__290574,G__290575));
})();
var G__290548 = "]\n  (";
var G__290549 = (function (){var G__290576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__290577 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290576,G__290577) : tailrecursion.hoplon.span.call(null,G__290576,G__290577));
})();
var G__290550 = "(";
var G__290551 = (function (){var G__290578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290579 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290578,G__290579) : tailrecursion.hoplon.span.call(null,G__290578,G__290579));
})();
var G__290552 = (function (){var G__290580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290581 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290580,G__290581) : tailrecursion.hoplon.span.call(null,G__290580,G__290581));
})();
var G__290553 = " ";
var G__290554 = (function (){var G__290582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290583 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290582,G__290583) : tailrecursion.hoplon.span.call(null,G__290582,G__290583));
})();
var G__290555 = ")\n      ";
var G__290556 = (function (){var G__290584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290585 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290584,G__290585) : tailrecursion.hoplon.span.call(null,G__290584,G__290585));
})();
var G__290557 = "\n      (";
var G__290558 = (function (){var G__290586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290587 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290586,G__290587) : tailrecursion.hoplon.span.call(null,G__290586,G__290587));
})();
var G__290559 = " ";
var G__290560 = (function (){var G__290588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290589 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290588,G__290589) : tailrecursion.hoplon.span.call(null,G__290588,G__290589));
})();
var G__290561 = " (";
var G__290562 = (function (){var G__290590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290591 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290590,G__290591) : tailrecursion.hoplon.span.call(null,G__290590,G__290591));
})();
var G__290563 = " ";
var G__290564 = (function (){var G__290592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290593 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290592,G__290593) : tailrecursion.hoplon.span.call(null,G__290592,G__290593));
})();
var G__290565 = " ";
var G__290566 = (function (){var G__290594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290595 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290594,G__290595) : tailrecursion.hoplon.span.call(null,G__290594,G__290595));
})();
var G__290567 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__290540,G__290541,G__290542,G__290543,G__290544,G__290545,G__290546,G__290547,G__290548,G__290549,G__290550,G__290551,G__290552,G__290553,G__290554,G__290555,G__290556,G__290557,G__290558,G__290559,G__290560,G__290561,G__290562,G__290563,G__290564,G__290565,G__290566,G__290567) : tailrecursion.hoplon.pre.call(null,G__290540,G__290541,G__290542,G__290543,G__290544,G__290545,G__290546,G__290547,G__290548,G__290549,G__290550,G__290551,G__290552,G__290553,G__290554,G__290555,G__290556,G__290557,G__290558,G__290559,G__290560,G__290561,G__290562,G__290563,G__290564,G__290565,G__290566,G__290567));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__290538,G__290539) : tailrecursion.hoplon.div.call(null,G__290538,G__290539));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__290537) : tailrecursion.hoplon.div.call(null,G__290537));
})(),(function (){var G__290596 = cljs.core.PersistentArrayMap.EMPTY;
var G__290597 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Or using recur, "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290596,G__290597) : tailrecursion.hoplon.markdown.para_node.call(null,G__290596,G__290597));
})(),(function (){var G__290656 = (function (){var G__290657 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__290658 = (function (){var G__290659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__290660 = "(";
var G__290661 = (function (){var G__290687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__290688 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290687,G__290688) : tailrecursion.hoplon.span.call(null,G__290687,G__290688));
})();
var G__290662 = (function (){var G__290689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290690 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290689,G__290690) : tailrecursion.hoplon.span.call(null,G__290689,G__290690));
})();
var G__290663 = " [";
var G__290664 = (function (){var G__290691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290692 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290691,G__290692) : tailrecursion.hoplon.span.call(null,G__290691,G__290692));
})();
var G__290665 = " ";
var G__290666 = (function (){var G__290693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290694 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290693,G__290694) : tailrecursion.hoplon.span.call(null,G__290693,G__290694));
})();
var G__290667 = "]\n  (";
var G__290668 = (function (){var G__290695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__290696 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290695,G__290696) : tailrecursion.hoplon.span.call(null,G__290695,G__290696));
})();
var G__290669 = "(";
var G__290670 = (function (){var G__290697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290698 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290697,G__290698) : tailrecursion.hoplon.span.call(null,G__290697,G__290698));
})();
var G__290671 = (function (){var G__290699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290700 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290699,G__290700) : tailrecursion.hoplon.span.call(null,G__290699,G__290700));
})();
var G__290672 = " ";
var G__290673 = (function (){var G__290701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290702 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290701,G__290702) : tailrecursion.hoplon.span.call(null,G__290701,G__290702));
})();
var G__290674 = ")\n      ";
var G__290675 = (function (){var G__290703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290704 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290703,G__290704) : tailrecursion.hoplon.span.call(null,G__290703,G__290704));
})();
var G__290676 = "\n      (";
var G__290677 = (function (){var G__290705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290706 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290705,G__290706) : tailrecursion.hoplon.span.call(null,G__290705,G__290706));
})();
var G__290678 = " ";
var G__290679 = (function (){var G__290707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290708 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290707,G__290708) : tailrecursion.hoplon.span.call(null,G__290707,G__290708));
})();
var G__290680 = " (";
var G__290681 = (function (){var G__290709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290710 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290709,G__290710) : tailrecursion.hoplon.span.call(null,G__290709,G__290710));
})();
var G__290682 = " ";
var G__290683 = (function (){var G__290711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290712 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290711,G__290712) : tailrecursion.hoplon.span.call(null,G__290711,G__290712));
})();
var G__290684 = " ";
var G__290685 = (function (){var G__290713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290714 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290713,G__290714) : tailrecursion.hoplon.span.call(null,G__290713,G__290714));
})();
var G__290686 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__290659,G__290660,G__290661,G__290662,G__290663,G__290664,G__290665,G__290666,G__290667,G__290668,G__290669,G__290670,G__290671,G__290672,G__290673,G__290674,G__290675,G__290676,G__290677,G__290678,G__290679,G__290680,G__290681,G__290682,G__290683,G__290684,G__290685,G__290686) : tailrecursion.hoplon.pre.call(null,G__290659,G__290660,G__290661,G__290662,G__290663,G__290664,G__290665,G__290666,G__290667,G__290668,G__290669,G__290670,G__290671,G__290672,G__290673,G__290674,G__290675,G__290676,G__290677,G__290678,G__290679,G__290680,G__290681,G__290682,G__290683,G__290684,G__290685,G__290686));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__290657,G__290658) : tailrecursion.hoplon.div.call(null,G__290657,G__290658));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__290656) : tailrecursion.hoplon.div.call(null,G__290656));
})(),(function (){var G__290715 = cljs.core.PersistentArrayMap.EMPTY;
var G__290716 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This generates an iterative process, whose number of steps grows as the logarithm of the numbers involved."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290715,G__290716) : tailrecursion.hoplon.markdown.para_node.call(null,G__290715,G__290716));
})(),(function (){var G__290717 = cljs.core.PersistentArrayMap.EMPTY;
var G__290718 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The fact that the number of steps required by Euclid",(function (){var G__290719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290720 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290719,G__290720) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290719,G__290720));
})(),"s Algorithm has a logarithmic growth bears an interesting relation to the Fibonacci numbers:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290717,G__290718) : tailrecursion.hoplon.markdown.para_node.call(null,G__290717,G__290718));
})(),(function (){var G__290721 = cljs.core.PersistentArrayMap.EMPTY;
var G__290722 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"**",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,true], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lam\u00E9",(function (){var G__290723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290724 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290723,G__290724) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290723,G__290724));
})(),"s Theorem:"], null)], 0))," If Euclid",(function (){var G__290725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290726 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290725,G__290726) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290725,G__290726));
})(),"s Algorithm requires \\(k\\) steps to compute the GCD of some pair, then the smaller number in the pair must be greater than or equal to the \\(k\\)th Fibonacci number.",(function (){var G__290727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__290728 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can prove this by induction. Let",(function (){var G__290729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290730 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290729,G__290730) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290729,G__290730));
})(),"s pick an arbitrary natural number \\(n\\), and assume that for any \\(k<n\\), if a pair of natural numbers \\(a>b>0\\) requires \\(k\\) steps of Euclid",(function (){var G__290731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290732 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290731,G__290732) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290731,G__290732));
})(),"s algorithm to compute their GCD, then both \\(a\\) and \\(b\\) are greater than or equal to \\(Fib(k)\\). Now we take a pair, \\((a_n,b_n)\\) that takes \\(n\\) steps. If \\(n=0\\), then we know we started with zero and we",(function (){var G__290733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290734 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290733,G__290734) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290733,G__290734));
})(),"re done. If \\(n=1\\), then \\(b|a\\), and since neither of them are 0, we",(function (){var G__290735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290736 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290735,G__290736) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290735,G__290736));
})(),"re done. Otherwise, we note that every time we apply an iteration of the algorithm \\((a_n,b_n)\\to(a_{n-1},b_{n-1})\\), where \\(a_{n-1}=b_n\\) and \\(a_n=q\\cdot b_n+b_{n-1}\\) for some integer \\(q>0\\). Now we note, if we apply two iterations, \\((a_n,b_n)\\to (a_{n-2},b_{n-2})\\), where \\(a_{n-2}=b_{n-1}\\) and \\(a_{n-1}=s\\cdot b_{n-1}+b_{n-2}\\) and \\(s>0\\). So we",(function (){var G__290737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290738 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290737,G__290738) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290737,G__290738));
})(),"ve concluded \\(b_n=a_{n-1}=s\\cdot b_{n-1}+b_{n-2}\\geq b_{n-1}+b_{n-2}\\), which by assumption are greater than \\(Fib(n-1)\\) and \\(Fib(n-2)\\) respectively. Hence, \\(a_n>b_n\\geq Fib(n-1)+Fib(n-2)=Fib(n)\\)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__290727,G__290728) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__290727,G__290728));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290721,G__290722) : tailrecursion.hoplon.markdown.para_node.call(null,G__290721,G__290722));
})(),(function (){var G__290739 = cljs.core.PersistentArrayMap.EMPTY;
var G__290740 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can use this theorem to get an order-of-growth estimate for Euclid",(function (){var G__290741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290742 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290741,G__290742) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290741,G__290742));
})(),"s Algorithm. Let \\(n\\) be the smaller of the two inputs to the procedure. If the process takes \\(k\\) steps, then we must have \\(n\\geq Fib(k)\\approx\\phi^k/\\sqrt5\\). Therefore the smaller of steps \\(k\\) grows as the logarithm (to the base \\(\\phi\\)) of \\(n\\). Hence, the order of growth is \\(\\Theta(\\log n)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290739,G__290740) : tailrecursion.hoplon.markdown.para_node.call(null,G__290739,G__290740));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290452;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290451;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290450;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290449;
}})()], 0));
var G__279822 = "";
var G__279823 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"20"], null),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_290743 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290744 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290745 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290746 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290747 = cljs.core.PersistentArrayMap.EMPTY;
var G__290748 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The process that a procedure generates is of course dependent on the rules used by the interpreter. As an example, consider the iterative ",(function (){var G__290749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__290750 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290749,G__290750) : tailrecursion.hoplon.markdown.code_node.call(null,G__290749,G__290750));
})()," procedure given above. Suppose we were to interpret this procedure using normal-order evaluation, as discussed in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/5/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.5"], null)], 0)),". (The normal-order-evaluation rule for ",(function (){var G__290751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"if"], null);
var G__290752 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290751,G__290752) : tailrecursion.hoplon.markdown.code_node.call(null,G__290751,G__290752));
})()," is described in exercise 1.5.) Using the substitution method (for normal order), illustrate the process generated in evaluating ",(function (){var G__290753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(gcd 206\n40)"], null);
var G__290754 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290753,G__290754) : tailrecursion.hoplon.markdown.code_node.call(null,G__290753,G__290754));
})()," and indicate the ",(function (){var G__290755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__290756 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290755,G__290756) : tailrecursion.hoplon.markdown.code_node.call(null,G__290755,G__290756));
})()," operations that are actually performed. How many ",(function (){var G__290757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__290758 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290757,G__290758) : tailrecursion.hoplon.markdown.code_node.call(null,G__290757,G__290758));
})()," operations are actually performed in the normal-order evaluation of ",(function (){var G__290759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(gcd 206 40)"], null);
var G__290760 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290759,G__290760) : tailrecursion.hoplon.markdown.code_node.call(null,G__290759,G__290760));
})(),"? In the applicative-order evaluation?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290747,G__290748) : tailrecursion.hoplon.markdown.para_node.call(null,G__290747,G__290748));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290746;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290745;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290744;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290743;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_290761 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290762 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290763 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290764 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290765 = cljs.core.PersistentArrayMap.EMPTY;
var G__290766 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For applicative order evaluation:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290765,G__290766) : tailrecursion.hoplon.markdown.para_node.call(null,G__290765,G__290766));
})(),(function (){var G__290950 = (function (){var G__290951 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__290952 = (function (){var G__290953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__290954 = "(";
var G__290955 = (function (){var G__291044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291045 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291044,G__291045) : tailrecursion.hoplon.span.call(null,G__291044,G__291045));
})();
var G__290956 = " ";
var G__290957 = (function (){var G__291046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291047 = "206";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291046,G__291047) : tailrecursion.hoplon.span.call(null,G__291046,G__291047));
})();
var G__290958 = " ";
var G__290959 = (function (){var G__291048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291049 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291048,G__291049) : tailrecursion.hoplon.span.call(null,G__291048,G__291049));
})();
var G__290960 = ") ";
var G__290961 = (function (){var G__291050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291051 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291050,G__291051) : tailrecursion.hoplon.span.call(null,G__291050,G__291051));
})();
var G__290962 = "(";
var G__290963 = (function (){var G__291052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291053 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291052,G__291053) : tailrecursion.hoplon.span.call(null,G__291052,G__291053));
})();
var G__290964 = " ";
var G__290965 = (function (){var G__291054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291055 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291054,G__291055) : tailrecursion.hoplon.span.call(null,G__291054,G__291055));
})();
var G__290966 = " (";
var G__290967 = (function (){var G__291056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291057 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291056,G__291057) : tailrecursion.hoplon.span.call(null,G__291056,G__291057));
})();
var G__290968 = " ";
var G__290969 = (function (){var G__291058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291059 = "206";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291058,G__291059) : tailrecursion.hoplon.span.call(null,G__291058,G__291059));
})();
var G__290970 = " ";
var G__290971 = (function (){var G__291060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291061 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291060,G__291061) : tailrecursion.hoplon.span.call(null,G__291060,G__291061));
})();
var G__290972 = "))\n             ";
var G__290973 = (function (){var G__291062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291063 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291062,G__291063) : tailrecursion.hoplon.span.call(null,G__291062,G__291063));
})();
var G__290974 = "(";
var G__290975 = (function (){var G__291064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291065 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291064,G__291065) : tailrecursion.hoplon.span.call(null,G__291064,G__291065));
})();
var G__290976 = " ";
var G__290977 = (function (){var G__291066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291067 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291066,G__291067) : tailrecursion.hoplon.span.call(null,G__291066,G__291067));
})();
var G__290978 = " ";
var G__290979 = (function (){var G__291068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291069 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291068,G__291069) : tailrecursion.hoplon.span.call(null,G__291068,G__291069));
})();
var G__290980 = ")\n             ";
var G__290981 = (function (){var G__291070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291071 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291070,G__291071) : tailrecursion.hoplon.span.call(null,G__291070,G__291071));
})();
var G__290982 = "(";
var G__290983 = (function (){var G__291072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291073 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291072,G__291073) : tailrecursion.hoplon.span.call(null,G__291072,G__291073));
})();
var G__290984 = " ";
var G__290985 = (function (){var G__291074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291075 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291074,G__291075) : tailrecursion.hoplon.span.call(null,G__291074,G__291075));
})();
var G__290986 = " (";
var G__290987 = (function (){var G__291076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291077 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291076,G__291077) : tailrecursion.hoplon.span.call(null,G__291076,G__291077));
})();
var G__290988 = " ";
var G__290989 = (function (){var G__291078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291079 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291078,G__291079) : tailrecursion.hoplon.span.call(null,G__291078,G__291079));
})();
var G__290990 = " ";
var G__290991 = (function (){var G__291080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291081 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291080,G__291081) : tailrecursion.hoplon.span.call(null,G__291080,G__291081));
})();
var G__290992 = "))\n             ";
var G__290993 = (function (){var G__291082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291083 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291082,G__291083) : tailrecursion.hoplon.span.call(null,G__291082,G__291083));
})();
var G__290994 = "(";
var G__290995 = (function (){var G__291084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291085 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291084,G__291085) : tailrecursion.hoplon.span.call(null,G__291084,G__291085));
})();
var G__290996 = " ";
var G__290997 = (function (){var G__291086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291087 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291086,G__291087) : tailrecursion.hoplon.span.call(null,G__291086,G__291087));
})();
var G__290998 = " ";
var G__290999 = (function (){var G__291088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291089 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291088,G__291089) : tailrecursion.hoplon.span.call(null,G__291088,G__291089));
})();
var G__291000 = "\n             ";
var G__291001 = (function (){var G__291090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291091 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291090,G__291091) : tailrecursion.hoplon.span.call(null,G__291090,G__291091));
})();
var G__291002 = "(";
var G__291003 = (function (){var G__291092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291093 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291092,G__291093) : tailrecursion.hoplon.span.call(null,G__291092,G__291093));
})();
var G__291004 = " ";
var G__291005 = (function (){var G__291094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291095 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291094,G__291095) : tailrecursion.hoplon.span.call(null,G__291094,G__291095));
})();
var G__291006 = " (";
var G__291007 = (function (){var G__291096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291097 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291096,G__291097) : tailrecursion.hoplon.span.call(null,G__291096,G__291097));
})();
var G__291008 = " ";
var G__291009 = (function (){var G__291098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291099 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291098,G__291099) : tailrecursion.hoplon.span.call(null,G__291098,G__291099));
})();
var G__291010 = " ";
var G__291011 = (function (){var G__291100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291101 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291100,G__291101) : tailrecursion.hoplon.span.call(null,G__291100,G__291101));
})();
var G__291012 = "))\n             ";
var G__291013 = (function (){var G__291102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291103 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291102,G__291103) : tailrecursion.hoplon.span.call(null,G__291102,G__291103));
})();
var G__291014 = "(";
var G__291015 = (function (){var G__291104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291105 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291104,G__291105) : tailrecursion.hoplon.span.call(null,G__291104,G__291105));
})();
var G__291016 = " ";
var G__291017 = (function (){var G__291106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291107 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291106,G__291107) : tailrecursion.hoplon.span.call(null,G__291106,G__291107));
})();
var G__291018 = " ";
var G__291019 = (function (){var G__291108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291109 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291108,G__291109) : tailrecursion.hoplon.span.call(null,G__291108,G__291109));
})();
var G__291020 = ")\n             ";
var G__291021 = (function (){var G__291110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291111 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291110,G__291111) : tailrecursion.hoplon.span.call(null,G__291110,G__291111));
})();
var G__291022 = "(";
var G__291023 = (function (){var G__291112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291113 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291112,G__291113) : tailrecursion.hoplon.span.call(null,G__291112,G__291113));
})();
var G__291024 = " ";
var G__291025 = (function (){var G__291114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291115 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291114,G__291115) : tailrecursion.hoplon.span.call(null,G__291114,G__291115));
})();
var G__291026 = " (";
var G__291027 = (function (){var G__291116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291117 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291116,G__291117) : tailrecursion.hoplon.span.call(null,G__291116,G__291117));
})();
var G__291028 = " ";
var G__291029 = (function (){var G__291118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291119 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291118,G__291119) : tailrecursion.hoplon.span.call(null,G__291118,G__291119));
})();
var G__291030 = " ";
var G__291031 = (function (){var G__291120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291121 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291120,G__291121) : tailrecursion.hoplon.span.call(null,G__291120,G__291121));
})();
var G__291032 = "))\n             ";
var G__291033 = (function (){var G__291122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291123 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291122,G__291123) : tailrecursion.hoplon.span.call(null,G__291122,G__291123));
})();
var G__291034 = "(";
var G__291035 = (function (){var G__291124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291125 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291124,G__291125) : tailrecursion.hoplon.span.call(null,G__291124,G__291125));
})();
var G__291036 = " ";
var G__291037 = (function (){var G__291126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291127 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291126,G__291127) : tailrecursion.hoplon.span.call(null,G__291126,G__291127));
})();
var G__291038 = " ";
var G__291039 = (function (){var G__291128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291129 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291128,G__291129) : tailrecursion.hoplon.span.call(null,G__291128,G__291129));
})();
var G__291040 = ")\n             ";
var G__291041 = (function (){var G__291130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291131 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291130,G__291131) : tailrecursion.hoplon.span.call(null,G__291130,G__291131));
})();
var G__291042 = (function (){var G__291132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291133 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291132,G__291133) : tailrecursion.hoplon.span.call(null,G__291132,G__291133));
})();
var G__291043 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$91 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$91(G__290953,G__290954,G__290955,G__290956,G__290957,G__290958,G__290959,G__290960,G__290961,G__290962,G__290963,G__290964,G__290965,G__290966,G__290967,G__290968,G__290969,G__290970,G__290971,G__290972,G__290973,G__290974,G__290975,G__290976,G__290977,G__290978,G__290979,G__290980,G__290981,G__290982,G__290983,G__290984,G__290985,G__290986,G__290987,G__290988,G__290989,G__290990,G__290991,G__290992,G__290993,G__290994,G__290995,G__290996,G__290997,G__290998,G__290999,G__291000,G__291001,G__291002,G__291003,G__291004,G__291005,G__291006,G__291007,G__291008,G__291009,G__291010,G__291011,G__291012,G__291013,G__291014,G__291015,G__291016,G__291017,G__291018,G__291019,G__291020,G__291021,G__291022,G__291023,G__291024,G__291025,G__291026,G__291027,G__291028,G__291029,G__291030,G__291031,G__291032,G__291033,G__291034,G__291035,G__291036,G__291037,G__291038,G__291039,G__291040,G__291041,G__291042,G__291043) : tailrecursion.hoplon.pre.call(null,G__290953,G__290954,G__290955,G__290956,G__290957,G__290958,G__290959,G__290960,G__290961,G__290962,G__290963,G__290964,G__290965,G__290966,G__290967,G__290968,G__290969,G__290970,G__290971,G__290972,G__290973,G__290974,G__290975,G__290976,G__290977,G__290978,G__290979,G__290980,G__290981,G__290982,G__290983,G__290984,G__290985,G__290986,G__290987,G__290988,G__290989,G__290990,G__290991,G__290992,G__290993,G__290994,G__290995,G__290996,G__290997,G__290998,G__290999,G__291000,G__291001,G__291002,G__291003,G__291004,G__291005,G__291006,G__291007,G__291008,G__291009,G__291010,G__291011,G__291012,G__291013,G__291014,G__291015,G__291016,G__291017,G__291018,G__291019,G__291020,G__291021,G__291022,G__291023,G__291024,G__291025,G__291026,G__291027,G__291028,G__291029,G__291030,G__291031,G__291032,G__291033,G__291034,G__291035,G__291036,G__291037,G__291038,G__291039,G__291040,G__291041,G__291042,G__291043));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__290951,G__290952) : tailrecursion.hoplon.div.call(null,G__290951,G__290952));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__290950) : tailrecursion.hoplon.div.call(null,G__290950));
})(),(function (){var G__291134 = cljs.core.PersistentArrayMap.EMPTY;
var G__291135 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, in applicative order, ",(function (){var G__291136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__291137 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291136,G__291137) : tailrecursion.hoplon.markdown.code_node.call(null,G__291136,G__291137));
})()," is only called four times."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291134,G__291135) : tailrecursion.hoplon.markdown.para_node.call(null,G__291134,G__291135));
})(),(function (){var G__291138 = cljs.core.PersistentArrayMap.EMPTY;
var G__291139 = new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For normal-order evaluation it would start with ",(function (){var G__291140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(= 40 0)"], null);
var G__291141 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291140,G__291141) : tailrecursion.hoplon.markdown.code_node.call(null,G__291140,G__291141));
})()," which would lead it to ",(function (){var G__291142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(GCD 40 (mod 206 40))"], null);
var G__291143 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291142,G__291143) : tailrecursion.hoplon.markdown.code_node.call(null,G__291142,G__291143));
})()," without computing the ",(function (){var G__291144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__291145 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291144,G__291145) : tailrecursion.hoplon.markdown.code_node.call(null,G__291144,G__291145));
})()," yet. Then it evaluates ",(function (){var G__291146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(= (mod 206 40) 0)"], null);
var G__291147 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291146,G__291147) : tailrecursion.hoplon.markdown.code_node.call(null,G__291146,G__291147));
})()," with our first ",(function (){var G__291148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__291149 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291148,G__291149) : tailrecursion.hoplon.markdown.code_node.call(null,G__291148,G__291149));
})()," evaluation. Then it calls ",(function (){var G__291150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(GCD (mod 206 40) (mod 40 (mod 206 40)))"], null);
var G__291151 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291150,G__291151) : tailrecursion.hoplon.markdown.code_node.call(null,G__291150,G__291151));
})()," without computing the ",(function (){var G__291152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mods"], null);
var G__291153 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291152,G__291153) : tailrecursion.hoplon.markdown.code_node.call(null,G__291152,G__291153));
})(),", which evaluates ",(function (){var G__291154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(= (mod 40 (mod 206\n40)) 0)"], null);
var G__291155 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291154,G__291155) : tailrecursion.hoplon.markdown.code_node.call(null,G__291154,G__291155));
})()," which gives us our second and third calls for ",(function (){var G__291156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__291157 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291156,G__291157) : tailrecursion.hoplon.markdown.code_node.call(null,G__291156,G__291157));
})()," and calls ",(function (){var G__291158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(GCD (mod 40 (mod 206 40)) (mod (mod 206 40) (mod 40 (mod 206\n40))))"], null);
var G__291159 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291158,G__291159) : tailrecursion.hoplon.markdown.code_node.call(null,G__291158,G__291159));
})()," without evaluating the arguments. This calls ",(function (){var G__291160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(= (mod (mod\n206 40) (mod 40 (mod 206 40))) 0)"], null);
var G__291161 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291160,G__291161) : tailrecursion.hoplon.markdown.code_node.call(null,G__291160,G__291161));
})()," and so on."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291138,G__291139) : tailrecursion.hoplon.markdown.para_node.call(null,G__291138,G__291139));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290764;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290763;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290762;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290761;
}})()], 0))], 0))], 0));
var G__279824 = "";
var G__279825 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Example: Testing for Primality"], null),(function (){var _STAR_references_STAR_291162 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291163 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291164 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291165 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291166 = cljs.core.PersistentArrayMap.EMPTY;
var G__291167 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This section describes two methods for checking the primality of an integer \\(n\\), one with order of growth \\(\\Theta(\\sqrt n)\\), and a ",(function (){var G__291168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__291169 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["probabilistic"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__291168,G__291169) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__291168,G__291169));
})()," algorithm with order of growth \\(\\Theta(\\log n)\\). The exercises at the end of this section suggest programming projects based on these algorithms."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291166,G__291167) : tailrecursion.hoplon.markdown.para_node.call(null,G__291166,G__291167));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291165;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291164;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291163;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291162;
}})()], 0));
var G__279826 = "";
var G__279827 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Searching for Divisors"], null),(function (){var _STAR_references_STAR_291170 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291171 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291172 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291173 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291174 = cljs.core.PersistentArrayMap.EMPTY;
var G__291175 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since ancient times, mathematicians have been fascinated by the problems concerning prime numbers, and many people have worked on the problem of determining ways to test if numbers are prime. One way to test if a number is prime is to find the number",(function (){var G__291176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__291177 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__291176,G__291177) : tailrecursion.hoplon.markdown.simple_node.call(null,G__291176,G__291177));
})(),"s divisors. The following program finds the smallest integral divisor (greater than 1) of a given number \\(n\\). It does this in a straightforward way, by testing \\(n\\) for divisibility by successive integers starting with 2."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291174,G__291175) : tailrecursion.hoplon.markdown.para_node.call(null,G__291174,G__291175));
})(),(function (){var G__291314 = (function (){var G__291315 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__291316 = (function (){var G__291317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__291318 = "(";
var G__291319 = (function (){var G__291383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__291384 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291383,G__291384) : tailrecursion.hoplon.span.call(null,G__291383,G__291384));
})();
var G__291320 = (function (){var G__291385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291386 = "divides?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291385,G__291386) : tailrecursion.hoplon.span.call(null,G__291385,G__291386));
})();
var G__291321 = " [";
var G__291322 = (function (){var G__291387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291388 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291387,G__291388) : tailrecursion.hoplon.span.call(null,G__291387,G__291388));
})();
var G__291323 = " ";
var G__291324 = (function (){var G__291389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291390 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291389,G__291390) : tailrecursion.hoplon.span.call(null,G__291389,G__291390));
})();
var G__291325 = "]\n  (";
var G__291326 = (function (){var G__291391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291392 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291391,G__291392) : tailrecursion.hoplon.span.call(null,G__291391,G__291392));
})();
var G__291327 = "(";
var G__291328 = (function (){var G__291393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291394 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291393,G__291394) : tailrecursion.hoplon.span.call(null,G__291393,G__291394));
})();
var G__291329 = " ";
var G__291330 = (function (){var G__291395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291396 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291395,G__291396) : tailrecursion.hoplon.span.call(null,G__291395,G__291396));
})();
var G__291331 = " ";
var G__291332 = (function (){var G__291397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291398 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291397,G__291398) : tailrecursion.hoplon.span.call(null,G__291397,G__291398));
})();
var G__291333 = ") ";
var G__291334 = (function (){var G__291399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291400 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291399,G__291400) : tailrecursion.hoplon.span.call(null,G__291399,G__291400));
})();
var G__291335 = "))\n(";
var G__291336 = (function (){var G__291401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__291402 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291401,G__291402) : tailrecursion.hoplon.span.call(null,G__291401,G__291402));
})();
var G__291337 = (function (){var G__291403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291404 = "find-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291403,G__291404) : tailrecursion.hoplon.span.call(null,G__291403,G__291404));
})();
var G__291338 = " [";
var G__291339 = (function (){var G__291405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291406 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291405,G__291406) : tailrecursion.hoplon.span.call(null,G__291405,G__291406));
})();
var G__291340 = " ";
var G__291341 = (function (){var G__291407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291408 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291407,G__291408) : tailrecursion.hoplon.span.call(null,G__291407,G__291408));
})();
var G__291342 = "]\n  (";
var G__291343 = (function (){var G__291409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291410 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291409,G__291410) : tailrecursion.hoplon.span.call(null,G__291409,G__291410));
})();
var G__291344 = "(";
var G__291345 = (function (){var G__291411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291412 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291411,G__291412) : tailrecursion.hoplon.span.call(null,G__291411,G__291412));
})();
var G__291346 = "(";
var G__291347 = (function (){var G__291413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291414 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291413,G__291414) : tailrecursion.hoplon.span.call(null,G__291413,G__291414));
})();
var G__291348 = " ";
var G__291349 = (function (){var G__291415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291416 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291415,G__291416) : tailrecursion.hoplon.span.call(null,G__291415,G__291416));
})();
var G__291350 = ") ";
var G__291351 = (function (){var G__291417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291418 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291417,G__291418) : tailrecursion.hoplon.span.call(null,G__291417,G__291418));
})();
var G__291352 = ") ";
var G__291353 = (function (){var G__291419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291420 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291419,G__291420) : tailrecursion.hoplon.span.call(null,G__291419,G__291420));
})();
var G__291354 = "\n        (";
var G__291355 = (function (){var G__291421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291422 = "divides?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291421,G__291422) : tailrecursion.hoplon.span.call(null,G__291421,G__291422));
})();
var G__291356 = " ";
var G__291357 = (function (){var G__291423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291424 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291423,G__291424) : tailrecursion.hoplon.span.call(null,G__291423,G__291424));
})();
var G__291358 = " ";
var G__291359 = (function (){var G__291425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291426 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291425,G__291426) : tailrecursion.hoplon.span.call(null,G__291425,G__291426));
})();
var G__291360 = ") ";
var G__291361 = (function (){var G__291427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291428 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291427,G__291428) : tailrecursion.hoplon.span.call(null,G__291427,G__291428));
})();
var G__291362 = "\n        ";
var G__291363 = (function (){var G__291429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291430 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291429,G__291430) : tailrecursion.hoplon.span.call(null,G__291429,G__291430));
})();
var G__291364 = " (";
var G__291365 = (function (){var G__291431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291432 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291431,G__291432) : tailrecursion.hoplon.span.call(null,G__291431,G__291432));
})();
var G__291366 = " ";
var G__291367 = (function (){var G__291433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291434 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291433,G__291434) : tailrecursion.hoplon.span.call(null,G__291433,G__291434));
})();
var G__291368 = " (";
var G__291369 = (function (){var G__291435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291436 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291435,G__291436) : tailrecursion.hoplon.span.call(null,G__291435,G__291436));
})();
var G__291370 = (function (){var G__291437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291438 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291437,G__291438) : tailrecursion.hoplon.span.call(null,G__291437,G__291438));
})();
var G__291371 = "))))\n(";
var G__291372 = (function (){var G__291439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__291440 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291439,G__291440) : tailrecursion.hoplon.span.call(null,G__291439,G__291440));
})();
var G__291373 = (function (){var G__291441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291442 = "smallest-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291441,G__291442) : tailrecursion.hoplon.span.call(null,G__291441,G__291442));
})();
var G__291374 = " [";
var G__291375 = (function (){var G__291443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291444 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291443,G__291444) : tailrecursion.hoplon.span.call(null,G__291443,G__291444));
})();
var G__291376 = "]\n  (";
var G__291377 = (function (){var G__291445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291446 = "find-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291445,G__291446) : tailrecursion.hoplon.span.call(null,G__291445,G__291446));
})();
var G__291378 = " ";
var G__291379 = (function (){var G__291447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291448 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291447,G__291448) : tailrecursion.hoplon.span.call(null,G__291447,G__291448));
})();
var G__291380 = " ";
var G__291381 = (function (){var G__291449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291450 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291449,G__291450) : tailrecursion.hoplon.span.call(null,G__291449,G__291450));
})();
var G__291382 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$66 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$66(G__291317,G__291318,G__291319,G__291320,G__291321,G__291322,G__291323,G__291324,G__291325,G__291326,G__291327,G__291328,G__291329,G__291330,G__291331,G__291332,G__291333,G__291334,G__291335,G__291336,G__291337,G__291338,G__291339,G__291340,G__291341,G__291342,G__291343,G__291344,G__291345,G__291346,G__291347,G__291348,G__291349,G__291350,G__291351,G__291352,G__291353,G__291354,G__291355,G__291356,G__291357,G__291358,G__291359,G__291360,G__291361,G__291362,G__291363,G__291364,G__291365,G__291366,G__291367,G__291368,G__291369,G__291370,G__291371,G__291372,G__291373,G__291374,G__291375,G__291376,G__291377,G__291378,G__291379,G__291380,G__291381,G__291382) : tailrecursion.hoplon.pre.call(null,G__291317,G__291318,G__291319,G__291320,G__291321,G__291322,G__291323,G__291324,G__291325,G__291326,G__291327,G__291328,G__291329,G__291330,G__291331,G__291332,G__291333,G__291334,G__291335,G__291336,G__291337,G__291338,G__291339,G__291340,G__291341,G__291342,G__291343,G__291344,G__291345,G__291346,G__291347,G__291348,G__291349,G__291350,G__291351,G__291352,G__291353,G__291354,G__291355,G__291356,G__291357,G__291358,G__291359,G__291360,G__291361,G__291362,G__291363,G__291364,G__291365,G__291366,G__291367,G__291368,G__291369,G__291370,G__291371,G__291372,G__291373,G__291374,G__291375,G__291376,G__291377,G__291378,G__291379,G__291380,G__291381,G__291382));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__291315,G__291316) : tailrecursion.hoplon.div.call(null,G__291315,G__291316));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__291314) : tailrecursion.hoplon.div.call(null,G__291314));
})(),(function (){var G__291451 = cljs.core.PersistentArrayMap.EMPTY;
var G__291452 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can test whether a number is prime as follows: \\(n\\) is prime if and only if \\(n\\) is its own smallest divisor."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291451,G__291452) : tailrecursion.hoplon.markdown.para_node.call(null,G__291451,G__291452));
})(),(function (){var G__291483 = (function (){var G__291484 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__291485 = (function (){var G__291486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__291487 = "(";
var G__291488 = (function (){var G__291500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__291501 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291500,G__291501) : tailrecursion.hoplon.span.call(null,G__291500,G__291501));
})();
var G__291489 = (function (){var G__291502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291503 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291502,G__291503) : tailrecursion.hoplon.span.call(null,G__291502,G__291503));
})();
var G__291490 = " [";
var G__291491 = (function (){var G__291504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291505 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291504,G__291505) : tailrecursion.hoplon.span.call(null,G__291504,G__291505));
})();
var G__291492 = "]\n  (";
var G__291493 = (function (){var G__291506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291507 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291506,G__291507) : tailrecursion.hoplon.span.call(null,G__291506,G__291507));
})();
var G__291494 = (function (){var G__291508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291509 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291508,G__291509) : tailrecursion.hoplon.span.call(null,G__291508,G__291509));
})();
var G__291495 = " (";
var G__291496 = (function (){var G__291510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291511 = "smallest-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291510,G__291511) : tailrecursion.hoplon.span.call(null,G__291510,G__291511));
})();
var G__291497 = " ";
var G__291498 = (function (){var G__291512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291513 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291512,G__291513) : tailrecursion.hoplon.span.call(null,G__291512,G__291513));
})();
var G__291499 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__291486,G__291487,G__291488,G__291489,G__291490,G__291491,G__291492,G__291493,G__291494,G__291495,G__291496,G__291497,G__291498,G__291499) : tailrecursion.hoplon.pre.call(null,G__291486,G__291487,G__291488,G__291489,G__291490,G__291491,G__291492,G__291493,G__291494,G__291495,G__291496,G__291497,G__291498,G__291499));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__291484,G__291485) : tailrecursion.hoplon.div.call(null,G__291484,G__291485));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__291483) : tailrecursion.hoplon.div.call(null,G__291483));
})(),(function (){var G__291514 = cljs.core.PersistentArrayMap.EMPTY;
var G__291515 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The end test for ",(function (){var G__291516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"find-divisor"], null);
var G__291517 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291516,G__291517) : tailrecursion.hoplon.markdown.code_node.call(null,G__291516,G__291517));
})()," is based on the fact that if \\(n\\) is not prime it must have a divisor less than or equal to \\(\\sqrt n\\).",(function (){var G__291518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__291519 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(d\\) is a divisor of \\(n\\), then so id \\(n/d\\). But \\(d\\) and \\(n/d\\) cannot both be greater than \\(\\sqrt n\\)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__291518,G__291519) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__291518,G__291519));
})()," This means that the algorithm need only test divisors between 1 and \\(\\sqrt n\\). Consequently, the number of steps required to identify \\(n\\) as prime will have order of growth \\(\\Theta (\\sqrt n)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291514,G__291515) : tailrecursion.hoplon.markdown.para_node.call(null,G__291514,G__291515));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291173;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291172;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291171;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291170;
}})()], 0));
var G__279828 = "";
var G__279829 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"The Fermat Test"], null),(function (){var _STAR_references_STAR_291520 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291521 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291522 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291523 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291524 = cljs.core.PersistentArrayMap.EMPTY;
var G__291525 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The \\(\\Theta(\\log n)\\) primality test is based on a result from number theory known as Fermat",(function (){var G__291526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__291527 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__291526,G__291527) : tailrecursion.hoplon.markdown.simple_node.call(null,G__291526,G__291527));
})(),"s Little Theorem.",(function (){var G__291528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__291529 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Pierre de Fermat (1601-1665) is considered to be the founder of modern number theory. He obtained many important number-theoretic results, but he usually announced just the results, without providing his proofs. Fermat",(function (){var G__291530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__291531 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__291530,G__291531) : tailrecursion.hoplon.markdown.simple_node.call(null,G__291530,G__291531));
})(),"s Little Theorem was stated in a letter he wrote in 1640. The first published proof was given by Euler in 1736 (and an earlier, identical proof was discovered in the unpublished manuscripts of Leibniz). The most famous of Fermat",(function (){var G__291532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__291533 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__291532,G__291533) : tailrecursion.hoplon.markdown.simple_node.call(null,G__291532,G__291533));
})(),"s results ",(function (){var G__291534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__291535 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__291534,G__291535) : tailrecursion.hoplon.markdown.simple_node.call(null,G__291534,G__291535));
})()," known as Fermat",(function (){var G__291536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__291537 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__291536,G__291537) : tailrecursion.hoplon.markdown.simple_node.call(null,G__291536,G__291537));
})(),"s Last Theorem ",(function (){var G__291538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__291539 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__291538,G__291539) : tailrecursion.hoplon.markdown.simple_node.call(null,G__291538,G__291539));
})()," was jotted down in 1637 in his copy of the book ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Arithmetic"], null)], 0))," (by the third-century Greek mathematician Diophantus) with the remark ",(function (){var G__291540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__291541 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I have discovered a truly remarkable proof, but this margin is too small to contain it."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__291540,G__291541) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__291540,G__291541));
})()," Finding a proof of Fermat",(function (){var G__291542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__291543 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__291542,G__291543) : tailrecursion.hoplon.markdown.simple_node.call(null,G__291542,G__291543));
})(),"s Last Theorem became one of the most famous challenges in number theory. A complete solution was finally given in 1995 by Andrew Wiles of Princeton University."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__291528,G__291529) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__291528,G__291529));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291524,G__291525) : tailrecursion.hoplon.markdown.para_node.call(null,G__291524,G__291525));
})(),(function (){var G__291544 = cljs.core.PersistentArrayMap.EMPTY;
var G__291545 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"**",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,true], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fermat",(function (){var G__291546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__291547 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__291546,G__291547) : tailrecursion.hoplon.markdown.simple_node.call(null,G__291546,G__291547));
})(),"s Little Theorem:"], null)], 0))," If \\(n\\) is a prime number and \\(a\\) is any positive integer less than \\(n\\), then \\(a\\) raised to the \\(n\\)th power is congruent to \\(a\\) modulo \\(n\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291544,G__291545) : tailrecursion.hoplon.markdown.para_node.call(null,G__291544,G__291545));
})(),(function (){var G__291548 = cljs.core.PersistentArrayMap.EMPTY;
var G__291549 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(Two numbers are said to be ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["congruent modulo"], null)], 0))," \\(n\\) if they both have the same remainder when divided by \\(n\\). The remainder of a number \\(a\\) when divided by \\(n\\) is also referred to as the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["remainder of a modulo n"], null)], 0))," or simply as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a modulo n"], null)], 0)),".)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291548,G__291549) : tailrecursion.hoplon.markdown.para_node.call(null,G__291548,G__291549));
})(),(function (){var G__291550 = cljs.core.PersistentArrayMap.EMPTY;
var G__291551 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(n\\) is not prime, then, in general, most of the numbers \\(a<n\\) will not satisfy the above relation. This leads to the following algorithm for testing primality: Given a number \\(n\\), pick a random number \\(a<n\\) and compute the remainder of \\(a^n\\) modulo \\(n\\). If the result is not equal to \\(a\\), then \\(n\\) is certainly not prime. If it is \\(a\\), then chances are good that \\(n\\) is prime. Now pick another random number \\(a\\) and test it with the same method. If it also satisfies the equation, then we can be even more confident that \\(n\\) is prime. By trying more and more values of \\(a\\), we can increase our confidence in the result. This algorithm is known as the Fermat test."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291550,G__291551) : tailrecursion.hoplon.markdown.para_node.call(null,G__291550,G__291551));
})(),(function (){var G__291552 = cljs.core.PersistentArrayMap.EMPTY;
var G__291553 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To implement the Fermat test, we need a procedure that computes the exponential of a number modulo another number:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291552,G__291553) : tailrecursion.hoplon.markdown.para_node.call(null,G__291552,G__291553));
})(),(function (){var G__291673 = (function (){var G__291674 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__291675 = (function (){var G__291676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__291677 = "(";
var G__291678 = (function (){var G__291733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__291734 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291733,G__291734) : tailrecursion.hoplon.span.call(null,G__291733,G__291734));
})();
var G__291679 = (function (){var G__291735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291736 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291735,G__291736) : tailrecursion.hoplon.span.call(null,G__291735,G__291736));
})();
var G__291680 = " [";
var G__291681 = (function (){var G__291737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291738 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291737,G__291738) : tailrecursion.hoplon.span.call(null,G__291737,G__291738));
})();
var G__291682 = " ";
var G__291683 = (function (){var G__291739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291740 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291739,G__291740) : tailrecursion.hoplon.span.call(null,G__291739,G__291740));
})();
var G__291684 = " ";
var G__291685 = (function (){var G__291741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291742 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291741,G__291742) : tailrecursion.hoplon.span.call(null,G__291741,G__291742));
})();
var G__291686 = "]\n  (";
var G__291687 = (function (){var G__291743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291744 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291743,G__291744) : tailrecursion.hoplon.span.call(null,G__291743,G__291744));
})();
var G__291688 = "(";
var G__291689 = (function (){var G__291745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291746 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291745,G__291746) : tailrecursion.hoplon.span.call(null,G__291745,G__291746));
})();
var G__291690 = (function (){var G__291747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291748 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291747,G__291748) : tailrecursion.hoplon.span.call(null,G__291747,G__291748));
})();
var G__291691 = " ";
var G__291692 = (function (){var G__291749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291750 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291749,G__291750) : tailrecursion.hoplon.span.call(null,G__291749,G__291750));
})();
var G__291693 = ") ";
var G__291694 = (function (){var G__291751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291752 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291751,G__291752) : tailrecursion.hoplon.span.call(null,G__291751,G__291752));
})();
var G__291695 = "\n        (";
var G__291696 = (function (){var G__291753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291754 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291753,G__291754) : tailrecursion.hoplon.span.call(null,G__291753,G__291754));
})();
var G__291697 = " ";
var G__291698 = (function (){var G__291755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291756 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291755,G__291756) : tailrecursion.hoplon.span.call(null,G__291755,G__291756));
})();
var G__291699 = ") (";
var G__291700 = (function (){var G__291757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291758 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291757,G__291758) : tailrecursion.hoplon.span.call(null,G__291757,G__291758));
})();
var G__291701 = " (";
var G__291702 = (function (){var G__291759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291760 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291759,G__291760) : tailrecursion.hoplon.span.call(null,G__291759,G__291760));
})();
var G__291703 = " (";
var G__291704 = (function (){var G__291761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291762 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291761,G__291762) : tailrecursion.hoplon.span.call(null,G__291761,G__291762));
})();
var G__291705 = " ";
var G__291706 = (function (){var G__291763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291764 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291763,G__291764) : tailrecursion.hoplon.span.call(null,G__291763,G__291764));
})();
var G__291707 = " (";
var G__291708 = (function (){var G__291765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291766 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291765,G__291766) : tailrecursion.hoplon.span.call(null,G__291765,G__291766));
})();
var G__291709 = (function (){var G__291767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291768 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291767,G__291768) : tailrecursion.hoplon.span.call(null,G__291767,G__291768));
})();
var G__291710 = " ";
var G__291711 = (function (){var G__291769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291770 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291769,G__291770) : tailrecursion.hoplon.span.call(null,G__291769,G__291770));
})();
var G__291712 = "))) ";
var G__291713 = (function (){var G__291771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291772 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291771,G__291772) : tailrecursion.hoplon.span.call(null,G__291771,G__291772));
})();
var G__291714 = ")\n        ";
var G__291715 = (function (){var G__291773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291774 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291773,G__291774) : tailrecursion.hoplon.span.call(null,G__291773,G__291774));
})();
var G__291716 = " (";
var G__291717 = (function (){var G__291775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291776 = "remainder";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291775,G__291776) : tailrecursion.hoplon.span.call(null,G__291775,G__291776));
})();
var G__291718 = " (";
var G__291719 = (function (){var G__291777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291778 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291777,G__291778) : tailrecursion.hoplon.span.call(null,G__291777,G__291778));
})();
var G__291720 = (function (){var G__291779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291780 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291779,G__291780) : tailrecursion.hoplon.span.call(null,G__291779,G__291780));
})();
var G__291721 = " (";
var G__291722 = (function (){var G__291781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291782 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291781,G__291782) : tailrecursion.hoplon.span.call(null,G__291781,G__291782));
})();
var G__291723 = " ";
var G__291724 = (function (){var G__291783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291784 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291783,G__291784) : tailrecursion.hoplon.span.call(null,G__291783,G__291784));
})();
var G__291725 = " (";
var G__291726 = (function (){var G__291785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291786 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291785,G__291786) : tailrecursion.hoplon.span.call(null,G__291785,G__291786));
})();
var G__291727 = (function (){var G__291787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291788 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291787,G__291788) : tailrecursion.hoplon.span.call(null,G__291787,G__291788));
})();
var G__291728 = " ";
var G__291729 = (function (){var G__291789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291790 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291789,G__291790) : tailrecursion.hoplon.span.call(null,G__291789,G__291790));
})();
var G__291730 = "))) ";
var G__291731 = (function (){var G__291791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291792 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291791,G__291792) : tailrecursion.hoplon.span.call(null,G__291791,G__291792));
})();
var G__291732 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$57 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$57(G__291676,G__291677,G__291678,G__291679,G__291680,G__291681,G__291682,G__291683,G__291684,G__291685,G__291686,G__291687,G__291688,G__291689,G__291690,G__291691,G__291692,G__291693,G__291694,G__291695,G__291696,G__291697,G__291698,G__291699,G__291700,G__291701,G__291702,G__291703,G__291704,G__291705,G__291706,G__291707,G__291708,G__291709,G__291710,G__291711,G__291712,G__291713,G__291714,G__291715,G__291716,G__291717,G__291718,G__291719,G__291720,G__291721,G__291722,G__291723,G__291724,G__291725,G__291726,G__291727,G__291728,G__291729,G__291730,G__291731,G__291732) : tailrecursion.hoplon.pre.call(null,G__291676,G__291677,G__291678,G__291679,G__291680,G__291681,G__291682,G__291683,G__291684,G__291685,G__291686,G__291687,G__291688,G__291689,G__291690,G__291691,G__291692,G__291693,G__291694,G__291695,G__291696,G__291697,G__291698,G__291699,G__291700,G__291701,G__291702,G__291703,G__291704,G__291705,G__291706,G__291707,G__291708,G__291709,G__291710,G__291711,G__291712,G__291713,G__291714,G__291715,G__291716,G__291717,G__291718,G__291719,G__291720,G__291721,G__291722,G__291723,G__291724,G__291725,G__291726,G__291727,G__291728,G__291729,G__291730,G__291731,G__291732));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__291674,G__291675) : tailrecursion.hoplon.div.call(null,G__291674,G__291675));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__291673) : tailrecursion.hoplon.div.call(null,G__291673));
})(),(function (){var G__291793 = cljs.core.PersistentArrayMap.EMPTY;
var G__291794 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291795 = cljs.core.PersistentArrayMap.EMPTY;
var G__291796 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: This is not tail recursive!"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291795,G__291796) : tailrecursion.hoplon.markdown.para_node.call(null,G__291795,G__291796));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__291793,G__291794) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__291793,G__291794));
})(),(function (){var G__291797 = cljs.core.PersistentArrayMap.EMPTY;
var G__291798 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This is very similar to the ",(function (){var G__291799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-expt"], null);
var G__291800 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291799,G__291800) : tailrecursion.hoplon.markdown.code_node.call(null,G__291799,G__291800));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/2/sub/4/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.4"], null)], 0)),". It uses successive squaring, so that the number of steps grows logarithmically with the exponent.",(function (){var G__291801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__291802 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The reduction steps in the cases where the exponent \\(e\\) is greater than 1 are based on the fact that, for any integers \\(x, y\\), and \\(m\\), we can find the remainder of \\(x\\) times \\(y\\) modulo \\(m\\) by computing separately the remainders of \\(x\\) modulo \\(m\\) and \\(y\\) modulo \\(m\\), multiplying these, and then taking the remainder of the result modulo \\(m\\). For instance, in the case where \\(e\\) is even, we compute \\(b^{e/2}\\pmod m\\), square this, and take the remainder modulo m. This technique is useful because it means we can perform our computation without ever having to deal with numbers much larger than m. (Compare exercise 1.25.)"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__291801,G__291802) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__291801,G__291802));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291797,G__291798) : tailrecursion.hoplon.markdown.para_node.call(null,G__291797,G__291798));
})(),(function (){var G__291803 = cljs.core.PersistentArrayMap.EMPTY;
var G__291804 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The Fermat test is performed by choosing at randum a number \\(a\\) between 1 and \\(n-1\\) inclusive and checking whether the remainder modulo \\(n\\) of the \\(n\\)th power of \\(a\\) is equal to \\(a\\). The random number \\(a\\) is chosen using the procedure ",(function (){var G__291805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rand-int"], null);
var G__291806 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291805,G__291806) : tailrecursion.hoplon.markdown.code_node.call(null,G__291805,G__291806));
})()," which returns a nonnegative integer less than its integer input. Hence to obtain a random number between 1 and \\(n-1\\), we call ",(function (){var G__291807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rand-int"], null);
var G__291808 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291807,G__291808) : tailrecursion.hoplon.markdown.code_node.call(null,G__291807,G__291808));
})()," with an input of \\(n-1\\) and add 1 to the result"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291803,G__291804) : tailrecursion.hoplon.markdown.para_node.call(null,G__291803,G__291804));
})(),(function (){var G__291866 = (function (){var G__291867 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__291868 = (function (){var G__291869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__291870 = "(";
var G__291871 = (function (){var G__291896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__291897 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291896,G__291897) : tailrecursion.hoplon.span.call(null,G__291896,G__291897));
})();
var G__291872 = (function (){var G__291898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291899 = "fermat-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291898,G__291899) : tailrecursion.hoplon.span.call(null,G__291898,G__291899));
})();
var G__291873 = " [";
var G__291874 = (function (){var G__291900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291901 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291900,G__291901) : tailrecursion.hoplon.span.call(null,G__291900,G__291901));
})();
var G__291875 = "]\n  (";
var G__291876 = (function (){var G__291902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291903 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291902,G__291903) : tailrecursion.hoplon.span.call(null,G__291902,G__291903));
})();
var G__291877 = "(";
var G__291878 = (function (){var G__291904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291905 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291904,G__291905) : tailrecursion.hoplon.span.call(null,G__291904,G__291905));
})();
var G__291879 = " (";
var G__291880 = (function (){var G__291906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291907 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291906,G__291907) : tailrecursion.hoplon.span.call(null,G__291906,G__291907));
})();
var G__291881 = (function (){var G__291908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291909 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291908,G__291909) : tailrecursion.hoplon.span.call(null,G__291908,G__291909));
})();
var G__291882 = " (";
var G__291883 = (function (){var G__291910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291911 = "rand-int ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291910,G__291911) : tailrecursion.hoplon.span.call(null,G__291910,G__291911));
})();
var G__291884 = "(";
var G__291885 = (function (){var G__291912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291913 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291912,G__291913) : tailrecursion.hoplon.span.call(null,G__291912,G__291913));
})();
var G__291886 = (function (){var G__291914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291915 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291914,G__291915) : tailrecursion.hoplon.span.call(null,G__291914,G__291915));
})();
var G__291887 = " ";
var G__291888 = (function (){var G__291916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291917 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291916,G__291917) : tailrecursion.hoplon.span.call(null,G__291916,G__291917));
})();
var G__291889 = ")))\n             ";
var G__291890 = (function (){var G__291918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291919 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291918,G__291919) : tailrecursion.hoplon.span.call(null,G__291918,G__291919));
})();
var G__291891 = "\n             ";
var G__291892 = (function (){var G__291920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291921 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291920,G__291921) : tailrecursion.hoplon.span.call(null,G__291920,G__291921));
})();
var G__291893 = ")\n     ";
var G__291894 = (function (){var G__291922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291923 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291922,G__291923) : tailrecursion.hoplon.span.call(null,G__291922,G__291923));
})();
var G__291895 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27(G__291869,G__291870,G__291871,G__291872,G__291873,G__291874,G__291875,G__291876,G__291877,G__291878,G__291879,G__291880,G__291881,G__291882,G__291883,G__291884,G__291885,G__291886,G__291887,G__291888,G__291889,G__291890,G__291891,G__291892,G__291893,G__291894,G__291895) : tailrecursion.hoplon.pre.call(null,G__291869,G__291870,G__291871,G__291872,G__291873,G__291874,G__291875,G__291876,G__291877,G__291878,G__291879,G__291880,G__291881,G__291882,G__291883,G__291884,G__291885,G__291886,G__291887,G__291888,G__291889,G__291890,G__291891,G__291892,G__291893,G__291894,G__291895));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__291867,G__291868) : tailrecursion.hoplon.div.call(null,G__291867,G__291868));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__291866) : tailrecursion.hoplon.div.call(null,G__291866));
})(),(function (){var G__291924 = cljs.core.PersistentArrayMap.EMPTY;
var G__291925 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following procedure runs the test a given number of times, as specified by a parameter. Its value is true if the test succeeds every time, and false otherwise."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291924,G__291925) : tailrecursion.hoplon.markdown.para_node.call(null,G__291924,G__291925));
})(),(function (){var G__292007 = (function (){var G__292008 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__292009 = (function (){var G__292010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__292011 = "(";
var G__292012 = (function (){var G__292049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292050 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292049,G__292050) : tailrecursion.hoplon.span.call(null,G__292049,G__292050));
})();
var G__292013 = (function (){var G__292051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292052 = "fast-prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292051,G__292052) : tailrecursion.hoplon.span.call(null,G__292051,G__292052));
})();
var G__292014 = " [";
var G__292015 = (function (){var G__292053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292054 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292053,G__292054) : tailrecursion.hoplon.span.call(null,G__292053,G__292054));
})();
var G__292016 = " ";
var G__292017 = (function (){var G__292055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292056 = "times";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292055,G__292056) : tailrecursion.hoplon.span.call(null,G__292055,G__292056));
})();
var G__292018 = "]\n  (";
var G__292019 = (function (){var G__292057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292058 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292057,G__292058) : tailrecursion.hoplon.span.call(null,G__292057,G__292058));
})();
var G__292020 = "[";
var G__292021 = (function (){var G__292059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292060 = "times-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292059,G__292060) : tailrecursion.hoplon.span.call(null,G__292059,G__292060));
})();
var G__292022 = " ";
var G__292023 = (function (){var G__292061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292062 = "times";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292061,G__292062) : tailrecursion.hoplon.span.call(null,G__292061,G__292062));
})();
var G__292024 = "]\n    (";
var G__292025 = (function (){var G__292063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292064 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292063,G__292064) : tailrecursion.hoplon.span.call(null,G__292063,G__292064));
})();
var G__292026 = "(";
var G__292027 = (function (){var G__292065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292066 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292065,G__292066) : tailrecursion.hoplon.span.call(null,G__292065,G__292066));
})();
var G__292028 = (function (){var G__292067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292068 = "times-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292067,G__292068) : tailrecursion.hoplon.span.call(null,G__292067,G__292068));
})();
var G__292029 = " ";
var G__292030 = (function (){var G__292069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__292070 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292069,G__292070) : tailrecursion.hoplon.span.call(null,G__292069,G__292070));
})();
var G__292031 = ") ";
var G__292032 = (function (){var G__292071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292072 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292071,G__292072) : tailrecursion.hoplon.span.call(null,G__292071,G__292072));
})();
var G__292033 = "\n          (";
var G__292034 = (function (){var G__292073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292074 = "fermat-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292073,G__292074) : tailrecursion.hoplon.span.call(null,G__292073,G__292074));
})();
var G__292035 = " ";
var G__292036 = (function (){var G__292075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292076 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292075,G__292076) : tailrecursion.hoplon.span.call(null,G__292075,G__292076));
})();
var G__292037 = ") (";
var G__292038 = (function (){var G__292077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292078 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292077,G__292078) : tailrecursion.hoplon.span.call(null,G__292077,G__292078));
})();
var G__292039 = " (";
var G__292040 = (function (){var G__292079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292080 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292079,G__292080) : tailrecursion.hoplon.span.call(null,G__292079,G__292080));
})();
var G__292041 = (function (){var G__292081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292082 = "times-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292081,G__292082) : tailrecursion.hoplon.span.call(null,G__292081,G__292082));
})();
var G__292042 = " ";
var G__292043 = (function (){var G__292083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__292084 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292083,G__292084) : tailrecursion.hoplon.span.call(null,G__292083,G__292084));
})();
var G__292044 = "))\n          ";
var G__292045 = (function (){var G__292085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292086 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292085,G__292086) : tailrecursion.hoplon.span.call(null,G__292085,G__292086));
})();
var G__292046 = " ";
var G__292047 = (function (){var G__292087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292088 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292087,G__292088) : tailrecursion.hoplon.span.call(null,G__292087,G__292088));
})();
var G__292048 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$39 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$39(G__292010,G__292011,G__292012,G__292013,G__292014,G__292015,G__292016,G__292017,G__292018,G__292019,G__292020,G__292021,G__292022,G__292023,G__292024,G__292025,G__292026,G__292027,G__292028,G__292029,G__292030,G__292031,G__292032,G__292033,G__292034,G__292035,G__292036,G__292037,G__292038,G__292039,G__292040,G__292041,G__292042,G__292043,G__292044,G__292045,G__292046,G__292047,G__292048) : tailrecursion.hoplon.pre.call(null,G__292010,G__292011,G__292012,G__292013,G__292014,G__292015,G__292016,G__292017,G__292018,G__292019,G__292020,G__292021,G__292022,G__292023,G__292024,G__292025,G__292026,G__292027,G__292028,G__292029,G__292030,G__292031,G__292032,G__292033,G__292034,G__292035,G__292036,G__292037,G__292038,G__292039,G__292040,G__292041,G__292042,G__292043,G__292044,G__292045,G__292046,G__292047,G__292048));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__292008,G__292009) : tailrecursion.hoplon.div.call(null,G__292008,G__292009));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__292007) : tailrecursion.hoplon.div.call(null,G__292007));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291523;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291522;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291521;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291520;
}})()], 0));
var G__279830 = "";
var G__279831 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Probabilistic Methods"], null),(function (){var _STAR_references_STAR_292089 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292090 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292091 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292092 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292093 = cljs.core.PersistentArrayMap.EMPTY;
var G__292094 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Ther Fermat test differs in character from most familiar algorithms, in which one computes an answer that is guaranteed to be correct. Here, the answer obtained is only probably correct. More precisely, if \\(n\\) ever fails the Fermat test, we can be certain that \\(n\\) is not prime. But the fact that \\(n\\) passes the test, while an extremely strong indication, is still not a guarantee that \\(n\\) is prime. What we would like to say is that for any number \\(n\\), if we perform the test enough times and find that \\(n\\) always passes the test, then the probability of error in our primality test can be made as small as we like."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292093,G__292094) : tailrecursion.hoplon.markdown.para_node.call(null,G__292093,G__292094));
})(),(function (){var G__292095 = cljs.core.PersistentArrayMap.EMPTY;
var G__292096 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Unfortunately, this assertion is not quite correct. There do exist numbers that fool the Fermat test: numbers \\(n\\) that are note prime and yet have th property that \\(a^n\\) is congruent to \\(a\\) modulo \\(n\\) for all integers \\(a< n\\). Such numbers are extremely rare, so the Fermat test is quite reliable in practice.",(function (){var G__292097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__292098 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Numbers that fool the Fermat test are called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Carmichael numbers"], null)], 0)),", and little is known about them other than that they are extremely rare. There are 255 Carmichael numbers below 100,000,000. The smallest few are 561, 1105, 1729, 2465, 2821, and 6601. In testing primality of very large numbers chosen at random, the chance of stumbling upon a value that fools the Fermat test is less than the chance that cosmic radiation will cause the computer to make an error in carrying out a ",(function (){var G__292099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__292100 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["correct"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__292099,G__292100) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__292099,G__292100));
})()," algorithm. Considering an algorithm to be inadequate for the first reason but not for the second illustrates the difference between mathematics and engineering."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__292097,G__292098) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__292097,G__292098));
})()," There are variations of the Fermat test that cannot be fooled. In these tests, as with the Fermat method, one tests the primality of an integer \\(n\\) by choosing a random integer \\(a< n\\) and checking some condition that depends upon \\(n\\) and \\(a\\). (See ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/exercise/28/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Exercise 1.28"], null)], 0))," for an example of such a test.) On the other hand, in contrast to the Fermat test, one can prove that, for any \\(n\\), the condition does not hold for most of the integers \\(a<n\\) unless \\(n\\) is prime. Thus, if \\(n\\) passes the test for some random choice of \\(a\\), the chances are better than even that \\(n\\) is prime. If \\(n\\) passes the test for two random choices of \\(a\\), the chances are better than 3 out of 4 that \\(n\\) is prime. By running the test with more and more randomly chosen values of \\(a\\) we can make the probability of error as small as we like."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292095,G__292096) : tailrecursion.hoplon.markdown.para_node.call(null,G__292095,G__292096));
})(),(function (){var G__292101 = cljs.core.PersistentArrayMap.EMPTY;
var G__292102 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The existence of tests for which one can prove that the chance of error becomes arbitrarily small has sparked interest in algorithms of this type, which have come to be known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["probabilistic algorithms"], null)], 0)),". There is a great deal of research activity in this area and probabilistic algorithms have been ruitfully applied to many fields.",(function (){var G__292103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__292104 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One of the most striking applications of probabilistic prime testing has been to the field of cryptography. Although it is now computationally infeasible to factor an arbitrary 200-digit number, the primality of such a number can be checked in a few seconds with the Fermat test. This fact forms the basis of a technique for constructing ",(function (){var G__292105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__292106 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["unbreakable codes"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__292105,G__292106) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__292105,G__292106));
})()," suggested by Rivest, Shamir, and Adleman (1977). The resulting ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["RSA algorithm"], null)], 0))," has become a widely used technique for enhancing the security of electronic communications. Because of this and related developments, the study of prime numbers, once considered the epitome of a topic in ",(function (){var G__292107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__292108 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pure"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__292107,G__292108) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__292107,G__292108));
})()," mathematics to be studied only for its own sake, now turns out to have important practical applications to cryptography, electronic funds transfer, and information retrieval."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__292103,G__292104) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__292103,G__292104));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292101,G__292102) : tailrecursion.hoplon.markdown.para_node.call(null,G__292101,G__292102));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292092;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292091;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292090;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292089;
}})()], 0));
var G__279832 = "";
var G__279833 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"21-28"], null),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(21)], null),(function (){var _STAR_references_STAR_292109 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292110 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292111 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292112 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292113 = cljs.core.PersistentArrayMap.EMPTY;
var G__292114 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Use the ",(function (){var G__292115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"smallest-divisor"], null);
var G__292116 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292115,G__292116) : tailrecursion.hoplon.markdown.code_node.call(null,G__292115,G__292116));
})()," procedure to find the smallest divisor of each of the following numbers: 199, 1999,19999."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292113,G__292114) : tailrecursion.hoplon.markdown.para_node.call(null,G__292113,G__292114));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292112;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292111;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292110;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292109;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_292117 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292118 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292119 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292120 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292121 = cljs.core.PersistentArrayMap.EMPTY;
var G__292122 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["199 is prime."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292121,G__292122) : tailrecursion.hoplon.markdown.para_node.call(null,G__292121,G__292122));
})(),(function (){var G__292123 = cljs.core.PersistentArrayMap.EMPTY;
var G__292124 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["1999 is also prime."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292123,G__292124) : tailrecursion.hoplon.markdown.para_node.call(null,G__292123,G__292124));
})(),(function (){var G__292125 = cljs.core.PersistentArrayMap.EMPTY;
var G__292126 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["7 is the smallest divisor of 19999"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292125,G__292126) : tailrecursion.hoplon.markdown.para_node.call(null,G__292125,G__292126));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292120;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292119;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292118;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292117;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(22)], null),(function (){var _STAR_references_STAR_292127 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292128 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292129 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292130 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292131 = cljs.core.PersistentArrayMap.EMPTY;
var G__292132 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Most Lisp implementations include a primitive (called ",(function (){var G__292133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"runtime"], null);
var G__292134 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292133,G__292134) : tailrecursion.hoplon.markdown.code_node.call(null,G__292133,G__292134));
})()," in Scheme) that returns an integer that specifies the amount of time the system has been running (measured, for example, in microseconds). In Clojure, however, there is a function that is better suited for our current needs called ",(function (){var G__292135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"time"], null);
var G__292136 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292135,G__292136) : tailrecursion.hoplon.markdown.code_node.call(null,G__292135,G__292136));
})()," that evaluates its argument and prints the time it took to evaluate it, then it returns the value of the expression. The following ",(function (){var G__292137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"timed-prime-test"], null);
var G__292138 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292137,G__292138) : tailrecursion.hoplon.markdown.code_node.call(null,G__292137,G__292138));
})()," procedure, when called with an integer \\(n\\), prints \\(n\\) and checks to see if \\(n\\) is prime while timing the test, prints the time it took to test the primality of the number followed by the value of that test (ie ",(function (){var G__292139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"true"], null);
var G__292140 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292139,G__292140) : tailrecursion.hoplon.markdown.code_node.call(null,G__292139,G__292140));
})()," or ",(function (){var G__292141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"false"], null);
var G__292142 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292141,G__292142) : tailrecursion.hoplon.markdown.code_node.call(null,G__292141,G__292142));
})(),"). But in order to successfully accomplish this task, we need to learn about a few more tools in the Clojure toolshed."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292131,G__292132) : tailrecursion.hoplon.markdown.para_node.call(null,G__292131,G__292132));
})(),(function (){var G__292143 = cljs.core.PersistentArrayMap.EMPTY;
var G__292144 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If you have any questions about the specific functions used in this (or any example), remember to check out ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"http://www.clojuredocs.org",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Clojuredocs.org"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292143,G__292144) : tailrecursion.hoplon.markdown.para_node.call(null,G__292143,G__292144));
})(),(function (){var G__292183 = (function (){var G__292184 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__292185 = (function (){var G__292186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__292187 = "(";
var G__292188 = (function (){var G__292204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292205 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292204,G__292205) : tailrecursion.hoplon.span.call(null,G__292204,G__292205));
})();
var G__292189 = (function (){var G__292206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292207 = "timed-prime-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292206,G__292207) : tailrecursion.hoplon.span.call(null,G__292206,G__292207));
})();
var G__292190 = " [";
var G__292191 = (function (){var G__292208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292209 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292208,G__292209) : tailrecursion.hoplon.span.call(null,G__292208,G__292209));
})();
var G__292192 = "]\n  (";
var G__292193 = (function (){var G__292210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292211 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292210,G__292211) : tailrecursion.hoplon.span.call(null,G__292210,G__292211));
})();
var G__292194 = "(";
var G__292195 = (function (){var G__292212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292213 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292212,G__292213) : tailrecursion.hoplon.span.call(null,G__292212,G__292213));
})();
var G__292196 = (function (){var G__292214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292215 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292214,G__292215) : tailrecursion.hoplon.span.call(null,G__292214,G__292215));
})();
var G__292197 = ") (";
var G__292198 = (function (){var G__292216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292217 = "time ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292216,G__292217) : tailrecursion.hoplon.span.call(null,G__292216,G__292217));
})();
var G__292199 = "(";
var G__292200 = (function (){var G__292218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292219 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292218,G__292219) : tailrecursion.hoplon.span.call(null,G__292218,G__292219));
})();
var G__292201 = " ";
var G__292202 = (function (){var G__292220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292221 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292220,G__292221) : tailrecursion.hoplon.span.call(null,G__292220,G__292221));
})();
var G__292203 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__292186,G__292187,G__292188,G__292189,G__292190,G__292191,G__292192,G__292193,G__292194,G__292195,G__292196,G__292197,G__292198,G__292199,G__292200,G__292201,G__292202,G__292203) : tailrecursion.hoplon.pre.call(null,G__292186,G__292187,G__292188,G__292189,G__292190,G__292191,G__292192,G__292193,G__292194,G__292195,G__292196,G__292197,G__292198,G__292199,G__292200,G__292201,G__292202,G__292203));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__292184,G__292185) : tailrecursion.hoplon.div.call(null,G__292184,G__292185));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__292183) : tailrecursion.hoplon.div.call(null,G__292183));
})(),(function (){var G__292222 = cljs.core.PersistentArrayMap.EMPTY;
var G__292223 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292224 = cljs.core.PersistentArrayMap.EMPTY;
var G__292225 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alternatively, if we didn",(function (){var G__292226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__292227 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__292226,G__292227) : tailrecursion.hoplon.markdown.simple_node.call(null,G__292226,G__292227));
})(),"t want to see the ",(function (){var G__292228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"true"], null);
var G__292229 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292228,G__292229) : tailrecursion.hoplon.markdown.code_node.call(null,G__292228,G__292229));
})(),"/",(function (){var G__292230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"false"], null);
var G__292231 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292230,G__292231) : tailrecursion.hoplon.markdown.code_node.call(null,G__292230,G__292231));
})()," at the end, we could put ",(function (){var G__292232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(do (time (prime? n)) n)"], null);
var G__292233 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292232,G__292233) : tailrecursion.hoplon.markdown.code_node.call(null,G__292232,G__292233));
})(),", which would evaluate the ",(function (){var G__292234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(time (prime? n))"], null);
var G__292235 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292234,G__292235) : tailrecursion.hoplon.markdown.code_node.call(null,G__292234,G__292235));
})()," procedure, which would print the time it took to determine the primality of \\(n\\), then it would evaluate ",(function (){var G__292236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__292237 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292236,G__292237) : tailrecursion.hoplon.markdown.code_node.call(null,G__292236,G__292237));
})(),", and return the value, which is ",(function (){var G__292238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__292239 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292238,G__292239) : tailrecursion.hoplon.markdown.code_node.call(null,G__292238,G__292239));
})()," itself."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292224,G__292225) : tailrecursion.hoplon.markdown.para_node.call(null,G__292224,G__292225));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__292222,G__292223) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__292222,G__292223));
})(),(function (){var G__292240 = cljs.core.PersistentArrayMap.EMPTY;
var G__292241 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using this procedure, write a procedure ",(function (){var G__292242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"search-for-primes"], null);
var G__292243 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292242,G__292243) : tailrecursion.hoplon.markdown.code_node.call(null,G__292242,G__292243));
})()," that checks for the primality of consecutive odd integers in a specific range. Use your procedure to find the three smallest primes larger than 10,000,000,000; larger than 100,000,000,000; larger than 1,000,000,000,000; larger than 10,000,000,000,000. Note the time needed to test each prime. Since the testing algorithm has order of growth of \\(\\Theta(\\sqrt n)\\), you should expect that the testing for primes around 10,000 should take about \\(\\sqrt 10\\) times as long as testing for primes around 1,000. Do your timing data bear this out? How well do the data for 100,000 and 1,000,000 support the \\(\\sqrt n\\) prediction? Is your result compatible with the notion that programs on your machine run in the time proportional to the number of steps required for the computation?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292240,G__292241) : tailrecursion.hoplon.markdown.para_node.call(null,G__292240,G__292241));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292130;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292129;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292128;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292127;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_292244 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292245 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292246 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292247 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292363 = (function (){var G__292364 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__292365 = (function (){var G__292366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__292367 = "(";
var G__292368 = (function (){var G__292421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292422 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292421,G__292422) : tailrecursion.hoplon.span.call(null,G__292421,G__292422));
})();
var G__292369 = (function (){var G__292423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292424 = "search-for-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292423,G__292424) : tailrecursion.hoplon.span.call(null,G__292423,G__292424));
})();
var G__292370 = " [";
var G__292371 = (function (){var G__292425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292426 = "starting-number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292425,G__292426) : tailrecursion.hoplon.span.call(null,G__292425,G__292426));
})();
var G__292372 = " ";
var G__292373 = (function (){var G__292427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292428 = "number-of-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292427,G__292428) : tailrecursion.hoplon.span.call(null,G__292427,G__292428));
})();
var G__292374 = "]\n  (";
var G__292375 = (function (){var G__292429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292430 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292429,G__292430) : tailrecursion.hoplon.span.call(null,G__292429,G__292430));
})();
var G__292376 = "[";
var G__292377 = (function (){var G__292431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292432 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292431,G__292432) : tailrecursion.hoplon.span.call(null,G__292431,G__292432));
})();
var G__292378 = " ";
var G__292379 = (function (){var G__292433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292434 = "starting-number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292433,G__292434) : tailrecursion.hoplon.span.call(null,G__292433,G__292434));
})();
var G__292380 = "\n         ";
var G__292381 = (function (){var G__292435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292436 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292435,G__292436) : tailrecursion.hoplon.span.call(null,G__292435,G__292436));
})();
var G__292382 = " ";
var G__292383 = (function (){var G__292437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292438 = "number-of-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292437,G__292438) : tailrecursion.hoplon.span.call(null,G__292437,G__292438));
})();
var G__292384 = "]\n    (";
var G__292385 = (function (){var G__292439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292440 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292439,G__292440) : tailrecursion.hoplon.span.call(null,G__292439,G__292440));
})();
var G__292386 = "(";
var G__292387 = (function (){var G__292441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292442 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292441,G__292442) : tailrecursion.hoplon.span.call(null,G__292441,G__292442));
})();
var G__292388 = (function (){var G__292443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292444 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292443,G__292444) : tailrecursion.hoplon.span.call(null,G__292443,G__292444));
})();
var G__292389 = " ";
var G__292390 = (function (){var G__292445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__292446 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292445,G__292446) : tailrecursion.hoplon.span.call(null,G__292445,G__292446));
})();
var G__292391 = ") ";
var G__292392 = (function (){var G__292447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292448 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292447,G__292448) : tailrecursion.hoplon.span.call(null,G__292447,G__292448));
})();
var G__292393 = "\n          (";
var G__292394 = (function (){var G__292449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292450 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292449,G__292450) : tailrecursion.hoplon.span.call(null,G__292449,G__292450));
})();
var G__292395 = " ";
var G__292396 = (function (){var G__292451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292452 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292451,G__292452) : tailrecursion.hoplon.span.call(null,G__292451,G__292452));
})();
var G__292397 = ") (";
var G__292398 = (function (){var G__292453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292454 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292453,G__292454) : tailrecursion.hoplon.span.call(null,G__292453,G__292454));
})();
var G__292399 = "(";
var G__292400 = (function (){var G__292455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292456 = "timed-prime-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292455,G__292456) : tailrecursion.hoplon.span.call(null,G__292455,G__292456));
})();
var G__292401 = " ";
var G__292402 = (function (){var G__292457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292458 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292457,G__292458) : tailrecursion.hoplon.span.call(null,G__292457,G__292458));
})();
var G__292403 = ") (";
var G__292404 = (function (){var G__292459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292460 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292459,G__292460) : tailrecursion.hoplon.span.call(null,G__292459,G__292460));
})();
var G__292405 = " (";
var G__292406 = (function (){var G__292461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292462 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292461,G__292462) : tailrecursion.hoplon.span.call(null,G__292461,G__292462));
})();
var G__292407 = (function (){var G__292463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292464 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292463,G__292464) : tailrecursion.hoplon.span.call(null,G__292463,G__292464));
})();
var G__292408 = ") (";
var G__292409 = (function (){var G__292465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292466 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292465,G__292466) : tailrecursion.hoplon.span.call(null,G__292465,G__292466));
})();
var G__292410 = (function (){var G__292467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292468 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292467,G__292468) : tailrecursion.hoplon.span.call(null,G__292467,G__292468));
})();
var G__292411 = ")))\n          ";
var G__292412 = (function (){var G__292469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292470 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292469,G__292470) : tailrecursion.hoplon.span.call(null,G__292469,G__292470));
})();
var G__292413 = " (";
var G__292414 = (function (){var G__292471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292472 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292471,G__292472) : tailrecursion.hoplon.span.call(null,G__292471,G__292472));
})();
var G__292415 = " (";
var G__292416 = (function (){var G__292473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292474 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292473,G__292474) : tailrecursion.hoplon.span.call(null,G__292473,G__292474));
})();
var G__292417 = (function (){var G__292475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292476 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292475,G__292476) : tailrecursion.hoplon.span.call(null,G__292475,G__292476));
})();
var G__292418 = ") ";
var G__292419 = (function (){var G__292477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292478 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292477,G__292478) : tailrecursion.hoplon.span.call(null,G__292477,G__292478));
})();
var G__292420 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$55 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$55(G__292366,G__292367,G__292368,G__292369,G__292370,G__292371,G__292372,G__292373,G__292374,G__292375,G__292376,G__292377,G__292378,G__292379,G__292380,G__292381,G__292382,G__292383,G__292384,G__292385,G__292386,G__292387,G__292388,G__292389,G__292390,G__292391,G__292392,G__292393,G__292394,G__292395,G__292396,G__292397,G__292398,G__292399,G__292400,G__292401,G__292402,G__292403,G__292404,G__292405,G__292406,G__292407,G__292408,G__292409,G__292410,G__292411,G__292412,G__292413,G__292414,G__292415,G__292416,G__292417,G__292418,G__292419,G__292420) : tailrecursion.hoplon.pre.call(null,G__292366,G__292367,G__292368,G__292369,G__292370,G__292371,G__292372,G__292373,G__292374,G__292375,G__292376,G__292377,G__292378,G__292379,G__292380,G__292381,G__292382,G__292383,G__292384,G__292385,G__292386,G__292387,G__292388,G__292389,G__292390,G__292391,G__292392,G__292393,G__292394,G__292395,G__292396,G__292397,G__292398,G__292399,G__292400,G__292401,G__292402,G__292403,G__292404,G__292405,G__292406,G__292407,G__292408,G__292409,G__292410,G__292411,G__292412,G__292413,G__292414,G__292415,G__292416,G__292417,G__292418,G__292419,G__292420));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__292364,G__292365) : tailrecursion.hoplon.div.call(null,G__292364,G__292365));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__292363) : tailrecursion.hoplon.div.call(null,G__292363));
})(),(function (){var G__292479 = cljs.core.PersistentArrayMap.EMPTY;
var G__292480 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["And I leave the observations to you."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292479,G__292480) : tailrecursion.hoplon.markdown.para_node.call(null,G__292479,G__292480));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292247;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292246;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292245;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292244;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(23)], null),(function (){var _STAR_references_STAR_292481 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292482 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292483 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292484 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292485 = cljs.core.PersistentArrayMap.EMPTY;
var G__292486 = new cljs.core.PersistentVector(null, 25, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",(function (){var G__292487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"smallest-divisor"], null);
var G__292488 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292487,G__292488) : tailrecursion.hoplon.markdown.code_node.call(null,G__292487,G__292488));
})()," procedure shown at the start of this section does lots of needless testing: After it checks to see if the number is divisible by 2 there is no point in checking to see if it is divisible by any larger even numbers. This suggests that the values used for ",(function (){var G__292489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"test-divisor"], null);
var G__292490 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292489,G__292490) : tailrecursion.hoplon.markdown.code_node.call(null,G__292489,G__292490));
})()," should not be 2,3,4,5,6,",(function (){var G__292491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__292492 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__292491,G__292492) : tailrecursion.hoplon.markdown.simple_node.call(null,G__292491,G__292492));
})(),", but rather, 2,3,5,7,9,",(function (){var G__292493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__292494 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__292493,G__292494) : tailrecursion.hoplon.markdown.simple_node.call(null,G__292493,G__292494));
})(),". To implement this chance, define a procedure ",(function (){var G__292495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"next"], null);
var G__292496 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292495,G__292496) : tailrecursion.hoplon.markdown.code_node.call(null,G__292495,G__292496));
})()," that returns 3 if its input is equal to 2 and otherwise returns its input plus 2. Modify the ",(function (){var G__292497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"smallest divisor"], null);
var G__292498 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292497,G__292498) : tailrecursion.hoplon.markdown.code_node.call(null,G__292497,G__292498));
})()," procedure to use ",(function (){var G__292499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(next\ntest-divisor)"], null);
var G__292500 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292499,G__292500) : tailrecursion.hoplon.markdown.code_node.call(null,G__292499,G__292500));
})()," instead of ",(function (){var G__292501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(+ test-divisor 1)"], null);
var G__292502 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292501,G__292502) : tailrecursion.hoplon.markdown.code_node.call(null,G__292501,G__292502));
})()," or ",(function (){var G__292503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(inc\ntest-divisor)"], null);
var G__292504 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292503,G__292504) : tailrecursion.hoplon.markdown.code_node.call(null,G__292503,G__292504));
})(),". With ",(function (){var G__292505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"timed-prime-test"], null);
var G__292506 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292505,G__292506) : tailrecursion.hoplon.markdown.code_node.call(null,G__292505,G__292506));
})()," incorporating this modified version of ",(function (){var G__292507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"smallest-divisor"], null);
var G__292508 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292507,G__292508) : tailrecursion.hoplon.markdown.code_node.call(null,G__292507,G__292508));
})(),", run the test for each of the 12 primes found in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/22/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.22"], null)], 0)),". Since this modification halves the number of test steps, you should expect it to run about twice as fast. Is this expectation confirmed? If not, what is the ovserved ration of the speeds of the two algorithms, and how do you explain the fact that it is different from 2? "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292485,G__292486) : tailrecursion.hoplon.markdown.para_node.call(null,G__292485,G__292486));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292484;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292483;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292482;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292481;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_292509 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292510 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292511 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292512 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292673 = (function (){var G__292674 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__292675 = (function (){var G__292676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__292677 = "(";
var G__292678 = (function (){var G__292752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292753 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292752,G__292753) : tailrecursion.hoplon.span.call(null,G__292752,G__292753));
})();
var G__292679 = (function (){var G__292754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292755 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292754,G__292755) : tailrecursion.hoplon.span.call(null,G__292754,G__292755));
})();
var G__292680 = "[";
var G__292681 = (function (){var G__292756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292757 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292756,G__292757) : tailrecursion.hoplon.span.call(null,G__292756,G__292757));
})();
var G__292682 = "]\n  (";
var G__292683 = (function (){var G__292758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292759 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292758,G__292759) : tailrecursion.hoplon.span.call(null,G__292758,G__292759));
})();
var G__292684 = "(";
var G__292685 = (function (){var G__292760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292761 = "divides?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292760,G__292761) : tailrecursion.hoplon.span.call(null,G__292760,G__292761));
})();
var G__292686 = " ";
var G__292687 = (function (){var G__292762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__292763 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292762,G__292763) : tailrecursion.hoplon.span.call(null,G__292762,G__292763));
})();
var G__292688 = " ";
var G__292689 = (function (){var G__292764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292765 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292764,G__292765) : tailrecursion.hoplon.span.call(null,G__292764,G__292765));
})();
var G__292690 = ")\n      (";
var G__292691 = (function (){var G__292766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292767 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292766,G__292767) : tailrecursion.hoplon.span.call(null,G__292766,G__292767));
})();
var G__292692 = (function (){var G__292768 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292769 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292768,G__292769) : tailrecursion.hoplon.span.call(null,G__292768,G__292769));
})();
var G__292693 = ")\n      (";
var G__292694 = (function (){var G__292770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292771 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292770,G__292771) : tailrecursion.hoplon.span.call(null,G__292770,G__292771));
})();
var G__292695 = (function (){var G__292772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292773 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292772,G__292773) : tailrecursion.hoplon.span.call(null,G__292772,G__292773));
})();
var G__292696 = " ";
var G__292697 = (function (){var G__292774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__292775 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292774,G__292775) : tailrecursion.hoplon.span.call(null,G__292774,G__292775));
})();
var G__292698 = ")))\n(";
var G__292699 = (function (){var G__292776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292777 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292776,G__292777) : tailrecursion.hoplon.span.call(null,G__292776,G__292777));
})();
var G__292700 = (function (){var G__292778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292779 = "search-for-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292778,G__292779) : tailrecursion.hoplon.span.call(null,G__292778,G__292779));
})();
var G__292701 = " [";
var G__292702 = (function (){var G__292780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292781 = "starting-number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292780,G__292781) : tailrecursion.hoplon.span.call(null,G__292780,G__292781));
})();
var G__292703 = " ";
var G__292704 = (function (){var G__292782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292783 = "number-of-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292782,G__292783) : tailrecursion.hoplon.span.call(null,G__292782,G__292783));
})();
var G__292705 = "]\n  (";
var G__292706 = (function (){var G__292784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292785 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292784,G__292785) : tailrecursion.hoplon.span.call(null,G__292784,G__292785));
})();
var G__292707 = "[";
var G__292708 = (function (){var G__292786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292787 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292786,G__292787) : tailrecursion.hoplon.span.call(null,G__292786,G__292787));
})();
var G__292709 = " ";
var G__292710 = (function (){var G__292788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292789 = "starting-number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292788,G__292789) : tailrecursion.hoplon.span.call(null,G__292788,G__292789));
})();
var G__292711 = "\n         ";
var G__292712 = (function (){var G__292790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292791 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292790,G__292791) : tailrecursion.hoplon.span.call(null,G__292790,G__292791));
})();
var G__292713 = " ";
var G__292714 = (function (){var G__292792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292793 = "number-of-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292792,G__292793) : tailrecursion.hoplon.span.call(null,G__292792,G__292793));
})();
var G__292715 = "]\n    (";
var G__292716 = (function (){var G__292794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292795 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292794,G__292795) : tailrecursion.hoplon.span.call(null,G__292794,G__292795));
})();
var G__292717 = "(";
var G__292718 = (function (){var G__292796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292797 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292796,G__292797) : tailrecursion.hoplon.span.call(null,G__292796,G__292797));
})();
var G__292719 = (function (){var G__292798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292799 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292798,G__292799) : tailrecursion.hoplon.span.call(null,G__292798,G__292799));
})();
var G__292720 = " ";
var G__292721 = (function (){var G__292800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__292801 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292800,G__292801) : tailrecursion.hoplon.span.call(null,G__292800,G__292801));
})();
var G__292722 = ") ";
var G__292723 = (function (){var G__292802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292803 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292802,G__292803) : tailrecursion.hoplon.span.call(null,G__292802,G__292803));
})();
var G__292724 = "\n          (";
var G__292725 = (function (){var G__292804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292805 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292804,G__292805) : tailrecursion.hoplon.span.call(null,G__292804,G__292805));
})();
var G__292726 = " ";
var G__292727 = (function (){var G__292806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292807 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292806,G__292807) : tailrecursion.hoplon.span.call(null,G__292806,G__292807));
})();
var G__292728 = ") (";
var G__292729 = (function (){var G__292808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292809 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292808,G__292809) : tailrecursion.hoplon.span.call(null,G__292808,G__292809));
})();
var G__292730 = "(";
var G__292731 = (function (){var G__292810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292811 = "timed-prime-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292810,G__292811) : tailrecursion.hoplon.span.call(null,G__292810,G__292811));
})();
var G__292732 = " ";
var G__292733 = (function (){var G__292812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292813 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292812,G__292813) : tailrecursion.hoplon.span.call(null,G__292812,G__292813));
})();
var G__292734 = ") (";
var G__292735 = (function (){var G__292814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292815 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292814,G__292815) : tailrecursion.hoplon.span.call(null,G__292814,G__292815));
})();
var G__292736 = " (";
var G__292737 = (function (){var G__292816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292817 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292816,G__292817) : tailrecursion.hoplon.span.call(null,G__292816,G__292817));
})();
var G__292738 = (function (){var G__292818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292819 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292818,G__292819) : tailrecursion.hoplon.span.call(null,G__292818,G__292819));
})();
var G__292739 = ") (";
var G__292740 = (function (){var G__292820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292821 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292820,G__292821) : tailrecursion.hoplon.span.call(null,G__292820,G__292821));
})();
var G__292741 = (function (){var G__292822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292823 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292822,G__292823) : tailrecursion.hoplon.span.call(null,G__292822,G__292823));
})();
var G__292742 = ")))\n          ";
var G__292743 = (function (){var G__292824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292825 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292824,G__292825) : tailrecursion.hoplon.span.call(null,G__292824,G__292825));
})();
var G__292744 = " (";
var G__292745 = (function (){var G__292826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292827 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292826,G__292827) : tailrecursion.hoplon.span.call(null,G__292826,G__292827));
})();
var G__292746 = " (";
var G__292747 = (function (){var G__292828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292829 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292828,G__292829) : tailrecursion.hoplon.span.call(null,G__292828,G__292829));
})();
var G__292748 = (function (){var G__292830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292831 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292830,G__292831) : tailrecursion.hoplon.span.call(null,G__292830,G__292831));
})();
var G__292749 = ") ";
var G__292750 = (function (){var G__292832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292833 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292832,G__292833) : tailrecursion.hoplon.span.call(null,G__292832,G__292833));
})();
var G__292751 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$76 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$76(G__292676,G__292677,G__292678,G__292679,G__292680,G__292681,G__292682,G__292683,G__292684,G__292685,G__292686,G__292687,G__292688,G__292689,G__292690,G__292691,G__292692,G__292693,G__292694,G__292695,G__292696,G__292697,G__292698,G__292699,G__292700,G__292701,G__292702,G__292703,G__292704,G__292705,G__292706,G__292707,G__292708,G__292709,G__292710,G__292711,G__292712,G__292713,G__292714,G__292715,G__292716,G__292717,G__292718,G__292719,G__292720,G__292721,G__292722,G__292723,G__292724,G__292725,G__292726,G__292727,G__292728,G__292729,G__292730,G__292731,G__292732,G__292733,G__292734,G__292735,G__292736,G__292737,G__292738,G__292739,G__292740,G__292741,G__292742,G__292743,G__292744,G__292745,G__292746,G__292747,G__292748,G__292749,G__292750,G__292751) : tailrecursion.hoplon.pre.call(null,G__292676,G__292677,G__292678,G__292679,G__292680,G__292681,G__292682,G__292683,G__292684,G__292685,G__292686,G__292687,G__292688,G__292689,G__292690,G__292691,G__292692,G__292693,G__292694,G__292695,G__292696,G__292697,G__292698,G__292699,G__292700,G__292701,G__292702,G__292703,G__292704,G__292705,G__292706,G__292707,G__292708,G__292709,G__292710,G__292711,G__292712,G__292713,G__292714,G__292715,G__292716,G__292717,G__292718,G__292719,G__292720,G__292721,G__292722,G__292723,G__292724,G__292725,G__292726,G__292727,G__292728,G__292729,G__292730,G__292731,G__292732,G__292733,G__292734,G__292735,G__292736,G__292737,G__292738,G__292739,G__292740,G__292741,G__292742,G__292743,G__292744,G__292745,G__292746,G__292747,G__292748,G__292749,G__292750,G__292751));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__292674,G__292675) : tailrecursion.hoplon.div.call(null,G__292674,G__292675));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__292673) : tailrecursion.hoplon.div.call(null,G__292673));
})(),(function (){var G__292834 = cljs.core.PersistentArrayMap.EMPTY;
var G__292835 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Well, we",(function (){var G__292836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__292837 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__292836,G__292837) : tailrecursion.hoplon.markdown.simple_node.call(null,G__292836,G__292837));
})(),"re not exactly halving the number of steps because each time we have to evaluate the ",(function (){var G__292838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"if"], null);
var G__292839 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292838,G__292839) : tailrecursion.hoplon.markdown.code_node.call(null,G__292838,G__292839));
})()," statement which includes some division and whatnot. Also there are compiler optimizations invloved, so these things are rough estimates."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292834,G__292835) : tailrecursion.hoplon.markdown.para_node.call(null,G__292834,G__292835));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292512;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292511;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292510;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292509;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(24)], null),(function (){var _STAR_references_STAR_292840 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292841 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292842 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292843 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292844 = cljs.core.PersistentArrayMap.EMPTY;
var G__292845 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Modify the ",(function (){var G__292846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"timed-prime-test"], null);
var G__292847 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292846,G__292847) : tailrecursion.hoplon.markdown.code_node.call(null,G__292846,G__292847));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/24/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.22"], null)], 0))," to use ",(function (){var G__292848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-prime?"], null);
var G__292849 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292848,G__292849) : tailrecursion.hoplon.markdown.code_node.call(null,G__292848,G__292849));
})()," (the Fermat method), and test each of the 12 primes you found in that exercise. Since the Fermat test has \\(\\Theta(\\log n)\\) growth, how would you expect the time to test primes near 10,000,000,000,000 to compare with the time needed to test primes near 10,000,000,000? Do your data bear this out? Can you explain any discrepancy you find?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292844,G__292845) : tailrecursion.hoplon.markdown.para_node.call(null,G__292844,G__292845));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292843;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292842;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292841;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292840;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_292850 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292851 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292852 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292853 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292892 = (function (){var G__292893 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__292894 = (function (){var G__292895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__292896 = "(";
var G__292897 = (function (){var G__292913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292914 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292913,G__292914) : tailrecursion.hoplon.span.call(null,G__292913,G__292914));
})();
var G__292898 = (function (){var G__292915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292916 = "timed-prime-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292915,G__292916) : tailrecursion.hoplon.span.call(null,G__292915,G__292916));
})();
var G__292899 = " [";
var G__292900 = (function (){var G__292917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292918 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292917,G__292918) : tailrecursion.hoplon.span.call(null,G__292917,G__292918));
})();
var G__292901 = "]\n  (";
var G__292902 = (function (){var G__292919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292920 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292919,G__292920) : tailrecursion.hoplon.span.call(null,G__292919,G__292920));
})();
var G__292903 = "(";
var G__292904 = (function (){var G__292921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292922 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292921,G__292922) : tailrecursion.hoplon.span.call(null,G__292921,G__292922));
})();
var G__292905 = (function (){var G__292923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292924 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292923,G__292924) : tailrecursion.hoplon.span.call(null,G__292923,G__292924));
})();
var G__292906 = ") (";
var G__292907 = (function (){var G__292925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292926 = "time ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292925,G__292926) : tailrecursion.hoplon.span.call(null,G__292925,G__292926));
})();
var G__292908 = "(";
var G__292909 = (function (){var G__292927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292928 = "fast-prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292927,G__292928) : tailrecursion.hoplon.span.call(null,G__292927,G__292928));
})();
var G__292910 = " ";
var G__292911 = (function (){var G__292929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292930 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292929,G__292930) : tailrecursion.hoplon.span.call(null,G__292929,G__292930));
})();
var G__292912 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__292895,G__292896,G__292897,G__292898,G__292899,G__292900,G__292901,G__292902,G__292903,G__292904,G__292905,G__292906,G__292907,G__292908,G__292909,G__292910,G__292911,G__292912) : tailrecursion.hoplon.pre.call(null,G__292895,G__292896,G__292897,G__292898,G__292899,G__292900,G__292901,G__292902,G__292903,G__292904,G__292905,G__292906,G__292907,G__292908,G__292909,G__292910,G__292911,G__292912));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__292893,G__292894) : tailrecursion.hoplon.div.call(null,G__292893,G__292894));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__292892) : tailrecursion.hoplon.div.call(null,G__292892));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292853;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292852;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292851;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292850;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(25)], null),(function (){var _STAR_references_STAR_292931 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292932 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292933 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292934 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292935 = cljs.core.PersistentArrayMap.EMPTY;
var G__292936 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa P. Hacker complains that we went to a lot of extra work in writing ",(function (){var G__292937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"expmod"], null);
var G__292938 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292937,G__292938) : tailrecursion.hoplon.markdown.code_node.call(null,G__292937,G__292938));
})(),". After all, she says, since we already know how to compute exponentials, we could have simply written"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292935,G__292936) : tailrecursion.hoplon.markdown.para_node.call(null,G__292935,G__292936));
})(),(function (){var G__292982 = (function (){var G__292983 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__292984 = (function (){var G__292985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__292986 = "(";
var G__292987 = (function (){var G__293006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__293007 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293006,G__293007) : tailrecursion.hoplon.span.call(null,G__293006,G__293007));
})();
var G__292988 = (function (){var G__293008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293009 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293008,G__293009) : tailrecursion.hoplon.span.call(null,G__293008,G__293009));
})();
var G__292989 = " [";
var G__292990 = (function (){var G__293010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293011 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293010,G__293011) : tailrecursion.hoplon.span.call(null,G__293010,G__293011));
})();
var G__292991 = " ";
var G__292992 = (function (){var G__293012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293013 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293012,G__293013) : tailrecursion.hoplon.span.call(null,G__293012,G__293013));
})();
var G__292993 = " ";
var G__292994 = (function (){var G__293014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293015 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293014,G__293015) : tailrecursion.hoplon.span.call(null,G__293014,G__293015));
})();
var G__292995 = "]\n  (";
var G__292996 = (function (){var G__293016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293017 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293016,G__293017) : tailrecursion.hoplon.span.call(null,G__293016,G__293017));
})();
var G__292997 = " (";
var G__292998 = (function (){var G__293018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293019 = "fast-expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293018,G__293019) : tailrecursion.hoplon.span.call(null,G__293018,G__293019));
})();
var G__292999 = " ";
var G__293000 = (function (){var G__293020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293021 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293020,G__293021) : tailrecursion.hoplon.span.call(null,G__293020,G__293021));
})();
var G__293001 = " ";
var G__293002 = (function (){var G__293022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293023 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293022,G__293023) : tailrecursion.hoplon.span.call(null,G__293022,G__293023));
})();
var G__293003 = ") ";
var G__293004 = (function (){var G__293024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293025 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293024,G__293025) : tailrecursion.hoplon.span.call(null,G__293024,G__293025));
})();
var G__293005 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21(G__292985,G__292986,G__292987,G__292988,G__292989,G__292990,G__292991,G__292992,G__292993,G__292994,G__292995,G__292996,G__292997,G__292998,G__292999,G__293000,G__293001,G__293002,G__293003,G__293004,G__293005) : tailrecursion.hoplon.pre.call(null,G__292985,G__292986,G__292987,G__292988,G__292989,G__292990,G__292991,G__292992,G__292993,G__292994,G__292995,G__292996,G__292997,G__292998,G__292999,G__293000,G__293001,G__293002,G__293003,G__293004,G__293005));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__292983,G__292984) : tailrecursion.hoplon.div.call(null,G__292983,G__292984));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__292982) : tailrecursion.hoplon.div.call(null,G__292982));
})(),(function (){var G__293026 = cljs.core.PersistentArrayMap.EMPTY;
var G__293027 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Is she correct? Would this procedure serve as well for our fast prime tester? Explain."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293026,G__293027) : tailrecursion.hoplon.markdown.para_node.call(null,G__293026,G__293027));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292934;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292933;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292932;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292931;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_293028 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293029 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_293030 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293031 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__293032 = cljs.core.PersistentArrayMap.EMPTY;
var G__293033 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Multiplying larger numbers takes longer than the time you save by only computing ",(function (){var G__293034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__293035 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293034,G__293035) : tailrecursion.hoplon.markdown.code_node.call(null,G__293034,G__293035));
})()," once. So if the numbers you",(function (){var G__293036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__293037 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__293036,G__293037) : tailrecursion.hoplon.markdown.simple_node.call(null,G__293036,G__293037));
})(),"re dealing with are sufficiently small, she",(function (){var G__293038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__293039 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__293038,G__293039) : tailrecursion.hoplon.markdown.simple_node.call(null,G__293038,G__293039));
})(),"s correct. But if we",(function (){var G__293040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__293041 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__293040,G__293041) : tailrecursion.hoplon.markdown.simple_node.call(null,G__293040,G__293041));
})(),"re trying to use this for our primality test, raising 10,000,000 to the 100,000,000,000,000 would be far more computationally expensive than modding out each time."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293032,G__293033) : tailrecursion.hoplon.markdown.para_node.call(null,G__293032,G__293033));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293031;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293030;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293029;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293028;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(26)], null),(function (){var _STAR_references_STAR_293042 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293043 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_293044 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293045 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__293046 = cljs.core.PersistentArrayMap.EMPTY;
var G__293047 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Louis Reasoner is having great difficulty doing ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/24/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.24"], null)], 0)),". His ",(function (){var G__293048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-prime?"], null);
var G__293049 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293048,G__293049) : tailrecursion.hoplon.markdown.code_node.call(null,G__293048,G__293049));
})()," test seems to run more slowly than his ",(function (){var G__293050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"prime?"], null);
var G__293051 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293050,G__293051) : tailrecursion.hoplon.markdown.code_node.call(null,G__293050,G__293051));
})()," test. Louis calls his friend Eva Lu Ator over to help. When they examine Louis",(function (){var G__293052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__293053 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__293052,G__293053) : tailrecursion.hoplon.markdown.simple_node.call(null,G__293052,G__293053));
})(),"s code, they find that he has rewritten the ",(function (){var G__293054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"expmod"], null);
var G__293055 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293054,G__293055) : tailrecursion.hoplon.markdown.code_node.call(null,G__293054,G__293055));
})()," procedure to use an explicit multiplication, rather than calling ",(function (){var G__293056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"square"], null);
var G__293057 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293056,G__293057) : tailrecursion.hoplon.markdown.code_node.call(null,G__293056,G__293057));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293046,G__293047) : tailrecursion.hoplon.markdown.para_node.call(null,G__293046,G__293047));
})(),(function (){var G__293208 = (function (){var G__293209 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__293210 = (function (){var G__293211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__293212 = "(";
var G__293213 = (function (){var G__293283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__293284 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293283,G__293284) : tailrecursion.hoplon.span.call(null,G__293283,G__293284));
})();
var G__293214 = (function (){var G__293285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293286 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293285,G__293286) : tailrecursion.hoplon.span.call(null,G__293285,G__293286));
})();
var G__293215 = " [";
var G__293216 = (function (){var G__293287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293288 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293287,G__293288) : tailrecursion.hoplon.span.call(null,G__293287,G__293288));
})();
var G__293217 = " ";
var G__293218 = (function (){var G__293289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293290 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293289,G__293290) : tailrecursion.hoplon.span.call(null,G__293289,G__293290));
})();
var G__293219 = " ";
var G__293220 = (function (){var G__293291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293292 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293291,G__293292) : tailrecursion.hoplon.span.call(null,G__293291,G__293292));
})();
var G__293221 = "]\n  (";
var G__293222 = (function (){var G__293293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293294 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293293,G__293294) : tailrecursion.hoplon.span.call(null,G__293293,G__293294));
})();
var G__293223 = "(";
var G__293224 = (function (){var G__293295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293296 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293295,G__293296) : tailrecursion.hoplon.span.call(null,G__293295,G__293296));
})();
var G__293225 = (function (){var G__293297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293298 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293297,G__293298) : tailrecursion.hoplon.span.call(null,G__293297,G__293298));
})();
var G__293226 = " ";
var G__293227 = (function (){var G__293299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293300 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293299,G__293300) : tailrecursion.hoplon.span.call(null,G__293299,G__293300));
})();
var G__293228 = ") ";
var G__293229 = (function (){var G__293301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293302 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293301,G__293302) : tailrecursion.hoplon.span.call(null,G__293301,G__293302));
})();
var G__293230 = "\n        (";
var G__293231 = (function (){var G__293303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293304 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293303,G__293304) : tailrecursion.hoplon.span.call(null,G__293303,G__293304));
})();
var G__293232 = " ";
var G__293233 = (function (){var G__293305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293306 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293305,G__293306) : tailrecursion.hoplon.span.call(null,G__293305,G__293306));
})();
var G__293234 = ") (";
var G__293235 = (function (){var G__293307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293308 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293307,G__293308) : tailrecursion.hoplon.span.call(null,G__293307,G__293308));
})();
var G__293236 = " (";
var G__293237 = (function (){var G__293309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293310 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293309,G__293310) : tailrecursion.hoplon.span.call(null,G__293309,G__293310));
})();
var G__293238 = "(";
var G__293239 = (function (){var G__293311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293312 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293311,G__293312) : tailrecursion.hoplon.span.call(null,G__293311,G__293312));
})();
var G__293240 = " ";
var G__293241 = (function (){var G__293313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293314 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293313,G__293314) : tailrecursion.hoplon.span.call(null,G__293313,G__293314));
})();
var G__293242 = " (";
var G__293243 = (function (){var G__293315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293316 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293315,G__293316) : tailrecursion.hoplon.span.call(null,G__293315,G__293316));
})();
var G__293244 = (function (){var G__293317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293318 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293317,G__293318) : tailrecursion.hoplon.span.call(null,G__293317,G__293318));
})();
var G__293245 = " ";
var G__293246 = (function (){var G__293319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293320 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293319,G__293320) : tailrecursion.hoplon.span.call(null,G__293319,G__293320));
})();
var G__293247 = ") ";
var G__293248 = (function (){var G__293321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293322 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293321,G__293322) : tailrecursion.hoplon.span.call(null,G__293321,G__293322));
})();
var G__293249 = ")\n                            (";
var G__293250 = (function (){var G__293323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293324 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293323,G__293324) : tailrecursion.hoplon.span.call(null,G__293323,G__293324));
})();
var G__293251 = " ";
var G__293252 = (function (){var G__293325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293326 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293325,G__293326) : tailrecursion.hoplon.span.call(null,G__293325,G__293326));
})();
var G__293253 = " (";
var G__293254 = (function (){var G__293327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293328 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293327,G__293328) : tailrecursion.hoplon.span.call(null,G__293327,G__293328));
})();
var G__293255 = (function (){var G__293329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293330 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293329,G__293330) : tailrecursion.hoplon.span.call(null,G__293329,G__293330));
})();
var G__293256 = " ";
var G__293257 = (function (){var G__293331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293332 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293331,G__293332) : tailrecursion.hoplon.span.call(null,G__293331,G__293332));
})();
var G__293258 = ") ";
var G__293259 = (function (){var G__293333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293334 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293333,G__293334) : tailrecursion.hoplon.span.call(null,G__293333,G__293334));
})();
var G__293260 = "))\n                         ";
var G__293261 = (function (){var G__293335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293336 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293335,G__293336) : tailrecursion.hoplon.span.call(null,G__293335,G__293336));
})();
var G__293262 = ")\n        ";
var G__293263 = (function (){var G__293337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293338 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293337,G__293338) : tailrecursion.hoplon.span.call(null,G__293337,G__293338));
})();
var G__293264 = " (";
var G__293265 = (function (){var G__293339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293340 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293339,G__293340) : tailrecursion.hoplon.span.call(null,G__293339,G__293340));
})();
var G__293266 = " (";
var G__293267 = (function (){var G__293341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293342 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293341,G__293342) : tailrecursion.hoplon.span.call(null,G__293341,G__293342));
})();
var G__293268 = (function (){var G__293343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293344 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293343,G__293344) : tailrecursion.hoplon.span.call(null,G__293343,G__293344));
})();
var G__293269 = " (";
var G__293270 = (function (){var G__293345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293346 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293345,G__293346) : tailrecursion.hoplon.span.call(null,G__293345,G__293346));
})();
var G__293271 = " ";
var G__293272 = (function (){var G__293347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293348 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293347,G__293348) : tailrecursion.hoplon.span.call(null,G__293347,G__293348));
})();
var G__293273 = " (";
var G__293274 = (function (){var G__293349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293350 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293349,G__293350) : tailrecursion.hoplon.span.call(null,G__293349,G__293350));
})();
var G__293275 = (function (){var G__293351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293352 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293351,G__293352) : tailrecursion.hoplon.span.call(null,G__293351,G__293352));
})();
var G__293276 = " ";
var G__293277 = (function (){var G__293353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293354 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293353,G__293354) : tailrecursion.hoplon.span.call(null,G__293353,G__293354));
})();
var G__293278 = ") ";
var G__293279 = (function (){var G__293355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293356 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293355,G__293356) : tailrecursion.hoplon.span.call(null,G__293355,G__293356));
})();
var G__293280 = ")) ";
var G__293281 = (function (){var G__293357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293358 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293357,G__293358) : tailrecursion.hoplon.span.call(null,G__293357,G__293358));
})();
var G__293282 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$72 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$72(G__293211,G__293212,G__293213,G__293214,G__293215,G__293216,G__293217,G__293218,G__293219,G__293220,G__293221,G__293222,G__293223,G__293224,G__293225,G__293226,G__293227,G__293228,G__293229,G__293230,G__293231,G__293232,G__293233,G__293234,G__293235,G__293236,G__293237,G__293238,G__293239,G__293240,G__293241,G__293242,G__293243,G__293244,G__293245,G__293246,G__293247,G__293248,G__293249,G__293250,G__293251,G__293252,G__293253,G__293254,G__293255,G__293256,G__293257,G__293258,G__293259,G__293260,G__293261,G__293262,G__293263,G__293264,G__293265,G__293266,G__293267,G__293268,G__293269,G__293270,G__293271,G__293272,G__293273,G__293274,G__293275,G__293276,G__293277,G__293278,G__293279,G__293280,G__293281,G__293282) : tailrecursion.hoplon.pre.call(null,G__293211,G__293212,G__293213,G__293214,G__293215,G__293216,G__293217,G__293218,G__293219,G__293220,G__293221,G__293222,G__293223,G__293224,G__293225,G__293226,G__293227,G__293228,G__293229,G__293230,G__293231,G__293232,G__293233,G__293234,G__293235,G__293236,G__293237,G__293238,G__293239,G__293240,G__293241,G__293242,G__293243,G__293244,G__293245,G__293246,G__293247,G__293248,G__293249,G__293250,G__293251,G__293252,G__293253,G__293254,G__293255,G__293256,G__293257,G__293258,G__293259,G__293260,G__293261,G__293262,G__293263,G__293264,G__293265,G__293266,G__293267,G__293268,G__293269,G__293270,G__293271,G__293272,G__293273,G__293274,G__293275,G__293276,G__293277,G__293278,G__293279,G__293280,G__293281,G__293282));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__293209,G__293210) : tailrecursion.hoplon.div.call(null,G__293209,G__293210));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__293208) : tailrecursion.hoplon.div.call(null,G__293208));
})(),(function (){var G__293359 = cljs.core.PersistentArrayMap.EMPTY;
var G__293360 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__293361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__293362 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I don",(function (){var G__293363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__293364 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__293363,G__293364) : tailrecursion.hoplon.markdown.simple_node.call(null,G__293363,G__293364));
})(),"t see what difference that could make,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__293361,G__293362) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__293361,G__293362));
})()," says Louis. ",(function (){var G__293365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__293366 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I do."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__293365,G__293366) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__293365,G__293366));
})()," says Eva. ",(function (){var G__293367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__293368 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["By writing the procedure like that, you have transformed the \\(\\Theta(\\log n)\\) process into a \\(\\Theta(n)\\) process."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__293367,G__293368) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__293367,G__293368));
})()," Explain."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293359,G__293360) : tailrecursion.hoplon.markdown.para_node.call(null,G__293359,G__293360));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293045;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293044;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293043;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293042;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_293369 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293370 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_293371 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293372 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__293373 = cljs.core.PersistentArrayMap.EMPTY;
var G__293374 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Remember the applicative order evaluation model. Every time the exponent is even, ",(function (){var G__293375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(expmod base (/ exp 2) m)"], null);
var G__293376 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293375,G__293376) : tailrecursion.hoplon.markdown.code_node.call(null,G__293375,G__293376));
})()," is computed twice, causing two branches of the same computation to occur."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293373,G__293374) : tailrecursion.hoplon.markdown.para_node.call(null,G__293373,G__293374));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293372;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293371;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293370;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293369;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(27)], null),(function (){var _STAR_references_STAR_293377 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293378 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_293379 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293380 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__293381 = cljs.core.PersistentArrayMap.EMPTY;
var G__293382 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Demonstrate that these Carmichael numbers: 561, 1105, 1729, 2465, 2821, 6601, really do fool the Fermat test. That is, write a procedure that takes an integer \\(n\\) and tests whether an is congruent to \\(a\\) modulo \\(n\\) for every \\(a<n\\), and try your procedure on the given Carmichael numbers."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293381,G__293382) : tailrecursion.hoplon.markdown.para_node.call(null,G__293381,G__293382));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293380;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293379;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293378;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293377;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_293383 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293384 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_293385 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293386 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__293476 = (function (){var G__293477 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__293478 = (function (){var G__293479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__293480 = "(";
var G__293481 = (function (){var G__293522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__293523 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293522,G__293523) : tailrecursion.hoplon.span.call(null,G__293522,G__293523));
})();
var G__293482 = (function (){var G__293524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293525 = "carmichael-check";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293524,G__293525) : tailrecursion.hoplon.span.call(null,G__293524,G__293525));
})();
var G__293483 = " [";
var G__293484 = (function (){var G__293526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293527 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293526,G__293527) : tailrecursion.hoplon.span.call(null,G__293526,G__293527));
})();
var G__293485 = "]\n  (";
var G__293486 = (function (){var G__293528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__293529 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293528,G__293529) : tailrecursion.hoplon.span.call(null,G__293528,G__293529));
})();
var G__293487 = "[";
var G__293488 = (function (){var G__293530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293531 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293530,G__293531) : tailrecursion.hoplon.span.call(null,G__293530,G__293531));
})();
var G__293489 = " ";
var G__293490 = (function (){var G__293532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293533 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293532,G__293533) : tailrecursion.hoplon.span.call(null,G__293532,G__293533));
})();
var G__293491 = "]\n    (";
var G__293492 = (function (){var G__293534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293535 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293534,G__293535) : tailrecursion.hoplon.span.call(null,G__293534,G__293535));
})();
var G__293493 = "(";
var G__293494 = (function (){var G__293536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293537 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293536,G__293537) : tailrecursion.hoplon.span.call(null,G__293536,G__293537));
})();
var G__293495 = (function (){var G__293538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293539 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293538,G__293539) : tailrecursion.hoplon.span.call(null,G__293538,G__293539));
})();
var G__293496 = " ";
var G__293497 = (function (){var G__293540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293541 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293540,G__293541) : tailrecursion.hoplon.span.call(null,G__293540,G__293541));
})();
var G__293498 = ") ";
var G__293499 = (function (){var G__293542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293543 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293542,G__293543) : tailrecursion.hoplon.span.call(null,G__293542,G__293543));
})();
var G__293500 = "\n          (";
var G__293501 = (function (){var G__293544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293545 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293544,G__293545) : tailrecursion.hoplon.span.call(null,G__293544,G__293545));
})();
var G__293502 = "(";
var G__293503 = (function (){var G__293546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293547 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293546,G__293547) : tailrecursion.hoplon.span.call(null,G__293546,G__293547));
})();
var G__293504 = " ";
var G__293505 = (function (){var G__293548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293549 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293548,G__293549) : tailrecursion.hoplon.span.call(null,G__293548,G__293549));
})();
var G__293506 = " ";
var G__293507 = (function (){var G__293550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293551 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293550,G__293551) : tailrecursion.hoplon.span.call(null,G__293550,G__293551));
})();
var G__293508 = " ";
var G__293509 = (function (){var G__293552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293553 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293552,G__293553) : tailrecursion.hoplon.span.call(null,G__293552,G__293553));
})();
var G__293510 = ") ";
var G__293511 = (function (){var G__293554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293555 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293554,G__293555) : tailrecursion.hoplon.span.call(null,G__293554,G__293555));
})();
var G__293512 = ") (";
var G__293513 = (function (){var G__293556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293557 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293556,G__293557) : tailrecursion.hoplon.span.call(null,G__293556,G__293557));
})();
var G__293514 = " (";
var G__293515 = (function (){var G__293558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293559 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293558,G__293559) : tailrecursion.hoplon.span.call(null,G__293558,G__293559));
})();
var G__293516 = (function (){var G__293560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293561 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293560,G__293561) : tailrecursion.hoplon.span.call(null,G__293560,G__293561));
})();
var G__293517 = "))\n          ";
var G__293518 = (function (){var G__293562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293563 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293562,G__293563) : tailrecursion.hoplon.span.call(null,G__293562,G__293563));
})();
var G__293519 = " ";
var G__293520 = (function (){var G__293564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293565 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293564,G__293565) : tailrecursion.hoplon.span.call(null,G__293564,G__293565));
})();
var G__293521 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43(G__293479,G__293480,G__293481,G__293482,G__293483,G__293484,G__293485,G__293486,G__293487,G__293488,G__293489,G__293490,G__293491,G__293492,G__293493,G__293494,G__293495,G__293496,G__293497,G__293498,G__293499,G__293500,G__293501,G__293502,G__293503,G__293504,G__293505,G__293506,G__293507,G__293508,G__293509,G__293510,G__293511,G__293512,G__293513,G__293514,G__293515,G__293516,G__293517,G__293518,G__293519,G__293520,G__293521) : tailrecursion.hoplon.pre.call(null,G__293479,G__293480,G__293481,G__293482,G__293483,G__293484,G__293485,G__293486,G__293487,G__293488,G__293489,G__293490,G__293491,G__293492,G__293493,G__293494,G__293495,G__293496,G__293497,G__293498,G__293499,G__293500,G__293501,G__293502,G__293503,G__293504,G__293505,G__293506,G__293507,G__293508,G__293509,G__293510,G__293511,G__293512,G__293513,G__293514,G__293515,G__293516,G__293517,G__293518,G__293519,G__293520,G__293521));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__293477,G__293478) : tailrecursion.hoplon.div.call(null,G__293477,G__293478));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__293476) : tailrecursion.hoplon.div.call(null,G__293476));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293386;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293385;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293384;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293383;
}})()], 0))], 0)),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(28)], null),(function (){var _STAR_references_STAR_293566 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293567 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_293568 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293569 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__293570 = cljs.core.PersistentArrayMap.EMPTY;
var G__293571 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One variant of the Fermat test that cannot be fooled is called the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Miller-Rabin"], null)], 0))," test (Miller 1976; Rabin 1980). This starts from an alternate form of Fermat",(function (){var G__293572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__293573 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__293572,G__293573) : tailrecursion.hoplon.markdown.simple_node.call(null,G__293572,G__293573));
})(),"s Little Theorem, which states that if \\(n\\) is a prime number and \\(a\\) is any positive integer less than \\(n\\), then \\(a^{n-1}\\equiv 1\\pmod n\\). To test the primality of a number \\(n\\) by the Miller-Rabin test, we pick a random number \\(a<n\\) and raise \\(a\\) to the \\((n - 1)\\)st power modulo \\(n\\) using the ",(function (){var G__293574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"expmod"], null);
var G__293575 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293574,G__293575) : tailrecursion.hoplon.markdown.code_node.call(null,G__293574,G__293575));
})()," procedure. However, whenever we perform the squaring step in ",(function (){var G__293576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"expmod"], null);
var G__293577 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293576,G__293577) : tailrecursion.hoplon.markdown.code_node.call(null,G__293576,G__293577));
})(),", we check to see if we have discovered a ",(function (){var G__293578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__293579 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["nontrivial square root of 1 modulo \\(n\\),"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__293578,G__293579) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__293578,G__293579));
})()," that is, a number not equal to 1 or \\(n - 1\\) whose square is equal to 1 modulo \\(n\\). It is possible to prove that if such a nontrivial square root of 1 exists, then \\(n\\) is not prime. It is also possible to prove that if \\(n\\) is an odd number that is not prime, then, for at least half the numbers \\(a<n\\), computing \\(a^{n-1}\\) in this way will reveal a nontrivial square root of 1 modulo \\(n\\). (This is why the Miller-Rabin test cannot be fooled.) Modify the ",(function (){var G__293580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"expmod"], null);
var G__293581 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293580,G__293581) : tailrecursion.hoplon.markdown.code_node.call(null,G__293580,G__293581));
})()," procedure to signal if it discovers a nontrivial square root of 1, and use this to implement the Miller-Rabin test with a procedure analogous to ",(function (){var G__293582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fermat-test"], null);
var G__293583 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293582,G__293583) : tailrecursion.hoplon.markdown.code_node.call(null,G__293582,G__293583));
})(),". Check your procedure by testing various known primes and non-primes. Hint: One convenient way to make ",(function (){var G__293584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"expmod"], null);
var G__293585 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293584,G__293585) : tailrecursion.hoplon.markdown.code_node.call(null,G__293584,G__293585));
})()," signal is to have it return 0."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293570,G__293571) : tailrecursion.hoplon.markdown.para_node.call(null,G__293570,G__293571));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293569;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293568;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293567;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293566;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_293586 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293587 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_293588 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293589 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__293686 = (function (){var G__293687 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__293688 = (function (){var G__293689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__293690 = "(";
var G__293691 = (function (){var G__293735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__293736 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293735,G__293736) : tailrecursion.hoplon.span.call(null,G__293735,G__293736));
})();
var G__293692 = (function (){var G__293737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293738 = "miller-rabin-prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293737,G__293738) : tailrecursion.hoplon.span.call(null,G__293737,G__293738));
})();
var G__293693 = " [";
var G__293694 = (function (){var G__293739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293740 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293739,G__293740) : tailrecursion.hoplon.span.call(null,G__293739,G__293740));
})();
var G__293695 = "]\n  (";
var G__293696 = (function (){var G__293741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__293742 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293741,G__293742) : tailrecursion.hoplon.span.call(null,G__293741,G__293742));
})();
var G__293697 = "[";
var G__293698 = (function (){var G__293743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293744 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293743,G__293744) : tailrecursion.hoplon.span.call(null,G__293743,G__293744));
})();
var G__293699 = " ";
var G__293700 = (function (){var G__293745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293746 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293745,G__293746) : tailrecursion.hoplon.span.call(null,G__293745,G__293746));
})();
var G__293701 = "]\n    (";
var G__293702 = (function (){var G__293747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293748 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293747,G__293748) : tailrecursion.hoplon.span.call(null,G__293747,G__293748));
})();
var G__293703 = "(";
var G__293704 = (function (){var G__293749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293750 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293749,G__293750) : tailrecursion.hoplon.span.call(null,G__293749,G__293750));
})();
var G__293705 = (function (){var G__293751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293752 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293751,G__293752) : tailrecursion.hoplon.span.call(null,G__293751,G__293752));
})();
var G__293706 = " (";
var G__293707 = (function (){var G__293753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293754 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293753,G__293754) : tailrecursion.hoplon.span.call(null,G__293753,G__293754));
})();
var G__293708 = (function (){var G__293755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293756 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293755,G__293756) : tailrecursion.hoplon.span.call(null,G__293755,G__293756));
})();
var G__293709 = " ";
var G__293710 = (function (){var G__293757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293758 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293757,G__293758) : tailrecursion.hoplon.span.call(null,G__293757,G__293758));
})();
var G__293711 = "))            ";
var G__293712 = (function (){var G__293759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293760 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293759,G__293760) : tailrecursion.hoplon.span.call(null,G__293759,G__293760));
})();
var G__293713 = "\n          (";
var G__293714 = (function (){var G__293761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293762 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293761,G__293762) : tailrecursion.hoplon.span.call(null,G__293761,G__293762));
})();
var G__293715 = "(";
var G__293716 = (function (){var G__293763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293764 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293763,G__293764) : tailrecursion.hoplon.span.call(null,G__293763,G__293764));
})();
var G__293717 = " (";
var G__293718 = (function (){var G__293765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293766 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293765,G__293766) : tailrecursion.hoplon.span.call(null,G__293765,G__293766));
})();
var G__293719 = " ";
var G__293720 = (function (){var G__293767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293768 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293767,G__293768) : tailrecursion.hoplon.span.call(null,G__293767,G__293768));
})();
var G__293721 = ") ";
var G__293722 = (function (){var G__293769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293770 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293769,G__293770) : tailrecursion.hoplon.span.call(null,G__293769,G__293770));
})();
var G__293723 = ") ";
var G__293724 = (function (){var G__293771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293772 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293771,G__293772) : tailrecursion.hoplon.span.call(null,G__293771,G__293772));
})();
var G__293725 = ") ";
var G__293726 = (function (){var G__293773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293774 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293773,G__293774) : tailrecursion.hoplon.span.call(null,G__293773,G__293774));
})();
var G__293727 = "\n          ";
var G__293728 = (function (){var G__293775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293776 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293775,G__293776) : tailrecursion.hoplon.span.call(null,G__293775,G__293776));
})();
var G__293729 = "                    (";
var G__293730 = (function (){var G__293777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293778 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293777,G__293778) : tailrecursion.hoplon.span.call(null,G__293777,G__293778));
})();
var G__293731 = " (";
var G__293732 = (function (){var G__293779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293780 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293779,G__293780) : tailrecursion.hoplon.span.call(null,G__293779,G__293780));
})();
var G__293733 = (function (){var G__293781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293782 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293781,G__293782) : tailrecursion.hoplon.span.call(null,G__293781,G__293782));
})();
var G__293734 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__293689,G__293690,G__293691,G__293692,G__293693,G__293694,G__293695,G__293696,G__293697,G__293698,G__293699,G__293700,G__293701,G__293702,G__293703,G__293704,G__293705,G__293706,G__293707,G__293708,G__293709,G__293710,G__293711,G__293712,G__293713,G__293714,G__293715,G__293716,G__293717,G__293718,G__293719,G__293720,G__293721,G__293722,G__293723,G__293724,G__293725,G__293726,G__293727,G__293728,G__293729,G__293730,G__293731,G__293732,G__293733,G__293734) : tailrecursion.hoplon.pre.call(null,G__293689,G__293690,G__293691,G__293692,G__293693,G__293694,G__293695,G__293696,G__293697,G__293698,G__293699,G__293700,G__293701,G__293702,G__293703,G__293704,G__293705,G__293706,G__293707,G__293708,G__293709,G__293710,G__293711,G__293712,G__293713,G__293714,G__293715,G__293716,G__293717,G__293718,G__293719,G__293720,G__293721,G__293722,G__293723,G__293724,G__293725,G__293726,G__293727,G__293728,G__293729,G__293730,G__293731,G__293732,G__293733,G__293734));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__293687,G__293688) : tailrecursion.hoplon.div.call(null,G__293687,G__293688));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__293686) : tailrecursion.hoplon.div.call(null,G__293686));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293589;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293588;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293587;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293586;
}})()], 0))], 0))], 0));
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$31(G__279803,G__279804,G__279805,G__279806,G__279807,G__279808,G__279809,G__279810,G__279811,G__279812,G__279813,G__279814,G__279815,G__279816,G__279817,G__279818,G__279819,G__279820,G__279821,G__279822,G__279823,G__279824,G__279825,G__279826,G__279827,G__279828,G__279829,G__279830,G__279831,G__279832,G__279833) : tailrecursion.hoplon.div.call(null,G__279803,G__279804,G__279805,G__279806,G__279807,G__279808,G__279809,G__279810,G__279811,G__279812,G__279813,G__279814,G__279815,G__279816,G__279817,G__279818,G__279819,G__279820,G__279821,G__279822,G__279823,G__279824,G__279825,G__279826,G__279827,G__279828,G__279829,G__279830,G__279831,G__279832,G__279833));
};
var book$sicp$texts$ch1sect2$content = function (var_args){
var args__8082__auto__ = null;
if (arguments.length > 0) {
var G__293783__i = 0, G__293783__a = new Array(arguments.length -  0);
while (G__293783__i < G__293783__a.length) {G__293783__a[G__293783__i] = arguments[G__293783__i + 0]; ++G__293783__i;}
  args__8082__auto__ = new cljs.core.IndexedSeq(G__293783__a,0);
} 
return book$sicp$texts$ch1sect2$content__delegate.call(this,args__8082__auto__);};
book$sicp$texts$ch1sect2$content.cljs$lang$maxFixedArity = 0;
book$sicp$texts$ch1sect2$content.cljs$lang$applyTo = (function (arglist__293784){
var args__8082__auto__ = cljs.core.seq(arglist__293784);
return book$sicp$texts$ch1sect2$content__delegate(args__8082__auto__);
});
book$sicp$texts$ch1sect2$content.cljs$core$IFn$_invoke$arity$variadic = book$sicp$texts$ch1sect2$content__delegate;
return book$sicp$texts$ch1sect2$content;
})()
;

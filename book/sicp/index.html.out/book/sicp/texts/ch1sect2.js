// Compiled by ClojureScript 1.7.48 {:static-fns true, :optimize-constants true}
goog.provide('book.sicp.texts.ch1sect2');
goog.require('cljs.core');
goog.require('tailrecursion.hoplon.markdown');
goog.require('book.sicp.book_data');
goog.require('tailrecursion.hoplon');
goog.require('tailrecursion.javelin');
/**
 * @param {...*} var_args
 */
book.sicp.texts.ch1sect2.content = (function() { 
var book$sicp$texts$ch1sect2$content__delegate = function (args__8262__auto__){
var vec__279982 = tailrecursion.hoplon.parse_args(args__8262__auto__);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__279982,(0),null);
var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__279982,(1),null);
var G__279983 = cljs.core.PersistentArrayMap.EMPTY;
var G__279984 = book.sicp.book_data.sect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Procedures and the Processes They Generate"], null),(function (){var _STAR_references_STAR_280014 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_280015 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_280016 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_280017 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__280018 = cljs.core.PersistentArrayMap.EMPTY;
var G__280019 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We have now considered the elements of programming: We have used primitive arithmetic operations, we have combined these operations, and we have abstracted these composite operations by defining them as compound procedures. But that is not enough to enable us to say that we know how to program. Our situation is analogous to that of someone who has learned the rules for how the pieces move in chess but knows nothing of typical openings, tactics, or strategy. Like the novice chess player, we don",(function (){var G__280020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__280021 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__280020,G__280021) : tailrecursion.hoplon.markdown.simple_node.call(null,G__280020,G__280021));
})(),"t yet know the common patterns of usage in the domain. We lack the knowledge of which moves are worth making (which procedures are worth defining). We lack the experience to predict the consequences of making a move (executing a procedure)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280018,G__280019) : tailrecursion.hoplon.markdown.para_node.call(null,G__280018,G__280019));
})(),(function (){var G__280022 = cljs.core.PersistentArrayMap.EMPTY;
var G__280023 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ability to visualize the consequences of the actions under consideration is crucial to becoming an expert programmer, just as it is in any synthetic, creative activity. In becoming an expert photographer, for example, one must learn how to look at a scene and know how dark each region will appear on a print for each possible choice of exposure and development conditions. Only then can one reason backward, planning framing, lighting, exposure, and development to obtain the desired effects. So it is with programming, where we are planning the course of action to be taken by a process and where we control the process by means of a program. To become experts, we must learn to visualize the processes generated by various types of procedures. Only after we have developed such a skill can we learn to reliably construct programs that exhibit the desired behavior."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280022,G__280023) : tailrecursion.hoplon.markdown.para_node.call(null,G__280022,G__280023));
})(),(function (){var G__280024 = cljs.core.PersistentArrayMap.EMPTY;
var G__280025 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A procedure is a pattern for the local evolution of a computational process. It specifies how each stage of the process is built upon the previous stage. We would like to be able to make statements about the overall, or global, behavior of a process whose local evolution has been specified by a procedure. This is very difficult to do in general, but we can at least try to describe some typical patterns of process evolution."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280024,G__280025) : tailrecursion.hoplon.markdown.para_node.call(null,G__280024,G__280025));
})(),(function (){var G__280026 = cljs.core.PersistentArrayMap.EMPTY;
var G__280027 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In this section we will examine some common ",(function (){var G__280028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__280029 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["shapes"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__280028,G__280029) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__280028,G__280029));
})()," for processes generated by simple procedures. We will also investigate the rates at which these processes consume the important computational resources of time and space. The procedures we will consider are very simple. Their role is like that played by test patterns in photography: as oversimplified prototypical patterns, rather than practical examples in their own right."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280026,G__280027) : tailrecursion.hoplon.markdown.para_node.call(null,G__280026,G__280027));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_280017;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_280016;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_280015;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_280014;
}})()], 0));
var G__279985 = "";
var G__279986 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Linear Recursion and Iteration"], null),book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"A linear recursive process for computing 6!."], null)], 0)),(function (){var _STAR_references_STAR_280030 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_280031 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_280032 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_280033 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__280034 = cljs.core.PersistentArrayMap.EMPTY;
var G__280035 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We begin by considering the factorial function, defined by"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280034,G__280035) : tailrecursion.hoplon.markdown.para_node.call(null,G__280034,G__280035));
})(),(function (){var G__280036 = cljs.core.PersistentArrayMap.EMPTY;
var G__280037 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$n!=n\\cdot(n-1)\\cdot(n-2)\\cdot\\cdot\\cdot3\\cdot2\\cdot1$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280036,G__280037) : tailrecursion.hoplon.markdown.para_node.call(null,G__280036,G__280037));
})(),(function (){var G__280038 = cljs.core.PersistentArrayMap.EMPTY;
var G__280039 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["There are many ways to compute factorials. One way is to make use of the observation that ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n!"], null)], 0))," is equal to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0))," times ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(n-1)!"], null)], 0))," for any positive integer ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280038,G__280039) : tailrecursion.hoplon.markdown.para_node.call(null,G__280038,G__280039));
})(),(function (){var G__280040 = cljs.core.PersistentArrayMap.EMPTY;
var G__280041 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$n!=n\\cdot\\left",tailrecursion.hoplon.markdown.ref_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$separator_DASH_space,null,cljs.core.cst$kw$reference_DASH_key,null], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(n-1)\\cdot(n-2)\\cdot\\cdot\\cdot3\\cdot2\\cdot1\\right"], null)], 0)),"=n\\cdot(n-1)!$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280040,G__280041) : tailrecursion.hoplon.markdown.para_node.call(null,G__280040,G__280041));
})(),(function (){var G__280042 = cljs.core.PersistentArrayMap.EMPTY;
var G__280043 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Thus we can compute ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"! by computing ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(n-1)"], null)], 0)),"! and multiplying the result by ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". If we add the stipulation that 1! is equal to 1, this observation translates directly into a procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280042,G__280043) : tailrecursion.hoplon.markdown.para_node.call(null,G__280042,G__280043));
})(),(function (){var G__280100 = (function (){var G__280101 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__280102 = (function (){var G__280103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__280104 = "(";
var G__280105 = (function (){var G__280129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__280130 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280129,G__280130) : tailrecursion.hoplon.span.call(null,G__280129,G__280130));
})();
var G__280106 = (function (){var G__280131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280132 = "factorial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280131,G__280132) : tailrecursion.hoplon.span.call(null,G__280131,G__280132));
})();
var G__280107 = " [";
var G__280108 = (function (){var G__280133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280134 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280133,G__280134) : tailrecursion.hoplon.span.call(null,G__280133,G__280134));
})();
var G__280109 = "]\n  (";
var G__280110 = (function (){var G__280135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__280136 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280135,G__280136) : tailrecursion.hoplon.span.call(null,G__280135,G__280136));
})();
var G__280111 = "(";
var G__280112 = (function (){var G__280137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280138 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280137,G__280138) : tailrecursion.hoplon.span.call(null,G__280137,G__280138));
})();
var G__280113 = (function (){var G__280139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280140 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280139,G__280140) : tailrecursion.hoplon.span.call(null,G__280139,G__280140));
})();
var G__280114 = " ";
var G__280115 = (function (){var G__280141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280142 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280141,G__280142) : tailrecursion.hoplon.span.call(null,G__280141,G__280142));
})();
var G__280116 = ")\n      ";
var G__280117 = (function (){var G__280143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280144 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280143,G__280144) : tailrecursion.hoplon.span.call(null,G__280143,G__280144));
})();
var G__280118 = "\n      (";
var G__280119 = (function (){var G__280145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280146 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280145,G__280146) : tailrecursion.hoplon.span.call(null,G__280145,G__280146));
})();
var G__280120 = (function (){var G__280147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280148 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280147,G__280148) : tailrecursion.hoplon.span.call(null,G__280147,G__280148));
})();
var G__280121 = " (";
var G__280122 = (function (){var G__280149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__280150 = "factorial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280149,G__280150) : tailrecursion.hoplon.span.call(null,G__280149,G__280150));
})();
var G__280123 = " (";
var G__280124 = (function (){var G__280151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280152 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280151,G__280152) : tailrecursion.hoplon.span.call(null,G__280151,G__280152));
})();
var G__280125 = (function (){var G__280153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280154 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280153,G__280154) : tailrecursion.hoplon.span.call(null,G__280153,G__280154));
})();
var G__280126 = " ";
var G__280127 = (function (){var G__280155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280156 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280155,G__280156) : tailrecursion.hoplon.span.call(null,G__280155,G__280156));
})();
var G__280128 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26(G__280103,G__280104,G__280105,G__280106,G__280107,G__280108,G__280109,G__280110,G__280111,G__280112,G__280113,G__280114,G__280115,G__280116,G__280117,G__280118,G__280119,G__280120,G__280121,G__280122,G__280123,G__280124,G__280125,G__280126,G__280127,G__280128) : tailrecursion.hoplon.pre.call(null,G__280103,G__280104,G__280105,G__280106,G__280107,G__280108,G__280109,G__280110,G__280111,G__280112,G__280113,G__280114,G__280115,G__280116,G__280117,G__280118,G__280119,G__280120,G__280121,G__280122,G__280123,G__280124,G__280125,G__280126,G__280127,G__280128));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__280101,G__280102) : tailrecursion.hoplon.div.call(null,G__280101,G__280102));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__280100) : tailrecursion.hoplon.div.call(null,G__280100));
})(),(function (){var G__280157 = cljs.core.PersistentArrayMap.EMPTY;
var G__280158 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can use the substitution model of section ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/ch/1/sect/1/sub/5/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["1.1.5"], null)], 0))," to watch this procedure in action computing 6!, as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/figure1-3",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.3"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280157,G__280158) : tailrecursion.hoplon.markdown.para_node.call(null,G__280157,G__280158));
})(),(function (){var G__280159 = cljs.core.PersistentArrayMap.EMPTY;
var G__280160 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now let",(function (){var G__280161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__280162 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__280161,G__280162) : tailrecursion.hoplon.markdown.simple_node.call(null,G__280161,G__280162));
})(),"s take a different perspective on computing factorials. We could describe a rule for computing ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"! by specifying that we first multiply 1 by 2, then multiply the result by 3, then by 4, and so on until we reach ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". More formally, we maintain a running product, together with a counter that counts from 1 up to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". We can describe the computation by saying that the counter and the product simultaneously change from one step to the next according to the rule:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280159,G__280160) : tailrecursion.hoplon.markdown.para_node.call(null,G__280159,G__280160));
})(),(function (){var G__280163 = cljs.core.PersistentArrayMap.EMPTY;
var G__280164 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\text{product }\\rightarrow\\text{counter }\\cdot\\text{product}$$ $$\\text{counter }\\rightarrow\\text{ counter }+1$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280163,G__280164) : tailrecursion.hoplon.markdown.para_node.call(null,G__280163,G__280164));
})(),(function (){var G__280165 = cljs.core.PersistentArrayMap.EMPTY;
var G__280166 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and stipulating that ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"! is the value of the product when the counter exceeds ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280165,G__280166) : tailrecursion.hoplon.markdown.para_node.call(null,G__280165,G__280166));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_280033;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_280032;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_280031;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_280030;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"A linear iterative process for computing 6!"], null)], 0)),"",(function (){var _STAR_references_STAR_280167 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_280168 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_280169 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_280170 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__280171 = cljs.core.PersistentArrayMap.EMPTY;
var G__280172 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Once again, we can recast our description as a procedure for computing factorials:",(function (){var G__280173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__280174 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In a real program we would hide the definition of ",(function (){var G__280175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fact-iter"], null);
var G__280176 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280175,G__280176) : tailrecursion.hoplon.markdown.code_node.call(null,G__280175,G__280176));
})()," using what",(function (){var G__280177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__280178 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__280177,G__280178) : tailrecursion.hoplon.markdown.simple_node.call(null,G__280177,G__280178));
})(),"s called a ",(function (){var G__280179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__280180 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280179,G__280180) : tailrecursion.hoplon.markdown.code_node.call(null,G__280179,G__280180));
})()," binding, but we",(function (){var G__280181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__280182 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__280181,G__280182) : tailrecursion.hoplon.markdown.simple_node.call(null,G__280181,G__280182));
})(),"ll learn more about that later on."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__280173,G__280174) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__280173,G__280174));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280171,G__280172) : tailrecursion.hoplon.markdown.para_node.call(null,G__280171,G__280172));
})(),(function (){var G__280282 = (function (){var G__280283 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__280284 = (function (){var G__280285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__280286 = "(";
var G__280287 = (function (){var G__280332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__280333 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280332,G__280333) : tailrecursion.hoplon.span.call(null,G__280332,G__280333));
})();
var G__280288 = (function (){var G__280334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280335 = "factorial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280334,G__280335) : tailrecursion.hoplon.span.call(null,G__280334,G__280335));
})();
var G__280289 = " [";
var G__280290 = (function (){var G__280336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280337 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280336,G__280337) : tailrecursion.hoplon.span.call(null,G__280336,G__280337));
})();
var G__280291 = "]\n  (";
var G__280292 = (function (){var G__280338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__280339 = "fact-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280338,G__280339) : tailrecursion.hoplon.span.call(null,G__280338,G__280339));
})();
var G__280293 = " ";
var G__280294 = (function (){var G__280340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280341 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280340,G__280341) : tailrecursion.hoplon.span.call(null,G__280340,G__280341));
})();
var G__280295 = " ";
var G__280296 = (function (){var G__280342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280343 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280342,G__280343) : tailrecursion.hoplon.span.call(null,G__280342,G__280343));
})();
var G__280297 = " ";
var G__280298 = (function (){var G__280344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280345 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280344,G__280345) : tailrecursion.hoplon.span.call(null,G__280344,G__280345));
})();
var G__280299 = "))\n(";
var G__280300 = (function (){var G__280346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__280347 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280346,G__280347) : tailrecursion.hoplon.span.call(null,G__280346,G__280347));
})();
var G__280301 = (function (){var G__280348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280349 = "fact-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280348,G__280349) : tailrecursion.hoplon.span.call(null,G__280348,G__280349));
})();
var G__280302 = " [";
var G__280303 = (function (){var G__280350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280351 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280350,G__280351) : tailrecursion.hoplon.span.call(null,G__280350,G__280351));
})();
var G__280304 = " ";
var G__280305 = (function (){var G__280352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280353 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280352,G__280353) : tailrecursion.hoplon.span.call(null,G__280352,G__280353));
})();
var G__280306 = " ";
var G__280307 = (function (){var G__280354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280355 = "max-count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280354,G__280355) : tailrecursion.hoplon.span.call(null,G__280354,G__280355));
})();
var G__280308 = "]\n  (";
var G__280309 = (function (){var G__280356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__280357 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280356,G__280357) : tailrecursion.hoplon.span.call(null,G__280356,G__280357));
})();
var G__280310 = "(";
var G__280311 = (function (){var G__280358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280359 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280358,G__280359) : tailrecursion.hoplon.span.call(null,G__280358,G__280359));
})();
var G__280312 = (function (){var G__280360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280361 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280360,G__280361) : tailrecursion.hoplon.span.call(null,G__280360,G__280361));
})();
var G__280313 = " ";
var G__280314 = (function (){var G__280362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280363 = "max-count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280362,G__280363) : tailrecursion.hoplon.span.call(null,G__280362,G__280363));
})();
var G__280315 = ")\n      ";
var G__280316 = (function (){var G__280364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280365 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280364,G__280365) : tailrecursion.hoplon.span.call(null,G__280364,G__280365));
})();
var G__280317 = "\n      (";
var G__280318 = (function (){var G__280366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__280367 = "fact-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280366,G__280367) : tailrecursion.hoplon.span.call(null,G__280366,G__280367));
})();
var G__280319 = " (";
var G__280320 = (function (){var G__280368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280369 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280368,G__280369) : tailrecursion.hoplon.span.call(null,G__280368,G__280369));
})();
var G__280321 = (function (){var G__280370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280371 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280370,G__280371) : tailrecursion.hoplon.span.call(null,G__280370,G__280371));
})();
var G__280322 = " ";
var G__280323 = (function (){var G__280372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280373 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280372,G__280373) : tailrecursion.hoplon.span.call(null,G__280372,G__280373));
})();
var G__280324 = ")\n                 (";
var G__280325 = (function (){var G__280374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280375 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280374,G__280375) : tailrecursion.hoplon.span.call(null,G__280374,G__280375));
})();
var G__280326 = (function (){var G__280376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280377 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280376,G__280377) : tailrecursion.hoplon.span.call(null,G__280376,G__280377));
})();
var G__280327 = " ";
var G__280328 = (function (){var G__280378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280379 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280378,G__280379) : tailrecursion.hoplon.span.call(null,G__280378,G__280379));
})();
var G__280329 = ")\n                 ";
var G__280330 = (function (){var G__280380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280381 = "max-count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280380,G__280381) : tailrecursion.hoplon.span.call(null,G__280380,G__280381));
})();
var G__280331 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47(G__280285,G__280286,G__280287,G__280288,G__280289,G__280290,G__280291,G__280292,G__280293,G__280294,G__280295,G__280296,G__280297,G__280298,G__280299,G__280300,G__280301,G__280302,G__280303,G__280304,G__280305,G__280306,G__280307,G__280308,G__280309,G__280310,G__280311,G__280312,G__280313,G__280314,G__280315,G__280316,G__280317,G__280318,G__280319,G__280320,G__280321,G__280322,G__280323,G__280324,G__280325,G__280326,G__280327,G__280328,G__280329,G__280330,G__280331) : tailrecursion.hoplon.pre.call(null,G__280285,G__280286,G__280287,G__280288,G__280289,G__280290,G__280291,G__280292,G__280293,G__280294,G__280295,G__280296,G__280297,G__280298,G__280299,G__280300,G__280301,G__280302,G__280303,G__280304,G__280305,G__280306,G__280307,G__280308,G__280309,G__280310,G__280311,G__280312,G__280313,G__280314,G__280315,G__280316,G__280317,G__280318,G__280319,G__280320,G__280321,G__280322,G__280323,G__280324,G__280325,G__280326,G__280327,G__280328,G__280329,G__280330,G__280331));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__280283,G__280284) : tailrecursion.hoplon.div.call(null,G__280283,G__280284));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__280282) : tailrecursion.hoplon.div.call(null,G__280282));
})(),(function (){var G__280382 = cljs.core.PersistentArrayMap.EMPTY;
var G__280383 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As before, we can use the substitution model to visualize the process of computing 6!, as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/figure/1-4",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.4"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280382,G__280383) : tailrecursion.hoplon.markdown.para_node.call(null,G__280382,G__280383));
})(),(function (){var G__280384 = cljs.core.PersistentArrayMap.EMPTY;
var G__280385 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compare the two processes. From one point of view, they seem hardly different at all. Both compute the sam emathematical function on the same domain, and each reauires a number of steps proportional to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0))," to compute ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"!. Indeed, both processes even carry out the same sequence of multiplications, obtaining the same sequence of partial products. On the other hand, when we consider the ",(function (){var G__280386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__280387 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["shapes"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__280386,G__280387) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__280386,G__280387));
})()," of the two processes, we find that they evolve quite differently."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280384,G__280385) : tailrecursion.hoplon.markdown.para_node.call(null,G__280384,G__280385));
})(),(function (){var G__280388 = cljs.core.PersistentArrayMap.EMPTY;
var G__280389 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the first process. The substitution model reveals a shape of expansion followed by contraction, indicated by the arrow in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/figure/1-3",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.3"], null)], 0)),". The expansion occurs as the process builds up a chain of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["deferred operations"], null)], 0))," (in this case, a chain of multiplications). The contraction occurs as the operations are actually performed. This type of process, characterized by a chain of deferred operations, is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["recursive process"], null)], 0)),". Carrying out this process requires that the interpreter keep track of the operations to be performed later on. In the computation of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"!, the length of the chain of deffered multiplications, and hence the amount of information needed to keep track of it, grows linearly with ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0))," (is proportional to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"), just like the number of steps. Such a process is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["linear recursive process"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280388,G__280389) : tailrecursion.hoplon.markdown.para_node.call(null,G__280388,G__280389));
})(),(function (){var G__280390 = cljs.core.PersistentArrayMap.EMPTY;
var G__280391 = new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["By contrast, the second process does not grow and shrink. At each step, all we need to keep track of, for any ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),", are the current values of the variables ",(function (){var G__280392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"product"], null);
var G__280393 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280392,G__280393) : tailrecursion.hoplon.markdown.code_node.call(null,G__280392,G__280393));
})(),", ",(function (){var G__280394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"counter"], null);
var G__280395 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280394,G__280395) : tailrecursion.hoplon.markdown.code_node.call(null,G__280394,G__280395));
})(),", and ",(function (){var G__280396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"max-count"], null);
var G__280397 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280396,G__280397) : tailrecursion.hoplon.markdown.code_node.call(null,G__280396,G__280397));
})(),". We call this an ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["iterative process"], null)], 0)),". In general, an iterative process is one whose state can be summarized by a fixed number of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["state variables"], null)], 0)),", together with a fixed rule that describes how the state variables should be updated as the process moves from state to state and an (optional) end test that specifies conditions under which the process should terminate. In computing ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"!, the number of steps required grows linearly with ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". Such a process is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["linear iterative process"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280390,G__280391) : tailrecursion.hoplon.markdown.para_node.call(null,G__280390,G__280391));
})(),(function (){var G__280398 = cljs.core.PersistentArrayMap.EMPTY;
var G__280399 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The contrast between the two processes can be seen in another way. In the iterative case, the program variables provide a complete description of the state of the process at any point. If we stopped the computation between steps, all we would need to do to resume the computation is to supply the interpreter with the values of the three program variables. Not so with the recursive process. In this case there is some additional ",(function (){var G__280400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__280401 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["hidden"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__280400,G__280401) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__280400,G__280401));
})()," information, maintained by the interpreter and not contained in the program variables, which indicates ",(function (){var G__280402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__280403 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["where the process is"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__280402,G__280403) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__280402,G__280403));
})()," in negotiating the chain of deferred operations. The longer the chain, the more information must be maintained.",(function (){var G__280404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__280405 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["When we discuss the implementation of procedures on register machines in chapter 5, we will see that any iterative process can be realized ",(function (){var G__280406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__280407 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["in hardware"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__280406,G__280407) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__280406,G__280407));
})()," as a machine that has a fixed set of registers and no auxiliary memory. In contrast, realizing a recursive process requires a machine that uses an auxiliary data structure known as a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["stack"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__280404,G__280405) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__280404,G__280405));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280398,G__280399) : tailrecursion.hoplon.markdown.para_node.call(null,G__280398,G__280399));
})(),(function (){var G__280408 = cljs.core.PersistentArrayMap.EMPTY;
var G__280409 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In contrasting iteration and recursion, we must be careful not to confuse the notion of a recursive ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["process"], null)], 0))," and the notion of a recursive ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["procedure"], null)], 0)),". When we describe a procedure as recursive, we are referring to the syntactic fact that the procedure definition refers (either directly or indirectly) to the procedure itself. But when we describe a process as following a pattern that is, say, linearly recursive, we are speaking about how the process evolves, not about the syntax of how a procedure is written. It may seem disturbing that we refer to a recursive procedure such as ",(function (){var G__280410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fact-iter"], null);
var G__280411 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280410,G__280411) : tailrecursion.hoplon.markdown.code_node.call(null,G__280410,G__280411));
})()," as generating an iterative process. However, the process really is iterative: Its state is captured completely by its three state variables, and an interpreter need keep track of only three variables in order to execute the process."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280408,G__280409) : tailrecursion.hoplon.markdown.para_node.call(null,G__280408,G__280409));
})(),(function (){var G__280412 = cljs.core.PersistentArrayMap.EMPTY;
var G__280413 = new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One reason that the distinction between process and procedure may be confusing is that most implementations of common languages (including Ada, Pascal, and C) are designed in such a way that the interpretation of any recursive procedure consumes an amount of memory that grows with the number of procedure calls, even when the process described is, in principle, iterative. As a consequence, these languages can describe iterative processes only by resorting to special-purpose ",(function (){var G__280414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__280415 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["looping constructs"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__280414,G__280415) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__280414,G__280415));
})()," such as ",(function (){var G__280416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"do"], null);
var G__280417 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280416,G__280417) : tailrecursion.hoplon.markdown.code_node.call(null,G__280416,G__280417));
})(),", ",(function (){var G__280418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"repeat"], null);
var G__280419 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280418,G__280419) : tailrecursion.hoplon.markdown.code_node.call(null,G__280418,G__280419));
})(),", ",(function (){var G__280420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"until"], null);
var G__280421 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280420,G__280421) : tailrecursion.hoplon.markdown.code_node.call(null,G__280420,G__280421));
})(),", ",(function (){var G__280422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"for"], null);
var G__280423 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280422,G__280423) : tailrecursion.hoplon.markdown.code_node.call(null,G__280422,G__280423));
})(),", and ",(function (){var G__280424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"while"], null);
var G__280425 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280424,G__280425) : tailrecursion.hoplon.markdown.code_node.call(null,G__280424,G__280425));
})(),". The implemenation of Scheme we shall consider in chapter 5 does not share this defect. It will execute an iterative process in constant space, even if the iterative process is described by a recursive procedure. An implementation with this property is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tail-recursive"], null)], 0)),". With a tail-recursive implementation, iteration can be expressed using the ordinary procedure call mechanism, so that special iteration constructs are useful only as syntactic sugar.",(function (){var G__280426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__280427 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Tail recursion has long been known as a compiler optimization trick. A coherent semantic basis for tail recursion was provided by Carl Hewitt (1977), who explained it in terms of the ",(function (){var G__280428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__280429 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["message-passing"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__280428,G__280429) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__280428,G__280429));
})()," model of computation that we shall discuss in chapter 3. Inspired by this, Gerald Jay Sussman and Guy Lewis Steele Jr. (see Steele 1975) constructed a tail-recursive interpreter for Scheme. Steele later showed how tail recursion is a consequence of the natural way to compile procedure calls (Steele 1977). The IEEE standard for Scheme requires that Scheme implementations be tail-recursive."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__280426,G__280427) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__280426,G__280427));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280412,G__280413) : tailrecursion.hoplon.markdown.para_node.call(null,G__280412,G__280413));
})(),(function (){var G__280430 = cljs.core.PersistentArrayMap.EMPTY;
var G__280431 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__280432 = cljs.core.PersistentArrayMap.EMPTY;
var G__280433 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It is worthwhile to note at this point that Clojure is not tail-recursive."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280432,G__280433) : tailrecursion.hoplon.markdown.para_node.call(null,G__280432,G__280433));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__280430,G__280431) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__280430,G__280431));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_280170;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_280169;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_280168;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_280167;
}})()], 0));
var G__279987 = "";
var G__279988 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"9-10"], null),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(9)], null),(function (){var _STAR_references_STAR_280434 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_280435 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_280436 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_280437 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__280438 = cljs.core.PersistentArrayMap.EMPTY;
var G__280439 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Each of the following two procedures defines a method for adding two positive integers in terms of the procedures ",(function (){var G__280440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"inc"], null);
var G__280441 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280440,G__280441) : tailrecursion.hoplon.markdown.code_node.call(null,G__280440,G__280441));
})(),", which increments its arguments by 1, and ",(function (){var G__280442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"dec"], null);
var G__280443 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280442,G__280443) : tailrecursion.hoplon.markdown.code_node.call(null,G__280442,G__280443));
})(),", which decrements its arguments by 1."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280438,G__280439) : tailrecursion.hoplon.markdown.para_node.call(null,G__280438,G__280439));
})(),(function (){var G__280501 = (function (){var G__280502 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__280503 = (function (){var G__280504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__280505 = "(";
var G__280506 = (function (){var G__280531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__280532 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280531,G__280532) : tailrecursion.hoplon.span.call(null,G__280531,G__280532));
})();
var G__280507 = (function (){var G__280533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280534 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280533,G__280534) : tailrecursion.hoplon.span.call(null,G__280533,G__280534));
})();
var G__280508 = "[";
var G__280509 = (function (){var G__280535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280536 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280535,G__280536) : tailrecursion.hoplon.span.call(null,G__280535,G__280536));
})();
var G__280510 = " ";
var G__280511 = (function (){var G__280537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280538 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280537,G__280538) : tailrecursion.hoplon.span.call(null,G__280537,G__280538));
})();
var G__280512 = "]\n  (";
var G__280513 = (function (){var G__280539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__280540 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280539,G__280540) : tailrecursion.hoplon.span.call(null,G__280539,G__280540));
})();
var G__280514 = "(";
var G__280515 = (function (){var G__280541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280542 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280541,G__280542) : tailrecursion.hoplon.span.call(null,G__280541,G__280542));
})();
var G__280516 = (function (){var G__280543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280544 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280543,G__280544) : tailrecursion.hoplon.span.call(null,G__280543,G__280544));
})();
var G__280517 = " ";
var G__280518 = (function (){var G__280545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280546 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280545,G__280546) : tailrecursion.hoplon.span.call(null,G__280545,G__280546));
})();
var G__280519 = ")\n      ";
var G__280520 = (function (){var G__280547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280548 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280547,G__280548) : tailrecursion.hoplon.span.call(null,G__280547,G__280548));
})();
var G__280521 = "\n      (";
var G__280522 = (function (){var G__280549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280550 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280549,G__280550) : tailrecursion.hoplon.span.call(null,G__280549,G__280550));
})();
var G__280523 = "(";
var G__280524 = (function (){var G__280551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280552 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280551,G__280552) : tailrecursion.hoplon.span.call(null,G__280551,G__280552));
})();
var G__280525 = "(";
var G__280526 = (function (){var G__280553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280554 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280553,G__280554) : tailrecursion.hoplon.span.call(null,G__280553,G__280554));
})();
var G__280527 = (function (){var G__280555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280556 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280555,G__280556) : tailrecursion.hoplon.span.call(null,G__280555,G__280556));
})();
var G__280528 = ") ";
var G__280529 = (function (){var G__280557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280558 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280557,G__280558) : tailrecursion.hoplon.span.call(null,G__280557,G__280558));
})();
var G__280530 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27(G__280504,G__280505,G__280506,G__280507,G__280508,G__280509,G__280510,G__280511,G__280512,G__280513,G__280514,G__280515,G__280516,G__280517,G__280518,G__280519,G__280520,G__280521,G__280522,G__280523,G__280524,G__280525,G__280526,G__280527,G__280528,G__280529,G__280530) : tailrecursion.hoplon.pre.call(null,G__280504,G__280505,G__280506,G__280507,G__280508,G__280509,G__280510,G__280511,G__280512,G__280513,G__280514,G__280515,G__280516,G__280517,G__280518,G__280519,G__280520,G__280521,G__280522,G__280523,G__280524,G__280525,G__280526,G__280527,G__280528,G__280529,G__280530));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__280502,G__280503) : tailrecursion.hoplon.div.call(null,G__280502,G__280503));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__280501) : tailrecursion.hoplon.div.call(null,G__280501));
})(),(function (){var G__280615 = (function (){var G__280616 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__280617 = (function (){var G__280618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__280619 = "(";
var G__280620 = (function (){var G__280644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__280645 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280644,G__280645) : tailrecursion.hoplon.span.call(null,G__280644,G__280645));
})();
var G__280621 = (function (){var G__280646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280647 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280646,G__280647) : tailrecursion.hoplon.span.call(null,G__280646,G__280647));
})();
var G__280622 = "[";
var G__280623 = (function (){var G__280648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280649 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280648,G__280649) : tailrecursion.hoplon.span.call(null,G__280648,G__280649));
})();
var G__280624 = " ";
var G__280625 = (function (){var G__280650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280651 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280650,G__280651) : tailrecursion.hoplon.span.call(null,G__280650,G__280651));
})();
var G__280626 = "]\n  (";
var G__280627 = (function (){var G__280652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__280653 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280652,G__280653) : tailrecursion.hoplon.span.call(null,G__280652,G__280653));
})();
var G__280628 = "(";
var G__280629 = (function (){var G__280654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280655 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280654,G__280655) : tailrecursion.hoplon.span.call(null,G__280654,G__280655));
})();
var G__280630 = (function (){var G__280656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280657 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280656,G__280657) : tailrecursion.hoplon.span.call(null,G__280656,G__280657));
})();
var G__280631 = " ";
var G__280632 = (function (){var G__280658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__280659 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280658,G__280659) : tailrecursion.hoplon.span.call(null,G__280658,G__280659));
})();
var G__280633 = ")\n      ";
var G__280634 = (function (){var G__280660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280661 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280660,G__280661) : tailrecursion.hoplon.span.call(null,G__280660,G__280661));
})();
var G__280635 = "\n      (";
var G__280636 = (function (){var G__280662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280663 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280662,G__280663) : tailrecursion.hoplon.span.call(null,G__280662,G__280663));
})();
var G__280637 = "(";
var G__280638 = (function (){var G__280664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280665 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280664,G__280665) : tailrecursion.hoplon.span.call(null,G__280664,G__280665));
})();
var G__280639 = (function (){var G__280666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280667 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280666,G__280667) : tailrecursion.hoplon.span.call(null,G__280666,G__280667));
})();
var G__280640 = ") (";
var G__280641 = (function (){var G__280668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__280669 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280668,G__280669) : tailrecursion.hoplon.span.call(null,G__280668,G__280669));
})();
var G__280642 = (function (){var G__280670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__280671 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__280670,G__280671) : tailrecursion.hoplon.span.call(null,G__280670,G__280671));
})();
var G__280643 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26(G__280618,G__280619,G__280620,G__280621,G__280622,G__280623,G__280624,G__280625,G__280626,G__280627,G__280628,G__280629,G__280630,G__280631,G__280632,G__280633,G__280634,G__280635,G__280636,G__280637,G__280638,G__280639,G__280640,G__280641,G__280642,G__280643) : tailrecursion.hoplon.pre.call(null,G__280618,G__280619,G__280620,G__280621,G__280622,G__280623,G__280624,G__280625,G__280626,G__280627,G__280628,G__280629,G__280630,G__280631,G__280632,G__280633,G__280634,G__280635,G__280636,G__280637,G__280638,G__280639,G__280640,G__280641,G__280642,G__280643));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__280616,G__280617) : tailrecursion.hoplon.div.call(null,G__280616,G__280617));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__280615) : tailrecursion.hoplon.div.call(null,G__280615));
})(),(function (){var G__280672 = cljs.core.PersistentArrayMap.EMPTY;
var G__280673 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using the substitution model, illustrate the process generated by each procedure in evaluating ",(function (){var G__280674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(+ 4 5)"], null);
var G__280675 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__280674,G__280675) : tailrecursion.hoplon.markdown.code_node.call(null,G__280674,G__280675));
})(),". Are these processes iterative or recursive?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280672,G__280673) : tailrecursion.hoplon.markdown.para_node.call(null,G__280672,G__280673));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_280437;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_280436;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_280435;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_280434;
}})(),book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_280676 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_280677 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_280678 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_280679 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__280680 = cljs.core.PersistentArrayMap.EMPTY;
var G__280681 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The first is recursive, and the second is iterative. Let",(function (){var G__280682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__280683 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__280682,G__280683) : tailrecursion.hoplon.markdown.simple_node.call(null,G__280682,G__280683));
})(),"s see why",(function (){var G__280684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__280685 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__280684,G__280685) : tailrecursion.hoplon.markdown.simple_node.call(null,G__280684,G__280685));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280680,G__280681) : tailrecursion.hoplon.markdown.para_node.call(null,G__280680,G__280681));
})(),(function (){var G__280686 = cljs.core.PersistentArrayMap.EMPTY;
var G__280687 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With the first definition,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__280686,G__280687) : tailrecursion.hoplon.markdown.para_node.call(null,G__280686,G__280687));
})(),(function (){var G__280943 = (function (){var G__280944 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__280945 = (function (){var G__280946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__280947 = "(";
var G__280948 = (function (){var G__281067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281068 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281067,G__281068) : tailrecursion.hoplon.span.call(null,G__281067,G__281068));
})();
var G__280949 = (function (){var G__281069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281070 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281069,G__281070) : tailrecursion.hoplon.span.call(null,G__281069,G__281070));
})();
var G__280950 = " ";
var G__280951 = (function (){var G__281071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281072 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281071,G__281072) : tailrecursion.hoplon.span.call(null,G__281071,G__281072));
})();
var G__280952 = ")\n(";
var G__280953 = (function (){var G__281073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281074 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281073,G__281074) : tailrecursion.hoplon.span.call(null,G__281073,G__281074));
})();
var G__280954 = "(";
var G__280955 = (function (){var G__281075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281076 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281075,G__281076) : tailrecursion.hoplon.span.call(null,G__281075,G__281076));
})();
var G__280956 = "(";
var G__280957 = (function (){var G__281077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281078 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281077,G__281078) : tailrecursion.hoplon.span.call(null,G__281077,G__281078));
})();
var G__280958 = (function (){var G__281079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281080 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281079,G__281080) : tailrecursion.hoplon.span.call(null,G__281079,G__281080));
})();
var G__280959 = ") ";
var G__280960 = (function (){var G__281081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281082 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281081,G__281082) : tailrecursion.hoplon.span.call(null,G__281081,G__281082));
})();
var G__280961 = "))\n(";
var G__280962 = (function (){var G__281083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281084 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281083,G__281084) : tailrecursion.hoplon.span.call(null,G__281083,G__281084));
})();
var G__280963 = "(";
var G__280964 = (function (){var G__281085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281086 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281085,G__281086) : tailrecursion.hoplon.span.call(null,G__281085,G__281086));
})();
var G__280965 = (function (){var G__281087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281088 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281087,G__281088) : tailrecursion.hoplon.span.call(null,G__281087,G__281088));
})();
var G__280966 = " ";
var G__280967 = (function (){var G__281089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281090 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281089,G__281090) : tailrecursion.hoplon.span.call(null,G__281089,G__281090));
})();
var G__280968 = "))\n(";
var G__280969 = (function (){var G__281091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281092 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281091,G__281092) : tailrecursion.hoplon.span.call(null,G__281091,G__281092));
})();
var G__280970 = "(";
var G__280971 = (function (){var G__281093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281094 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281093,G__281094) : tailrecursion.hoplon.span.call(null,G__281093,G__281094));
})();
var G__280972 = "(";
var G__280973 = (function (){var G__281095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281096 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281095,G__281096) : tailrecursion.hoplon.span.call(null,G__281095,G__281096));
})();
var G__280974 = "(";
var G__280975 = (function (){var G__281097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281098 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281097,G__281098) : tailrecursion.hoplon.span.call(null,G__281097,G__281098));
})();
var G__280976 = (function (){var G__281099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281100 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281099,G__281100) : tailrecursion.hoplon.span.call(null,G__281099,G__281100));
})();
var G__280977 = ") ";
var G__280978 = (function (){var G__281101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281102 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281101,G__281102) : tailrecursion.hoplon.span.call(null,G__281101,G__281102));
})();
var G__280979 = ")))\n(";
var G__280980 = (function (){var G__281103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281104 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281103,G__281104) : tailrecursion.hoplon.span.call(null,G__281103,G__281104));
})();
var G__280981 = "(";
var G__280982 = (function (){var G__281105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281106 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281105,G__281106) : tailrecursion.hoplon.span.call(null,G__281105,G__281106));
})();
var G__280983 = "(";
var G__280984 = (function (){var G__281107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281108 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281107,G__281108) : tailrecursion.hoplon.span.call(null,G__281107,G__281108));
})();
var G__280985 = (function (){var G__281109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281110 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281109,G__281110) : tailrecursion.hoplon.span.call(null,G__281109,G__281110));
})();
var G__280986 = " ";
var G__280987 = (function (){var G__281111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281112 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281111,G__281112) : tailrecursion.hoplon.span.call(null,G__281111,G__281112));
})();
var G__280988 = ")))\n(";
var G__280989 = (function (){var G__281113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281114 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281113,G__281114) : tailrecursion.hoplon.span.call(null,G__281113,G__281114));
})();
var G__280990 = "(";
var G__280991 = (function (){var G__281115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281116 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281115,G__281116) : tailrecursion.hoplon.span.call(null,G__281115,G__281116));
})();
var G__280992 = "(";
var G__280993 = (function (){var G__281117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281118 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281117,G__281118) : tailrecursion.hoplon.span.call(null,G__281117,G__281118));
})();
var G__280994 = "(";
var G__280995 = (function (){var G__281119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281120 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281119,G__281120) : tailrecursion.hoplon.span.call(null,G__281119,G__281120));
})();
var G__280996 = "(";
var G__280997 = (function (){var G__281121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281122 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281121,G__281122) : tailrecursion.hoplon.span.call(null,G__281121,G__281122));
})();
var G__280998 = (function (){var G__281123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281124 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281123,G__281124) : tailrecursion.hoplon.span.call(null,G__281123,G__281124));
})();
var G__280999 = ") ";
var G__281000 = (function (){var G__281125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281126 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281125,G__281126) : tailrecursion.hoplon.span.call(null,G__281125,G__281126));
})();
var G__281001 = "))))\n(";
var G__281002 = (function (){var G__281127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281128 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281127,G__281128) : tailrecursion.hoplon.span.call(null,G__281127,G__281128));
})();
var G__281003 = "(";
var G__281004 = (function (){var G__281129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281130 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281129,G__281130) : tailrecursion.hoplon.span.call(null,G__281129,G__281130));
})();
var G__281005 = "(";
var G__281006 = (function (){var G__281131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281132 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281131,G__281132) : tailrecursion.hoplon.span.call(null,G__281131,G__281132));
})();
var G__281007 = "(";
var G__281008 = (function (){var G__281133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281134 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281133,G__281134) : tailrecursion.hoplon.span.call(null,G__281133,G__281134));
})();
var G__281009 = (function (){var G__281135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281136 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281135,G__281136) : tailrecursion.hoplon.span.call(null,G__281135,G__281136));
})();
var G__281010 = " ";
var G__281011 = (function (){var G__281137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281138 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281137,G__281138) : tailrecursion.hoplon.span.call(null,G__281137,G__281138));
})();
var G__281012 = "))))\n(";
var G__281013 = (function (){var G__281139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281140 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281139,G__281140) : tailrecursion.hoplon.span.call(null,G__281139,G__281140));
})();
var G__281014 = "(";
var G__281015 = (function (){var G__281141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281142 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281141,G__281142) : tailrecursion.hoplon.span.call(null,G__281141,G__281142));
})();
var G__281016 = "(";
var G__281017 = (function (){var G__281143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281144 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281143,G__281144) : tailrecursion.hoplon.span.call(null,G__281143,G__281144));
})();
var G__281018 = "(";
var G__281019 = (function (){var G__281145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281146 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281145,G__281146) : tailrecursion.hoplon.span.call(null,G__281145,G__281146));
})();
var G__281020 = "(";
var G__281021 = (function (){var G__281147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281148 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281147,G__281148) : tailrecursion.hoplon.span.call(null,G__281147,G__281148));
})();
var G__281022 = "(";
var G__281023 = (function (){var G__281149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281150 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281149,G__281150) : tailrecursion.hoplon.span.call(null,G__281149,G__281150));
})();
var G__281024 = (function (){var G__281151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281152 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281151,G__281152) : tailrecursion.hoplon.span.call(null,G__281151,G__281152));
})();
var G__281025 = ") ";
var G__281026 = (function (){var G__281153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281154 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281153,G__281154) : tailrecursion.hoplon.span.call(null,G__281153,G__281154));
})();
var G__281027 = ")))))\n(";
var G__281028 = (function (){var G__281155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281156 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281155,G__281156) : tailrecursion.hoplon.span.call(null,G__281155,G__281156));
})();
var G__281029 = "(";
var G__281030 = (function (){var G__281157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281158 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281157,G__281158) : tailrecursion.hoplon.span.call(null,G__281157,G__281158));
})();
var G__281031 = "(";
var G__281032 = (function (){var G__281159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281160 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281159,G__281160) : tailrecursion.hoplon.span.call(null,G__281159,G__281160));
})();
var G__281033 = "(";
var G__281034 = (function (){var G__281161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281162 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281161,G__281162) : tailrecursion.hoplon.span.call(null,G__281161,G__281162));
})();
var G__281035 = "(";
var G__281036 = (function (){var G__281163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281164 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281163,G__281164) : tailrecursion.hoplon.span.call(null,G__281163,G__281164));
})();
var G__281037 = (function (){var G__281165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281166 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281165,G__281166) : tailrecursion.hoplon.span.call(null,G__281165,G__281166));
})();
var G__281038 = " ";
var G__281039 = (function (){var G__281167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281168 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281167,G__281168) : tailrecursion.hoplon.span.call(null,G__281167,G__281168));
})();
var G__281040 = ")))))\n(";
var G__281041 = (function (){var G__281169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281170 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281169,G__281170) : tailrecursion.hoplon.span.call(null,G__281169,G__281170));
})();
var G__281042 = "(";
var G__281043 = (function (){var G__281171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281172 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281171,G__281172) : tailrecursion.hoplon.span.call(null,G__281171,G__281172));
})();
var G__281044 = "(";
var G__281045 = (function (){var G__281173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281174 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281173,G__281174) : tailrecursion.hoplon.span.call(null,G__281173,G__281174));
})();
var G__281046 = "(";
var G__281047 = (function (){var G__281175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281176 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281175,G__281176) : tailrecursion.hoplon.span.call(null,G__281175,G__281176));
})();
var G__281048 = (function (){var G__281177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281178 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281177,G__281178) : tailrecursion.hoplon.span.call(null,G__281177,G__281178));
})();
var G__281049 = "))))\n(";
var G__281050 = (function (){var G__281179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281180 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281179,G__281180) : tailrecursion.hoplon.span.call(null,G__281179,G__281180));
})();
var G__281051 = "(";
var G__281052 = (function (){var G__281181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281182 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281181,G__281182) : tailrecursion.hoplon.span.call(null,G__281181,G__281182));
})();
var G__281053 = "(";
var G__281054 = (function (){var G__281183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281184 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281183,G__281184) : tailrecursion.hoplon.span.call(null,G__281183,G__281184));
})();
var G__281055 = (function (){var G__281185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281186 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281185,G__281186) : tailrecursion.hoplon.span.call(null,G__281185,G__281186));
})();
var G__281056 = ")))\n(";
var G__281057 = (function (){var G__281187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281188 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281187,G__281188) : tailrecursion.hoplon.span.call(null,G__281187,G__281188));
})();
var G__281058 = "(";
var G__281059 = (function (){var G__281189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281190 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281189,G__281190) : tailrecursion.hoplon.span.call(null,G__281189,G__281190));
})();
var G__281060 = (function (){var G__281191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281192 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281191,G__281192) : tailrecursion.hoplon.span.call(null,G__281191,G__281192));
})();
var G__281061 = "))\n(";
var G__281062 = (function (){var G__281193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281194 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281193,G__281194) : tailrecursion.hoplon.span.call(null,G__281193,G__281194));
})();
var G__281063 = (function (){var G__281195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281196 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281195,G__281196) : tailrecursion.hoplon.span.call(null,G__281195,G__281196));
})();
var G__281064 = ")\n";
var G__281065 = (function (){var G__281197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281198 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281197,G__281198) : tailrecursion.hoplon.span.call(null,G__281197,G__281198));
})();
var G__281066 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$121 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$121(G__280946,G__280947,G__280948,G__280949,G__280950,G__280951,G__280952,G__280953,G__280954,G__280955,G__280956,G__280957,G__280958,G__280959,G__280960,G__280961,G__280962,G__280963,G__280964,G__280965,G__280966,G__280967,G__280968,G__280969,G__280970,G__280971,G__280972,G__280973,G__280974,G__280975,G__280976,G__280977,G__280978,G__280979,G__280980,G__280981,G__280982,G__280983,G__280984,G__280985,G__280986,G__280987,G__280988,G__280989,G__280990,G__280991,G__280992,G__280993,G__280994,G__280995,G__280996,G__280997,G__280998,G__280999,G__281000,G__281001,G__281002,G__281003,G__281004,G__281005,G__281006,G__281007,G__281008,G__281009,G__281010,G__281011,G__281012,G__281013,G__281014,G__281015,G__281016,G__281017,G__281018,G__281019,G__281020,G__281021,G__281022,G__281023,G__281024,G__281025,G__281026,G__281027,G__281028,G__281029,G__281030,G__281031,G__281032,G__281033,G__281034,G__281035,G__281036,G__281037,G__281038,G__281039,G__281040,G__281041,G__281042,G__281043,G__281044,G__281045,G__281046,G__281047,G__281048,G__281049,G__281050,G__281051,G__281052,G__281053,G__281054,G__281055,G__281056,G__281057,G__281058,G__281059,G__281060,G__281061,G__281062,G__281063,G__281064,G__281065,G__281066) : tailrecursion.hoplon.pre.call(null,G__280946,G__280947,G__280948,G__280949,G__280950,G__280951,G__280952,G__280953,G__280954,G__280955,G__280956,G__280957,G__280958,G__280959,G__280960,G__280961,G__280962,G__280963,G__280964,G__280965,G__280966,G__280967,G__280968,G__280969,G__280970,G__280971,G__280972,G__280973,G__280974,G__280975,G__280976,G__280977,G__280978,G__280979,G__280980,G__280981,G__280982,G__280983,G__280984,G__280985,G__280986,G__280987,G__280988,G__280989,G__280990,G__280991,G__280992,G__280993,G__280994,G__280995,G__280996,G__280997,G__280998,G__280999,G__281000,G__281001,G__281002,G__281003,G__281004,G__281005,G__281006,G__281007,G__281008,G__281009,G__281010,G__281011,G__281012,G__281013,G__281014,G__281015,G__281016,G__281017,G__281018,G__281019,G__281020,G__281021,G__281022,G__281023,G__281024,G__281025,G__281026,G__281027,G__281028,G__281029,G__281030,G__281031,G__281032,G__281033,G__281034,G__281035,G__281036,G__281037,G__281038,G__281039,G__281040,G__281041,G__281042,G__281043,G__281044,G__281045,G__281046,G__281047,G__281048,G__281049,G__281050,G__281051,G__281052,G__281053,G__281054,G__281055,G__281056,G__281057,G__281058,G__281059,G__281060,G__281061,G__281062,G__281063,G__281064,G__281065,G__281066));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__280944,G__280945) : tailrecursion.hoplon.div.call(null,G__280944,G__280945));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__280943) : tailrecursion.hoplon.div.call(null,G__280943));
})(),(function (){var G__281199 = cljs.core.PersistentArrayMap.EMPTY;
var G__281200 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Clearly recursive in the way it grows."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__281199,G__281200) : tailrecursion.hoplon.markdown.para_node.call(null,G__281199,G__281200));
})(),(function (){var G__281201 = cljs.core.PersistentArrayMap.EMPTY;
var G__281202 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With the second, however,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__281201,G__281202) : tailrecursion.hoplon.markdown.para_node.call(null,G__281201,G__281202));
})(),(function (){var G__281338 = (function (){var G__281339 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__281340 = (function (){var G__281341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__281342 = "(";
var G__281343 = (function (){var G__281402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281403 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281402,G__281403) : tailrecursion.hoplon.span.call(null,G__281402,G__281403));
})();
var G__281344 = (function (){var G__281404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281405 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281404,G__281405) : tailrecursion.hoplon.span.call(null,G__281404,G__281405));
})();
var G__281345 = " ";
var G__281346 = (function (){var G__281406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281407 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281406,G__281407) : tailrecursion.hoplon.span.call(null,G__281406,G__281407));
})();
var G__281347 = ")\n(";
var G__281348 = (function (){var G__281408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281409 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281408,G__281409) : tailrecursion.hoplon.span.call(null,G__281408,G__281409));
})();
var G__281349 = "(";
var G__281350 = (function (){var G__281410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281411 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281410,G__281411) : tailrecursion.hoplon.span.call(null,G__281410,G__281411));
})();
var G__281351 = (function (){var G__281412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281413 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281412,G__281413) : tailrecursion.hoplon.span.call(null,G__281412,G__281413));
})();
var G__281352 = ") (";
var G__281353 = (function (){var G__281414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281415 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281414,G__281415) : tailrecursion.hoplon.span.call(null,G__281414,G__281415));
})();
var G__281354 = (function (){var G__281416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281417 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281416,G__281417) : tailrecursion.hoplon.span.call(null,G__281416,G__281417));
})();
var G__281355 = "))\n(";
var G__281356 = (function (){var G__281418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281419 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281418,G__281419) : tailrecursion.hoplon.span.call(null,G__281418,G__281419));
})();
var G__281357 = (function (){var G__281420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281421 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281420,G__281421) : tailrecursion.hoplon.span.call(null,G__281420,G__281421));
})();
var G__281358 = " ";
var G__281359 = (function (){var G__281422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281423 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281422,G__281423) : tailrecursion.hoplon.span.call(null,G__281422,G__281423));
})();
var G__281360 = ")\n(";
var G__281361 = (function (){var G__281424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281425 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281424,G__281425) : tailrecursion.hoplon.span.call(null,G__281424,G__281425));
})();
var G__281362 = "(";
var G__281363 = (function (){var G__281426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281427 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281426,G__281427) : tailrecursion.hoplon.span.call(null,G__281426,G__281427));
})();
var G__281364 = (function (){var G__281428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281429 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281428,G__281429) : tailrecursion.hoplon.span.call(null,G__281428,G__281429));
})();
var G__281365 = ") (";
var G__281366 = (function (){var G__281430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281431 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281430,G__281431) : tailrecursion.hoplon.span.call(null,G__281430,G__281431));
})();
var G__281367 = (function (){var G__281432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281433 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281432,G__281433) : tailrecursion.hoplon.span.call(null,G__281432,G__281433));
})();
var G__281368 = "))\n(";
var G__281369 = (function (){var G__281434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281435 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281434,G__281435) : tailrecursion.hoplon.span.call(null,G__281434,G__281435));
})();
var G__281370 = (function (){var G__281436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281437 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281436,G__281437) : tailrecursion.hoplon.span.call(null,G__281436,G__281437));
})();
var G__281371 = " ";
var G__281372 = (function (){var G__281438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281439 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281438,G__281439) : tailrecursion.hoplon.span.call(null,G__281438,G__281439));
})();
var G__281373 = ")\n(";
var G__281374 = (function (){var G__281440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281441 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281440,G__281441) : tailrecursion.hoplon.span.call(null,G__281440,G__281441));
})();
var G__281375 = "(";
var G__281376 = (function (){var G__281442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281443 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281442,G__281443) : tailrecursion.hoplon.span.call(null,G__281442,G__281443));
})();
var G__281377 = (function (){var G__281444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281445 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281444,G__281445) : tailrecursion.hoplon.span.call(null,G__281444,G__281445));
})();
var G__281378 = ") (";
var G__281379 = (function (){var G__281446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281447 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281446,G__281447) : tailrecursion.hoplon.span.call(null,G__281446,G__281447));
})();
var G__281380 = (function (){var G__281448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281449 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281448,G__281449) : tailrecursion.hoplon.span.call(null,G__281448,G__281449));
})();
var G__281381 = "))\n(";
var G__281382 = (function (){var G__281450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281451 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281450,G__281451) : tailrecursion.hoplon.span.call(null,G__281450,G__281451));
})();
var G__281383 = (function (){var G__281452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281453 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281452,G__281453) : tailrecursion.hoplon.span.call(null,G__281452,G__281453));
})();
var G__281384 = " ";
var G__281385 = (function (){var G__281454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281455 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281454,G__281455) : tailrecursion.hoplon.span.call(null,G__281454,G__281455));
})();
var G__281386 = ")\n(";
var G__281387 = (function (){var G__281456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281457 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281456,G__281457) : tailrecursion.hoplon.span.call(null,G__281456,G__281457));
})();
var G__281388 = "(";
var G__281389 = (function (){var G__281458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281459 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281458,G__281459) : tailrecursion.hoplon.span.call(null,G__281458,G__281459));
})();
var G__281390 = (function (){var G__281460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281461 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281460,G__281461) : tailrecursion.hoplon.span.call(null,G__281460,G__281461));
})();
var G__281391 = ") (";
var G__281392 = (function (){var G__281462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281463 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281462,G__281463) : tailrecursion.hoplon.span.call(null,G__281462,G__281463));
})();
var G__281393 = (function (){var G__281464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281465 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281464,G__281465) : tailrecursion.hoplon.span.call(null,G__281464,G__281465));
})();
var G__281394 = "))\n(";
var G__281395 = (function (){var G__281466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281467 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281466,G__281467) : tailrecursion.hoplon.span.call(null,G__281466,G__281467));
})();
var G__281396 = (function (){var G__281468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281469 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281468,G__281469) : tailrecursion.hoplon.span.call(null,G__281468,G__281469));
})();
var G__281397 = " ";
var G__281398 = (function (){var G__281470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281471 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281470,G__281471) : tailrecursion.hoplon.span.call(null,G__281470,G__281471));
})();
var G__281399 = ")\n";
var G__281400 = (function (){var G__281472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281473 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281472,G__281473) : tailrecursion.hoplon.span.call(null,G__281472,G__281473));
})();
var G__281401 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61(G__281341,G__281342,G__281343,G__281344,G__281345,G__281346,G__281347,G__281348,G__281349,G__281350,G__281351,G__281352,G__281353,G__281354,G__281355,G__281356,G__281357,G__281358,G__281359,G__281360,G__281361,G__281362,G__281363,G__281364,G__281365,G__281366,G__281367,G__281368,G__281369,G__281370,G__281371,G__281372,G__281373,G__281374,G__281375,G__281376,G__281377,G__281378,G__281379,G__281380,G__281381,G__281382,G__281383,G__281384,G__281385,G__281386,G__281387,G__281388,G__281389,G__281390,G__281391,G__281392,G__281393,G__281394,G__281395,G__281396,G__281397,G__281398,G__281399,G__281400,G__281401) : tailrecursion.hoplon.pre.call(null,G__281341,G__281342,G__281343,G__281344,G__281345,G__281346,G__281347,G__281348,G__281349,G__281350,G__281351,G__281352,G__281353,G__281354,G__281355,G__281356,G__281357,G__281358,G__281359,G__281360,G__281361,G__281362,G__281363,G__281364,G__281365,G__281366,G__281367,G__281368,G__281369,G__281370,G__281371,G__281372,G__281373,G__281374,G__281375,G__281376,G__281377,G__281378,G__281379,G__281380,G__281381,G__281382,G__281383,G__281384,G__281385,G__281386,G__281387,G__281388,G__281389,G__281390,G__281391,G__281392,G__281393,G__281394,G__281395,G__281396,G__281397,G__281398,G__281399,G__281400,G__281401));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__281339,G__281340) : tailrecursion.hoplon.div.call(null,G__281339,G__281340));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__281338) : tailrecursion.hoplon.div.call(null,G__281338));
})(),(function (){var G__281474 = cljs.core.PersistentArrayMap.EMPTY;
var G__281475 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["You see the space needed to compute the second was significantly less than that of the first."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__281474,G__281475) : tailrecursion.hoplon.markdown.para_node.call(null,G__281474,G__281475));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_280679;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_280678;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_280677;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_280676;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(10)], null),(function (){var _STAR_references_STAR_281476 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_281477 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_281478 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_281479 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__281480 = cljs.core.PersistentArrayMap.EMPTY;
var G__281481 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following procedure computes a mathematical function called Ackermann",(function (){var G__281482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__281483 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__281482,G__281483) : tailrecursion.hoplon.markdown.simple_node.call(null,G__281482,G__281483));
})(),"s function."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__281480,G__281481) : tailrecursion.hoplon.markdown.para_node.call(null,G__281480,G__281481));
})(),(function (){var G__281597 = (function (){var G__281598 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__281599 = (function (){var G__281600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__281601 = "(";
var G__281602 = (function (){var G__281653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__281654 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281653,G__281654) : tailrecursion.hoplon.span.call(null,G__281653,G__281654));
})();
var G__281603 = (function (){var G__281655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281656 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281655,G__281656) : tailrecursion.hoplon.span.call(null,G__281655,G__281656));
})();
var G__281604 = " [";
var G__281605 = (function (){var G__281657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281658 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281657,G__281658) : tailrecursion.hoplon.span.call(null,G__281657,G__281658));
})();
var G__281606 = " ";
var G__281607 = (function (){var G__281659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281660 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281659,G__281660) : tailrecursion.hoplon.span.call(null,G__281659,G__281660));
})();
var G__281608 = "]\n  (";
var G__281609 = (function (){var G__281661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281662 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281661,G__281662) : tailrecursion.hoplon.span.call(null,G__281661,G__281662));
})();
var G__281610 = "(";
var G__281611 = (function (){var G__281663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281664 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281663,G__281664) : tailrecursion.hoplon.span.call(null,G__281663,G__281664));
})();
var G__281612 = (function (){var G__281665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281666 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281665,G__281666) : tailrecursion.hoplon.span.call(null,G__281665,G__281666));
})();
var G__281613 = " ";
var G__281614 = (function (){var G__281667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281668 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281667,G__281668) : tailrecursion.hoplon.span.call(null,G__281667,G__281668));
})();
var G__281615 = ") ";
var G__281616 = (function (){var G__281669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281670 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281669,G__281670) : tailrecursion.hoplon.span.call(null,G__281669,G__281670));
})();
var G__281617 = "\n        (";
var G__281618 = (function (){var G__281671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281672 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281671,G__281672) : tailrecursion.hoplon.span.call(null,G__281671,G__281672));
})();
var G__281619 = (function (){var G__281673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281674 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281673,G__281674) : tailrecursion.hoplon.span.call(null,G__281673,G__281674));
})();
var G__281620 = " ";
var G__281621 = (function (){var G__281675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281676 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281675,G__281676) : tailrecursion.hoplon.span.call(null,G__281675,G__281676));
})();
var G__281622 = ") (";
var G__281623 = (function (){var G__281677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281678 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281677,G__281678) : tailrecursion.hoplon.span.call(null,G__281677,G__281678));
})();
var G__281624 = (function (){var G__281679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281680 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281679,G__281680) : tailrecursion.hoplon.span.call(null,G__281679,G__281680));
})();
var G__281625 = " ";
var G__281626 = (function (){var G__281681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281682 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281681,G__281682) : tailrecursion.hoplon.span.call(null,G__281681,G__281682));
})();
var G__281627 = ")\n        (";
var G__281628 = (function (){var G__281683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281684 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281683,G__281684) : tailrecursion.hoplon.span.call(null,G__281683,G__281684));
})();
var G__281629 = (function (){var G__281685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281686 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281685,G__281686) : tailrecursion.hoplon.span.call(null,G__281685,G__281686));
})();
var G__281630 = " ";
var G__281631 = (function (){var G__281687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281688 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281687,G__281688) : tailrecursion.hoplon.span.call(null,G__281687,G__281688));
})();
var G__281632 = ") ";
var G__281633 = (function (){var G__281689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281690 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281689,G__281690) : tailrecursion.hoplon.span.call(null,G__281689,G__281690));
})();
var G__281634 = "\n        ";
var G__281635 = (function (){var G__281691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281692 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281691,G__281692) : tailrecursion.hoplon.span.call(null,G__281691,G__281692));
})();
var G__281636 = " (";
var G__281637 = (function (){var G__281693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__281694 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281693,G__281694) : tailrecursion.hoplon.span.call(null,G__281693,G__281694));
})();
var G__281638 = " (";
var G__281639 = (function (){var G__281695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281696 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281695,G__281696) : tailrecursion.hoplon.span.call(null,G__281695,G__281696));
})();
var G__281640 = (function (){var G__281697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281698 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281697,G__281698) : tailrecursion.hoplon.span.call(null,G__281697,G__281698));
})();
var G__281641 = " ";
var G__281642 = (function (){var G__281699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281700 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281699,G__281700) : tailrecursion.hoplon.span.call(null,G__281699,G__281700));
})();
var G__281643 = ")\n                 (";
var G__281644 = (function (){var G__281701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__281702 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281701,G__281702) : tailrecursion.hoplon.span.call(null,G__281701,G__281702));
})();
var G__281645 = " ";
var G__281646 = (function (){var G__281703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281704 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281703,G__281704) : tailrecursion.hoplon.span.call(null,G__281703,G__281704));
})();
var G__281647 = " (";
var G__281648 = (function (){var G__281705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__281706 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281705,G__281706) : tailrecursion.hoplon.span.call(null,G__281705,G__281706));
})();
var G__281649 = (function (){var G__281707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__281708 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281707,G__281708) : tailrecursion.hoplon.span.call(null,G__281707,G__281708));
})();
var G__281650 = " ";
var G__281651 = (function (){var G__281709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281710 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281709,G__281710) : tailrecursion.hoplon.span.call(null,G__281709,G__281710));
})();
var G__281652 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$53 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$53(G__281600,G__281601,G__281602,G__281603,G__281604,G__281605,G__281606,G__281607,G__281608,G__281609,G__281610,G__281611,G__281612,G__281613,G__281614,G__281615,G__281616,G__281617,G__281618,G__281619,G__281620,G__281621,G__281622,G__281623,G__281624,G__281625,G__281626,G__281627,G__281628,G__281629,G__281630,G__281631,G__281632,G__281633,G__281634,G__281635,G__281636,G__281637,G__281638,G__281639,G__281640,G__281641,G__281642,G__281643,G__281644,G__281645,G__281646,G__281647,G__281648,G__281649,G__281650,G__281651,G__281652) : tailrecursion.hoplon.pre.call(null,G__281600,G__281601,G__281602,G__281603,G__281604,G__281605,G__281606,G__281607,G__281608,G__281609,G__281610,G__281611,G__281612,G__281613,G__281614,G__281615,G__281616,G__281617,G__281618,G__281619,G__281620,G__281621,G__281622,G__281623,G__281624,G__281625,G__281626,G__281627,G__281628,G__281629,G__281630,G__281631,G__281632,G__281633,G__281634,G__281635,G__281636,G__281637,G__281638,G__281639,G__281640,G__281641,G__281642,G__281643,G__281644,G__281645,G__281646,G__281647,G__281648,G__281649,G__281650,G__281651,G__281652));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__281598,G__281599) : tailrecursion.hoplon.div.call(null,G__281598,G__281599));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__281597) : tailrecursion.hoplon.div.call(null,G__281597));
})(),(function (){var G__281711 = cljs.core.PersistentArrayMap.EMPTY;
var G__281712 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What are the values of the following expressions?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__281711,G__281712) : tailrecursion.hoplon.markdown.para_node.call(null,G__281711,G__281712));
})(),(function (){var G__281729 = (function (){var G__281730 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__281731 = (function (){var G__281732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__281733 = "(";
var G__281734 = (function (){var G__281740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__281741 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281740,G__281741) : tailrecursion.hoplon.span.call(null,G__281740,G__281741));
})();
var G__281735 = " ";
var G__281736 = (function (){var G__281742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281743 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281742,G__281743) : tailrecursion.hoplon.span.call(null,G__281742,G__281743));
})();
var G__281737 = " ";
var G__281738 = (function (){var G__281744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__281745 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__281744,G__281745) : tailrecursion.hoplon.span.call(null,G__281744,G__281745));
})();
var G__281739 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__281732,G__281733,G__281734,G__281735,G__281736,G__281737,G__281738,G__281739) : tailrecursion.hoplon.pre.call(null,G__281732,G__281733,G__281734,G__281735,G__281736,G__281737,G__281738,G__281739));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__281730,G__281731) : tailrecursion.hoplon.div.call(null,G__281730,G__281731));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__281729) : tailrecursion.hoplon.div.call(null,G__281729));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_281479;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_281478;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_281477;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_281476;
}})(),book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_281746 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_281747 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_281748 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_281749 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__282790 = (function (){var G__282791 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__282792 = (function (){var G__282793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__282794 = "(";
var G__282795 = (function (){var G__283307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283308 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283307,G__283308) : tailrecursion.hoplon.span.call(null,G__283307,G__283308));
})();
var G__282796 = " ";
var G__282797 = (function (){var G__283309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283310 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283309,G__283310) : tailrecursion.hoplon.span.call(null,G__283309,G__283310));
})();
var G__282798 = " ";
var G__282799 = (function (){var G__283311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283312 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283311,G__283312) : tailrecursion.hoplon.span.call(null,G__283311,G__283312));
})();
var G__282800 = ")\n(";
var G__282801 = (function (){var G__283313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283314 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283313,G__283314) : tailrecursion.hoplon.span.call(null,G__283313,G__283314));
})();
var G__282802 = " (";
var G__282803 = (function (){var G__283315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283316 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283315,G__283316) : tailrecursion.hoplon.span.call(null,G__283315,G__283316));
})();
var G__282804 = (function (){var G__283317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283318 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283317,G__283318) : tailrecursion.hoplon.span.call(null,G__283317,G__283318));
})();
var G__282805 = " ";
var G__282806 = (function (){var G__283319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283320 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283319,G__283320) : tailrecursion.hoplon.span.call(null,G__283319,G__283320));
})();
var G__282807 = ") (";
var G__282808 = (function (){var G__283321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283322 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283321,G__283322) : tailrecursion.hoplon.span.call(null,G__283321,G__283322));
})();
var G__282809 = " ";
var G__282810 = (function (){var G__283323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283324 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283323,G__283324) : tailrecursion.hoplon.span.call(null,G__283323,G__283324));
})();
var G__282811 = " (";
var G__282812 = (function (){var G__283325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283326 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283325,G__283326) : tailrecursion.hoplon.span.call(null,G__283325,G__283326));
})();
var G__282813 = (function (){var G__283327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283328 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283327,G__283328) : tailrecursion.hoplon.span.call(null,G__283327,G__283328));
})();
var G__282814 = " ";
var G__282815 = (function (){var G__283329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283330 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283329,G__283330) : tailrecursion.hoplon.span.call(null,G__283329,G__283330));
})();
var G__282816 = ")))\n(";
var G__282817 = (function (){var G__283331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283332 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283331,G__283332) : tailrecursion.hoplon.span.call(null,G__283331,G__283332));
})();
var G__282818 = " ";
var G__282819 = (function (){var G__283333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283334 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283333,G__283334) : tailrecursion.hoplon.span.call(null,G__283333,G__283334));
})();
var G__282820 = " (";
var G__282821 = (function (){var G__283335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283336 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283335,G__283336) : tailrecursion.hoplon.span.call(null,G__283335,G__283336));
})();
var G__282822 = " ";
var G__282823 = (function (){var G__283337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283338 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283337,G__283338) : tailrecursion.hoplon.span.call(null,G__283337,G__283338));
})();
var G__282824 = " ";
var G__282825 = (function (){var G__283339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283340 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283339,G__283340) : tailrecursion.hoplon.span.call(null,G__283339,G__283340));
})();
var G__282826 = "))\n(";
var G__282827 = (function (){var G__283341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283342 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283341,G__283342) : tailrecursion.hoplon.span.call(null,G__283341,G__283342));
})();
var G__282828 = " ";
var G__282829 = (function (){var G__283343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283344 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283343,G__283344) : tailrecursion.hoplon.span.call(null,G__283343,G__283344));
})();
var G__282830 = " (";
var G__282831 = (function (){var G__283345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283346 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283345,G__283346) : tailrecursion.hoplon.span.call(null,G__283345,G__283346));
})();
var G__282832 = " ";
var G__282833 = (function (){var G__283347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283348 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283347,G__283348) : tailrecursion.hoplon.span.call(null,G__283347,G__283348));
})();
var G__282834 = " (";
var G__282835 = (function (){var G__283349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283350 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283349,G__283350) : tailrecursion.hoplon.span.call(null,G__283349,G__283350));
})();
var G__282836 = " ";
var G__282837 = (function (){var G__283351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283352 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283351,G__283352) : tailrecursion.hoplon.span.call(null,G__283351,G__283352));
})();
var G__282838 = " (";
var G__282839 = (function (){var G__283353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283354 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283353,G__283354) : tailrecursion.hoplon.span.call(null,G__283353,G__283354));
})();
var G__282840 = (function (){var G__283355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283356 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283355,G__283356) : tailrecursion.hoplon.span.call(null,G__283355,G__283356));
})();
var G__282841 = " ";
var G__282842 = (function (){var G__283357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283358 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283357,G__283358) : tailrecursion.hoplon.span.call(null,G__283357,G__283358));
})();
var G__282843 = "))))\n(";
var G__282844 = (function (){var G__283359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283360 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283359,G__283360) : tailrecursion.hoplon.span.call(null,G__283359,G__283360));
})();
var G__282845 = " ";
var G__282846 = (function (){var G__283361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283362 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283361,G__283362) : tailrecursion.hoplon.span.call(null,G__283361,G__283362));
})();
var G__282847 = " (";
var G__282848 = (function (){var G__283363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283364 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283363,G__283364) : tailrecursion.hoplon.span.call(null,G__283363,G__283364));
})();
var G__282849 = " ";
var G__282850 = (function (){var G__283365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283366 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283365,G__283366) : tailrecursion.hoplon.span.call(null,G__283365,G__283366));
})();
var G__282851 = " (";
var G__282852 = (function (){var G__283367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283368 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283367,G__283368) : tailrecursion.hoplon.span.call(null,G__283367,G__283368));
})();
var G__282853 = " ";
var G__282854 = (function (){var G__283369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283370 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283369,G__283370) : tailrecursion.hoplon.span.call(null,G__283369,G__283370));
})();
var G__282855 = " ";
var G__282856 = (function (){var G__283371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283372 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283371,G__283372) : tailrecursion.hoplon.span.call(null,G__283371,G__283372));
})();
var G__282857 = ")))\n(";
var G__282858 = (function (){var G__283373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283374 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283373,G__283374) : tailrecursion.hoplon.span.call(null,G__283373,G__283374));
})();
var G__282859 = " ";
var G__282860 = (function (){var G__283375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283376 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283375,G__283376) : tailrecursion.hoplon.span.call(null,G__283375,G__283376));
})();
var G__282861 = " (";
var G__282862 = (function (){var G__283377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283378 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283377,G__283378) : tailrecursion.hoplon.span.call(null,G__283377,G__283378));
})();
var G__282863 = " ";
var G__282864 = (function (){var G__283379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283380 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283379,G__283380) : tailrecursion.hoplon.span.call(null,G__283379,G__283380));
})();
var G__282865 = " (";
var G__282866 = (function (){var G__283381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283382 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283381,G__283382) : tailrecursion.hoplon.span.call(null,G__283381,G__283382));
})();
var G__282867 = " ";
var G__282868 = (function (){var G__283383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283384 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283383,G__283384) : tailrecursion.hoplon.span.call(null,G__283383,G__283384));
})();
var G__282869 = " (";
var G__282870 = (function (){var G__283385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283386 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283385,G__283386) : tailrecursion.hoplon.span.call(null,G__283385,G__283386));
})();
var G__282871 = " ";
var G__282872 = (function (){var G__283387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283388 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283387,G__283388) : tailrecursion.hoplon.span.call(null,G__283387,G__283388));
})();
var G__282873 = " (";
var G__282874 = (function (){var G__283389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283390 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283389,G__283390) : tailrecursion.hoplon.span.call(null,G__283389,G__283390));
})();
var G__282875 = (function (){var G__283391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283392 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283391,G__283392) : tailrecursion.hoplon.span.call(null,G__283391,G__283392));
})();
var G__282876 = " ";
var G__282877 = (function (){var G__283393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283394 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283393,G__283394) : tailrecursion.hoplon.span.call(null,G__283393,G__283394));
})();
var G__282878 = ")))))\n(";
var G__282879 = (function (){var G__283395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283396 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283395,G__283396) : tailrecursion.hoplon.span.call(null,G__283395,G__283396));
})();
var G__282880 = " ";
var G__282881 = (function (){var G__283397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283398 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283397,G__283398) : tailrecursion.hoplon.span.call(null,G__283397,G__283398));
})();
var G__282882 = " (";
var G__282883 = (function (){var G__283399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283400 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283399,G__283400) : tailrecursion.hoplon.span.call(null,G__283399,G__283400));
})();
var G__282884 = " ";
var G__282885 = (function (){var G__283401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283402 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283401,G__283402) : tailrecursion.hoplon.span.call(null,G__283401,G__283402));
})();
var G__282886 = " (";
var G__282887 = (function (){var G__283403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283404 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283403,G__283404) : tailrecursion.hoplon.span.call(null,G__283403,G__283404));
})();
var G__282888 = " ";
var G__282889 = (function (){var G__283405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283406 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283405,G__283406) : tailrecursion.hoplon.span.call(null,G__283405,G__283406));
})();
var G__282890 = " (";
var G__282891 = (function (){var G__283407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283408 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283407,G__283408) : tailrecursion.hoplon.span.call(null,G__283407,G__283408));
})();
var G__282892 = " ";
var G__282893 = (function (){var G__283409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283410 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283409,G__283410) : tailrecursion.hoplon.span.call(null,G__283409,G__283410));
})();
var G__282894 = " (";
var G__282895 = (function (){var G__283411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283412 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283411,G__283412) : tailrecursion.hoplon.span.call(null,G__283411,G__283412));
})();
var G__282896 = " ";
var G__282897 = (function (){var G__283413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283414 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283413,G__283414) : tailrecursion.hoplon.span.call(null,G__283413,G__283414));
})();
var G__282898 = " (";
var G__282899 = (function (){var G__283415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283416 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283415,G__283416) : tailrecursion.hoplon.span.call(null,G__283415,G__283416));
})();
var G__282900 = (function (){var G__283417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283418 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283417,G__283418) : tailrecursion.hoplon.span.call(null,G__283417,G__283418));
})();
var G__282901 = " ";
var G__282902 = (function (){var G__283419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283420 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283419,G__283420) : tailrecursion.hoplon.span.call(null,G__283419,G__283420));
})();
var G__282903 = "))))))\n(";
var G__282904 = (function (){var G__283421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283422 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283421,G__283422) : tailrecursion.hoplon.span.call(null,G__283421,G__283422));
})();
var G__282905 = " ";
var G__282906 = (function (){var G__283423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283424 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283423,G__283424) : tailrecursion.hoplon.span.call(null,G__283423,G__283424));
})();
var G__282907 = " (";
var G__282908 = (function (){var G__283425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283426 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283425,G__283426) : tailrecursion.hoplon.span.call(null,G__283425,G__283426));
})();
var G__282909 = " ";
var G__282910 = (function (){var G__283427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283428 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283427,G__283428) : tailrecursion.hoplon.span.call(null,G__283427,G__283428));
})();
var G__282911 = " (";
var G__282912 = (function (){var G__283429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283430 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283429,G__283430) : tailrecursion.hoplon.span.call(null,G__283429,G__283430));
})();
var G__282913 = " ";
var G__282914 = (function (){var G__283431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283432 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283431,G__283432) : tailrecursion.hoplon.span.call(null,G__283431,G__283432));
})();
var G__282915 = " (";
var G__282916 = (function (){var G__283433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283434 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283433,G__283434) : tailrecursion.hoplon.span.call(null,G__283433,G__283434));
})();
var G__282917 = " ";
var G__282918 = (function (){var G__283435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283436 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283435,G__283436) : tailrecursion.hoplon.span.call(null,G__283435,G__283436));
})();
var G__282919 = " (";
var G__282920 = (function (){var G__283437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283438 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283437,G__283438) : tailrecursion.hoplon.span.call(null,G__283437,G__283438));
})();
var G__282921 = " ";
var G__282922 = (function (){var G__283439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283440 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283439,G__283440) : tailrecursion.hoplon.span.call(null,G__283439,G__283440));
})();
var G__282923 = " (";
var G__282924 = (function (){var G__283441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283442 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283441,G__283442) : tailrecursion.hoplon.span.call(null,G__283441,G__283442));
})();
var G__282925 = " ";
var G__282926 = (function (){var G__283443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283444 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283443,G__283444) : tailrecursion.hoplon.span.call(null,G__283443,G__283444));
})();
var G__282927 = " (";
var G__282928 = (function (){var G__283445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283446 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283445,G__283446) : tailrecursion.hoplon.span.call(null,G__283445,G__283446));
})();
var G__282929 = (function (){var G__283447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283448 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283447,G__283448) : tailrecursion.hoplon.span.call(null,G__283447,G__283448));
})();
var G__282930 = " ";
var G__282931 = (function (){var G__283449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283450 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283449,G__283450) : tailrecursion.hoplon.span.call(null,G__283449,G__283450));
})();
var G__282932 = ")))))))\n(";
var G__282933 = (function (){var G__283451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283452 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283451,G__283452) : tailrecursion.hoplon.span.call(null,G__283451,G__283452));
})();
var G__282934 = " ";
var G__282935 = (function (){var G__283453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283454 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283453,G__283454) : tailrecursion.hoplon.span.call(null,G__283453,G__283454));
})();
var G__282936 = " (";
var G__282937 = (function (){var G__283455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283456 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283455,G__283456) : tailrecursion.hoplon.span.call(null,G__283455,G__283456));
})();
var G__282938 = " ";
var G__282939 = (function (){var G__283457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283458 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283457,G__283458) : tailrecursion.hoplon.span.call(null,G__283457,G__283458));
})();
var G__282940 = " (";
var G__282941 = (function (){var G__283459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283460 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283459,G__283460) : tailrecursion.hoplon.span.call(null,G__283459,G__283460));
})();
var G__282942 = " ";
var G__282943 = (function (){var G__283461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283462 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283461,G__283462) : tailrecursion.hoplon.span.call(null,G__283461,G__283462));
})();
var G__282944 = " (";
var G__282945 = (function (){var G__283463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283464 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283463,G__283464) : tailrecursion.hoplon.span.call(null,G__283463,G__283464));
})();
var G__282946 = " ";
var G__282947 = (function (){var G__283465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283466 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283465,G__283466) : tailrecursion.hoplon.span.call(null,G__283465,G__283466));
})();
var G__282948 = " (";
var G__282949 = (function (){var G__283467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283468 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283467,G__283468) : tailrecursion.hoplon.span.call(null,G__283467,G__283468));
})();
var G__282950 = " ";
var G__282951 = (function (){var G__283469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283470 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283469,G__283470) : tailrecursion.hoplon.span.call(null,G__283469,G__283470));
})();
var G__282952 = " (";
var G__282953 = (function (){var G__283471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283472 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283471,G__283472) : tailrecursion.hoplon.span.call(null,G__283471,G__283472));
})();
var G__282954 = " ";
var G__282955 = (function (){var G__283473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283474 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283473,G__283474) : tailrecursion.hoplon.span.call(null,G__283473,G__283474));
})();
var G__282956 = " (";
var G__282957 = (function (){var G__283475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283476 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283475,G__283476) : tailrecursion.hoplon.span.call(null,G__283475,G__283476));
})();
var G__282958 = " ";
var G__282959 = (function (){var G__283477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283478 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283477,G__283478) : tailrecursion.hoplon.span.call(null,G__283477,G__283478));
})();
var G__282960 = " (";
var G__282961 = (function (){var G__283479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283480 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283479,G__283480) : tailrecursion.hoplon.span.call(null,G__283479,G__283480));
})();
var G__282962 = (function (){var G__283481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283482 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283481,G__283482) : tailrecursion.hoplon.span.call(null,G__283481,G__283482));
})();
var G__282963 = " ";
var G__282964 = (function (){var G__283483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283484 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283483,G__283484) : tailrecursion.hoplon.span.call(null,G__283483,G__283484));
})();
var G__282965 = "))))))))\n(";
var G__282966 = (function (){var G__283485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283486 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283485,G__283486) : tailrecursion.hoplon.span.call(null,G__283485,G__283486));
})();
var G__282967 = " ";
var G__282968 = (function (){var G__283487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283488 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283487,G__283488) : tailrecursion.hoplon.span.call(null,G__283487,G__283488));
})();
var G__282969 = " (";
var G__282970 = (function (){var G__283489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283490 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283489,G__283490) : tailrecursion.hoplon.span.call(null,G__283489,G__283490));
})();
var G__282971 = " ";
var G__282972 = (function (){var G__283491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283492 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283491,G__283492) : tailrecursion.hoplon.span.call(null,G__283491,G__283492));
})();
var G__282973 = " (";
var G__282974 = (function (){var G__283493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283494 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283493,G__283494) : tailrecursion.hoplon.span.call(null,G__283493,G__283494));
})();
var G__282975 = " ";
var G__282976 = (function (){var G__283495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283496 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283495,G__283496) : tailrecursion.hoplon.span.call(null,G__283495,G__283496));
})();
var G__282977 = " (";
var G__282978 = (function (){var G__283497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283498 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283497,G__283498) : tailrecursion.hoplon.span.call(null,G__283497,G__283498));
})();
var G__282979 = " ";
var G__282980 = (function (){var G__283499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283500 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283499,G__283500) : tailrecursion.hoplon.span.call(null,G__283499,G__283500));
})();
var G__282981 = " (";
var G__282982 = (function (){var G__283501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283502 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283501,G__283502) : tailrecursion.hoplon.span.call(null,G__283501,G__283502));
})();
var G__282983 = " ";
var G__282984 = (function (){var G__283503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283504 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283503,G__283504) : tailrecursion.hoplon.span.call(null,G__283503,G__283504));
})();
var G__282985 = " (";
var G__282986 = (function (){var G__283505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283506 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283505,G__283506) : tailrecursion.hoplon.span.call(null,G__283505,G__283506));
})();
var G__282987 = " ";
var G__282988 = (function (){var G__283507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283508 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283507,G__283508) : tailrecursion.hoplon.span.call(null,G__283507,G__283508));
})();
var G__282989 = " (";
var G__282990 = (function (){var G__283509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283510 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283509,G__283510) : tailrecursion.hoplon.span.call(null,G__283509,G__283510));
})();
var G__282991 = " ";
var G__282992 = (function (){var G__283511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283512 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283511,G__283512) : tailrecursion.hoplon.span.call(null,G__283511,G__283512));
})();
var G__282993 = " (";
var G__282994 = (function (){var G__283513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283514 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283513,G__283514) : tailrecursion.hoplon.span.call(null,G__283513,G__283514));
})();
var G__282995 = " ";
var G__282996 = (function (){var G__283515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283516 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283515,G__283516) : tailrecursion.hoplon.span.call(null,G__283515,G__283516));
})();
var G__282997 = " (";
var G__282998 = (function (){var G__283517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283518 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283517,G__283518) : tailrecursion.hoplon.span.call(null,G__283517,G__283518));
})();
var G__282999 = (function (){var G__283519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283520 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283519,G__283520) : tailrecursion.hoplon.span.call(null,G__283519,G__283520));
})();
var G__283000 = " ";
var G__283001 = (function (){var G__283521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283522 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283521,G__283522) : tailrecursion.hoplon.span.call(null,G__283521,G__283522));
})();
var G__283002 = ")))))))))\n(";
var G__283003 = (function (){var G__283523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283524 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283523,G__283524) : tailrecursion.hoplon.span.call(null,G__283523,G__283524));
})();
var G__283004 = " ";
var G__283005 = (function (){var G__283525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283526 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283525,G__283526) : tailrecursion.hoplon.span.call(null,G__283525,G__283526));
})();
var G__283006 = " (";
var G__283007 = (function (){var G__283527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283528 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283527,G__283528) : tailrecursion.hoplon.span.call(null,G__283527,G__283528));
})();
var G__283008 = " ";
var G__283009 = (function (){var G__283529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283530 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283529,G__283530) : tailrecursion.hoplon.span.call(null,G__283529,G__283530));
})();
var G__283010 = " (";
var G__283011 = (function (){var G__283531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283532 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283531,G__283532) : tailrecursion.hoplon.span.call(null,G__283531,G__283532));
})();
var G__283012 = " ";
var G__283013 = (function (){var G__283533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283534 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283533,G__283534) : tailrecursion.hoplon.span.call(null,G__283533,G__283534));
})();
var G__283014 = " (";
var G__283015 = (function (){var G__283535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283536 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283535,G__283536) : tailrecursion.hoplon.span.call(null,G__283535,G__283536));
})();
var G__283016 = " ";
var G__283017 = (function (){var G__283537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283538 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283537,G__283538) : tailrecursion.hoplon.span.call(null,G__283537,G__283538));
})();
var G__283018 = " (";
var G__283019 = (function (){var G__283539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283540 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283539,G__283540) : tailrecursion.hoplon.span.call(null,G__283539,G__283540));
})();
var G__283020 = " ";
var G__283021 = (function (){var G__283541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283542 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283541,G__283542) : tailrecursion.hoplon.span.call(null,G__283541,G__283542));
})();
var G__283022 = " (";
var G__283023 = (function (){var G__283543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283544 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283543,G__283544) : tailrecursion.hoplon.span.call(null,G__283543,G__283544));
})();
var G__283024 = " ";
var G__283025 = (function (){var G__283545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283546 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283545,G__283546) : tailrecursion.hoplon.span.call(null,G__283545,G__283546));
})();
var G__283026 = " (";
var G__283027 = (function (){var G__283547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283548 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283547,G__283548) : tailrecursion.hoplon.span.call(null,G__283547,G__283548));
})();
var G__283028 = " ";
var G__283029 = (function (){var G__283549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283550 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283549,G__283550) : tailrecursion.hoplon.span.call(null,G__283549,G__283550));
})();
var G__283030 = " (";
var G__283031 = (function (){var G__283551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283552 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283551,G__283552) : tailrecursion.hoplon.span.call(null,G__283551,G__283552));
})();
var G__283032 = " ";
var G__283033 = (function (){var G__283553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283554 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283553,G__283554) : tailrecursion.hoplon.span.call(null,G__283553,G__283554));
})();
var G__283034 = " (";
var G__283035 = (function (){var G__283555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283556 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283555,G__283556) : tailrecursion.hoplon.span.call(null,G__283555,G__283556));
})();
var G__283036 = " ";
var G__283037 = (function (){var G__283557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283558 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283557,G__283558) : tailrecursion.hoplon.span.call(null,G__283557,G__283558));
})();
var G__283038 = " (";
var G__283039 = (function (){var G__283559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283560 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283559,G__283560) : tailrecursion.hoplon.span.call(null,G__283559,G__283560));
})();
var G__283040 = (function (){var G__283561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283562 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283561,G__283562) : tailrecursion.hoplon.span.call(null,G__283561,G__283562));
})();
var G__283041 = " ";
var G__283042 = (function (){var G__283563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283564 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283563,G__283564) : tailrecursion.hoplon.span.call(null,G__283563,G__283564));
})();
var G__283043 = "))))))))))\n(";
var G__283044 = (function (){var G__283565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283566 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283565,G__283566) : tailrecursion.hoplon.span.call(null,G__283565,G__283566));
})();
var G__283045 = " ";
var G__283046 = (function (){var G__283567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283568 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283567,G__283568) : tailrecursion.hoplon.span.call(null,G__283567,G__283568));
})();
var G__283047 = " (";
var G__283048 = (function (){var G__283569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283570 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283569,G__283570) : tailrecursion.hoplon.span.call(null,G__283569,G__283570));
})();
var G__283049 = " ";
var G__283050 = (function (){var G__283571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283572 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283571,G__283572) : tailrecursion.hoplon.span.call(null,G__283571,G__283572));
})();
var G__283051 = " (";
var G__283052 = (function (){var G__283573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283574 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283573,G__283574) : tailrecursion.hoplon.span.call(null,G__283573,G__283574));
})();
var G__283053 = " ";
var G__283054 = (function (){var G__283575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283576 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283575,G__283576) : tailrecursion.hoplon.span.call(null,G__283575,G__283576));
})();
var G__283055 = " (";
var G__283056 = (function (){var G__283577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283578 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283577,G__283578) : tailrecursion.hoplon.span.call(null,G__283577,G__283578));
})();
var G__283057 = " ";
var G__283058 = (function (){var G__283579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283580 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283579,G__283580) : tailrecursion.hoplon.span.call(null,G__283579,G__283580));
})();
var G__283059 = " (";
var G__283060 = (function (){var G__283581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283582 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283581,G__283582) : tailrecursion.hoplon.span.call(null,G__283581,G__283582));
})();
var G__283061 = " ";
var G__283062 = (function (){var G__283583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283584 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283583,G__283584) : tailrecursion.hoplon.span.call(null,G__283583,G__283584));
})();
var G__283063 = " (";
var G__283064 = (function (){var G__283585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283586 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283585,G__283586) : tailrecursion.hoplon.span.call(null,G__283585,G__283586));
})();
var G__283065 = " ";
var G__283066 = (function (){var G__283587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283588 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283587,G__283588) : tailrecursion.hoplon.span.call(null,G__283587,G__283588));
})();
var G__283067 = " (";
var G__283068 = (function (){var G__283589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283590 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283589,G__283590) : tailrecursion.hoplon.span.call(null,G__283589,G__283590));
})();
var G__283069 = " ";
var G__283070 = (function (){var G__283591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283592 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283591,G__283592) : tailrecursion.hoplon.span.call(null,G__283591,G__283592));
})();
var G__283071 = " (";
var G__283072 = (function (){var G__283593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283594 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283593,G__283594) : tailrecursion.hoplon.span.call(null,G__283593,G__283594));
})();
var G__283073 = " ";
var G__283074 = (function (){var G__283595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283596 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283595,G__283596) : tailrecursion.hoplon.span.call(null,G__283595,G__283596));
})();
var G__283075 = " (";
var G__283076 = (function (){var G__283597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283598 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283597,G__283598) : tailrecursion.hoplon.span.call(null,G__283597,G__283598));
})();
var G__283077 = " ";
var G__283078 = (function (){var G__283599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283600 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283599,G__283600) : tailrecursion.hoplon.span.call(null,G__283599,G__283600));
})();
var G__283079 = " (";
var G__283080 = (function (){var G__283601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283602 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283601,G__283602) : tailrecursion.hoplon.span.call(null,G__283601,G__283602));
})();
var G__283081 = " ";
var G__283082 = (function (){var G__283603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283604 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283603,G__283604) : tailrecursion.hoplon.span.call(null,G__283603,G__283604));
})();
var G__283083 = " (";
var G__283084 = (function (){var G__283605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283606 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283605,G__283606) : tailrecursion.hoplon.span.call(null,G__283605,G__283606));
})();
var G__283085 = (function (){var G__283607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283608 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283607,G__283608) : tailrecursion.hoplon.span.call(null,G__283607,G__283608));
})();
var G__283086 = " ";
var G__283087 = (function (){var G__283609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283610 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283609,G__283610) : tailrecursion.hoplon.span.call(null,G__283609,G__283610));
})();
var G__283088 = ")))))))))))\n(";
var G__283089 = (function (){var G__283611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283612 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283611,G__283612) : tailrecursion.hoplon.span.call(null,G__283611,G__283612));
})();
var G__283090 = " ";
var G__283091 = (function (){var G__283613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283614 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283613,G__283614) : tailrecursion.hoplon.span.call(null,G__283613,G__283614));
})();
var G__283092 = " (";
var G__283093 = (function (){var G__283615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283616 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283615,G__283616) : tailrecursion.hoplon.span.call(null,G__283615,G__283616));
})();
var G__283094 = " ";
var G__283095 = (function (){var G__283617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283618 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283617,G__283618) : tailrecursion.hoplon.span.call(null,G__283617,G__283618));
})();
var G__283096 = " (";
var G__283097 = (function (){var G__283619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283620 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283619,G__283620) : tailrecursion.hoplon.span.call(null,G__283619,G__283620));
})();
var G__283098 = " ";
var G__283099 = (function (){var G__283621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283622 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283621,G__283622) : tailrecursion.hoplon.span.call(null,G__283621,G__283622));
})();
var G__283100 = " (";
var G__283101 = (function (){var G__283623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283624 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283623,G__283624) : tailrecursion.hoplon.span.call(null,G__283623,G__283624));
})();
var G__283102 = " ";
var G__283103 = (function (){var G__283625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283626 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283625,G__283626) : tailrecursion.hoplon.span.call(null,G__283625,G__283626));
})();
var G__283104 = " (";
var G__283105 = (function (){var G__283627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283628 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283627,G__283628) : tailrecursion.hoplon.span.call(null,G__283627,G__283628));
})();
var G__283106 = " ";
var G__283107 = (function (){var G__283629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283630 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283629,G__283630) : tailrecursion.hoplon.span.call(null,G__283629,G__283630));
})();
var G__283108 = " (";
var G__283109 = (function (){var G__283631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283632 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283631,G__283632) : tailrecursion.hoplon.span.call(null,G__283631,G__283632));
})();
var G__283110 = " ";
var G__283111 = (function (){var G__283633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283634 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283633,G__283634) : tailrecursion.hoplon.span.call(null,G__283633,G__283634));
})();
var G__283112 = " (";
var G__283113 = (function (){var G__283635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283636 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283635,G__283636) : tailrecursion.hoplon.span.call(null,G__283635,G__283636));
})();
var G__283114 = " ";
var G__283115 = (function (){var G__283637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283638 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283637,G__283638) : tailrecursion.hoplon.span.call(null,G__283637,G__283638));
})();
var G__283116 = " (";
var G__283117 = (function (){var G__283639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283640 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283639,G__283640) : tailrecursion.hoplon.span.call(null,G__283639,G__283640));
})();
var G__283118 = " ";
var G__283119 = (function (){var G__283641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283642 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283641,G__283642) : tailrecursion.hoplon.span.call(null,G__283641,G__283642));
})();
var G__283120 = " (";
var G__283121 = (function (){var G__283643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283644 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283643,G__283644) : tailrecursion.hoplon.span.call(null,G__283643,G__283644));
})();
var G__283122 = " ";
var G__283123 = (function (){var G__283645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283646 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283645,G__283646) : tailrecursion.hoplon.span.call(null,G__283645,G__283646));
})();
var G__283124 = " (";
var G__283125 = (function (){var G__283647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283648 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283647,G__283648) : tailrecursion.hoplon.span.call(null,G__283647,G__283648));
})();
var G__283126 = " ";
var G__283127 = (function (){var G__283649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283650 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283649,G__283650) : tailrecursion.hoplon.span.call(null,G__283649,G__283650));
})();
var G__283128 = " ";
var G__283129 = (function (){var G__283651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283652 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283651,G__283652) : tailrecursion.hoplon.span.call(null,G__283651,G__283652));
})();
var G__283130 = "))))))))))\n(";
var G__283131 = (function (){var G__283653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283654 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283653,G__283654) : tailrecursion.hoplon.span.call(null,G__283653,G__283654));
})();
var G__283132 = " ";
var G__283133 = (function (){var G__283655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283656 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283655,G__283656) : tailrecursion.hoplon.span.call(null,G__283655,G__283656));
})();
var G__283134 = " (";
var G__283135 = (function (){var G__283657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283658 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283657,G__283658) : tailrecursion.hoplon.span.call(null,G__283657,G__283658));
})();
var G__283136 = " ";
var G__283137 = (function (){var G__283659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283660 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283659,G__283660) : tailrecursion.hoplon.span.call(null,G__283659,G__283660));
})();
var G__283138 = " (";
var G__283139 = (function (){var G__283661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283662 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283661,G__283662) : tailrecursion.hoplon.span.call(null,G__283661,G__283662));
})();
var G__283140 = " ";
var G__283141 = (function (){var G__283663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283664 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283663,G__283664) : tailrecursion.hoplon.span.call(null,G__283663,G__283664));
})();
var G__283142 = " (";
var G__283143 = (function (){var G__283665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283666 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283665,G__283666) : tailrecursion.hoplon.span.call(null,G__283665,G__283666));
})();
var G__283144 = " ";
var G__283145 = (function (){var G__283667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283668 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283667,G__283668) : tailrecursion.hoplon.span.call(null,G__283667,G__283668));
})();
var G__283146 = " (";
var G__283147 = (function (){var G__283669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283670 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283669,G__283670) : tailrecursion.hoplon.span.call(null,G__283669,G__283670));
})();
var G__283148 = " ";
var G__283149 = (function (){var G__283671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283672 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283671,G__283672) : tailrecursion.hoplon.span.call(null,G__283671,G__283672));
})();
var G__283150 = " (";
var G__283151 = (function (){var G__283673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283674 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283673,G__283674) : tailrecursion.hoplon.span.call(null,G__283673,G__283674));
})();
var G__283152 = " ";
var G__283153 = (function (){var G__283675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283676 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283675,G__283676) : tailrecursion.hoplon.span.call(null,G__283675,G__283676));
})();
var G__283154 = " (";
var G__283155 = (function (){var G__283677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283678 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283677,G__283678) : tailrecursion.hoplon.span.call(null,G__283677,G__283678));
})();
var G__283156 = " ";
var G__283157 = (function (){var G__283679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283680 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283679,G__283680) : tailrecursion.hoplon.span.call(null,G__283679,G__283680));
})();
var G__283158 = " (";
var G__283159 = (function (){var G__283681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283682 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283681,G__283682) : tailrecursion.hoplon.span.call(null,G__283681,G__283682));
})();
var G__283160 = " ";
var G__283161 = (function (){var G__283683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283684 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283683,G__283684) : tailrecursion.hoplon.span.call(null,G__283683,G__283684));
})();
var G__283162 = " (";
var G__283163 = (function (){var G__283685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283686 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283685,G__283686) : tailrecursion.hoplon.span.call(null,G__283685,G__283686));
})();
var G__283164 = " ";
var G__283165 = (function (){var G__283687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283688 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283687,G__283688) : tailrecursion.hoplon.span.call(null,G__283687,G__283688));
})();
var G__283166 = " ";
var G__283167 = (function (){var G__283689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283690 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283689,G__283690) : tailrecursion.hoplon.span.call(null,G__283689,G__283690));
})();
var G__283168 = ")))))))))\n(";
var G__283169 = (function (){var G__283691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283692 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283691,G__283692) : tailrecursion.hoplon.span.call(null,G__283691,G__283692));
})();
var G__283170 = " ";
var G__283171 = (function (){var G__283693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283694 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283693,G__283694) : tailrecursion.hoplon.span.call(null,G__283693,G__283694));
})();
var G__283172 = " (";
var G__283173 = (function (){var G__283695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283696 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283695,G__283696) : tailrecursion.hoplon.span.call(null,G__283695,G__283696));
})();
var G__283174 = " ";
var G__283175 = (function (){var G__283697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283698 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283697,G__283698) : tailrecursion.hoplon.span.call(null,G__283697,G__283698));
})();
var G__283176 = " (";
var G__283177 = (function (){var G__283699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283700 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283699,G__283700) : tailrecursion.hoplon.span.call(null,G__283699,G__283700));
})();
var G__283178 = " ";
var G__283179 = (function (){var G__283701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283702 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283701,G__283702) : tailrecursion.hoplon.span.call(null,G__283701,G__283702));
})();
var G__283180 = " (";
var G__283181 = (function (){var G__283703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283704 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283703,G__283704) : tailrecursion.hoplon.span.call(null,G__283703,G__283704));
})();
var G__283182 = " ";
var G__283183 = (function (){var G__283705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283706 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283705,G__283706) : tailrecursion.hoplon.span.call(null,G__283705,G__283706));
})();
var G__283184 = " (";
var G__283185 = (function (){var G__283707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283708 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283707,G__283708) : tailrecursion.hoplon.span.call(null,G__283707,G__283708));
})();
var G__283186 = " ";
var G__283187 = (function (){var G__283709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283710 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283709,G__283710) : tailrecursion.hoplon.span.call(null,G__283709,G__283710));
})();
var G__283188 = " (";
var G__283189 = (function (){var G__283711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283712 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283711,G__283712) : tailrecursion.hoplon.span.call(null,G__283711,G__283712));
})();
var G__283190 = " ";
var G__283191 = (function (){var G__283713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283714 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283713,G__283714) : tailrecursion.hoplon.span.call(null,G__283713,G__283714));
})();
var G__283192 = " (";
var G__283193 = (function (){var G__283715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283716 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283715,G__283716) : tailrecursion.hoplon.span.call(null,G__283715,G__283716));
})();
var G__283194 = " ";
var G__283195 = (function (){var G__283717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283718 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283717,G__283718) : tailrecursion.hoplon.span.call(null,G__283717,G__283718));
})();
var G__283196 = " (";
var G__283197 = (function (){var G__283719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283720 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283719,G__283720) : tailrecursion.hoplon.span.call(null,G__283719,G__283720));
})();
var G__283198 = " ";
var G__283199 = (function (){var G__283721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283722 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283721,G__283722) : tailrecursion.hoplon.span.call(null,G__283721,G__283722));
})();
var G__283200 = " (";
var G__283201 = (function (){var G__283723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283724 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283723,G__283724) : tailrecursion.hoplon.span.call(null,G__283723,G__283724));
})();
var G__283202 = (function (){var G__283725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283726 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283725,G__283726) : tailrecursion.hoplon.span.call(null,G__283725,G__283726));
})();
var G__283203 = " ";
var G__283204 = (function (){var G__283727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283728 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283727,G__283728) : tailrecursion.hoplon.span.call(null,G__283727,G__283728));
})();
var G__283205 = ")))))))))\n(";
var G__283206 = (function (){var G__283729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283730 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283729,G__283730) : tailrecursion.hoplon.span.call(null,G__283729,G__283730));
})();
var G__283207 = " ";
var G__283208 = (function (){var G__283731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283732 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283731,G__283732) : tailrecursion.hoplon.span.call(null,G__283731,G__283732));
})();
var G__283209 = " (";
var G__283210 = (function (){var G__283733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283734 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283733,G__283734) : tailrecursion.hoplon.span.call(null,G__283733,G__283734));
})();
var G__283211 = " ";
var G__283212 = (function (){var G__283735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283736 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283735,G__283736) : tailrecursion.hoplon.span.call(null,G__283735,G__283736));
})();
var G__283213 = " (";
var G__283214 = (function (){var G__283737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283738 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283737,G__283738) : tailrecursion.hoplon.span.call(null,G__283737,G__283738));
})();
var G__283215 = " ";
var G__283216 = (function (){var G__283739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283740 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283739,G__283740) : tailrecursion.hoplon.span.call(null,G__283739,G__283740));
})();
var G__283217 = " (";
var G__283218 = (function (){var G__283741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283742 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283741,G__283742) : tailrecursion.hoplon.span.call(null,G__283741,G__283742));
})();
var G__283219 = " ";
var G__283220 = (function (){var G__283743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283744 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283743,G__283744) : tailrecursion.hoplon.span.call(null,G__283743,G__283744));
})();
var G__283221 = " (";
var G__283222 = (function (){var G__283745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283746 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283745,G__283746) : tailrecursion.hoplon.span.call(null,G__283745,G__283746));
})();
var G__283223 = " ";
var G__283224 = (function (){var G__283747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283748 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283747,G__283748) : tailrecursion.hoplon.span.call(null,G__283747,G__283748));
})();
var G__283225 = " (";
var G__283226 = (function (){var G__283749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283750 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283749,G__283750) : tailrecursion.hoplon.span.call(null,G__283749,G__283750));
})();
var G__283227 = " ";
var G__283228 = (function (){var G__283751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283752 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283751,G__283752) : tailrecursion.hoplon.span.call(null,G__283751,G__283752));
})();
var G__283229 = " (";
var G__283230 = (function (){var G__283753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283754 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283753,G__283754) : tailrecursion.hoplon.span.call(null,G__283753,G__283754));
})();
var G__283231 = " ";
var G__283232 = (function (){var G__283755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283756 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283755,G__283756) : tailrecursion.hoplon.span.call(null,G__283755,G__283756));
})();
var G__283233 = " (";
var G__283234 = (function (){var G__283757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283758 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283757,G__283758) : tailrecursion.hoplon.span.call(null,G__283757,G__283758));
})();
var G__283235 = " ";
var G__283236 = (function (){var G__283759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283760 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283759,G__283760) : tailrecursion.hoplon.span.call(null,G__283759,G__283760));
})();
var G__283237 = " ";
var G__283238 = (function (){var G__283761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283762 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283761,G__283762) : tailrecursion.hoplon.span.call(null,G__283761,G__283762));
})();
var G__283239 = "))))))))\n(";
var G__283240 = (function (){var G__283763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283764 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283763,G__283764) : tailrecursion.hoplon.span.call(null,G__283763,G__283764));
})();
var G__283241 = " ";
var G__283242 = (function (){var G__283765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283766 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283765,G__283766) : tailrecursion.hoplon.span.call(null,G__283765,G__283766));
})();
var G__283243 = " (";
var G__283244 = (function (){var G__283767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283768 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283767,G__283768) : tailrecursion.hoplon.span.call(null,G__283767,G__283768));
})();
var G__283245 = " ";
var G__283246 = (function (){var G__283769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283770 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283769,G__283770) : tailrecursion.hoplon.span.call(null,G__283769,G__283770));
})();
var G__283247 = " (";
var G__283248 = (function (){var G__283771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283772 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283771,G__283772) : tailrecursion.hoplon.span.call(null,G__283771,G__283772));
})();
var G__283249 = " ";
var G__283250 = (function (){var G__283773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283774 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283773,G__283774) : tailrecursion.hoplon.span.call(null,G__283773,G__283774));
})();
var G__283251 = " (";
var G__283252 = (function (){var G__283775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283776 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283775,G__283776) : tailrecursion.hoplon.span.call(null,G__283775,G__283776));
})();
var G__283253 = " ";
var G__283254 = (function (){var G__283777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283778 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283777,G__283778) : tailrecursion.hoplon.span.call(null,G__283777,G__283778));
})();
var G__283255 = " (";
var G__283256 = (function (){var G__283779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283780 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283779,G__283780) : tailrecursion.hoplon.span.call(null,G__283779,G__283780));
})();
var G__283257 = " ";
var G__283258 = (function (){var G__283781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283782 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283781,G__283782) : tailrecursion.hoplon.span.call(null,G__283781,G__283782));
})();
var G__283259 = " (";
var G__283260 = (function (){var G__283783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283784 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283783,G__283784) : tailrecursion.hoplon.span.call(null,G__283783,G__283784));
})();
var G__283261 = " ";
var G__283262 = (function (){var G__283785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283786 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283785,G__283786) : tailrecursion.hoplon.span.call(null,G__283785,G__283786));
})();
var G__283263 = " (";
var G__283264 = (function (){var G__283787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283788 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283787,G__283788) : tailrecursion.hoplon.span.call(null,G__283787,G__283788));
})();
var G__283265 = " ";
var G__283266 = (function (){var G__283789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283790 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283789,G__283790) : tailrecursion.hoplon.span.call(null,G__283789,G__283790));
})();
var G__283267 = " (";
var G__283268 = (function (){var G__283791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__283792 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283791,G__283792) : tailrecursion.hoplon.span.call(null,G__283791,G__283792));
})();
var G__283269 = (function (){var G__283793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283794 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283793,G__283794) : tailrecursion.hoplon.span.call(null,G__283793,G__283794));
})();
var G__283270 = " ";
var G__283271 = (function (){var G__283795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283796 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283795,G__283796) : tailrecursion.hoplon.span.call(null,G__283795,G__283796));
})();
var G__283272 = "))))))))\n(";
var G__283273 = (function (){var G__283797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283798 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283797,G__283798) : tailrecursion.hoplon.span.call(null,G__283797,G__283798));
})();
var G__283274 = " ";
var G__283275 = (function (){var G__283799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283800 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283799,G__283800) : tailrecursion.hoplon.span.call(null,G__283799,G__283800));
})();
var G__283276 = " (";
var G__283277 = (function (){var G__283801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283802 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283801,G__283802) : tailrecursion.hoplon.span.call(null,G__283801,G__283802));
})();
var G__283278 = " ";
var G__283279 = (function (){var G__283803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283804 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283803,G__283804) : tailrecursion.hoplon.span.call(null,G__283803,G__283804));
})();
var G__283280 = " (";
var G__283281 = (function (){var G__283805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283806 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283805,G__283806) : tailrecursion.hoplon.span.call(null,G__283805,G__283806));
})();
var G__283282 = " ";
var G__283283 = (function (){var G__283807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283808 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283807,G__283808) : tailrecursion.hoplon.span.call(null,G__283807,G__283808));
})();
var G__283284 = " (";
var G__283285 = (function (){var G__283809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283810 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283809,G__283810) : tailrecursion.hoplon.span.call(null,G__283809,G__283810));
})();
var G__283286 = " ";
var G__283287 = (function (){var G__283811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283812 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283811,G__283812) : tailrecursion.hoplon.span.call(null,G__283811,G__283812));
})();
var G__283288 = " (";
var G__283289 = (function (){var G__283813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283814 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283813,G__283814) : tailrecursion.hoplon.span.call(null,G__283813,G__283814));
})();
var G__283290 = " ";
var G__283291 = (function (){var G__283815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283816 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283815,G__283816) : tailrecursion.hoplon.span.call(null,G__283815,G__283816));
})();
var G__283292 = " (";
var G__283293 = (function (){var G__283817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283818 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283817,G__283818) : tailrecursion.hoplon.span.call(null,G__283817,G__283818));
})();
var G__283294 = " ";
var G__283295 = (function (){var G__283819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283820 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283819,G__283820) : tailrecursion.hoplon.span.call(null,G__283819,G__283820));
})();
var G__283296 = " (";
var G__283297 = (function (){var G__283821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283822 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283821,G__283822) : tailrecursion.hoplon.span.call(null,G__283821,G__283822));
})();
var G__283298 = " ";
var G__283299 = (function (){var G__283823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283824 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283823,G__283824) : tailrecursion.hoplon.span.call(null,G__283823,G__283824));
})();
var G__283300 = " ";
var G__283301 = (function (){var G__283825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283826 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283825,G__283826) : tailrecursion.hoplon.span.call(null,G__283825,G__283826));
})();
var G__283302 = ")))))))\n";
var G__283303 = (function (){var G__283827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__283828 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283827,G__283828) : tailrecursion.hoplon.span.call(null,G__283827,G__283828));
})();
var G__283304 = "\n";
var G__283305 = (function (){var G__283829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283830 = "1024";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283829,G__283830) : tailrecursion.hoplon.span.call(null,G__283829,G__283830));
})();
var G__283306 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$514 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$514(G__282793,G__282794,G__282795,G__282796,G__282797,G__282798,G__282799,G__282800,G__282801,G__282802,G__282803,G__282804,G__282805,G__282806,G__282807,G__282808,G__282809,G__282810,G__282811,G__282812,G__282813,G__282814,G__282815,G__282816,G__282817,G__282818,G__282819,G__282820,G__282821,G__282822,G__282823,G__282824,G__282825,G__282826,G__282827,G__282828,G__282829,G__282830,G__282831,G__282832,G__282833,G__282834,G__282835,G__282836,G__282837,G__282838,G__282839,G__282840,G__282841,G__282842,G__282843,G__282844,G__282845,G__282846,G__282847,G__282848,G__282849,G__282850,G__282851,G__282852,G__282853,G__282854,G__282855,G__282856,G__282857,G__282858,G__282859,G__282860,G__282861,G__282862,G__282863,G__282864,G__282865,G__282866,G__282867,G__282868,G__282869,G__282870,G__282871,G__282872,G__282873,G__282874,G__282875,G__282876,G__282877,G__282878,G__282879,G__282880,G__282881,G__282882,G__282883,G__282884,G__282885,G__282886,G__282887,G__282888,G__282889,G__282890,G__282891,G__282892,G__282893,G__282894,G__282895,G__282896,G__282897,G__282898,G__282899,G__282900,G__282901,G__282902,G__282903,G__282904,G__282905,G__282906,G__282907,G__282908,G__282909,G__282910,G__282911,G__282912,G__282913,G__282914,G__282915,G__282916,G__282917,G__282918,G__282919,G__282920,G__282921,G__282922,G__282923,G__282924,G__282925,G__282926,G__282927,G__282928,G__282929,G__282930,G__282931,G__282932,G__282933,G__282934,G__282935,G__282936,G__282937,G__282938,G__282939,G__282940,G__282941,G__282942,G__282943,G__282944,G__282945,G__282946,G__282947,G__282948,G__282949,G__282950,G__282951,G__282952,G__282953,G__282954,G__282955,G__282956,G__282957,G__282958,G__282959,G__282960,G__282961,G__282962,G__282963,G__282964,G__282965,G__282966,G__282967,G__282968,G__282969,G__282970,G__282971,G__282972,G__282973,G__282974,G__282975,G__282976,G__282977,G__282978,G__282979,G__282980,G__282981,G__282982,G__282983,G__282984,G__282985,G__282986,G__282987,G__282988,G__282989,G__282990,G__282991,G__282992,G__282993,G__282994,G__282995,G__282996,G__282997,G__282998,G__282999,G__283000,G__283001,G__283002,G__283003,G__283004,G__283005,G__283006,G__283007,G__283008,G__283009,G__283010,G__283011,G__283012,G__283013,G__283014,G__283015,G__283016,G__283017,G__283018,G__283019,G__283020,G__283021,G__283022,G__283023,G__283024,G__283025,G__283026,G__283027,G__283028,G__283029,G__283030,G__283031,G__283032,G__283033,G__283034,G__283035,G__283036,G__283037,G__283038,G__283039,G__283040,G__283041,G__283042,G__283043,G__283044,G__283045,G__283046,G__283047,G__283048,G__283049,G__283050,G__283051,G__283052,G__283053,G__283054,G__283055,G__283056,G__283057,G__283058,G__283059,G__283060,G__283061,G__283062,G__283063,G__283064,G__283065,G__283066,G__283067,G__283068,G__283069,G__283070,G__283071,G__283072,G__283073,G__283074,G__283075,G__283076,G__283077,G__283078,G__283079,G__283080,G__283081,G__283082,G__283083,G__283084,G__283085,G__283086,G__283087,G__283088,G__283089,G__283090,G__283091,G__283092,G__283093,G__283094,G__283095,G__283096,G__283097,G__283098,G__283099,G__283100,G__283101,G__283102,G__283103,G__283104,G__283105,G__283106,G__283107,G__283108,G__283109,G__283110,G__283111,G__283112,G__283113,G__283114,G__283115,G__283116,G__283117,G__283118,G__283119,G__283120,G__283121,G__283122,G__283123,G__283124,G__283125,G__283126,G__283127,G__283128,G__283129,G__283130,G__283131,G__283132,G__283133,G__283134,G__283135,G__283136,G__283137,G__283138,G__283139,G__283140,G__283141,G__283142,G__283143,G__283144,G__283145,G__283146,G__283147,G__283148,G__283149,G__283150,G__283151,G__283152,G__283153,G__283154,G__283155,G__283156,G__283157,G__283158,G__283159,G__283160,G__283161,G__283162,G__283163,G__283164,G__283165,G__283166,G__283167,G__283168,G__283169,G__283170,G__283171,G__283172,G__283173,G__283174,G__283175,G__283176,G__283177,G__283178,G__283179,G__283180,G__283181,G__283182,G__283183,G__283184,G__283185,G__283186,G__283187,G__283188,G__283189,G__283190,G__283191,G__283192,G__283193,G__283194,G__283195,G__283196,G__283197,G__283198,G__283199,G__283200,G__283201,G__283202,G__283203,G__283204,G__283205,G__283206,G__283207,G__283208,G__283209,G__283210,G__283211,G__283212,G__283213,G__283214,G__283215,G__283216,G__283217,G__283218,G__283219,G__283220,G__283221,G__283222,G__283223,G__283224,G__283225,G__283226,G__283227,G__283228,G__283229,G__283230,G__283231,G__283232,G__283233,G__283234,G__283235,G__283236,G__283237,G__283238,G__283239,G__283240,G__283241,G__283242,G__283243,G__283244,G__283245,G__283246,G__283247,G__283248,G__283249,G__283250,G__283251,G__283252,G__283253,G__283254,G__283255,G__283256,G__283257,G__283258,G__283259,G__283260,G__283261,G__283262,G__283263,G__283264,G__283265,G__283266,G__283267,G__283268,G__283269,G__283270,G__283271,G__283272,G__283273,G__283274,G__283275,G__283276,G__283277,G__283278,G__283279,G__283280,G__283281,G__283282,G__283283,G__283284,G__283285,G__283286,G__283287,G__283288,G__283289,G__283290,G__283291,G__283292,G__283293,G__283294,G__283295,G__283296,G__283297,G__283298,G__283299,G__283300,G__283301,G__283302,G__283303,G__283304,G__283305,G__283306) : tailrecursion.hoplon.pre.call(null,G__282793,G__282794,G__282795,G__282796,G__282797,G__282798,G__282799,G__282800,G__282801,G__282802,G__282803,G__282804,G__282805,G__282806,G__282807,G__282808,G__282809,G__282810,G__282811,G__282812,G__282813,G__282814,G__282815,G__282816,G__282817,G__282818,G__282819,G__282820,G__282821,G__282822,G__282823,G__282824,G__282825,G__282826,G__282827,G__282828,G__282829,G__282830,G__282831,G__282832,G__282833,G__282834,G__282835,G__282836,G__282837,G__282838,G__282839,G__282840,G__282841,G__282842,G__282843,G__282844,G__282845,G__282846,G__282847,G__282848,G__282849,G__282850,G__282851,G__282852,G__282853,G__282854,G__282855,G__282856,G__282857,G__282858,G__282859,G__282860,G__282861,G__282862,G__282863,G__282864,G__282865,G__282866,G__282867,G__282868,G__282869,G__282870,G__282871,G__282872,G__282873,G__282874,G__282875,G__282876,G__282877,G__282878,G__282879,G__282880,G__282881,G__282882,G__282883,G__282884,G__282885,G__282886,G__282887,G__282888,G__282889,G__282890,G__282891,G__282892,G__282893,G__282894,G__282895,G__282896,G__282897,G__282898,G__282899,G__282900,G__282901,G__282902,G__282903,G__282904,G__282905,G__282906,G__282907,G__282908,G__282909,G__282910,G__282911,G__282912,G__282913,G__282914,G__282915,G__282916,G__282917,G__282918,G__282919,G__282920,G__282921,G__282922,G__282923,G__282924,G__282925,G__282926,G__282927,G__282928,G__282929,G__282930,G__282931,G__282932,G__282933,G__282934,G__282935,G__282936,G__282937,G__282938,G__282939,G__282940,G__282941,G__282942,G__282943,G__282944,G__282945,G__282946,G__282947,G__282948,G__282949,G__282950,G__282951,G__282952,G__282953,G__282954,G__282955,G__282956,G__282957,G__282958,G__282959,G__282960,G__282961,G__282962,G__282963,G__282964,G__282965,G__282966,G__282967,G__282968,G__282969,G__282970,G__282971,G__282972,G__282973,G__282974,G__282975,G__282976,G__282977,G__282978,G__282979,G__282980,G__282981,G__282982,G__282983,G__282984,G__282985,G__282986,G__282987,G__282988,G__282989,G__282990,G__282991,G__282992,G__282993,G__282994,G__282995,G__282996,G__282997,G__282998,G__282999,G__283000,G__283001,G__283002,G__283003,G__283004,G__283005,G__283006,G__283007,G__283008,G__283009,G__283010,G__283011,G__283012,G__283013,G__283014,G__283015,G__283016,G__283017,G__283018,G__283019,G__283020,G__283021,G__283022,G__283023,G__283024,G__283025,G__283026,G__283027,G__283028,G__283029,G__283030,G__283031,G__283032,G__283033,G__283034,G__283035,G__283036,G__283037,G__283038,G__283039,G__283040,G__283041,G__283042,G__283043,G__283044,G__283045,G__283046,G__283047,G__283048,G__283049,G__283050,G__283051,G__283052,G__283053,G__283054,G__283055,G__283056,G__283057,G__283058,G__283059,G__283060,G__283061,G__283062,G__283063,G__283064,G__283065,G__283066,G__283067,G__283068,G__283069,G__283070,G__283071,G__283072,G__283073,G__283074,G__283075,G__283076,G__283077,G__283078,G__283079,G__283080,G__283081,G__283082,G__283083,G__283084,G__283085,G__283086,G__283087,G__283088,G__283089,G__283090,G__283091,G__283092,G__283093,G__283094,G__283095,G__283096,G__283097,G__283098,G__283099,G__283100,G__283101,G__283102,G__283103,G__283104,G__283105,G__283106,G__283107,G__283108,G__283109,G__283110,G__283111,G__283112,G__283113,G__283114,G__283115,G__283116,G__283117,G__283118,G__283119,G__283120,G__283121,G__283122,G__283123,G__283124,G__283125,G__283126,G__283127,G__283128,G__283129,G__283130,G__283131,G__283132,G__283133,G__283134,G__283135,G__283136,G__283137,G__283138,G__283139,G__283140,G__283141,G__283142,G__283143,G__283144,G__283145,G__283146,G__283147,G__283148,G__283149,G__283150,G__283151,G__283152,G__283153,G__283154,G__283155,G__283156,G__283157,G__283158,G__283159,G__283160,G__283161,G__283162,G__283163,G__283164,G__283165,G__283166,G__283167,G__283168,G__283169,G__283170,G__283171,G__283172,G__283173,G__283174,G__283175,G__283176,G__283177,G__283178,G__283179,G__283180,G__283181,G__283182,G__283183,G__283184,G__283185,G__283186,G__283187,G__283188,G__283189,G__283190,G__283191,G__283192,G__283193,G__283194,G__283195,G__283196,G__283197,G__283198,G__283199,G__283200,G__283201,G__283202,G__283203,G__283204,G__283205,G__283206,G__283207,G__283208,G__283209,G__283210,G__283211,G__283212,G__283213,G__283214,G__283215,G__283216,G__283217,G__283218,G__283219,G__283220,G__283221,G__283222,G__283223,G__283224,G__283225,G__283226,G__283227,G__283228,G__283229,G__283230,G__283231,G__283232,G__283233,G__283234,G__283235,G__283236,G__283237,G__283238,G__283239,G__283240,G__283241,G__283242,G__283243,G__283244,G__283245,G__283246,G__283247,G__283248,G__283249,G__283250,G__283251,G__283252,G__283253,G__283254,G__283255,G__283256,G__283257,G__283258,G__283259,G__283260,G__283261,G__283262,G__283263,G__283264,G__283265,G__283266,G__283267,G__283268,G__283269,G__283270,G__283271,G__283272,G__283273,G__283274,G__283275,G__283276,G__283277,G__283278,G__283279,G__283280,G__283281,G__283282,G__283283,G__283284,G__283285,G__283286,G__283287,G__283288,G__283289,G__283290,G__283291,G__283292,G__283293,G__283294,G__283295,G__283296,G__283297,G__283298,G__283299,G__283300,G__283301,G__283302,G__283303,G__283304,G__283305,G__283306));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__282791,G__282792) : tailrecursion.hoplon.div.call(null,G__282791,G__282792));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__282790) : tailrecursion.hoplon.div.call(null,G__282790));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_281749;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_281748;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_281747;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_281746;
}})()], 0)),"",(function (){var _STAR_references_STAR_283831 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_283832 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_283833 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_283834 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__283851 = (function (){var G__283852 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__283853 = (function (){var G__283854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__283855 = "(";
var G__283856 = (function (){var G__283862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__283863 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283862,G__283863) : tailrecursion.hoplon.span.call(null,G__283862,G__283863));
})();
var G__283857 = " ";
var G__283858 = (function (){var G__283864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283865 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283864,G__283865) : tailrecursion.hoplon.span.call(null,G__283864,G__283865));
})();
var G__283859 = " ";
var G__283860 = (function (){var G__283866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__283867 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__283866,G__283867) : tailrecursion.hoplon.span.call(null,G__283866,G__283867));
})();
var G__283861 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__283854,G__283855,G__283856,G__283857,G__283858,G__283859,G__283860,G__283861) : tailrecursion.hoplon.pre.call(null,G__283854,G__283855,G__283856,G__283857,G__283858,G__283859,G__283860,G__283861));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__283852,G__283853) : tailrecursion.hoplon.div.call(null,G__283852,G__283853));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__283851) : tailrecursion.hoplon.div.call(null,G__283851));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_283834;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_283833;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_283832;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_283831;
}})(),book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_283868 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_283869 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_283870 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_283871 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__284524 = (function (){var G__284525 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__284526 = (function (){var G__284527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__284528 = "(";
var G__284529 = (function (){var G__284849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284850 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284849,G__284850) : tailrecursion.hoplon.span.call(null,G__284849,G__284850));
})();
var G__284530 = " ";
var G__284531 = (function (){var G__284851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284852 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284851,G__284852) : tailrecursion.hoplon.span.call(null,G__284851,G__284852));
})();
var G__284532 = " ";
var G__284533 = (function (){var G__284853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284854 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284853,G__284854) : tailrecursion.hoplon.span.call(null,G__284853,G__284854));
})();
var G__284534 = ")\n(";
var G__284535 = (function (){var G__284855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284856 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284855,G__284856) : tailrecursion.hoplon.span.call(null,G__284855,G__284856));
})();
var G__284536 = " (";
var G__284537 = (function (){var G__284857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__284858 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284857,G__284858) : tailrecursion.hoplon.span.call(null,G__284857,G__284858));
})();
var G__284538 = (function (){var G__284859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284860 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284859,G__284860) : tailrecursion.hoplon.span.call(null,G__284859,G__284860));
})();
var G__284539 = " ";
var G__284540 = (function (){var G__284861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284862 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284861,G__284862) : tailrecursion.hoplon.span.call(null,G__284861,G__284862));
})();
var G__284541 = ") (";
var G__284542 = (function (){var G__284863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284864 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284863,G__284864) : tailrecursion.hoplon.span.call(null,G__284863,G__284864));
})();
var G__284543 = " ";
var G__284544 = (function (){var G__284865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284866 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284865,G__284866) : tailrecursion.hoplon.span.call(null,G__284865,G__284866));
})();
var G__284545 = " (";
var G__284546 = (function (){var G__284867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__284868 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284867,G__284868) : tailrecursion.hoplon.span.call(null,G__284867,G__284868));
})();
var G__284547 = (function (){var G__284869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284870 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284869,G__284870) : tailrecursion.hoplon.span.call(null,G__284869,G__284870));
})();
var G__284548 = " ";
var G__284549 = (function (){var G__284871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284872 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284871,G__284872) : tailrecursion.hoplon.span.call(null,G__284871,G__284872));
})();
var G__284550 = ")))\n(";
var G__284551 = (function (){var G__284873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284874 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284873,G__284874) : tailrecursion.hoplon.span.call(null,G__284873,G__284874));
})();
var G__284552 = " ";
var G__284553 = (function (){var G__284875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284876 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284875,G__284876) : tailrecursion.hoplon.span.call(null,G__284875,G__284876));
})();
var G__284554 = " (";
var G__284555 = (function (){var G__284877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284878 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284877,G__284878) : tailrecursion.hoplon.span.call(null,G__284877,G__284878));
})();
var G__284556 = " ";
var G__284557 = (function (){var G__284879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284880 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284879,G__284880) : tailrecursion.hoplon.span.call(null,G__284879,G__284880));
})();
var G__284558 = " ";
var G__284559 = (function (){var G__284881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284882 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284881,G__284882) : tailrecursion.hoplon.span.call(null,G__284881,G__284882));
})();
var G__284560 = "))\n(";
var G__284561 = (function (){var G__284883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284884 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284883,G__284884) : tailrecursion.hoplon.span.call(null,G__284883,G__284884));
})();
var G__284562 = " ";
var G__284563 = (function (){var G__284885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284886 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284885,G__284886) : tailrecursion.hoplon.span.call(null,G__284885,G__284886));
})();
var G__284564 = " (";
var G__284565 = (function (){var G__284887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284888 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284887,G__284888) : tailrecursion.hoplon.span.call(null,G__284887,G__284888));
})();
var G__284566 = " (";
var G__284567 = (function (){var G__284889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__284890 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284889,G__284890) : tailrecursion.hoplon.span.call(null,G__284889,G__284890));
})();
var G__284568 = (function (){var G__284891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284892 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284891,G__284892) : tailrecursion.hoplon.span.call(null,G__284891,G__284892));
})();
var G__284569 = " ";
var G__284570 = (function (){var G__284893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284894 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284893,G__284894) : tailrecursion.hoplon.span.call(null,G__284893,G__284894));
})();
var G__284571 = ") (";
var G__284572 = (function (){var G__284895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284896 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284895,G__284896) : tailrecursion.hoplon.span.call(null,G__284895,G__284896));
})();
var G__284573 = " ";
var G__284574 = (function (){var G__284897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284898 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284897,G__284898) : tailrecursion.hoplon.span.call(null,G__284897,G__284898));
})();
var G__284575 = " (";
var G__284576 = (function (){var G__284899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__284900 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284899,G__284900) : tailrecursion.hoplon.span.call(null,G__284899,G__284900));
})();
var G__284577 = (function (){var G__284901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284902 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284901,G__284902) : tailrecursion.hoplon.span.call(null,G__284901,G__284902));
})();
var G__284578 = " ";
var G__284579 = (function (){var G__284903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284904 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284903,G__284904) : tailrecursion.hoplon.span.call(null,G__284903,G__284904));
})();
var G__284580 = "))))\n(";
var G__284581 = (function (){var G__284905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284906 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284905,G__284906) : tailrecursion.hoplon.span.call(null,G__284905,G__284906));
})();
var G__284582 = " ";
var G__284583 = (function (){var G__284907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284908 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284907,G__284908) : tailrecursion.hoplon.span.call(null,G__284907,G__284908));
})();
var G__284584 = " (";
var G__284585 = (function (){var G__284909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284910 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284909,G__284910) : tailrecursion.hoplon.span.call(null,G__284909,G__284910));
})();
var G__284586 = " ";
var G__284587 = (function (){var G__284911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284912 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284911,G__284912) : tailrecursion.hoplon.span.call(null,G__284911,G__284912));
})();
var G__284588 = " (";
var G__284589 = (function (){var G__284913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284914 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284913,G__284914) : tailrecursion.hoplon.span.call(null,G__284913,G__284914));
})();
var G__284590 = " ";
var G__284591 = (function (){var G__284915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284916 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284915,G__284916) : tailrecursion.hoplon.span.call(null,G__284915,G__284916));
})();
var G__284592 = " ";
var G__284593 = (function (){var G__284917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284918 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284917,G__284918) : tailrecursion.hoplon.span.call(null,G__284917,G__284918));
})();
var G__284594 = ")))\n(";
var G__284595 = (function (){var G__284919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284920 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284919,G__284920) : tailrecursion.hoplon.span.call(null,G__284919,G__284920));
})();
var G__284596 = " ";
var G__284597 = (function (){var G__284921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284922 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284921,G__284922) : tailrecursion.hoplon.span.call(null,G__284921,G__284922));
})();
var G__284598 = " (";
var G__284599 = (function (){var G__284923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284924 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284923,G__284924) : tailrecursion.hoplon.span.call(null,G__284923,G__284924));
})();
var G__284600 = " ";
var G__284601 = (function (){var G__284925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284926 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284925,G__284926) : tailrecursion.hoplon.span.call(null,G__284925,G__284926));
})();
var G__284602 = " (";
var G__284603 = (function (){var G__284927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284928 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284927,G__284928) : tailrecursion.hoplon.span.call(null,G__284927,G__284928));
})();
var G__284604 = " (";
var G__284605 = (function (){var G__284929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__284930 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284929,G__284930) : tailrecursion.hoplon.span.call(null,G__284929,G__284930));
})();
var G__284606 = (function (){var G__284931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284932 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284931,G__284932) : tailrecursion.hoplon.span.call(null,G__284931,G__284932));
})();
var G__284607 = " ";
var G__284608 = (function (){var G__284933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284934 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284933,G__284934) : tailrecursion.hoplon.span.call(null,G__284933,G__284934));
})();
var G__284609 = ") (";
var G__284610 = (function (){var G__284935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284936 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284935,G__284936) : tailrecursion.hoplon.span.call(null,G__284935,G__284936));
})();
var G__284611 = " ";
var G__284612 = (function (){var G__284937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284938 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284937,G__284938) : tailrecursion.hoplon.span.call(null,G__284937,G__284938));
})();
var G__284613 = " (";
var G__284614 = (function (){var G__284939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__284940 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284939,G__284940) : tailrecursion.hoplon.span.call(null,G__284939,G__284940));
})();
var G__284615 = (function (){var G__284941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284942 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284941,G__284942) : tailrecursion.hoplon.span.call(null,G__284941,G__284942));
})();
var G__284616 = " ";
var G__284617 = (function (){var G__284943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284944 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284943,G__284944) : tailrecursion.hoplon.span.call(null,G__284943,G__284944));
})();
var G__284618 = ")))))\n(";
var G__284619 = (function (){var G__284945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284946 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284945,G__284946) : tailrecursion.hoplon.span.call(null,G__284945,G__284946));
})();
var G__284620 = " ";
var G__284621 = (function (){var G__284947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284948 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284947,G__284948) : tailrecursion.hoplon.span.call(null,G__284947,G__284948));
})();
var G__284622 = " (";
var G__284623 = (function (){var G__284949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284950 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284949,G__284950) : tailrecursion.hoplon.span.call(null,G__284949,G__284950));
})();
var G__284624 = " ";
var G__284625 = (function (){var G__284951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284952 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284951,G__284952) : tailrecursion.hoplon.span.call(null,G__284951,G__284952));
})();
var G__284626 = " (";
var G__284627 = (function (){var G__284953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284954 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284953,G__284954) : tailrecursion.hoplon.span.call(null,G__284953,G__284954));
})();
var G__284628 = " ";
var G__284629 = (function (){var G__284955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284956 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284955,G__284956) : tailrecursion.hoplon.span.call(null,G__284955,G__284956));
})();
var G__284630 = " (";
var G__284631 = (function (){var G__284957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284958 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284957,G__284958) : tailrecursion.hoplon.span.call(null,G__284957,G__284958));
})();
var G__284632 = " ";
var G__284633 = (function (){var G__284959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284960 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284959,G__284960) : tailrecursion.hoplon.span.call(null,G__284959,G__284960));
})();
var G__284634 = " ";
var G__284635 = (function (){var G__284961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284962 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284961,G__284962) : tailrecursion.hoplon.span.call(null,G__284961,G__284962));
})();
var G__284636 = "))))\n(";
var G__284637 = (function (){var G__284963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284964 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284963,G__284964) : tailrecursion.hoplon.span.call(null,G__284963,G__284964));
})();
var G__284638 = " ";
var G__284639 = (function (){var G__284965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284966 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284965,G__284966) : tailrecursion.hoplon.span.call(null,G__284965,G__284966));
})();
var G__284640 = " (";
var G__284641 = (function (){var G__284967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284968 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284967,G__284968) : tailrecursion.hoplon.span.call(null,G__284967,G__284968));
})();
var G__284642 = " ";
var G__284643 = (function (){var G__284969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284970 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284969,G__284970) : tailrecursion.hoplon.span.call(null,G__284969,G__284970));
})();
var G__284644 = " (";
var G__284645 = (function (){var G__284971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284972 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284971,G__284972) : tailrecursion.hoplon.span.call(null,G__284971,G__284972));
})();
var G__284646 = " ";
var G__284647 = (function (){var G__284973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284974 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284973,G__284974) : tailrecursion.hoplon.span.call(null,G__284973,G__284974));
})();
var G__284648 = " ";
var G__284649 = (function (){var G__284975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284976 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284975,G__284976) : tailrecursion.hoplon.span.call(null,G__284975,G__284976));
})();
var G__284650 = ")))\n(";
var G__284651 = (function (){var G__284977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284978 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284977,G__284978) : tailrecursion.hoplon.span.call(null,G__284977,G__284978));
})();
var G__284652 = " ";
var G__284653 = (function (){var G__284979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284980 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284979,G__284980) : tailrecursion.hoplon.span.call(null,G__284979,G__284980));
})();
var G__284654 = " (";
var G__284655 = (function (){var G__284981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284982 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284981,G__284982) : tailrecursion.hoplon.span.call(null,G__284981,G__284982));
})();
var G__284656 = " ";
var G__284657 = (function (){var G__284983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284984 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284983,G__284984) : tailrecursion.hoplon.span.call(null,G__284983,G__284984));
})();
var G__284658 = " (";
var G__284659 = (function (){var G__284985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284986 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284985,G__284986) : tailrecursion.hoplon.span.call(null,G__284985,G__284986));
})();
var G__284660 = " (";
var G__284661 = (function (){var G__284987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__284988 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284987,G__284988) : tailrecursion.hoplon.span.call(null,G__284987,G__284988));
})();
var G__284662 = (function (){var G__284989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284990 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284989,G__284990) : tailrecursion.hoplon.span.call(null,G__284989,G__284990));
})();
var G__284663 = " ";
var G__284664 = (function (){var G__284991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284992 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284991,G__284992) : tailrecursion.hoplon.span.call(null,G__284991,G__284992));
})();
var G__284665 = ") (";
var G__284666 = (function (){var G__284993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__284994 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284993,G__284994) : tailrecursion.hoplon.span.call(null,G__284993,G__284994));
})();
var G__284667 = " ";
var G__284668 = (function (){var G__284995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__284996 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284995,G__284996) : tailrecursion.hoplon.span.call(null,G__284995,G__284996));
})();
var G__284669 = " (";
var G__284670 = (function (){var G__284997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__284998 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284997,G__284998) : tailrecursion.hoplon.span.call(null,G__284997,G__284998));
})();
var G__284671 = (function (){var G__284999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285000 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__284999,G__285000) : tailrecursion.hoplon.span.call(null,G__284999,G__285000));
})();
var G__284672 = " ";
var G__284673 = (function (){var G__285001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285002 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285001,G__285002) : tailrecursion.hoplon.span.call(null,G__285001,G__285002));
})();
var G__284674 = ")))))\n(";
var G__284675 = (function (){var G__285003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285004 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285003,G__285004) : tailrecursion.hoplon.span.call(null,G__285003,G__285004));
})();
var G__284676 = " ";
var G__284677 = (function (){var G__285005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285006 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285005,G__285006) : tailrecursion.hoplon.span.call(null,G__285005,G__285006));
})();
var G__284678 = " (";
var G__284679 = (function (){var G__285007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285008 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285007,G__285008) : tailrecursion.hoplon.span.call(null,G__285007,G__285008));
})();
var G__284680 = " ";
var G__284681 = (function (){var G__285009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285010 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285009,G__285010) : tailrecursion.hoplon.span.call(null,G__285009,G__285010));
})();
var G__284682 = " (";
var G__284683 = (function (){var G__285011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285012 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285011,G__285012) : tailrecursion.hoplon.span.call(null,G__285011,G__285012));
})();
var G__284684 = " ";
var G__284685 = (function (){var G__285013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285014 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285013,G__285014) : tailrecursion.hoplon.span.call(null,G__285013,G__285014));
})();
var G__284686 = " (";
var G__284687 = (function (){var G__285015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285016 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285015,G__285016) : tailrecursion.hoplon.span.call(null,G__285015,G__285016));
})();
var G__284688 = " ";
var G__284689 = (function (){var G__285017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285018 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285017,G__285018) : tailrecursion.hoplon.span.call(null,G__285017,G__285018));
})();
var G__284690 = " ";
var G__284691 = (function (){var G__285019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285020 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285019,G__285020) : tailrecursion.hoplon.span.call(null,G__285019,G__285020));
})();
var G__284692 = "))))\n(";
var G__284693 = (function (){var G__285021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285022 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285021,G__285022) : tailrecursion.hoplon.span.call(null,G__285021,G__285022));
})();
var G__284694 = " ";
var G__284695 = (function (){var G__285023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285024 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285023,G__285024) : tailrecursion.hoplon.span.call(null,G__285023,G__285024));
})();
var G__284696 = " (";
var G__284697 = (function (){var G__285025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285026 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285025,G__285026) : tailrecursion.hoplon.span.call(null,G__285025,G__285026));
})();
var G__284698 = " ";
var G__284699 = (function (){var G__285027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285028 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285027,G__285028) : tailrecursion.hoplon.span.call(null,G__285027,G__285028));
})();
var G__284700 = " (";
var G__284701 = (function (){var G__285029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285030 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285029,G__285030) : tailrecursion.hoplon.span.call(null,G__285029,G__285030));
})();
var G__284702 = " ";
var G__284703 = (function (){var G__285031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285032 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285031,G__285032) : tailrecursion.hoplon.span.call(null,G__285031,G__285032));
})();
var G__284704 = " ";
var G__284705 = (function (){var G__285033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285034 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285033,G__285034) : tailrecursion.hoplon.span.call(null,G__285033,G__285034));
})();
var G__284706 = ")))\n(";
var G__284707 = (function (){var G__285035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285036 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285035,G__285036) : tailrecursion.hoplon.span.call(null,G__285035,G__285036));
})();
var G__284708 = " ";
var G__284709 = (function (){var G__285037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285038 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285037,G__285038) : tailrecursion.hoplon.span.call(null,G__285037,G__285038));
})();
var G__284710 = " (";
var G__284711 = (function (){var G__285039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285040 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285039,G__285040) : tailrecursion.hoplon.span.call(null,G__285039,G__285040));
})();
var G__284712 = " ";
var G__284713 = (function (){var G__285041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285042 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285041,G__285042) : tailrecursion.hoplon.span.call(null,G__285041,G__285042));
})();
var G__284714 = " ";
var G__284715 = (function (){var G__285043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285044 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285043,G__285044) : tailrecursion.hoplon.span.call(null,G__285043,G__285044));
})();
var G__284716 = "))\n(";
var G__284717 = (function (){var G__285045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285046 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285045,G__285046) : tailrecursion.hoplon.span.call(null,G__285045,G__285046));
})();
var G__284718 = " ";
var G__284719 = (function (){var G__285047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285048 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285047,G__285048) : tailrecursion.hoplon.span.call(null,G__285047,G__285048));
})();
var G__284720 = " (";
var G__284721 = (function (){var G__285049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285050 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285049,G__285050) : tailrecursion.hoplon.span.call(null,G__285049,G__285050));
})();
var G__284722 = " ";
var G__284723 = (function (){var G__285051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285052 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285051,G__285052) : tailrecursion.hoplon.span.call(null,G__285051,G__285052));
})();
var G__284724 = " (";
var G__284725 = (function (){var G__285053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285054 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285053,G__285054) : tailrecursion.hoplon.span.call(null,G__285053,G__285054));
})();
var G__284726 = " ";
var G__284727 = (function (){var G__285055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285056 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285055,G__285056) : tailrecursion.hoplon.span.call(null,G__285055,G__285056));
})();
var G__284728 = " ";
var G__284729 = (function (){var G__285057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285058 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285057,G__285058) : tailrecursion.hoplon.span.call(null,G__285057,G__285058));
})();
var G__284730 = ")))\n(";
var G__284731 = (function (){var G__285059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285060 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285059,G__285060) : tailrecursion.hoplon.span.call(null,G__285059,G__285060));
})();
var G__284732 = " ";
var G__284733 = (function (){var G__285061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285062 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285061,G__285062) : tailrecursion.hoplon.span.call(null,G__285061,G__285062));
})();
var G__284734 = " (";
var G__284735 = (function (){var G__285063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285064 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285063,G__285064) : tailrecursion.hoplon.span.call(null,G__285063,G__285064));
})();
var G__284736 = " ";
var G__284737 = (function (){var G__285065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285066 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285065,G__285066) : tailrecursion.hoplon.span.call(null,G__285065,G__285066));
})();
var G__284738 = " (";
var G__284739 = (function (){var G__285067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285068 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285067,G__285068) : tailrecursion.hoplon.span.call(null,G__285067,G__285068));
})();
var G__284740 = " ";
var G__284741 = (function (){var G__285069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285070 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285069,G__285070) : tailrecursion.hoplon.span.call(null,G__285069,G__285070));
})();
var G__284742 = " (";
var G__284743 = (function (){var G__285071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285072 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285071,G__285072) : tailrecursion.hoplon.span.call(null,G__285071,G__285072));
})();
var G__284744 = " ";
var G__284745 = (function (){var G__285073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285074 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285073,G__285074) : tailrecursion.hoplon.span.call(null,G__285073,G__285074));
})();
var G__284746 = " ";
var G__284747 = (function (){var G__285075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285076 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285075,G__285076) : tailrecursion.hoplon.span.call(null,G__285075,G__285076));
})();
var G__284748 = "))))\n(";
var G__284749 = (function (){var G__285077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285078 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285077,G__285078) : tailrecursion.hoplon.span.call(null,G__285077,G__285078));
})();
var G__284750 = " ";
var G__284751 = (function (){var G__285079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285080 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285079,G__285080) : tailrecursion.hoplon.span.call(null,G__285079,G__285080));
})();
var G__284752 = " (";
var G__284753 = (function (){var G__285081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285082 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285081,G__285082) : tailrecursion.hoplon.span.call(null,G__285081,G__285082));
})();
var G__284754 = " ";
var G__284755 = (function (){var G__285083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285084 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285083,G__285084) : tailrecursion.hoplon.span.call(null,G__285083,G__285084));
})();
var G__284756 = " (";
var G__284757 = (function (){var G__285085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285086 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285085,G__285086) : tailrecursion.hoplon.span.call(null,G__285085,G__285086));
})();
var G__284758 = " ";
var G__284759 = (function (){var G__285087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285088 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285087,G__285088) : tailrecursion.hoplon.span.call(null,G__285087,G__285088));
})();
var G__284760 = " (";
var G__284761 = (function (){var G__285089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285090 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285089,G__285090) : tailrecursion.hoplon.span.call(null,G__285089,G__285090));
})();
var G__284762 = " ";
var G__284763 = (function (){var G__285091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285092 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285091,G__285092) : tailrecursion.hoplon.span.call(null,G__285091,G__285092));
})();
var G__284764 = " (";
var G__284765 = (function (){var G__285093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285094 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285093,G__285094) : tailrecursion.hoplon.span.call(null,G__285093,G__285094));
})();
var G__284766 = " ";
var G__284767 = (function (){var G__285095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285096 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285095,G__285096) : tailrecursion.hoplon.span.call(null,G__285095,G__285096));
})();
var G__284768 = " ";
var G__284769 = (function (){var G__285097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285098 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285097,G__285098) : tailrecursion.hoplon.span.call(null,G__285097,G__285098));
})();
var G__284770 = ")))))\n(";
var G__284771 = (function (){var G__285099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285100 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285099,G__285100) : tailrecursion.hoplon.span.call(null,G__285099,G__285100));
})();
var G__284772 = " ";
var G__284773 = (function (){var G__285101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285102 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285101,G__285102) : tailrecursion.hoplon.span.call(null,G__285101,G__285102));
})();
var G__284774 = " (";
var G__284775 = (function (){var G__285103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285104 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285103,G__285104) : tailrecursion.hoplon.span.call(null,G__285103,G__285104));
})();
var G__284776 = " ";
var G__284777 = (function (){var G__285105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285106 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285105,G__285106) : tailrecursion.hoplon.span.call(null,G__285105,G__285106));
})();
var G__284778 = " (";
var G__284779 = (function (){var G__285107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285108 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285107,G__285108) : tailrecursion.hoplon.span.call(null,G__285107,G__285108));
})();
var G__284780 = " ";
var G__284781 = (function (){var G__285109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285110 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285109,G__285110) : tailrecursion.hoplon.span.call(null,G__285109,G__285110));
})();
var G__284782 = " (";
var G__284783 = (function (){var G__285111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285112 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285111,G__285112) : tailrecursion.hoplon.span.call(null,G__285111,G__285112));
})();
var G__284784 = " ";
var G__284785 = (function (){var G__285113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285114 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285113,G__285114) : tailrecursion.hoplon.span.call(null,G__285113,G__285114));
})();
var G__284786 = " ";
var G__284787 = (function (){var G__285115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285116 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285115,G__285116) : tailrecursion.hoplon.span.call(null,G__285115,G__285116));
})();
var G__284788 = "))))\n(";
var G__284789 = (function (){var G__285117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285118 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285117,G__285118) : tailrecursion.hoplon.span.call(null,G__285117,G__285118));
})();
var G__284790 = " ";
var G__284791 = (function (){var G__285119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285120 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285119,G__285120) : tailrecursion.hoplon.span.call(null,G__285119,G__285120));
})();
var G__284792 = " (";
var G__284793 = (function (){var G__285121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285122 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285121,G__285122) : tailrecursion.hoplon.span.call(null,G__285121,G__285122));
})();
var G__284794 = " ";
var G__284795 = (function (){var G__285123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285124 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285123,G__285124) : tailrecursion.hoplon.span.call(null,G__285123,G__285124));
})();
var G__284796 = " (";
var G__284797 = (function (){var G__285125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285126 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285125,G__285126) : tailrecursion.hoplon.span.call(null,G__285125,G__285126));
})();
var G__284798 = " ";
var G__284799 = (function (){var G__285127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285128 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285127,G__285128) : tailrecursion.hoplon.span.call(null,G__285127,G__285128));
})();
var G__284800 = " ";
var G__284801 = (function (){var G__285129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285130 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285129,G__285130) : tailrecursion.hoplon.span.call(null,G__285129,G__285130));
})();
var G__284802 = ")))\n(";
var G__284803 = (function (){var G__285131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285132 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285131,G__285132) : tailrecursion.hoplon.span.call(null,G__285131,G__285132));
})();
var G__284804 = " ";
var G__284805 = (function (){var G__285133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285134 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285133,G__285134) : tailrecursion.hoplon.span.call(null,G__285133,G__285134));
})();
var G__284806 = " (";
var G__284807 = (function (){var G__285135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285136 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285135,G__285136) : tailrecursion.hoplon.span.call(null,G__285135,G__285136));
})();
var G__284808 = " ";
var G__284809 = (function (){var G__285137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285138 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285137,G__285138) : tailrecursion.hoplon.span.call(null,G__285137,G__285138));
})();
var G__284810 = " ";
var G__284811 = (function (){var G__285139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285140 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285139,G__285140) : tailrecursion.hoplon.span.call(null,G__285139,G__285140));
})();
var G__284812 = "))\n(";
var G__284813 = (function (){var G__285141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285142 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285141,G__285142) : tailrecursion.hoplon.span.call(null,G__285141,G__285142));
})();
var G__284814 = " ";
var G__284815 = (function (){var G__285143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285144 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285143,G__285144) : tailrecursion.hoplon.span.call(null,G__285143,G__285144));
})();
var G__284816 = " ";
var G__284817 = (function (){var G__285145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285146 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285145,G__285146) : tailrecursion.hoplon.span.call(null,G__285145,G__285146));
})();
var G__284818 = ")\n(";
var G__284819 = (function (){var G__285147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285148 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285147,G__285148) : tailrecursion.hoplon.span.call(null,G__285147,G__285148));
})();
var G__284820 = " ";
var G__284821 = (function (){var G__285149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285150 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285149,G__285150) : tailrecursion.hoplon.span.call(null,G__285149,G__285150));
})();
var G__284822 = " (";
var G__284823 = (function (){var G__285151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285152 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285151,G__285152) : tailrecursion.hoplon.span.call(null,G__285151,G__285152));
})();
var G__284824 = " ";
var G__284825 = (function (){var G__285153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285154 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285153,G__285154) : tailrecursion.hoplon.span.call(null,G__285153,G__285154));
})();
var G__284826 = " ";
var G__284827 = (function (){var G__285155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285156 = "15";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285155,G__285156) : tailrecursion.hoplon.span.call(null,G__285155,G__285156));
})();
var G__284828 = "))\n(";
var G__284829 = (function (){var G__285157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285158 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285157,G__285158) : tailrecursion.hoplon.span.call(null,G__285157,G__285158));
})();
var G__284830 = " ";
var G__284831 = (function (){var G__285159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285160 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285159,G__285160) : tailrecursion.hoplon.span.call(null,G__285159,G__285160));
})();
var G__284832 = " (";
var G__284833 = (function (){var G__285161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285162 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285161,G__285162) : tailrecursion.hoplon.span.call(null,G__285161,G__285162));
})();
var G__284834 = " ";
var G__284835 = (function (){var G__285163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285164 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285163,G__285164) : tailrecursion.hoplon.span.call(null,G__285163,G__285164));
})();
var G__284836 = " (";
var G__284837 = (function (){var G__285165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285166 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285165,G__285166) : tailrecursion.hoplon.span.call(null,G__285165,G__285166));
})();
var G__284838 = " ";
var G__284839 = (function (){var G__285167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285168 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285167,G__285168) : tailrecursion.hoplon.span.call(null,G__285167,G__285168));
})();
var G__284840 = " ";
var G__284841 = (function (){var G__285169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285170 = "14";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285169,G__285170) : tailrecursion.hoplon.span.call(null,G__285169,G__285170));
})();
var G__284842 = ")))\n";
var G__284843 = (function (){var G__285171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__285172 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285171,G__285172) : tailrecursion.hoplon.span.call(null,G__285171,G__285172));
})();
var G__284844 = "\n";
var G__284845 = (function (){var G__285173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285174 = "65";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285173,G__285174) : tailrecursion.hoplon.span.call(null,G__285173,G__285174));
})();
var G__284846 = ",";
var G__284847 = (function (){var G__285175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285176 = "536";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285175,G__285176) : tailrecursion.hoplon.span.call(null,G__285175,G__285176));
})();
var G__284848 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$322 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$322(G__284527,G__284528,G__284529,G__284530,G__284531,G__284532,G__284533,G__284534,G__284535,G__284536,G__284537,G__284538,G__284539,G__284540,G__284541,G__284542,G__284543,G__284544,G__284545,G__284546,G__284547,G__284548,G__284549,G__284550,G__284551,G__284552,G__284553,G__284554,G__284555,G__284556,G__284557,G__284558,G__284559,G__284560,G__284561,G__284562,G__284563,G__284564,G__284565,G__284566,G__284567,G__284568,G__284569,G__284570,G__284571,G__284572,G__284573,G__284574,G__284575,G__284576,G__284577,G__284578,G__284579,G__284580,G__284581,G__284582,G__284583,G__284584,G__284585,G__284586,G__284587,G__284588,G__284589,G__284590,G__284591,G__284592,G__284593,G__284594,G__284595,G__284596,G__284597,G__284598,G__284599,G__284600,G__284601,G__284602,G__284603,G__284604,G__284605,G__284606,G__284607,G__284608,G__284609,G__284610,G__284611,G__284612,G__284613,G__284614,G__284615,G__284616,G__284617,G__284618,G__284619,G__284620,G__284621,G__284622,G__284623,G__284624,G__284625,G__284626,G__284627,G__284628,G__284629,G__284630,G__284631,G__284632,G__284633,G__284634,G__284635,G__284636,G__284637,G__284638,G__284639,G__284640,G__284641,G__284642,G__284643,G__284644,G__284645,G__284646,G__284647,G__284648,G__284649,G__284650,G__284651,G__284652,G__284653,G__284654,G__284655,G__284656,G__284657,G__284658,G__284659,G__284660,G__284661,G__284662,G__284663,G__284664,G__284665,G__284666,G__284667,G__284668,G__284669,G__284670,G__284671,G__284672,G__284673,G__284674,G__284675,G__284676,G__284677,G__284678,G__284679,G__284680,G__284681,G__284682,G__284683,G__284684,G__284685,G__284686,G__284687,G__284688,G__284689,G__284690,G__284691,G__284692,G__284693,G__284694,G__284695,G__284696,G__284697,G__284698,G__284699,G__284700,G__284701,G__284702,G__284703,G__284704,G__284705,G__284706,G__284707,G__284708,G__284709,G__284710,G__284711,G__284712,G__284713,G__284714,G__284715,G__284716,G__284717,G__284718,G__284719,G__284720,G__284721,G__284722,G__284723,G__284724,G__284725,G__284726,G__284727,G__284728,G__284729,G__284730,G__284731,G__284732,G__284733,G__284734,G__284735,G__284736,G__284737,G__284738,G__284739,G__284740,G__284741,G__284742,G__284743,G__284744,G__284745,G__284746,G__284747,G__284748,G__284749,G__284750,G__284751,G__284752,G__284753,G__284754,G__284755,G__284756,G__284757,G__284758,G__284759,G__284760,G__284761,G__284762,G__284763,G__284764,G__284765,G__284766,G__284767,G__284768,G__284769,G__284770,G__284771,G__284772,G__284773,G__284774,G__284775,G__284776,G__284777,G__284778,G__284779,G__284780,G__284781,G__284782,G__284783,G__284784,G__284785,G__284786,G__284787,G__284788,G__284789,G__284790,G__284791,G__284792,G__284793,G__284794,G__284795,G__284796,G__284797,G__284798,G__284799,G__284800,G__284801,G__284802,G__284803,G__284804,G__284805,G__284806,G__284807,G__284808,G__284809,G__284810,G__284811,G__284812,G__284813,G__284814,G__284815,G__284816,G__284817,G__284818,G__284819,G__284820,G__284821,G__284822,G__284823,G__284824,G__284825,G__284826,G__284827,G__284828,G__284829,G__284830,G__284831,G__284832,G__284833,G__284834,G__284835,G__284836,G__284837,G__284838,G__284839,G__284840,G__284841,G__284842,G__284843,G__284844,G__284845,G__284846,G__284847,G__284848) : tailrecursion.hoplon.pre.call(null,G__284527,G__284528,G__284529,G__284530,G__284531,G__284532,G__284533,G__284534,G__284535,G__284536,G__284537,G__284538,G__284539,G__284540,G__284541,G__284542,G__284543,G__284544,G__284545,G__284546,G__284547,G__284548,G__284549,G__284550,G__284551,G__284552,G__284553,G__284554,G__284555,G__284556,G__284557,G__284558,G__284559,G__284560,G__284561,G__284562,G__284563,G__284564,G__284565,G__284566,G__284567,G__284568,G__284569,G__284570,G__284571,G__284572,G__284573,G__284574,G__284575,G__284576,G__284577,G__284578,G__284579,G__284580,G__284581,G__284582,G__284583,G__284584,G__284585,G__284586,G__284587,G__284588,G__284589,G__284590,G__284591,G__284592,G__284593,G__284594,G__284595,G__284596,G__284597,G__284598,G__284599,G__284600,G__284601,G__284602,G__284603,G__284604,G__284605,G__284606,G__284607,G__284608,G__284609,G__284610,G__284611,G__284612,G__284613,G__284614,G__284615,G__284616,G__284617,G__284618,G__284619,G__284620,G__284621,G__284622,G__284623,G__284624,G__284625,G__284626,G__284627,G__284628,G__284629,G__284630,G__284631,G__284632,G__284633,G__284634,G__284635,G__284636,G__284637,G__284638,G__284639,G__284640,G__284641,G__284642,G__284643,G__284644,G__284645,G__284646,G__284647,G__284648,G__284649,G__284650,G__284651,G__284652,G__284653,G__284654,G__284655,G__284656,G__284657,G__284658,G__284659,G__284660,G__284661,G__284662,G__284663,G__284664,G__284665,G__284666,G__284667,G__284668,G__284669,G__284670,G__284671,G__284672,G__284673,G__284674,G__284675,G__284676,G__284677,G__284678,G__284679,G__284680,G__284681,G__284682,G__284683,G__284684,G__284685,G__284686,G__284687,G__284688,G__284689,G__284690,G__284691,G__284692,G__284693,G__284694,G__284695,G__284696,G__284697,G__284698,G__284699,G__284700,G__284701,G__284702,G__284703,G__284704,G__284705,G__284706,G__284707,G__284708,G__284709,G__284710,G__284711,G__284712,G__284713,G__284714,G__284715,G__284716,G__284717,G__284718,G__284719,G__284720,G__284721,G__284722,G__284723,G__284724,G__284725,G__284726,G__284727,G__284728,G__284729,G__284730,G__284731,G__284732,G__284733,G__284734,G__284735,G__284736,G__284737,G__284738,G__284739,G__284740,G__284741,G__284742,G__284743,G__284744,G__284745,G__284746,G__284747,G__284748,G__284749,G__284750,G__284751,G__284752,G__284753,G__284754,G__284755,G__284756,G__284757,G__284758,G__284759,G__284760,G__284761,G__284762,G__284763,G__284764,G__284765,G__284766,G__284767,G__284768,G__284769,G__284770,G__284771,G__284772,G__284773,G__284774,G__284775,G__284776,G__284777,G__284778,G__284779,G__284780,G__284781,G__284782,G__284783,G__284784,G__284785,G__284786,G__284787,G__284788,G__284789,G__284790,G__284791,G__284792,G__284793,G__284794,G__284795,G__284796,G__284797,G__284798,G__284799,G__284800,G__284801,G__284802,G__284803,G__284804,G__284805,G__284806,G__284807,G__284808,G__284809,G__284810,G__284811,G__284812,G__284813,G__284814,G__284815,G__284816,G__284817,G__284818,G__284819,G__284820,G__284821,G__284822,G__284823,G__284824,G__284825,G__284826,G__284827,G__284828,G__284829,G__284830,G__284831,G__284832,G__284833,G__284834,G__284835,G__284836,G__284837,G__284838,G__284839,G__284840,G__284841,G__284842,G__284843,G__284844,G__284845,G__284846,G__284847,G__284848));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__284525,G__284526) : tailrecursion.hoplon.div.call(null,G__284525,G__284526));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__284524) : tailrecursion.hoplon.div.call(null,G__284524));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_283871;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_283870;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_283869;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_283868;
}})()], 0)),(function (){var _STAR_references_STAR_285177 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_285178 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_285179 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_285180 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__285197 = (function (){var G__285198 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__285199 = (function (){var G__285200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__285201 = "(";
var G__285202 = (function (){var G__285208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__285209 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285208,G__285209) : tailrecursion.hoplon.span.call(null,G__285208,G__285209));
})();
var G__285203 = " ";
var G__285204 = (function (){var G__285210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285211 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285210,G__285211) : tailrecursion.hoplon.span.call(null,G__285210,G__285211));
})();
var G__285205 = " ";
var G__285206 = (function (){var G__285212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__285213 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__285212,G__285213) : tailrecursion.hoplon.span.call(null,G__285212,G__285213));
})();
var G__285207 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__285200,G__285201,G__285202,G__285203,G__285204,G__285205,G__285206,G__285207) : tailrecursion.hoplon.pre.call(null,G__285200,G__285201,G__285202,G__285203,G__285204,G__285205,G__285206,G__285207));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__285198,G__285199) : tailrecursion.hoplon.div.call(null,G__285198,G__285199));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__285197) : tailrecursion.hoplon.div.call(null,G__285197));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_285180;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_285179;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_285178;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_285177;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_285214 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_285215 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_285216 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_285217 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__285822 = (function (){var G__285823 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__285824 = (function (){var G__285825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__285826 = "(";
var G__285827 = (function (){var G__286127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286128 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286127,G__286128) : tailrecursion.hoplon.span.call(null,G__286127,G__286128));
})();
var G__285828 = " ";
var G__285829 = (function (){var G__286129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286130 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286129,G__286130) : tailrecursion.hoplon.span.call(null,G__286129,G__286130));
})();
var G__285830 = " ";
var G__285831 = (function (){var G__286131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286132 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286131,G__286132) : tailrecursion.hoplon.span.call(null,G__286131,G__286132));
})();
var G__285832 = ")\n(";
var G__285833 = (function (){var G__286133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286134 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286133,G__286134) : tailrecursion.hoplon.span.call(null,G__286133,G__286134));
})();
var G__285834 = " ";
var G__285835 = (function (){var G__286135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286136 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286135,G__286136) : tailrecursion.hoplon.span.call(null,G__286135,G__286136));
})();
var G__285836 = " (";
var G__285837 = (function (){var G__286137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286138 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286137,G__286138) : tailrecursion.hoplon.span.call(null,G__286137,G__286138));
})();
var G__285838 = " ";
var G__285839 = (function (){var G__286139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286140 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286139,G__286140) : tailrecursion.hoplon.span.call(null,G__286139,G__286140));
})();
var G__285840 = " ";
var G__285841 = (function (){var G__286141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286142 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286141,G__286142) : tailrecursion.hoplon.span.call(null,G__286141,G__286142));
})();
var G__285842 = "))\n(";
var G__285843 = (function (){var G__286143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286144 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286143,G__286144) : tailrecursion.hoplon.span.call(null,G__286143,G__286144));
})();
var G__285844 = " ";
var G__285845 = (function (){var G__286145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286146 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286145,G__286146) : tailrecursion.hoplon.span.call(null,G__286145,G__286146));
})();
var G__285846 = " (";
var G__285847 = (function (){var G__286147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286148 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286147,G__286148) : tailrecursion.hoplon.span.call(null,G__286147,G__286148));
})();
var G__285848 = " ";
var G__285849 = (function (){var G__286149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286150 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286149,G__286150) : tailrecursion.hoplon.span.call(null,G__286149,G__286150));
})();
var G__285850 = " (";
var G__285851 = (function (){var G__286151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286152 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286151,G__286152) : tailrecursion.hoplon.span.call(null,G__286151,G__286152));
})();
var G__285852 = " ";
var G__285853 = (function (){var G__286153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286154 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286153,G__286154) : tailrecursion.hoplon.span.call(null,G__286153,G__286154));
})();
var G__285854 = " ";
var G__285855 = (function (){var G__286155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286156 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286155,G__286156) : tailrecursion.hoplon.span.call(null,G__286155,G__286156));
})();
var G__285856 = ")))\n(";
var G__285857 = (function (){var G__286157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286158 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286157,G__286158) : tailrecursion.hoplon.span.call(null,G__286157,G__286158));
})();
var G__285858 = " ";
var G__285859 = (function (){var G__286159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286160 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286159,G__286160) : tailrecursion.hoplon.span.call(null,G__286159,G__286160));
})();
var G__285860 = " (";
var G__285861 = (function (){var G__286161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286162 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286161,G__286162) : tailrecursion.hoplon.span.call(null,G__286161,G__286162));
})();
var G__285862 = " ";
var G__285863 = (function (){var G__286163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286164 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286163,G__286164) : tailrecursion.hoplon.span.call(null,G__286163,G__286164));
})();
var G__285864 = " ";
var G__285865 = (function (){var G__286165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286166 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286165,G__286166) : tailrecursion.hoplon.span.call(null,G__286165,G__286166));
})();
var G__285866 = "))\n(";
var G__285867 = (function (){var G__286167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286168 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286167,G__286168) : tailrecursion.hoplon.span.call(null,G__286167,G__286168));
})();
var G__285868 = " ";
var G__285869 = (function (){var G__286169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286170 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286169,G__286170) : tailrecursion.hoplon.span.call(null,G__286169,G__286170));
})();
var G__285870 = " (";
var G__285871 = (function (){var G__286171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286172 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286171,G__286172) : tailrecursion.hoplon.span.call(null,G__286171,G__286172));
})();
var G__285872 = " ";
var G__285873 = (function (){var G__286173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286174 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286173,G__286174) : tailrecursion.hoplon.span.call(null,G__286173,G__286174));
})();
var G__285874 = " (";
var G__285875 = (function (){var G__286175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286176 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286175,G__286176) : tailrecursion.hoplon.span.call(null,G__286175,G__286176));
})();
var G__285876 = " ";
var G__285877 = (function (){var G__286177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286178 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286177,G__286178) : tailrecursion.hoplon.span.call(null,G__286177,G__286178));
})();
var G__285878 = " ";
var G__285879 = (function (){var G__286179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286180 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286179,G__286180) : tailrecursion.hoplon.span.call(null,G__286179,G__286180));
})();
var G__285880 = ")))\n(";
var G__285881 = (function (){var G__286181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286182 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286181,G__286182) : tailrecursion.hoplon.span.call(null,G__286181,G__286182));
})();
var G__285882 = " ";
var G__285883 = (function (){var G__286183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286184 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286183,G__286184) : tailrecursion.hoplon.span.call(null,G__286183,G__286184));
})();
var G__285884 = " (";
var G__285885 = (function (){var G__286185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286186 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286185,G__286186) : tailrecursion.hoplon.span.call(null,G__286185,G__286186));
})();
var G__285886 = " ";
var G__285887 = (function (){var G__286187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286188 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286187,G__286188) : tailrecursion.hoplon.span.call(null,G__286187,G__286188));
})();
var G__285888 = " ";
var G__285889 = (function (){var G__286189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286190 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286189,G__286190) : tailrecursion.hoplon.span.call(null,G__286189,G__286190));
})();
var G__285890 = "))\n(";
var G__285891 = (function (){var G__286191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286192 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286191,G__286192) : tailrecursion.hoplon.span.call(null,G__286191,G__286192));
})();
var G__285892 = " ";
var G__285893 = (function (){var G__286193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286194 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286193,G__286194) : tailrecursion.hoplon.span.call(null,G__286193,G__286194));
})();
var G__285894 = " (";
var G__285895 = (function (){var G__286195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286196 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286195,G__286196) : tailrecursion.hoplon.span.call(null,G__286195,G__286196));
})();
var G__285896 = " ";
var G__285897 = (function (){var G__286197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286198 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286197,G__286198) : tailrecursion.hoplon.span.call(null,G__286197,G__286198));
})();
var G__285898 = " (";
var G__285899 = (function (){var G__286199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286200 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286199,G__286200) : tailrecursion.hoplon.span.call(null,G__286199,G__286200));
})();
var G__285900 = " ";
var G__285901 = (function (){var G__286201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286202 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286201,G__286202) : tailrecursion.hoplon.span.call(null,G__286201,G__286202));
})();
var G__285902 = " ";
var G__285903 = (function (){var G__286203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286204 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286203,G__286204) : tailrecursion.hoplon.span.call(null,G__286203,G__286204));
})();
var G__285904 = ")))\n(";
var G__285905 = (function (){var G__286205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286206 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286205,G__286206) : tailrecursion.hoplon.span.call(null,G__286205,G__286206));
})();
var G__285906 = " ";
var G__285907 = (function (){var G__286207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286208 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286207,G__286208) : tailrecursion.hoplon.span.call(null,G__286207,G__286208));
})();
var G__285908 = " (";
var G__285909 = (function (){var G__286209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286210 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286209,G__286210) : tailrecursion.hoplon.span.call(null,G__286209,G__286210));
})();
var G__285910 = " ";
var G__285911 = (function (){var G__286211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286212 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286211,G__286212) : tailrecursion.hoplon.span.call(null,G__286211,G__286212));
})();
var G__285912 = " ";
var G__285913 = (function (){var G__286213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286214 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286213,G__286214) : tailrecursion.hoplon.span.call(null,G__286213,G__286214));
})();
var G__285914 = "))\n(";
var G__285915 = (function (){var G__286215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286216 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286215,G__286216) : tailrecursion.hoplon.span.call(null,G__286215,G__286216));
})();
var G__285916 = " ";
var G__285917 = (function (){var G__286217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286218 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286217,G__286218) : tailrecursion.hoplon.span.call(null,G__286217,G__286218));
})();
var G__285918 = " ";
var G__285919 = (function (){var G__286219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286220 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286219,G__286220) : tailrecursion.hoplon.span.call(null,G__286219,G__286220));
})();
var G__285920 = ")\n(";
var G__285921 = (function (){var G__286221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286222 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286221,G__286222) : tailrecursion.hoplon.span.call(null,G__286221,G__286222));
})();
var G__285922 = " ";
var G__285923 = (function (){var G__286223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286224 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286223,G__286224) : tailrecursion.hoplon.span.call(null,G__286223,G__286224));
})();
var G__285924 = " (";
var G__285925 = (function (){var G__286225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286226 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286225,G__286226) : tailrecursion.hoplon.span.call(null,G__286225,G__286226));
})();
var G__285926 = " ";
var G__285927 = (function (){var G__286227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286228 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286227,G__286228) : tailrecursion.hoplon.span.call(null,G__286227,G__286228));
})();
var G__285928 = " ";
var G__285929 = (function (){var G__286229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286230 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286229,G__286230) : tailrecursion.hoplon.span.call(null,G__286229,G__286230));
})();
var G__285930 = "))\n(";
var G__285931 = (function (){var G__286231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286232 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286231,G__286232) : tailrecursion.hoplon.span.call(null,G__286231,G__286232));
})();
var G__285932 = " ";
var G__285933 = (function (){var G__286233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286234 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286233,G__286234) : tailrecursion.hoplon.span.call(null,G__286233,G__286234));
})();
var G__285934 = " (";
var G__285935 = (function (){var G__286235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286236 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286235,G__286236) : tailrecursion.hoplon.span.call(null,G__286235,G__286236));
})();
var G__285936 = " ";
var G__285937 = (function (){var G__286237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286238 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286237,G__286238) : tailrecursion.hoplon.span.call(null,G__286237,G__286238));
})();
var G__285938 = " (";
var G__285939 = (function (){var G__286239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286240 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286239,G__286240) : tailrecursion.hoplon.span.call(null,G__286239,G__286240));
})();
var G__285940 = " ";
var G__285941 = (function (){var G__286241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286242 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286241,G__286242) : tailrecursion.hoplon.span.call(null,G__286241,G__286242));
})();
var G__285942 = " ";
var G__285943 = (function (){var G__286243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286244 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286243,G__286244) : tailrecursion.hoplon.span.call(null,G__286243,G__286244));
})();
var G__285944 = ")))\n(";
var G__285945 = (function (){var G__286245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286246 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286245,G__286246) : tailrecursion.hoplon.span.call(null,G__286245,G__286246));
})();
var G__285946 = " ";
var G__285947 = (function (){var G__286247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286248 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286247,G__286248) : tailrecursion.hoplon.span.call(null,G__286247,G__286248));
})();
var G__285948 = " (";
var G__285949 = (function (){var G__286249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286250 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286249,G__286250) : tailrecursion.hoplon.span.call(null,G__286249,G__286250));
})();
var G__285950 = " ";
var G__285951 = (function (){var G__286251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286252 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286251,G__286252) : tailrecursion.hoplon.span.call(null,G__286251,G__286252));
})();
var G__285952 = " (";
var G__285953 = (function (){var G__286253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286254 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286253,G__286254) : tailrecursion.hoplon.span.call(null,G__286253,G__286254));
})();
var G__285954 = " ";
var G__285955 = (function (){var G__286255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286256 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286255,G__286256) : tailrecursion.hoplon.span.call(null,G__286255,G__286256));
})();
var G__285956 = " (";
var G__285957 = (function (){var G__286257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286258 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286257,G__286258) : tailrecursion.hoplon.span.call(null,G__286257,G__286258));
})();
var G__285958 = " ";
var G__285959 = (function (){var G__286259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286260 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286259,G__286260) : tailrecursion.hoplon.span.call(null,G__286259,G__286260));
})();
var G__285960 = " ";
var G__285961 = (function (){var G__286261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286262 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286261,G__286262) : tailrecursion.hoplon.span.call(null,G__286261,G__286262));
})();
var G__285962 = "))))\n(";
var G__285963 = (function (){var G__286263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286264 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286263,G__286264) : tailrecursion.hoplon.span.call(null,G__286263,G__286264));
})();
var G__285964 = " ";
var G__285965 = (function (){var G__286265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286266 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286265,G__286266) : tailrecursion.hoplon.span.call(null,G__286265,G__286266));
})();
var G__285966 = " (";
var G__285967 = (function (){var G__286267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286268 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286267,G__286268) : tailrecursion.hoplon.span.call(null,G__286267,G__286268));
})();
var G__285968 = " ";
var G__285969 = (function (){var G__286269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286270 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286269,G__286270) : tailrecursion.hoplon.span.call(null,G__286269,G__286270));
})();
var G__285970 = " (";
var G__285971 = (function (){var G__286271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286272 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286271,G__286272) : tailrecursion.hoplon.span.call(null,G__286271,G__286272));
})();
var G__285972 = " ";
var G__285973 = (function (){var G__286273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286274 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286273,G__286274) : tailrecursion.hoplon.span.call(null,G__286273,G__286274));
})();
var G__285974 = " ";
var G__285975 = (function (){var G__286275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286276 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286275,G__286276) : tailrecursion.hoplon.span.call(null,G__286275,G__286276));
})();
var G__285976 = ")))\n(";
var G__285977 = (function (){var G__286277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286278 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286277,G__286278) : tailrecursion.hoplon.span.call(null,G__286277,G__286278));
})();
var G__285978 = " ";
var G__285979 = (function (){var G__286279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286280 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286279,G__286280) : tailrecursion.hoplon.span.call(null,G__286279,G__286280));
})();
var G__285980 = " (";
var G__285981 = (function (){var G__286281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286282 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286281,G__286282) : tailrecursion.hoplon.span.call(null,G__286281,G__286282));
})();
var G__285982 = " ";
var G__285983 = (function (){var G__286283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286284 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286283,G__286284) : tailrecursion.hoplon.span.call(null,G__286283,G__286284));
})();
var G__285984 = " (";
var G__285985 = (function (){var G__286285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286286 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286285,G__286286) : tailrecursion.hoplon.span.call(null,G__286285,G__286286));
})();
var G__285986 = " ";
var G__285987 = (function (){var G__286287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286288 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286287,G__286288) : tailrecursion.hoplon.span.call(null,G__286287,G__286288));
})();
var G__285988 = " (";
var G__285989 = (function (){var G__286289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286290 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286289,G__286290) : tailrecursion.hoplon.span.call(null,G__286289,G__286290));
})();
var G__285990 = " ";
var G__285991 = (function (){var G__286291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286292 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286291,G__286292) : tailrecursion.hoplon.span.call(null,G__286291,G__286292));
})();
var G__285992 = " ";
var G__285993 = (function (){var G__286293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286294 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286293,G__286294) : tailrecursion.hoplon.span.call(null,G__286293,G__286294));
})();
var G__285994 = "))))\n(";
var G__285995 = (function (){var G__286295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286296 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286295,G__286296) : tailrecursion.hoplon.span.call(null,G__286295,G__286296));
})();
var G__285996 = " ";
var G__285997 = (function (){var G__286297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286298 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286297,G__286298) : tailrecursion.hoplon.span.call(null,G__286297,G__286298));
})();
var G__285998 = " (";
var G__285999 = (function (){var G__286299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286300 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286299,G__286300) : tailrecursion.hoplon.span.call(null,G__286299,G__286300));
})();
var G__286000 = " ";
var G__286001 = (function (){var G__286301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286302 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286301,G__286302) : tailrecursion.hoplon.span.call(null,G__286301,G__286302));
})();
var G__286002 = " (";
var G__286003 = (function (){var G__286303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286304 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286303,G__286304) : tailrecursion.hoplon.span.call(null,G__286303,G__286304));
})();
var G__286004 = " ";
var G__286005 = (function (){var G__286305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286306 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286305,G__286306) : tailrecursion.hoplon.span.call(null,G__286305,G__286306));
})();
var G__286006 = " ";
var G__286007 = (function (){var G__286307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286308 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286307,G__286308) : tailrecursion.hoplon.span.call(null,G__286307,G__286308));
})();
var G__286008 = ")))\n(";
var G__286009 = (function (){var G__286309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286310 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286309,G__286310) : tailrecursion.hoplon.span.call(null,G__286309,G__286310));
})();
var G__286010 = " ";
var G__286011 = (function (){var G__286311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286312 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286311,G__286312) : tailrecursion.hoplon.span.call(null,G__286311,G__286312));
})();
var G__286012 = " (";
var G__286013 = (function (){var G__286313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286314 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286313,G__286314) : tailrecursion.hoplon.span.call(null,G__286313,G__286314));
})();
var G__286014 = " ";
var G__286015 = (function (){var G__286315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286316 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286315,G__286316) : tailrecursion.hoplon.span.call(null,G__286315,G__286316));
})();
var G__286016 = " ";
var G__286017 = (function (){var G__286317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286318 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286317,G__286318) : tailrecursion.hoplon.span.call(null,G__286317,G__286318));
})();
var G__286018 = "))\n(";
var G__286019 = (function (){var G__286319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286320 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286319,G__286320) : tailrecursion.hoplon.span.call(null,G__286319,G__286320));
})();
var G__286020 = " ";
var G__286021 = (function (){var G__286321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286322 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286321,G__286322) : tailrecursion.hoplon.span.call(null,G__286321,G__286322));
})();
var G__286022 = " (";
var G__286023 = (function (){var G__286323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286324 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286323,G__286324) : tailrecursion.hoplon.span.call(null,G__286323,G__286324));
})();
var G__286024 = " ";
var G__286025 = (function (){var G__286325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286326 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286325,G__286326) : tailrecursion.hoplon.span.call(null,G__286325,G__286326));
})();
var G__286026 = " (";
var G__286027 = (function (){var G__286327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286328 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286327,G__286328) : tailrecursion.hoplon.span.call(null,G__286327,G__286328));
})();
var G__286028 = " ";
var G__286029 = (function (){var G__286329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286330 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286329,G__286330) : tailrecursion.hoplon.span.call(null,G__286329,G__286330));
})();
var G__286030 = " ";
var G__286031 = (function (){var G__286331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286332 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286331,G__286332) : tailrecursion.hoplon.span.call(null,G__286331,G__286332));
})();
var G__286032 = ")))\n(";
var G__286033 = (function (){var G__286333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286334 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286333,G__286334) : tailrecursion.hoplon.span.call(null,G__286333,G__286334));
})();
var G__286034 = " ";
var G__286035 = (function (){var G__286335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286336 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286335,G__286336) : tailrecursion.hoplon.span.call(null,G__286335,G__286336));
})();
var G__286036 = " (";
var G__286037 = (function (){var G__286337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286338 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286337,G__286338) : tailrecursion.hoplon.span.call(null,G__286337,G__286338));
})();
var G__286038 = " ";
var G__286039 = (function (){var G__286339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286340 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286339,G__286340) : tailrecursion.hoplon.span.call(null,G__286339,G__286340));
})();
var G__286040 = " (";
var G__286041 = (function (){var G__286341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286342 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286341,G__286342) : tailrecursion.hoplon.span.call(null,G__286341,G__286342));
})();
var G__286042 = " ";
var G__286043 = (function (){var G__286343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286344 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286343,G__286344) : tailrecursion.hoplon.span.call(null,G__286343,G__286344));
})();
var G__286044 = " (";
var G__286045 = (function (){var G__286345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286346 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286345,G__286346) : tailrecursion.hoplon.span.call(null,G__286345,G__286346));
})();
var G__286046 = " ";
var G__286047 = (function (){var G__286347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286348 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286347,G__286348) : tailrecursion.hoplon.span.call(null,G__286347,G__286348));
})();
var G__286048 = " ";
var G__286049 = (function (){var G__286349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286350 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286349,G__286350) : tailrecursion.hoplon.span.call(null,G__286349,G__286350));
})();
var G__286050 = "))))\n(";
var G__286051 = (function (){var G__286351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286352 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286351,G__286352) : tailrecursion.hoplon.span.call(null,G__286351,G__286352));
})();
var G__286052 = " ";
var G__286053 = (function (){var G__286353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286354 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286353,G__286354) : tailrecursion.hoplon.span.call(null,G__286353,G__286354));
})();
var G__286054 = " (";
var G__286055 = (function (){var G__286355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286356 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286355,G__286356) : tailrecursion.hoplon.span.call(null,G__286355,G__286356));
})();
var G__286056 = " ";
var G__286057 = (function (){var G__286357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286358 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286357,G__286358) : tailrecursion.hoplon.span.call(null,G__286357,G__286358));
})();
var G__286058 = " (";
var G__286059 = (function (){var G__286359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286360 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286359,G__286360) : tailrecursion.hoplon.span.call(null,G__286359,G__286360));
})();
var G__286060 = " ";
var G__286061 = (function (){var G__286361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286362 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286361,G__286362) : tailrecursion.hoplon.span.call(null,G__286361,G__286362));
})();
var G__286062 = " (";
var G__286063 = (function (){var G__286363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286364 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286363,G__286364) : tailrecursion.hoplon.span.call(null,G__286363,G__286364));
})();
var G__286064 = " ";
var G__286065 = (function (){var G__286365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286366 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286365,G__286366) : tailrecursion.hoplon.span.call(null,G__286365,G__286366));
})();
var G__286066 = " (";
var G__286067 = (function (){var G__286367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286368 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286367,G__286368) : tailrecursion.hoplon.span.call(null,G__286367,G__286368));
})();
var G__286068 = " ";
var G__286069 = (function (){var G__286369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286370 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286369,G__286370) : tailrecursion.hoplon.span.call(null,G__286369,G__286370));
})();
var G__286070 = " ";
var G__286071 = (function (){var G__286371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286372 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286371,G__286372) : tailrecursion.hoplon.span.call(null,G__286371,G__286372));
})();
var G__286072 = ")))))\n(";
var G__286073 = (function (){var G__286373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286374 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286373,G__286374) : tailrecursion.hoplon.span.call(null,G__286373,G__286374));
})();
var G__286074 = " ";
var G__286075 = (function (){var G__286375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286376 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286375,G__286376) : tailrecursion.hoplon.span.call(null,G__286375,G__286376));
})();
var G__286076 = " (";
var G__286077 = (function (){var G__286377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286378 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286377,G__286378) : tailrecursion.hoplon.span.call(null,G__286377,G__286378));
})();
var G__286078 = " ";
var G__286079 = (function (){var G__286379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286380 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286379,G__286380) : tailrecursion.hoplon.span.call(null,G__286379,G__286380));
})();
var G__286080 = " (";
var G__286081 = (function (){var G__286381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286382 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286381,G__286382) : tailrecursion.hoplon.span.call(null,G__286381,G__286382));
})();
var G__286082 = " ";
var G__286083 = (function (){var G__286383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286384 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286383,G__286384) : tailrecursion.hoplon.span.call(null,G__286383,G__286384));
})();
var G__286084 = " (";
var G__286085 = (function (){var G__286385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286386 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286385,G__286386) : tailrecursion.hoplon.span.call(null,G__286385,G__286386));
})();
var G__286086 = " ";
var G__286087 = (function (){var G__286387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286388 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286387,G__286388) : tailrecursion.hoplon.span.call(null,G__286387,G__286388));
})();
var G__286088 = " ";
var G__286089 = (function (){var G__286389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286390 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286389,G__286390) : tailrecursion.hoplon.span.call(null,G__286389,G__286390));
})();
var G__286090 = "))))\n(";
var G__286091 = (function (){var G__286391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286392 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286391,G__286392) : tailrecursion.hoplon.span.call(null,G__286391,G__286392));
})();
var G__286092 = " ";
var G__286093 = (function (){var G__286393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286394 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286393,G__286394) : tailrecursion.hoplon.span.call(null,G__286393,G__286394));
})();
var G__286094 = " (";
var G__286095 = (function (){var G__286395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286396 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286395,G__286396) : tailrecursion.hoplon.span.call(null,G__286395,G__286396));
})();
var G__286096 = " ";
var G__286097 = (function (){var G__286397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286398 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286397,G__286398) : tailrecursion.hoplon.span.call(null,G__286397,G__286398));
})();
var G__286098 = " (";
var G__286099 = (function (){var G__286399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286400 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286399,G__286400) : tailrecursion.hoplon.span.call(null,G__286399,G__286400));
})();
var G__286100 = " ";
var G__286101 = (function (){var G__286401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286402 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286401,G__286402) : tailrecursion.hoplon.span.call(null,G__286401,G__286402));
})();
var G__286102 = " ";
var G__286103 = (function (){var G__286403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286404 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286403,G__286404) : tailrecursion.hoplon.span.call(null,G__286403,G__286404));
})();
var G__286104 = ")))\n(";
var G__286105 = (function (){var G__286405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286406 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286405,G__286406) : tailrecursion.hoplon.span.call(null,G__286405,G__286406));
})();
var G__286106 = " ";
var G__286107 = (function (){var G__286407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286408 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286407,G__286408) : tailrecursion.hoplon.span.call(null,G__286407,G__286408));
})();
var G__286108 = " (";
var G__286109 = (function (){var G__286409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286410 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286409,G__286410) : tailrecursion.hoplon.span.call(null,G__286409,G__286410));
})();
var G__286110 = " ";
var G__286111 = (function (){var G__286411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286412 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286411,G__286412) : tailrecursion.hoplon.span.call(null,G__286411,G__286412));
})();
var G__286112 = " ";
var G__286113 = (function (){var G__286413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286414 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286413,G__286414) : tailrecursion.hoplon.span.call(null,G__286413,G__286414));
})();
var G__286114 = "))\n(";
var G__286115 = (function (){var G__286415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286416 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286415,G__286416) : tailrecursion.hoplon.span.call(null,G__286415,G__286416));
})();
var G__286116 = " ";
var G__286117 = (function (){var G__286417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286418 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286417,G__286418) : tailrecursion.hoplon.span.call(null,G__286417,G__286418));
})();
var G__286118 = " ";
var G__286119 = (function (){var G__286419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286420 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286419,G__286420) : tailrecursion.hoplon.span.call(null,G__286419,G__286420));
})();
var G__286120 = ")\n";
var G__286121 = (function (){var G__286421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286422 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286421,G__286422) : tailrecursion.hoplon.span.call(null,G__286421,G__286422));
})();
var G__286122 = "\n";
var G__286123 = (function (){var G__286423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286424 = "65";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286423,G__286424) : tailrecursion.hoplon.span.call(null,G__286423,G__286424));
})();
var G__286124 = ",";
var G__286125 = (function (){var G__286425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286426 = "536";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286425,G__286426) : tailrecursion.hoplon.span.call(null,G__286425,G__286426));
})();
var G__286126 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$302 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$302(G__285825,G__285826,G__285827,G__285828,G__285829,G__285830,G__285831,G__285832,G__285833,G__285834,G__285835,G__285836,G__285837,G__285838,G__285839,G__285840,G__285841,G__285842,G__285843,G__285844,G__285845,G__285846,G__285847,G__285848,G__285849,G__285850,G__285851,G__285852,G__285853,G__285854,G__285855,G__285856,G__285857,G__285858,G__285859,G__285860,G__285861,G__285862,G__285863,G__285864,G__285865,G__285866,G__285867,G__285868,G__285869,G__285870,G__285871,G__285872,G__285873,G__285874,G__285875,G__285876,G__285877,G__285878,G__285879,G__285880,G__285881,G__285882,G__285883,G__285884,G__285885,G__285886,G__285887,G__285888,G__285889,G__285890,G__285891,G__285892,G__285893,G__285894,G__285895,G__285896,G__285897,G__285898,G__285899,G__285900,G__285901,G__285902,G__285903,G__285904,G__285905,G__285906,G__285907,G__285908,G__285909,G__285910,G__285911,G__285912,G__285913,G__285914,G__285915,G__285916,G__285917,G__285918,G__285919,G__285920,G__285921,G__285922,G__285923,G__285924,G__285925,G__285926,G__285927,G__285928,G__285929,G__285930,G__285931,G__285932,G__285933,G__285934,G__285935,G__285936,G__285937,G__285938,G__285939,G__285940,G__285941,G__285942,G__285943,G__285944,G__285945,G__285946,G__285947,G__285948,G__285949,G__285950,G__285951,G__285952,G__285953,G__285954,G__285955,G__285956,G__285957,G__285958,G__285959,G__285960,G__285961,G__285962,G__285963,G__285964,G__285965,G__285966,G__285967,G__285968,G__285969,G__285970,G__285971,G__285972,G__285973,G__285974,G__285975,G__285976,G__285977,G__285978,G__285979,G__285980,G__285981,G__285982,G__285983,G__285984,G__285985,G__285986,G__285987,G__285988,G__285989,G__285990,G__285991,G__285992,G__285993,G__285994,G__285995,G__285996,G__285997,G__285998,G__285999,G__286000,G__286001,G__286002,G__286003,G__286004,G__286005,G__286006,G__286007,G__286008,G__286009,G__286010,G__286011,G__286012,G__286013,G__286014,G__286015,G__286016,G__286017,G__286018,G__286019,G__286020,G__286021,G__286022,G__286023,G__286024,G__286025,G__286026,G__286027,G__286028,G__286029,G__286030,G__286031,G__286032,G__286033,G__286034,G__286035,G__286036,G__286037,G__286038,G__286039,G__286040,G__286041,G__286042,G__286043,G__286044,G__286045,G__286046,G__286047,G__286048,G__286049,G__286050,G__286051,G__286052,G__286053,G__286054,G__286055,G__286056,G__286057,G__286058,G__286059,G__286060,G__286061,G__286062,G__286063,G__286064,G__286065,G__286066,G__286067,G__286068,G__286069,G__286070,G__286071,G__286072,G__286073,G__286074,G__286075,G__286076,G__286077,G__286078,G__286079,G__286080,G__286081,G__286082,G__286083,G__286084,G__286085,G__286086,G__286087,G__286088,G__286089,G__286090,G__286091,G__286092,G__286093,G__286094,G__286095,G__286096,G__286097,G__286098,G__286099,G__286100,G__286101,G__286102,G__286103,G__286104,G__286105,G__286106,G__286107,G__286108,G__286109,G__286110,G__286111,G__286112,G__286113,G__286114,G__286115,G__286116,G__286117,G__286118,G__286119,G__286120,G__286121,G__286122,G__286123,G__286124,G__286125,G__286126) : tailrecursion.hoplon.pre.call(null,G__285825,G__285826,G__285827,G__285828,G__285829,G__285830,G__285831,G__285832,G__285833,G__285834,G__285835,G__285836,G__285837,G__285838,G__285839,G__285840,G__285841,G__285842,G__285843,G__285844,G__285845,G__285846,G__285847,G__285848,G__285849,G__285850,G__285851,G__285852,G__285853,G__285854,G__285855,G__285856,G__285857,G__285858,G__285859,G__285860,G__285861,G__285862,G__285863,G__285864,G__285865,G__285866,G__285867,G__285868,G__285869,G__285870,G__285871,G__285872,G__285873,G__285874,G__285875,G__285876,G__285877,G__285878,G__285879,G__285880,G__285881,G__285882,G__285883,G__285884,G__285885,G__285886,G__285887,G__285888,G__285889,G__285890,G__285891,G__285892,G__285893,G__285894,G__285895,G__285896,G__285897,G__285898,G__285899,G__285900,G__285901,G__285902,G__285903,G__285904,G__285905,G__285906,G__285907,G__285908,G__285909,G__285910,G__285911,G__285912,G__285913,G__285914,G__285915,G__285916,G__285917,G__285918,G__285919,G__285920,G__285921,G__285922,G__285923,G__285924,G__285925,G__285926,G__285927,G__285928,G__285929,G__285930,G__285931,G__285932,G__285933,G__285934,G__285935,G__285936,G__285937,G__285938,G__285939,G__285940,G__285941,G__285942,G__285943,G__285944,G__285945,G__285946,G__285947,G__285948,G__285949,G__285950,G__285951,G__285952,G__285953,G__285954,G__285955,G__285956,G__285957,G__285958,G__285959,G__285960,G__285961,G__285962,G__285963,G__285964,G__285965,G__285966,G__285967,G__285968,G__285969,G__285970,G__285971,G__285972,G__285973,G__285974,G__285975,G__285976,G__285977,G__285978,G__285979,G__285980,G__285981,G__285982,G__285983,G__285984,G__285985,G__285986,G__285987,G__285988,G__285989,G__285990,G__285991,G__285992,G__285993,G__285994,G__285995,G__285996,G__285997,G__285998,G__285999,G__286000,G__286001,G__286002,G__286003,G__286004,G__286005,G__286006,G__286007,G__286008,G__286009,G__286010,G__286011,G__286012,G__286013,G__286014,G__286015,G__286016,G__286017,G__286018,G__286019,G__286020,G__286021,G__286022,G__286023,G__286024,G__286025,G__286026,G__286027,G__286028,G__286029,G__286030,G__286031,G__286032,G__286033,G__286034,G__286035,G__286036,G__286037,G__286038,G__286039,G__286040,G__286041,G__286042,G__286043,G__286044,G__286045,G__286046,G__286047,G__286048,G__286049,G__286050,G__286051,G__286052,G__286053,G__286054,G__286055,G__286056,G__286057,G__286058,G__286059,G__286060,G__286061,G__286062,G__286063,G__286064,G__286065,G__286066,G__286067,G__286068,G__286069,G__286070,G__286071,G__286072,G__286073,G__286074,G__286075,G__286076,G__286077,G__286078,G__286079,G__286080,G__286081,G__286082,G__286083,G__286084,G__286085,G__286086,G__286087,G__286088,G__286089,G__286090,G__286091,G__286092,G__286093,G__286094,G__286095,G__286096,G__286097,G__286098,G__286099,G__286100,G__286101,G__286102,G__286103,G__286104,G__286105,G__286106,G__286107,G__286108,G__286109,G__286110,G__286111,G__286112,G__286113,G__286114,G__286115,G__286116,G__286117,G__286118,G__286119,G__286120,G__286121,G__286122,G__286123,G__286124,G__286125,G__286126));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__285823,G__285824) : tailrecursion.hoplon.div.call(null,G__285823,G__285824));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__285822) : tailrecursion.hoplon.div.call(null,G__285822));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_285217;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_285216;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_285215;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_285214;
}})()], 0)),(function (){var _STAR_references_STAR_286427 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_286428 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_286429 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_286430 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286431 = cljs.core.PersistentArrayMap.EMPTY;
var G__286432 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the following procedures, where ",(function (){var G__286433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"A"], null);
var G__286434 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286433,G__286434) : tailrecursion.hoplon.markdown.code_node.call(null,G__286433,G__286434));
})()," is the procedure defined above:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286431,G__286432) : tailrecursion.hoplon.markdown.para_node.call(null,G__286431,G__286432));
})(),(function (){var G__286462 = (function (){var G__286463 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__286464 = (function (){var G__286465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__286466 = "(";
var G__286467 = (function (){var G__286478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__286479 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286478,G__286479) : tailrecursion.hoplon.span.call(null,G__286478,G__286479));
})();
var G__286468 = (function (){var G__286480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286481 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286480,G__286481) : tailrecursion.hoplon.span.call(null,G__286480,G__286481));
})();
var G__286469 = " [";
var G__286470 = (function (){var G__286482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286483 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286482,G__286483) : tailrecursion.hoplon.span.call(null,G__286482,G__286483));
})();
var G__286471 = "] (";
var G__286472 = (function (){var G__286484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286485 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286484,G__286485) : tailrecursion.hoplon.span.call(null,G__286484,G__286485));
})();
var G__286473 = " ";
var G__286474 = (function (){var G__286486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286487 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286486,G__286487) : tailrecursion.hoplon.span.call(null,G__286486,G__286487));
})();
var G__286475 = " ";
var G__286476 = (function (){var G__286488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286489 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286488,G__286489) : tailrecursion.hoplon.span.call(null,G__286488,G__286489));
})();
var G__286477 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__286465,G__286466,G__286467,G__286468,G__286469,G__286470,G__286471,G__286472,G__286473,G__286474,G__286475,G__286476,G__286477) : tailrecursion.hoplon.pre.call(null,G__286465,G__286466,G__286467,G__286468,G__286469,G__286470,G__286471,G__286472,G__286473,G__286474,G__286475,G__286476,G__286477));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__286463,G__286464) : tailrecursion.hoplon.div.call(null,G__286463,G__286464));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__286462) : tailrecursion.hoplon.div.call(null,G__286462));
})(),(function (){var G__286517 = (function (){var G__286518 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__286519 = (function (){var G__286520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__286521 = "(";
var G__286522 = (function (){var G__286533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__286534 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286533,G__286534) : tailrecursion.hoplon.span.call(null,G__286533,G__286534));
})();
var G__286523 = (function (){var G__286535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286536 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286535,G__286536) : tailrecursion.hoplon.span.call(null,G__286535,G__286536));
})();
var G__286524 = " [";
var G__286525 = (function (){var G__286537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286538 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286537,G__286538) : tailrecursion.hoplon.span.call(null,G__286537,G__286538));
})();
var G__286526 = "] (";
var G__286527 = (function (){var G__286539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286540 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286539,G__286540) : tailrecursion.hoplon.span.call(null,G__286539,G__286540));
})();
var G__286528 = " ";
var G__286529 = (function (){var G__286541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286542 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286541,G__286542) : tailrecursion.hoplon.span.call(null,G__286541,G__286542));
})();
var G__286530 = " ";
var G__286531 = (function (){var G__286543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286544 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286543,G__286544) : tailrecursion.hoplon.span.call(null,G__286543,G__286544));
})();
var G__286532 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__286520,G__286521,G__286522,G__286523,G__286524,G__286525,G__286526,G__286527,G__286528,G__286529,G__286530,G__286531,G__286532) : tailrecursion.hoplon.pre.call(null,G__286520,G__286521,G__286522,G__286523,G__286524,G__286525,G__286526,G__286527,G__286528,G__286529,G__286530,G__286531,G__286532));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__286518,G__286519) : tailrecursion.hoplon.div.call(null,G__286518,G__286519));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__286517) : tailrecursion.hoplon.div.call(null,G__286517));
})(),(function (){var G__286572 = (function (){var G__286573 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__286574 = (function (){var G__286575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__286576 = "(";
var G__286577 = (function (){var G__286588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__286589 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286588,G__286589) : tailrecursion.hoplon.span.call(null,G__286588,G__286589));
})();
var G__286578 = (function (){var G__286590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286591 = "h";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286590,G__286591) : tailrecursion.hoplon.span.call(null,G__286590,G__286591));
})();
var G__286579 = " [";
var G__286580 = (function (){var G__286592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286593 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286592,G__286593) : tailrecursion.hoplon.span.call(null,G__286592,G__286593));
})();
var G__286581 = "] (";
var G__286582 = (function (){var G__286594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286595 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286594,G__286595) : tailrecursion.hoplon.span.call(null,G__286594,G__286595));
})();
var G__286583 = " ";
var G__286584 = (function (){var G__286596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286597 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286596,G__286597) : tailrecursion.hoplon.span.call(null,G__286596,G__286597));
})();
var G__286585 = " ";
var G__286586 = (function (){var G__286598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286599 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286598,G__286599) : tailrecursion.hoplon.span.call(null,G__286598,G__286599));
})();
var G__286587 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__286575,G__286576,G__286577,G__286578,G__286579,G__286580,G__286581,G__286582,G__286583,G__286584,G__286585,G__286586,G__286587) : tailrecursion.hoplon.pre.call(null,G__286575,G__286576,G__286577,G__286578,G__286579,G__286580,G__286581,G__286582,G__286583,G__286584,G__286585,G__286586,G__286587));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__286573,G__286574) : tailrecursion.hoplon.div.call(null,G__286573,G__286574));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__286572) : tailrecursion.hoplon.div.call(null,G__286572));
})(),(function (){var G__286630 = (function (){var G__286631 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__286632 = (function (){var G__286633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__286634 = "(";
var G__286635 = (function (){var G__286647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__286648 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286647,G__286648) : tailrecursion.hoplon.span.call(null,G__286647,G__286648));
})();
var G__286636 = (function (){var G__286649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286650 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286649,G__286650) : tailrecursion.hoplon.span.call(null,G__286649,G__286650));
})();
var G__286637 = " [";
var G__286638 = (function (){var G__286651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286652 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286651,G__286652) : tailrecursion.hoplon.span.call(null,G__286651,G__286652));
})();
var G__286639 = "] (";
var G__286640 = (function (){var G__286653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__286654 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286653,G__286654) : tailrecursion.hoplon.span.call(null,G__286653,G__286654));
})();
var G__286641 = (function (){var G__286655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286656 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286655,G__286656) : tailrecursion.hoplon.span.call(null,G__286655,G__286656));
})();
var G__286642 = " ";
var G__286643 = (function (){var G__286657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286658 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286657,G__286658) : tailrecursion.hoplon.span.call(null,G__286657,G__286658));
})();
var G__286644 = " ";
var G__286645 = (function (){var G__286659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286660 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286659,G__286660) : tailrecursion.hoplon.span.call(null,G__286659,G__286660));
})();
var G__286646 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__286633,G__286634,G__286635,G__286636,G__286637,G__286638,G__286639,G__286640,G__286641,G__286642,G__286643,G__286644,G__286645,G__286646) : tailrecursion.hoplon.pre.call(null,G__286633,G__286634,G__286635,G__286636,G__286637,G__286638,G__286639,G__286640,G__286641,G__286642,G__286643,G__286644,G__286645,G__286646));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__286631,G__286632) : tailrecursion.hoplon.div.call(null,G__286631,G__286632));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__286630) : tailrecursion.hoplon.div.call(null,G__286630));
})(),(function (){var G__286661 = cljs.core.PersistentArrayMap.EMPTY;
var G__286662 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Give concise mathematical definitions for the functions computed by the procedures ",(function (){var G__286663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"f"], null);
var G__286664 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286663,G__286664) : tailrecursion.hoplon.markdown.code_node.call(null,G__286663,G__286664));
})(),",",(function (){var G__286665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"g"], null);
var G__286666 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286665,G__286666) : tailrecursion.hoplon.markdown.code_node.call(null,G__286665,G__286666));
})(),", and ",(function (){var G__286667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"h"], null);
var G__286668 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286667,G__286668) : tailrecursion.hoplon.markdown.code_node.call(null,G__286667,G__286668));
})()," for positive integer values of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". For example, ",(function (){var G__286669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(k n)"], null);
var G__286670 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286669,G__286670) : tailrecursion.hoplon.markdown.code_node.call(null,G__286669,G__286670));
})()," computes \\(5n^2\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286661,G__286662) : tailrecursion.hoplon.markdown.para_node.call(null,G__286661,G__286662));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_286430;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_286429;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_286428;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_286427;
}})(),book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_286671 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_286672 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_286673 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_286674 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286675 = cljs.core.PersistentArrayMap.EMPTY;
var G__286676 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(f n)"], null);
var G__286678 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286677,G__286678) : tailrecursion.hoplon.markdown.code_node.call(null,G__286677,G__286678));
})(),"\\(= 2n\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286675,G__286676) : tailrecursion.hoplon.markdown.para_node.call(null,G__286675,G__286676));
})(),(function (){var G__286679 = cljs.core.PersistentArrayMap.EMPTY;
var G__286680 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(g n)"], null);
var G__286682 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286681,G__286682) : tailrecursion.hoplon.markdown.code_node.call(null,G__286681,G__286682));
})(),"\\(=2^n\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286679,G__286680) : tailrecursion.hoplon.markdown.para_node.call(null,G__286679,G__286680));
})(),(function (){var G__286683 = cljs.core.PersistentArrayMap.EMPTY;
var G__286684 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(h n)"], null);
var G__286686 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286685,G__286686) : tailrecursion.hoplon.markdown.code_node.call(null,G__286685,G__286686));
})(),"\\(=2^{2^{",(function (){var G__286687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__286688 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__286687,G__286688) : tailrecursion.hoplon.markdown.simple_node.call(null,G__286687,G__286688));
})(),"^{2}}}\\), or alternatively, ",(function (){var G__286689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(h n)"], null);
var G__286690 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286689,G__286690) : tailrecursion.hoplon.markdown.code_node.call(null,G__286689,G__286690));
})(),"\\(= 2^{(h (n-1))}\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286683,G__286684) : tailrecursion.hoplon.markdown.para_node.call(null,G__286683,G__286684));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_286674;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_286673;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_286672;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_286671;
}})()], 0))], 0))], 0));
var G__279989 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Tree Recursion"], null),(function (){var _STAR_references_STAR_286691 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_286692 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_286693 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_286694 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286695 = cljs.core.PersistentArrayMap.EMPTY;
var G__286696 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Another common pattern of computation is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tree recursion"], null)], 0)),". As an example, consider computing the sequence of Fibonacci numbers, in which each number is the sum of the preceeding two:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286695,G__286696) : tailrecursion.hoplon.markdown.para_node.call(null,G__286695,G__286696));
})(),(function (){var G__286697 = cljs.core.PersistentArrayMap.EMPTY;
var G__286698 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$0, 1, 1, 2, 3, 5, 8, 13, 21, ",(function (){var G__286699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__286700 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__286699,G__286700) : tailrecursion.hoplon.markdown.simple_node.call(null,G__286699,G__286700));
})(),"$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286697,G__286698) : tailrecursion.hoplon.markdown.para_node.call(null,G__286697,G__286698));
})(),(function (){var G__286701 = cljs.core.PersistentArrayMap.EMPTY;
var G__286702 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In general, the Fibonacci numbers can be defined by the rule"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286701,G__286702) : tailrecursion.hoplon.markdown.para_node.call(null,G__286701,G__286702));
})(),(function (){var G__286703 = cljs.core.PersistentArrayMap.EMPTY;
var G__286704 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$ \\text{fib}(n)=\\begin{cases} 0 &\\text{ if } n=0\\cr 1 &\\text{ if } n=1 \\cr \\text{fib}(n-1)+\\text{ fib}(n-2) &\\text{ otherwise }\\end{cases}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286703,G__286704) : tailrecursion.hoplon.markdown.para_node.call(null,G__286703,G__286704));
})(),(function (){var G__286705 = cljs.core.PersistentArrayMap.EMPTY;
var G__286706 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can immediately translate this definition into a recursive procedure for computing Fibonacci numbers:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286705,G__286706) : tailrecursion.hoplon.markdown.para_node.call(null,G__286705,G__286706));
})(),(function (){var G__286794 = (function (){var G__286795 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__286796 = (function (){var G__286797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__286798 = "(";
var G__286799 = (function (){var G__286838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__286839 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286838,G__286839) : tailrecursion.hoplon.span.call(null,G__286838,G__286839));
})();
var G__286800 = (function (){var G__286840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286841 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286840,G__286841) : tailrecursion.hoplon.span.call(null,G__286840,G__286841));
})();
var G__286801 = " [";
var G__286802 = (function (){var G__286842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286843 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286842,G__286843) : tailrecursion.hoplon.span.call(null,G__286842,G__286843));
})();
var G__286803 = "]\n  (";
var G__286804 = (function (){var G__286844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__286845 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286844,G__286845) : tailrecursion.hoplon.span.call(null,G__286844,G__286845));
})();
var G__286805 = "(";
var G__286806 = (function (){var G__286846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__286847 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286846,G__286847) : tailrecursion.hoplon.span.call(null,G__286846,G__286847));
})();
var G__286807 = (function (){var G__286848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286849 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286848,G__286849) : tailrecursion.hoplon.span.call(null,G__286848,G__286849));
})();
var G__286808 = " ";
var G__286809 = (function (){var G__286850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286851 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286850,G__286851) : tailrecursion.hoplon.span.call(null,G__286850,G__286851));
})();
var G__286810 = ") ";
var G__286811 = (function (){var G__286852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286853 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286852,G__286853) : tailrecursion.hoplon.span.call(null,G__286852,G__286853));
})();
var G__286812 = "\n        (";
var G__286813 = (function (){var G__286854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__286855 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286854,G__286855) : tailrecursion.hoplon.span.call(null,G__286854,G__286855));
})();
var G__286814 = (function (){var G__286856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286857 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286856,G__286857) : tailrecursion.hoplon.span.call(null,G__286856,G__286857));
})();
var G__286815 = " ";
var G__286816 = (function (){var G__286858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286859 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286858,G__286859) : tailrecursion.hoplon.span.call(null,G__286858,G__286859));
})();
var G__286817 = ") ";
var G__286818 = (function (){var G__286860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286861 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286860,G__286861) : tailrecursion.hoplon.span.call(null,G__286860,G__286861));
})();
var G__286819 = "\n        ";
var G__286820 = (function (){var G__286862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286863 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286862,G__286863) : tailrecursion.hoplon.span.call(null,G__286862,G__286863));
})();
var G__286821 = " (";
var G__286822 = (function (){var G__286864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__286865 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286864,G__286865) : tailrecursion.hoplon.span.call(null,G__286864,G__286865));
})();
var G__286823 = "(";
var G__286824 = (function (){var G__286866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286867 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286866,G__286867) : tailrecursion.hoplon.span.call(null,G__286866,G__286867));
})();
var G__286825 = " (";
var G__286826 = (function (){var G__286868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__286869 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286868,G__286869) : tailrecursion.hoplon.span.call(null,G__286868,G__286869));
})();
var G__286827 = (function (){var G__286870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286871 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286870,G__286871) : tailrecursion.hoplon.span.call(null,G__286870,G__286871));
})();
var G__286828 = " ";
var G__286829 = (function (){var G__286872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286873 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286872,G__286873) : tailrecursion.hoplon.span.call(null,G__286872,G__286873));
})();
var G__286830 = "))\n                 (";
var G__286831 = (function (){var G__286874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__286875 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286874,G__286875) : tailrecursion.hoplon.span.call(null,G__286874,G__286875));
})();
var G__286832 = " (";
var G__286833 = (function (){var G__286876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__286877 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286876,G__286877) : tailrecursion.hoplon.span.call(null,G__286876,G__286877));
})();
var G__286834 = (function (){var G__286878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__286879 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286878,G__286879) : tailrecursion.hoplon.span.call(null,G__286878,G__286879));
})();
var G__286835 = " ";
var G__286836 = (function (){var G__286880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__286881 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__286880,G__286881) : tailrecursion.hoplon.span.call(null,G__286880,G__286881));
})();
var G__286837 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41(G__286797,G__286798,G__286799,G__286800,G__286801,G__286802,G__286803,G__286804,G__286805,G__286806,G__286807,G__286808,G__286809,G__286810,G__286811,G__286812,G__286813,G__286814,G__286815,G__286816,G__286817,G__286818,G__286819,G__286820,G__286821,G__286822,G__286823,G__286824,G__286825,G__286826,G__286827,G__286828,G__286829,G__286830,G__286831,G__286832,G__286833,G__286834,G__286835,G__286836,G__286837) : tailrecursion.hoplon.pre.call(null,G__286797,G__286798,G__286799,G__286800,G__286801,G__286802,G__286803,G__286804,G__286805,G__286806,G__286807,G__286808,G__286809,G__286810,G__286811,G__286812,G__286813,G__286814,G__286815,G__286816,G__286817,G__286818,G__286819,G__286820,G__286821,G__286822,G__286823,G__286824,G__286825,G__286826,G__286827,G__286828,G__286829,G__286830,G__286831,G__286832,G__286833,G__286834,G__286835,G__286836,G__286837));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__286795,G__286796) : tailrecursion.hoplon.div.call(null,G__286795,G__286796));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__286794) : tailrecursion.hoplon.div.call(null,G__286794));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_286694;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_286693;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_286692;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_286691;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"The tree-recursive process generated in computing (fib 5)"], null)], 0)),"",(function (){var _STAR_references_STAR_286882 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_286883 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_286884 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_286885 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__286886 = cljs.core.PersistentArrayMap.EMPTY;
var G__286887 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the pattern of this computation. To compute ",(function (){var G__286888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 5)"], null);
var G__286889 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286888,G__286889) : tailrecursion.hoplon.markdown.code_node.call(null,G__286888,G__286889));
})(),", we compute ",(function (){var G__286890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 4)"], null);
var G__286891 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286890,G__286891) : tailrecursion.hoplon.markdown.code_node.call(null,G__286890,G__286891));
})()," and ",(function (){var G__286892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 3)"], null);
var G__286893 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286892,G__286893) : tailrecursion.hoplon.markdown.code_node.call(null,G__286892,G__286893));
})(),". To compute ",(function (){var G__286894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 4)"], null);
var G__286895 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286894,G__286895) : tailrecursion.hoplon.markdown.code_node.call(null,G__286894,G__286895));
})(),", we compute ",(function (){var G__286896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib\n3)"], null);
var G__286897 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286896,G__286897) : tailrecursion.hoplon.markdown.code_node.call(null,G__286896,G__286897));
})()," and ",(function (){var G__286898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 2)"], null);
var G__286899 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286898,G__286899) : tailrecursion.hoplon.markdown.code_node.call(null,G__286898,G__286899));
})(),". In general, the evolved process looks like a tree, as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/figure/1-5/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.5"], null)], 0)),". Notice that the branches split into two at each level (except at the bottom); this reflects the fact that the ",(function (){var G__286900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fib"], null);
var G__286901 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286900,G__286901) : tailrecursion.hoplon.markdown.code_node.call(null,G__286900,G__286901));
})()," procedure calls itself twice each time it is invoked."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286886,G__286887) : tailrecursion.hoplon.markdown.para_node.call(null,G__286886,G__286887));
})(),(function (){var G__286902 = cljs.core.PersistentArrayMap.EMPTY;
var G__286903 = new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This procedure is instructive as a prototypical tree recursion, but it is a terrible way to compute Fibonacci numbers because it does so much redundant computation. Notice in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/figure/1-5",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.5"], null)], 0))," that the entire computation of ",(function (){var G__286904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 3)"], null);
var G__286905 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286904,G__286905) : tailrecursion.hoplon.markdown.code_node.call(null,G__286904,G__286905));
})()," ",(function (){var G__286906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__286907 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__286906,G__286907) : tailrecursion.hoplon.markdown.simple_node.call(null,G__286906,G__286907));
})()," almost half the work ",(function (){var G__286908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__286909 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__286908,G__286909) : tailrecursion.hoplon.markdown.simple_node.call(null,G__286908,G__286909));
})()," is dubplicated. In fact, it is not hard to show that the number of times the procedure will compute ",(function (){var G__286910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 1)"], null);
var G__286911 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286910,G__286911) : tailrecursion.hoplon.markdown.code_node.call(null,G__286910,G__286911));
})()," or ",(function (){var G__286912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 0)"], null);
var G__286913 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__286912,G__286913) : tailrecursion.hoplon.markdown.code_node.call(null,G__286912,G__286913));
})()," (the number of leaves in the above tree, in general) is precisely ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fib(n+1)"], null)], 0)),". To get an idea of how bad this is, one can show that the value of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fiv(n)"], null)], 0))," grows exponentially with ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". More precisely (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/ch/1/ex/13",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.13"], null)], 0)),"), ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fib(n)"], null)], 0))," is the closest integer to \\(\\phi^n/\\sqrt5\\), where"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286902,G__286903) : tailrecursion.hoplon.markdown.para_node.call(null,G__286902,G__286903));
})(),(function (){var G__286914 = cljs.core.PersistentArrayMap.EMPTY;
var G__286915 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\phi=\\left(1+\\sqrt5\\right)/2\\approx1.6180",(function (){var G__286916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__286917 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__286916,G__286917) : tailrecursion.hoplon.markdown.simple_node.call(null,G__286916,G__286917));
})(),"$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286914,G__286915) : tailrecursion.hoplon.markdown.para_node.call(null,G__286914,G__286915));
})(),(function (){var G__286918 = cljs.core.PersistentArrayMap.EMPTY;
var G__286919 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["is the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["golden ratio"], null)], 0)),", which satisfies the equation"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286918,G__286919) : tailrecursion.hoplon.markdown.para_node.call(null,G__286918,G__286919));
})(),(function (){var G__286920 = cljs.core.PersistentArrayMap.EMPTY;
var G__286921 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\phi^2=\\phi+1$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286920,G__286921) : tailrecursion.hoplon.markdown.para_node.call(null,G__286920,G__286921));
})(),(function (){var G__286922 = cljs.core.PersistentArrayMap.EMPTY;
var G__286923 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Thus, the process uses a number of steps that grows exponentially with the input. On the other hand, the space required gows only linearly with the input, because we need keep track only of which nodes are above us in the tree at any point in the computation. In general, the number of steps required by a tree-recursive process will be proportional to the number of nodes in the tree, while the space requrired will be proportional to the maximum depth of the tree."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286922,G__286923) : tailrecursion.hoplon.markdown.para_node.call(null,G__286922,G__286923));
})(),(function (){var G__286924 = cljs.core.PersistentArrayMap.EMPTY;
var G__286925 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can also formulate an iterative process for computing the Fibonacci numbers. The idea is to use a pair of integers ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a"], null)], 0))," and ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b"], null)], 0)),", initialized to \\(Fib(0)=0\\) and \\(Fib(1)=1\\), and to repeatedly apply the simultaneous transformations"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286924,G__286925) : tailrecursion.hoplon.markdown.para_node.call(null,G__286924,G__286925));
})(),(function (){var G__286926 = cljs.core.PersistentArrayMap.EMPTY;
var G__286927 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} a \\rightarrow & b \\cr b \\rightarrow & a + b\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286926,G__286927) : tailrecursion.hoplon.markdown.para_node.call(null,G__286926,G__286927));
})(),(function (){var G__286928 = cljs.core.PersistentArrayMap.EMPTY;
var G__286929 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It is not hard to show that, after applying this transformation \\(n\\) times, \\(a\\) and \\(b\\) will be equal, respectively, to \\(Fib(n)\\) and \\(Fib(n+1)\\). Thus, we can compute Fibonacci numbers iteratively using the procedure"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__286928,G__286929) : tailrecursion.hoplon.markdown.para_node.call(null,G__286928,G__286929));
})(),(function (){var G__287021 = (function (){var G__287022 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__287023 = (function (){var G__287024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__287025 = "(";
var G__287026 = (function (){var G__287067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__287068 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287067,G__287068) : tailrecursion.hoplon.span.call(null,G__287067,G__287068));
})();
var G__287027 = (function (){var G__287069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287070 = "fib-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287069,G__287070) : tailrecursion.hoplon.span.call(null,G__287069,G__287070));
})();
var G__287028 = " [";
var G__287029 = (function (){var G__287071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287072 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287071,G__287072) : tailrecursion.hoplon.span.call(null,G__287071,G__287072));
})();
var G__287030 = " ";
var G__287031 = (function (){var G__287073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287074 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287073,G__287074) : tailrecursion.hoplon.span.call(null,G__287073,G__287074));
})();
var G__287032 = " ";
var G__287033 = (function (){var G__287075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287076 = "count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287075,G__287076) : tailrecursion.hoplon.span.call(null,G__287075,G__287076));
})();
var G__287034 = "]\n  (";
var G__287035 = (function (){var G__287077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__287078 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287077,G__287078) : tailrecursion.hoplon.span.call(null,G__287077,G__287078));
})();
var G__287036 = "(";
var G__287037 = (function (){var G__287079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287080 = "= count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287079,G__287080) : tailrecursion.hoplon.span.call(null,G__287079,G__287080));
})();
var G__287038 = (function (){var G__287081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287082 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287081,G__287082) : tailrecursion.hoplon.span.call(null,G__287081,G__287082));
})();
var G__287039 = ")\n      ";
var G__287040 = (function (){var G__287083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287084 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287083,G__287084) : tailrecursion.hoplon.span.call(null,G__287083,G__287084));
})();
var G__287041 = "\n      (";
var G__287042 = (function (){var G__287085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__287086 = "fib-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287085,G__287086) : tailrecursion.hoplon.span.call(null,G__287085,G__287086));
})();
var G__287043 = " ";
var G__287044 = (function (){var G__287087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287088 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287087,G__287088) : tailrecursion.hoplon.span.call(null,G__287087,G__287088));
})();
var G__287045 = " (";
var G__287046 = (function (){var G__287089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287090 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287089,G__287090) : tailrecursion.hoplon.span.call(null,G__287089,G__287090));
})();
var G__287047 = (function (){var G__287091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287092 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287091,G__287092) : tailrecursion.hoplon.span.call(null,G__287091,G__287092));
})();
var G__287048 = " ";
var G__287049 = (function (){var G__287093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287094 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287093,G__287094) : tailrecursion.hoplon.span.call(null,G__287093,G__287094));
})();
var G__287050 = ") (";
var G__287051 = (function (){var G__287095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287096 = "- count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287095,G__287096) : tailrecursion.hoplon.span.call(null,G__287095,G__287096));
})();
var G__287052 = (function (){var G__287097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287098 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287097,G__287098) : tailrecursion.hoplon.span.call(null,G__287097,G__287098));
})();
var G__287053 = "))))\n(";
var G__287054 = (function (){var G__287099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__287100 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287099,G__287100) : tailrecursion.hoplon.span.call(null,G__287099,G__287100));
})();
var G__287055 = (function (){var G__287101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287102 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287101,G__287102) : tailrecursion.hoplon.span.call(null,G__287101,G__287102));
})();
var G__287056 = " [";
var G__287057 = (function (){var G__287103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287104 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287103,G__287104) : tailrecursion.hoplon.span.call(null,G__287103,G__287104));
})();
var G__287058 = "]\n  (";
var G__287059 = (function (){var G__287105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__287106 = "fib-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287105,G__287106) : tailrecursion.hoplon.span.call(null,G__287105,G__287106));
})();
var G__287060 = " ";
var G__287061 = (function (){var G__287107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287108 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287107,G__287108) : tailrecursion.hoplon.span.call(null,G__287107,G__287108));
})();
var G__287062 = " ";
var G__287063 = (function (){var G__287109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287110 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287109,G__287110) : tailrecursion.hoplon.span.call(null,G__287109,G__287110));
})();
var G__287064 = " ";
var G__287065 = (function (){var G__287111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287112 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287111,G__287112) : tailrecursion.hoplon.span.call(null,G__287111,G__287112));
})();
var G__287066 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43(G__287024,G__287025,G__287026,G__287027,G__287028,G__287029,G__287030,G__287031,G__287032,G__287033,G__287034,G__287035,G__287036,G__287037,G__287038,G__287039,G__287040,G__287041,G__287042,G__287043,G__287044,G__287045,G__287046,G__287047,G__287048,G__287049,G__287050,G__287051,G__287052,G__287053,G__287054,G__287055,G__287056,G__287057,G__287058,G__287059,G__287060,G__287061,G__287062,G__287063,G__287064,G__287065,G__287066) : tailrecursion.hoplon.pre.call(null,G__287024,G__287025,G__287026,G__287027,G__287028,G__287029,G__287030,G__287031,G__287032,G__287033,G__287034,G__287035,G__287036,G__287037,G__287038,G__287039,G__287040,G__287041,G__287042,G__287043,G__287044,G__287045,G__287046,G__287047,G__287048,G__287049,G__287050,G__287051,G__287052,G__287053,G__287054,G__287055,G__287056,G__287057,G__287058,G__287059,G__287060,G__287061,G__287062,G__287063,G__287064,G__287065,G__287066));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__287022,G__287023) : tailrecursion.hoplon.div.call(null,G__287022,G__287023));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__287021) : tailrecursion.hoplon.div.call(null,G__287021));
})(),(function (){var G__287113 = cljs.core.PersistentArrayMap.EMPTY;
var G__287114 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This second method for computing \\(Fib(n)\\) is a linear iteration. The difference in number of steps required by the two methods ",(function (){var G__287115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__287116 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__287115,G__287116) : tailrecursion.hoplon.markdown.simple_node.call(null,G__287115,G__287116));
})(),"one linear in \\(n\\), one growing as fast as \\(Fib(n)\\) itself ",(function (){var G__287117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__287118 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__287117,G__287118) : tailrecursion.hoplon.markdown.simple_node.call(null,G__287117,G__287118));
})()," is enormous, even for small inputs."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287113,G__287114) : tailrecursion.hoplon.markdown.para_node.call(null,G__287113,G__287114));
})(),(function (){var G__287119 = cljs.core.PersistentArrayMap.EMPTY;
var G__287120 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One should not conclude from this that tree-recursive processes are useless. When we consider processes that operate on hierarchially structured data rather than numbers, we will find that tree recursion is a natural and powerful tool.",(function (){var G__287121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__287122 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["An example of this was hinted at in section 1.1.3: The interpreter itself evaluates expressions using a tree-recursive process."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__287121,G__287122) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__287121,G__287122));
})()," But even in numerical operations, tree-recursive processes can be useful in helping us to understand and design programs. For instance, although the first ",(function (){var G__287123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fib"], null);
var G__287124 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__287123,G__287124) : tailrecursion.hoplon.markdown.code_node.call(null,G__287123,G__287124));
})()," procedure is much less efficient than the second one, it is more straightforward, being little more than a translation into Lisp of the definition of the Fibonacci sequence. To formulate the iterative algorithm required noticing that the computation could be recast as an iteration with three state variables."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287119,G__287120) : tailrecursion.hoplon.markdown.para_node.call(null,G__287119,G__287120));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_286885;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_286884;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_286883;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_286882;
}})()], 0));
var G__279990 = "";
var G__279991 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Example: Counting Change"], null),(function (){var _STAR_references_STAR_287125 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_287126 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_287127 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_287128 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__287129 = cljs.core.PersistentArrayMap.EMPTY;
var G__287130 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It takes only a bit of cleverness to come up with the iterative Fibonacci algorithm. In contrast, consider the following problem: How many different ways can we make change of $1.00, given half-dollars, quarters, dimes, nickels, and pennies? More generally, can we write a procedure to compute the number of ways to change any given amount of money?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287129,G__287130) : tailrecursion.hoplon.markdown.para_node.call(null,G__287129,G__287130));
})(),(function (){var G__287131 = cljs.core.PersistentArrayMap.EMPTY;
var G__287132 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This problem has a simple solution as a recursive procedure. Suppose we think of the types of coins available as arranged in some order. Then the following relation holds:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287131,G__287132) : tailrecursion.hoplon.markdown.para_node.call(null,G__287131,G__287132));
})(),(function (){var G__287133 = cljs.core.PersistentArrayMap.EMPTY;
var G__287134 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The number of ways to change amount \\(a\\) using \\(n\\) kinds of coins equals"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287133,G__287134) : tailrecursion.hoplon.markdown.para_node.call(null,G__287133,G__287134));
})(),(function (){var G__287135 = cljs.core.PersistentArrayMap.EMPTY;
var G__287136 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__287137 = cljs.core.PersistentArrayMap.EMPTY;
var G__287138 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__287139 = cljs.core.PersistentArrayMap.EMPTY;
var G__287140 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [" The number of ways to change amount \\(a\\) using all but the first kind of coin, plus"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287139,G__287140) : tailrecursion.hoplon.markdown.para_node.call(null,G__287139,G__287140));
})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__287137,G__287138) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__287137,G__287138));
})(),(function (){var G__287141 = cljs.core.PersistentArrayMap.EMPTY;
var G__287142 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_287143 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_287144 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__287145 = cljs.core.PersistentArrayMap.EMPTY;
var G__287146 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The number of ways to change amount \\(a-d\\) using all \\(n\\) kinds of coins, where \\(d\\) is the denomination of the first kind of coin."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287145,G__287146) : tailrecursion.hoplon.markdown.para_node.call(null,G__287145,G__287146));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_287144;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_287143;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__287141,G__287142) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__287141,G__287142));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__287135,G__287136) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__287135,G__287136));
})(),(function (){var G__287147 = cljs.core.PersistentArrayMap.EMPTY;
var G__287148 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To see why this is true, observe that the ways to make change can be divided into two groups: those that do not use any of the first kind, and those that do. Therefore, the total number of ways to make change for some amount is equal to the number of ways to make change for the amount without using any of the first kind of coin, plus the number of ways to make change assuming that we do use the first kind of coin. But the latter number is equal to the number of ways to make change for the amount that remains after using a coin of the first kind."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287147,G__287148) : tailrecursion.hoplon.markdown.para_node.call(null,G__287147,G__287148));
})(),(function (){var G__287149 = cljs.core.PersistentArrayMap.EMPTY;
var G__287150 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Thus, we can recursively reduce the problem of changing a give amount to the problem of changing smaller amounts using fewer kinds of coins. Consider this reduction rule carefully, and convince yourself that we can use it to describe an algorithm if we specify the following degenerate cases:",(function (){var G__287151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__287152 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For example, work through in detail how the reduction rule applies to the problem of making change for 10 cents using pennies and nickels."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__287151,G__287152) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__287151,G__287152));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287149,G__287150) : tailrecursion.hoplon.markdown.para_node.call(null,G__287149,G__287150));
})(),(function (){var G__287153 = cljs.core.PersistentArrayMap.EMPTY;
var G__287154 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__287155 = cljs.core.PersistentArrayMap.EMPTY;
var G__287156 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__287157 = cljs.core.PersistentArrayMap.EMPTY;
var G__287158 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(a\\) is exactly 0, we should count that as 1 way to make change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287157,G__287158) : tailrecursion.hoplon.markdown.para_node.call(null,G__287157,G__287158));
})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__287155,G__287156) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__287155,G__287156));
})(),(function (){var G__287159 = cljs.core.PersistentArrayMap.EMPTY;
var G__287160 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_287161 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_287162 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__287163 = cljs.core.PersistentArrayMap.EMPTY;
var G__287164 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(a\\) is less than 0, we should count that as 0 ways to make change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287163,G__287164) : tailrecursion.hoplon.markdown.para_node.call(null,G__287163,G__287164));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_287162;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_287161;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__287159,G__287160) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__287159,G__287160));
})(),(function (){var G__287165 = cljs.core.PersistentArrayMap.EMPTY;
var G__287166 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_287167 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_287168 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__287169 = cljs.core.PersistentArrayMap.EMPTY;
var G__287170 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(n\\) is 0, we should count that as 0 ways to make change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287169,G__287170) : tailrecursion.hoplon.markdown.para_node.call(null,G__287169,G__287170));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_287168;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_287167;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__287165,G__287166) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__287165,G__287166));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__287153,G__287154) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__287153,G__287154));
})(),(function (){var G__287171 = cljs.core.PersistentArrayMap.EMPTY;
var G__287172 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can easily translate this description into a recursive procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287171,G__287172) : tailrecursion.hoplon.markdown.para_node.call(null,G__287171,G__287172));
})(),(function (){var G__287200 = (function (){var G__287201 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__287202 = (function (){var G__287203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__287204 = "(";
var G__287205 = (function (){var G__287216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__287217 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287216,G__287217) : tailrecursion.hoplon.span.call(null,G__287216,G__287217));
})();
var G__287206 = (function (){var G__287218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287219 = "count-change";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287218,G__287219) : tailrecursion.hoplon.span.call(null,G__287218,G__287219));
})();
var G__287207 = " [";
var G__287208 = (function (){var G__287220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287221 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287220,G__287221) : tailrecursion.hoplon.span.call(null,G__287220,G__287221));
})();
var G__287209 = "]\n  (";
var G__287210 = (function (){var G__287222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__287223 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287222,G__287223) : tailrecursion.hoplon.span.call(null,G__287222,G__287223));
})();
var G__287211 = " ";
var G__287212 = (function (){var G__287224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287225 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287224,G__287225) : tailrecursion.hoplon.span.call(null,G__287224,G__287225));
})();
var G__287213 = " ";
var G__287214 = (function (){var G__287226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287227 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287226,G__287227) : tailrecursion.hoplon.span.call(null,G__287226,G__287227));
})();
var G__287215 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__287203,G__287204,G__287205,G__287206,G__287207,G__287208,G__287209,G__287210,G__287211,G__287212,G__287213,G__287214,G__287215) : tailrecursion.hoplon.pre.call(null,G__287203,G__287204,G__287205,G__287206,G__287207,G__287208,G__287209,G__287210,G__287211,G__287212,G__287213,G__287214,G__287215));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__287201,G__287202) : tailrecursion.hoplon.div.call(null,G__287201,G__287202));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__287200) : tailrecursion.hoplon.div.call(null,G__287200));
})(),(function (){var G__287228 = cljs.core.PersistentArrayMap.EMPTY;
var G__287229 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["given that we",(function (){var G__287230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__287231 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__287230,G__287231) : tailrecursion.hoplon.markdown.simple_node.call(null,G__287230,G__287231));
})(),"ve defined"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287228,G__287229) : tailrecursion.hoplon.markdown.para_node.call(null,G__287228,G__287229));
})(),(function (){var G__287350 = (function (){var G__287351 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__287352 = (function (){var G__287353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__287354 = "(";
var G__287355 = (function (){var G__287409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__287410 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287409,G__287410) : tailrecursion.hoplon.span.call(null,G__287409,G__287410));
})();
var G__287356 = (function (){var G__287411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287412 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287411,G__287412) : tailrecursion.hoplon.span.call(null,G__287411,G__287412));
})();
var G__287357 = " [";
var G__287358 = (function (){var G__287413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287414 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287413,G__287414) : tailrecursion.hoplon.span.call(null,G__287413,G__287414));
})();
var G__287359 = " ";
var G__287360 = (function (){var G__287415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287416 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287415,G__287416) : tailrecursion.hoplon.span.call(null,G__287415,G__287416));
})();
var G__287361 = "]\n  (";
var G__287362 = (function (){var G__287417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287418 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287417,G__287418) : tailrecursion.hoplon.span.call(null,G__287417,G__287418));
})();
var G__287363 = "(";
var G__287364 = (function (){var G__287419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287420 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287419,G__287420) : tailrecursion.hoplon.span.call(null,G__287419,G__287420));
})();
var G__287365 = (function (){var G__287421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287422 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287421,G__287422) : tailrecursion.hoplon.span.call(null,G__287421,G__287422));
})();
var G__287366 = " ";
var G__287367 = (function (){var G__287423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287424 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287423,G__287424) : tailrecursion.hoplon.span.call(null,G__287423,G__287424));
})();
var G__287368 = ") ";
var G__287369 = (function (){var G__287425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287426 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287425,G__287426) : tailrecursion.hoplon.span.call(null,G__287425,G__287426));
})();
var G__287370 = "\n        (";
var G__287371 = (function (){var G__287427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287428 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287427,G__287428) : tailrecursion.hoplon.span.call(null,G__287427,G__287428));
})();
var G__287372 = "(";
var G__287373 = (function (){var G__287429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287430 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287429,G__287430) : tailrecursion.hoplon.span.call(null,G__287429,G__287430));
})();
var G__287374 = (function (){var G__287431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287432 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287431,G__287432) : tailrecursion.hoplon.span.call(null,G__287431,G__287432));
})();
var G__287375 = " ";
var G__287376 = (function (){var G__287433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287434 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287433,G__287434) : tailrecursion.hoplon.span.call(null,G__287433,G__287434));
})();
var G__287377 = ") (";
var G__287378 = (function (){var G__287435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287436 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287435,G__287436) : tailrecursion.hoplon.span.call(null,G__287435,G__287436));
})();
var G__287379 = (function (){var G__287437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287438 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287437,G__287438) : tailrecursion.hoplon.span.call(null,G__287437,G__287438));
})();
var G__287380 = " ";
var G__287381 = (function (){var G__287439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287440 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287439,G__287440) : tailrecursion.hoplon.span.call(null,G__287439,G__287440));
})();
var G__287382 = ")) ";
var G__287383 = (function (){var G__287441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287442 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287441,G__287442) : tailrecursion.hoplon.span.call(null,G__287441,G__287442));
})();
var G__287384 = "\n        ";
var G__287385 = (function (){var G__287443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287444 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287443,G__287444) : tailrecursion.hoplon.span.call(null,G__287443,G__287444));
})();
var G__287386 = " (";
var G__287387 = (function (){var G__287445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287446 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287445,G__287446) : tailrecursion.hoplon.span.call(null,G__287445,G__287446));
})();
var G__287388 = "(";
var G__287389 = (function (){var G__287447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__287448 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287447,G__287448) : tailrecursion.hoplon.span.call(null,G__287447,G__287448));
})();
var G__287390 = " ";
var G__287391 = (function (){var G__287449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287450 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287449,G__287450) : tailrecursion.hoplon.span.call(null,G__287449,G__287450));
})();
var G__287392 = " (";
var G__287393 = (function (){var G__287451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287452 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287451,G__287452) : tailrecursion.hoplon.span.call(null,G__287451,G__287452));
})();
var G__287394 = (function (){var G__287453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287454 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287453,G__287454) : tailrecursion.hoplon.span.call(null,G__287453,G__287454));
})();
var G__287395 = " ";
var G__287396 = (function (){var G__287455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287456 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287455,G__287456) : tailrecursion.hoplon.span.call(null,G__287455,G__287456));
})();
var G__287397 = "))\n                 (";
var G__287398 = (function (){var G__287457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__287458 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287457,G__287458) : tailrecursion.hoplon.span.call(null,G__287457,G__287458));
})();
var G__287399 = " (";
var G__287400 = (function (){var G__287459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287460 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287459,G__287460) : tailrecursion.hoplon.span.call(null,G__287459,G__287460));
})();
var G__287401 = (function (){var G__287461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287462 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287461,G__287462) : tailrecursion.hoplon.span.call(null,G__287461,G__287462));
})();
var G__287402 = " (";
var G__287403 = (function (){var G__287463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__287464 = "first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287463,G__287464) : tailrecursion.hoplon.span.call(null,G__287463,G__287464));
})();
var G__287404 = " ";
var G__287405 = (function (){var G__287465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287466 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287465,G__287466) : tailrecursion.hoplon.span.call(null,G__287465,G__287466));
})();
var G__287406 = ")) ";
var G__287407 = (function (){var G__287467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287468 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287467,G__287468) : tailrecursion.hoplon.span.call(null,G__287467,G__287468));
})();
var G__287408 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$56 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$56(G__287353,G__287354,G__287355,G__287356,G__287357,G__287358,G__287359,G__287360,G__287361,G__287362,G__287363,G__287364,G__287365,G__287366,G__287367,G__287368,G__287369,G__287370,G__287371,G__287372,G__287373,G__287374,G__287375,G__287376,G__287377,G__287378,G__287379,G__287380,G__287381,G__287382,G__287383,G__287384,G__287385,G__287386,G__287387,G__287388,G__287389,G__287390,G__287391,G__287392,G__287393,G__287394,G__287395,G__287396,G__287397,G__287398,G__287399,G__287400,G__287401,G__287402,G__287403,G__287404,G__287405,G__287406,G__287407,G__287408) : tailrecursion.hoplon.pre.call(null,G__287353,G__287354,G__287355,G__287356,G__287357,G__287358,G__287359,G__287360,G__287361,G__287362,G__287363,G__287364,G__287365,G__287366,G__287367,G__287368,G__287369,G__287370,G__287371,G__287372,G__287373,G__287374,G__287375,G__287376,G__287377,G__287378,G__287379,G__287380,G__287381,G__287382,G__287383,G__287384,G__287385,G__287386,G__287387,G__287388,G__287389,G__287390,G__287391,G__287392,G__287393,G__287394,G__287395,G__287396,G__287397,G__287398,G__287399,G__287400,G__287401,G__287402,G__287403,G__287404,G__287405,G__287406,G__287407,G__287408));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__287351,G__287352) : tailrecursion.hoplon.div.call(null,G__287351,G__287352));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__287350) : tailrecursion.hoplon.div.call(null,G__287350));
})(),(function (){var G__287469 = cljs.core.PersistentArrayMap.EMPTY;
var G__287470 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287469,G__287470) : tailrecursion.hoplon.markdown.para_node.call(null,G__287469,G__287470));
})(),(function (){var G__287565 = (function (){var G__287566 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__287567 = (function (){var G__287568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__287569 = "(";
var G__287570 = (function (){var G__287612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__287613 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287612,G__287613) : tailrecursion.hoplon.span.call(null,G__287612,G__287613));
})();
var G__287571 = (function (){var G__287614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287615 = "first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287614,G__287615) : tailrecursion.hoplon.span.call(null,G__287614,G__287615));
})();
var G__287572 = " [";
var G__287573 = (function (){var G__287616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287617 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287616,G__287617) : tailrecursion.hoplon.span.call(null,G__287616,G__287617));
})();
var G__287574 = "]\n  (";
var G__287575 = (function (){var G__287618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287619 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287618,G__287619) : tailrecursion.hoplon.span.call(null,G__287618,G__287619));
})();
var G__287576 = "(";
var G__287577 = (function (){var G__287620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287621 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287620,G__287621) : tailrecursion.hoplon.span.call(null,G__287620,G__287621));
})();
var G__287578 = (function (){var G__287622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287623 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287622,G__287623) : tailrecursion.hoplon.span.call(null,G__287622,G__287623));
})();
var G__287579 = " ";
var G__287580 = (function (){var G__287624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287625 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287624,G__287625) : tailrecursion.hoplon.span.call(null,G__287624,G__287625));
})();
var G__287581 = ") ";
var G__287582 = (function (){var G__287626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287627 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287626,G__287627) : tailrecursion.hoplon.span.call(null,G__287626,G__287627));
})();
var G__287583 = "\n        (";
var G__287584 = (function (){var G__287628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287629 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287628,G__287629) : tailrecursion.hoplon.span.call(null,G__287628,G__287629));
})();
var G__287585 = (function (){var G__287630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287631 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287630,G__287631) : tailrecursion.hoplon.span.call(null,G__287630,G__287631));
})();
var G__287586 = " ";
var G__287587 = (function (){var G__287632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287633 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287632,G__287633) : tailrecursion.hoplon.span.call(null,G__287632,G__287633));
})();
var G__287588 = ") ";
var G__287589 = (function (){var G__287634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287635 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287634,G__287635) : tailrecursion.hoplon.span.call(null,G__287634,G__287635));
})();
var G__287590 = "\n        (";
var G__287591 = (function (){var G__287636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287637 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287636,G__287637) : tailrecursion.hoplon.span.call(null,G__287636,G__287637));
})();
var G__287592 = (function (){var G__287638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287639 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287638,G__287639) : tailrecursion.hoplon.span.call(null,G__287638,G__287639));
})();
var G__287593 = " ";
var G__287594 = (function (){var G__287640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287641 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287640,G__287641) : tailrecursion.hoplon.span.call(null,G__287640,G__287641));
})();
var G__287595 = ") ";
var G__287596 = (function (){var G__287642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287643 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287642,G__287643) : tailrecursion.hoplon.span.call(null,G__287642,G__287643));
})();
var G__287597 = "\n        (";
var G__287598 = (function (){var G__287644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287645 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287644,G__287645) : tailrecursion.hoplon.span.call(null,G__287644,G__287645));
})();
var G__287599 = (function (){var G__287646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287647 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287646,G__287647) : tailrecursion.hoplon.span.call(null,G__287646,G__287647));
})();
var G__287600 = " ";
var G__287601 = (function (){var G__287648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287649 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287648,G__287649) : tailrecursion.hoplon.span.call(null,G__287648,G__287649));
})();
var G__287602 = ") ";
var G__287603 = (function (){var G__287650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287651 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287650,G__287651) : tailrecursion.hoplon.span.call(null,G__287650,G__287651));
})();
var G__287604 = "\n        (";
var G__287605 = (function (){var G__287652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287653 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287652,G__287653) : tailrecursion.hoplon.span.call(null,G__287652,G__287653));
})();
var G__287606 = (function (){var G__287654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287655 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287654,G__287655) : tailrecursion.hoplon.span.call(null,G__287654,G__287655));
})();
var G__287607 = " ";
var G__287608 = (function (){var G__287656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287657 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287656,G__287657) : tailrecursion.hoplon.span.call(null,G__287656,G__287657));
})();
var G__287609 = ") ";
var G__287610 = (function (){var G__287658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287659 = "50";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287658,G__287659) : tailrecursion.hoplon.span.call(null,G__287658,G__287659));
})();
var G__287611 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$44 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$44(G__287568,G__287569,G__287570,G__287571,G__287572,G__287573,G__287574,G__287575,G__287576,G__287577,G__287578,G__287579,G__287580,G__287581,G__287582,G__287583,G__287584,G__287585,G__287586,G__287587,G__287588,G__287589,G__287590,G__287591,G__287592,G__287593,G__287594,G__287595,G__287596,G__287597,G__287598,G__287599,G__287600,G__287601,G__287602,G__287603,G__287604,G__287605,G__287606,G__287607,G__287608,G__287609,G__287610,G__287611) : tailrecursion.hoplon.pre.call(null,G__287568,G__287569,G__287570,G__287571,G__287572,G__287573,G__287574,G__287575,G__287576,G__287577,G__287578,G__287579,G__287580,G__287581,G__287582,G__287583,G__287584,G__287585,G__287586,G__287587,G__287588,G__287589,G__287590,G__287591,G__287592,G__287593,G__287594,G__287595,G__287596,G__287597,G__287598,G__287599,G__287600,G__287601,G__287602,G__287603,G__287604,G__287605,G__287606,G__287607,G__287608,G__287609,G__287610,G__287611));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__287566,G__287567) : tailrecursion.hoplon.div.call(null,G__287566,G__287567));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__287565) : tailrecursion.hoplon.div.call(null,G__287565));
})(),(function (){var G__287660 = cljs.core.PersistentArrayMap.EMPTY;
var G__287661 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__287662 = cljs.core.PersistentArrayMap.EMPTY;
var G__287663 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note that I made the stipulation that we",(function (){var G__287664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__287665 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__287664,G__287665) : tailrecursion.hoplon.markdown.simple_node.call(null,G__287664,G__287665));
})(),"ve already defined the two next things. I said this because the REPL we",(function (){var G__287666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__287667 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__287666,G__287667) : tailrecursion.hoplon.markdown.simple_node.call(null,G__287666,G__287667));
})(),"re using for this book will return an error if you use somthing that has not been previously defined, so if we try to use ",(function (){var G__287668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first-denomination"], null);
var G__287669 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__287668,G__287669) : tailrecursion.hoplon.markdown.code_node.call(null,G__287668,G__287669));
})()," in a function definition before we",(function (){var G__287670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__287671 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__287670,G__287671) : tailrecursion.hoplon.markdown.simple_node.call(null,G__287670,G__287671));
})(),"ve defined ",(function (){var G__287672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first-denomination"], null);
var G__287673 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__287672,G__287673) : tailrecursion.hoplon.markdown.code_node.call(null,G__287672,G__287673));
})(),", the program won",(function (){var G__287674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__287675 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__287674,G__287675) : tailrecursion.hoplon.markdown.simple_node.call(null,G__287674,G__287675));
})(),"t compile. I introduced the functions in the order I did for two reasons: 1) it",(function (){var G__287676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__287677 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__287676,G__287677) : tailrecursion.hoplon.markdown.simple_node.call(null,G__287676,G__287677));
})(),"s the same order that is used in the original SICP, and 2) it makes more sense pedagogically."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287662,G__287663) : tailrecursion.hoplon.markdown.para_node.call(null,G__287662,G__287663));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__287660,G__287661) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__287660,G__287661));
})(),(function (){var G__287678 = cljs.core.PersistentArrayMap.EMPTY;
var G__287679 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(The ",(function (){var G__287680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first-denomination"], null);
var G__287681 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__287680,G__287681) : tailrecursion.hoplon.markdown.code_node.call(null,G__287680,G__287681));
})()," procedure takes as input the number of kinds of coins available and returns the denomination of the first kind. Here we are thinking of the coins as arranged in order from largest to smallest, but any order would do as well.) We can now answer our original question about changing a dollar:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287678,G__287679) : tailrecursion.hoplon.markdown.para_node.call(null,G__287678,G__287679));
})(),(function (){var G__287698 = (function (){var G__287699 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__287700 = (function (){var G__287701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__287702 = "(";
var G__287703 = (function (){var G__287709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__287710 = "count-change";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287709,G__287710) : tailrecursion.hoplon.span.call(null,G__287709,G__287710));
})();
var G__287704 = " ";
var G__287705 = (function (){var G__287711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287712 = "100";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287711,G__287712) : tailrecursion.hoplon.span.call(null,G__287711,G__287712));
})();
var G__287706 = ")\n";
var G__287707 = (function (){var G__287713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287714 = "292";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287713,G__287714) : tailrecursion.hoplon.span.call(null,G__287713,G__287714));
})();
var G__287708 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__287701,G__287702,G__287703,G__287704,G__287705,G__287706,G__287707,G__287708) : tailrecursion.hoplon.pre.call(null,G__287701,G__287702,G__287703,G__287704,G__287705,G__287706,G__287707,G__287708));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__287699,G__287700) : tailrecursion.hoplon.div.call(null,G__287699,G__287700));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__287698) : tailrecursion.hoplon.div.call(null,G__287698));
})(),(function (){var G__287715 = cljs.core.PersistentArrayMap.EMPTY;
var G__287716 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__287717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"count-change"], null);
var G__287718 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__287717,G__287718) : tailrecursion.hoplon.markdown.code_node.call(null,G__287717,G__287718));
})()," generates a tree-recursive process with redundancies similar to those in our first implementation of ",(function (){var G__287719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fib"], null);
var G__287720 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__287719,G__287720) : tailrecursion.hoplon.markdown.code_node.call(null,G__287719,G__287720));
})(),". (It will take quite a wile for that 292 to be computed.) On the other hand, it is not obvious hwo to design a better algorithm for computing the result, and we leave this problem as a challenge. The observation that a tree-recursive process may be highly inefficient but often easy to specify and understand has led people to propose that one could get the best of both worlds by designing a ",(function (){var G__287721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__287722 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["smart compiler"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__287721,G__287722) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__287721,G__287722));
})()," that could transform tree-recusive procedures into more efficient procedures that compute the same result.",(function (){var G__287723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__287724 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One approach to coping with redundant computations is to arrange matters so that we automatically construct a table of values as they are computed. Each time we are asked to apply the procedure to some argument, we first look to see if the value is already stored in the table, in which case we avoid performing the redundant computation. This strategy, known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tabulation"], null)], 0))," or ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["memoization"], null)], 0)),", can be implemented in a straightforward way. Tabulation can sometimes be used to transform processes that require an exponential number of steps (such as ",(function (){var G__287725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"count-change"], null);
var G__287726 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__287725,G__287726) : tailrecursion.hoplon.markdown.code_node.call(null,G__287725,G__287726));
})(),") into processes whose space and time requirements grow linearly with the input. See exercise 3.27."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__287723,G__287724) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__287723,G__287724));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287715,G__287716) : tailrecursion.hoplon.markdown.para_node.call(null,G__287715,G__287716));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_287128;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_287127;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_287126;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_287125;
}})()], 0));
var G__279992 = "";
var G__279993 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"11-13"], null),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(11)], null),(function (){var _STAR_references_STAR_287727 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_287728 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_287729 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_287730 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__287731 = cljs.core.PersistentArrayMap.EMPTY;
var G__287732 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A function \\(f\\) is defined by the rule that \\(f(n)=f(n-1)+2f(n-2)+3f(n-3)\\) if \\(n\\geq3\\). Write a procedure that computes \\(f\\) by means of a recursive process. Write a procedure that computes \\(f\\) by a means of an iterative process."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287731,G__287732) : tailrecursion.hoplon.markdown.para_node.call(null,G__287731,G__287732));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_287730;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_287729;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_287728;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_287727;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_287733 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_287734 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_287735 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_287736 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__287737 = cljs.core.PersistentArrayMap.EMPTY;
var G__287738 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Recursive:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287737,G__287738) : tailrecursion.hoplon.markdown.para_node.call(null,G__287737,G__287738));
})(),(function (){var G__287836 = (function (){var G__287837 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__287838 = (function (){var G__287839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__287840 = "(";
var G__287841 = (function (){var G__287884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__287885 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287884,G__287885) : tailrecursion.hoplon.span.call(null,G__287884,G__287885));
})();
var G__287842 = (function (){var G__287886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287887 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287886,G__287887) : tailrecursion.hoplon.span.call(null,G__287886,G__287887));
})();
var G__287843 = " [";
var G__287844 = (function (){var G__287888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287889 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287888,G__287889) : tailrecursion.hoplon.span.call(null,G__287888,G__287889));
})();
var G__287845 = "]\n  (";
var G__287846 = (function (){var G__287890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__287891 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287890,G__287891) : tailrecursion.hoplon.span.call(null,G__287890,G__287891));
})();
var G__287847 = "(";
var G__287848 = (function (){var G__287892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287893 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287892,G__287893) : tailrecursion.hoplon.span.call(null,G__287892,G__287893));
})();
var G__287849 = (function (){var G__287894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287895 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287894,G__287895) : tailrecursion.hoplon.span.call(null,G__287894,G__287895));
})();
var G__287850 = " ";
var G__287851 = (function (){var G__287896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287897 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287896,G__287897) : tailrecursion.hoplon.span.call(null,G__287896,G__287897));
})();
var G__287852 = ")\n      ";
var G__287853 = (function (){var G__287898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287899 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287898,G__287899) : tailrecursion.hoplon.span.call(null,G__287898,G__287899));
})();
var G__287854 = "\n      (";
var G__287855 = (function (){var G__287900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287901 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287900,G__287901) : tailrecursion.hoplon.span.call(null,G__287900,G__287901));
})();
var G__287856 = "(";
var G__287857 = (function (){var G__287902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__287903 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287902,G__287903) : tailrecursion.hoplon.span.call(null,G__287902,G__287903));
})();
var G__287858 = " (";
var G__287859 = (function (){var G__287904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287905 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287904,G__287905) : tailrecursion.hoplon.span.call(null,G__287904,G__287905));
})();
var G__287860 = (function (){var G__287906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287907 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287906,G__287907) : tailrecursion.hoplon.span.call(null,G__287906,G__287907));
})();
var G__287861 = " ";
var G__287862 = (function (){var G__287908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287909 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287908,G__287909) : tailrecursion.hoplon.span.call(null,G__287908,G__287909));
})();
var G__287863 = ")) \n         (";
var G__287864 = (function (){var G__287910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287911 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287910,G__287911) : tailrecursion.hoplon.span.call(null,G__287910,G__287911));
})();
var G__287865 = (function (){var G__287912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287913 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287912,G__287913) : tailrecursion.hoplon.span.call(null,G__287912,G__287913));
})();
var G__287866 = " (";
var G__287867 = (function (){var G__287914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__287915 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287914,G__287915) : tailrecursion.hoplon.span.call(null,G__287914,G__287915));
})();
var G__287868 = " (";
var G__287869 = (function (){var G__287916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287917 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287916,G__287917) : tailrecursion.hoplon.span.call(null,G__287916,G__287917));
})();
var G__287870 = (function (){var G__287918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287919 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287918,G__287919) : tailrecursion.hoplon.span.call(null,G__287918,G__287919));
})();
var G__287871 = " ";
var G__287872 = (function (){var G__287920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287921 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287920,G__287921) : tailrecursion.hoplon.span.call(null,G__287920,G__287921));
})();
var G__287873 = "))) \n         (";
var G__287874 = (function (){var G__287922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287923 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287922,G__287923) : tailrecursion.hoplon.span.call(null,G__287922,G__287923));
})();
var G__287875 = (function (){var G__287924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287925 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287924,G__287925) : tailrecursion.hoplon.span.call(null,G__287924,G__287925));
})();
var G__287876 = " (";
var G__287877 = (function (){var G__287926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__287927 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287926,G__287927) : tailrecursion.hoplon.span.call(null,G__287926,G__287927));
})();
var G__287878 = " (";
var G__287879 = (function (){var G__287928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__287929 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287928,G__287929) : tailrecursion.hoplon.span.call(null,G__287928,G__287929));
})();
var G__287880 = (function (){var G__287930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__287931 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287930,G__287931) : tailrecursion.hoplon.span.call(null,G__287930,G__287931));
})();
var G__287881 = " ";
var G__287882 = (function (){var G__287932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__287933 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__287932,G__287933) : tailrecursion.hoplon.span.call(null,G__287932,G__287933));
})();
var G__287883 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45(G__287839,G__287840,G__287841,G__287842,G__287843,G__287844,G__287845,G__287846,G__287847,G__287848,G__287849,G__287850,G__287851,G__287852,G__287853,G__287854,G__287855,G__287856,G__287857,G__287858,G__287859,G__287860,G__287861,G__287862,G__287863,G__287864,G__287865,G__287866,G__287867,G__287868,G__287869,G__287870,G__287871,G__287872,G__287873,G__287874,G__287875,G__287876,G__287877,G__287878,G__287879,G__287880,G__287881,G__287882,G__287883) : tailrecursion.hoplon.pre.call(null,G__287839,G__287840,G__287841,G__287842,G__287843,G__287844,G__287845,G__287846,G__287847,G__287848,G__287849,G__287850,G__287851,G__287852,G__287853,G__287854,G__287855,G__287856,G__287857,G__287858,G__287859,G__287860,G__287861,G__287862,G__287863,G__287864,G__287865,G__287866,G__287867,G__287868,G__287869,G__287870,G__287871,G__287872,G__287873,G__287874,G__287875,G__287876,G__287877,G__287878,G__287879,G__287880,G__287881,G__287882,G__287883));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__287837,G__287838) : tailrecursion.hoplon.div.call(null,G__287837,G__287838));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__287836) : tailrecursion.hoplon.div.call(null,G__287836));
})(),(function (){var G__287934 = cljs.core.PersistentArrayMap.EMPTY;
var G__287935 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Iterative:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__287934,G__287935) : tailrecursion.hoplon.markdown.para_node.call(null,G__287934,G__287935));
})(),(function (){var G__288080 = (function (){var G__288081 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__288082 = (function (){var G__288083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__288084 = "(";
var G__288085 = (function (){var G__288151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__288152 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288151,G__288152) : tailrecursion.hoplon.span.call(null,G__288151,G__288152));
})();
var G__288086 = (function (){var G__288153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288154 = "f-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288153,G__288154) : tailrecursion.hoplon.span.call(null,G__288153,G__288154));
})();
var G__288087 = " [";
var G__288088 = (function (){var G__288155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288156 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288155,G__288156) : tailrecursion.hoplon.span.call(null,G__288155,G__288156));
})();
var G__288089 = " ";
var G__288090 = (function (){var G__288157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288158 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288157,G__288158) : tailrecursion.hoplon.span.call(null,G__288157,G__288158));
})();
var G__288091 = " ";
var G__288092 = (function (){var G__288159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288160 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288159,G__288160) : tailrecursion.hoplon.span.call(null,G__288159,G__288160));
})();
var G__288093 = " ";
var G__288094 = (function (){var G__288161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288162 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288161,G__288162) : tailrecursion.hoplon.span.call(null,G__288161,G__288162));
})();
var G__288095 = "]\n  (";
var G__288096 = (function (){var G__288163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__288164 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288163,G__288164) : tailrecursion.hoplon.span.call(null,G__288163,G__288164));
})();
var G__288097 = "(";
var G__288098 = (function (){var G__288165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288166 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288165,G__288166) : tailrecursion.hoplon.span.call(null,G__288165,G__288166));
})();
var G__288099 = (function (){var G__288167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288168 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288167,G__288168) : tailrecursion.hoplon.span.call(null,G__288167,G__288168));
})();
var G__288100 = " ";
var G__288101 = (function (){var G__288169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288170 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288169,G__288170) : tailrecursion.hoplon.span.call(null,G__288169,G__288170));
})();
var G__288102 = ")\n      ";
var G__288103 = (function (){var G__288171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288172 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288171,G__288172) : tailrecursion.hoplon.span.call(null,G__288171,G__288172));
})();
var G__288104 = "\n      (";
var G__288105 = (function (){var G__288173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288174 = "f-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288173,G__288174) : tailrecursion.hoplon.span.call(null,G__288173,G__288174));
})();
var G__288106 = " (";
var G__288107 = (function (){var G__288175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288176 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288175,G__288176) : tailrecursion.hoplon.span.call(null,G__288175,G__288176));
})();
var G__288108 = (function (){var G__288177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288178 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288177,G__288178) : tailrecursion.hoplon.span.call(null,G__288177,G__288178));
})();
var G__288109 = ") (";
var G__288110 = (function (){var G__288179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288180 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288179,G__288180) : tailrecursion.hoplon.span.call(null,G__288179,G__288180));
})();
var G__288111 = (function (){var G__288181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288182 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288181,G__288182) : tailrecursion.hoplon.span.call(null,G__288181,G__288182));
})();
var G__288112 = " (";
var G__288113 = (function (){var G__288183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288184 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288183,G__288184) : tailrecursion.hoplon.span.call(null,G__288183,G__288184));
})();
var G__288114 = (function (){var G__288185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288186 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288185,G__288186) : tailrecursion.hoplon.span.call(null,G__288185,G__288186));
})();
var G__288115 = " ";
var G__288116 = (function (){var G__288187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288188 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288187,G__288188) : tailrecursion.hoplon.span.call(null,G__288187,G__288188));
})();
var G__288117 = ") (";
var G__288118 = (function (){var G__288189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288190 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288189,G__288190) : tailrecursion.hoplon.span.call(null,G__288189,G__288190));
})();
var G__288119 = (function (){var G__288191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288192 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288191,G__288192) : tailrecursion.hoplon.span.call(null,G__288191,G__288192));
})();
var G__288120 = " ";
var G__288121 = (function (){var G__288193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288194 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288193,G__288194) : tailrecursion.hoplon.span.call(null,G__288193,G__288194));
})();
var G__288122 = ")) ";
var G__288123 = (function (){var G__288195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288196 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288195,G__288196) : tailrecursion.hoplon.span.call(null,G__288195,G__288196));
})();
var G__288124 = " ";
var G__288125 = (function (){var G__288197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288198 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288197,G__288198) : tailrecursion.hoplon.span.call(null,G__288197,G__288198));
})();
var G__288126 = ")))\n(";
var G__288127 = (function (){var G__288199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__288200 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288199,G__288200) : tailrecursion.hoplon.span.call(null,G__288199,G__288200));
})();
var G__288128 = (function (){var G__288201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288202 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288201,G__288202) : tailrecursion.hoplon.span.call(null,G__288201,G__288202));
})();
var G__288129 = " [";
var G__288130 = (function (){var G__288203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288204 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288203,G__288204) : tailrecursion.hoplon.span.call(null,G__288203,G__288204));
})();
var G__288131 = "]\n  (";
var G__288132 = (function (){var G__288205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__288206 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288205,G__288206) : tailrecursion.hoplon.span.call(null,G__288205,G__288206));
})();
var G__288133 = "(";
var G__288134 = (function (){var G__288207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288208 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288207,G__288208) : tailrecursion.hoplon.span.call(null,G__288207,G__288208));
})();
var G__288135 = (function (){var G__288209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288210 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288209,G__288210) : tailrecursion.hoplon.span.call(null,G__288209,G__288210));
})();
var G__288136 = " ";
var G__288137 = (function (){var G__288211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288212 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288211,G__288212) : tailrecursion.hoplon.span.call(null,G__288211,G__288212));
})();
var G__288138 = ")\n      ";
var G__288139 = (function (){var G__288213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288214 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288213,G__288214) : tailrecursion.hoplon.span.call(null,G__288213,G__288214));
})();
var G__288140 = "\n      (";
var G__288141 = (function (){var G__288215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288216 = "f-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288215,G__288216) : tailrecursion.hoplon.span.call(null,G__288215,G__288216));
})();
var G__288142 = " ";
var G__288143 = (function (){var G__288217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288218 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288217,G__288218) : tailrecursion.hoplon.span.call(null,G__288217,G__288218));
})();
var G__288144 = " ";
var G__288145 = (function (){var G__288219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288220 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288219,G__288220) : tailrecursion.hoplon.span.call(null,G__288219,G__288220));
})();
var G__288146 = " ";
var G__288147 = (function (){var G__288221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288222 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288221,G__288222) : tailrecursion.hoplon.span.call(null,G__288221,G__288222));
})();
var G__288148 = " ";
var G__288149 = (function (){var G__288223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288224 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288223,G__288224) : tailrecursion.hoplon.span.call(null,G__288223,G__288224));
})();
var G__288150 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$68 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$68(G__288083,G__288084,G__288085,G__288086,G__288087,G__288088,G__288089,G__288090,G__288091,G__288092,G__288093,G__288094,G__288095,G__288096,G__288097,G__288098,G__288099,G__288100,G__288101,G__288102,G__288103,G__288104,G__288105,G__288106,G__288107,G__288108,G__288109,G__288110,G__288111,G__288112,G__288113,G__288114,G__288115,G__288116,G__288117,G__288118,G__288119,G__288120,G__288121,G__288122,G__288123,G__288124,G__288125,G__288126,G__288127,G__288128,G__288129,G__288130,G__288131,G__288132,G__288133,G__288134,G__288135,G__288136,G__288137,G__288138,G__288139,G__288140,G__288141,G__288142,G__288143,G__288144,G__288145,G__288146,G__288147,G__288148,G__288149,G__288150) : tailrecursion.hoplon.pre.call(null,G__288083,G__288084,G__288085,G__288086,G__288087,G__288088,G__288089,G__288090,G__288091,G__288092,G__288093,G__288094,G__288095,G__288096,G__288097,G__288098,G__288099,G__288100,G__288101,G__288102,G__288103,G__288104,G__288105,G__288106,G__288107,G__288108,G__288109,G__288110,G__288111,G__288112,G__288113,G__288114,G__288115,G__288116,G__288117,G__288118,G__288119,G__288120,G__288121,G__288122,G__288123,G__288124,G__288125,G__288126,G__288127,G__288128,G__288129,G__288130,G__288131,G__288132,G__288133,G__288134,G__288135,G__288136,G__288137,G__288138,G__288139,G__288140,G__288141,G__288142,G__288143,G__288144,G__288145,G__288146,G__288147,G__288148,G__288149,G__288150));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__288081,G__288082) : tailrecursion.hoplon.div.call(null,G__288081,G__288082));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__288080) : tailrecursion.hoplon.div.call(null,G__288080));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_287736;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_287735;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_287734;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_287733;
}})()], 0))], 0)),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(12)], null),(function (){var _STAR_references_STAR_288225 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288226 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288227 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288228 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288229 = cljs.core.PersistentArrayMap.EMPTY;
var G__288230 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following patter is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Pascal",(function (){var G__288231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__288232 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__288231,G__288232) : tailrecursion.hoplon.markdown.simple_node.call(null,G__288231,G__288232));
})(),"s Triangle"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288229,G__288230) : tailrecursion.hoplon.markdown.para_node.call(null,G__288229,G__288230));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288228;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288227;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288226;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288225;
}})(),book.sicp.book_data.image.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$src,"/img/sicp/exercise1_12.gif"], null)], 0)),(function (){var _STAR_references_STAR_288233 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288234 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288235 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288236 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288237 = cljs.core.PersistentArrayMap.EMPTY;
var G__288238 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The numbers at the edge of the triangle are all 1, and each number inside the triangle is the sum of the two numbers above it.",(function (){var G__288239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__288240 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The elements of Pascal",(function (){var G__288241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__288242 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__288241,G__288242) : tailrecursion.hoplon.markdown.simple_node.call(null,G__288241,G__288242));
})(),"s triangle are called the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["binomial coefficients"], null)], 0)),", because the \\(n\\)th row consists of the coefficients of the terms in the expansion of \\((x + y)^n\\). This pattern for computing the coefficients appeared in Blaise Pascal",(function (){var G__288243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__288244 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__288243,G__288244) : tailrecursion.hoplon.markdown.simple_node.call(null,G__288243,G__288244));
})(),"s 1653 seminal work on probability theory, ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Trait\u00E9 du triangle arithm\u00E9tique"], null)], 0)),". According to Knuth (1973), the same pattern appears in the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Szu-yuen Y\u00FC-chien"], null)], 0))," (",(function (){var G__288245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__288246 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The Precious Mirror of the Four Elements"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__288245,G__288246) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__288245,G__288246));
})(),"), published by the Chinese mathematician Chu Shih-chieh in 1303, in the works of the twelfth-century Persian poet and mathematician Omar Khayyam, and in the works of the twelfth-century Hindu mathematician Bh\u00E1scara \u00C1ch\u00E1rya."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__288239,G__288240) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__288239,G__288240));
})()," Write a procedure that computes elements of Pascal",(function (){var G__288247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__288248 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__288247,G__288248) : tailrecursion.hoplon.markdown.simple_node.call(null,G__288247,G__288248));
})(),"s Triangle by means of a recursive process."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288237,G__288238) : tailrecursion.hoplon.markdown.para_node.call(null,G__288237,G__288238));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288236;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288235;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288234;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288233;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_288249 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288250 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288251 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288252 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288400 = (function (){var G__288401 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__288402 = (function (){var G__288403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__288404 = "(";
var G__288405 = (function (){var G__288472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__288473 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288472,G__288473) : tailrecursion.hoplon.span.call(null,G__288472,G__288473));
})();
var G__288406 = (function (){var G__288474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288475 = "pascal";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288474,G__288475) : tailrecursion.hoplon.span.call(null,G__288474,G__288475));
})();
var G__288407 = " [";
var G__288408 = (function (){var G__288476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288477 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288476,G__288477) : tailrecursion.hoplon.span.call(null,G__288476,G__288477));
})();
var G__288409 = " ";
var G__288410 = (function (){var G__288478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288479 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288478,G__288479) : tailrecursion.hoplon.span.call(null,G__288478,G__288479));
})();
var G__288411 = "]\n  (";
var G__288412 = (function (){var G__288480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288481 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288480,G__288481) : tailrecursion.hoplon.span.call(null,G__288480,G__288481));
})();
var G__288413 = "(";
var G__288414 = (function (){var G__288482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288483 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288482,G__288483) : tailrecursion.hoplon.span.call(null,G__288482,G__288483));
})();
var G__288415 = "(";
var G__288416 = (function (){var G__288484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288485 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288484,G__288485) : tailrecursion.hoplon.span.call(null,G__288484,G__288485));
})();
var G__288417 = (function (){var G__288486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288487 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288486,G__288487) : tailrecursion.hoplon.span.call(null,G__288486,G__288487));
})();
var G__288418 = " ";
var G__288419 = (function (){var G__288488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288489 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288488,G__288489) : tailrecursion.hoplon.span.call(null,G__288488,G__288489));
})();
var G__288420 = ") (";
var G__288421 = (function (){var G__288490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288491 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288490,G__288491) : tailrecursion.hoplon.span.call(null,G__288490,G__288491));
})();
var G__288422 = (function (){var G__288492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288493 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288492,G__288493) : tailrecursion.hoplon.span.call(null,G__288492,G__288493));
})();
var G__288423 = " ";
var G__288424 = (function (){var G__288494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288495 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288494,G__288495) : tailrecursion.hoplon.span.call(null,G__288494,G__288495));
})();
var G__288425 = ") (";
var G__288426 = (function (){var G__288496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288497 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288496,G__288497) : tailrecursion.hoplon.span.call(null,G__288496,G__288497));
})();
var G__288427 = (function (){var G__288498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288499 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288498,G__288499) : tailrecursion.hoplon.span.call(null,G__288498,G__288499));
})();
var G__288428 = " ";
var G__288429 = (function (){var G__288500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288501 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288500,G__288501) : tailrecursion.hoplon.span.call(null,G__288500,G__288501));
})();
var G__288430 = ")) ";
var G__288431 = (function (){var G__288502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288503 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288502,G__288503) : tailrecursion.hoplon.span.call(null,G__288502,G__288503));
})();
var G__288432 = "\n        (";
var G__288433 = (function (){var G__288504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288505 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288504,G__288505) : tailrecursion.hoplon.span.call(null,G__288504,G__288505));
})();
var G__288434 = "(";
var G__288435 = (function (){var G__288506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288507 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288506,G__288507) : tailrecursion.hoplon.span.call(null,G__288506,G__288507));
})();
var G__288436 = (function (){var G__288508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288509 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288508,G__288509) : tailrecursion.hoplon.span.call(null,G__288508,G__288509));
})();
var G__288437 = " ";
var G__288438 = (function (){var G__288510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288511 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288510,G__288511) : tailrecursion.hoplon.span.call(null,G__288510,G__288511));
})();
var G__288439 = ") (";
var G__288440 = (function (){var G__288512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288513 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288512,G__288513) : tailrecursion.hoplon.span.call(null,G__288512,G__288513));
})();
var G__288441 = (function (){var G__288514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288515 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288514,G__288515) : tailrecursion.hoplon.span.call(null,G__288514,G__288515));
})();
var G__288442 = " ";
var G__288443 = (function (){var G__288516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288517 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288516,G__288517) : tailrecursion.hoplon.span.call(null,G__288516,G__288517));
})();
var G__288444 = ")) ";
var G__288445 = (function (){var G__288518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288519 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288518,G__288519) : tailrecursion.hoplon.span.call(null,G__288518,G__288519));
})();
var G__288446 = "\n        ";
var G__288447 = (function (){var G__288520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288521 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288520,G__288521) : tailrecursion.hoplon.span.call(null,G__288520,G__288521));
})();
var G__288448 = " (";
var G__288449 = (function (){var G__288522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288523 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288522,G__288523) : tailrecursion.hoplon.span.call(null,G__288522,G__288523));
})();
var G__288450 = "(";
var G__288451 = (function (){var G__288524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288525 = "pascal";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288524,G__288525) : tailrecursion.hoplon.span.call(null,G__288524,G__288525));
})();
var G__288452 = " (";
var G__288453 = (function (){var G__288526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288527 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288526,G__288527) : tailrecursion.hoplon.span.call(null,G__288526,G__288527));
})();
var G__288454 = (function (){var G__288528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288529 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288528,G__288529) : tailrecursion.hoplon.span.call(null,G__288528,G__288529));
})();
var G__288455 = " ";
var G__288456 = (function (){var G__288530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288531 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288530,G__288531) : tailrecursion.hoplon.span.call(null,G__288530,G__288531));
})();
var G__288457 = ") (";
var G__288458 = (function (){var G__288532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288533 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288532,G__288533) : tailrecursion.hoplon.span.call(null,G__288532,G__288533));
})();
var G__288459 = (function (){var G__288534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288535 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288534,G__288535) : tailrecursion.hoplon.span.call(null,G__288534,G__288535));
})();
var G__288460 = " ";
var G__288461 = (function (){var G__288536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288537 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288536,G__288537) : tailrecursion.hoplon.span.call(null,G__288536,G__288537));
})();
var G__288462 = "))\n                 (";
var G__288463 = (function (){var G__288538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288539 = "pascal";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288538,G__288539) : tailrecursion.hoplon.span.call(null,G__288538,G__288539));
})();
var G__288464 = " (";
var G__288465 = (function (){var G__288540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288541 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288540,G__288541) : tailrecursion.hoplon.span.call(null,G__288540,G__288541));
})();
var G__288466 = (function (){var G__288542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288543 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288542,G__288543) : tailrecursion.hoplon.span.call(null,G__288542,G__288543));
})();
var G__288467 = " ";
var G__288468 = (function (){var G__288544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288545 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288544,G__288545) : tailrecursion.hoplon.span.call(null,G__288544,G__288545));
})();
var G__288469 = ") ";
var G__288470 = (function (){var G__288546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288547 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288546,G__288547) : tailrecursion.hoplon.span.call(null,G__288546,G__288547));
})();
var G__288471 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69(G__288403,G__288404,G__288405,G__288406,G__288407,G__288408,G__288409,G__288410,G__288411,G__288412,G__288413,G__288414,G__288415,G__288416,G__288417,G__288418,G__288419,G__288420,G__288421,G__288422,G__288423,G__288424,G__288425,G__288426,G__288427,G__288428,G__288429,G__288430,G__288431,G__288432,G__288433,G__288434,G__288435,G__288436,G__288437,G__288438,G__288439,G__288440,G__288441,G__288442,G__288443,G__288444,G__288445,G__288446,G__288447,G__288448,G__288449,G__288450,G__288451,G__288452,G__288453,G__288454,G__288455,G__288456,G__288457,G__288458,G__288459,G__288460,G__288461,G__288462,G__288463,G__288464,G__288465,G__288466,G__288467,G__288468,G__288469,G__288470,G__288471) : tailrecursion.hoplon.pre.call(null,G__288403,G__288404,G__288405,G__288406,G__288407,G__288408,G__288409,G__288410,G__288411,G__288412,G__288413,G__288414,G__288415,G__288416,G__288417,G__288418,G__288419,G__288420,G__288421,G__288422,G__288423,G__288424,G__288425,G__288426,G__288427,G__288428,G__288429,G__288430,G__288431,G__288432,G__288433,G__288434,G__288435,G__288436,G__288437,G__288438,G__288439,G__288440,G__288441,G__288442,G__288443,G__288444,G__288445,G__288446,G__288447,G__288448,G__288449,G__288450,G__288451,G__288452,G__288453,G__288454,G__288455,G__288456,G__288457,G__288458,G__288459,G__288460,G__288461,G__288462,G__288463,G__288464,G__288465,G__288466,G__288467,G__288468,G__288469,G__288470,G__288471));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__288401,G__288402) : tailrecursion.hoplon.div.call(null,G__288401,G__288402));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__288400) : tailrecursion.hoplon.div.call(null,G__288400));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288252;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288251;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288250;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288249;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(13)], null),(function (){var _STAR_references_STAR_288548 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288549 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288550 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288551 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288552 = cljs.core.PersistentArrayMap.EMPTY;
var G__288553 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Prove that \\(Fib(n)\\) is the closest integer to \\(\\phi^n/\\sqrt5\\), where \\(\\phi=\\left(1+\\sqrt5\\right)/2\\). Hint: let \\(\\psi=\\left(1-\\sqrt5\\right)/2\\) Use induction and the definition of the Fibonacci numbers (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/ch/1/sect/2/sub/2",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0)),") to prove that \\(Fib(n)=\\left(\\phi^n-\\psi^n\\right)/\\sqrt5\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288552,G__288553) : tailrecursion.hoplon.markdown.para_node.call(null,G__288552,G__288553));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288551;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288550;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288549;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288548;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_288554 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288555 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288556 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288557 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 21, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288558 = cljs.core.PersistentArrayMap.EMPTY;
var G__288559 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__288560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__288561 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__288560,G__288561) : tailrecursion.hoplon.markdown.simple_node.call(null,G__288560,G__288561));
})(),"s pick a natural number \\(n\\) and state our inductive hypothesis:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288558,G__288559) : tailrecursion.hoplon.markdown.para_node.call(null,G__288558,G__288559));
})(),(function (){var G__288562 = cljs.core.PersistentArrayMap.EMPTY;
var G__288563 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Assume that for any \\(k< n\\), \\(Fib(k)=\\left(\\phi^k-\\psi^k\\right)/\\sqrt5\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288562,G__288563) : tailrecursion.hoplon.markdown.para_node.call(null,G__288562,G__288563));
})(),(function (){var G__288564 = cljs.core.PersistentArrayMap.EMPTY;
var G__288565 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case 1: \\(n=0\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288564,G__288565) : tailrecursion.hoplon.markdown.para_node.call(null,G__288564,G__288565));
})(),(function (){var G__288566 = cljs.core.PersistentArrayMap.EMPTY;
var G__288567 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then note: \\( Fib(0)= 0 =\\frac{1-1}{\\sqrt5}=\\frac{\\phi^0-\\psi^0}{\\sqrt5}\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288566,G__288567) : tailrecursion.hoplon.markdown.para_node.call(null,G__288566,G__288567));
})(),(function (){var G__288568 = cljs.core.PersistentArrayMap.EMPTY;
var G__288569 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case 2: \\( n = 1\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288568,G__288569) : tailrecursion.hoplon.markdown.para_node.call(null,G__288568,G__288569));
})(),(function (){var G__288570 = cljs.core.PersistentArrayMap.EMPTY;
var G__288571 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then \\(\\frac{\\phi^1-\\psi^1}{\\sqrt5} =\\frac{\\left(\\frac{1+\\sqrt5}{2}\\right)^1-\\left(\\frac{1-\\sqrt5}{2}\\right)^1}{\\sqrt5} =\\frac{\\sqrt5}{\\sqrt5}= 1= Fib(1)\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288570,G__288571) : tailrecursion.hoplon.markdown.para_node.call(null,G__288570,G__288571));
})(),(function (){var G__288572 = cljs.core.PersistentArrayMap.EMPTY;
var G__288573 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Our last case is if \\(n > 1\\):"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288572,G__288573) : tailrecursion.hoplon.markdown.para_node.call(null,G__288572,G__288573));
})(),(function (){var G__288574 = cljs.core.PersistentArrayMap.EMPTY;
var G__288575 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then, $$\\frac{\\phi^n-\\psi^n}{\\sqrt5} =\\frac{\\phi^{n-2}\\phi^2-\\psi^{n-2}\\psi^2}{\\sqrt5}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288574,G__288575) : tailrecursion.hoplon.markdown.para_node.call(null,G__288574,G__288575));
})(),(function (){var G__288576 = cljs.core.PersistentArrayMap.EMPTY;
var G__288577 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=\\frac{\\phi^{n-2}\\left(\\frac{1+\\sqrt5}{2}\\right)^2-\\psi^{n-2}\\left(\\frac{1-\\sqrt5}{2}\\right)^2}{\\sqrt5}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288576,G__288577) : tailrecursion.hoplon.markdown.para_node.call(null,G__288576,G__288577));
})(),(function (){var G__288578 = cljs.core.PersistentArrayMap.EMPTY;
var G__288579 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=\\frac{\\phi^{n-2}\\left(\\frac{6+2\\sqrt5}{4}\\right)-\\psi^{n-2}\\left(\\frac{6-2\\sqrt5}{4}\\right)}{\\sqrt5}$$ "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288578,G__288579) : tailrecursion.hoplon.markdown.para_node.call(null,G__288578,G__288579));
})(),(function (){var G__288580 = cljs.core.PersistentArrayMap.EMPTY;
var G__288581 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=\\frac{\\phi^{n-2}-\\psi^{n-2}}{\\sqrt5}+\\frac{\\phi^{n-2}\\left(\\frac{1+\\sqrt5}{2}\\right)-\\psi^{n-2}\\left(\\frac{1-2\\sqrt5}{2}\\right)}{\\sqrt5}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288580,G__288581) : tailrecursion.hoplon.markdown.para_node.call(null,G__288580,G__288581));
})(),(function (){var G__288582 = cljs.core.PersistentArrayMap.EMPTY;
var G__288583 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=Fib(n-2)+\\frac{\\phi^{n-1}-\\psi^{n-1}}{\\sqrt5}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288582,G__288583) : tailrecursion.hoplon.markdown.para_node.call(null,G__288582,G__288583));
})(),(function (){var G__288584 = cljs.core.PersistentArrayMap.EMPTY;
var G__288585 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=Fib(n-2)+Fib(n-1)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288584,G__288585) : tailrecursion.hoplon.markdown.para_node.call(null,G__288584,G__288585));
})(),(function (){var G__288586 = cljs.core.PersistentArrayMap.EMPTY;
var G__288587 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=Fib(n)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288586,G__288587) : tailrecursion.hoplon.markdown.para_node.call(null,G__288586,G__288587));
})(),(function (){var G__288588 = cljs.core.PersistentArrayMap.EMPTY;
var G__288589 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, in general, \\(Fib(n)=\\frac{\\phi^n-\\psi^n}{\\sqrt5}\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288588,G__288589) : tailrecursion.hoplon.markdown.para_node.call(null,G__288588,G__288589));
})(),(function (){var G__288590 = cljs.core.PersistentArrayMap.EMPTY;
var G__288591 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now, to prove that \\(Fib(n)\\) is the integer closest to \\(\\phi^n/\\sqrt5\\). First we note that since \\(\\psi^2< 0.4\\), \\(\\sqrt5>1\\) and \\(\\frac{\\phi^n-\\psi^n}{\\sqrt5}\\) is an integer, we know for any \\(n\\geq2\\), "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288590,G__288591) : tailrecursion.hoplon.markdown.para_node.call(null,G__288590,G__288591));
})(),(function (){var G__288592 = cljs.core.PersistentArrayMap.EMPTY;
var G__288593 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\left|\\frac{\\phi^n}{\\sqrt5}-Fib(n)\\right| =\\left|\\frac{\\phi^n}{\\sqrt5}-\\frac{\\phi^n-\\psi^n}{\\sqrt5}\\right| =\\left|\\frac{\\psi^n}{\\sqrt5}\\right|< 0.4$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288592,G__288593) : tailrecursion.hoplon.markdown.para_node.call(null,G__288592,G__288593));
})(),(function (){var G__288594 = cljs.core.PersistentArrayMap.EMPTY;
var G__288595 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So that the closest integer to \\(\\frac{\\phi^n}{\\sqrt5}\\) must be \\(Fib(n)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288594,G__288595) : tailrecursion.hoplon.markdown.para_node.call(null,G__288594,G__288595));
})(),(function (){var G__288596 = cljs.core.PersistentArrayMap.EMPTY;
var G__288597 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for when \\(n< 2\\), we can check one by one."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288596,G__288597) : tailrecursion.hoplon.markdown.para_node.call(null,G__288596,G__288597));
})(),(function (){var G__288598 = cljs.core.PersistentArrayMap.EMPTY;
var G__288599 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case \\(n = 0\\): \\(\\frac{1}{\\sqrt5}< 0.45\\), so that the closest integer is 0 (\\(Fib(0)\\))."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288598,G__288599) : tailrecursion.hoplon.markdown.para_node.call(null,G__288598,G__288599));
})(),(function (){var G__288600 = cljs.core.PersistentArrayMap.EMPTY;
var G__288601 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case \\(n=1\\): \\(\\frac{\\frac{1+\\sqrt5}{2}}{\\sqrt5}\\approx0.72\\), so that the closest integer is \\(Fib(1)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288600,G__288601) : tailrecursion.hoplon.markdown.para_node.call(null,G__288600,G__288601));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288557;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288556;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288555;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288554;
}})()], 0))], 0))], 0));
var G__279994 = "";
var G__279995 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Orders of Growth"], null),(function (){var _STAR_references_STAR_288602 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288603 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288604 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288605 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288606 = cljs.core.PersistentArrayMap.EMPTY;
var G__288607 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The previous examples illustrate that processes can differ considerably in the rates at which they consume computational resources. One convenient way to describe this difference is to use the notion of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["order of growth"], null)], 0))," to obtain a gross measure of the resources required by a process as the inputs become larger."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288606,G__288607) : tailrecursion.hoplon.markdown.para_node.call(null,G__288606,G__288607));
})(),(function (){var G__288608 = cljs.core.PersistentArrayMap.EMPTY;
var G__288609 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let \\(n\\) be a parameter that measures the size of the problem, and let \\(R(n)\\) be the amount of resources the process requires for a problem of size \\(n\\). In our previous examples we took \\(n\\) to be the number for which a given function is to be computed, but there are other possibilities. For instance, if our goal is to compute an approximation to the square root of a number, we might take \\(n\\) to be the number of digits accuracy required. For matrix multiplication we might take \\(n\\) to be the number of rows in the matrices. In general there are a number of properties of the problem with respect to which it will be desirable to analyze a given process. Similarly, \\(R(n)\\) might measure the number of internal storage registers used, the number of elementary machine operations performed, and so on. In computers that do only a fixed number of operations at a time, the time required will be proportional to the number of elementary machine operations performed."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288608,G__288609) : tailrecursion.hoplon.markdown.para_node.call(null,G__288608,G__288609));
})(),(function (){var G__288610 = cljs.core.PersistentArrayMap.EMPTY;
var G__288611 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We say \\(R(n)\\) has order of growth \\(\\Theta(f(n))\\), written \\(R(n)=\\Theta(f(n))\\) (pronounced ",(function (){var G__288612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__288613 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["theta of \\(f(n)\\)"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__288612,G__288613) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__288612,G__288613));
})(),"), if there are positive constants \\(k_1\\) and \\(k_2\\) independent of \\(n\\) such that"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288610,G__288611) : tailrecursion.hoplon.markdown.para_node.call(null,G__288610,G__288611));
})(),(function (){var G__288614 = cljs.core.PersistentArrayMap.EMPTY;
var G__288615 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$k_1f(n)\\leq R(n)\\leq k_2f(n)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288614,G__288615) : tailrecursion.hoplon.markdown.para_node.call(null,G__288614,G__288615));
})(),(function (){var G__288616 = cljs.core.PersistentArrayMap.EMPTY;
var G__288617 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["for any sufficiently large value of \\(n\\). (In other words, for large \\(n\\), the value of \\(R(n)\\) is sandwiched between \\(k_1f(n)\\) and \\(k_2f(n)\\).)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288616,G__288617) : tailrecursion.hoplon.markdown.para_node.call(null,G__288616,G__288617));
})(),(function (){var G__288618 = cljs.core.PersistentArrayMap.EMPTY;
var G__288619 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For instance, with the linear recursive process for computing factorial described in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/ch/1/sect/2/sub/1/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.1"], null)], 0))," the number of steps grows proportionally to the input \\(n\\). Thus, the steps required for this process grows as \\(\\Theta(n)\\). We also saw that the space required grows as \\(\\Theta(n)\\). For the iterative factorial, the number of steps is still \\(\\Theta(n)\\) but the space is \\(\\Theta(1)\\) ",(function (){var G__288620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__288621 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__288620,G__288621) : tailrecursion.hoplon.markdown.simple_node.call(null,G__288620,G__288621));
})()," that is, constant.",(function (){var G__288622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__288623 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["These statements mask a great deal of oversimplification. For instance, if we count process steps as ",(function (){var G__288624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__288625 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["machine operations"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__288624,G__288625) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__288624,G__288625));
})()," we are making the assumption that the number of machine operations needed to perform, say, a multiplication is independent of the size of the numbers to be multiplied, which is false if the numbers are sufficiently large. Similar remarks hold for the estimates of space. Like the design and description of a process, the analysis of a process can be carried out at various levels of abstraction."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__288622,G__288623) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__288622,G__288623));
})()," The tree-recursive Fibonacci computation requires \\(\\Theta(\\phi^n)\\) steps and space \\(\\Theta(n)\\), where \\(\\phi\\) is the golden ratio described in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/ch/1/sect/2/sub/2/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288618,G__288619) : tailrecursion.hoplon.markdown.para_node.call(null,G__288618,G__288619));
})(),(function (){var G__288626 = cljs.core.PersistentArrayMap.EMPTY;
var G__288627 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Orders of growth provide only a crude description of the behavior of a process. For example, a process requiring \\(n^2\\) steps and a process requiring \\(1000n^2\\) steps and a process requiring \\(3n^2+10n+17\\) steps all have \\(\\Theta(n^2)\\) order of growth. On the other hand, order of growth provides a useful indication of how we may expect the behavior of the process to change as we change the size of the problem. For a \\(\\Theta(n)\\) (linear) process, doubling the size will roughly double the amount of resources used. For an exponential process, each increment in problem size will multiply the resource utilization by a constant factor. In the remainder of section 1.2 we will examine two algorithms whose order of growth is logarithmic, so that doubling the problem size increases the resource requirment by a constant amount."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288626,G__288627) : tailrecursion.hoplon.markdown.para_node.call(null,G__288626,G__288627));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288605;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288604;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288603;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288602;
}})()], 0));
var G__279996 = "";
var G__279997 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"14-15"], null),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(14)], null),(function (){var _STAR_references_STAR_288628 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288629 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288630 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288631 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288632 = cljs.core.PersistentArrayMap.EMPTY;
var G__288633 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Draw the tree illustrating the process generated by the ",(function (){var G__288634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"count-change"], null);
var G__288635 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__288634,G__288635) : tailrecursion.hoplon.markdown.code_node.call(null,G__288634,G__288635));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/ch/1/sect/2/sub/2/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0))," in making change for 11 cents. What are the orders of growth of the space and number of steps used by this process as the amount to be changed increases?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288632,G__288633) : tailrecursion.hoplon.markdown.para_node.call(null,G__288632,G__288633));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288631;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288630;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288629;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288628;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_288636 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288637 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288638 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288639 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288640 = cljs.core.PersistentArrayMap.EMPTY;
var G__288641 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Things will go here (once I get this LaTeX thing all sorted out)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288640,G__288641) : tailrecursion.hoplon.markdown.para_node.call(null,G__288640,G__288641));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288639;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288638;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288637;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288636;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(15)], null),(function (){var _STAR_references_STAR_288642 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288643 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288644 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288645 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288646 = cljs.core.PersistentArrayMap.EMPTY;
var G__288647 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The sine of an angle (specified in radians) can be computed by making use of the approximation \\(\\sin x\\approx x\\) if \\(x\\) is sufficiently small, and the trigonometric identity"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288646,G__288647) : tailrecursion.hoplon.markdown.para_node.call(null,G__288646,G__288647));
})(),(function (){var G__288648 = cljs.core.PersistentArrayMap.EMPTY;
var G__288649 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\sin x = 3\\sin\\frac{x}{3}-4\\sin^3\\frac{x}{3}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288648,G__288649) : tailrecursion.hoplon.markdown.para_node.call(null,G__288648,G__288649));
})(),(function (){var G__288650 = cljs.core.PersistentArrayMap.EMPTY;
var G__288651 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["to reduce the size of the argument of \\(\\sin\\). (For purposes of this exerise an angle is considered ",(function (){var G__288652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__288653 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sufficiently small"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__288652,G__288653) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__288652,G__288653));
})()," if its magnitude is not greater than 0.1 radians.) These ideas are incorporated in the following procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288650,G__288651) : tailrecursion.hoplon.markdown.para_node.call(null,G__288650,G__288651));
})(),(function (){var G__288783 = (function (){var G__288784 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__288785 = (function (){var G__288786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__288787 = "(";
var G__288788 = (function (){var G__288847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__288848 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288847,G__288848) : tailrecursion.hoplon.span.call(null,G__288847,G__288848));
})();
var G__288789 = (function (){var G__288849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288850 = "cub";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288849,G__288850) : tailrecursion.hoplon.span.call(null,G__288849,G__288850));
})();
var G__288790 = " [";
var G__288791 = (function (){var G__288851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288852 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288851,G__288852) : tailrecursion.hoplon.span.call(null,G__288851,G__288852));
})();
var G__288792 = "] (";
var G__288793 = (function (){var G__288853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288854 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288853,G__288854) : tailrecursion.hoplon.span.call(null,G__288853,G__288854));
})();
var G__288794 = (function (){var G__288855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288856 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288855,G__288856) : tailrecursion.hoplon.span.call(null,G__288855,G__288856));
})();
var G__288795 = " ";
var G__288796 = (function (){var G__288857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288858 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288857,G__288858) : tailrecursion.hoplon.span.call(null,G__288857,G__288858));
})();
var G__288797 = " ";
var G__288798 = (function (){var G__288859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288860 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288859,G__288860) : tailrecursion.hoplon.span.call(null,G__288859,G__288860));
})();
var G__288799 = "))\n(";
var G__288800 = (function (){var G__288861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__288862 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288861,G__288862) : tailrecursion.hoplon.span.call(null,G__288861,G__288862));
})();
var G__288801 = (function (){var G__288863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288864 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288863,G__288864) : tailrecursion.hoplon.span.call(null,G__288863,G__288864));
})();
var G__288802 = " [";
var G__288803 = (function (){var G__288865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288866 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288865,G__288866) : tailrecursion.hoplon.span.call(null,G__288865,G__288866));
})();
var G__288804 = "] (";
var G__288805 = (function (){var G__288867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288868 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288867,G__288868) : tailrecursion.hoplon.span.call(null,G__288867,G__288868));
})();
var G__288806 = "(";
var G__288807 = (function (){var G__288869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288870 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288869,G__288870) : tailrecursion.hoplon.span.call(null,G__288869,G__288870));
})();
var G__288808 = (function (){var G__288871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288872 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288871,G__288872) : tailrecursion.hoplon.span.call(null,G__288871,G__288872));
})();
var G__288809 = " ";
var G__288810 = (function (){var G__288873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288874 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288873,G__288874) : tailrecursion.hoplon.span.call(null,G__288873,G__288874));
})();
var G__288811 = ") (";
var G__288812 = (function (){var G__288875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288876 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288875,G__288876) : tailrecursion.hoplon.span.call(null,G__288875,G__288876));
})();
var G__288813 = (function (){var G__288877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288878 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288877,G__288878) : tailrecursion.hoplon.span.call(null,G__288877,G__288878));
})();
var G__288814 = " (";
var G__288815 = (function (){var G__288879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288880 = "cube";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288879,G__288880) : tailrecursion.hoplon.span.call(null,G__288879,G__288880));
})();
var G__288816 = " ";
var G__288817 = (function (){var G__288881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288882 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288881,G__288882) : tailrecursion.hoplon.span.call(null,G__288881,G__288882));
})();
var G__288818 = "))))\n(";
var G__288819 = (function (){var G__288883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__288884 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288883,G__288884) : tailrecursion.hoplon.span.call(null,G__288883,G__288884));
})();
var G__288820 = (function (){var G__288885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288886 = "sine";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288885,G__288886) : tailrecursion.hoplon.span.call(null,G__288885,G__288886));
})();
var G__288821 = " [";
var G__288822 = (function (){var G__288887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288888 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288887,G__288888) : tailrecursion.hoplon.span.call(null,G__288887,G__288888));
})();
var G__288823 = "]\n  (";
var G__288824 = (function (){var G__288889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__288890 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288889,G__288890) : tailrecursion.hoplon.span.call(null,G__288889,G__288890));
})();
var G__288825 = "(";
var G__288826 = (function (){var G__288891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288892 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288891,G__288892) : tailrecursion.hoplon.span.call(null,G__288891,G__288892));
})();
var G__288827 = "(";
var G__288828 = (function (){var G__288893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288894 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288893,G__288894) : tailrecursion.hoplon.span.call(null,G__288893,G__288894));
})();
var G__288829 = "(";
var G__288830 = (function (){var G__288895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288896 = "abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288895,G__288896) : tailrecursion.hoplon.span.call(null,G__288895,G__288896));
})();
var G__288831 = " ";
var G__288832 = (function (){var G__288897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288898 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288897,G__288898) : tailrecursion.hoplon.span.call(null,G__288897,G__288898));
})();
var G__288833 = ") ";
var G__288834 = (function (){var G__288899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288900 = "0.1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288899,G__288900) : tailrecursion.hoplon.span.call(null,G__288899,G__288900));
})();
var G__288835 = "))\n      ";
var G__288836 = (function (){var G__288901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288902 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288901,G__288902) : tailrecursion.hoplon.span.call(null,G__288901,G__288902));
})();
var G__288837 = "\n      (";
var G__288838 = (function (){var G__288903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288904 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288903,G__288904) : tailrecursion.hoplon.span.call(null,G__288903,G__288904));
})();
var G__288839 = " (";
var G__288840 = (function (){var G__288905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__288906 = "sine";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288905,G__288906) : tailrecursion.hoplon.span.call(null,G__288905,G__288906));
})();
var G__288841 = " (";
var G__288842 = (function (){var G__288907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__288908 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288907,G__288908) : tailrecursion.hoplon.span.call(null,G__288907,G__288908));
})();
var G__288843 = (function (){var G__288909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__288910 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288909,G__288910) : tailrecursion.hoplon.span.call(null,G__288909,G__288910));
})();
var G__288844 = " ";
var G__288845 = (function (){var G__288911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__288912 = "3.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__288911,G__288912) : tailrecursion.hoplon.span.call(null,G__288911,G__288912));
})();
var G__288846 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61(G__288786,G__288787,G__288788,G__288789,G__288790,G__288791,G__288792,G__288793,G__288794,G__288795,G__288796,G__288797,G__288798,G__288799,G__288800,G__288801,G__288802,G__288803,G__288804,G__288805,G__288806,G__288807,G__288808,G__288809,G__288810,G__288811,G__288812,G__288813,G__288814,G__288815,G__288816,G__288817,G__288818,G__288819,G__288820,G__288821,G__288822,G__288823,G__288824,G__288825,G__288826,G__288827,G__288828,G__288829,G__288830,G__288831,G__288832,G__288833,G__288834,G__288835,G__288836,G__288837,G__288838,G__288839,G__288840,G__288841,G__288842,G__288843,G__288844,G__288845,G__288846) : tailrecursion.hoplon.pre.call(null,G__288786,G__288787,G__288788,G__288789,G__288790,G__288791,G__288792,G__288793,G__288794,G__288795,G__288796,G__288797,G__288798,G__288799,G__288800,G__288801,G__288802,G__288803,G__288804,G__288805,G__288806,G__288807,G__288808,G__288809,G__288810,G__288811,G__288812,G__288813,G__288814,G__288815,G__288816,G__288817,G__288818,G__288819,G__288820,G__288821,G__288822,G__288823,G__288824,G__288825,G__288826,G__288827,G__288828,G__288829,G__288830,G__288831,G__288832,G__288833,G__288834,G__288835,G__288836,G__288837,G__288838,G__288839,G__288840,G__288841,G__288842,G__288843,G__288844,G__288845,G__288846));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__288784,G__288785) : tailrecursion.hoplon.div.call(null,G__288784,G__288785));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__288783) : tailrecursion.hoplon.div.call(null,G__288783));
})(),(function (){var G__288913 = cljs.core.PersistentArrayMap.EMPTY;
var G__288914 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a. How many times is the procedure \\(p\\) applied when ",(function (){var G__288915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(sine\n12.15)"], null);
var G__288916 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__288915,G__288916) : tailrecursion.hoplon.markdown.code_node.call(null,G__288915,G__288916));
})()," is evaluated?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288913,G__288914) : tailrecursion.hoplon.markdown.para_node.call(null,G__288913,G__288914));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288645;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288644;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288643;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288642;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_288917 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288918 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288919 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288920 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288921 = cljs.core.PersistentArrayMap.EMPTY;
var G__288922 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To do this we first realize that each iteration (until the angle \\(\\theta\\) is less than or equal to 0.1) divides the angle by three. Since this is applicative order, we know that each iteration will call ",(function (){var G__288923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"p"], null);
var G__288924 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__288923,G__288924) : tailrecursion.hoplon.markdown.code_node.call(null,G__288923,G__288924));
})()," exactly once. So this reduces to solving the equation,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288921,G__288922) : tailrecursion.hoplon.markdown.para_node.call(null,G__288921,G__288922));
})(),(function (){var G__288925 = cljs.core.PersistentArrayMap.EMPTY;
var G__288926 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$ \\frac{12.15}{3^n}\\leq 0.1 \\iff n\\geq 4.37",(function (){var G__288927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__288928 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__288927,G__288928) : tailrecursion.hoplon.markdown.simple_node.call(null,G__288927,G__288928));
})()," $$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288925,G__288926) : tailrecursion.hoplon.markdown.para_node.call(null,G__288925,G__288926));
})(),(function (){var G__288929 = cljs.core.PersistentArrayMap.EMPTY;
var G__288930 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since we",(function (){var G__288931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__288932 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__288931,G__288932) : tailrecursion.hoplon.markdown.simple_node.call(null,G__288931,G__288932));
})(),"re looking for an integer, we need \\(n=5\\). Hence, ",(function (){var G__288933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"p"], null);
var G__288934 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__288933,G__288934) : tailrecursion.hoplon.markdown.code_node.call(null,G__288933,G__288934));
})()," will be applied 5 times."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288929,G__288930) : tailrecursion.hoplon.markdown.para_node.call(null,G__288929,G__288930));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288920;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288919;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288918;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288917;
}})()], 0)),"",(function (){var _STAR_references_STAR_288935 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288936 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288937 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288938 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288939 = cljs.core.PersistentArrayMap.EMPTY;
var G__288940 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b. What is the order of growth in space and number of steps (as a function of \\(a\\)) used by the process generated by the ",(function (){var G__288941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sine"], null);
var G__288942 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__288941,G__288942) : tailrecursion.hoplon.markdown.code_node.call(null,G__288941,G__288942));
})()," procedure when ",(function (){var G__288943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(sine a)"], null);
var G__288944 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__288943,G__288944) : tailrecursion.hoplon.markdown.code_node.call(null,G__288943,G__288944));
})()," is evaluated?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288939,G__288940) : tailrecursion.hoplon.markdown.para_node.call(null,G__288939,G__288940));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288938;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288937;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288936;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288935;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_288945 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288946 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288947 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288948 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288949 = cljs.core.PersistentArrayMap.EMPTY;
var G__288950 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One could realize, just from noting that each step divides the argument by 3, that the order of growth in the number of steps required is logarithmic (doubling the argument only adds at most one more iteration, and hence a fixed number of steps)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288949,G__288950) : tailrecursion.hoplon.markdown.para_node.call(null,G__288949,G__288950));
})(),(function (){var G__288951 = cljs.core.PersistentArrayMap.EMPTY;
var G__288952 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As far as in the space required, it is also logarithmic because every time you triple the argument, you only add one more iteration."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288951,G__288952) : tailrecursion.hoplon.markdown.para_node.call(null,G__288951,G__288952));
})(),(function (){var G__288953 = cljs.core.PersistentArrayMap.EMPTY;
var G__288954 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So both have \\(\\Theta(\\log x)\\) order of growth."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288953,G__288954) : tailrecursion.hoplon.markdown.para_node.call(null,G__288953,G__288954));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288948;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288947;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288946;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288945;
}})()], 0))], 0))], 0));
var G__279998 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Exponentiation"], null),(function (){var _STAR_references_STAR_288955 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288956 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_288957 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_288958 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__288959 = cljs.core.PersistentArrayMap.EMPTY;
var G__288960 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the problem of computing the exponential of a given number. We would like a procedure that takes as arguments a base \\(b\\) and a positive integer exponent \\(n\\) and computes \\(b^n\\). One way to do this is via the recursive definition:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288959,G__288960) : tailrecursion.hoplon.markdown.para_node.call(null,G__288959,G__288960));
})(),(function (){var G__288961 = cljs.core.PersistentArrayMap.EMPTY;
var G__288962 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}b^n =& b\\cdot b^{n-1} \\\\ b^0=&1 \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288961,G__288962) : tailrecursion.hoplon.markdown.para_node.call(null,G__288961,G__288962));
})(),(function (){var G__288963 = cljs.core.PersistentArrayMap.EMPTY;
var G__288964 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Which translates readily into the procedure"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__288963,G__288964) : tailrecursion.hoplon.markdown.para_node.call(null,G__288963,G__288964));
})(),(function (){var G__289030 = (function (){var G__289031 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__289032 = (function (){var G__289033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__289034 = "(";
var G__289035 = (function (){var G__289064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289065 = "define";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289064,G__289065) : tailrecursion.hoplon.span.call(null,G__289064,G__289065));
})();
var G__289036 = " ";
var G__289037 = (function (){var G__289066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289067 = "expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289066,G__289067) : tailrecursion.hoplon.span.call(null,G__289066,G__289067));
})();
var G__289038 = " [";
var G__289039 = (function (){var G__289068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289069 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289068,G__289069) : tailrecursion.hoplon.span.call(null,G__289068,G__289069));
})();
var G__289040 = " ";
var G__289041 = (function (){var G__289070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289071 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289070,G__289071) : tailrecursion.hoplon.span.call(null,G__289070,G__289071));
})();
var G__289042 = "]\n  (";
var G__289043 = (function (){var G__289072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289073 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289072,G__289073) : tailrecursion.hoplon.span.call(null,G__289072,G__289073));
})();
var G__289044 = "(";
var G__289045 = (function (){var G__289074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289075 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289074,G__289075) : tailrecursion.hoplon.span.call(null,G__289074,G__289075));
})();
var G__289046 = (function (){var G__289076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289077 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289076,G__289077) : tailrecursion.hoplon.span.call(null,G__289076,G__289077));
})();
var G__289047 = " ";
var G__289048 = (function (){var G__289078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289079 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289078,G__289079) : tailrecursion.hoplon.span.call(null,G__289078,G__289079));
})();
var G__289049 = ")\n      ";
var G__289050 = (function (){var G__289080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289081 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289080,G__289081) : tailrecursion.hoplon.span.call(null,G__289080,G__289081));
})();
var G__289051 = "\n      (";
var G__289052 = (function (){var G__289082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289083 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289082,G__289083) : tailrecursion.hoplon.span.call(null,G__289082,G__289083));
})();
var G__289053 = (function (){var G__289084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289085 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289084,G__289085) : tailrecursion.hoplon.span.call(null,G__289084,G__289085));
})();
var G__289054 = " (";
var G__289055 = (function (){var G__289086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289087 = "expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289086,G__289087) : tailrecursion.hoplon.span.call(null,G__289086,G__289087));
})();
var G__289056 = " ";
var G__289057 = (function (){var G__289088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289089 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289088,G__289089) : tailrecursion.hoplon.span.call(null,G__289088,G__289089));
})();
var G__289058 = " (";
var G__289059 = (function (){var G__289090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289091 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289090,G__289091) : tailrecursion.hoplon.span.call(null,G__289090,G__289091));
})();
var G__289060 = (function (){var G__289092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289093 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289092,G__289093) : tailrecursion.hoplon.span.call(null,G__289092,G__289093));
})();
var G__289061 = " ";
var G__289062 = (function (){var G__289094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289095 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289094,G__289095) : tailrecursion.hoplon.span.call(null,G__289094,G__289095));
})();
var G__289063 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__289033,G__289034,G__289035,G__289036,G__289037,G__289038,G__289039,G__289040,G__289041,G__289042,G__289043,G__289044,G__289045,G__289046,G__289047,G__289048,G__289049,G__289050,G__289051,G__289052,G__289053,G__289054,G__289055,G__289056,G__289057,G__289058,G__289059,G__289060,G__289061,G__289062,G__289063) : tailrecursion.hoplon.pre.call(null,G__289033,G__289034,G__289035,G__289036,G__289037,G__289038,G__289039,G__289040,G__289041,G__289042,G__289043,G__289044,G__289045,G__289046,G__289047,G__289048,G__289049,G__289050,G__289051,G__289052,G__289053,G__289054,G__289055,G__289056,G__289057,G__289058,G__289059,G__289060,G__289061,G__289062,G__289063));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__289031,G__289032) : tailrecursion.hoplon.div.call(null,G__289031,G__289032));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__289030) : tailrecursion.hoplon.div.call(null,G__289030));
})(),(function (){var G__289096 = cljs.core.PersistentArrayMap.EMPTY;
var G__289097 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This is a linear recursive process, which requires \\(\\Theta(n)\\) steps and \\(\\Theta(n)\\) space. Just as with factorial, we can readily formulate an equivalent linear iteration:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289096,G__289097) : tailrecursion.hoplon.markdown.para_node.call(null,G__289096,G__289097));
})(),(function (){var G__289133 = (function (){var G__289134 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__289135 = (function (){var G__289136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__289137 = "(";
var G__289138 = (function (){var G__289153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289154 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289153,G__289154) : tailrecursion.hoplon.span.call(null,G__289153,G__289154));
})();
var G__289139 = (function (){var G__289155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289156 = "expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289155,G__289156) : tailrecursion.hoplon.span.call(null,G__289155,G__289156));
})();
var G__289140 = " [";
var G__289141 = (function (){var G__289157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289158 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289157,G__289158) : tailrecursion.hoplon.span.call(null,G__289157,G__289158));
})();
var G__289142 = " ";
var G__289143 = (function (){var G__289159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289160 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289159,G__289160) : tailrecursion.hoplon.span.call(null,G__289159,G__289160));
})();
var G__289144 = "]\n  (";
var G__289145 = (function (){var G__289161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289162 = "expt-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289161,G__289162) : tailrecursion.hoplon.span.call(null,G__289161,G__289162));
})();
var G__289146 = " ";
var G__289147 = (function (){var G__289163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289164 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289163,G__289164) : tailrecursion.hoplon.span.call(null,G__289163,G__289164));
})();
var G__289148 = " ";
var G__289149 = (function (){var G__289165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289166 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289165,G__289166) : tailrecursion.hoplon.span.call(null,G__289165,G__289166));
})();
var G__289150 = " ";
var G__289151 = (function (){var G__289167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289168 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289167,G__289168) : tailrecursion.hoplon.span.call(null,G__289167,G__289168));
})();
var G__289152 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__289136,G__289137,G__289138,G__289139,G__289140,G__289141,G__289142,G__289143,G__289144,G__289145,G__289146,G__289147,G__289148,G__289149,G__289150,G__289151,G__289152) : tailrecursion.hoplon.pre.call(null,G__289136,G__289137,G__289138,G__289139,G__289140,G__289141,G__289142,G__289143,G__289144,G__289145,G__289146,G__289147,G__289148,G__289149,G__289150,G__289151,G__289152));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__289134,G__289135) : tailrecursion.hoplon.div.call(null,G__289134,G__289135));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__289133) : tailrecursion.hoplon.div.call(null,G__289133));
})(),(function (){var G__289169 = cljs.core.PersistentArrayMap.EMPTY;
var G__289170 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["where"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289169,G__289170) : tailrecursion.hoplon.markdown.para_node.call(null,G__289169,G__289170));
})(),(function (){var G__289243 = (function (){var G__289244 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__289245 = (function (){var G__289246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__289247 = "(";
var G__289248 = (function (){var G__289280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289281 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289280,G__289281) : tailrecursion.hoplon.span.call(null,G__289280,G__289281));
})();
var G__289249 = (function (){var G__289282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289283 = "expt-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289282,G__289283) : tailrecursion.hoplon.span.call(null,G__289282,G__289283));
})();
var G__289250 = " [";
var G__289251 = (function (){var G__289284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289285 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289284,G__289285) : tailrecursion.hoplon.span.call(null,G__289284,G__289285));
})();
var G__289252 = " ";
var G__289253 = (function (){var G__289286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289287 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289286,G__289287) : tailrecursion.hoplon.span.call(null,G__289286,G__289287));
})();
var G__289254 = " ";
var G__289255 = (function (){var G__289288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289289 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289288,G__289289) : tailrecursion.hoplon.span.call(null,G__289288,G__289289));
})();
var G__289256 = "]\n  (";
var G__289257 = (function (){var G__289290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289291 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289290,G__289291) : tailrecursion.hoplon.span.call(null,G__289290,G__289291));
})();
var G__289258 = "(";
var G__289259 = (function (){var G__289292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289293 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289292,G__289293) : tailrecursion.hoplon.span.call(null,G__289292,G__289293));
})();
var G__289260 = (function (){var G__289294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289295 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289294,G__289295) : tailrecursion.hoplon.span.call(null,G__289294,G__289295));
})();
var G__289261 = " ";
var G__289262 = (function (){var G__289296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289297 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289296,G__289297) : tailrecursion.hoplon.span.call(null,G__289296,G__289297));
})();
var G__289263 = ")\n      ";
var G__289264 = (function (){var G__289298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289299 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289298,G__289299) : tailrecursion.hoplon.span.call(null,G__289298,G__289299));
})();
var G__289265 = "\n      (";
var G__289266 = (function (){var G__289300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289301 = "expt-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289300,G__289301) : tailrecursion.hoplon.span.call(null,G__289300,G__289301));
})();
var G__289267 = " ";
var G__289268 = (function (){var G__289302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289303 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289302,G__289303) : tailrecursion.hoplon.span.call(null,G__289302,G__289303));
})();
var G__289269 = "\n                 (";
var G__289270 = (function (){var G__289304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289305 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289304,G__289305) : tailrecursion.hoplon.span.call(null,G__289304,G__289305));
})();
var G__289271 = (function (){var G__289306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289307 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289306,G__289307) : tailrecursion.hoplon.span.call(null,G__289306,G__289307));
})();
var G__289272 = " ";
var G__289273 = (function (){var G__289308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289309 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289308,G__289309) : tailrecursion.hoplon.span.call(null,G__289308,G__289309));
})();
var G__289274 = ")\n                 (";
var G__289275 = (function (){var G__289310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289311 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289310,G__289311) : tailrecursion.hoplon.span.call(null,G__289310,G__289311));
})();
var G__289276 = (function (){var G__289312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289313 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289312,G__289313) : tailrecursion.hoplon.span.call(null,G__289312,G__289313));
})();
var G__289277 = " ";
var G__289278 = (function (){var G__289314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289315 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289314,G__289315) : tailrecursion.hoplon.span.call(null,G__289314,G__289315));
})();
var G__289279 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34(G__289246,G__289247,G__289248,G__289249,G__289250,G__289251,G__289252,G__289253,G__289254,G__289255,G__289256,G__289257,G__289258,G__289259,G__289260,G__289261,G__289262,G__289263,G__289264,G__289265,G__289266,G__289267,G__289268,G__289269,G__289270,G__289271,G__289272,G__289273,G__289274,G__289275,G__289276,G__289277,G__289278,G__289279) : tailrecursion.hoplon.pre.call(null,G__289246,G__289247,G__289248,G__289249,G__289250,G__289251,G__289252,G__289253,G__289254,G__289255,G__289256,G__289257,G__289258,G__289259,G__289260,G__289261,G__289262,G__289263,G__289264,G__289265,G__289266,G__289267,G__289268,G__289269,G__289270,G__289271,G__289272,G__289273,G__289274,G__289275,G__289276,G__289277,G__289278,G__289279));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__289244,G__289245) : tailrecursion.hoplon.div.call(null,G__289244,G__289245));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__289243) : tailrecursion.hoplon.div.call(null,G__289243));
})(),(function (){var G__289316 = cljs.core.PersistentArrayMap.EMPTY;
var G__289317 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This version requires \\(\\Theta(n)\\) steps and \\(\\Theta(1)\\) space."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289316,G__289317) : tailrecursion.hoplon.markdown.para_node.call(null,G__289316,G__289317));
})(),(function (){var G__289318 = cljs.core.PersistentArrayMap.EMPTY;
var G__289319 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can compute exponentials in fewer steps by using successive squaring. For instance, rather than computing \\(b^8\\) as \\(b\\cdot(b\\cdot(b\\cdot(b\\cdot(b\\cdot(b\\cdot(b\\cdot b))))))\\) we can compute it using three multiplications:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289318,G__289319) : tailrecursion.hoplon.markdown.para_node.call(null,G__289318,G__289319));
})(),(function (){var G__289320 = cljs.core.PersistentArrayMap.EMPTY;
var G__289321 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} b^2=& b\\cdot b  \\\\ b^4=& b^2\\cdot b^2  \\\\ b^8=& b^4\\cdot b^4\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289320,G__289321) : tailrecursion.hoplon.markdown.para_node.call(null,G__289320,G__289321));
})(),(function (){var G__289322 = cljs.core.PersistentArrayMap.EMPTY;
var G__289323 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This method works fine for exponents that are powers of 2. We can also take advantage of successive squaring in computing exponentials in general if we use the rule:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289322,G__289323) : tailrecursion.hoplon.markdown.para_node.call(null,G__289322,G__289323));
})(),(function (){var G__289324 = cljs.core.PersistentArrayMap.EMPTY;
var G__289325 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}  b^n=&(b^{n/2})^2 & \\text{if }& n \\text{ is even} \\\\  b^n=&b\\cdot b^{n-1} & \\text{if }& n \\text{ is odd}\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289324,G__289325) : tailrecursion.hoplon.markdown.para_node.call(null,G__289324,G__289325));
})(),(function (){var G__289326 = cljs.core.PersistentArrayMap.EMPTY;
var G__289327 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can express this method as a procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289326,G__289327) : tailrecursion.hoplon.markdown.para_node.call(null,G__289326,G__289327));
})(),(function (){var G__289363 = (function (){var G__289364 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__289365 = (function (){var G__289366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__289367 = "(";
var G__289368 = (function (){var G__289383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289384 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289383,G__289384) : tailrecursion.hoplon.span.call(null,G__289383,G__289384));
})();
var G__289369 = (function (){var G__289385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289386 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289385,G__289386) : tailrecursion.hoplon.span.call(null,G__289385,G__289386));
})();
var G__289370 = " [";
var G__289371 = (function (){var G__289387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289388 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289387,G__289388) : tailrecursion.hoplon.span.call(null,G__289387,G__289388));
})();
var G__289372 = "]\n  (";
var G__289373 = (function (){var G__289389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289390 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289389,G__289390) : tailrecursion.hoplon.span.call(null,G__289389,G__289390));
})();
var G__289374 = "(";
var G__289375 = (function (){var G__289391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289392 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289391,G__289392) : tailrecursion.hoplon.span.call(null,G__289391,G__289392));
})();
var G__289376 = " ";
var G__289377 = (function (){var G__289393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289394 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289393,G__289394) : tailrecursion.hoplon.span.call(null,G__289393,G__289394));
})();
var G__289378 = " ";
var G__289379 = (function (){var G__289395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289396 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289395,G__289396) : tailrecursion.hoplon.span.call(null,G__289395,G__289396));
})();
var G__289380 = ") ";
var G__289381 = (function (){var G__289397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289398 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289397,G__289398) : tailrecursion.hoplon.span.call(null,G__289397,G__289398));
})();
var G__289382 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__289366,G__289367,G__289368,G__289369,G__289370,G__289371,G__289372,G__289373,G__289374,G__289375,G__289376,G__289377,G__289378,G__289379,G__289380,G__289381,G__289382) : tailrecursion.hoplon.pre.call(null,G__289366,G__289367,G__289368,G__289369,G__289370,G__289371,G__289372,G__289373,G__289374,G__289375,G__289376,G__289377,G__289378,G__289379,G__289380,G__289381,G__289382));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__289364,G__289365) : tailrecursion.hoplon.div.call(null,G__289364,G__289365));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__289363) : tailrecursion.hoplon.div.call(null,G__289363));
})(),(function (){var G__289399 = cljs.core.PersistentArrayMap.EMPTY;
var G__289400 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__289401 = cljs.core.PersistentArrayMap.EMPTY;
var G__289402 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: In Clojure ",(function (){var G__289403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__289404 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289403,G__289404) : tailrecursion.hoplon.markdown.code_node.call(null,G__289403,G__289404));
})()," takes the place of ",(function (){var G__289405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"remainder"], null);
var G__289406 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289405,G__289406) : tailrecursion.hoplon.markdown.code_node.call(null,G__289405,G__289406));
})()," in Scheme."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289401,G__289402) : tailrecursion.hoplon.markdown.para_node.call(null,G__289401,G__289402));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__289399,G__289400) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__289399,G__289400));
})(),(function (){var G__289407 = cljs.core.PersistentArrayMap.EMPTY;
var G__289408 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The process evolved by ",(function (){var G__289409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-expt"], null);
var G__289410 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289409,G__289410) : tailrecursion.hoplon.markdown.code_node.call(null,G__289409,G__289410));
})()," grows logarithmically with \\(n\\) in both space and number of steps. To see this, observe that computing \\(b^{2n}\\) using ",(function (){var G__289411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-expt"], null);
var G__289412 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289411,G__289412) : tailrecursion.hoplon.markdown.code_node.call(null,G__289411,G__289412));
})()," requires only one more multiplication than computing \\(b^n\\). The size of the exponent we can compute therefore doubles (approximately) with every new multiplication we are allowed. Thus the number of multiplications required for an exponent of \\(n\\) grows about as fast as the logarithm of \\(n\\) to the base 2. The process has \\(\\Theta(\\log n)\\) growth.",(function (){var G__289413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__289414 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["More precisely, the number of multiplications required is equal to 1 less than the log base 2 of \\(n\\) plus the number of ones in the binary representation of \\(n\\). This total is always less than twice \\(\\log_2(n)\\). The arbitrary constants \\(k_1\\) and \\(k_2\\) in the definition of order notation imply that, for a logarithmic process, the base to which logarithms are taken does not matter, so all such processes are described as \\(\\Theta(\\log n)\\)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289413,G__289414) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289413,G__289414));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289407,G__289408) : tailrecursion.hoplon.markdown.para_node.call(null,G__289407,G__289408));
})(),(function (){var G__289415 = cljs.core.PersistentArrayMap.EMPTY;
var G__289416 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The difference between \\(\\Theta(\\log n) \\) growth and \\(\\Theta(n) \\) growth becomes striking as \\(n \\) becomes large. For example, ",(function (){var G__289417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-expt"], null);
var G__289418 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289417,G__289418) : tailrecursion.hoplon.markdown.code_node.call(null,G__289417,G__289418));
})()," for \\(n=1000 \\) requires only 14 multiplications. ",(function (){var G__289419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__289420 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["You may wonder why anyone would care about raising numbers to the 1000th power. See section 1.26."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289419,G__289420) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289419,G__289420));
})()," It is also possible to use the idea of successive squaring to devise an iterative algorithm that computes exponentials with a logarithmic number of steps (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/ex/1-16/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.16"], null)], 0)),"), although, as is often the case with iterative algorithms, this is not written down so straightforwardly as the recursive algorithm.",(function (){var G__289421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__289422 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This iterative algorithm is ancient. It appears in the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chandah-sutra"], null)], 0))," by \u00C1ch\u00E1rya Pingala, written before 200 B.C. See Knuth 1981, section 4.6.3, for a full discussion and analysis of this and other methods of exponentiation."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__289421,G__289422) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__289421,G__289422));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289415,G__289416) : tailrecursion.hoplon.markdown.para_node.call(null,G__289415,G__289416));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288958;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288957;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_288956;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_288955;
}})()], 0));
var G__279999 = "";
var G__280000 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"16-19"], null),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(16)], null),(function (){var _STAR_references_STAR_289423 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289424 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_289425 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289426 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__289427 = cljs.core.PersistentArrayMap.EMPTY;
var G__289428 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Design a procedure that evolves an iterative exponentiation process that uses successive squaring and uses a logarithmic number of steps, as does ",(function (){var G__289429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-expt"], null);
var G__289430 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289429,G__289430) : tailrecursion.hoplon.markdown.code_node.call(null,G__289429,G__289430));
})(),". (Hint: Using the observations that \\((b^{n/2})^2=(b^2)^{n/2}\\), keep, along with the exponent \\(n\\) and the base \\(b\\), an additional state variable \\(a\\), and define the state transformation in such a way that the product \\(ab^n\\) is unchanged from state to state. At the beginning of the process \\(a\\) is taken to be 1, and the answer is given by the value of \\(a\\) at the end of the process. In general, the technique of defining an ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["invariant quantity"], null)], 0))," that remains unchanged from state to state is a powerful way to think about the design of iterative algorithms.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289427,G__289428) : tailrecursion.hoplon.markdown.para_node.call(null,G__289427,G__289428));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289426;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289425;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289424;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289423;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_289431 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289432 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_289433 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289434 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__289582 = (function (){var G__289583 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__289584 = (function (){var G__289585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__289586 = "(";
var G__289587 = (function (){var G__289656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289657 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289656,G__289657) : tailrecursion.hoplon.span.call(null,G__289656,G__289657));
})();
var G__289588 = (function (){var G__289658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289659 = "expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289658,G__289659) : tailrecursion.hoplon.span.call(null,G__289658,G__289659));
})();
var G__289589 = " [";
var G__289590 = (function (){var G__289660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289661 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289660,G__289661) : tailrecursion.hoplon.span.call(null,G__289660,G__289661));
})();
var G__289591 = " ";
var G__289592 = (function (){var G__289662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289663 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289662,G__289663) : tailrecursion.hoplon.span.call(null,G__289662,G__289663));
})();
var G__289593 = "]\n  (";
var G__289594 = (function (){var G__289664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289665 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289664,G__289665) : tailrecursion.hoplon.span.call(null,G__289664,G__289665));
})();
var G__289595 = "[";
var G__289596 = (function (){var G__289666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289667 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289666,G__289667) : tailrecursion.hoplon.span.call(null,G__289666,G__289667));
})();
var G__289597 = "     ";
var G__289598 = (function (){var G__289668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289669 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289668,G__289669) : tailrecursion.hoplon.span.call(null,G__289668,G__289669));
})();
var G__289599 = "\n         ";
var G__289600 = (function (){var G__289670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289671 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289670,G__289671) : tailrecursion.hoplon.span.call(null,G__289670,G__289671));
})();
var G__289601 = " ";
var G__289602 = (function (){var G__289672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289673 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289672,G__289673) : tailrecursion.hoplon.span.call(null,G__289672,G__289673));
})();
var G__289603 = "\n         ";
var G__289604 = (function (){var G__289674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289675 = "accumulator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289674,G__289675) : tailrecursion.hoplon.span.call(null,G__289674,G__289675));
})();
var G__289605 = " ";
var G__289606 = (function (){var G__289676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289677 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289676,G__289677) : tailrecursion.hoplon.span.call(null,G__289676,G__289677));
})();
var G__289607 = "]\n    (";
var G__289608 = (function (){var G__289678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289679 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289678,G__289679) : tailrecursion.hoplon.span.call(null,G__289678,G__289679));
})();
var G__289609 = "(";
var G__289610 = (function (){var G__289680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289681 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289680,G__289681) : tailrecursion.hoplon.span.call(null,G__289680,G__289681));
})();
var G__289611 = (function (){var G__289682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289683 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289682,G__289683) : tailrecursion.hoplon.span.call(null,G__289682,G__289683));
})();
var G__289612 = " ";
var G__289613 = (function (){var G__289684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289685 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289684,G__289685) : tailrecursion.hoplon.span.call(null,G__289684,G__289685));
})();
var G__289614 = ") ";
var G__289615 = (function (){var G__289686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289687 = "accumulator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289686,G__289687) : tailrecursion.hoplon.span.call(null,G__289686,G__289687));
})();
var G__289616 = "\n          (";
var G__289617 = (function (){var G__289688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289689 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289688,G__289689) : tailrecursion.hoplon.span.call(null,G__289688,G__289689));
})();
var G__289618 = "(";
var G__289619 = (function (){var G__289690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289691 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289690,G__289691) : tailrecursion.hoplon.span.call(null,G__289690,G__289691));
})();
var G__289620 = " ";
var G__289621 = (function (){var G__289692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289693 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289692,G__289693) : tailrecursion.hoplon.span.call(null,G__289692,G__289693));
})();
var G__289622 = " ";
var G__289623 = (function (){var G__289694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289695 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289694,G__289695) : tailrecursion.hoplon.span.call(null,G__289694,G__289695));
})();
var G__289624 = ") ";
var G__289625 = (function (){var G__289696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289697 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289696,G__289697) : tailrecursion.hoplon.span.call(null,G__289696,G__289697));
})();
var G__289626 = ") (";
var G__289627 = (function (){var G__289698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289699 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289698,G__289699) : tailrecursion.hoplon.span.call(null,G__289698,G__289699));
})();
var G__289628 = " (";
var G__289629 = (function (){var G__289700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289701 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289700,G__289701) : tailrecursion.hoplon.span.call(null,G__289700,G__289701));
})();
var G__289630 = " ";
var G__289631 = (function (){var G__289702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289703 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289702,G__289703) : tailrecursion.hoplon.span.call(null,G__289702,G__289703));
})();
var G__289632 = ") (";
var G__289633 = (function (){var G__289704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289705 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289704,G__289705) : tailrecursion.hoplon.span.call(null,G__289704,G__289705));
})();
var G__289634 = (function (){var G__289706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289707 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289706,G__289707) : tailrecursion.hoplon.span.call(null,G__289706,G__289707));
})();
var G__289635 = " ";
var G__289636 = (function (){var G__289708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289709 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289708,G__289709) : tailrecursion.hoplon.span.call(null,G__289708,G__289709));
})();
var G__289637 = ") ";
var G__289638 = (function (){var G__289710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289711 = "accumulator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289710,G__289711) : tailrecursion.hoplon.span.call(null,G__289710,G__289711));
})();
var G__289639 = ")\n          ";
var G__289640 = (function (){var G__289712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289713 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289712,G__289713) : tailrecursion.hoplon.span.call(null,G__289712,G__289713));
})();
var G__289641 = " (";
var G__289642 = (function (){var G__289714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__289715 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289714,G__289715) : tailrecursion.hoplon.span.call(null,G__289714,G__289715));
})();
var G__289643 = " ";
var G__289644 = (function (){var G__289716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289717 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289716,G__289717) : tailrecursion.hoplon.span.call(null,G__289716,G__289717));
})();
var G__289645 = " (";
var G__289646 = (function (){var G__289718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289719 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289718,G__289719) : tailrecursion.hoplon.span.call(null,G__289718,G__289719));
})();
var G__289647 = (function (){var G__289720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289721 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289720,G__289721) : tailrecursion.hoplon.span.call(null,G__289720,G__289721));
})();
var G__289648 = " ";
var G__289649 = (function (){var G__289722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289723 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289722,G__289723) : tailrecursion.hoplon.span.call(null,G__289722,G__289723));
})();
var G__289650 = ") (";
var G__289651 = (function (){var G__289724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289725 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289724,G__289725) : tailrecursion.hoplon.span.call(null,G__289724,G__289725));
})();
var G__289652 = (function (){var G__289726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289727 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289726,G__289727) : tailrecursion.hoplon.span.call(null,G__289726,G__289727));
})();
var G__289653 = " ";
var G__289654 = (function (){var G__289728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289729 = "accumulator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289728,G__289729) : tailrecursion.hoplon.span.call(null,G__289728,G__289729));
})();
var G__289655 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$71 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$71(G__289585,G__289586,G__289587,G__289588,G__289589,G__289590,G__289591,G__289592,G__289593,G__289594,G__289595,G__289596,G__289597,G__289598,G__289599,G__289600,G__289601,G__289602,G__289603,G__289604,G__289605,G__289606,G__289607,G__289608,G__289609,G__289610,G__289611,G__289612,G__289613,G__289614,G__289615,G__289616,G__289617,G__289618,G__289619,G__289620,G__289621,G__289622,G__289623,G__289624,G__289625,G__289626,G__289627,G__289628,G__289629,G__289630,G__289631,G__289632,G__289633,G__289634,G__289635,G__289636,G__289637,G__289638,G__289639,G__289640,G__289641,G__289642,G__289643,G__289644,G__289645,G__289646,G__289647,G__289648,G__289649,G__289650,G__289651,G__289652,G__289653,G__289654,G__289655) : tailrecursion.hoplon.pre.call(null,G__289585,G__289586,G__289587,G__289588,G__289589,G__289590,G__289591,G__289592,G__289593,G__289594,G__289595,G__289596,G__289597,G__289598,G__289599,G__289600,G__289601,G__289602,G__289603,G__289604,G__289605,G__289606,G__289607,G__289608,G__289609,G__289610,G__289611,G__289612,G__289613,G__289614,G__289615,G__289616,G__289617,G__289618,G__289619,G__289620,G__289621,G__289622,G__289623,G__289624,G__289625,G__289626,G__289627,G__289628,G__289629,G__289630,G__289631,G__289632,G__289633,G__289634,G__289635,G__289636,G__289637,G__289638,G__289639,G__289640,G__289641,G__289642,G__289643,G__289644,G__289645,G__289646,G__289647,G__289648,G__289649,G__289650,G__289651,G__289652,G__289653,G__289654,G__289655));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__289583,G__289584) : tailrecursion.hoplon.div.call(null,G__289583,G__289584));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__289582) : tailrecursion.hoplon.div.call(null,G__289582));
})(),(function (){var G__289730 = cljs.core.PersistentArrayMap.EMPTY;
var G__289731 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: Due to the fact that Clojure is not tail-recursive, in order to avoid a stack overflow, we want to avoid recursion whenever possible. These are the perils of working with a hosted language."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289730,G__289731) : tailrecursion.hoplon.markdown.para_node.call(null,G__289730,G__289731));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289434;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289433;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289432;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289431;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(17)], null),(function (){var _STAR_references_STAR_289732 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289733 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_289734 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289735 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__289736 = cljs.core.PersistentArrayMap.EMPTY;
var G__289737 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The exponentiation algorithms in this section are based on performing exponentiation by means of repeated multiplication. In a similar way, one can perform integer multiplication by means of repeated addition. The following multiplication procedure (in which it is assumed that our language can only add, not multiply) is analogous to the ",(function (){var G__289738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"expt"], null);
var G__289739 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289738,G__289739) : tailrecursion.hoplon.markdown.code_node.call(null,G__289738,G__289739));
})()," procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289736,G__289737) : tailrecursion.hoplon.markdown.para_node.call(null,G__289736,G__289737));
})(),(function (){var G__289803 = (function (){var G__289804 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__289805 = (function (){var G__289806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__289807 = "(";
var G__289808 = (function (){var G__289835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289836 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289835,G__289836) : tailrecursion.hoplon.span.call(null,G__289835,G__289836));
})();
var G__289809 = (function (){var G__289837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289838 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289837,G__289838) : tailrecursion.hoplon.span.call(null,G__289837,G__289838));
})();
var G__289810 = "[";
var G__289811 = (function (){var G__289839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289840 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289839,G__289840) : tailrecursion.hoplon.span.call(null,G__289839,G__289840));
})();
var G__289812 = " ";
var G__289813 = (function (){var G__289841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289842 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289841,G__289842) : tailrecursion.hoplon.span.call(null,G__289841,G__289842));
})();
var G__289814 = "]\n  (";
var G__289815 = (function (){var G__289843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__289844 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289843,G__289844) : tailrecursion.hoplon.span.call(null,G__289843,G__289844));
})();
var G__289816 = "(";
var G__289817 = (function (){var G__289845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289846 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289845,G__289846) : tailrecursion.hoplon.span.call(null,G__289845,G__289846));
})();
var G__289818 = (function (){var G__289847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289848 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289847,G__289848) : tailrecursion.hoplon.span.call(null,G__289847,G__289848));
})();
var G__289819 = " ";
var G__289820 = (function (){var G__289849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289850 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289849,G__289850) : tailrecursion.hoplon.span.call(null,G__289849,G__289850));
})();
var G__289821 = ")\n      ";
var G__289822 = (function (){var G__289851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289852 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289851,G__289852) : tailrecursion.hoplon.span.call(null,G__289851,G__289852));
})();
var G__289823 = "\n      (";
var G__289824 = (function (){var G__289853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289854 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289853,G__289854) : tailrecursion.hoplon.span.call(null,G__289853,G__289854));
})();
var G__289825 = (function (){var G__289855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289856 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289855,G__289856) : tailrecursion.hoplon.span.call(null,G__289855,G__289856));
})();
var G__289826 = " (";
var G__289827 = (function (){var G__289857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289858 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289857,G__289858) : tailrecursion.hoplon.span.call(null,G__289857,G__289858));
})();
var G__289828 = (function (){var G__289859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289860 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289859,G__289860) : tailrecursion.hoplon.span.call(null,G__289859,G__289860));
})();
var G__289829 = " (";
var G__289830 = (function (){var G__289861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__289862 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289861,G__289862) : tailrecursion.hoplon.span.call(null,G__289861,G__289862));
})();
var G__289831 = (function (){var G__289863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__289864 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289863,G__289864) : tailrecursion.hoplon.span.call(null,G__289863,G__289864));
})();
var G__289832 = " ";
var G__289833 = (function (){var G__289865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__289866 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__289865,G__289866) : tailrecursion.hoplon.span.call(null,G__289865,G__289866));
})();
var G__289834 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29(G__289806,G__289807,G__289808,G__289809,G__289810,G__289811,G__289812,G__289813,G__289814,G__289815,G__289816,G__289817,G__289818,G__289819,G__289820,G__289821,G__289822,G__289823,G__289824,G__289825,G__289826,G__289827,G__289828,G__289829,G__289830,G__289831,G__289832,G__289833,G__289834) : tailrecursion.hoplon.pre.call(null,G__289806,G__289807,G__289808,G__289809,G__289810,G__289811,G__289812,G__289813,G__289814,G__289815,G__289816,G__289817,G__289818,G__289819,G__289820,G__289821,G__289822,G__289823,G__289824,G__289825,G__289826,G__289827,G__289828,G__289829,G__289830,G__289831,G__289832,G__289833,G__289834));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__289804,G__289805) : tailrecursion.hoplon.div.call(null,G__289804,G__289805));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__289803) : tailrecursion.hoplon.div.call(null,G__289803));
})(),(function (){var G__289867 = cljs.core.PersistentArrayMap.EMPTY;
var G__289868 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This algorithm takes a number of steps that is linear in ",(function (){var G__289869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"b"], null);
var G__289870 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289869,G__289870) : tailrecursion.hoplon.markdown.code_node.call(null,G__289869,G__289870));
})(),". Now suppose we include, together with addition, operations ",(function (){var G__289871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"double"], null);
var G__289872 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289871,G__289872) : tailrecursion.hoplon.markdown.code_node.call(null,G__289871,G__289872));
})(),", which doubles an integer, and ",(function (){var G__289873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"halve"], null);
var G__289874 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289873,G__289874) : tailrecursion.hoplon.markdown.code_node.call(null,G__289873,G__289874));
})(),", which divides an (even) integer by 2. Using these, design a multiplication procedure analogous to ",(function (){var G__289875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-expt"], null);
var G__289876 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__289875,G__289876) : tailrecursion.hoplon.markdown.code_node.call(null,G__289875,G__289876));
})()," that uses a logarithmic number of steps."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__289867,G__289868) : tailrecursion.hoplon.markdown.para_node.call(null,G__289867,G__289868));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289735;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289734;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289733;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289732;
}})(),book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_289877 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289878 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_289879 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_289880 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290024 = (function (){var G__290025 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__290026 = (function (){var G__290027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__290028 = "(";
var G__290029 = (function (){var G__290096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__290097 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290096,G__290097) : tailrecursion.hoplon.span.call(null,G__290096,G__290097));
})();
var G__290030 = (function (){var G__290098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290099 = "fast-mult";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290098,G__290099) : tailrecursion.hoplon.span.call(null,G__290098,G__290099));
})();
var G__290031 = " [";
var G__290032 = (function (){var G__290100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290101 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290100,G__290101) : tailrecursion.hoplon.span.call(null,G__290100,G__290101));
})();
var G__290033 = " ";
var G__290034 = (function (){var G__290102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290103 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290102,G__290103) : tailrecursion.hoplon.span.call(null,G__290102,G__290103));
})();
var G__290035 = "]\n  (";
var G__290036 = (function (){var G__290104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__290105 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290104,G__290105) : tailrecursion.hoplon.span.call(null,G__290104,G__290105));
})();
var G__290037 = "[";
var G__290038 = (function (){var G__290106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290107 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290106,G__290107) : tailrecursion.hoplon.span.call(null,G__290106,G__290107));
})();
var G__290039 = " ";
var G__290040 = (function (){var G__290108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290109 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290108,G__290109) : tailrecursion.hoplon.span.call(null,G__290108,G__290109));
})();
var G__290041 = "\n         ";
var G__290042 = (function (){var G__290110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290111 = "thing2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290110,G__290111) : tailrecursion.hoplon.span.call(null,G__290110,G__290111));
})();
var G__290043 = " ";
var G__290044 = (function (){var G__290112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290113 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290112,G__290113) : tailrecursion.hoplon.span.call(null,G__290112,G__290113));
})();
var G__290045 = "\n         ";
var G__290046 = (function (){var G__290114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290115 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290114,G__290115) : tailrecursion.hoplon.span.call(null,G__290114,G__290115));
})();
var G__290047 = "   ";
var G__290048 = (function (){var G__290116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290117 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290116,G__290117) : tailrecursion.hoplon.span.call(null,G__290116,G__290117));
})();
var G__290049 = "]\n    (";
var G__290050 = (function (){var G__290118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290119 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290118,G__290119) : tailrecursion.hoplon.span.call(null,G__290118,G__290119));
})();
var G__290051 = "(";
var G__290052 = (function (){var G__290120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290121 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290120,G__290121) : tailrecursion.hoplon.span.call(null,G__290120,G__290121));
})();
var G__290053 = (function (){var G__290122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290123 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290122,G__290123) : tailrecursion.hoplon.span.call(null,G__290122,G__290123));
})();
var G__290054 = " ";
var G__290055 = (function (){var G__290124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290125 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290124,G__290125) : tailrecursion.hoplon.span.call(null,G__290124,G__290125));
})();
var G__290056 = ") ";
var G__290057 = (function (){var G__290126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290127 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290126,G__290127) : tailrecursion.hoplon.span.call(null,G__290126,G__290127));
})();
var G__290058 = "\n          (";
var G__290059 = (function (){var G__290128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290129 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290128,G__290129) : tailrecursion.hoplon.span.call(null,G__290128,G__290129));
})();
var G__290060 = "(";
var G__290061 = (function (){var G__290130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290131 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290130,G__290131) : tailrecursion.hoplon.span.call(null,G__290130,G__290131));
})();
var G__290062 = " ";
var G__290063 = (function (){var G__290132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290133 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290132,G__290133) : tailrecursion.hoplon.span.call(null,G__290132,G__290133));
})();
var G__290064 = " ";
var G__290065 = (function (){var G__290134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290135 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290134,G__290135) : tailrecursion.hoplon.span.call(null,G__290134,G__290135));
})();
var G__290066 = ") ";
var G__290067 = (function (){var G__290136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290137 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290136,G__290137) : tailrecursion.hoplon.span.call(null,G__290136,G__290137));
})();
var G__290068 = ") (";
var G__290069 = (function (){var G__290138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290139 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290138,G__290139) : tailrecursion.hoplon.span.call(null,G__290138,G__290139));
})();
var G__290070 = " (";
var G__290071 = (function (){var G__290140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290141 = "halve";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290140,G__290141) : tailrecursion.hoplon.span.call(null,G__290140,G__290141));
})();
var G__290072 = " ";
var G__290073 = (function (){var G__290142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290143 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290142,G__290143) : tailrecursion.hoplon.span.call(null,G__290142,G__290143));
})();
var G__290074 = ") (";
var G__290075 = (function (){var G__290144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290145 = "double ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290144,G__290145) : tailrecursion.hoplon.span.call(null,G__290144,G__290145));
})();
var G__290076 = (function (){var G__290146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290147 = "thing2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290146,G__290147) : tailrecursion.hoplon.span.call(null,G__290146,G__290147));
})();
var G__290077 = ") ";
var G__290078 = (function (){var G__290148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290149 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290148,G__290149) : tailrecursion.hoplon.span.call(null,G__290148,G__290149));
})();
var G__290079 = ")\n          ";
var G__290080 = (function (){var G__290150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290151 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290150,G__290151) : tailrecursion.hoplon.span.call(null,G__290150,G__290151));
})();
var G__290081 = " (";
var G__290082 = (function (){var G__290152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290153 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290152,G__290153) : tailrecursion.hoplon.span.call(null,G__290152,G__290153));
})();
var G__290083 = " (";
var G__290084 = (function (){var G__290154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290155 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290154,G__290155) : tailrecursion.hoplon.span.call(null,G__290154,G__290155));
})();
var G__290085 = (function (){var G__290156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290157 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290156,G__290157) : tailrecursion.hoplon.span.call(null,G__290156,G__290157));
})();
var G__290086 = " ";
var G__290087 = (function (){var G__290158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290159 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290158,G__290159) : tailrecursion.hoplon.span.call(null,G__290158,G__290159));
})();
var G__290088 = ") ";
var G__290089 = (function (){var G__290160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290161 = "thing2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290160,G__290161) : tailrecursion.hoplon.span.call(null,G__290160,G__290161));
})();
var G__290090 = " (";
var G__290091 = (function (){var G__290162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290163 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290162,G__290163) : tailrecursion.hoplon.span.call(null,G__290162,G__290163));
})();
var G__290092 = (function (){var G__290164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290165 = "thing2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290164,G__290165) : tailrecursion.hoplon.span.call(null,G__290164,G__290165));
})();
var G__290093 = " ";
var G__290094 = (function (){var G__290166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290167 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290166,G__290167) : tailrecursion.hoplon.span.call(null,G__290166,G__290167));
})();
var G__290095 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69(G__290027,G__290028,G__290029,G__290030,G__290031,G__290032,G__290033,G__290034,G__290035,G__290036,G__290037,G__290038,G__290039,G__290040,G__290041,G__290042,G__290043,G__290044,G__290045,G__290046,G__290047,G__290048,G__290049,G__290050,G__290051,G__290052,G__290053,G__290054,G__290055,G__290056,G__290057,G__290058,G__290059,G__290060,G__290061,G__290062,G__290063,G__290064,G__290065,G__290066,G__290067,G__290068,G__290069,G__290070,G__290071,G__290072,G__290073,G__290074,G__290075,G__290076,G__290077,G__290078,G__290079,G__290080,G__290081,G__290082,G__290083,G__290084,G__290085,G__290086,G__290087,G__290088,G__290089,G__290090,G__290091,G__290092,G__290093,G__290094,G__290095) : tailrecursion.hoplon.pre.call(null,G__290027,G__290028,G__290029,G__290030,G__290031,G__290032,G__290033,G__290034,G__290035,G__290036,G__290037,G__290038,G__290039,G__290040,G__290041,G__290042,G__290043,G__290044,G__290045,G__290046,G__290047,G__290048,G__290049,G__290050,G__290051,G__290052,G__290053,G__290054,G__290055,G__290056,G__290057,G__290058,G__290059,G__290060,G__290061,G__290062,G__290063,G__290064,G__290065,G__290066,G__290067,G__290068,G__290069,G__290070,G__290071,G__290072,G__290073,G__290074,G__290075,G__290076,G__290077,G__290078,G__290079,G__290080,G__290081,G__290082,G__290083,G__290084,G__290085,G__290086,G__290087,G__290088,G__290089,G__290090,G__290091,G__290092,G__290093,G__290094,G__290095));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__290025,G__290026) : tailrecursion.hoplon.div.call(null,G__290025,G__290026));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__290024) : tailrecursion.hoplon.div.call(null,G__290024));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289880;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289879;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_289878;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_289877;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(18)], null),(function (){var _STAR_references_STAR_290168 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290169 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290170 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290171 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290172 = cljs.core.PersistentArrayMap.EMPTY;
var G__290173 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using the results of exercises 1.16 and 1.17, devise a procedure that generates an iterative process for multiplying two integers in terms of adding, doubling, and halving and uses a logarithmic number of steps.",(function (){var G__290174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__290175 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This algorithm, which is sometimes known as the ",(function (){var G__290176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__290177 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Russian peasant method"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__290176,G__290177) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__290176,G__290177));
})()," of multiplication, is ancient. Examples of its use are found in the Rhind Papyrus, one of the two oldest mathematical documents in existence, written about 1700 B.C. (and copied from an even older document) by an Egyptian scribe named A",(function (){var G__290178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290179 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290178,G__290179) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290178,G__290179));
})(),"h-mose."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__290174,G__290175) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__290174,G__290175));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290172,G__290173) : tailrecursion.hoplon.markdown.para_node.call(null,G__290172,G__290173));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290171;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290170;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290169;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290168;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_290180 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290181 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290182 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290183 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290184 = cljs.core.PersistentArrayMap.EMPTY;
var G__290185 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It",(function (){var G__290186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290187 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290186,G__290187) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290186,G__290187));
})(),"s exactly the same as the one above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290184,G__290185) : tailrecursion.hoplon.markdown.para_node.call(null,G__290184,G__290185));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290183;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290182;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290181;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290180;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(19)], null),(function (){var _STAR_references_STAR_290188 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290189 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290190 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290191 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290192 = cljs.core.PersistentArrayMap.EMPTY;
var G__290193 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["There is a clever algorithm for computing the Fibonacci numbers in a logarithmic number of steps. Recall the transformation of the state variables \\(a\\) and \\(b\\) in the ",(function (){var G__290194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fib-iter"], null);
var G__290195 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290194,G__290195) : tailrecursion.hoplon.markdown.code_node.call(null,G__290194,G__290195));
})()," process of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/2/sub/2/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0)),": \\(a\\to a + b\\) and \\(b\\to a\\). Call this transformation \\(T\\), and observe that applying \\(T\\) over and over again \\(n\\) times, starting with 0 and 1, produces the pair \\(Fib(n)\\) and \\(Fib(n+1)\\). In other words, the Fibonacci numbers are produced by applying \\(T^n\\), the nth power of the transformation \\(T\\), starting with the pair (0,1). Now consider \\(T\\) to be the special case of \\(p = 0\\) and \\(q = 1\\) in a family of transformations \\(T_{pq}\\), where \\(T_{pq}\\) transforms the pair (a,b) according to \\(a\\to ap + bq\\) and \\(b\\to aq + bq + bp\\) (so that \\(T_{pq}(a,b)=(ap+bq,aq+bq+bp)\\)). Show that if we apply such a transformation \\(T_{pq}\\) twice, the effect is the same as using a single transformation \\(T_{p\u2019q\u2019}\\) of the same form, and compute \\(p\u2019\\) and \\(q\u2019\\) in terms of \\(p\\) and \\(q\\). This gives us an explicit way to square these transformations, and thus we can compute \\(T^n\\) using successive squaring, as in the ",(function (){var G__290196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-expt"], null);
var G__290197 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290196,G__290197) : tailrecursion.hoplon.markdown.code_node.call(null,G__290196,G__290197));
})()," procedure. Put this all together to complete the following procedure, which runs in a logarithmic number of steps:",(function (){var G__290198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__290199 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This exercise was suggested to us by Joe Stoy, based on an example in Kaldewaij 1990."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__290198,G__290199) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__290198,G__290199));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290192,G__290193) : tailrecursion.hoplon.markdown.para_node.call(null,G__290192,G__290193));
})(),(function (){var G__290402 = (function (){var G__290403 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__290404 = (function (){var G__290405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__290406 = "(";
var G__290407 = (function (){var G__290501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__290502 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290501,G__290502) : tailrecursion.hoplon.span.call(null,G__290501,G__290502));
})();
var G__290408 = (function (){var G__290503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290504 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290503,G__290504) : tailrecursion.hoplon.span.call(null,G__290503,G__290504));
})();
var G__290409 = " [";
var G__290410 = (function (){var G__290505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290506 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290505,G__290506) : tailrecursion.hoplon.span.call(null,G__290505,G__290506));
})();
var G__290411 = "]\n  (";
var G__290412 = (function (){var G__290507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__290508 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290507,G__290508) : tailrecursion.hoplon.span.call(null,G__290507,G__290508));
})();
var G__290413 = "[";
var G__290414 = (function (){var G__290509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290510 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290509,G__290510) : tailrecursion.hoplon.span.call(null,G__290509,G__290510));
})();
var G__290415 = " ";
var G__290416 = (function (){var G__290511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290512 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290511,G__290512) : tailrecursion.hoplon.span.call(null,G__290511,G__290512));
})();
var G__290417 = "\n         ";
var G__290418 = (function (){var G__290513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290514 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290513,G__290514) : tailrecursion.hoplon.span.call(null,G__290513,G__290514));
})();
var G__290419 = " ";
var G__290420 = (function (){var G__290515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290516 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290515,G__290516) : tailrecursion.hoplon.span.call(null,G__290515,G__290516));
})();
var G__290421 = "\n         ";
var G__290422 = (function (){var G__290517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290518 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290517,G__290518) : tailrecursion.hoplon.span.call(null,G__290517,G__290518));
})();
var G__290423 = " ";
var G__290424 = (function (){var G__290519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290520 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290519,G__290520) : tailrecursion.hoplon.span.call(null,G__290519,G__290520));
})();
var G__290425 = "\n         ";
var G__290426 = (function (){var G__290521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290522 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290521,G__290522) : tailrecursion.hoplon.span.call(null,G__290521,G__290522));
})();
var G__290427 = " ";
var G__290428 = (function (){var G__290523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290524 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290523,G__290524) : tailrecursion.hoplon.span.call(null,G__290523,G__290524));
})();
var G__290429 = "\n         ";
var G__290430 = (function (){var G__290525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290526 = "count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290525,G__290526) : tailrecursion.hoplon.span.call(null,G__290525,G__290526));
})();
var G__290431 = (function (){var G__290527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290528 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290527,G__290528) : tailrecursion.hoplon.span.call(null,G__290527,G__290528));
})();
var G__290432 = "]\n    (";
var G__290433 = (function (){var G__290529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290530 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290529,G__290530) : tailrecursion.hoplon.span.call(null,G__290529,G__290530));
})();
var G__290434 = "(";
var G__290435 = (function (){var G__290531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290532 = "= count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290531,G__290532) : tailrecursion.hoplon.span.call(null,G__290531,G__290532));
})();
var G__290436 = (function (){var G__290533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290534 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290533,G__290534) : tailrecursion.hoplon.span.call(null,G__290533,G__290534));
})();
var G__290437 = ") ";
var G__290438 = (function (){var G__290535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290536 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290535,G__290536) : tailrecursion.hoplon.span.call(null,G__290535,G__290536));
})();
var G__290439 = "\n          (";
var G__290440 = (function (){var G__290537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290538 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290537,G__290538) : tailrecursion.hoplon.span.call(null,G__290537,G__290538));
})();
var G__290441 = " ";
var G__290442 = (function (){var G__290539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290540 = "count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290539,G__290540) : tailrecursion.hoplon.span.call(null,G__290539,G__290540));
})();
var G__290443 = ") (";
var G__290444 = (function (){var G__290541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290542 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290541,G__290542) : tailrecursion.hoplon.span.call(null,G__290541,G__290542));
})();
var G__290445 = " ";
var G__290446 = (function (){var G__290543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290544 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290543,G__290544) : tailrecursion.hoplon.span.call(null,G__290543,G__290544));
})();
var G__290447 = "  ";
var G__290448 = (function (){var G__290545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #408080; font-style: italic"], null);
var G__290546 = "; compute p'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290545,G__290546) : tailrecursion.hoplon.span.call(null,G__290545,G__290546));
})();
var G__290449 = "\n                               ";
var G__290450 = (function (){var G__290547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290548 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290547,G__290548) : tailrecursion.hoplon.span.call(null,G__290547,G__290548));
})();
var G__290451 = "  ";
var G__290452 = (function (){var G__290549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #408080; font-style: italic"], null);
var G__290550 = "; compute q'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290549,G__290550) : tailrecursion.hoplon.span.call(null,G__290549,G__290550));
})();
var G__290453 = "\n                               ";
var G__290454 = (function (){var G__290551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290552 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290551,G__290552) : tailrecursion.hoplon.span.call(null,G__290551,G__290552));
})();
var G__290455 = "\n                               ";
var G__290456 = (function (){var G__290553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290554 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290553,G__290554) : tailrecursion.hoplon.span.call(null,G__290553,G__290554));
})();
var G__290457 = "\n                               (";
var G__290458 = (function (){var G__290555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290556 = "/ count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290555,G__290556) : tailrecursion.hoplon.span.call(null,G__290555,G__290556));
})();
var G__290459 = (function (){var G__290557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290558 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290557,G__290558) : tailrecursion.hoplon.span.call(null,G__290557,G__290558));
})();
var G__290460 = "))\n          ";
var G__290461 = (function (){var G__290559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290560 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290559,G__290560) : tailrecursion.hoplon.span.call(null,G__290559,G__290560));
})();
var G__290462 = " (";
var G__290463 = (function (){var G__290561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290562 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290561,G__290562) : tailrecursion.hoplon.span.call(null,G__290561,G__290562));
})();
var G__290464 = " ";
var G__290465 = (function (){var G__290563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290564 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290563,G__290564) : tailrecursion.hoplon.span.call(null,G__290563,G__290564));
})();
var G__290466 = "\n                       ";
var G__290467 = (function (){var G__290565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290566 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290565,G__290566) : tailrecursion.hoplon.span.call(null,G__290565,G__290566));
})();
var G__290468 = "\n                       (";
var G__290469 = (function (){var G__290567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290568 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290567,G__290568) : tailrecursion.hoplon.span.call(null,G__290567,G__290568));
})();
var G__290470 = "(";
var G__290471 = (function (){var G__290569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290570 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290569,G__290570) : tailrecursion.hoplon.span.call(null,G__290569,G__290570));
})();
var G__290472 = (function (){var G__290571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290572 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290571,G__290572) : tailrecursion.hoplon.span.call(null,G__290571,G__290572));
})();
var G__290473 = " ";
var G__290474 = (function (){var G__290573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290574 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290573,G__290574) : tailrecursion.hoplon.span.call(null,G__290573,G__290574));
})();
var G__290475 = ") (";
var G__290476 = (function (){var G__290575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290576 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290575,G__290576) : tailrecursion.hoplon.span.call(null,G__290575,G__290576));
})();
var G__290477 = (function (){var G__290577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290578 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290577,G__290578) : tailrecursion.hoplon.span.call(null,G__290577,G__290578));
})();
var G__290478 = " ";
var G__290479 = (function (){var G__290579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290580 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290579,G__290580) : tailrecursion.hoplon.span.call(null,G__290579,G__290580));
})();
var G__290480 = "))\n                       (";
var G__290481 = (function (){var G__290581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290582 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290581,G__290582) : tailrecursion.hoplon.span.call(null,G__290581,G__290582));
})();
var G__290482 = "(";
var G__290483 = (function (){var G__290583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290584 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290583,G__290584) : tailrecursion.hoplon.span.call(null,G__290583,G__290584));
})();
var G__290484 = (function (){var G__290585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290586 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290585,G__290586) : tailrecursion.hoplon.span.call(null,G__290585,G__290586));
})();
var G__290485 = " ";
var G__290486 = (function (){var G__290587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290588 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290587,G__290588) : tailrecursion.hoplon.span.call(null,G__290587,G__290588));
})();
var G__290487 = ") (";
var G__290488 = (function (){var G__290589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290590 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290589,G__290590) : tailrecursion.hoplon.span.call(null,G__290589,G__290590));
})();
var G__290489 = (function (){var G__290591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290592 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290591,G__290592) : tailrecursion.hoplon.span.call(null,G__290591,G__290592));
})();
var G__290490 = " ";
var G__290491 = (function (){var G__290593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290594 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290593,G__290594) : tailrecursion.hoplon.span.call(null,G__290593,G__290594));
})();
var G__290492 = ") (";
var G__290493 = (function (){var G__290595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290596 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290595,G__290596) : tailrecursion.hoplon.span.call(null,G__290595,G__290596));
})();
var G__290494 = (function (){var G__290597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290598 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290597,G__290598) : tailrecursion.hoplon.span.call(null,G__290597,G__290598));
})();
var G__290495 = " ";
var G__290496 = (function (){var G__290599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290600 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290599,G__290600) : tailrecursion.hoplon.span.call(null,G__290599,G__290600));
})();
var G__290497 = "))\n                       (";
var G__290498 = (function (){var G__290601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290602 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290601,G__290602) : tailrecursion.hoplon.span.call(null,G__290601,G__290602));
})();
var G__290499 = (function (){var G__290603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290604 = "count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290603,G__290604) : tailrecursion.hoplon.span.call(null,G__290603,G__290604));
})();
var G__290500 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$96 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$96(G__290405,G__290406,G__290407,G__290408,G__290409,G__290410,G__290411,G__290412,G__290413,G__290414,G__290415,G__290416,G__290417,G__290418,G__290419,G__290420,G__290421,G__290422,G__290423,G__290424,G__290425,G__290426,G__290427,G__290428,G__290429,G__290430,G__290431,G__290432,G__290433,G__290434,G__290435,G__290436,G__290437,G__290438,G__290439,G__290440,G__290441,G__290442,G__290443,G__290444,G__290445,G__290446,G__290447,G__290448,G__290449,G__290450,G__290451,G__290452,G__290453,G__290454,G__290455,G__290456,G__290457,G__290458,G__290459,G__290460,G__290461,G__290462,G__290463,G__290464,G__290465,G__290466,G__290467,G__290468,G__290469,G__290470,G__290471,G__290472,G__290473,G__290474,G__290475,G__290476,G__290477,G__290478,G__290479,G__290480,G__290481,G__290482,G__290483,G__290484,G__290485,G__290486,G__290487,G__290488,G__290489,G__290490,G__290491,G__290492,G__290493,G__290494,G__290495,G__290496,G__290497,G__290498,G__290499,G__290500) : tailrecursion.hoplon.pre.call(null,G__290405,G__290406,G__290407,G__290408,G__290409,G__290410,G__290411,G__290412,G__290413,G__290414,G__290415,G__290416,G__290417,G__290418,G__290419,G__290420,G__290421,G__290422,G__290423,G__290424,G__290425,G__290426,G__290427,G__290428,G__290429,G__290430,G__290431,G__290432,G__290433,G__290434,G__290435,G__290436,G__290437,G__290438,G__290439,G__290440,G__290441,G__290442,G__290443,G__290444,G__290445,G__290446,G__290447,G__290448,G__290449,G__290450,G__290451,G__290452,G__290453,G__290454,G__290455,G__290456,G__290457,G__290458,G__290459,G__290460,G__290461,G__290462,G__290463,G__290464,G__290465,G__290466,G__290467,G__290468,G__290469,G__290470,G__290471,G__290472,G__290473,G__290474,G__290475,G__290476,G__290477,G__290478,G__290479,G__290480,G__290481,G__290482,G__290483,G__290484,G__290485,G__290486,G__290487,G__290488,G__290489,G__290490,G__290491,G__290492,G__290493,G__290494,G__290495,G__290496,G__290497,G__290498,G__290499,G__290500));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__290403,G__290404) : tailrecursion.hoplon.div.call(null,G__290403,G__290404));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__290402) : tailrecursion.hoplon.div.call(null,G__290402));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290191;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290190;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290189;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290188;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_290605 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290606 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290607 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290608 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290609 = cljs.core.PersistentArrayMap.EMPTY;
var G__290610 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__290611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290612 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290611,G__290612) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290611,G__290612));
})(),"s find what \\(p",(function (){var G__290613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290614 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290613,G__290614) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290613,G__290614));
})(),",q",(function (){var G__290615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290616 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290615,G__290616) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290615,G__290616));
})(),"\\) are."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290609,G__290610) : tailrecursion.hoplon.markdown.para_node.call(null,G__290609,G__290610));
})(),(function (){var G__290617 = cljs.core.PersistentArrayMap.EMPTY;
var G__290618 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}T_{pq}^2(a,b)=&T_{pq}(ap+bq,aq+bq+bp) \\\\=&((ap+bq)p+(aq+bq+bp)q,(ap+bq)q+(aq+bq+bp)(q+p)) \\\\=&(ap^2+bpq+aq^2+bq^2+bpq, apq+bq^2+aq^2+apq+b(q+p)^2) \\\\=&(a(p^2+q^2)+b(q^2+2pq),a(q^2+2pq)+b(p^2+2q^2+2pq))\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290617,G__290618) : tailrecursion.hoplon.markdown.para_node.call(null,G__290617,G__290618));
})(),(function (){var G__290619 = cljs.core.PersistentArrayMap.EMPTY;
var G__290620 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So that, \\(p",(function (){var G__290621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290622 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290621,G__290622) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290621,G__290622));
})(),"=p^2+q^2\\) and \\(q",(function (){var G__290623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290624 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290623,G__290624) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290623,G__290624));
})(),"=q^2+2pq\\) and our missing pieces of code are, ",(function (){var G__290625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(+ (square p) (square q))"], null);
var G__290626 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290625,G__290626) : tailrecursion.hoplon.markdown.code_node.call(null,G__290625,G__290626));
})()," and ",(function (){var G__290627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(+ (square q)\n(* 2 p q))"], null);
var G__290628 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290627,G__290628) : tailrecursion.hoplon.markdown.code_node.call(null,G__290627,G__290628));
})()," respectively."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290619,G__290620) : tailrecursion.hoplon.markdown.para_node.call(null,G__290619,G__290620));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290608;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290607;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290606;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290605;
}})()], 0))], 0))], 0));
var G__280001 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Greatest Common Divisors"], null),(function (){var _STAR_references_STAR_290629 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290630 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290631 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290632 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290633 = cljs.core.PersistentArrayMap.EMPTY;
var G__290634 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The greatest common divisor (GCD) of two integers \\(a\\) and \\(b\\) is defined to be the largest integer that divides both \\(a\\) and \\(b\\) with no remainder. For example, the GCD of 16 and 28 is 4. In chapter 2, when we investigate how to implement rational-number arithmetic, we will need to be able to compute GCDs in order to reduce rational numbers to lowest terms. (To reduce a rational number to lowest terms, we must divide both the numerator and the denominator by their GCD. For example, 16/28 reduces to 4/7.) One way to find the GCD of two integers is to factor them and search for common factors, but there is a famous algorithm that is much more efficient."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290633,G__290634) : tailrecursion.hoplon.markdown.para_node.call(null,G__290633,G__290634));
})(),(function (){var G__290635 = cljs.core.PersistentArrayMap.EMPTY;
var G__290636 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The idea of the algorithm is based on the observation that, if \\(r\\) is the remainder when \\(a\\) is divided by \\(b\\), then the common divisors of \\(a\\) and \\(b\\) are precisely the same as the common divisors of \\(b\\) and \\(r\\). Thus, we can use the equation"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290635,G__290636) : tailrecursion.hoplon.markdown.para_node.call(null,G__290635,G__290636));
})(),(function (){var G__290637 = cljs.core.PersistentArrayMap.EMPTY;
var G__290638 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$GCD(a,b)=GCD(b,r)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290637,G__290638) : tailrecursion.hoplon.markdown.para_node.call(null,G__290637,G__290638));
})(),(function (){var G__290639 = cljs.core.PersistentArrayMap.EMPTY;
var G__290640 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["to successively reduce the problem of computing a GCD to the problem of computing the GCD of smaller and smaller pairs of integers. For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290639,G__290640) : tailrecursion.hoplon.markdown.para_node.call(null,G__290639,G__290640));
})(),(function (){var G__290641 = cljs.core.PersistentArrayMap.EMPTY;
var G__290642 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}  GCD(206,40)=&GCD(40,6)  \\\\=&GCD(6,4)  \\\\=&GCD(4,2)  \\\\=&GCD(2,0)  \\\\=&2  \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290641,G__290642) : tailrecursion.hoplon.markdown.para_node.call(null,G__290641,G__290642));
})(),(function (){var G__290643 = cljs.core.PersistentArrayMap.EMPTY;
var G__290644 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["reduces GCD(206,40) to GCD(2,0), which is 2. It is possible to show that starting with any two positive integers and performing repeated reductions will always eventually produce a pair where the second number is 0. Then the GCD is the other number in the pair. This method for computing the GCD is known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Euclid",(function (){var G__290645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290646 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290645,G__290646) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290645,G__290646));
})(),"s Algorithm"], null)], 0)),".",(function (){var G__290647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__290648 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Euclid",(function (){var G__290649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290650 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290649,G__290650) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290649,G__290650));
})(),"s Algorithm is so called because it appears in Euclid",(function (){var G__290651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290652 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290651,G__290652) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290651,G__290652));
})(),"s ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Elements"], null)], 0))," (Book 7, ca. 300 B.C.). According to Knuth (1973), it can be considered the oldest known nontrivial algorithm. The ancient Egyptian method of multiplication (exercise 1.18) is surely older, but, as Knuth explains, Euclid",(function (){var G__290653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290654 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290653,G__290654) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290653,G__290654));
})(),"s algorithm is the oldest known to have been presented as a general algorithm, rather than as a set of illustrative examples."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__290647,G__290648) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__290647,G__290648));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290643,G__290644) : tailrecursion.hoplon.markdown.para_node.call(null,G__290643,G__290644));
})(),(function (){var G__290655 = cljs.core.PersistentArrayMap.EMPTY;
var G__290656 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It is easy to express Euclid",(function (){var G__290657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290658 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290657,G__290658) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290657,G__290658));
})(),"s Algorithm as a procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290655,G__290656) : tailrecursion.hoplon.markdown.para_node.call(null,G__290655,G__290656));
})(),(function (){var G__290717 = (function (){var G__290718 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__290719 = (function (){var G__290720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__290721 = "(";
var G__290722 = (function (){var G__290748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__290749 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290748,G__290749) : tailrecursion.hoplon.span.call(null,G__290748,G__290749));
})();
var G__290723 = (function (){var G__290750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290751 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290750,G__290751) : tailrecursion.hoplon.span.call(null,G__290750,G__290751));
})();
var G__290724 = " [";
var G__290725 = (function (){var G__290752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290753 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290752,G__290753) : tailrecursion.hoplon.span.call(null,G__290752,G__290753));
})();
var G__290726 = " ";
var G__290727 = (function (){var G__290754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290755 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290754,G__290755) : tailrecursion.hoplon.span.call(null,G__290754,G__290755));
})();
var G__290728 = "]\n  (";
var G__290729 = (function (){var G__290756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__290757 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290756,G__290757) : tailrecursion.hoplon.span.call(null,G__290756,G__290757));
})();
var G__290730 = "(";
var G__290731 = (function (){var G__290758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290759 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290758,G__290759) : tailrecursion.hoplon.span.call(null,G__290758,G__290759));
})();
var G__290732 = (function (){var G__290760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290761 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290760,G__290761) : tailrecursion.hoplon.span.call(null,G__290760,G__290761));
})();
var G__290733 = " ";
var G__290734 = (function (){var G__290762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290763 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290762,G__290763) : tailrecursion.hoplon.span.call(null,G__290762,G__290763));
})();
var G__290735 = ")\n      ";
var G__290736 = (function (){var G__290764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290765 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290764,G__290765) : tailrecursion.hoplon.span.call(null,G__290764,G__290765));
})();
var G__290737 = "\n      (";
var G__290738 = (function (){var G__290766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290767 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290766,G__290767) : tailrecursion.hoplon.span.call(null,G__290766,G__290767));
})();
var G__290739 = " ";
var G__290740 = (function (){var G__290768 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290769 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290768,G__290769) : tailrecursion.hoplon.span.call(null,G__290768,G__290769));
})();
var G__290741 = " (";
var G__290742 = (function (){var G__290770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290771 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290770,G__290771) : tailrecursion.hoplon.span.call(null,G__290770,G__290771));
})();
var G__290743 = " ";
var G__290744 = (function (){var G__290772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290773 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290772,G__290773) : tailrecursion.hoplon.span.call(null,G__290772,G__290773));
})();
var G__290745 = " ";
var G__290746 = (function (){var G__290774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290775 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290774,G__290775) : tailrecursion.hoplon.span.call(null,G__290774,G__290775));
})();
var G__290747 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__290720,G__290721,G__290722,G__290723,G__290724,G__290725,G__290726,G__290727,G__290728,G__290729,G__290730,G__290731,G__290732,G__290733,G__290734,G__290735,G__290736,G__290737,G__290738,G__290739,G__290740,G__290741,G__290742,G__290743,G__290744,G__290745,G__290746,G__290747) : tailrecursion.hoplon.pre.call(null,G__290720,G__290721,G__290722,G__290723,G__290724,G__290725,G__290726,G__290727,G__290728,G__290729,G__290730,G__290731,G__290732,G__290733,G__290734,G__290735,G__290736,G__290737,G__290738,G__290739,G__290740,G__290741,G__290742,G__290743,G__290744,G__290745,G__290746,G__290747));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__290718,G__290719) : tailrecursion.hoplon.div.call(null,G__290718,G__290719));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__290717) : tailrecursion.hoplon.div.call(null,G__290717));
})(),(function (){var G__290776 = cljs.core.PersistentArrayMap.EMPTY;
var G__290777 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Or using recur, "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290776,G__290777) : tailrecursion.hoplon.markdown.para_node.call(null,G__290776,G__290777));
})(),(function (){var G__290836 = (function (){var G__290837 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__290838 = (function (){var G__290839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__290840 = "(";
var G__290841 = (function (){var G__290867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__290868 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290867,G__290868) : tailrecursion.hoplon.span.call(null,G__290867,G__290868));
})();
var G__290842 = (function (){var G__290869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290870 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290869,G__290870) : tailrecursion.hoplon.span.call(null,G__290869,G__290870));
})();
var G__290843 = " [";
var G__290844 = (function (){var G__290871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290872 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290871,G__290872) : tailrecursion.hoplon.span.call(null,G__290871,G__290872));
})();
var G__290845 = " ";
var G__290846 = (function (){var G__290873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290874 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290873,G__290874) : tailrecursion.hoplon.span.call(null,G__290873,G__290874));
})();
var G__290847 = "]\n  (";
var G__290848 = (function (){var G__290875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__290876 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290875,G__290876) : tailrecursion.hoplon.span.call(null,G__290875,G__290876));
})();
var G__290849 = "(";
var G__290850 = (function (){var G__290877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__290878 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290877,G__290878) : tailrecursion.hoplon.span.call(null,G__290877,G__290878));
})();
var G__290851 = (function (){var G__290879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290880 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290879,G__290880) : tailrecursion.hoplon.span.call(null,G__290879,G__290880));
})();
var G__290852 = " ";
var G__290853 = (function (){var G__290881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__290882 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290881,G__290882) : tailrecursion.hoplon.span.call(null,G__290881,G__290882));
})();
var G__290854 = ")\n      ";
var G__290855 = (function (){var G__290883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290884 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290883,G__290884) : tailrecursion.hoplon.span.call(null,G__290883,G__290884));
})();
var G__290856 = "\n      (";
var G__290857 = (function (){var G__290885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290886 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290885,G__290886) : tailrecursion.hoplon.span.call(null,G__290885,G__290886));
})();
var G__290858 = " ";
var G__290859 = (function (){var G__290887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290888 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290887,G__290888) : tailrecursion.hoplon.span.call(null,G__290887,G__290888));
})();
var G__290860 = " (";
var G__290861 = (function (){var G__290889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__290890 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290889,G__290890) : tailrecursion.hoplon.span.call(null,G__290889,G__290890));
})();
var G__290862 = " ";
var G__290863 = (function (){var G__290891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290892 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290891,G__290892) : tailrecursion.hoplon.span.call(null,G__290891,G__290892));
})();
var G__290864 = " ";
var G__290865 = (function (){var G__290893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__290894 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__290893,G__290894) : tailrecursion.hoplon.span.call(null,G__290893,G__290894));
})();
var G__290866 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__290839,G__290840,G__290841,G__290842,G__290843,G__290844,G__290845,G__290846,G__290847,G__290848,G__290849,G__290850,G__290851,G__290852,G__290853,G__290854,G__290855,G__290856,G__290857,G__290858,G__290859,G__290860,G__290861,G__290862,G__290863,G__290864,G__290865,G__290866) : tailrecursion.hoplon.pre.call(null,G__290839,G__290840,G__290841,G__290842,G__290843,G__290844,G__290845,G__290846,G__290847,G__290848,G__290849,G__290850,G__290851,G__290852,G__290853,G__290854,G__290855,G__290856,G__290857,G__290858,G__290859,G__290860,G__290861,G__290862,G__290863,G__290864,G__290865,G__290866));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__290837,G__290838) : tailrecursion.hoplon.div.call(null,G__290837,G__290838));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__290836) : tailrecursion.hoplon.div.call(null,G__290836));
})(),(function (){var G__290895 = cljs.core.PersistentArrayMap.EMPTY;
var G__290896 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This generates an iterative process, whose number of steps grows as the logarithm of the numbers involved."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290895,G__290896) : tailrecursion.hoplon.markdown.para_node.call(null,G__290895,G__290896));
})(),(function (){var G__290897 = cljs.core.PersistentArrayMap.EMPTY;
var G__290898 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The fact that the number of steps required by Euclid",(function (){var G__290899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290900 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290899,G__290900) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290899,G__290900));
})(),"s Algorithm has a logarithmic growth bears an interesting relation to the Fibonacci numbers:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290897,G__290898) : tailrecursion.hoplon.markdown.para_node.call(null,G__290897,G__290898));
})(),(function (){var G__290901 = cljs.core.PersistentArrayMap.EMPTY;
var G__290902 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"**",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,true], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lam\u00E9",(function (){var G__290903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290904 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290903,G__290904) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290903,G__290904));
})(),"s Theorem:"], null)], 0))," If Euclid",(function (){var G__290905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290906 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290905,G__290906) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290905,G__290906));
})(),"s Algorithm requires \\(k\\) steps to compute the GCD of some pair, then the smaller number in the pair must be greater than or equal to the \\(k\\)th Fibonacci number.",(function (){var G__290907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__290908 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can prove this by induction. Let",(function (){var G__290909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290910 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290909,G__290910) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290909,G__290910));
})(),"s pick an arbitrary natural number \\(n\\), and assume that for any \\(k<n\\), if a pair of natural numbers \\(a>b>0\\) requires \\(k\\) steps of Euclid",(function (){var G__290911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290912 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290911,G__290912) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290911,G__290912));
})(),"s algorithm to compute their GCD, then both \\(a\\) and \\(b\\) are greater than or equal to \\(Fib(k)\\). Now we take a pair, \\((a_n,b_n)\\) that takes \\(n\\) steps. If \\(n=0\\), then we know we started with zero and we",(function (){var G__290913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290914 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290913,G__290914) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290913,G__290914));
})(),"re done. If \\(n=1\\), then \\(b|a\\), and since neither of them are 0, we",(function (){var G__290915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290916 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290915,G__290916) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290915,G__290916));
})(),"re done. Otherwise, we note that every time we apply an iteration of the algorithm \\((a_n,b_n)\\to(a_{n-1},b_{n-1})\\), where \\(a_{n-1}=b_n\\) and \\(a_n=q\\cdot b_n+b_{n-1}\\) for some integer \\(q>0\\). Now we note, if we apply two iterations, \\((a_n,b_n)\\to (a_{n-2},b_{n-2})\\), where \\(a_{n-2}=b_{n-1}\\) and \\(a_{n-1}=s\\cdot b_{n-1}+b_{n-2}\\) and \\(s>0\\). So we",(function (){var G__290917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290918 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290917,G__290918) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290917,G__290918));
})(),"ve concluded \\(b_n=a_{n-1}=s\\cdot b_{n-1}+b_{n-2}\\geq b_{n-1}+b_{n-2}\\), which by assumption are greater than \\(Fib(n-1)\\) and \\(Fib(n-2)\\) respectively. Hence, \\(a_n>b_n\\geq Fib(n-1)+Fib(n-2)=Fib(n)\\)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__290907,G__290908) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__290907,G__290908));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290901,G__290902) : tailrecursion.hoplon.markdown.para_node.call(null,G__290901,G__290902));
})(),(function (){var G__290919 = cljs.core.PersistentArrayMap.EMPTY;
var G__290920 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can use this theorem to get an order-of-growth estimate for Euclid",(function (){var G__290921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__290922 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__290921,G__290922) : tailrecursion.hoplon.markdown.simple_node.call(null,G__290921,G__290922));
})(),"s Algorithm. Let \\(n\\) be the smaller of the two inputs to the procedure. If the process takes \\(k\\) steps, then we must have \\(n\\geq Fib(k)\\approx\\phi^k/\\sqrt5\\). Therefore the smaller of steps \\(k\\) grows as the logarithm (to the base \\(\\phi\\)) of \\(n\\). Hence, the order of growth is \\(\\Theta(\\log n)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290919,G__290920) : tailrecursion.hoplon.markdown.para_node.call(null,G__290919,G__290920));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290632;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290631;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290630;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290629;
}})()], 0));
var G__280002 = "";
var G__280003 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"20"], null),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_290923 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290924 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290925 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290926 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290927 = cljs.core.PersistentArrayMap.EMPTY;
var G__290928 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The process that a procedure generates is of course dependent on the rules used by the interpreter. As an example, consider the iterative ",(function (){var G__290929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__290930 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290929,G__290930) : tailrecursion.hoplon.markdown.code_node.call(null,G__290929,G__290930));
})()," procedure given above. Suppose we were to interpret this procedure using normal-order evaluation, as discussed in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/5/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.5"], null)], 0)),". (The normal-order-evaluation rule for ",(function (){var G__290931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"if"], null);
var G__290932 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290931,G__290932) : tailrecursion.hoplon.markdown.code_node.call(null,G__290931,G__290932));
})()," is described in exercise 1.5.) Using the substitution method (for normal order), illustrate the process generated in evaluating ",(function (){var G__290933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(gcd 206\n40)"], null);
var G__290934 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290933,G__290934) : tailrecursion.hoplon.markdown.code_node.call(null,G__290933,G__290934));
})()," and indicate the ",(function (){var G__290935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__290936 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290935,G__290936) : tailrecursion.hoplon.markdown.code_node.call(null,G__290935,G__290936));
})()," operations that are actually performed. How many ",(function (){var G__290937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__290938 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290937,G__290938) : tailrecursion.hoplon.markdown.code_node.call(null,G__290937,G__290938));
})()," operations are actually performed in the normal-order evaluation of ",(function (){var G__290939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(gcd 206 40)"], null);
var G__290940 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__290939,G__290940) : tailrecursion.hoplon.markdown.code_node.call(null,G__290939,G__290940));
})(),"? In the applicative-order evaluation?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290927,G__290928) : tailrecursion.hoplon.markdown.para_node.call(null,G__290927,G__290928));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290926;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290925;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290924;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290923;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_290941 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290942 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_290943 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_290944 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__290945 = cljs.core.PersistentArrayMap.EMPTY;
var G__290946 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For applicative order evaluation:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__290945,G__290946) : tailrecursion.hoplon.markdown.para_node.call(null,G__290945,G__290946));
})(),(function (){var G__291130 = (function (){var G__291131 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__291132 = (function (){var G__291133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__291134 = "(";
var G__291135 = (function (){var G__291224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291225 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291224,G__291225) : tailrecursion.hoplon.span.call(null,G__291224,G__291225));
})();
var G__291136 = " ";
var G__291137 = (function (){var G__291226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291227 = "206";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291226,G__291227) : tailrecursion.hoplon.span.call(null,G__291226,G__291227));
})();
var G__291138 = " ";
var G__291139 = (function (){var G__291228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291229 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291228,G__291229) : tailrecursion.hoplon.span.call(null,G__291228,G__291229));
})();
var G__291140 = ") ";
var G__291141 = (function (){var G__291230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291231 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291230,G__291231) : tailrecursion.hoplon.span.call(null,G__291230,G__291231));
})();
var G__291142 = "(";
var G__291143 = (function (){var G__291232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291233 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291232,G__291233) : tailrecursion.hoplon.span.call(null,G__291232,G__291233));
})();
var G__291144 = " ";
var G__291145 = (function (){var G__291234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291235 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291234,G__291235) : tailrecursion.hoplon.span.call(null,G__291234,G__291235));
})();
var G__291146 = " (";
var G__291147 = (function (){var G__291236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291237 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291236,G__291237) : tailrecursion.hoplon.span.call(null,G__291236,G__291237));
})();
var G__291148 = " ";
var G__291149 = (function (){var G__291238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291239 = "206";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291238,G__291239) : tailrecursion.hoplon.span.call(null,G__291238,G__291239));
})();
var G__291150 = " ";
var G__291151 = (function (){var G__291240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291241 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291240,G__291241) : tailrecursion.hoplon.span.call(null,G__291240,G__291241));
})();
var G__291152 = "))\n             ";
var G__291153 = (function (){var G__291242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291243 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291242,G__291243) : tailrecursion.hoplon.span.call(null,G__291242,G__291243));
})();
var G__291154 = "(";
var G__291155 = (function (){var G__291244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291245 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291244,G__291245) : tailrecursion.hoplon.span.call(null,G__291244,G__291245));
})();
var G__291156 = " ";
var G__291157 = (function (){var G__291246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291247 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291246,G__291247) : tailrecursion.hoplon.span.call(null,G__291246,G__291247));
})();
var G__291158 = " ";
var G__291159 = (function (){var G__291248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291249 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291248,G__291249) : tailrecursion.hoplon.span.call(null,G__291248,G__291249));
})();
var G__291160 = ")\n             ";
var G__291161 = (function (){var G__291250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291251 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291250,G__291251) : tailrecursion.hoplon.span.call(null,G__291250,G__291251));
})();
var G__291162 = "(";
var G__291163 = (function (){var G__291252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291253 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291252,G__291253) : tailrecursion.hoplon.span.call(null,G__291252,G__291253));
})();
var G__291164 = " ";
var G__291165 = (function (){var G__291254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291255 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291254,G__291255) : tailrecursion.hoplon.span.call(null,G__291254,G__291255));
})();
var G__291166 = " (";
var G__291167 = (function (){var G__291256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291257 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291256,G__291257) : tailrecursion.hoplon.span.call(null,G__291256,G__291257));
})();
var G__291168 = " ";
var G__291169 = (function (){var G__291258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291259 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291258,G__291259) : tailrecursion.hoplon.span.call(null,G__291258,G__291259));
})();
var G__291170 = " ";
var G__291171 = (function (){var G__291260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291261 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291260,G__291261) : tailrecursion.hoplon.span.call(null,G__291260,G__291261));
})();
var G__291172 = "))\n             ";
var G__291173 = (function (){var G__291262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291263 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291262,G__291263) : tailrecursion.hoplon.span.call(null,G__291262,G__291263));
})();
var G__291174 = "(";
var G__291175 = (function (){var G__291264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291265 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291264,G__291265) : tailrecursion.hoplon.span.call(null,G__291264,G__291265));
})();
var G__291176 = " ";
var G__291177 = (function (){var G__291266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291267 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291266,G__291267) : tailrecursion.hoplon.span.call(null,G__291266,G__291267));
})();
var G__291178 = " ";
var G__291179 = (function (){var G__291268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291269 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291268,G__291269) : tailrecursion.hoplon.span.call(null,G__291268,G__291269));
})();
var G__291180 = "\n             ";
var G__291181 = (function (){var G__291270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291271 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291270,G__291271) : tailrecursion.hoplon.span.call(null,G__291270,G__291271));
})();
var G__291182 = "(";
var G__291183 = (function (){var G__291272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291273 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291272,G__291273) : tailrecursion.hoplon.span.call(null,G__291272,G__291273));
})();
var G__291184 = " ";
var G__291185 = (function (){var G__291274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291275 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291274,G__291275) : tailrecursion.hoplon.span.call(null,G__291274,G__291275));
})();
var G__291186 = " (";
var G__291187 = (function (){var G__291276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291277 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291276,G__291277) : tailrecursion.hoplon.span.call(null,G__291276,G__291277));
})();
var G__291188 = " ";
var G__291189 = (function (){var G__291278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291279 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291278,G__291279) : tailrecursion.hoplon.span.call(null,G__291278,G__291279));
})();
var G__291190 = " ";
var G__291191 = (function (){var G__291280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291281 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291280,G__291281) : tailrecursion.hoplon.span.call(null,G__291280,G__291281));
})();
var G__291192 = "))\n             ";
var G__291193 = (function (){var G__291282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291283 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291282,G__291283) : tailrecursion.hoplon.span.call(null,G__291282,G__291283));
})();
var G__291194 = "(";
var G__291195 = (function (){var G__291284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291285 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291284,G__291285) : tailrecursion.hoplon.span.call(null,G__291284,G__291285));
})();
var G__291196 = " ";
var G__291197 = (function (){var G__291286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291287 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291286,G__291287) : tailrecursion.hoplon.span.call(null,G__291286,G__291287));
})();
var G__291198 = " ";
var G__291199 = (function (){var G__291288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291289 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291288,G__291289) : tailrecursion.hoplon.span.call(null,G__291288,G__291289));
})();
var G__291200 = ")\n             ";
var G__291201 = (function (){var G__291290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291291 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291290,G__291291) : tailrecursion.hoplon.span.call(null,G__291290,G__291291));
})();
var G__291202 = "(";
var G__291203 = (function (){var G__291292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291293 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291292,G__291293) : tailrecursion.hoplon.span.call(null,G__291292,G__291293));
})();
var G__291204 = " ";
var G__291205 = (function (){var G__291294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291295 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291294,G__291295) : tailrecursion.hoplon.span.call(null,G__291294,G__291295));
})();
var G__291206 = " (";
var G__291207 = (function (){var G__291296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291297 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291296,G__291297) : tailrecursion.hoplon.span.call(null,G__291296,G__291297));
})();
var G__291208 = " ";
var G__291209 = (function (){var G__291298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291299 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291298,G__291299) : tailrecursion.hoplon.span.call(null,G__291298,G__291299));
})();
var G__291210 = " ";
var G__291211 = (function (){var G__291300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291301 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291300,G__291301) : tailrecursion.hoplon.span.call(null,G__291300,G__291301));
})();
var G__291212 = "))\n             ";
var G__291213 = (function (){var G__291302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291303 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291302,G__291303) : tailrecursion.hoplon.span.call(null,G__291302,G__291303));
})();
var G__291214 = "(";
var G__291215 = (function (){var G__291304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291305 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291304,G__291305) : tailrecursion.hoplon.span.call(null,G__291304,G__291305));
})();
var G__291216 = " ";
var G__291217 = (function (){var G__291306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291307 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291306,G__291307) : tailrecursion.hoplon.span.call(null,G__291306,G__291307));
})();
var G__291218 = " ";
var G__291219 = (function (){var G__291308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291309 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291308,G__291309) : tailrecursion.hoplon.span.call(null,G__291308,G__291309));
})();
var G__291220 = ")\n             ";
var G__291221 = (function (){var G__291310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291311 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291310,G__291311) : tailrecursion.hoplon.span.call(null,G__291310,G__291311));
})();
var G__291222 = (function (){var G__291312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291313 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291312,G__291313) : tailrecursion.hoplon.span.call(null,G__291312,G__291313));
})();
var G__291223 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$91 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$91(G__291133,G__291134,G__291135,G__291136,G__291137,G__291138,G__291139,G__291140,G__291141,G__291142,G__291143,G__291144,G__291145,G__291146,G__291147,G__291148,G__291149,G__291150,G__291151,G__291152,G__291153,G__291154,G__291155,G__291156,G__291157,G__291158,G__291159,G__291160,G__291161,G__291162,G__291163,G__291164,G__291165,G__291166,G__291167,G__291168,G__291169,G__291170,G__291171,G__291172,G__291173,G__291174,G__291175,G__291176,G__291177,G__291178,G__291179,G__291180,G__291181,G__291182,G__291183,G__291184,G__291185,G__291186,G__291187,G__291188,G__291189,G__291190,G__291191,G__291192,G__291193,G__291194,G__291195,G__291196,G__291197,G__291198,G__291199,G__291200,G__291201,G__291202,G__291203,G__291204,G__291205,G__291206,G__291207,G__291208,G__291209,G__291210,G__291211,G__291212,G__291213,G__291214,G__291215,G__291216,G__291217,G__291218,G__291219,G__291220,G__291221,G__291222,G__291223) : tailrecursion.hoplon.pre.call(null,G__291133,G__291134,G__291135,G__291136,G__291137,G__291138,G__291139,G__291140,G__291141,G__291142,G__291143,G__291144,G__291145,G__291146,G__291147,G__291148,G__291149,G__291150,G__291151,G__291152,G__291153,G__291154,G__291155,G__291156,G__291157,G__291158,G__291159,G__291160,G__291161,G__291162,G__291163,G__291164,G__291165,G__291166,G__291167,G__291168,G__291169,G__291170,G__291171,G__291172,G__291173,G__291174,G__291175,G__291176,G__291177,G__291178,G__291179,G__291180,G__291181,G__291182,G__291183,G__291184,G__291185,G__291186,G__291187,G__291188,G__291189,G__291190,G__291191,G__291192,G__291193,G__291194,G__291195,G__291196,G__291197,G__291198,G__291199,G__291200,G__291201,G__291202,G__291203,G__291204,G__291205,G__291206,G__291207,G__291208,G__291209,G__291210,G__291211,G__291212,G__291213,G__291214,G__291215,G__291216,G__291217,G__291218,G__291219,G__291220,G__291221,G__291222,G__291223));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__291131,G__291132) : tailrecursion.hoplon.div.call(null,G__291131,G__291132));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__291130) : tailrecursion.hoplon.div.call(null,G__291130));
})(),(function (){var G__291314 = cljs.core.PersistentArrayMap.EMPTY;
var G__291315 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, in applicative order, ",(function (){var G__291316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__291317 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291316,G__291317) : tailrecursion.hoplon.markdown.code_node.call(null,G__291316,G__291317));
})()," is only called four times."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291314,G__291315) : tailrecursion.hoplon.markdown.para_node.call(null,G__291314,G__291315));
})(),(function (){var G__291318 = cljs.core.PersistentArrayMap.EMPTY;
var G__291319 = new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For normal-order evaluation it would start with ",(function (){var G__291320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(= 40 0)"], null);
var G__291321 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291320,G__291321) : tailrecursion.hoplon.markdown.code_node.call(null,G__291320,G__291321));
})()," which would lead it to ",(function (){var G__291322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(GCD 40 (mod 206 40))"], null);
var G__291323 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291322,G__291323) : tailrecursion.hoplon.markdown.code_node.call(null,G__291322,G__291323));
})()," without computing the ",(function (){var G__291324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__291325 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291324,G__291325) : tailrecursion.hoplon.markdown.code_node.call(null,G__291324,G__291325));
})()," yet. Then it evaluates ",(function (){var G__291326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(= (mod 206 40) 0)"], null);
var G__291327 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291326,G__291327) : tailrecursion.hoplon.markdown.code_node.call(null,G__291326,G__291327));
})()," with our first ",(function (){var G__291328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__291329 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291328,G__291329) : tailrecursion.hoplon.markdown.code_node.call(null,G__291328,G__291329));
})()," evaluation. Then it calls ",(function (){var G__291330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(GCD (mod 206 40) (mod 40 (mod 206 40)))"], null);
var G__291331 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291330,G__291331) : tailrecursion.hoplon.markdown.code_node.call(null,G__291330,G__291331));
})()," without computing the ",(function (){var G__291332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mods"], null);
var G__291333 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291332,G__291333) : tailrecursion.hoplon.markdown.code_node.call(null,G__291332,G__291333));
})(),", which evaluates ",(function (){var G__291334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(= (mod 40 (mod 206\n40)) 0)"], null);
var G__291335 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291334,G__291335) : tailrecursion.hoplon.markdown.code_node.call(null,G__291334,G__291335));
})()," which gives us our second and third calls for ",(function (){var G__291336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__291337 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291336,G__291337) : tailrecursion.hoplon.markdown.code_node.call(null,G__291336,G__291337));
})()," and calls ",(function (){var G__291338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(GCD (mod 40 (mod 206 40)) (mod (mod 206 40) (mod 40 (mod 206\n40))))"], null);
var G__291339 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291338,G__291339) : tailrecursion.hoplon.markdown.code_node.call(null,G__291338,G__291339));
})()," without evaluating the arguments. This calls ",(function (){var G__291340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(= (mod (mod\n206 40) (mod 40 (mod 206 40))) 0)"], null);
var G__291341 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291340,G__291341) : tailrecursion.hoplon.markdown.code_node.call(null,G__291340,G__291341));
})()," and so on."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291318,G__291319) : tailrecursion.hoplon.markdown.para_node.call(null,G__291318,G__291319));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290944;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290943;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_290942;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_290941;
}})()], 0))], 0))], 0));
var G__280004 = "";
var G__280005 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Example: Testing for Primality"], null),(function (){var _STAR_references_STAR_291342 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291343 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291344 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291345 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291346 = cljs.core.PersistentArrayMap.EMPTY;
var G__291347 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This section describes two methods for checking the primality of an integer \\(n\\), one with order of growth \\(\\Theta(\\sqrt n)\\), and a ",(function (){var G__291348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__291349 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["probabilistic"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__291348,G__291349) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__291348,G__291349));
})()," algorithm with order of growth \\(\\Theta(\\log n)\\). The exercises at the end of this section suggest programming projects based on these algorithms."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291346,G__291347) : tailrecursion.hoplon.markdown.para_node.call(null,G__291346,G__291347));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291345;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291344;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291343;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291342;
}})()], 0));
var G__280006 = "";
var G__280007 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Searching for Divisors"], null),(function (){var _STAR_references_STAR_291350 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291351 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291352 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291353 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291354 = cljs.core.PersistentArrayMap.EMPTY;
var G__291355 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since ancient times, mathematicians have been fascinated by the problems concerning prime numbers, and many people have worked on the problem of determining ways to test if numbers are prime. One way to test if a number is prime is to find the number",(function (){var G__291356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__291357 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__291356,G__291357) : tailrecursion.hoplon.markdown.simple_node.call(null,G__291356,G__291357));
})(),"s divisors. The following program finds the smallest integral divisor (greater than 1) of a given number \\(n\\). It does this in a straightforward way, by testing \\(n\\) for divisibility by successive integers starting with 2."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291354,G__291355) : tailrecursion.hoplon.markdown.para_node.call(null,G__291354,G__291355));
})(),(function (){var G__291494 = (function (){var G__291495 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__291496 = (function (){var G__291497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__291498 = "(";
var G__291499 = (function (){var G__291563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__291564 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291563,G__291564) : tailrecursion.hoplon.span.call(null,G__291563,G__291564));
})();
var G__291500 = (function (){var G__291565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291566 = "divides?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291565,G__291566) : tailrecursion.hoplon.span.call(null,G__291565,G__291566));
})();
var G__291501 = " [";
var G__291502 = (function (){var G__291567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291568 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291567,G__291568) : tailrecursion.hoplon.span.call(null,G__291567,G__291568));
})();
var G__291503 = " ";
var G__291504 = (function (){var G__291569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291570 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291569,G__291570) : tailrecursion.hoplon.span.call(null,G__291569,G__291570));
})();
var G__291505 = "]\n  (";
var G__291506 = (function (){var G__291571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291572 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291571,G__291572) : tailrecursion.hoplon.span.call(null,G__291571,G__291572));
})();
var G__291507 = "(";
var G__291508 = (function (){var G__291573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291574 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291573,G__291574) : tailrecursion.hoplon.span.call(null,G__291573,G__291574));
})();
var G__291509 = " ";
var G__291510 = (function (){var G__291575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291576 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291575,G__291576) : tailrecursion.hoplon.span.call(null,G__291575,G__291576));
})();
var G__291511 = " ";
var G__291512 = (function (){var G__291577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291578 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291577,G__291578) : tailrecursion.hoplon.span.call(null,G__291577,G__291578));
})();
var G__291513 = ") ";
var G__291514 = (function (){var G__291579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291580 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291579,G__291580) : tailrecursion.hoplon.span.call(null,G__291579,G__291580));
})();
var G__291515 = "))\n(";
var G__291516 = (function (){var G__291581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__291582 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291581,G__291582) : tailrecursion.hoplon.span.call(null,G__291581,G__291582));
})();
var G__291517 = (function (){var G__291583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291584 = "find-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291583,G__291584) : tailrecursion.hoplon.span.call(null,G__291583,G__291584));
})();
var G__291518 = " [";
var G__291519 = (function (){var G__291585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291586 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291585,G__291586) : tailrecursion.hoplon.span.call(null,G__291585,G__291586));
})();
var G__291520 = " ";
var G__291521 = (function (){var G__291587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291588 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291587,G__291588) : tailrecursion.hoplon.span.call(null,G__291587,G__291588));
})();
var G__291522 = "]\n  (";
var G__291523 = (function (){var G__291589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291590 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291589,G__291590) : tailrecursion.hoplon.span.call(null,G__291589,G__291590));
})();
var G__291524 = "(";
var G__291525 = (function (){var G__291591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291592 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291591,G__291592) : tailrecursion.hoplon.span.call(null,G__291591,G__291592));
})();
var G__291526 = "(";
var G__291527 = (function (){var G__291593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291594 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291593,G__291594) : tailrecursion.hoplon.span.call(null,G__291593,G__291594));
})();
var G__291528 = " ";
var G__291529 = (function (){var G__291595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291596 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291595,G__291596) : tailrecursion.hoplon.span.call(null,G__291595,G__291596));
})();
var G__291530 = ") ";
var G__291531 = (function (){var G__291597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291598 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291597,G__291598) : tailrecursion.hoplon.span.call(null,G__291597,G__291598));
})();
var G__291532 = ") ";
var G__291533 = (function (){var G__291599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291600 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291599,G__291600) : tailrecursion.hoplon.span.call(null,G__291599,G__291600));
})();
var G__291534 = "\n        (";
var G__291535 = (function (){var G__291601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291602 = "divides?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291601,G__291602) : tailrecursion.hoplon.span.call(null,G__291601,G__291602));
})();
var G__291536 = " ";
var G__291537 = (function (){var G__291603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291604 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291603,G__291604) : tailrecursion.hoplon.span.call(null,G__291603,G__291604));
})();
var G__291538 = " ";
var G__291539 = (function (){var G__291605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291606 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291605,G__291606) : tailrecursion.hoplon.span.call(null,G__291605,G__291606));
})();
var G__291540 = ") ";
var G__291541 = (function (){var G__291607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291608 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291607,G__291608) : tailrecursion.hoplon.span.call(null,G__291607,G__291608));
})();
var G__291542 = "\n        ";
var G__291543 = (function (){var G__291609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291610 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291609,G__291610) : tailrecursion.hoplon.span.call(null,G__291609,G__291610));
})();
var G__291544 = " (";
var G__291545 = (function (){var G__291611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291612 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291611,G__291612) : tailrecursion.hoplon.span.call(null,G__291611,G__291612));
})();
var G__291546 = " ";
var G__291547 = (function (){var G__291613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291614 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291613,G__291614) : tailrecursion.hoplon.span.call(null,G__291613,G__291614));
})();
var G__291548 = " (";
var G__291549 = (function (){var G__291615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291616 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291615,G__291616) : tailrecursion.hoplon.span.call(null,G__291615,G__291616));
})();
var G__291550 = (function (){var G__291617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291618 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291617,G__291618) : tailrecursion.hoplon.span.call(null,G__291617,G__291618));
})();
var G__291551 = "))))\n(";
var G__291552 = (function (){var G__291619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__291620 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291619,G__291620) : tailrecursion.hoplon.span.call(null,G__291619,G__291620));
})();
var G__291553 = (function (){var G__291621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291622 = "smallest-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291621,G__291622) : tailrecursion.hoplon.span.call(null,G__291621,G__291622));
})();
var G__291554 = " [";
var G__291555 = (function (){var G__291623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291624 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291623,G__291624) : tailrecursion.hoplon.span.call(null,G__291623,G__291624));
})();
var G__291556 = "]\n  (";
var G__291557 = (function (){var G__291625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291626 = "find-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291625,G__291626) : tailrecursion.hoplon.span.call(null,G__291625,G__291626));
})();
var G__291558 = " ";
var G__291559 = (function (){var G__291627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291628 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291627,G__291628) : tailrecursion.hoplon.span.call(null,G__291627,G__291628));
})();
var G__291560 = " ";
var G__291561 = (function (){var G__291629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291630 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291629,G__291630) : tailrecursion.hoplon.span.call(null,G__291629,G__291630));
})();
var G__291562 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$66 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$66(G__291497,G__291498,G__291499,G__291500,G__291501,G__291502,G__291503,G__291504,G__291505,G__291506,G__291507,G__291508,G__291509,G__291510,G__291511,G__291512,G__291513,G__291514,G__291515,G__291516,G__291517,G__291518,G__291519,G__291520,G__291521,G__291522,G__291523,G__291524,G__291525,G__291526,G__291527,G__291528,G__291529,G__291530,G__291531,G__291532,G__291533,G__291534,G__291535,G__291536,G__291537,G__291538,G__291539,G__291540,G__291541,G__291542,G__291543,G__291544,G__291545,G__291546,G__291547,G__291548,G__291549,G__291550,G__291551,G__291552,G__291553,G__291554,G__291555,G__291556,G__291557,G__291558,G__291559,G__291560,G__291561,G__291562) : tailrecursion.hoplon.pre.call(null,G__291497,G__291498,G__291499,G__291500,G__291501,G__291502,G__291503,G__291504,G__291505,G__291506,G__291507,G__291508,G__291509,G__291510,G__291511,G__291512,G__291513,G__291514,G__291515,G__291516,G__291517,G__291518,G__291519,G__291520,G__291521,G__291522,G__291523,G__291524,G__291525,G__291526,G__291527,G__291528,G__291529,G__291530,G__291531,G__291532,G__291533,G__291534,G__291535,G__291536,G__291537,G__291538,G__291539,G__291540,G__291541,G__291542,G__291543,G__291544,G__291545,G__291546,G__291547,G__291548,G__291549,G__291550,G__291551,G__291552,G__291553,G__291554,G__291555,G__291556,G__291557,G__291558,G__291559,G__291560,G__291561,G__291562));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__291495,G__291496) : tailrecursion.hoplon.div.call(null,G__291495,G__291496));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__291494) : tailrecursion.hoplon.div.call(null,G__291494));
})(),(function (){var G__291631 = cljs.core.PersistentArrayMap.EMPTY;
var G__291632 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can test whether a number is prime as follows: \\(n\\) is prime if and only if \\(n\\) is its own smallest divisor."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291631,G__291632) : tailrecursion.hoplon.markdown.para_node.call(null,G__291631,G__291632));
})(),(function (){var G__291663 = (function (){var G__291664 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__291665 = (function (){var G__291666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__291667 = "(";
var G__291668 = (function (){var G__291680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__291681 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291680,G__291681) : tailrecursion.hoplon.span.call(null,G__291680,G__291681));
})();
var G__291669 = (function (){var G__291682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291683 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291682,G__291683) : tailrecursion.hoplon.span.call(null,G__291682,G__291683));
})();
var G__291670 = " [";
var G__291671 = (function (){var G__291684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291685 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291684,G__291685) : tailrecursion.hoplon.span.call(null,G__291684,G__291685));
})();
var G__291672 = "]\n  (";
var G__291673 = (function (){var G__291686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291687 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291686,G__291687) : tailrecursion.hoplon.span.call(null,G__291686,G__291687));
})();
var G__291674 = (function (){var G__291688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291689 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291688,G__291689) : tailrecursion.hoplon.span.call(null,G__291688,G__291689));
})();
var G__291675 = " (";
var G__291676 = (function (){var G__291690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291691 = "smallest-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291690,G__291691) : tailrecursion.hoplon.span.call(null,G__291690,G__291691));
})();
var G__291677 = " ";
var G__291678 = (function (){var G__291692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291693 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291692,G__291693) : tailrecursion.hoplon.span.call(null,G__291692,G__291693));
})();
var G__291679 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__291666,G__291667,G__291668,G__291669,G__291670,G__291671,G__291672,G__291673,G__291674,G__291675,G__291676,G__291677,G__291678,G__291679) : tailrecursion.hoplon.pre.call(null,G__291666,G__291667,G__291668,G__291669,G__291670,G__291671,G__291672,G__291673,G__291674,G__291675,G__291676,G__291677,G__291678,G__291679));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__291664,G__291665) : tailrecursion.hoplon.div.call(null,G__291664,G__291665));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__291663) : tailrecursion.hoplon.div.call(null,G__291663));
})(),(function (){var G__291694 = cljs.core.PersistentArrayMap.EMPTY;
var G__291695 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The end test for ",(function (){var G__291696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"find-divisor"], null);
var G__291697 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291696,G__291697) : tailrecursion.hoplon.markdown.code_node.call(null,G__291696,G__291697));
})()," is based on the fact that if \\(n\\) is not prime it must have a divisor less than or equal to \\(\\sqrt n\\).",(function (){var G__291698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__291699 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(d\\) is a divisor of \\(n\\), then so id \\(n/d\\). But \\(d\\) and \\(n/d\\) cannot both be greater than \\(\\sqrt n\\)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__291698,G__291699) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__291698,G__291699));
})()," This means that the algorithm need only test divisors between 1 and \\(\\sqrt n\\). Consequently, the number of steps required to identify \\(n\\) as prime will have order of growth \\(\\Theta (\\sqrt n)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291694,G__291695) : tailrecursion.hoplon.markdown.para_node.call(null,G__291694,G__291695));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291353;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291352;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291351;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291350;
}})()], 0));
var G__280008 = "";
var G__280009 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"The Fermat Test"], null),(function (){var _STAR_references_STAR_291700 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291701 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_291702 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_291703 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291704 = cljs.core.PersistentArrayMap.EMPTY;
var G__291705 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The \\(\\Theta(\\log n)\\) primality test is based on a result from number theory known as Fermat",(function (){var G__291706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__291707 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__291706,G__291707) : tailrecursion.hoplon.markdown.simple_node.call(null,G__291706,G__291707));
})(),"s Little Theorem.",(function (){var G__291708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__291709 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Pierre de Fermat (1601-1665) is considered to be the founder of modern number theory. He obtained many important number-theoretic results, but he usually announced just the results, without providing his proofs. Fermat",(function (){var G__291710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__291711 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__291710,G__291711) : tailrecursion.hoplon.markdown.simple_node.call(null,G__291710,G__291711));
})(),"s Little Theorem was stated in a letter he wrote in 1640. The first published proof was given by Euler in 1736 (and an earlier, identical proof was discovered in the unpublished manuscripts of Leibniz). The most famous of Fermat",(function (){var G__291712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__291713 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__291712,G__291713) : tailrecursion.hoplon.markdown.simple_node.call(null,G__291712,G__291713));
})(),"s results ",(function (){var G__291714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__291715 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__291714,G__291715) : tailrecursion.hoplon.markdown.simple_node.call(null,G__291714,G__291715));
})()," known as Fermat",(function (){var G__291716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__291717 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__291716,G__291717) : tailrecursion.hoplon.markdown.simple_node.call(null,G__291716,G__291717));
})(),"s Last Theorem ",(function (){var G__291718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__291719 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__291718,G__291719) : tailrecursion.hoplon.markdown.simple_node.call(null,G__291718,G__291719));
})()," was jotted down in 1637 in his copy of the book ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Arithmetic"], null)], 0))," (by the third-century Greek mathematician Diophantus) with the remark ",(function (){var G__291720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__291721 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I have discovered a truly remarkable proof, but this margin is too small to contain it."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__291720,G__291721) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__291720,G__291721));
})()," Finding a proof of Fermat",(function (){var G__291722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__291723 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__291722,G__291723) : tailrecursion.hoplon.markdown.simple_node.call(null,G__291722,G__291723));
})(),"s Last Theorem became one of the most famous challenges in number theory. A complete solution was finally given in 1995 by Andrew Wiles of Princeton University."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__291708,G__291709) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__291708,G__291709));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291704,G__291705) : tailrecursion.hoplon.markdown.para_node.call(null,G__291704,G__291705));
})(),(function (){var G__291724 = cljs.core.PersistentArrayMap.EMPTY;
var G__291725 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"**",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,true], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fermat",(function (){var G__291726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__291727 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__291726,G__291727) : tailrecursion.hoplon.markdown.simple_node.call(null,G__291726,G__291727));
})(),"s Little Theorem:"], null)], 0))," If \\(n\\) is a prime number and \\(a\\) is any positive integer less than \\(n\\), then \\(a\\) raised to the \\(n\\)th power is congruent to \\(a\\) modulo \\(n\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291724,G__291725) : tailrecursion.hoplon.markdown.para_node.call(null,G__291724,G__291725));
})(),(function (){var G__291728 = cljs.core.PersistentArrayMap.EMPTY;
var G__291729 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(Two numbers are said to be ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["congruent modulo"], null)], 0))," \\(n\\) if they both have the same remainder when divided by \\(n\\). The remainder of a number \\(a\\) when divided by \\(n\\) is also referred to as the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["remainder of a modulo n"], null)], 0))," or simply as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a modulo n"], null)], 0)),".)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291728,G__291729) : tailrecursion.hoplon.markdown.para_node.call(null,G__291728,G__291729));
})(),(function (){var G__291730 = cljs.core.PersistentArrayMap.EMPTY;
var G__291731 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(n\\) is not prime, then, in general, most of the numbers \\(a<n\\) will not satisfy the above relation. This leads to the following algorithm for testing primality: Given a number \\(n\\), pick a random number \\(a<n\\) and compute the remainder of \\(a^n\\) modulo \\(n\\). If the result is not equal to \\(a\\), then \\(n\\) is certainly not prime. If it is \\(a\\), then chances are good that \\(n\\) is prime. Now pick another random number \\(a\\) and test it with the same method. If it also satisfies the equation, then we can be even more confident that \\(n\\) is prime. By trying more and more values of \\(a\\), we can increase our confidence in the result. This algorithm is known as the Fermat test."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291730,G__291731) : tailrecursion.hoplon.markdown.para_node.call(null,G__291730,G__291731));
})(),(function (){var G__291732 = cljs.core.PersistentArrayMap.EMPTY;
var G__291733 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To implement the Fermat test, we need a procedure that computes the exponential of a number modulo another number:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291732,G__291733) : tailrecursion.hoplon.markdown.para_node.call(null,G__291732,G__291733));
})(),(function (){var G__291853 = (function (){var G__291854 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__291855 = (function (){var G__291856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__291857 = "(";
var G__291858 = (function (){var G__291913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__291914 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291913,G__291914) : tailrecursion.hoplon.span.call(null,G__291913,G__291914));
})();
var G__291859 = (function (){var G__291915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291916 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291915,G__291916) : tailrecursion.hoplon.span.call(null,G__291915,G__291916));
})();
var G__291860 = " [";
var G__291861 = (function (){var G__291917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291918 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291917,G__291918) : tailrecursion.hoplon.span.call(null,G__291917,G__291918));
})();
var G__291862 = " ";
var G__291863 = (function (){var G__291919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291920 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291919,G__291920) : tailrecursion.hoplon.span.call(null,G__291919,G__291920));
})();
var G__291864 = " ";
var G__291865 = (function (){var G__291921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291922 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291921,G__291922) : tailrecursion.hoplon.span.call(null,G__291921,G__291922));
})();
var G__291866 = "]\n  (";
var G__291867 = (function (){var G__291923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291924 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291923,G__291924) : tailrecursion.hoplon.span.call(null,G__291923,G__291924));
})();
var G__291868 = "(";
var G__291869 = (function (){var G__291925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291926 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291925,G__291926) : tailrecursion.hoplon.span.call(null,G__291925,G__291926));
})();
var G__291870 = (function (){var G__291927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291928 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291927,G__291928) : tailrecursion.hoplon.span.call(null,G__291927,G__291928));
})();
var G__291871 = " ";
var G__291872 = (function (){var G__291929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291930 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291929,G__291930) : tailrecursion.hoplon.span.call(null,G__291929,G__291930));
})();
var G__291873 = ") ";
var G__291874 = (function (){var G__291931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291932 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291931,G__291932) : tailrecursion.hoplon.span.call(null,G__291931,G__291932));
})();
var G__291875 = "\n        (";
var G__291876 = (function (){var G__291933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291934 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291933,G__291934) : tailrecursion.hoplon.span.call(null,G__291933,G__291934));
})();
var G__291877 = " ";
var G__291878 = (function (){var G__291935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291936 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291935,G__291936) : tailrecursion.hoplon.span.call(null,G__291935,G__291936));
})();
var G__291879 = ") (";
var G__291880 = (function (){var G__291937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291938 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291937,G__291938) : tailrecursion.hoplon.span.call(null,G__291937,G__291938));
})();
var G__291881 = " (";
var G__291882 = (function (){var G__291939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291940 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291939,G__291940) : tailrecursion.hoplon.span.call(null,G__291939,G__291940));
})();
var G__291883 = " (";
var G__291884 = (function (){var G__291941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291942 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291941,G__291942) : tailrecursion.hoplon.span.call(null,G__291941,G__291942));
})();
var G__291885 = " ";
var G__291886 = (function (){var G__291943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291944 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291943,G__291944) : tailrecursion.hoplon.span.call(null,G__291943,G__291944));
})();
var G__291887 = " (";
var G__291888 = (function (){var G__291945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291946 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291945,G__291946) : tailrecursion.hoplon.span.call(null,G__291945,G__291946));
})();
var G__291889 = (function (){var G__291947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291948 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291947,G__291948) : tailrecursion.hoplon.span.call(null,G__291947,G__291948));
})();
var G__291890 = " ";
var G__291891 = (function (){var G__291949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291950 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291949,G__291950) : tailrecursion.hoplon.span.call(null,G__291949,G__291950));
})();
var G__291892 = "))) ";
var G__291893 = (function (){var G__291951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291952 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291951,G__291952) : tailrecursion.hoplon.span.call(null,G__291951,G__291952));
})();
var G__291894 = ")\n        ";
var G__291895 = (function (){var G__291953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291954 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291953,G__291954) : tailrecursion.hoplon.span.call(null,G__291953,G__291954));
})();
var G__291896 = " (";
var G__291897 = (function (){var G__291955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291956 = "remainder";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291955,G__291956) : tailrecursion.hoplon.span.call(null,G__291955,G__291956));
})();
var G__291898 = " (";
var G__291899 = (function (){var G__291957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291958 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291957,G__291958) : tailrecursion.hoplon.span.call(null,G__291957,G__291958));
})();
var G__291900 = (function (){var G__291959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291960 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291959,G__291960) : tailrecursion.hoplon.span.call(null,G__291959,G__291960));
})();
var G__291901 = " (";
var G__291902 = (function (){var G__291961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__291962 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291961,G__291962) : tailrecursion.hoplon.span.call(null,G__291961,G__291962));
})();
var G__291903 = " ";
var G__291904 = (function (){var G__291963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291964 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291963,G__291964) : tailrecursion.hoplon.span.call(null,G__291963,G__291964));
})();
var G__291905 = " (";
var G__291906 = (function (){var G__291965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__291966 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291965,G__291966) : tailrecursion.hoplon.span.call(null,G__291965,G__291966));
})();
var G__291907 = (function (){var G__291967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291968 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291967,G__291968) : tailrecursion.hoplon.span.call(null,G__291967,G__291968));
})();
var G__291908 = " ";
var G__291909 = (function (){var G__291969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__291970 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291969,G__291970) : tailrecursion.hoplon.span.call(null,G__291969,G__291970));
})();
var G__291910 = "))) ";
var G__291911 = (function (){var G__291971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__291972 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__291971,G__291972) : tailrecursion.hoplon.span.call(null,G__291971,G__291972));
})();
var G__291912 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$57 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$57(G__291856,G__291857,G__291858,G__291859,G__291860,G__291861,G__291862,G__291863,G__291864,G__291865,G__291866,G__291867,G__291868,G__291869,G__291870,G__291871,G__291872,G__291873,G__291874,G__291875,G__291876,G__291877,G__291878,G__291879,G__291880,G__291881,G__291882,G__291883,G__291884,G__291885,G__291886,G__291887,G__291888,G__291889,G__291890,G__291891,G__291892,G__291893,G__291894,G__291895,G__291896,G__291897,G__291898,G__291899,G__291900,G__291901,G__291902,G__291903,G__291904,G__291905,G__291906,G__291907,G__291908,G__291909,G__291910,G__291911,G__291912) : tailrecursion.hoplon.pre.call(null,G__291856,G__291857,G__291858,G__291859,G__291860,G__291861,G__291862,G__291863,G__291864,G__291865,G__291866,G__291867,G__291868,G__291869,G__291870,G__291871,G__291872,G__291873,G__291874,G__291875,G__291876,G__291877,G__291878,G__291879,G__291880,G__291881,G__291882,G__291883,G__291884,G__291885,G__291886,G__291887,G__291888,G__291889,G__291890,G__291891,G__291892,G__291893,G__291894,G__291895,G__291896,G__291897,G__291898,G__291899,G__291900,G__291901,G__291902,G__291903,G__291904,G__291905,G__291906,G__291907,G__291908,G__291909,G__291910,G__291911,G__291912));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__291854,G__291855) : tailrecursion.hoplon.div.call(null,G__291854,G__291855));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__291853) : tailrecursion.hoplon.div.call(null,G__291853));
})(),(function (){var G__291973 = cljs.core.PersistentArrayMap.EMPTY;
var G__291974 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__291975 = cljs.core.PersistentArrayMap.EMPTY;
var G__291976 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: This is not tail recursive!"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291975,G__291976) : tailrecursion.hoplon.markdown.para_node.call(null,G__291975,G__291976));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__291973,G__291974) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__291973,G__291974));
})(),(function (){var G__291977 = cljs.core.PersistentArrayMap.EMPTY;
var G__291978 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This is very similar to the ",(function (){var G__291979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-expt"], null);
var G__291980 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291979,G__291980) : tailrecursion.hoplon.markdown.code_node.call(null,G__291979,G__291980));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/2/sub/4/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.4"], null)], 0)),". It uses successive squaring, so that the number of steps grows logarithmically with the exponent.",(function (){var G__291981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__291982 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The reduction steps in the cases where the exponent \\(e\\) is greater than 1 are based on the fact that, for any integers \\(x, y\\), and \\(m\\), we can find the remainder of \\(x\\) times \\(y\\) modulo \\(m\\) by computing separately the remainders of \\(x\\) modulo \\(m\\) and \\(y\\) modulo \\(m\\), multiplying these, and then taking the remainder of the result modulo \\(m\\). For instance, in the case where \\(e\\) is even, we compute \\(b^{e/2}\\pmod m\\), square this, and take the remainder modulo m. This technique is useful because it means we can perform our computation without ever having to deal with numbers much larger than m. (Compare exercise 1.25.)"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__291981,G__291982) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__291981,G__291982));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291977,G__291978) : tailrecursion.hoplon.markdown.para_node.call(null,G__291977,G__291978));
})(),(function (){var G__291983 = cljs.core.PersistentArrayMap.EMPTY;
var G__291984 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The Fermat test is performed by choosing at randum a number \\(a\\) between 1 and \\(n-1\\) inclusive and checking whether the remainder modulo \\(n\\) of the \\(n\\)th power of \\(a\\) is equal to \\(a\\). The random number \\(a\\) is chosen using the procedure ",(function (){var G__291985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rand-int"], null);
var G__291986 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291985,G__291986) : tailrecursion.hoplon.markdown.code_node.call(null,G__291985,G__291986));
})()," which returns a nonnegative integer less than its integer input. Hence to obtain a random number between 1 and \\(n-1\\), we call ",(function (){var G__291987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rand-int"], null);
var G__291988 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__291987,G__291988) : tailrecursion.hoplon.markdown.code_node.call(null,G__291987,G__291988));
})()," with an input of \\(n-1\\) and add 1 to the result"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__291983,G__291984) : tailrecursion.hoplon.markdown.para_node.call(null,G__291983,G__291984));
})(),(function (){var G__292046 = (function (){var G__292047 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__292048 = (function (){var G__292049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__292050 = "(";
var G__292051 = (function (){var G__292076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292077 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292076,G__292077) : tailrecursion.hoplon.span.call(null,G__292076,G__292077));
})();
var G__292052 = (function (){var G__292078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292079 = "fermat-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292078,G__292079) : tailrecursion.hoplon.span.call(null,G__292078,G__292079));
})();
var G__292053 = " [";
var G__292054 = (function (){var G__292080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292081 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292080,G__292081) : tailrecursion.hoplon.span.call(null,G__292080,G__292081));
})();
var G__292055 = "]\n  (";
var G__292056 = (function (){var G__292082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292083 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292082,G__292083) : tailrecursion.hoplon.span.call(null,G__292082,G__292083));
})();
var G__292057 = "(";
var G__292058 = (function (){var G__292084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292085 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292084,G__292085) : tailrecursion.hoplon.span.call(null,G__292084,G__292085));
})();
var G__292059 = " (";
var G__292060 = (function (){var G__292086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292087 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292086,G__292087) : tailrecursion.hoplon.span.call(null,G__292086,G__292087));
})();
var G__292061 = (function (){var G__292088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__292089 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292088,G__292089) : tailrecursion.hoplon.span.call(null,G__292088,G__292089));
})();
var G__292062 = " (";
var G__292063 = (function (){var G__292090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292091 = "rand-int ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292090,G__292091) : tailrecursion.hoplon.span.call(null,G__292090,G__292091));
})();
var G__292064 = "(";
var G__292065 = (function (){var G__292092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292093 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292092,G__292093) : tailrecursion.hoplon.span.call(null,G__292092,G__292093));
})();
var G__292066 = (function (){var G__292094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292095 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292094,G__292095) : tailrecursion.hoplon.span.call(null,G__292094,G__292095));
})();
var G__292067 = " ";
var G__292068 = (function (){var G__292096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__292097 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292096,G__292097) : tailrecursion.hoplon.span.call(null,G__292096,G__292097));
})();
var G__292069 = ")))\n             ";
var G__292070 = (function (){var G__292098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292099 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292098,G__292099) : tailrecursion.hoplon.span.call(null,G__292098,G__292099));
})();
var G__292071 = "\n             ";
var G__292072 = (function (){var G__292100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292101 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292100,G__292101) : tailrecursion.hoplon.span.call(null,G__292100,G__292101));
})();
var G__292073 = ")\n     ";
var G__292074 = (function (){var G__292102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292103 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292102,G__292103) : tailrecursion.hoplon.span.call(null,G__292102,G__292103));
})();
var G__292075 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27(G__292049,G__292050,G__292051,G__292052,G__292053,G__292054,G__292055,G__292056,G__292057,G__292058,G__292059,G__292060,G__292061,G__292062,G__292063,G__292064,G__292065,G__292066,G__292067,G__292068,G__292069,G__292070,G__292071,G__292072,G__292073,G__292074,G__292075) : tailrecursion.hoplon.pre.call(null,G__292049,G__292050,G__292051,G__292052,G__292053,G__292054,G__292055,G__292056,G__292057,G__292058,G__292059,G__292060,G__292061,G__292062,G__292063,G__292064,G__292065,G__292066,G__292067,G__292068,G__292069,G__292070,G__292071,G__292072,G__292073,G__292074,G__292075));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__292047,G__292048) : tailrecursion.hoplon.div.call(null,G__292047,G__292048));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__292046) : tailrecursion.hoplon.div.call(null,G__292046));
})(),(function (){var G__292104 = cljs.core.PersistentArrayMap.EMPTY;
var G__292105 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following procedure runs the test a given number of times, as specified by a parameter. Its value is true if the test succeeds every time, and false otherwise."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292104,G__292105) : tailrecursion.hoplon.markdown.para_node.call(null,G__292104,G__292105));
})(),(function (){var G__292187 = (function (){var G__292188 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__292189 = (function (){var G__292190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__292191 = "(";
var G__292192 = (function (){var G__292229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292230 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292229,G__292230) : tailrecursion.hoplon.span.call(null,G__292229,G__292230));
})();
var G__292193 = (function (){var G__292231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292232 = "fast-prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292231,G__292232) : tailrecursion.hoplon.span.call(null,G__292231,G__292232));
})();
var G__292194 = " [";
var G__292195 = (function (){var G__292233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292234 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292233,G__292234) : tailrecursion.hoplon.span.call(null,G__292233,G__292234));
})();
var G__292196 = " ";
var G__292197 = (function (){var G__292235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292236 = "times";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292235,G__292236) : tailrecursion.hoplon.span.call(null,G__292235,G__292236));
})();
var G__292198 = "]\n  (";
var G__292199 = (function (){var G__292237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292238 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292237,G__292238) : tailrecursion.hoplon.span.call(null,G__292237,G__292238));
})();
var G__292200 = "[";
var G__292201 = (function (){var G__292239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292240 = "times-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292239,G__292240) : tailrecursion.hoplon.span.call(null,G__292239,G__292240));
})();
var G__292202 = " ";
var G__292203 = (function (){var G__292241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292242 = "times";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292241,G__292242) : tailrecursion.hoplon.span.call(null,G__292241,G__292242));
})();
var G__292204 = "]\n    (";
var G__292205 = (function (){var G__292243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292244 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292243,G__292244) : tailrecursion.hoplon.span.call(null,G__292243,G__292244));
})();
var G__292206 = "(";
var G__292207 = (function (){var G__292245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292246 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292245,G__292246) : tailrecursion.hoplon.span.call(null,G__292245,G__292246));
})();
var G__292208 = (function (){var G__292247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292248 = "times-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292247,G__292248) : tailrecursion.hoplon.span.call(null,G__292247,G__292248));
})();
var G__292209 = " ";
var G__292210 = (function (){var G__292249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__292250 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292249,G__292250) : tailrecursion.hoplon.span.call(null,G__292249,G__292250));
})();
var G__292211 = ") ";
var G__292212 = (function (){var G__292251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292252 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292251,G__292252) : tailrecursion.hoplon.span.call(null,G__292251,G__292252));
})();
var G__292213 = "\n          (";
var G__292214 = (function (){var G__292253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292254 = "fermat-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292253,G__292254) : tailrecursion.hoplon.span.call(null,G__292253,G__292254));
})();
var G__292215 = " ";
var G__292216 = (function (){var G__292255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292256 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292255,G__292256) : tailrecursion.hoplon.span.call(null,G__292255,G__292256));
})();
var G__292217 = ") (";
var G__292218 = (function (){var G__292257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292258 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292257,G__292258) : tailrecursion.hoplon.span.call(null,G__292257,G__292258));
})();
var G__292219 = " (";
var G__292220 = (function (){var G__292259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292260 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292259,G__292260) : tailrecursion.hoplon.span.call(null,G__292259,G__292260));
})();
var G__292221 = (function (){var G__292261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292262 = "times-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292261,G__292262) : tailrecursion.hoplon.span.call(null,G__292261,G__292262));
})();
var G__292222 = " ";
var G__292223 = (function (){var G__292263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__292264 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292263,G__292264) : tailrecursion.hoplon.span.call(null,G__292263,G__292264));
})();
var G__292224 = "))\n          ";
var G__292225 = (function (){var G__292265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292266 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292265,G__292266) : tailrecursion.hoplon.span.call(null,G__292265,G__292266));
})();
var G__292226 = " ";
var G__292227 = (function (){var G__292267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292268 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292267,G__292268) : tailrecursion.hoplon.span.call(null,G__292267,G__292268));
})();
var G__292228 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$39 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$39(G__292190,G__292191,G__292192,G__292193,G__292194,G__292195,G__292196,G__292197,G__292198,G__292199,G__292200,G__292201,G__292202,G__292203,G__292204,G__292205,G__292206,G__292207,G__292208,G__292209,G__292210,G__292211,G__292212,G__292213,G__292214,G__292215,G__292216,G__292217,G__292218,G__292219,G__292220,G__292221,G__292222,G__292223,G__292224,G__292225,G__292226,G__292227,G__292228) : tailrecursion.hoplon.pre.call(null,G__292190,G__292191,G__292192,G__292193,G__292194,G__292195,G__292196,G__292197,G__292198,G__292199,G__292200,G__292201,G__292202,G__292203,G__292204,G__292205,G__292206,G__292207,G__292208,G__292209,G__292210,G__292211,G__292212,G__292213,G__292214,G__292215,G__292216,G__292217,G__292218,G__292219,G__292220,G__292221,G__292222,G__292223,G__292224,G__292225,G__292226,G__292227,G__292228));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__292188,G__292189) : tailrecursion.hoplon.div.call(null,G__292188,G__292189));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__292187) : tailrecursion.hoplon.div.call(null,G__292187));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291703;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291702;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_291701;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_291700;
}})()], 0));
var G__280010 = "";
var G__280011 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Probabilistic Methods"], null),(function (){var _STAR_references_STAR_292269 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292270 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292271 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292272 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292273 = cljs.core.PersistentArrayMap.EMPTY;
var G__292274 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Ther Fermat test differs in character from most familiar algorithms, in which one computes an answer that is guaranteed to be correct. Here, the answer obtained is only probably correct. More precisely, if \\(n\\) ever fails the Fermat test, we can be certain that \\(n\\) is not prime. But the fact that \\(n\\) passes the test, while an extremely strong indication, is still not a guarantee that \\(n\\) is prime. What we would like to say is that for any number \\(n\\), if we perform the test enough times and find that \\(n\\) always passes the test, then the probability of error in our primality test can be made as small as we like."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292273,G__292274) : tailrecursion.hoplon.markdown.para_node.call(null,G__292273,G__292274));
})(),(function (){var G__292275 = cljs.core.PersistentArrayMap.EMPTY;
var G__292276 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Unfortunately, this assertion is not quite correct. There do exist numbers that fool the Fermat test: numbers \\(n\\) that are note prime and yet have th property that \\(a^n\\) is congruent to \\(a\\) modulo \\(n\\) for all integers \\(a< n\\). Such numbers are extremely rare, so the Fermat test is quite reliable in practice.",(function (){var G__292277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__292278 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Numbers that fool the Fermat test are called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Carmichael numbers"], null)], 0)),", and little is known about them other than that they are extremely rare. There are 255 Carmichael numbers below 100,000,000. The smallest few are 561, 1105, 1729, 2465, 2821, and 6601. In testing primality of very large numbers chosen at random, the chance of stumbling upon a value that fools the Fermat test is less than the chance that cosmic radiation will cause the computer to make an error in carrying out a ",(function (){var G__292279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__292280 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["correct"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__292279,G__292280) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__292279,G__292280));
})()," algorithm. Considering an algorithm to be inadequate for the first reason but not for the second illustrates the difference between mathematics and engineering."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__292277,G__292278) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__292277,G__292278));
})()," There are variations of the Fermat test that cannot be fooled. In these tests, as with the Fermat method, one tests the primality of an integer \\(n\\) by choosing a random integer \\(a< n\\) and checking some condition that depends upon \\(n\\) and \\(a\\). (See ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/exercise/28/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Exercise 1.28"], null)], 0))," for an example of such a test.) On the other hand, in contrast to the Fermat test, one can prove that, for any \\(n\\), the condition does not hold for most of the integers \\(a<n\\) unless \\(n\\) is prime. Thus, if \\(n\\) passes the test for some random choice of \\(a\\), the chances are better than even that \\(n\\) is prime. If \\(n\\) passes the test for two random choices of \\(a\\), the chances are better than 3 out of 4 that \\(n\\) is prime. By running the test with more and more randomly chosen values of \\(a\\) we can make the probability of error as small as we like."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292275,G__292276) : tailrecursion.hoplon.markdown.para_node.call(null,G__292275,G__292276));
})(),(function (){var G__292281 = cljs.core.PersistentArrayMap.EMPTY;
var G__292282 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The existence of tests for which one can prove that the chance of error becomes arbitrarily small has sparked interest in algorithms of this type, which have come to be known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["probabilistic algorithms"], null)], 0)),". There is a great deal of research activity in this area and probabilistic algorithms have been ruitfully applied to many fields.",(function (){var G__292283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__292284 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One of the most striking applications of probabilistic prime testing has been to the field of cryptography. Although it is now computationally infeasible to factor an arbitrary 200-digit number, the primality of such a number can be checked in a few seconds with the Fermat test. This fact forms the basis of a technique for constructing ",(function (){var G__292285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__292286 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["unbreakable codes"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__292285,G__292286) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__292285,G__292286));
})()," suggested by Rivest, Shamir, and Adleman (1977). The resulting ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["RSA algorithm"], null)], 0))," has become a widely used technique for enhancing the security of electronic communications. Because of this and related developments, the study of prime numbers, once considered the epitome of a topic in ",(function (){var G__292287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__292288 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pure"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__292287,G__292288) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__292287,G__292288));
})()," mathematics to be studied only for its own sake, now turns out to have important practical applications to cryptography, electronic funds transfer, and information retrieval."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__292283,G__292284) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__292283,G__292284));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292281,G__292282) : tailrecursion.hoplon.markdown.para_node.call(null,G__292281,G__292282));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292272;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292271;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292270;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292269;
}})()], 0));
var G__280012 = "";
var G__280013 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"21-28"], null),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(21)], null),(function (){var _STAR_references_STAR_292289 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292290 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292291 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292292 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292293 = cljs.core.PersistentArrayMap.EMPTY;
var G__292294 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Use the ",(function (){var G__292295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"smallest-divisor"], null);
var G__292296 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292295,G__292296) : tailrecursion.hoplon.markdown.code_node.call(null,G__292295,G__292296));
})()," procedure to find the smallest divisor of each of the following numbers: 199, 1999,19999."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292293,G__292294) : tailrecursion.hoplon.markdown.para_node.call(null,G__292293,G__292294));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292292;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292291;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292290;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292289;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_292297 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292298 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292299 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292300 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292301 = cljs.core.PersistentArrayMap.EMPTY;
var G__292302 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["199 is prime."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292301,G__292302) : tailrecursion.hoplon.markdown.para_node.call(null,G__292301,G__292302));
})(),(function (){var G__292303 = cljs.core.PersistentArrayMap.EMPTY;
var G__292304 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["1999 is also prime."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292303,G__292304) : tailrecursion.hoplon.markdown.para_node.call(null,G__292303,G__292304));
})(),(function (){var G__292305 = cljs.core.PersistentArrayMap.EMPTY;
var G__292306 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["7 is the smallest divisor of 19999"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292305,G__292306) : tailrecursion.hoplon.markdown.para_node.call(null,G__292305,G__292306));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292300;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292299;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292298;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292297;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(22)], null),(function (){var _STAR_references_STAR_292307 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292308 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292309 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292310 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292311 = cljs.core.PersistentArrayMap.EMPTY;
var G__292312 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Most Lisp implementations include a primitive (called ",(function (){var G__292313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"runtime"], null);
var G__292314 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292313,G__292314) : tailrecursion.hoplon.markdown.code_node.call(null,G__292313,G__292314));
})()," in Scheme) that returns an integer that specifies the amount of time the system has been running (measured, for example, in microseconds). In Clojure, however, there is a function that is better suited for our current needs called ",(function (){var G__292315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"time"], null);
var G__292316 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292315,G__292316) : tailrecursion.hoplon.markdown.code_node.call(null,G__292315,G__292316));
})()," that evaluates its argument and prints the time it took to evaluate it, then it returns the value of the expression. The following ",(function (){var G__292317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"timed-prime-test"], null);
var G__292318 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292317,G__292318) : tailrecursion.hoplon.markdown.code_node.call(null,G__292317,G__292318));
})()," procedure, when called with an integer \\(n\\), prints \\(n\\) and checks to see if \\(n\\) is prime while timing the test, prints the time it took to test the primality of the number followed by the value of that test (ie ",(function (){var G__292319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"true"], null);
var G__292320 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292319,G__292320) : tailrecursion.hoplon.markdown.code_node.call(null,G__292319,G__292320));
})()," or ",(function (){var G__292321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"false"], null);
var G__292322 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292321,G__292322) : tailrecursion.hoplon.markdown.code_node.call(null,G__292321,G__292322));
})(),"). But in order to successfully accomplish this task, we need to learn about a few more tools in the Clojure toolshed."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292311,G__292312) : tailrecursion.hoplon.markdown.para_node.call(null,G__292311,G__292312));
})(),(function (){var G__292323 = cljs.core.PersistentArrayMap.EMPTY;
var G__292324 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If you have any questions about the specific functions used in this (or any example), remember to check out ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"http://www.clojuredocs.org",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Clojuredocs.org"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292323,G__292324) : tailrecursion.hoplon.markdown.para_node.call(null,G__292323,G__292324));
})(),(function (){var G__292363 = (function (){var G__292364 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__292365 = (function (){var G__292366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__292367 = "(";
var G__292368 = (function (){var G__292384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292385 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292384,G__292385) : tailrecursion.hoplon.span.call(null,G__292384,G__292385));
})();
var G__292369 = (function (){var G__292386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292387 = "timed-prime-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292386,G__292387) : tailrecursion.hoplon.span.call(null,G__292386,G__292387));
})();
var G__292370 = " [";
var G__292371 = (function (){var G__292388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292389 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292388,G__292389) : tailrecursion.hoplon.span.call(null,G__292388,G__292389));
})();
var G__292372 = "]\n  (";
var G__292373 = (function (){var G__292390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292391 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292390,G__292391) : tailrecursion.hoplon.span.call(null,G__292390,G__292391));
})();
var G__292374 = "(";
var G__292375 = (function (){var G__292392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292393 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292392,G__292393) : tailrecursion.hoplon.span.call(null,G__292392,G__292393));
})();
var G__292376 = (function (){var G__292394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292395 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292394,G__292395) : tailrecursion.hoplon.span.call(null,G__292394,G__292395));
})();
var G__292377 = ") (";
var G__292378 = (function (){var G__292396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292397 = "time ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292396,G__292397) : tailrecursion.hoplon.span.call(null,G__292396,G__292397));
})();
var G__292379 = "(";
var G__292380 = (function (){var G__292398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292399 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292398,G__292399) : tailrecursion.hoplon.span.call(null,G__292398,G__292399));
})();
var G__292381 = " ";
var G__292382 = (function (){var G__292400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292401 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292400,G__292401) : tailrecursion.hoplon.span.call(null,G__292400,G__292401));
})();
var G__292383 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__292366,G__292367,G__292368,G__292369,G__292370,G__292371,G__292372,G__292373,G__292374,G__292375,G__292376,G__292377,G__292378,G__292379,G__292380,G__292381,G__292382,G__292383) : tailrecursion.hoplon.pre.call(null,G__292366,G__292367,G__292368,G__292369,G__292370,G__292371,G__292372,G__292373,G__292374,G__292375,G__292376,G__292377,G__292378,G__292379,G__292380,G__292381,G__292382,G__292383));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__292364,G__292365) : tailrecursion.hoplon.div.call(null,G__292364,G__292365));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__292363) : tailrecursion.hoplon.div.call(null,G__292363));
})(),(function (){var G__292402 = cljs.core.PersistentArrayMap.EMPTY;
var G__292403 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292404 = cljs.core.PersistentArrayMap.EMPTY;
var G__292405 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alternatively, if we didn",(function (){var G__292406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__292407 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__292406,G__292407) : tailrecursion.hoplon.markdown.simple_node.call(null,G__292406,G__292407));
})(),"t want to see the ",(function (){var G__292408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"true"], null);
var G__292409 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292408,G__292409) : tailrecursion.hoplon.markdown.code_node.call(null,G__292408,G__292409));
})(),"/",(function (){var G__292410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"false"], null);
var G__292411 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292410,G__292411) : tailrecursion.hoplon.markdown.code_node.call(null,G__292410,G__292411));
})()," at the end, we could put ",(function (){var G__292412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(do (time (prime? n)) n)"], null);
var G__292413 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292412,G__292413) : tailrecursion.hoplon.markdown.code_node.call(null,G__292412,G__292413));
})(),", which would evaluate the ",(function (){var G__292414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(time (prime? n))"], null);
var G__292415 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292414,G__292415) : tailrecursion.hoplon.markdown.code_node.call(null,G__292414,G__292415));
})()," procedure, which would print the time it took to determine the primality of \\(n\\), then it would evaluate ",(function (){var G__292416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__292417 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292416,G__292417) : tailrecursion.hoplon.markdown.code_node.call(null,G__292416,G__292417));
})(),", and return the value, which is ",(function (){var G__292418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__292419 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292418,G__292419) : tailrecursion.hoplon.markdown.code_node.call(null,G__292418,G__292419));
})()," itself."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292404,G__292405) : tailrecursion.hoplon.markdown.para_node.call(null,G__292404,G__292405));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__292402,G__292403) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__292402,G__292403));
})(),(function (){var G__292420 = cljs.core.PersistentArrayMap.EMPTY;
var G__292421 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using this procedure, write a procedure ",(function (){var G__292422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"search-for-primes"], null);
var G__292423 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292422,G__292423) : tailrecursion.hoplon.markdown.code_node.call(null,G__292422,G__292423));
})()," that checks for the primality of consecutive odd integers in a specific range. Use your procedure to find the three smallest primes larger than 10,000,000,000; larger than 100,000,000,000; larger than 1,000,000,000,000; larger than 10,000,000,000,000. Note the time needed to test each prime. Since the testing algorithm has order of growth of \\(\\Theta(\\sqrt n)\\), you should expect that the testing for primes around 10,000 should take about \\(\\sqrt 10\\) times as long as testing for primes around 1,000. Do your timing data bear this out? How well do the data for 100,000 and 1,000,000 support the \\(\\sqrt n\\) prediction? Is your result compatible with the notion that programs on your machine run in the time proportional to the number of steps required for the computation?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292420,G__292421) : tailrecursion.hoplon.markdown.para_node.call(null,G__292420,G__292421));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292310;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292309;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292308;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292307;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_292424 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292425 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292426 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292427 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292543 = (function (){var G__292544 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__292545 = (function (){var G__292546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__292547 = "(";
var G__292548 = (function (){var G__292601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292602 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292601,G__292602) : tailrecursion.hoplon.span.call(null,G__292601,G__292602));
})();
var G__292549 = (function (){var G__292603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292604 = "search-for-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292603,G__292604) : tailrecursion.hoplon.span.call(null,G__292603,G__292604));
})();
var G__292550 = " [";
var G__292551 = (function (){var G__292605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292606 = "starting-number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292605,G__292606) : tailrecursion.hoplon.span.call(null,G__292605,G__292606));
})();
var G__292552 = " ";
var G__292553 = (function (){var G__292607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292608 = "number-of-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292607,G__292608) : tailrecursion.hoplon.span.call(null,G__292607,G__292608));
})();
var G__292554 = "]\n  (";
var G__292555 = (function (){var G__292609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292610 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292609,G__292610) : tailrecursion.hoplon.span.call(null,G__292609,G__292610));
})();
var G__292556 = "[";
var G__292557 = (function (){var G__292611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292612 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292611,G__292612) : tailrecursion.hoplon.span.call(null,G__292611,G__292612));
})();
var G__292558 = " ";
var G__292559 = (function (){var G__292613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292614 = "starting-number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292613,G__292614) : tailrecursion.hoplon.span.call(null,G__292613,G__292614));
})();
var G__292560 = "\n         ";
var G__292561 = (function (){var G__292615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292616 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292615,G__292616) : tailrecursion.hoplon.span.call(null,G__292615,G__292616));
})();
var G__292562 = " ";
var G__292563 = (function (){var G__292617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292618 = "number-of-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292617,G__292618) : tailrecursion.hoplon.span.call(null,G__292617,G__292618));
})();
var G__292564 = "]\n    (";
var G__292565 = (function (){var G__292619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292620 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292619,G__292620) : tailrecursion.hoplon.span.call(null,G__292619,G__292620));
})();
var G__292566 = "(";
var G__292567 = (function (){var G__292621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292622 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292621,G__292622) : tailrecursion.hoplon.span.call(null,G__292621,G__292622));
})();
var G__292568 = (function (){var G__292623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292624 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292623,G__292624) : tailrecursion.hoplon.span.call(null,G__292623,G__292624));
})();
var G__292569 = " ";
var G__292570 = (function (){var G__292625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__292626 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292625,G__292626) : tailrecursion.hoplon.span.call(null,G__292625,G__292626));
})();
var G__292571 = ") ";
var G__292572 = (function (){var G__292627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292628 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292627,G__292628) : tailrecursion.hoplon.span.call(null,G__292627,G__292628));
})();
var G__292573 = "\n          (";
var G__292574 = (function (){var G__292629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292630 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292629,G__292630) : tailrecursion.hoplon.span.call(null,G__292629,G__292630));
})();
var G__292575 = " ";
var G__292576 = (function (){var G__292631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292632 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292631,G__292632) : tailrecursion.hoplon.span.call(null,G__292631,G__292632));
})();
var G__292577 = ") (";
var G__292578 = (function (){var G__292633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292634 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292633,G__292634) : tailrecursion.hoplon.span.call(null,G__292633,G__292634));
})();
var G__292579 = "(";
var G__292580 = (function (){var G__292635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292636 = "timed-prime-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292635,G__292636) : tailrecursion.hoplon.span.call(null,G__292635,G__292636));
})();
var G__292581 = " ";
var G__292582 = (function (){var G__292637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292638 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292637,G__292638) : tailrecursion.hoplon.span.call(null,G__292637,G__292638));
})();
var G__292583 = ") (";
var G__292584 = (function (){var G__292639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292640 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292639,G__292640) : tailrecursion.hoplon.span.call(null,G__292639,G__292640));
})();
var G__292585 = " (";
var G__292586 = (function (){var G__292641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292642 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292641,G__292642) : tailrecursion.hoplon.span.call(null,G__292641,G__292642));
})();
var G__292587 = (function (){var G__292643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292644 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292643,G__292644) : tailrecursion.hoplon.span.call(null,G__292643,G__292644));
})();
var G__292588 = ") (";
var G__292589 = (function (){var G__292645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292646 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292645,G__292646) : tailrecursion.hoplon.span.call(null,G__292645,G__292646));
})();
var G__292590 = (function (){var G__292647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292648 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292647,G__292648) : tailrecursion.hoplon.span.call(null,G__292647,G__292648));
})();
var G__292591 = ")))\n          ";
var G__292592 = (function (){var G__292649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292650 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292649,G__292650) : tailrecursion.hoplon.span.call(null,G__292649,G__292650));
})();
var G__292593 = " (";
var G__292594 = (function (){var G__292651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292652 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292651,G__292652) : tailrecursion.hoplon.span.call(null,G__292651,G__292652));
})();
var G__292595 = " (";
var G__292596 = (function (){var G__292653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292654 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292653,G__292654) : tailrecursion.hoplon.span.call(null,G__292653,G__292654));
})();
var G__292597 = (function (){var G__292655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292656 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292655,G__292656) : tailrecursion.hoplon.span.call(null,G__292655,G__292656));
})();
var G__292598 = ") ";
var G__292599 = (function (){var G__292657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292658 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292657,G__292658) : tailrecursion.hoplon.span.call(null,G__292657,G__292658));
})();
var G__292600 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$55 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$55(G__292546,G__292547,G__292548,G__292549,G__292550,G__292551,G__292552,G__292553,G__292554,G__292555,G__292556,G__292557,G__292558,G__292559,G__292560,G__292561,G__292562,G__292563,G__292564,G__292565,G__292566,G__292567,G__292568,G__292569,G__292570,G__292571,G__292572,G__292573,G__292574,G__292575,G__292576,G__292577,G__292578,G__292579,G__292580,G__292581,G__292582,G__292583,G__292584,G__292585,G__292586,G__292587,G__292588,G__292589,G__292590,G__292591,G__292592,G__292593,G__292594,G__292595,G__292596,G__292597,G__292598,G__292599,G__292600) : tailrecursion.hoplon.pre.call(null,G__292546,G__292547,G__292548,G__292549,G__292550,G__292551,G__292552,G__292553,G__292554,G__292555,G__292556,G__292557,G__292558,G__292559,G__292560,G__292561,G__292562,G__292563,G__292564,G__292565,G__292566,G__292567,G__292568,G__292569,G__292570,G__292571,G__292572,G__292573,G__292574,G__292575,G__292576,G__292577,G__292578,G__292579,G__292580,G__292581,G__292582,G__292583,G__292584,G__292585,G__292586,G__292587,G__292588,G__292589,G__292590,G__292591,G__292592,G__292593,G__292594,G__292595,G__292596,G__292597,G__292598,G__292599,G__292600));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__292544,G__292545) : tailrecursion.hoplon.div.call(null,G__292544,G__292545));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__292543) : tailrecursion.hoplon.div.call(null,G__292543));
})(),(function (){var G__292659 = cljs.core.PersistentArrayMap.EMPTY;
var G__292660 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["And I leave the observations to you."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292659,G__292660) : tailrecursion.hoplon.markdown.para_node.call(null,G__292659,G__292660));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292427;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292426;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292425;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292424;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(23)], null),(function (){var _STAR_references_STAR_292661 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292662 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292663 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292664 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292665 = cljs.core.PersistentArrayMap.EMPTY;
var G__292666 = new cljs.core.PersistentVector(null, 25, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",(function (){var G__292667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"smallest-divisor"], null);
var G__292668 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292667,G__292668) : tailrecursion.hoplon.markdown.code_node.call(null,G__292667,G__292668));
})()," procedure shown at the start of this section does lots of needless testing: After it checks to see if the number is divisible by 2 there is no point in checking to see if it is divisible by any larger even numbers. This suggests that the values used for ",(function (){var G__292669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"test-divisor"], null);
var G__292670 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292669,G__292670) : tailrecursion.hoplon.markdown.code_node.call(null,G__292669,G__292670));
})()," should not be 2,3,4,5,6,",(function (){var G__292671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__292672 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__292671,G__292672) : tailrecursion.hoplon.markdown.simple_node.call(null,G__292671,G__292672));
})(),", but rather, 2,3,5,7,9,",(function (){var G__292673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__292674 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__292673,G__292674) : tailrecursion.hoplon.markdown.simple_node.call(null,G__292673,G__292674));
})(),". To implement this chance, define a procedure ",(function (){var G__292675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"next"], null);
var G__292676 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292675,G__292676) : tailrecursion.hoplon.markdown.code_node.call(null,G__292675,G__292676));
})()," that returns 3 if its input is equal to 2 and otherwise returns its input plus 2. Modify the ",(function (){var G__292677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"smallest divisor"], null);
var G__292678 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292677,G__292678) : tailrecursion.hoplon.markdown.code_node.call(null,G__292677,G__292678));
})()," procedure to use ",(function (){var G__292679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(next\ntest-divisor)"], null);
var G__292680 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292679,G__292680) : tailrecursion.hoplon.markdown.code_node.call(null,G__292679,G__292680));
})()," instead of ",(function (){var G__292681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(+ test-divisor 1)"], null);
var G__292682 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292681,G__292682) : tailrecursion.hoplon.markdown.code_node.call(null,G__292681,G__292682));
})()," or ",(function (){var G__292683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(inc\ntest-divisor)"], null);
var G__292684 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292683,G__292684) : tailrecursion.hoplon.markdown.code_node.call(null,G__292683,G__292684));
})(),". With ",(function (){var G__292685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"timed-prime-test"], null);
var G__292686 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292685,G__292686) : tailrecursion.hoplon.markdown.code_node.call(null,G__292685,G__292686));
})()," incorporating this modified version of ",(function (){var G__292687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"smallest-divisor"], null);
var G__292688 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__292687,G__292688) : tailrecursion.hoplon.markdown.code_node.call(null,G__292687,G__292688));
})(),", run the test for each of the 12 primes found in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/22/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.22"], null)], 0)),". Since this modification halves the number of test steps, you should expect it to run about twice as fast. Is this expectation confirmed? If not, what is the ovserved ration of the speeds of the two algorithms, and how do you explain the fact that it is different from 2? "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__292665,G__292666) : tailrecursion.hoplon.markdown.para_node.call(null,G__292665,G__292666));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292664;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292663;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292662;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292661;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_292689 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292690 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_292691 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_292692 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__292853 = (function (){var G__292854 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__292855 = (function (){var G__292856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__292857 = "(";
var G__292858 = (function (){var G__292932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292933 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292932,G__292933) : tailrecursion.hoplon.span.call(null,G__292932,G__292933));
})();
var G__292859 = (function (){var G__292934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292935 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292934,G__292935) : tailrecursion.hoplon.span.call(null,G__292934,G__292935));
})();
var G__292860 = "[";
var G__292861 = (function (){var G__292936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292937 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292936,G__292937) : tailrecursion.hoplon.span.call(null,G__292936,G__292937));
})();
var G__292862 = "]\n  (";
var G__292863 = (function (){var G__292938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292939 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292938,G__292939) : tailrecursion.hoplon.span.call(null,G__292938,G__292939));
})();
var G__292864 = "(";
var G__292865 = (function (){var G__292940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292941 = "divides?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292940,G__292941) : tailrecursion.hoplon.span.call(null,G__292940,G__292941));
})();
var G__292866 = " ";
var G__292867 = (function (){var G__292942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__292943 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292942,G__292943) : tailrecursion.hoplon.span.call(null,G__292942,G__292943));
})();
var G__292868 = " ";
var G__292869 = (function (){var G__292944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292945 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292944,G__292945) : tailrecursion.hoplon.span.call(null,G__292944,G__292945));
})();
var G__292870 = ")\n      (";
var G__292871 = (function (){var G__292946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292947 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292946,G__292947) : tailrecursion.hoplon.span.call(null,G__292946,G__292947));
})();
var G__292872 = (function (){var G__292948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292949 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292948,G__292949) : tailrecursion.hoplon.span.call(null,G__292948,G__292949));
})();
var G__292873 = ")\n      (";
var G__292874 = (function (){var G__292950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292951 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292950,G__292951) : tailrecursion.hoplon.span.call(null,G__292950,G__292951));
})();
var G__292875 = (function (){var G__292952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292953 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292952,G__292953) : tailrecursion.hoplon.span.call(null,G__292952,G__292953));
})();
var G__292876 = " ";
var G__292877 = (function (){var G__292954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__292955 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292954,G__292955) : tailrecursion.hoplon.span.call(null,G__292954,G__292955));
})();
var G__292878 = ")))\n(";
var G__292879 = (function (){var G__292956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292957 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292956,G__292957) : tailrecursion.hoplon.span.call(null,G__292956,G__292957));
})();
var G__292880 = (function (){var G__292958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292959 = "search-for-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292958,G__292959) : tailrecursion.hoplon.span.call(null,G__292958,G__292959));
})();
var G__292881 = " [";
var G__292882 = (function (){var G__292960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292961 = "starting-number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292960,G__292961) : tailrecursion.hoplon.span.call(null,G__292960,G__292961));
})();
var G__292883 = " ";
var G__292884 = (function (){var G__292962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292963 = "number-of-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292962,G__292963) : tailrecursion.hoplon.span.call(null,G__292962,G__292963));
})();
var G__292885 = "]\n  (";
var G__292886 = (function (){var G__292964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292965 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292964,G__292965) : tailrecursion.hoplon.span.call(null,G__292964,G__292965));
})();
var G__292887 = "[";
var G__292888 = (function (){var G__292966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292967 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292966,G__292967) : tailrecursion.hoplon.span.call(null,G__292966,G__292967));
})();
var G__292889 = " ";
var G__292890 = (function (){var G__292968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292969 = "starting-number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292968,G__292969) : tailrecursion.hoplon.span.call(null,G__292968,G__292969));
})();
var G__292891 = "\n         ";
var G__292892 = (function (){var G__292970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292971 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292970,G__292971) : tailrecursion.hoplon.span.call(null,G__292970,G__292971));
})();
var G__292893 = " ";
var G__292894 = (function (){var G__292972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292973 = "number-of-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292972,G__292973) : tailrecursion.hoplon.span.call(null,G__292972,G__292973));
})();
var G__292895 = "]\n    (";
var G__292896 = (function (){var G__292974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292975 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292974,G__292975) : tailrecursion.hoplon.span.call(null,G__292974,G__292975));
})();
var G__292897 = "(";
var G__292898 = (function (){var G__292976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292977 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292976,G__292977) : tailrecursion.hoplon.span.call(null,G__292976,G__292977));
})();
var G__292899 = (function (){var G__292978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292979 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292978,G__292979) : tailrecursion.hoplon.span.call(null,G__292978,G__292979));
})();
var G__292900 = " ";
var G__292901 = (function (){var G__292980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__292981 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292980,G__292981) : tailrecursion.hoplon.span.call(null,G__292980,G__292981));
})();
var G__292902 = ") ";
var G__292903 = (function (){var G__292982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292983 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292982,G__292983) : tailrecursion.hoplon.span.call(null,G__292982,G__292983));
})();
var G__292904 = "\n          (";
var G__292905 = (function (){var G__292984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292985 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292984,G__292985) : tailrecursion.hoplon.span.call(null,G__292984,G__292985));
})();
var G__292906 = " ";
var G__292907 = (function (){var G__292986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292987 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292986,G__292987) : tailrecursion.hoplon.span.call(null,G__292986,G__292987));
})();
var G__292908 = ") (";
var G__292909 = (function (){var G__292988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__292989 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292988,G__292989) : tailrecursion.hoplon.span.call(null,G__292988,G__292989));
})();
var G__292910 = "(";
var G__292911 = (function (){var G__292990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292991 = "timed-prime-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292990,G__292991) : tailrecursion.hoplon.span.call(null,G__292990,G__292991));
})();
var G__292912 = " ";
var G__292913 = (function (){var G__292992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292993 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292992,G__292993) : tailrecursion.hoplon.span.call(null,G__292992,G__292993));
})();
var G__292914 = ") (";
var G__292915 = (function (){var G__292994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__292995 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292994,G__292995) : tailrecursion.hoplon.span.call(null,G__292994,G__292995));
})();
var G__292916 = " (";
var G__292917 = (function (){var G__292996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__292997 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292996,G__292997) : tailrecursion.hoplon.span.call(null,G__292996,G__292997));
})();
var G__292918 = (function (){var G__292998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__292999 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__292998,G__292999) : tailrecursion.hoplon.span.call(null,G__292998,G__292999));
})();
var G__292919 = ") (";
var G__292920 = (function (){var G__293000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293001 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293000,G__293001) : tailrecursion.hoplon.span.call(null,G__293000,G__293001));
})();
var G__292921 = (function (){var G__293002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293003 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293002,G__293003) : tailrecursion.hoplon.span.call(null,G__293002,G__293003));
})();
var G__292922 = ")))\n          ";
var G__292923 = (function (){var G__293004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293005 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293004,G__293005) : tailrecursion.hoplon.span.call(null,G__293004,G__293005));
})();
var G__292924 = " (";
var G__292925 = (function (){var G__293006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293007 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293006,G__293007) : tailrecursion.hoplon.span.call(null,G__293006,G__293007));
})();
var G__292926 = " (";
var G__292927 = (function (){var G__293008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293009 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293008,G__293009) : tailrecursion.hoplon.span.call(null,G__293008,G__293009));
})();
var G__292928 = (function (){var G__293010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293011 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293010,G__293011) : tailrecursion.hoplon.span.call(null,G__293010,G__293011));
})();
var G__292929 = ") ";
var G__292930 = (function (){var G__293012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293013 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293012,G__293013) : tailrecursion.hoplon.span.call(null,G__293012,G__293013));
})();
var G__292931 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$76 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$76(G__292856,G__292857,G__292858,G__292859,G__292860,G__292861,G__292862,G__292863,G__292864,G__292865,G__292866,G__292867,G__292868,G__292869,G__292870,G__292871,G__292872,G__292873,G__292874,G__292875,G__292876,G__292877,G__292878,G__292879,G__292880,G__292881,G__292882,G__292883,G__292884,G__292885,G__292886,G__292887,G__292888,G__292889,G__292890,G__292891,G__292892,G__292893,G__292894,G__292895,G__292896,G__292897,G__292898,G__292899,G__292900,G__292901,G__292902,G__292903,G__292904,G__292905,G__292906,G__292907,G__292908,G__292909,G__292910,G__292911,G__292912,G__292913,G__292914,G__292915,G__292916,G__292917,G__292918,G__292919,G__292920,G__292921,G__292922,G__292923,G__292924,G__292925,G__292926,G__292927,G__292928,G__292929,G__292930,G__292931) : tailrecursion.hoplon.pre.call(null,G__292856,G__292857,G__292858,G__292859,G__292860,G__292861,G__292862,G__292863,G__292864,G__292865,G__292866,G__292867,G__292868,G__292869,G__292870,G__292871,G__292872,G__292873,G__292874,G__292875,G__292876,G__292877,G__292878,G__292879,G__292880,G__292881,G__292882,G__292883,G__292884,G__292885,G__292886,G__292887,G__292888,G__292889,G__292890,G__292891,G__292892,G__292893,G__292894,G__292895,G__292896,G__292897,G__292898,G__292899,G__292900,G__292901,G__292902,G__292903,G__292904,G__292905,G__292906,G__292907,G__292908,G__292909,G__292910,G__292911,G__292912,G__292913,G__292914,G__292915,G__292916,G__292917,G__292918,G__292919,G__292920,G__292921,G__292922,G__292923,G__292924,G__292925,G__292926,G__292927,G__292928,G__292929,G__292930,G__292931));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__292854,G__292855) : tailrecursion.hoplon.div.call(null,G__292854,G__292855));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__292853) : tailrecursion.hoplon.div.call(null,G__292853));
})(),(function (){var G__293014 = cljs.core.PersistentArrayMap.EMPTY;
var G__293015 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Well, we",(function (){var G__293016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__293017 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__293016,G__293017) : tailrecursion.hoplon.markdown.simple_node.call(null,G__293016,G__293017));
})(),"re not exactly halving the number of steps because each time we have to evaluate the ",(function (){var G__293018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"if"], null);
var G__293019 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293018,G__293019) : tailrecursion.hoplon.markdown.code_node.call(null,G__293018,G__293019));
})()," statement which includes some division and whatnot. Also there are compiler optimizations invloved, so these things are rough estimates."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293014,G__293015) : tailrecursion.hoplon.markdown.para_node.call(null,G__293014,G__293015));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292692;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292691;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_292690;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_292689;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(24)], null),(function (){var _STAR_references_STAR_293020 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293021 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_293022 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293023 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__293024 = cljs.core.PersistentArrayMap.EMPTY;
var G__293025 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Modify the ",(function (){var G__293026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"timed-prime-test"], null);
var G__293027 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293026,G__293027) : tailrecursion.hoplon.markdown.code_node.call(null,G__293026,G__293027));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/24/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.22"], null)], 0))," to use ",(function (){var G__293028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-prime?"], null);
var G__293029 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293028,G__293029) : tailrecursion.hoplon.markdown.code_node.call(null,G__293028,G__293029));
})()," (the Fermat method), and test each of the 12 primes you found in that exercise. Since the Fermat test has \\(\\Theta(\\log n)\\) growth, how would you expect the time to test primes near 10,000,000,000,000 to compare with the time needed to test primes near 10,000,000,000? Do your data bear this out? Can you explain any discrepancy you find?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293024,G__293025) : tailrecursion.hoplon.markdown.para_node.call(null,G__293024,G__293025));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293023;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293022;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293021;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293020;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_293030 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293031 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_293032 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293033 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__293072 = (function (){var G__293073 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__293074 = (function (){var G__293075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__293076 = "(";
var G__293077 = (function (){var G__293093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__293094 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293093,G__293094) : tailrecursion.hoplon.span.call(null,G__293093,G__293094));
})();
var G__293078 = (function (){var G__293095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293096 = "timed-prime-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293095,G__293096) : tailrecursion.hoplon.span.call(null,G__293095,G__293096));
})();
var G__293079 = " [";
var G__293080 = (function (){var G__293097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293098 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293097,G__293098) : tailrecursion.hoplon.span.call(null,G__293097,G__293098));
})();
var G__293081 = "]\n  (";
var G__293082 = (function (){var G__293099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__293100 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293099,G__293100) : tailrecursion.hoplon.span.call(null,G__293099,G__293100));
})();
var G__293083 = "(";
var G__293084 = (function (){var G__293101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293102 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293101,G__293102) : tailrecursion.hoplon.span.call(null,G__293101,G__293102));
})();
var G__293085 = (function (){var G__293103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293104 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293103,G__293104) : tailrecursion.hoplon.span.call(null,G__293103,G__293104));
})();
var G__293086 = ") (";
var G__293087 = (function (){var G__293105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293106 = "time ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293105,G__293106) : tailrecursion.hoplon.span.call(null,G__293105,G__293106));
})();
var G__293088 = "(";
var G__293089 = (function (){var G__293107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293108 = "fast-prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293107,G__293108) : tailrecursion.hoplon.span.call(null,G__293107,G__293108));
})();
var G__293090 = " ";
var G__293091 = (function (){var G__293109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293110 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293109,G__293110) : tailrecursion.hoplon.span.call(null,G__293109,G__293110));
})();
var G__293092 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__293075,G__293076,G__293077,G__293078,G__293079,G__293080,G__293081,G__293082,G__293083,G__293084,G__293085,G__293086,G__293087,G__293088,G__293089,G__293090,G__293091,G__293092) : tailrecursion.hoplon.pre.call(null,G__293075,G__293076,G__293077,G__293078,G__293079,G__293080,G__293081,G__293082,G__293083,G__293084,G__293085,G__293086,G__293087,G__293088,G__293089,G__293090,G__293091,G__293092));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__293073,G__293074) : tailrecursion.hoplon.div.call(null,G__293073,G__293074));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__293072) : tailrecursion.hoplon.div.call(null,G__293072));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293033;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293032;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293031;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293030;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(25)], null),(function (){var _STAR_references_STAR_293111 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293112 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_293113 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293114 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__293115 = cljs.core.PersistentArrayMap.EMPTY;
var G__293116 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa P. Hacker complains that we went to a lot of extra work in writing ",(function (){var G__293117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"expmod"], null);
var G__293118 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293117,G__293118) : tailrecursion.hoplon.markdown.code_node.call(null,G__293117,G__293118));
})(),". After all, she says, since we already know how to compute exponentials, we could have simply written"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293115,G__293116) : tailrecursion.hoplon.markdown.para_node.call(null,G__293115,G__293116));
})(),(function (){var G__293162 = (function (){var G__293163 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__293164 = (function (){var G__293165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__293166 = "(";
var G__293167 = (function (){var G__293186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__293187 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293186,G__293187) : tailrecursion.hoplon.span.call(null,G__293186,G__293187));
})();
var G__293168 = (function (){var G__293188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293189 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293188,G__293189) : tailrecursion.hoplon.span.call(null,G__293188,G__293189));
})();
var G__293169 = " [";
var G__293170 = (function (){var G__293190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293191 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293190,G__293191) : tailrecursion.hoplon.span.call(null,G__293190,G__293191));
})();
var G__293171 = " ";
var G__293172 = (function (){var G__293192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293193 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293192,G__293193) : tailrecursion.hoplon.span.call(null,G__293192,G__293193));
})();
var G__293173 = " ";
var G__293174 = (function (){var G__293194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293195 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293194,G__293195) : tailrecursion.hoplon.span.call(null,G__293194,G__293195));
})();
var G__293175 = "]\n  (";
var G__293176 = (function (){var G__293196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293197 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293196,G__293197) : tailrecursion.hoplon.span.call(null,G__293196,G__293197));
})();
var G__293177 = " (";
var G__293178 = (function (){var G__293198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293199 = "fast-expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293198,G__293199) : tailrecursion.hoplon.span.call(null,G__293198,G__293199));
})();
var G__293179 = " ";
var G__293180 = (function (){var G__293200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293201 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293200,G__293201) : tailrecursion.hoplon.span.call(null,G__293200,G__293201));
})();
var G__293181 = " ";
var G__293182 = (function (){var G__293202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293203 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293202,G__293203) : tailrecursion.hoplon.span.call(null,G__293202,G__293203));
})();
var G__293183 = ") ";
var G__293184 = (function (){var G__293204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293205 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293204,G__293205) : tailrecursion.hoplon.span.call(null,G__293204,G__293205));
})();
var G__293185 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21(G__293165,G__293166,G__293167,G__293168,G__293169,G__293170,G__293171,G__293172,G__293173,G__293174,G__293175,G__293176,G__293177,G__293178,G__293179,G__293180,G__293181,G__293182,G__293183,G__293184,G__293185) : tailrecursion.hoplon.pre.call(null,G__293165,G__293166,G__293167,G__293168,G__293169,G__293170,G__293171,G__293172,G__293173,G__293174,G__293175,G__293176,G__293177,G__293178,G__293179,G__293180,G__293181,G__293182,G__293183,G__293184,G__293185));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__293163,G__293164) : tailrecursion.hoplon.div.call(null,G__293163,G__293164));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__293162) : tailrecursion.hoplon.div.call(null,G__293162));
})(),(function (){var G__293206 = cljs.core.PersistentArrayMap.EMPTY;
var G__293207 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Is she correct? Would this procedure serve as well for our fast prime tester? Explain."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293206,G__293207) : tailrecursion.hoplon.markdown.para_node.call(null,G__293206,G__293207));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293114;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293113;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293112;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293111;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_293208 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293209 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_293210 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293211 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__293212 = cljs.core.PersistentArrayMap.EMPTY;
var G__293213 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Multiplying larger numbers takes longer than the time you save by only computing ",(function (){var G__293214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__293215 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293214,G__293215) : tailrecursion.hoplon.markdown.code_node.call(null,G__293214,G__293215));
})()," once. So if the numbers you",(function (){var G__293216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__293217 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__293216,G__293217) : tailrecursion.hoplon.markdown.simple_node.call(null,G__293216,G__293217));
})(),"re dealing with are sufficiently small, she",(function (){var G__293218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__293219 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__293218,G__293219) : tailrecursion.hoplon.markdown.simple_node.call(null,G__293218,G__293219));
})(),"s correct. But if we",(function (){var G__293220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__293221 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__293220,G__293221) : tailrecursion.hoplon.markdown.simple_node.call(null,G__293220,G__293221));
})(),"re trying to use this for our primality test, raising 10,000,000 to the 100,000,000,000,000 would be far more computationally expensive than modding out each time."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293212,G__293213) : tailrecursion.hoplon.markdown.para_node.call(null,G__293212,G__293213));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293211;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293210;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293209;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293208;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(26)], null),(function (){var _STAR_references_STAR_293222 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293223 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_293224 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293225 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__293226 = cljs.core.PersistentArrayMap.EMPTY;
var G__293227 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Louis Reasoner is having great difficulty doing ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/24/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.24"], null)], 0)),". His ",(function (){var G__293228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-prime?"], null);
var G__293229 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293228,G__293229) : tailrecursion.hoplon.markdown.code_node.call(null,G__293228,G__293229));
})()," test seems to run more slowly than his ",(function (){var G__293230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"prime?"], null);
var G__293231 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293230,G__293231) : tailrecursion.hoplon.markdown.code_node.call(null,G__293230,G__293231));
})()," test. Louis calls his friend Eva Lu Ator over to help. When they examine Louis",(function (){var G__293232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__293233 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__293232,G__293233) : tailrecursion.hoplon.markdown.simple_node.call(null,G__293232,G__293233));
})(),"s code, they find that he has rewritten the ",(function (){var G__293234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"expmod"], null);
var G__293235 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293234,G__293235) : tailrecursion.hoplon.markdown.code_node.call(null,G__293234,G__293235));
})()," procedure to use an explicit multiplication, rather than calling ",(function (){var G__293236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"square"], null);
var G__293237 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293236,G__293237) : tailrecursion.hoplon.markdown.code_node.call(null,G__293236,G__293237));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293226,G__293227) : tailrecursion.hoplon.markdown.para_node.call(null,G__293226,G__293227));
})(),(function (){var G__293388 = (function (){var G__293389 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__293390 = (function (){var G__293391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__293392 = "(";
var G__293393 = (function (){var G__293463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__293464 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293463,G__293464) : tailrecursion.hoplon.span.call(null,G__293463,G__293464));
})();
var G__293394 = (function (){var G__293465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293466 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293465,G__293466) : tailrecursion.hoplon.span.call(null,G__293465,G__293466));
})();
var G__293395 = " [";
var G__293396 = (function (){var G__293467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293468 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293467,G__293468) : tailrecursion.hoplon.span.call(null,G__293467,G__293468));
})();
var G__293397 = " ";
var G__293398 = (function (){var G__293469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293470 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293469,G__293470) : tailrecursion.hoplon.span.call(null,G__293469,G__293470));
})();
var G__293399 = " ";
var G__293400 = (function (){var G__293471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293472 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293471,G__293472) : tailrecursion.hoplon.span.call(null,G__293471,G__293472));
})();
var G__293401 = "]\n  (";
var G__293402 = (function (){var G__293473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293474 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293473,G__293474) : tailrecursion.hoplon.span.call(null,G__293473,G__293474));
})();
var G__293403 = "(";
var G__293404 = (function (){var G__293475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293476 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293475,G__293476) : tailrecursion.hoplon.span.call(null,G__293475,G__293476));
})();
var G__293405 = (function (){var G__293477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293478 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293477,G__293478) : tailrecursion.hoplon.span.call(null,G__293477,G__293478));
})();
var G__293406 = " ";
var G__293407 = (function (){var G__293479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293480 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293479,G__293480) : tailrecursion.hoplon.span.call(null,G__293479,G__293480));
})();
var G__293408 = ") ";
var G__293409 = (function (){var G__293481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293482 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293481,G__293482) : tailrecursion.hoplon.span.call(null,G__293481,G__293482));
})();
var G__293410 = "\n        (";
var G__293411 = (function (){var G__293483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293484 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293483,G__293484) : tailrecursion.hoplon.span.call(null,G__293483,G__293484));
})();
var G__293412 = " ";
var G__293413 = (function (){var G__293485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293486 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293485,G__293486) : tailrecursion.hoplon.span.call(null,G__293485,G__293486));
})();
var G__293414 = ") (";
var G__293415 = (function (){var G__293487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293488 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293487,G__293488) : tailrecursion.hoplon.span.call(null,G__293487,G__293488));
})();
var G__293416 = " (";
var G__293417 = (function (){var G__293489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293490 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293489,G__293490) : tailrecursion.hoplon.span.call(null,G__293489,G__293490));
})();
var G__293418 = "(";
var G__293419 = (function (){var G__293491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293492 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293491,G__293492) : tailrecursion.hoplon.span.call(null,G__293491,G__293492));
})();
var G__293420 = " ";
var G__293421 = (function (){var G__293493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293494 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293493,G__293494) : tailrecursion.hoplon.span.call(null,G__293493,G__293494));
})();
var G__293422 = " (";
var G__293423 = (function (){var G__293495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293496 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293495,G__293496) : tailrecursion.hoplon.span.call(null,G__293495,G__293496));
})();
var G__293424 = (function (){var G__293497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293498 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293497,G__293498) : tailrecursion.hoplon.span.call(null,G__293497,G__293498));
})();
var G__293425 = " ";
var G__293426 = (function (){var G__293499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293500 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293499,G__293500) : tailrecursion.hoplon.span.call(null,G__293499,G__293500));
})();
var G__293427 = ") ";
var G__293428 = (function (){var G__293501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293502 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293501,G__293502) : tailrecursion.hoplon.span.call(null,G__293501,G__293502));
})();
var G__293429 = ")\n                            (";
var G__293430 = (function (){var G__293503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293504 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293503,G__293504) : tailrecursion.hoplon.span.call(null,G__293503,G__293504));
})();
var G__293431 = " ";
var G__293432 = (function (){var G__293505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293506 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293505,G__293506) : tailrecursion.hoplon.span.call(null,G__293505,G__293506));
})();
var G__293433 = " (";
var G__293434 = (function (){var G__293507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293508 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293507,G__293508) : tailrecursion.hoplon.span.call(null,G__293507,G__293508));
})();
var G__293435 = (function (){var G__293509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293510 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293509,G__293510) : tailrecursion.hoplon.span.call(null,G__293509,G__293510));
})();
var G__293436 = " ";
var G__293437 = (function (){var G__293511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293512 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293511,G__293512) : tailrecursion.hoplon.span.call(null,G__293511,G__293512));
})();
var G__293438 = ") ";
var G__293439 = (function (){var G__293513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293514 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293513,G__293514) : tailrecursion.hoplon.span.call(null,G__293513,G__293514));
})();
var G__293440 = "))\n                         ";
var G__293441 = (function (){var G__293515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293516 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293515,G__293516) : tailrecursion.hoplon.span.call(null,G__293515,G__293516));
})();
var G__293442 = ")\n        ";
var G__293443 = (function (){var G__293517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293518 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293517,G__293518) : tailrecursion.hoplon.span.call(null,G__293517,G__293518));
})();
var G__293444 = " (";
var G__293445 = (function (){var G__293519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293520 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293519,G__293520) : tailrecursion.hoplon.span.call(null,G__293519,G__293520));
})();
var G__293446 = " (";
var G__293447 = (function (){var G__293521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293522 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293521,G__293522) : tailrecursion.hoplon.span.call(null,G__293521,G__293522));
})();
var G__293448 = (function (){var G__293523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293524 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293523,G__293524) : tailrecursion.hoplon.span.call(null,G__293523,G__293524));
})();
var G__293449 = " (";
var G__293450 = (function (){var G__293525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293526 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293525,G__293526) : tailrecursion.hoplon.span.call(null,G__293525,G__293526));
})();
var G__293451 = " ";
var G__293452 = (function (){var G__293527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293528 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293527,G__293528) : tailrecursion.hoplon.span.call(null,G__293527,G__293528));
})();
var G__293453 = " (";
var G__293454 = (function (){var G__293529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293530 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293529,G__293530) : tailrecursion.hoplon.span.call(null,G__293529,G__293530));
})();
var G__293455 = (function (){var G__293531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293532 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293531,G__293532) : tailrecursion.hoplon.span.call(null,G__293531,G__293532));
})();
var G__293456 = " ";
var G__293457 = (function (){var G__293533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293534 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293533,G__293534) : tailrecursion.hoplon.span.call(null,G__293533,G__293534));
})();
var G__293458 = ") ";
var G__293459 = (function (){var G__293535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293536 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293535,G__293536) : tailrecursion.hoplon.span.call(null,G__293535,G__293536));
})();
var G__293460 = ")) ";
var G__293461 = (function (){var G__293537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293538 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293537,G__293538) : tailrecursion.hoplon.span.call(null,G__293537,G__293538));
})();
var G__293462 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$72 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$72(G__293391,G__293392,G__293393,G__293394,G__293395,G__293396,G__293397,G__293398,G__293399,G__293400,G__293401,G__293402,G__293403,G__293404,G__293405,G__293406,G__293407,G__293408,G__293409,G__293410,G__293411,G__293412,G__293413,G__293414,G__293415,G__293416,G__293417,G__293418,G__293419,G__293420,G__293421,G__293422,G__293423,G__293424,G__293425,G__293426,G__293427,G__293428,G__293429,G__293430,G__293431,G__293432,G__293433,G__293434,G__293435,G__293436,G__293437,G__293438,G__293439,G__293440,G__293441,G__293442,G__293443,G__293444,G__293445,G__293446,G__293447,G__293448,G__293449,G__293450,G__293451,G__293452,G__293453,G__293454,G__293455,G__293456,G__293457,G__293458,G__293459,G__293460,G__293461,G__293462) : tailrecursion.hoplon.pre.call(null,G__293391,G__293392,G__293393,G__293394,G__293395,G__293396,G__293397,G__293398,G__293399,G__293400,G__293401,G__293402,G__293403,G__293404,G__293405,G__293406,G__293407,G__293408,G__293409,G__293410,G__293411,G__293412,G__293413,G__293414,G__293415,G__293416,G__293417,G__293418,G__293419,G__293420,G__293421,G__293422,G__293423,G__293424,G__293425,G__293426,G__293427,G__293428,G__293429,G__293430,G__293431,G__293432,G__293433,G__293434,G__293435,G__293436,G__293437,G__293438,G__293439,G__293440,G__293441,G__293442,G__293443,G__293444,G__293445,G__293446,G__293447,G__293448,G__293449,G__293450,G__293451,G__293452,G__293453,G__293454,G__293455,G__293456,G__293457,G__293458,G__293459,G__293460,G__293461,G__293462));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__293389,G__293390) : tailrecursion.hoplon.div.call(null,G__293389,G__293390));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__293388) : tailrecursion.hoplon.div.call(null,G__293388));
})(),(function (){var G__293539 = cljs.core.PersistentArrayMap.EMPTY;
var G__293540 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__293541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__293542 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I don",(function (){var G__293543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__293544 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__293543,G__293544) : tailrecursion.hoplon.markdown.simple_node.call(null,G__293543,G__293544));
})(),"t see what difference that could make,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__293541,G__293542) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__293541,G__293542));
})()," says Louis. ",(function (){var G__293545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__293546 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I do."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__293545,G__293546) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__293545,G__293546));
})()," says Eva. ",(function (){var G__293547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__293548 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["By writing the procedure like that, you have transformed the \\(\\Theta(\\log n)\\) process into a \\(\\Theta(n)\\) process."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__293547,G__293548) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__293547,G__293548));
})()," Explain."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293539,G__293540) : tailrecursion.hoplon.markdown.para_node.call(null,G__293539,G__293540));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293225;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293224;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293223;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293222;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_293549 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293550 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_293551 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293552 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__293553 = cljs.core.PersistentArrayMap.EMPTY;
var G__293554 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Remember the applicative order evaluation model. Every time the exponent is even, ",(function (){var G__293555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(expmod base (/ exp 2) m)"], null);
var G__293556 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293555,G__293556) : tailrecursion.hoplon.markdown.code_node.call(null,G__293555,G__293556));
})()," is computed twice, causing two branches of the same computation to occur."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293553,G__293554) : tailrecursion.hoplon.markdown.para_node.call(null,G__293553,G__293554));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293552;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293551;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293550;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293549;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(27)], null),(function (){var _STAR_references_STAR_293557 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293558 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_293559 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293560 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__293561 = cljs.core.PersistentArrayMap.EMPTY;
var G__293562 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Demonstrate that these Carmichael numbers: 561, 1105, 1729, 2465, 2821, 6601, really do fool the Fermat test. That is, write a procedure that takes an integer \\(n\\) and tests whether an is congruent to \\(a\\) modulo \\(n\\) for every \\(a<n\\), and try your procedure on the given Carmichael numbers."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293561,G__293562) : tailrecursion.hoplon.markdown.para_node.call(null,G__293561,G__293562));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293560;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293559;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293558;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293557;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_293563 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293564 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_293565 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293566 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__293656 = (function (){var G__293657 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__293658 = (function (){var G__293659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__293660 = "(";
var G__293661 = (function (){var G__293702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__293703 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293702,G__293703) : tailrecursion.hoplon.span.call(null,G__293702,G__293703));
})();
var G__293662 = (function (){var G__293704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293705 = "carmichael-check";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293704,G__293705) : tailrecursion.hoplon.span.call(null,G__293704,G__293705));
})();
var G__293663 = " [";
var G__293664 = (function (){var G__293706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293707 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293706,G__293707) : tailrecursion.hoplon.span.call(null,G__293706,G__293707));
})();
var G__293665 = "]\n  (";
var G__293666 = (function (){var G__293708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__293709 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293708,G__293709) : tailrecursion.hoplon.span.call(null,G__293708,G__293709));
})();
var G__293667 = "[";
var G__293668 = (function (){var G__293710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293711 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293710,G__293711) : tailrecursion.hoplon.span.call(null,G__293710,G__293711));
})();
var G__293669 = " ";
var G__293670 = (function (){var G__293712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293713 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293712,G__293713) : tailrecursion.hoplon.span.call(null,G__293712,G__293713));
})();
var G__293671 = "]\n    (";
var G__293672 = (function (){var G__293714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293715 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293714,G__293715) : tailrecursion.hoplon.span.call(null,G__293714,G__293715));
})();
var G__293673 = "(";
var G__293674 = (function (){var G__293716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293717 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293716,G__293717) : tailrecursion.hoplon.span.call(null,G__293716,G__293717));
})();
var G__293675 = (function (){var G__293718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293719 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293718,G__293719) : tailrecursion.hoplon.span.call(null,G__293718,G__293719));
})();
var G__293676 = " ";
var G__293677 = (function (){var G__293720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293721 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293720,G__293721) : tailrecursion.hoplon.span.call(null,G__293720,G__293721));
})();
var G__293678 = ") ";
var G__293679 = (function (){var G__293722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293723 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293722,G__293723) : tailrecursion.hoplon.span.call(null,G__293722,G__293723));
})();
var G__293680 = "\n          (";
var G__293681 = (function (){var G__293724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293725 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293724,G__293725) : tailrecursion.hoplon.span.call(null,G__293724,G__293725));
})();
var G__293682 = "(";
var G__293683 = (function (){var G__293726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293727 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293726,G__293727) : tailrecursion.hoplon.span.call(null,G__293726,G__293727));
})();
var G__293684 = " ";
var G__293685 = (function (){var G__293728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293729 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293728,G__293729) : tailrecursion.hoplon.span.call(null,G__293728,G__293729));
})();
var G__293686 = " ";
var G__293687 = (function (){var G__293730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293731 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293730,G__293731) : tailrecursion.hoplon.span.call(null,G__293730,G__293731));
})();
var G__293688 = " ";
var G__293689 = (function (){var G__293732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293733 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293732,G__293733) : tailrecursion.hoplon.span.call(null,G__293732,G__293733));
})();
var G__293690 = ") ";
var G__293691 = (function (){var G__293734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293735 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293734,G__293735) : tailrecursion.hoplon.span.call(null,G__293734,G__293735));
})();
var G__293692 = ") (";
var G__293693 = (function (){var G__293736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293737 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293736,G__293737) : tailrecursion.hoplon.span.call(null,G__293736,G__293737));
})();
var G__293694 = " (";
var G__293695 = (function (){var G__293738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293739 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293738,G__293739) : tailrecursion.hoplon.span.call(null,G__293738,G__293739));
})();
var G__293696 = (function (){var G__293740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293741 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293740,G__293741) : tailrecursion.hoplon.span.call(null,G__293740,G__293741));
})();
var G__293697 = "))\n          ";
var G__293698 = (function (){var G__293742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293743 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293742,G__293743) : tailrecursion.hoplon.span.call(null,G__293742,G__293743));
})();
var G__293699 = " ";
var G__293700 = (function (){var G__293744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293745 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293744,G__293745) : tailrecursion.hoplon.span.call(null,G__293744,G__293745));
})();
var G__293701 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43(G__293659,G__293660,G__293661,G__293662,G__293663,G__293664,G__293665,G__293666,G__293667,G__293668,G__293669,G__293670,G__293671,G__293672,G__293673,G__293674,G__293675,G__293676,G__293677,G__293678,G__293679,G__293680,G__293681,G__293682,G__293683,G__293684,G__293685,G__293686,G__293687,G__293688,G__293689,G__293690,G__293691,G__293692,G__293693,G__293694,G__293695,G__293696,G__293697,G__293698,G__293699,G__293700,G__293701) : tailrecursion.hoplon.pre.call(null,G__293659,G__293660,G__293661,G__293662,G__293663,G__293664,G__293665,G__293666,G__293667,G__293668,G__293669,G__293670,G__293671,G__293672,G__293673,G__293674,G__293675,G__293676,G__293677,G__293678,G__293679,G__293680,G__293681,G__293682,G__293683,G__293684,G__293685,G__293686,G__293687,G__293688,G__293689,G__293690,G__293691,G__293692,G__293693,G__293694,G__293695,G__293696,G__293697,G__293698,G__293699,G__293700,G__293701));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__293657,G__293658) : tailrecursion.hoplon.div.call(null,G__293657,G__293658));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__293656) : tailrecursion.hoplon.div.call(null,G__293656));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293566;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293565;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293564;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293563;
}})()], 0))], 0)),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(28)], null),(function (){var _STAR_references_STAR_293746 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293747 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_293748 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293749 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__293750 = cljs.core.PersistentArrayMap.EMPTY;
var G__293751 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One variant of the Fermat test that cannot be fooled is called the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Miller-Rabin"], null)], 0))," test (Miller 1976; Rabin 1980). This starts from an alternate form of Fermat",(function (){var G__293752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__293753 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__293752,G__293753) : tailrecursion.hoplon.markdown.simple_node.call(null,G__293752,G__293753));
})(),"s Little Theorem, which states that if \\(n\\) is a prime number and \\(a\\) is any positive integer less than \\(n\\), then \\(a^{n-1}\\equiv 1\\pmod n\\). To test the primality of a number \\(n\\) by the Miller-Rabin test, we pick a random number \\(a<n\\) and raise \\(a\\) to the \\((n - 1)\\)st power modulo \\(n\\) using the ",(function (){var G__293754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"expmod"], null);
var G__293755 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293754,G__293755) : tailrecursion.hoplon.markdown.code_node.call(null,G__293754,G__293755));
})()," procedure. However, whenever we perform the squaring step in ",(function (){var G__293756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"expmod"], null);
var G__293757 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293756,G__293757) : tailrecursion.hoplon.markdown.code_node.call(null,G__293756,G__293757));
})(),", we check to see if we have discovered a ",(function (){var G__293758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__293759 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["nontrivial square root of 1 modulo \\(n\\),"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__293758,G__293759) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__293758,G__293759));
})()," that is, a number not equal to 1 or \\(n - 1\\) whose square is equal to 1 modulo \\(n\\). It is possible to prove that if such a nontrivial square root of 1 exists, then \\(n\\) is not prime. It is also possible to prove that if \\(n\\) is an odd number that is not prime, then, for at least half the numbers \\(a<n\\), computing \\(a^{n-1}\\) in this way will reveal a nontrivial square root of 1 modulo \\(n\\). (This is why the Miller-Rabin test cannot be fooled.) Modify the ",(function (){var G__293760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"expmod"], null);
var G__293761 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293760,G__293761) : tailrecursion.hoplon.markdown.code_node.call(null,G__293760,G__293761));
})()," procedure to signal if it discovers a nontrivial square root of 1, and use this to implement the Miller-Rabin test with a procedure analogous to ",(function (){var G__293762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fermat-test"], null);
var G__293763 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293762,G__293763) : tailrecursion.hoplon.markdown.code_node.call(null,G__293762,G__293763));
})(),". Check your procedure by testing various known primes and non-primes. Hint: One convenient way to make ",(function (){var G__293764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"expmod"], null);
var G__293765 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__293764,G__293765) : tailrecursion.hoplon.markdown.code_node.call(null,G__293764,G__293765));
})()," signal is to have it return 0."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__293750,G__293751) : tailrecursion.hoplon.markdown.para_node.call(null,G__293750,G__293751));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293749;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293748;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293747;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293746;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_293766 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293767 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_293768 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_293769 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__293866 = (function (){var G__293867 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__293868 = (function (){var G__293869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__293870 = "(";
var G__293871 = (function (){var G__293915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__293916 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293915,G__293916) : tailrecursion.hoplon.span.call(null,G__293915,G__293916));
})();
var G__293872 = (function (){var G__293917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293918 = "miller-rabin-prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293917,G__293918) : tailrecursion.hoplon.span.call(null,G__293917,G__293918));
})();
var G__293873 = " [";
var G__293874 = (function (){var G__293919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293920 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293919,G__293920) : tailrecursion.hoplon.span.call(null,G__293919,G__293920));
})();
var G__293875 = "]\n  (";
var G__293876 = (function (){var G__293921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__293922 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293921,G__293922) : tailrecursion.hoplon.span.call(null,G__293921,G__293922));
})();
var G__293877 = "[";
var G__293878 = (function (){var G__293923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293924 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293923,G__293924) : tailrecursion.hoplon.span.call(null,G__293923,G__293924));
})();
var G__293879 = " ";
var G__293880 = (function (){var G__293925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293926 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293925,G__293926) : tailrecursion.hoplon.span.call(null,G__293925,G__293926));
})();
var G__293881 = "]\n    (";
var G__293882 = (function (){var G__293927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293928 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293927,G__293928) : tailrecursion.hoplon.span.call(null,G__293927,G__293928));
})();
var G__293883 = "(";
var G__293884 = (function (){var G__293929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293930 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293929,G__293930) : tailrecursion.hoplon.span.call(null,G__293929,G__293930));
})();
var G__293885 = (function (){var G__293931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293932 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293931,G__293932) : tailrecursion.hoplon.span.call(null,G__293931,G__293932));
})();
var G__293886 = " (";
var G__293887 = (function (){var G__293933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293934 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293933,G__293934) : tailrecursion.hoplon.span.call(null,G__293933,G__293934));
})();
var G__293888 = (function (){var G__293935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293936 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293935,G__293936) : tailrecursion.hoplon.span.call(null,G__293935,G__293936));
})();
var G__293889 = " ";
var G__293890 = (function (){var G__293937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293938 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293937,G__293938) : tailrecursion.hoplon.span.call(null,G__293937,G__293938));
})();
var G__293891 = "))            ";
var G__293892 = (function (){var G__293939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293940 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293939,G__293940) : tailrecursion.hoplon.span.call(null,G__293939,G__293940));
})();
var G__293893 = "\n          (";
var G__293894 = (function (){var G__293941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293942 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293941,G__293942) : tailrecursion.hoplon.span.call(null,G__293941,G__293942));
})();
var G__293895 = "(";
var G__293896 = (function (){var G__293943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293944 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293943,G__293944) : tailrecursion.hoplon.span.call(null,G__293943,G__293944));
})();
var G__293897 = " (";
var G__293898 = (function (){var G__293945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293946 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293945,G__293946) : tailrecursion.hoplon.span.call(null,G__293945,G__293946));
})();
var G__293899 = " ";
var G__293900 = (function (){var G__293947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293948 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293947,G__293948) : tailrecursion.hoplon.span.call(null,G__293947,G__293948));
})();
var G__293901 = ") ";
var G__293902 = (function (){var G__293949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293950 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293949,G__293950) : tailrecursion.hoplon.span.call(null,G__293949,G__293950));
})();
var G__293903 = ") ";
var G__293904 = (function (){var G__293951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__293952 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293951,G__293952) : tailrecursion.hoplon.span.call(null,G__293951,G__293952));
})();
var G__293905 = ") ";
var G__293906 = (function (){var G__293953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293954 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293953,G__293954) : tailrecursion.hoplon.span.call(null,G__293953,G__293954));
})();
var G__293907 = "\n          ";
var G__293908 = (function (){var G__293955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293956 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293955,G__293956) : tailrecursion.hoplon.span.call(null,G__293955,G__293956));
})();
var G__293909 = "                    (";
var G__293910 = (function (){var G__293957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__293958 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293957,G__293958) : tailrecursion.hoplon.span.call(null,G__293957,G__293958));
})();
var G__293911 = " (";
var G__293912 = (function (){var G__293959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__293960 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293959,G__293960) : tailrecursion.hoplon.span.call(null,G__293959,G__293960));
})();
var G__293913 = (function (){var G__293961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__293962 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__293961,G__293962) : tailrecursion.hoplon.span.call(null,G__293961,G__293962));
})();
var G__293914 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__293869,G__293870,G__293871,G__293872,G__293873,G__293874,G__293875,G__293876,G__293877,G__293878,G__293879,G__293880,G__293881,G__293882,G__293883,G__293884,G__293885,G__293886,G__293887,G__293888,G__293889,G__293890,G__293891,G__293892,G__293893,G__293894,G__293895,G__293896,G__293897,G__293898,G__293899,G__293900,G__293901,G__293902,G__293903,G__293904,G__293905,G__293906,G__293907,G__293908,G__293909,G__293910,G__293911,G__293912,G__293913,G__293914) : tailrecursion.hoplon.pre.call(null,G__293869,G__293870,G__293871,G__293872,G__293873,G__293874,G__293875,G__293876,G__293877,G__293878,G__293879,G__293880,G__293881,G__293882,G__293883,G__293884,G__293885,G__293886,G__293887,G__293888,G__293889,G__293890,G__293891,G__293892,G__293893,G__293894,G__293895,G__293896,G__293897,G__293898,G__293899,G__293900,G__293901,G__293902,G__293903,G__293904,G__293905,G__293906,G__293907,G__293908,G__293909,G__293910,G__293911,G__293912,G__293913,G__293914));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__293867,G__293868) : tailrecursion.hoplon.div.call(null,G__293867,G__293868));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__293866) : tailrecursion.hoplon.div.call(null,G__293866));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293769;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293768;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_293767;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_293766;
}})()], 0))], 0))], 0));
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$31(G__279983,G__279984,G__279985,G__279986,G__279987,G__279988,G__279989,G__279990,G__279991,G__279992,G__279993,G__279994,G__279995,G__279996,G__279997,G__279998,G__279999,G__280000,G__280001,G__280002,G__280003,G__280004,G__280005,G__280006,G__280007,G__280008,G__280009,G__280010,G__280011,G__280012,G__280013) : tailrecursion.hoplon.div.call(null,G__279983,G__279984,G__279985,G__279986,G__279987,G__279988,G__279989,G__279990,G__279991,G__279992,G__279993,G__279994,G__279995,G__279996,G__279997,G__279998,G__279999,G__280000,G__280001,G__280002,G__280003,G__280004,G__280005,G__280006,G__280007,G__280008,G__280009,G__280010,G__280011,G__280012,G__280013));
};
var book$sicp$texts$ch1sect2$content = function (var_args){
var args__8262__auto__ = null;
if (arguments.length > 0) {
var G__293963__i = 0, G__293963__a = new Array(arguments.length -  0);
while (G__293963__i < G__293963__a.length) {G__293963__a[G__293963__i] = arguments[G__293963__i + 0]; ++G__293963__i;}
  args__8262__auto__ = new cljs.core.IndexedSeq(G__293963__a,0);
} 
return book$sicp$texts$ch1sect2$content__delegate.call(this,args__8262__auto__);};
book$sicp$texts$ch1sect2$content.cljs$lang$maxFixedArity = 0;
book$sicp$texts$ch1sect2$content.cljs$lang$applyTo = (function (arglist__293964){
var args__8262__auto__ = cljs.core.seq(arglist__293964);
return book$sicp$texts$ch1sect2$content__delegate(args__8262__auto__);
});
book$sicp$texts$ch1sect2$content.cljs$core$IFn$_invoke$arity$variadic = book$sicp$texts$ch1sect2$content__delegate;
return book$sicp$texts$ch1sect2$content;
})()
;

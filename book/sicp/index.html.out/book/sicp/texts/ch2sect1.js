// Compiled by ClojureScript 1.7.48 {:static-fns true, :optimize-constants true}
goog.provide('book.sicp.texts.ch2sect1');
goog.require('cljs.core');
goog.require('tailrecursion.hoplon.markdown');
goog.require('book.sicp.book_data');
goog.require('tailrecursion.hoplon');
goog.require('tailrecursion.javelin');
/**
 * @param {...*} var_args
 */
book.sicp.texts.ch2sect1.content = (function() { 
var book$sicp$texts$ch2sect1$content__delegate = function (args__8262__auto__){
var vec__191103 = tailrecursion.hoplon.parse_args(args__8262__auto__);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__191103,(0),null);
var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__191103,(1),null);
var G__191104 = cljs.core.PersistentArrayMap.EMPTY;
var G__191105 = book.sicp.book_data.sect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Introduction to Data Abstraction"], null),(function (){var _STAR_references_STAR_191126 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_191127 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_191128 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_191129 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__191130 = cljs.core.PersistentArrayMap.EMPTY;
var G__191131 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/1/sub/8/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.1.8"], null)], 0)),", we noted that a procedure used as an element in creating a more complex procedure could be regarded not only as a collection of particular operations but also as a procedural abstraction. That is, the details of how the procedure was implemented could be suppressed, and the particular procedure itself could be replaced by any other procedure with the same overall behavior. In other words, we could make an abstraction that would separate the way the procedure would be used from the details of how the procedure would be implemented in terms of more primitive procedures. The analogous notion for compound data is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data abstraction"], null)], 0)),". Data abstraction is a methodology that enables us to isolate how a compound data object is used from the details of how it is constructed from more primitive data objects."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__191130,G__191131) : tailrecursion.hoplon.markdown.para_node.call(null,G__191130,G__191131));
})(),(function (){var G__191132 = cljs.core.PersistentArrayMap.EMPTY;
var G__191133 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The basic idea of data abstraction is to structure the programs that are to use compound data objects so that they operate on ",(function (){var G__191134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__191135 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstract data."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__191134,G__191135) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__191134,G__191135));
})()," That is, our programs should use data in such a way as to make no assumptions about the data that are not strictly necessary for performing the task at hand. At the same time, a ",(function (){var G__191136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__191137 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["concrete"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__191136,G__191137) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__191136,G__191137));
})()," data representation is defined independent of the programs that use the data. The interface between these two parts of our system will be a set of procedures, called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selectors"], null)], 0))," and ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["constructors"], null)], 0)),", that implement the abstract data in terms of the concrete representation. To illustrate this technique, we will consider how to design a set of procedures for manipulating rational numbers."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__191132,G__191133) : tailrecursion.hoplon.markdown.para_node.call(null,G__191132,G__191133));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_191129;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_191128;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_191127;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_191126;
}})()], 0));
var G__191106 = "";
var G__191107 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Example: Arithmetic Operations for Rational Numbers"], null),(function (){var _STAR_references_STAR_191138 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_191139 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_191140 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_191141 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__191142 = cljs.core.PersistentArrayMap.EMPTY;
var G__191143 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Suppose we want to do arithmetic with rational numbers. We want to be able to add, subtract, multiply, and divide them and to test whether two rational numbers are equal."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__191142,G__191143) : tailrecursion.hoplon.markdown.para_node.call(null,G__191142,G__191143));
})(),(function (){var G__191144 = cljs.core.PersistentArrayMap.EMPTY;
var G__191145 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let us begin by assuming that we already have a way of constructing a rational number from a numerator and a denominator. We also assume that, given a rational number, we have a way of extracting (or selecting) its numerator and its denominator. Let us further assume that the constructor and selectors are available as procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__191144,G__191145) : tailrecursion.hoplon.markdown.para_node.call(null,G__191144,G__191145));
})(),(function (){var G__191146 = cljs.core.PersistentArrayMap.EMPTY;
var G__191147 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__191148 = cljs.core.PersistentArrayMap.EMPTY;
var G__191149 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_191150 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_191151 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__191152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(make-rat <n> <d>)"], null);
var G__191153 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191152,G__191153) : tailrecursion.hoplon.markdown.code_node.call(null,G__191152,G__191153));
})()," returns the rational number whose numerator is the integer ",(function (){var G__191154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<n>"], null);
var G__191155 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191154,G__191155) : tailrecursion.hoplon.markdown.code_node.call(null,G__191154,G__191155));
})()," and whose denominator is the integer ",(function (){var G__191156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<d>"], null);
var G__191157 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191156,G__191157) : tailrecursion.hoplon.markdown.code_node.call(null,G__191156,G__191157));
})(),". - ",(function (){var G__191158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(numer <x>)"], null);
var G__191159 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191158,G__191159) : tailrecursion.hoplon.markdown.code_node.call(null,G__191158,G__191159));
})()," returns the numerator of the rational number ",(function (){var G__191160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<x>"], null);
var G__191161 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191160,G__191161) : tailrecursion.hoplon.markdown.code_node.call(null,G__191160,G__191161));
})(),"."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_191151;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_191150;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__191148,G__191149) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__191148,G__191149));
})(),(function (){var G__191162 = cljs.core.PersistentArrayMap.EMPTY;
var G__191163 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_191164 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_191165 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__191166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(denom <x>)"], null);
var G__191167 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191166,G__191167) : tailrecursion.hoplon.markdown.code_node.call(null,G__191166,G__191167));
})()," returns the denominator of the rational number ",(function (){var G__191168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<x>"], null);
var G__191169 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191168,G__191169) : tailrecursion.hoplon.markdown.code_node.call(null,G__191168,G__191169));
})(),"."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_191165;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_191164;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__191162,G__191163) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__191162,G__191163));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__191146,G__191147) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__191146,G__191147));
})(),(function (){var G__191170 = cljs.core.PersistentArrayMap.EMPTY;
var G__191171 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We are using here a powerful strategy of synthesis: ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["wishful thinking"], null)], 0)),". We haven",(function (){var G__191172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__191173 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__191172,G__191173) : tailrecursion.hoplon.markdown.simple_node.call(null,G__191172,G__191173));
})(),"t yet said how a rational number is represented, or how the procedures ",(function (){var G__191174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__191175 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191174,G__191175) : tailrecursion.hoplon.markdown.code_node.call(null,G__191174,G__191175));
})(),", ",(function (){var G__191176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__191177 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191176,G__191177) : tailrecursion.hoplon.markdown.code_node.call(null,G__191176,G__191177));
})(),", and ",(function (){var G__191178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__191179 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191178,G__191179) : tailrecursion.hoplon.markdown.code_node.call(null,G__191178,G__191179));
})()," should be implemented. Even so, if we did have these three procedures, we could then add, subtract, multiply, divide, and test equality by using the following relations:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__191170,G__191171) : tailrecursion.hoplon.markdown.para_node.call(null,G__191170,G__191171));
})(),(function (){var G__191180 = cljs.core.PersistentArrayMap.EMPTY;
var G__191181 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{n_1}{d_1}+\\frac{n_2}{d_2}=&\\frac{n_1d_2+n_2d_1}{d_1d_2} \\\\\\frac{n_1}{d_1}-\\frac{n_2}{d_2}=&\\frac{n_1d_2-n_2d_1}{d_1d_2} \\\\\\frac{n_1}{d_1}\\cdot\\frac{n_2}{d_2}=&\\frac{n_1n_2}{d_1d_2} \\\\\\frac{n_1}{d_1}/\\frac{n_2}{d_2}=&\\frac{n_1d_2}{n_2d_1} \\\\\\frac{n_1}{d_1}=\\frac{n_2}{d_2}\\iff& n_1d_2=n_2d_1\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__191180,G__191181) : tailrecursion.hoplon.markdown.para_node.call(null,G__191180,G__191181));
})(),(function (){var G__191182 = cljs.core.PersistentArrayMap.EMPTY;
var G__191183 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can express these rules as procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__191182,G__191183) : tailrecursion.hoplon.markdown.para_node.call(null,G__191182,G__191183));
})(),(function (){var G__191543 = (function (){var G__191544 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__191545 = (function (){var G__191546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__191547 = "(";
var G__191548 = (function (){var G__191721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__191722 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191721,G__191722) : tailrecursion.hoplon.span.call(null,G__191721,G__191722));
})();
var G__191549 = (function (){var G__191723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191724 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191723,G__191724) : tailrecursion.hoplon.span.call(null,G__191723,G__191724));
})();
var G__191550 = " [";
var G__191551 = (function (){var G__191725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191726 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191725,G__191726) : tailrecursion.hoplon.span.call(null,G__191725,G__191726));
})();
var G__191552 = " ";
var G__191553 = (function (){var G__191727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191728 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191727,G__191728) : tailrecursion.hoplon.span.call(null,G__191727,G__191728));
})();
var G__191554 = "]\n  (";
var G__191555 = (function (){var G__191729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191730 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191729,G__191730) : tailrecursion.hoplon.span.call(null,G__191729,G__191730));
})();
var G__191556 = " (";
var G__191557 = (function (){var G__191731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__191732 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191731,G__191732) : tailrecursion.hoplon.span.call(null,G__191731,G__191732));
})();
var G__191558 = "(";
var G__191559 = (function (){var G__191733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__191734 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191733,G__191734) : tailrecursion.hoplon.span.call(null,G__191733,G__191734));
})();
var G__191560 = "(";
var G__191561 = (function (){var G__191735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191736 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191735,G__191736) : tailrecursion.hoplon.span.call(null,G__191735,G__191736));
})();
var G__191562 = " ";
var G__191563 = (function (){var G__191737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191738 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191737,G__191738) : tailrecursion.hoplon.span.call(null,G__191737,G__191738));
})();
var G__191564 = ") (";
var G__191565 = (function (){var G__191739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__191740 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191739,G__191740) : tailrecursion.hoplon.span.call(null,G__191739,G__191740));
})();
var G__191566 = (function (){var G__191741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191742 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191741,G__191742) : tailrecursion.hoplon.span.call(null,G__191741,G__191742));
})();
var G__191567 = " ";
var G__191568 = (function (){var G__191743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191744 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191743,G__191744) : tailrecursion.hoplon.span.call(null,G__191743,G__191744));
})();
var G__191569 = "))\n               (";
var G__191570 = (function (){var G__191745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__191746 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191745,G__191746) : tailrecursion.hoplon.span.call(null,G__191745,G__191746));
})();
var G__191571 = "(";
var G__191572 = (function (){var G__191747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191748 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191747,G__191748) : tailrecursion.hoplon.span.call(null,G__191747,G__191748));
})();
var G__191573 = " ";
var G__191574 = (function (){var G__191749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191750 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191749,G__191750) : tailrecursion.hoplon.span.call(null,G__191749,G__191750));
})();
var G__191575 = ") (";
var G__191576 = (function (){var G__191751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__191752 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191751,G__191752) : tailrecursion.hoplon.span.call(null,G__191751,G__191752));
})();
var G__191577 = (function (){var G__191753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191754 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191753,G__191754) : tailrecursion.hoplon.span.call(null,G__191753,G__191754));
})();
var G__191578 = " ";
var G__191579 = (function (){var G__191755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191756 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191755,G__191756) : tailrecursion.hoplon.span.call(null,G__191755,G__191756));
})();
var G__191580 = ")))\n            (";
var G__191581 = (function (){var G__191757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__191758 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191757,G__191758) : tailrecursion.hoplon.span.call(null,G__191757,G__191758));
})();
var G__191582 = "(";
var G__191583 = (function (){var G__191759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191760 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191759,G__191760) : tailrecursion.hoplon.span.call(null,G__191759,G__191760));
})();
var G__191584 = " ";
var G__191585 = (function (){var G__191761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191762 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191761,G__191762) : tailrecursion.hoplon.span.call(null,G__191761,G__191762));
})();
var G__191586 = ") (";
var G__191587 = (function (){var G__191763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191764 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191763,G__191764) : tailrecursion.hoplon.span.call(null,G__191763,G__191764));
})();
var G__191588 = " ";
var G__191589 = (function (){var G__191765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191766 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191765,G__191766) : tailrecursion.hoplon.span.call(null,G__191765,G__191766));
})();
var G__191590 = "))))\n(";
var G__191591 = (function (){var G__191767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__191768 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191767,G__191768) : tailrecursion.hoplon.span.call(null,G__191767,G__191768));
})();
var G__191592 = (function (){var G__191769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191770 = "sub-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191769,G__191770) : tailrecursion.hoplon.span.call(null,G__191769,G__191770));
})();
var G__191593 = " [";
var G__191594 = (function (){var G__191771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191772 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191771,G__191772) : tailrecursion.hoplon.span.call(null,G__191771,G__191772));
})();
var G__191595 = " ";
var G__191596 = (function (){var G__191773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191774 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191773,G__191774) : tailrecursion.hoplon.span.call(null,G__191773,G__191774));
})();
var G__191597 = "]\n  (";
var G__191598 = (function (){var G__191775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191776 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191775,G__191776) : tailrecursion.hoplon.span.call(null,G__191775,G__191776));
})();
var G__191599 = " (";
var G__191600 = (function (){var G__191777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__191778 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191777,G__191778) : tailrecursion.hoplon.span.call(null,G__191777,G__191778));
})();
var G__191601 = "(";
var G__191602 = (function (){var G__191779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__191780 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191779,G__191780) : tailrecursion.hoplon.span.call(null,G__191779,G__191780));
})();
var G__191603 = "(";
var G__191604 = (function (){var G__191781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191782 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191781,G__191782) : tailrecursion.hoplon.span.call(null,G__191781,G__191782));
})();
var G__191605 = " ";
var G__191606 = (function (){var G__191783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191784 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191783,G__191784) : tailrecursion.hoplon.span.call(null,G__191783,G__191784));
})();
var G__191607 = ") (";
var G__191608 = (function (){var G__191785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__191786 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191785,G__191786) : tailrecursion.hoplon.span.call(null,G__191785,G__191786));
})();
var G__191609 = (function (){var G__191787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191788 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191787,G__191788) : tailrecursion.hoplon.span.call(null,G__191787,G__191788));
})();
var G__191610 = " ";
var G__191611 = (function (){var G__191789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191790 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191789,G__191790) : tailrecursion.hoplon.span.call(null,G__191789,G__191790));
})();
var G__191612 = "))\n               (";
var G__191613 = (function (){var G__191791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__191792 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191791,G__191792) : tailrecursion.hoplon.span.call(null,G__191791,G__191792));
})();
var G__191614 = "(";
var G__191615 = (function (){var G__191793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191794 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191793,G__191794) : tailrecursion.hoplon.span.call(null,G__191793,G__191794));
})();
var G__191616 = " ";
var G__191617 = (function (){var G__191795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191796 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191795,G__191796) : tailrecursion.hoplon.span.call(null,G__191795,G__191796));
})();
var G__191618 = ") (";
var G__191619 = (function (){var G__191797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__191798 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191797,G__191798) : tailrecursion.hoplon.span.call(null,G__191797,G__191798));
})();
var G__191620 = (function (){var G__191799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191800 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191799,G__191800) : tailrecursion.hoplon.span.call(null,G__191799,G__191800));
})();
var G__191621 = " ";
var G__191622 = (function (){var G__191801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191802 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191801,G__191802) : tailrecursion.hoplon.span.call(null,G__191801,G__191802));
})();
var G__191623 = ")))\n            (";
var G__191624 = (function (){var G__191803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__191804 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191803,G__191804) : tailrecursion.hoplon.span.call(null,G__191803,G__191804));
})();
var G__191625 = "(";
var G__191626 = (function (){var G__191805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191806 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191805,G__191806) : tailrecursion.hoplon.span.call(null,G__191805,G__191806));
})();
var G__191627 = " ";
var G__191628 = (function (){var G__191807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191808 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191807,G__191808) : tailrecursion.hoplon.span.call(null,G__191807,G__191808));
})();
var G__191629 = ") (";
var G__191630 = (function (){var G__191809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191810 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191809,G__191810) : tailrecursion.hoplon.span.call(null,G__191809,G__191810));
})();
var G__191631 = " ";
var G__191632 = (function (){var G__191811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191812 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191811,G__191812) : tailrecursion.hoplon.span.call(null,G__191811,G__191812));
})();
var G__191633 = "))))\n(";
var G__191634 = (function (){var G__191813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__191814 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191813,G__191814) : tailrecursion.hoplon.span.call(null,G__191813,G__191814));
})();
var G__191635 = (function (){var G__191815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191816 = "mul-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191815,G__191816) : tailrecursion.hoplon.span.call(null,G__191815,G__191816));
})();
var G__191636 = " [";
var G__191637 = (function (){var G__191817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191818 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191817,G__191818) : tailrecursion.hoplon.span.call(null,G__191817,G__191818));
})();
var G__191638 = " ";
var G__191639 = (function (){var G__191819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191820 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191819,G__191820) : tailrecursion.hoplon.span.call(null,G__191819,G__191820));
})();
var G__191640 = "]\n  (";
var G__191641 = (function (){var G__191821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191822 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191821,G__191822) : tailrecursion.hoplon.span.call(null,G__191821,G__191822));
})();
var G__191642 = " (";
var G__191643 = (function (){var G__191823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__191824 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191823,G__191824) : tailrecursion.hoplon.span.call(null,G__191823,G__191824));
})();
var G__191644 = "(";
var G__191645 = (function (){var G__191825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191826 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191825,G__191826) : tailrecursion.hoplon.span.call(null,G__191825,G__191826));
})();
var G__191646 = " ";
var G__191647 = (function (){var G__191827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191828 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191827,G__191828) : tailrecursion.hoplon.span.call(null,G__191827,G__191828));
})();
var G__191648 = ") (";
var G__191649 = (function (){var G__191829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191830 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191829,G__191830) : tailrecursion.hoplon.span.call(null,G__191829,G__191830));
})();
var G__191650 = " ";
var G__191651 = (function (){var G__191831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191832 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191831,G__191832) : tailrecursion.hoplon.span.call(null,G__191831,G__191832));
})();
var G__191652 = "))\n            (";
var G__191653 = (function (){var G__191833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__191834 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191833,G__191834) : tailrecursion.hoplon.span.call(null,G__191833,G__191834));
})();
var G__191654 = "(";
var G__191655 = (function (){var G__191835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191836 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191835,G__191836) : tailrecursion.hoplon.span.call(null,G__191835,G__191836));
})();
var G__191656 = " ";
var G__191657 = (function (){var G__191837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191838 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191837,G__191838) : tailrecursion.hoplon.span.call(null,G__191837,G__191838));
})();
var G__191658 = ") (";
var G__191659 = (function (){var G__191839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191840 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191839,G__191840) : tailrecursion.hoplon.span.call(null,G__191839,G__191840));
})();
var G__191660 = " ";
var G__191661 = (function (){var G__191841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191842 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191841,G__191842) : tailrecursion.hoplon.span.call(null,G__191841,G__191842));
})();
var G__191662 = "))))\n(";
var G__191663 = (function (){var G__191843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__191844 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191843,G__191844) : tailrecursion.hoplon.span.call(null,G__191843,G__191844));
})();
var G__191664 = (function (){var G__191845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191846 = "div-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191845,G__191846) : tailrecursion.hoplon.span.call(null,G__191845,G__191846));
})();
var G__191665 = " [";
var G__191666 = (function (){var G__191847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191848 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191847,G__191848) : tailrecursion.hoplon.span.call(null,G__191847,G__191848));
})();
var G__191667 = " ";
var G__191668 = (function (){var G__191849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191850 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191849,G__191850) : tailrecursion.hoplon.span.call(null,G__191849,G__191850));
})();
var G__191669 = "]\n  (";
var G__191670 = (function (){var G__191851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191852 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191851,G__191852) : tailrecursion.hoplon.span.call(null,G__191851,G__191852));
})();
var G__191671 = " (";
var G__191672 = (function (){var G__191853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__191854 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191853,G__191854) : tailrecursion.hoplon.span.call(null,G__191853,G__191854));
})();
var G__191673 = "(";
var G__191674 = (function (){var G__191855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191856 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191855,G__191856) : tailrecursion.hoplon.span.call(null,G__191855,G__191856));
})();
var G__191675 = " ";
var G__191676 = (function (){var G__191857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191858 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191857,G__191858) : tailrecursion.hoplon.span.call(null,G__191857,G__191858));
})();
var G__191677 = ") (";
var G__191678 = (function (){var G__191859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191860 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191859,G__191860) : tailrecursion.hoplon.span.call(null,G__191859,G__191860));
})();
var G__191679 = " ";
var G__191680 = (function (){var G__191861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191862 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191861,G__191862) : tailrecursion.hoplon.span.call(null,G__191861,G__191862));
})();
var G__191681 = "))\n            (";
var G__191682 = (function (){var G__191863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__191864 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191863,G__191864) : tailrecursion.hoplon.span.call(null,G__191863,G__191864));
})();
var G__191683 = "(";
var G__191684 = (function (){var G__191865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191866 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191865,G__191866) : tailrecursion.hoplon.span.call(null,G__191865,G__191866));
})();
var G__191685 = " ";
var G__191686 = (function (){var G__191867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191868 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191867,G__191868) : tailrecursion.hoplon.span.call(null,G__191867,G__191868));
})();
var G__191687 = ") (";
var G__191688 = (function (){var G__191869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191870 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191869,G__191870) : tailrecursion.hoplon.span.call(null,G__191869,G__191870));
})();
var G__191689 = " ";
var G__191690 = (function (){var G__191871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191872 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191871,G__191872) : tailrecursion.hoplon.span.call(null,G__191871,G__191872));
})();
var G__191691 = "))))\n(";
var G__191692 = (function (){var G__191873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__191874 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191873,G__191874) : tailrecursion.hoplon.span.call(null,G__191873,G__191874));
})();
var G__191693 = (function (){var G__191875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191876 = "equal-rat?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191875,G__191876) : tailrecursion.hoplon.span.call(null,G__191875,G__191876));
})();
var G__191694 = " [";
var G__191695 = (function (){var G__191877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191878 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191877,G__191878) : tailrecursion.hoplon.span.call(null,G__191877,G__191878));
})();
var G__191696 = " ";
var G__191697 = (function (){var G__191879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191880 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191879,G__191880) : tailrecursion.hoplon.span.call(null,G__191879,G__191880));
})();
var G__191698 = "]\n  (";
var G__191699 = (function (){var G__191881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__191882 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191881,G__191882) : tailrecursion.hoplon.span.call(null,G__191881,G__191882));
})();
var G__191700 = "(";
var G__191701 = (function (){var G__191883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__191884 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191883,G__191884) : tailrecursion.hoplon.span.call(null,G__191883,G__191884));
})();
var G__191702 = "(";
var G__191703 = (function (){var G__191885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191886 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191885,G__191886) : tailrecursion.hoplon.span.call(null,G__191885,G__191886));
})();
var G__191704 = " ";
var G__191705 = (function (){var G__191887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191888 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191887,G__191888) : tailrecursion.hoplon.span.call(null,G__191887,G__191888));
})();
var G__191706 = ") (";
var G__191707 = (function (){var G__191889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191890 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191889,G__191890) : tailrecursion.hoplon.span.call(null,G__191889,G__191890));
})();
var G__191708 = " ";
var G__191709 = (function (){var G__191891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191892 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191891,G__191892) : tailrecursion.hoplon.span.call(null,G__191891,G__191892));
})();
var G__191710 = "))\n     (";
var G__191711 = (function (){var G__191893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__191894 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191893,G__191894) : tailrecursion.hoplon.span.call(null,G__191893,G__191894));
})();
var G__191712 = "(";
var G__191713 = (function (){var G__191895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191896 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191895,G__191896) : tailrecursion.hoplon.span.call(null,G__191895,G__191896));
})();
var G__191714 = " ";
var G__191715 = (function (){var G__191897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191898 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191897,G__191898) : tailrecursion.hoplon.span.call(null,G__191897,G__191898));
})();
var G__191716 = ") (";
var G__191717 = (function (){var G__191899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__191900 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191899,G__191900) : tailrecursion.hoplon.span.call(null,G__191899,G__191900));
})();
var G__191718 = " ";
var G__191719 = (function (){var G__191901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__191902 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__191901,G__191902) : tailrecursion.hoplon.span.call(null,G__191901,G__191902));
})();
var G__191720 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$175 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$175(G__191546,G__191547,G__191548,G__191549,G__191550,G__191551,G__191552,G__191553,G__191554,G__191555,G__191556,G__191557,G__191558,G__191559,G__191560,G__191561,G__191562,G__191563,G__191564,G__191565,G__191566,G__191567,G__191568,G__191569,G__191570,G__191571,G__191572,G__191573,G__191574,G__191575,G__191576,G__191577,G__191578,G__191579,G__191580,G__191581,G__191582,G__191583,G__191584,G__191585,G__191586,G__191587,G__191588,G__191589,G__191590,G__191591,G__191592,G__191593,G__191594,G__191595,G__191596,G__191597,G__191598,G__191599,G__191600,G__191601,G__191602,G__191603,G__191604,G__191605,G__191606,G__191607,G__191608,G__191609,G__191610,G__191611,G__191612,G__191613,G__191614,G__191615,G__191616,G__191617,G__191618,G__191619,G__191620,G__191621,G__191622,G__191623,G__191624,G__191625,G__191626,G__191627,G__191628,G__191629,G__191630,G__191631,G__191632,G__191633,G__191634,G__191635,G__191636,G__191637,G__191638,G__191639,G__191640,G__191641,G__191642,G__191643,G__191644,G__191645,G__191646,G__191647,G__191648,G__191649,G__191650,G__191651,G__191652,G__191653,G__191654,G__191655,G__191656,G__191657,G__191658,G__191659,G__191660,G__191661,G__191662,G__191663,G__191664,G__191665,G__191666,G__191667,G__191668,G__191669,G__191670,G__191671,G__191672,G__191673,G__191674,G__191675,G__191676,G__191677,G__191678,G__191679,G__191680,G__191681,G__191682,G__191683,G__191684,G__191685,G__191686,G__191687,G__191688,G__191689,G__191690,G__191691,G__191692,G__191693,G__191694,G__191695,G__191696,G__191697,G__191698,G__191699,G__191700,G__191701,G__191702,G__191703,G__191704,G__191705,G__191706,G__191707,G__191708,G__191709,G__191710,G__191711,G__191712,G__191713,G__191714,G__191715,G__191716,G__191717,G__191718,G__191719,G__191720) : tailrecursion.hoplon.pre.call(null,G__191546,G__191547,G__191548,G__191549,G__191550,G__191551,G__191552,G__191553,G__191554,G__191555,G__191556,G__191557,G__191558,G__191559,G__191560,G__191561,G__191562,G__191563,G__191564,G__191565,G__191566,G__191567,G__191568,G__191569,G__191570,G__191571,G__191572,G__191573,G__191574,G__191575,G__191576,G__191577,G__191578,G__191579,G__191580,G__191581,G__191582,G__191583,G__191584,G__191585,G__191586,G__191587,G__191588,G__191589,G__191590,G__191591,G__191592,G__191593,G__191594,G__191595,G__191596,G__191597,G__191598,G__191599,G__191600,G__191601,G__191602,G__191603,G__191604,G__191605,G__191606,G__191607,G__191608,G__191609,G__191610,G__191611,G__191612,G__191613,G__191614,G__191615,G__191616,G__191617,G__191618,G__191619,G__191620,G__191621,G__191622,G__191623,G__191624,G__191625,G__191626,G__191627,G__191628,G__191629,G__191630,G__191631,G__191632,G__191633,G__191634,G__191635,G__191636,G__191637,G__191638,G__191639,G__191640,G__191641,G__191642,G__191643,G__191644,G__191645,G__191646,G__191647,G__191648,G__191649,G__191650,G__191651,G__191652,G__191653,G__191654,G__191655,G__191656,G__191657,G__191658,G__191659,G__191660,G__191661,G__191662,G__191663,G__191664,G__191665,G__191666,G__191667,G__191668,G__191669,G__191670,G__191671,G__191672,G__191673,G__191674,G__191675,G__191676,G__191677,G__191678,G__191679,G__191680,G__191681,G__191682,G__191683,G__191684,G__191685,G__191686,G__191687,G__191688,G__191689,G__191690,G__191691,G__191692,G__191693,G__191694,G__191695,G__191696,G__191697,G__191698,G__191699,G__191700,G__191701,G__191702,G__191703,G__191704,G__191705,G__191706,G__191707,G__191708,G__191709,G__191710,G__191711,G__191712,G__191713,G__191714,G__191715,G__191716,G__191717,G__191718,G__191719,G__191720));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__191544,G__191545) : tailrecursion.hoplon.div.call(null,G__191544,G__191545));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__191543) : tailrecursion.hoplon.div.call(null,G__191543));
})(),(function (){var G__191903 = cljs.core.PersistentArrayMap.EMPTY;
var G__191904 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we have the operations on rational numbers defined in terms of the selector and constructor procedures ",(function (){var G__191905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__191906 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191905,G__191906) : tailrecursion.hoplon.markdown.code_node.call(null,G__191905,G__191906));
})(),", ",(function (){var G__191907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__191908 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191907,G__191908) : tailrecursion.hoplon.markdown.code_node.call(null,G__191907,G__191908));
})(),", and ",(function (){var G__191909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__191910 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191909,G__191910) : tailrecursion.hoplon.markdown.code_node.call(null,G__191909,G__191910));
})(),". But we haven",(function (){var G__191911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__191912 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__191911,G__191912) : tailrecursion.hoplon.markdown.simple_node.call(null,G__191911,G__191912));
})(),"t yet defined these. What we need is some way to glue together a numerator and a denominator to form a rational number."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__191903,G__191904) : tailrecursion.hoplon.markdown.para_node.call(null,G__191903,G__191904));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_191141;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_191140;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_191139;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_191138;
}})()], 0));
var G__191108 = "";
var G__191109 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Pairs (or Lists, for Us)"], null),(function (){var _STAR_references_STAR_191913 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_191914 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_191915 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_191916 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__191917 = cljs.core.PersistentArrayMap.EMPTY;
var G__191918 = cljs.core.PersistentVector.fromArray(["To enable us to implement the concrete level of our data abstraction, our language provides a compound structure abstraction called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sequential object"], null)], 0)),". These sequential objects are really just anything that has a concept of a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["first"], null)], 0))," item and a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["rest"], null)], 0))," of the items. Hence, a sequential object is any object which allows use of the ",(function (){var G__191919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__191920 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191919,G__191920) : tailrecursion.hoplon.markdown.code_node.call(null,G__191919,G__191920));
})()," and ",(function (){var G__191921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__191922 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191921,G__191922) : tailrecursion.hoplon.markdown.code_node.call(null,G__191921,G__191922));
})()," protocols (kind of like procedures, except their actual execution may be different from data type to data type). One example of a sequential object ",(function (){var G__191923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__191924 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__191923,G__191924) : tailrecursion.hoplon.markdown.simple_node.call(null,G__191923,G__191924));
})()," the one we will be using instead of the ",(function (){var G__191925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__191926 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pairs"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__191925,G__191926) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__191925,G__191926));
})()," they use for this section in Scheme ",(function (){var G__191927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__191928 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__191927,G__191928) : tailrecursion.hoplon.markdown.simple_node.call(null,G__191927,G__191928));
})()," is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["list"], null)], 0)),". Lists can be constructed via the procedure ",(function (){var G__191929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__191930 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191929,G__191930) : tailrecursion.hoplon.markdown.code_node.call(null,G__191929,G__191930));
})()," like so ",(function (){var G__191931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(list 1 2 3)"], null);
var G__191932 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191931,G__191932) : tailrecursion.hoplon.markdown.code_node.call(null,G__191931,G__191932));
})()," gives you a list containing 1, 2, and 3 as its elements. So ",(function (){var G__191933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first (list 1 2 3))"], null);
var G__191934 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191933,G__191934) : tailrecursion.hoplon.markdown.code_node.call(null,G__191933,G__191934));
})()," would return ",(function (){var G__191935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"1"], null);
var G__191936 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191935,G__191936) : tailrecursion.hoplon.markdown.code_node.call(null,G__191935,G__191936));
})(),", and ",(function (){var G__191937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(rest (list 1 2 3))"], null);
var G__191938 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191937,G__191938) : tailrecursion.hoplon.markdown.code_node.call(null,G__191937,G__191938));
})()," returns ",(function (){var G__191939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(2 3)"], null);
var G__191940 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191939,G__191940) : tailrecursion.hoplon.markdown.code_node.call(null,G__191939,G__191940));
})(),", which is to say the list containing 2 and 3 as its elements. To check if what we",(function (){var G__191941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__191942 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__191941,G__191942) : tailrecursion.hoplon.markdown.simple_node.call(null,G__191941,G__191942));
})(),"ve been given is indeed a list, we can use the procedure ",(function (){var G__191943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list?"], null);
var G__191944 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191943,G__191944) : tailrecursion.hoplon.markdown.code_node.call(null,G__191943,G__191944));
})()," like so: ",(function (){var G__191945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(list? (rest (list 1 2 3)))"], null);
var G__191946 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191945,G__191946) : tailrecursion.hoplon.markdown.code_node.call(null,G__191945,G__191946));
})(),". Lists are actually made via pairs (as will be described later in this section), but all of that is under the hood. Lists can also be constructed from old lists with the procedure ",(function (){var G__191947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__191948 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191947,G__191948) : tailrecursion.hoplon.markdown.code_node.call(null,G__191947,G__191948));
})(),".",(function (){var G__191949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__191950 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We should note that since these lists are immutable, the only way to ",(function (){var G__191951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__191952 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["edit"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__191951,G__191952) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__191951,G__191952));
})()," a list would be to create a new one with the desired changes and then destroy the old one. While this may seem unfortunate at first, it is actually quite a desireable feature when dealing with concurrency."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__191949,G__191950) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__191949,G__191950));
})()," This procedure takes two or more arguments, a sequential object and any number of values to append to the sequential object, then returns a sequential object of the same type with the values appended in whatever method appropriate to that sequential object in the order they appear. We will see later that lists are constructed in such a way that prepending is very cheap, so ",(function (){var G__191953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__191954 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191953,G__191954) : tailrecursion.hoplon.markdown.code_node.call(null,G__191953,G__191954));
})()," does exactly that. Hence, ",(function (){var G__191955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(conj (list 1 2 3) 4)"], null);
var G__191956 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191955,G__191956) : tailrecursion.hoplon.markdown.code_node.call(null,G__191955,G__191956));
})()," returns ",(function (){var G__191957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(4 1\n2 3)"], null);
var G__191958 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191957,G__191958) : tailrecursion.hoplon.markdown.code_node.call(null,G__191957,G__191958));
})(),", and ",(function (){var G__191959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(conj (list 1 2 3) 4 5)"], null);
var G__191960 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191959,G__191960) : tailrecursion.hoplon.markdown.code_node.call(null,G__191959,G__191960));
})()," returns ",(function (){var G__191961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(5 4 1 2 3)"], null);
var G__191962 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191961,G__191962) : tailrecursion.hoplon.markdown.code_node.call(null,G__191961,G__191962));
})()," (remember that they are prepended in the order they appear!)."], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__191917,G__191918) : tailrecursion.hoplon.markdown.para_node.call(null,G__191917,G__191918));
})(),(function (){var G__191963 = cljs.core.PersistentArrayMap.EMPTY;
var G__191964 = new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In Scheme, however, their building block is the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pair"], null)], 0)),", wich can be constructed via the primitive procedure ",(function (){var G__191965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__191966 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191965,G__191966) : tailrecursion.hoplon.markdown.code_node.call(null,G__191965,G__191966));
})()," (which also works in Clojure",(function (){var G__191967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__191968 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__191967,G__191968) : tailrecursion.hoplon.markdown.simple_node.call(null,G__191967,G__191968));
})()," kinda) and has procedures ",(function (){var G__191969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__191970 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191969,G__191970) : tailrecursion.hoplon.markdown.code_node.call(null,G__191969,G__191970));
})()," and ",(function (){var G__191971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__191972 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191971,G__191972) : tailrecursion.hoplon.markdown.code_node.call(null,G__191971,G__191972));
})()," for obtaining the first and second values of the pair respectively.",(function (){var G__191973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__191974 = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The name ",(function (){var G__191975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__191976 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191975,G__191976) : tailrecursion.hoplon.markdown.code_node.call(null,G__191975,G__191976));
})()," stands for ",(function (){var G__191977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__191978 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["construct."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__191977,G__191978) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__191977,G__191978));
})()," The names ",(function (){var G__191979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__191980 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191979,G__191980) : tailrecursion.hoplon.markdown.code_node.call(null,G__191979,G__191980));
})()," and ",(function (){var G__191981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__191982 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191981,G__191982) : tailrecursion.hoplon.markdown.code_node.call(null,G__191981,G__191982));
})()," derive from the original implementation of Lisp on the IBM 704. That machine had an addressing scheme that allowed one to reference the ",(function (){var G__191983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__191984 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["address"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__191983,G__191984) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__191983,G__191984));
})()," and ",(function (){var G__191985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__191986 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["decrement"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__191985,G__191986) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__191985,G__191986));
})()," parts of a memory location. ",(function (){var G__191987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__191988 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191987,G__191988) : tailrecursion.hoplon.markdown.code_node.call(null,G__191987,G__191988));
})()," stands for ",(function (){var G__191989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__191990 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Contents of Address part of Register"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__191989,G__191990) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__191989,G__191990));
})()," and ",(function (){var G__191991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__191992 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191991,G__191992) : tailrecursion.hoplon.markdown.code_node.call(null,G__191991,G__191992));
})()," (pronounced ",(function (){var G__191993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__191994 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["could-er"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__191993,G__191994) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__191993,G__191994));
})(),") stands for ",(function (){var G__191995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__191996 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Contents of Decrement part of Register."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__191995,G__191996) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__191995,G__191996));
})()], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__191973,G__191974) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__191973,G__191974));
})()," Thus, we in Scheme, we would be able to use ",(function (){var G__191997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__191998 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191997,G__191998) : tailrecursion.hoplon.markdown.code_node.call(null,G__191997,G__191998));
})(),", ",(function (){var G__191999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__192000 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__191999,G__192000) : tailrecursion.hoplon.markdown.code_node.call(null,G__191999,G__192000));
})(),", and ",(function (){var G__192001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__192002 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192001,G__192002) : tailrecursion.hoplon.markdown.code_node.call(null,G__192001,G__192002));
})()," as follows: "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__191963,G__191964) : tailrecursion.hoplon.markdown.para_node.call(null,G__191963,G__191964));
})(),(function (){var G__192025 = (function (){var G__192026 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__192027 = (function (){var G__192028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__192029 = "(";
var G__192030 = (function (){var G__192038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__192039 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192038,G__192039) : tailrecursion.hoplon.span.call(null,G__192038,G__192039));
})();
var G__192031 = (function (){var G__192040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192041 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192040,G__192041) : tailrecursion.hoplon.span.call(null,G__192040,G__192041));
})();
var G__192032 = " (";
var G__192033 = (function (){var G__192042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__192043 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192042,G__192043) : tailrecursion.hoplon.span.call(null,G__192042,G__192043));
})();
var G__192034 = (function (){var G__192044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192045 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192044,G__192045) : tailrecursion.hoplon.span.call(null,G__192044,G__192045));
})();
var G__192035 = " ";
var G__192036 = (function (){var G__192046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192047 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192046,G__192047) : tailrecursion.hoplon.span.call(null,G__192046,G__192047));
})();
var G__192037 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10(G__192028,G__192029,G__192030,G__192031,G__192032,G__192033,G__192034,G__192035,G__192036,G__192037) : tailrecursion.hoplon.pre.call(null,G__192028,G__192029,G__192030,G__192031,G__192032,G__192033,G__192034,G__192035,G__192036,G__192037));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__192026,G__192027) : tailrecursion.hoplon.div.call(null,G__192026,G__192027));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__192025) : tailrecursion.hoplon.div.call(null,G__192025));
})(),(function (){var G__192048 = cljs.core.PersistentArrayMap.EMPTY;
var G__192049 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Go ahead and try this in Clojure (can you translate that?)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__192048,G__192049) : tailrecursion.hoplon.markdown.para_node.call(null,G__192048,G__192049));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_191916;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_191915;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_191914;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_191913;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,"```clj\n(def x (cons 1 2))\n```"], 0)),"",(function (){var _STAR_references_STAR_192050 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_192051 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_192052 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_192053 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__192054 = cljs.core.PersistentArrayMap.EMPTY;
var G__192055 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If you tried the previous example. you probably got an error. That is because Clojure implements ",(function (){var G__192056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__192057 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192056,G__192057) : tailrecursion.hoplon.markdown.code_node.call(null,G__192056,G__192057));
})()," differently. If we try "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__192054,G__192055) : tailrecursion.hoplon.markdown.para_node.call(null,G__192054,G__192055));
})(),(function (){var G__192087 = (function (){var G__192088 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__192089 = (function (){var G__192090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__192091 = "(";
var G__192092 = (function (){var G__192103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__192104 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192103,G__192104) : tailrecursion.hoplon.span.call(null,G__192103,G__192104));
})();
var G__192093 = (function (){var G__192105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192106 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192105,G__192106) : tailrecursion.hoplon.span.call(null,G__192105,G__192106));
})();
var G__192094 = " (";
var G__192095 = (function (){var G__192107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__192108 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192107,G__192108) : tailrecursion.hoplon.span.call(null,G__192107,G__192108));
})();
var G__192096 = (function (){var G__192109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192110 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192109,G__192110) : tailrecursion.hoplon.span.call(null,G__192109,G__192110));
})();
var G__192097 = " (";
var G__192098 = (function (){var G__192111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__192112 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192111,G__192112) : tailrecursion.hoplon.span.call(null,G__192111,G__192112));
})();
var G__192099 = (function (){var G__192113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192114 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192113,G__192114) : tailrecursion.hoplon.span.call(null,G__192113,G__192114));
})();
var G__192100 = " ";
var G__192101 = (function (){var G__192115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192116 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192115,G__192116) : tailrecursion.hoplon.span.call(null,G__192115,G__192116));
})();
var G__192102 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__192090,G__192091,G__192092,G__192093,G__192094,G__192095,G__192096,G__192097,G__192098,G__192099,G__192100,G__192101,G__192102) : tailrecursion.hoplon.pre.call(null,G__192090,G__192091,G__192092,G__192093,G__192094,G__192095,G__192096,G__192097,G__192098,G__192099,G__192100,G__192101,G__192102));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__192088,G__192089) : tailrecursion.hoplon.div.call(null,G__192088,G__192089));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__192087) : tailrecursion.hoplon.div.call(null,G__192087));
})(),(function (){var G__192117 = cljs.core.PersistentArrayMap.EMPTY;
var G__192118 = new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then we shouldn",(function (){var G__192119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__192120 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__192119,G__192120) : tailrecursion.hoplon.markdown.simple_node.call(null,G__192119,G__192120));
})(),"t get any errors. The reason is that the second argument of ",(function (){var G__192121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__192122 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192121,G__192122) : tailrecursion.hoplon.markdown.code_node.call(null,G__192121,G__192122));
})()," must be sequential object (or ",(function (){var G__192123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nil"], null);
var G__192124 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192123,G__192124) : tailrecursion.hoplon.markdown.code_node.call(null,G__192123,G__192124));
})(),"). Either way, we will not be using ",(function (){var G__192125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__192126 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192125,G__192126) : tailrecursion.hoplon.markdown.code_node.call(null,G__192125,G__192126));
})()," for our discourse in this chapter, but rather the procedures ",(function (){var G__192127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__192128 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192127,G__192128) : tailrecursion.hoplon.markdown.code_node.call(null,G__192127,G__192128));
})()," and ",(function (){var G__192129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__192130 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192129,G__192130) : tailrecursion.hoplon.markdown.code_node.call(null,G__192129,G__192130));
})(),", which are more general anyway. Along with ",(function (){var G__192131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__192132 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192131,G__192132) : tailrecursion.hoplon.markdown.code_node.call(null,G__192131,G__192132));
})()," and ",(function (){var G__192133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__192134 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192133,G__192134) : tailrecursion.hoplon.markdown.code_node.call(null,G__192133,G__192134));
})(),", lists also have ",(function (){var G__192135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__192136 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192135,G__192136) : tailrecursion.hoplon.markdown.code_node.call(null,G__192135,G__192136));
})()," and ",(function (){var G__192137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nth"], null);
var G__192138 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192137,G__192138) : tailrecursion.hoplon.markdown.code_node.call(null,G__192137,G__192138));
})()," which give you exactly what you",(function (){var G__192139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__192140 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__192139,G__192140) : tailrecursion.hoplon.markdown.simple_node.call(null,G__192139,G__192140));
})(),"d expect, the second and the nth values in the list. So,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__192117,G__192118) : tailrecursion.hoplon.markdown.para_node.call(null,G__192117,G__192118));
})(),(function (){var G__192185 = (function (){var G__192186 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__192187 = (function (){var G__192188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__192189 = "(";
var G__192190 = (function (){var G__192208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__192209 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192208,G__192209) : tailrecursion.hoplon.span.call(null,G__192208,G__192209));
})();
var G__192191 = (function (){var G__192210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192211 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192210,G__192211) : tailrecursion.hoplon.span.call(null,G__192210,G__192211));
})();
var G__192192 = " (";
var G__192193 = (function (){var G__192212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__192213 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192212,G__192213) : tailrecursion.hoplon.span.call(null,G__192212,G__192213));
})();
var G__192194 = (function (){var G__192214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192215 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192214,G__192215) : tailrecursion.hoplon.span.call(null,G__192214,G__192215));
})();
var G__192195 = " ";
var G__192196 = (function (){var G__192216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192217 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192216,G__192217) : tailrecursion.hoplon.span.call(null,G__192216,G__192217));
})();
var G__192197 = "))\n(";
var G__192198 = (function (){var G__192218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__192219 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192218,G__192219) : tailrecursion.hoplon.span.call(null,G__192218,G__192219));
})();
var G__192199 = (function (){var G__192220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192221 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192220,G__192221) : tailrecursion.hoplon.span.call(null,G__192220,G__192221));
})();
var G__192200 = ")\n";
var G__192201 = (function (){var G__192222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192223 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192222,G__192223) : tailrecursion.hoplon.span.call(null,G__192222,G__192223));
})();
var G__192202 = "\n(";
var G__192203 = (function (){var G__192224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__192225 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192224,G__192225) : tailrecursion.hoplon.span.call(null,G__192224,G__192225));
})();
var G__192204 = (function (){var G__192226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192227 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192226,G__192227) : tailrecursion.hoplon.span.call(null,G__192226,G__192227));
})();
var G__192205 = ")\n";
var G__192206 = (function (){var G__192228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192229 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192228,G__192229) : tailrecursion.hoplon.span.call(null,G__192228,G__192229));
})();
var G__192207 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20(G__192188,G__192189,G__192190,G__192191,G__192192,G__192193,G__192194,G__192195,G__192196,G__192197,G__192198,G__192199,G__192200,G__192201,G__192202,G__192203,G__192204,G__192205,G__192206,G__192207) : tailrecursion.hoplon.pre.call(null,G__192188,G__192189,G__192190,G__192191,G__192192,G__192193,G__192194,G__192195,G__192196,G__192197,G__192198,G__192199,G__192200,G__192201,G__192202,G__192203,G__192204,G__192205,G__192206,G__192207));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__192186,G__192187) : tailrecursion.hoplon.div.call(null,G__192186,G__192187));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__192185) : tailrecursion.hoplon.div.call(null,G__192185));
})(),(function (){var G__192230 = cljs.core.PersistentArrayMap.EMPTY;
var G__192231 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Notice that a list is a data object that can be given a name and manipulated, just like a primitive data object. Moreover, ",(function (){var G__192232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__192233 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192232,G__192233) : tailrecursion.hoplon.markdown.code_node.call(null,G__192232,G__192233));
})()," can be used to form pairs whose elements are pairs, and so on:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__192230,G__192231) : tailrecursion.hoplon.markdown.para_node.call(null,G__192230,G__192231));
})(),(function (){var G__192336 = (function (){var G__192337 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__192338 = (function (){var G__192339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__192340 = "(";
var G__192341 = (function (){var G__192385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__192386 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192385,G__192386) : tailrecursion.hoplon.span.call(null,G__192385,G__192386));
})();
var G__192342 = (function (){var G__192387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192388 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192387,G__192388) : tailrecursion.hoplon.span.call(null,G__192387,G__192388));
})();
var G__192343 = " (";
var G__192344 = (function (){var G__192389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__192390 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192389,G__192390) : tailrecursion.hoplon.span.call(null,G__192389,G__192390));
})();
var G__192345 = (function (){var G__192391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192392 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192391,G__192392) : tailrecursion.hoplon.span.call(null,G__192391,G__192392));
})();
var G__192346 = " (";
var G__192347 = (function (){var G__192393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__192394 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192393,G__192394) : tailrecursion.hoplon.span.call(null,G__192393,G__192394));
})();
var G__192348 = (function (){var G__192395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192396 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192395,G__192396) : tailrecursion.hoplon.span.call(null,G__192395,G__192396));
})();
var G__192349 = " ";
var G__192350 = (function (){var G__192397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192398 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192397,G__192398) : tailrecursion.hoplon.span.call(null,G__192397,G__192398));
})();
var G__192351 = ")))\n(";
var G__192352 = (function (){var G__192399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__192400 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192399,G__192400) : tailrecursion.hoplon.span.call(null,G__192399,G__192400));
})();
var G__192353 = (function (){var G__192401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192402 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192401,G__192402) : tailrecursion.hoplon.span.call(null,G__192401,G__192402));
})();
var G__192354 = " (";
var G__192355 = (function (){var G__192403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__192404 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192403,G__192404) : tailrecursion.hoplon.span.call(null,G__192403,G__192404));
})();
var G__192356 = (function (){var G__192405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192406 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192405,G__192406) : tailrecursion.hoplon.span.call(null,G__192405,G__192406));
})();
var G__192357 = " (";
var G__192358 = (function (){var G__192407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__192408 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192407,G__192408) : tailrecursion.hoplon.span.call(null,G__192407,G__192408));
})();
var G__192359 = (function (){var G__192409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192410 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192409,G__192410) : tailrecursion.hoplon.span.call(null,G__192409,G__192410));
})();
var G__192360 = " ";
var G__192361 = (function (){var G__192411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192412 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192411,G__192412) : tailrecursion.hoplon.span.call(null,G__192411,G__192412));
})();
var G__192362 = ")))\n(";
var G__192363 = (function (){var G__192413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__192414 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192413,G__192414) : tailrecursion.hoplon.span.call(null,G__192413,G__192414));
})();
var G__192364 = (function (){var G__192415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192416 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192415,G__192416) : tailrecursion.hoplon.span.call(null,G__192415,G__192416));
})();
var G__192365 = " (";
var G__192366 = (function (){var G__192417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__192418 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192417,G__192418) : tailrecursion.hoplon.span.call(null,G__192417,G__192418));
})();
var G__192367 = (function (){var G__192419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192420 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192419,G__192420) : tailrecursion.hoplon.span.call(null,G__192419,G__192420));
})();
var G__192368 = " ";
var G__192369 = (function (){var G__192421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192422 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192421,G__192422) : tailrecursion.hoplon.span.call(null,G__192421,G__192422));
})();
var G__192370 = "))\n\n(";
var G__192371 = (function (){var G__192423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__192424 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192423,G__192424) : tailrecursion.hoplon.span.call(null,G__192423,G__192424));
})();
var G__192372 = "(";
var G__192373 = (function (){var G__192425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__192426 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192425,G__192426) : tailrecursion.hoplon.span.call(null,G__192425,G__192426));
})();
var G__192374 = (function (){var G__192427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192428 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192427,G__192428) : tailrecursion.hoplon.span.call(null,G__192427,G__192428));
})();
var G__192375 = "))\n";
var G__192376 = (function (){var G__192429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192430 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192429,G__192430) : tailrecursion.hoplon.span.call(null,G__192429,G__192430));
})();
var G__192377 = "\n(";
var G__192378 = (function (){var G__192431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__192432 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192431,G__192432) : tailrecursion.hoplon.span.call(null,G__192431,G__192432));
})();
var G__192379 = "(";
var G__192380 = (function (){var G__192433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__192434 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192433,G__192434) : tailrecursion.hoplon.span.call(null,G__192433,G__192434));
})();
var G__192381 = (function (){var G__192435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192436 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192435,G__192436) : tailrecursion.hoplon.span.call(null,G__192435,G__192436));
})();
var G__192382 = "))\n";
var G__192383 = (function (){var G__192437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192438 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192437,G__192438) : tailrecursion.hoplon.span.call(null,G__192437,G__192438));
})();
var G__192384 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__192339,G__192340,G__192341,G__192342,G__192343,G__192344,G__192345,G__192346,G__192347,G__192348,G__192349,G__192350,G__192351,G__192352,G__192353,G__192354,G__192355,G__192356,G__192357,G__192358,G__192359,G__192360,G__192361,G__192362,G__192363,G__192364,G__192365,G__192366,G__192367,G__192368,G__192369,G__192370,G__192371,G__192372,G__192373,G__192374,G__192375,G__192376,G__192377,G__192378,G__192379,G__192380,G__192381,G__192382,G__192383,G__192384) : tailrecursion.hoplon.pre.call(null,G__192339,G__192340,G__192341,G__192342,G__192343,G__192344,G__192345,G__192346,G__192347,G__192348,G__192349,G__192350,G__192351,G__192352,G__192353,G__192354,G__192355,G__192356,G__192357,G__192358,G__192359,G__192360,G__192361,G__192362,G__192363,G__192364,G__192365,G__192366,G__192367,G__192368,G__192369,G__192370,G__192371,G__192372,G__192373,G__192374,G__192375,G__192376,G__192377,G__192378,G__192379,G__192380,G__192381,G__192382,G__192383,G__192384));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__192337,G__192338) : tailrecursion.hoplon.div.call(null,G__192337,G__192338));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__192336) : tailrecursion.hoplon.div.call(null,G__192336));
})(),(function (){var G__192439 = cljs.core.PersistentArrayMap.EMPTY;
var G__192440 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/sect/2/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.2"], null)], 0))," we will see how this ability to combine pairs means that pairs can be used as general-purpose building blocks to create all sorts of complex data structures. The single compound-data primitive ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pair"], null)], 0)),", implemented in Scheme by the procedures ",(function (){var G__192441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__192442 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192441,G__192442) : tailrecursion.hoplon.markdown.code_node.call(null,G__192441,G__192442));
})(),", ",(function (){var G__192443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__192444 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192443,G__192444) : tailrecursion.hoplon.markdown.code_node.call(null,G__192443,G__192444));
})(),", and ",(function (){var G__192445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__192446 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192445,G__192446) : tailrecursion.hoplon.markdown.code_node.call(null,G__192445,G__192446));
})(),", is the only glue we need. Data objects constructed from pairs are called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["list-structured"], null)], 0))," data. In fact, we will explore how lists are acutally implemented in Clojure and we will see that it is very similar to Scheme in that respect. For now, let",(function (){var G__192447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__192448 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__192447,G__192448) : tailrecursion.hoplon.markdown.simple_node.call(null,G__192447,G__192448));
})(),"s pretend like our ",(function (){var G__192449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__192450 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192449,G__192450) : tailrecursion.hoplon.markdown.code_node.call(null,G__192449,G__192450));
})(),"s are really pairs (for the purposes of learning the lessons meant to be learned in the following sections)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__192439,G__192440) : tailrecursion.hoplon.markdown.para_node.call(null,G__192439,G__192440));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_192053;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_192052;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_192051;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_192050;
}})()], 0));
var G__191110 = "";
var G__191111 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Representing Rational Numbers"], null),(function (){var _STAR_references_STAR_192451 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_192452 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_192453 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_192454 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__192455 = cljs.core.PersistentArrayMap.EMPTY;
var G__192456 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Pairs offer a natural way to complete the rational-number system. Simply represent a rational number as a pair of two integers: a numerator and a denominator. Then ",(function (){var G__192457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__192458 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192457,G__192458) : tailrecursion.hoplon.markdown.code_node.call(null,G__192457,G__192458));
})(),", ",(function (){var G__192459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__192460 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192459,G__192460) : tailrecursion.hoplon.markdown.code_node.call(null,G__192459,G__192460));
})(),", and ",(function (){var G__192461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__192462 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192461,G__192462) : tailrecursion.hoplon.markdown.code_node.call(null,G__192461,G__192462));
})()," are readily implemented as follows:",(function (){var G__192463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__192464 = cljs.core.PersistentVector.fromArray(["Another way to define the selectors and constructor is ",(function (){var G__192465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(define make-rat cons)"], null);
var G__192466 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192465,G__192466) : tailrecursion.hoplon.markdown.code_node.call(null,G__192465,G__192466));
})()," ",(function (){var G__192467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(define numer car)"], null);
var G__192468 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192467,G__192468) : tailrecursion.hoplon.markdown.code_node.call(null,G__192467,G__192468));
})()," ",(function (){var G__192469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(define denom cdr)"], null);
var G__192470 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192469,G__192470) : tailrecursion.hoplon.markdown.code_node.call(null,G__192469,G__192470));
})()," The first definition associates the name ",(function (){var G__192471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__192472 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192471,G__192472) : tailrecursion.hoplon.markdown.code_node.call(null,G__192471,G__192472));
})()," with the value of the expression ",(function (){var G__192473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__192474 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192473,G__192474) : tailrecursion.hoplon.markdown.code_node.call(null,G__192473,G__192474));
})(),", which is the primitive procedure that constructs pairs. Thus ",(function (){var G__192475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__192476 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192475,G__192476) : tailrecursion.hoplon.markdown.code_node.call(null,G__192475,G__192476));
})()," and ",(function (){var G__192477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__192478 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192477,G__192478) : tailrecursion.hoplon.markdown.code_node.call(null,G__192477,G__192478));
})()," are names for the same primitive constructor. Defining selectors and constructors this way is efficient: Instead of ",(function (){var G__192479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__192480 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192479,G__192480) : tailrecursion.hoplon.markdown.code_node.call(null,G__192479,G__192480));
})()," ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["calling"], null)], 0))," ",(function (){var G__192481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__192482 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192481,G__192482) : tailrecursion.hoplon.markdown.code_node.call(null,G__192481,G__192482));
})(),", ",(function (){var G__192483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__192484 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192483,G__192484) : tailrecursion.hoplon.markdown.code_node.call(null,G__192483,G__192484));
})()," ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["is"], null)], 0))," ",(function (){var G__192485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__192486 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192485,G__192486) : tailrecursion.hoplon.markdown.code_node.call(null,G__192485,G__192486));
})(),", so there is only one procedure called, not two, when ",(function (){var G__192487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__192488 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192487,G__192488) : tailrecursion.hoplon.markdown.code_node.call(null,G__192487,G__192488));
})()," is called. On the other hand, doing this defeats debugging aids that trace procedure calls or put breakpoints on procedure calls: You may want to watch ",(function (){var G__192489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__192490 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192489,G__192490) : tailrecursion.hoplon.markdown.code_node.call(null,G__192489,G__192490));
})()," being called, but you certainly don not want to watch every call to ",(function (){var G__192491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__192492 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192491,G__192492) : tailrecursion.hoplon.markdown.code_node.call(null,G__192491,G__192492));
})(),"."], true);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__192463,G__192464) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__192463,G__192464));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__192455,G__192456) : tailrecursion.hoplon.markdown.para_node.call(null,G__192455,G__192456));
})(),(function (){var G__192564 = (function (){var G__192565 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__192566 = (function (){var G__192567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__192568 = "(";
var G__192569 = (function (){var G__192602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__192603 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192602,G__192603) : tailrecursion.hoplon.span.call(null,G__192602,G__192603));
})();
var G__192570 = "(";
var G__192571 = (function (){var G__192604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__192605 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192604,G__192605) : tailrecursion.hoplon.span.call(null,G__192604,G__192605));
})();
var G__192572 = " ";
var G__192573 = (function (){var G__192606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192607 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192606,G__192607) : tailrecursion.hoplon.span.call(null,G__192606,G__192607));
})();
var G__192574 = " ";
var G__192575 = (function (){var G__192608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192609 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192608,G__192609) : tailrecursion.hoplon.span.call(null,G__192608,G__192609));
})();
var G__192576 = ") (";
var G__192577 = (function (){var G__192610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__192611 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192610,G__192611) : tailrecursion.hoplon.span.call(null,G__192610,G__192611));
})();
var G__192578 = (function (){var G__192612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192613 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192612,G__192613) : tailrecursion.hoplon.span.call(null,G__192612,G__192613));
})();
var G__192579 = " ";
var G__192580 = (function (){var G__192614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192615 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192614,G__192615) : tailrecursion.hoplon.span.call(null,G__192614,G__192615));
})();
var G__192581 = "))\n(";
var G__192582 = (function (){var G__192616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__192617 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192616,G__192617) : tailrecursion.hoplon.span.call(null,G__192616,G__192617));
})();
var G__192583 = "(";
var G__192584 = (function (){var G__192618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__192619 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192618,G__192619) : tailrecursion.hoplon.span.call(null,G__192618,G__192619));
})();
var G__192585 = " ";
var G__192586 = (function (){var G__192620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192621 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192620,G__192621) : tailrecursion.hoplon.span.call(null,G__192620,G__192621));
})();
var G__192587 = ") (";
var G__192588 = (function (){var G__192622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__192623 = "first";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192622,G__192623) : tailrecursion.hoplon.span.call(null,G__192622,G__192623));
})();
var G__192589 = " ";
var G__192590 = (function (){var G__192624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192625 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192624,G__192625) : tailrecursion.hoplon.span.call(null,G__192624,G__192625));
})();
var G__192591 = "))\n(";
var G__192592 = (function (){var G__192626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__192627 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192626,G__192627) : tailrecursion.hoplon.span.call(null,G__192626,G__192627));
})();
var G__192593 = "(";
var G__192594 = (function (){var G__192628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__192629 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192628,G__192629) : tailrecursion.hoplon.span.call(null,G__192628,G__192629));
})();
var G__192595 = " ";
var G__192596 = (function (){var G__192630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192631 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192630,G__192631) : tailrecursion.hoplon.span.call(null,G__192630,G__192631));
})();
var G__192597 = ") (";
var G__192598 = (function (){var G__192632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__192633 = "second";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192632,G__192633) : tailrecursion.hoplon.span.call(null,G__192632,G__192633));
})();
var G__192599 = " ";
var G__192600 = (function (){var G__192634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192635 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192634,G__192635) : tailrecursion.hoplon.span.call(null,G__192634,G__192635));
})();
var G__192601 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35(G__192567,G__192568,G__192569,G__192570,G__192571,G__192572,G__192573,G__192574,G__192575,G__192576,G__192577,G__192578,G__192579,G__192580,G__192581,G__192582,G__192583,G__192584,G__192585,G__192586,G__192587,G__192588,G__192589,G__192590,G__192591,G__192592,G__192593,G__192594,G__192595,G__192596,G__192597,G__192598,G__192599,G__192600,G__192601) : tailrecursion.hoplon.pre.call(null,G__192567,G__192568,G__192569,G__192570,G__192571,G__192572,G__192573,G__192574,G__192575,G__192576,G__192577,G__192578,G__192579,G__192580,G__192581,G__192582,G__192583,G__192584,G__192585,G__192586,G__192587,G__192588,G__192589,G__192590,G__192591,G__192592,G__192593,G__192594,G__192595,G__192596,G__192597,G__192598,G__192599,G__192600,G__192601));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__192565,G__192566) : tailrecursion.hoplon.div.call(null,G__192565,G__192566));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__192564) : tailrecursion.hoplon.div.call(null,G__192564));
})(),(function (){var G__192636 = cljs.core.PersistentArrayMap.EMPTY;
var G__192637 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Also, in order to display the results of our computations, we can print rational numbers by printing the numerator, a slash, and the denominator.",(function (){var G__192638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__192639 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note that ",(function (){var G__192640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"print"], null);
var G__192641 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192640,G__192641) : tailrecursion.hoplon.markdown.code_node.call(null,G__192640,G__192641));
})()," and ",(function (){var G__192642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"println"], null);
var G__192643 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192642,G__192643) : tailrecursion.hoplon.markdown.code_node.call(null,G__192642,G__192643));
})()," (there are others but we need not go into them right now) return values. Being as how the values are not currently of use to us, we show only what these functions print and not what the interpreter prints as the returned values."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__192638,G__192639) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__192638,G__192639));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__192636,G__192637) : tailrecursion.hoplon.markdown.para_node.call(null,G__192636,G__192637));
})(),(function (){var G__192683 = (function (){var G__192684 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__192685 = (function (){var G__192686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__192687 = "(";
var G__192688 = (function (){var G__192705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__192706 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192705,G__192706) : tailrecursion.hoplon.span.call(null,G__192705,G__192706));
})();
var G__192689 = (function (){var G__192707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192708 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192707,G__192708) : tailrecursion.hoplon.span.call(null,G__192707,G__192708));
})();
var G__192690 = " [";
var G__192691 = (function (){var G__192709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192710 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192709,G__192710) : tailrecursion.hoplon.span.call(null,G__192709,G__192710));
})();
var G__192692 = "]\n  (";
var G__192693 = (function (){var G__192711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__192712 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192711,G__192712) : tailrecursion.hoplon.span.call(null,G__192711,G__192712));
})();
var G__192694 = "(";
var G__192695 = (function (){var G__192713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__192714 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192713,G__192714) : tailrecursion.hoplon.span.call(null,G__192713,G__192714));
})();
var G__192696 = " ";
var G__192697 = (function (){var G__192715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192716 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192715,G__192716) : tailrecursion.hoplon.span.call(null,G__192715,G__192716));
})();
var G__192698 = ") ";
var G__192699 = (function (){var G__192717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__192718 = "\"/\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192717,G__192718) : tailrecursion.hoplon.span.call(null,G__192717,G__192718));
})();
var G__192700 = " (";
var G__192701 = (function (){var G__192719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__192720 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192719,G__192720) : tailrecursion.hoplon.span.call(null,G__192719,G__192720));
})();
var G__192702 = " ";
var G__192703 = (function (){var G__192721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192722 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192721,G__192722) : tailrecursion.hoplon.span.call(null,G__192721,G__192722));
})();
var G__192704 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__192686,G__192687,G__192688,G__192689,G__192690,G__192691,G__192692,G__192693,G__192694,G__192695,G__192696,G__192697,G__192698,G__192699,G__192700,G__192701,G__192702,G__192703,G__192704) : tailrecursion.hoplon.pre.call(null,G__192686,G__192687,G__192688,G__192689,G__192690,G__192691,G__192692,G__192693,G__192694,G__192695,G__192696,G__192697,G__192698,G__192699,G__192700,G__192701,G__192702,G__192703,G__192704));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__192684,G__192685) : tailrecursion.hoplon.div.call(null,G__192684,G__192685));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__192683) : tailrecursion.hoplon.div.call(null,G__192683));
})(),(function (){var G__192723 = cljs.core.PersistentArrayMap.EMPTY;
var G__192724 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note that ",(function (){var G__192725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"println"], null);
var G__192726 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192725,G__192726) : tailrecursion.hoplon.markdown.code_node.call(null,G__192725,G__192726));
})()," is a function that takes any number of arguments, converts them to a string, prints them to the screen followed by a new line, then it returns the value ",(function (){var G__192727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nil"], null);
var G__192728 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192727,G__192728) : tailrecursion.hoplon.markdown.code_node.call(null,G__192727,G__192728));
})()," (remember, everything has a value in Lisp!)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__192723,G__192724) : tailrecursion.hoplon.markdown.para_node.call(null,G__192723,G__192724));
})(),(function (){var G__192729 = cljs.core.PersistentArrayMap.EMPTY;
var G__192730 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we can try our rational-number procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__192729,G__192730) : tailrecursion.hoplon.markdown.para_node.call(null,G__192729,G__192730));
})(),(function (){var G__192857 = (function (){var G__192858 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__192859 = (function (){var G__192860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__192861 = "(";
var G__192862 = (function (){var G__192920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__192921 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192920,G__192921) : tailrecursion.hoplon.span.call(null,G__192920,G__192921));
})();
var G__192863 = (function (){var G__192922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192923 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192922,G__192923) : tailrecursion.hoplon.span.call(null,G__192922,G__192923));
})();
var G__192864 = " (";
var G__192865 = (function (){var G__192924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__192925 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192924,G__192925) : tailrecursion.hoplon.span.call(null,G__192924,G__192925));
})();
var G__192866 = " ";
var G__192867 = (function (){var G__192926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192927 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192926,G__192927) : tailrecursion.hoplon.span.call(null,G__192926,G__192927));
})();
var G__192868 = " ";
var G__192869 = (function (){var G__192928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192929 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192928,G__192929) : tailrecursion.hoplon.span.call(null,G__192928,G__192929));
})();
var G__192870 = "))\n(";
var G__192871 = (function (){var G__192930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__192931 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192930,G__192931) : tailrecursion.hoplon.span.call(null,G__192930,G__192931));
})();
var G__192872 = " ";
var G__192873 = (function (){var G__192932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192933 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192932,G__192933) : tailrecursion.hoplon.span.call(null,G__192932,G__192933));
})();
var G__192874 = ")\n";
var G__192875 = (function (){var G__192934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192935 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192934,G__192935) : tailrecursion.hoplon.span.call(null,G__192934,G__192935));
})();
var G__192876 = (function (){var G__192936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192937 = "/2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192936,G__192937) : tailrecursion.hoplon.span.call(null,G__192936,G__192937));
})();
var G__192877 = "\n\n(";
var G__192878 = (function (){var G__192938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__192939 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192938,G__192939) : tailrecursion.hoplon.span.call(null,G__192938,G__192939));
})();
var G__192879 = (function (){var G__192940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192941 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192940,G__192941) : tailrecursion.hoplon.span.call(null,G__192940,G__192941));
})();
var G__192880 = " (";
var G__192881 = (function (){var G__192942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__192943 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192942,G__192943) : tailrecursion.hoplon.span.call(null,G__192942,G__192943));
})();
var G__192882 = " ";
var G__192883 = (function (){var G__192944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192945 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192944,G__192945) : tailrecursion.hoplon.span.call(null,G__192944,G__192945));
})();
var G__192884 = " ";
var G__192885 = (function (){var G__192946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192947 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192946,G__192947) : tailrecursion.hoplon.span.call(null,G__192946,G__192947));
})();
var G__192886 = "))\n(";
var G__192887 = (function (){var G__192948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__192949 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192948,G__192949) : tailrecursion.hoplon.span.call(null,G__192948,G__192949));
})();
var G__192888 = " (";
var G__192889 = (function (){var G__192950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__192951 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192950,G__192951) : tailrecursion.hoplon.span.call(null,G__192950,G__192951));
})();
var G__192890 = " ";
var G__192891 = (function (){var G__192952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192953 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192952,G__192953) : tailrecursion.hoplon.span.call(null,G__192952,G__192953));
})();
var G__192892 = " ";
var G__192893 = (function (){var G__192954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192955 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192954,G__192955) : tailrecursion.hoplon.span.call(null,G__192954,G__192955));
})();
var G__192894 = "))\n";
var G__192895 = (function (){var G__192956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192957 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192956,G__192957) : tailrecursion.hoplon.span.call(null,G__192956,G__192957));
})();
var G__192896 = (function (){var G__192958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192959 = "/6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192958,G__192959) : tailrecursion.hoplon.span.call(null,G__192958,G__192959));
})();
var G__192897 = "\n\n(";
var G__192898 = (function (){var G__192960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__192961 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192960,G__192961) : tailrecursion.hoplon.span.call(null,G__192960,G__192961));
})();
var G__192899 = " (";
var G__192900 = (function (){var G__192962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__192963 = "mul-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192962,G__192963) : tailrecursion.hoplon.span.call(null,G__192962,G__192963));
})();
var G__192901 = " ";
var G__192902 = (function (){var G__192964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192965 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192964,G__192965) : tailrecursion.hoplon.span.call(null,G__192964,G__192965));
})();
var G__192903 = " ";
var G__192904 = (function (){var G__192966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192967 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192966,G__192967) : tailrecursion.hoplon.span.call(null,G__192966,G__192967));
})();
var G__192905 = "))\n";
var G__192906 = (function (){var G__192968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192969 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192968,G__192969) : tailrecursion.hoplon.span.call(null,G__192968,G__192969));
})();
var G__192907 = (function (){var G__192970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192971 = "/6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192970,G__192971) : tailrecursion.hoplon.span.call(null,G__192970,G__192971));
})();
var G__192908 = "\n\n(";
var G__192909 = (function (){var G__192972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__192973 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192972,G__192973) : tailrecursion.hoplon.span.call(null,G__192972,G__192973));
})();
var G__192910 = " (";
var G__192911 = (function (){var G__192974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__192975 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192974,G__192975) : tailrecursion.hoplon.span.call(null,G__192974,G__192975));
})();
var G__192912 = " ";
var G__192913 = (function (){var G__192976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192977 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192976,G__192977) : tailrecursion.hoplon.span.call(null,G__192976,G__192977));
})();
var G__192914 = " ";
var G__192915 = (function (){var G__192978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192979 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192978,G__192979) : tailrecursion.hoplon.span.call(null,G__192978,G__192979));
})();
var G__192916 = "))\n";
var G__192917 = (function (){var G__192980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__192981 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192980,G__192981) : tailrecursion.hoplon.span.call(null,G__192980,G__192981));
})();
var G__192918 = (function (){var G__192982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__192983 = "/9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__192982,G__192983) : tailrecursion.hoplon.span.call(null,G__192982,G__192983));
})();
var G__192919 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60(G__192860,G__192861,G__192862,G__192863,G__192864,G__192865,G__192866,G__192867,G__192868,G__192869,G__192870,G__192871,G__192872,G__192873,G__192874,G__192875,G__192876,G__192877,G__192878,G__192879,G__192880,G__192881,G__192882,G__192883,G__192884,G__192885,G__192886,G__192887,G__192888,G__192889,G__192890,G__192891,G__192892,G__192893,G__192894,G__192895,G__192896,G__192897,G__192898,G__192899,G__192900,G__192901,G__192902,G__192903,G__192904,G__192905,G__192906,G__192907,G__192908,G__192909,G__192910,G__192911,G__192912,G__192913,G__192914,G__192915,G__192916,G__192917,G__192918,G__192919) : tailrecursion.hoplon.pre.call(null,G__192860,G__192861,G__192862,G__192863,G__192864,G__192865,G__192866,G__192867,G__192868,G__192869,G__192870,G__192871,G__192872,G__192873,G__192874,G__192875,G__192876,G__192877,G__192878,G__192879,G__192880,G__192881,G__192882,G__192883,G__192884,G__192885,G__192886,G__192887,G__192888,G__192889,G__192890,G__192891,G__192892,G__192893,G__192894,G__192895,G__192896,G__192897,G__192898,G__192899,G__192900,G__192901,G__192902,G__192903,G__192904,G__192905,G__192906,G__192907,G__192908,G__192909,G__192910,G__192911,G__192912,G__192913,G__192914,G__192915,G__192916,G__192917,G__192918,G__192919));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__192858,G__192859) : tailrecursion.hoplon.div.call(null,G__192858,G__192859));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__192857) : tailrecursion.hoplon.div.call(null,G__192857));
})(),(function (){var G__192984 = cljs.core.PersistentArrayMap.EMPTY;
var G__192985 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As the final example shows, our rational-number implementation does not reduce rational numbers to lowest terms. We can rememdy this by changing ",(function (){var G__192986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__192987 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192986,G__192987) : tailrecursion.hoplon.markdown.code_node.call(null,G__192986,G__192987));
})(),". If we have a ",(function (){var G__192988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__192989 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192988,G__192989) : tailrecursion.hoplon.markdown.code_node.call(null,G__192988,G__192989));
})()," procedure like the one used in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/2/sub/5/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.5"], null)], 0))," that produces the greatest common divisor of two integers, we can use ",(function (){var G__192990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__192991 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__192990,G__192991) : tailrecursion.hoplon.markdown.code_node.call(null,G__192990,G__192991));
})()," to reduce the numerator and the denominator to lowest terms before constructing the pair:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__192984,G__192985) : tailrecursion.hoplon.markdown.para_node.call(null,G__192984,G__192985));
})(),(function (){var G__193057 = (function (){var G__193058 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__193059 = (function (){var G__193060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__193061 = "(";
var G__193062 = (function (){var G__193091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__193092 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193091,G__193092) : tailrecursion.hoplon.span.call(null,G__193091,G__193092));
})();
var G__193063 = (function (){var G__193093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193094 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193093,G__193094) : tailrecursion.hoplon.span.call(null,G__193093,G__193094));
})();
var G__193064 = " [";
var G__193065 = (function (){var G__193095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193096 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193095,G__193096) : tailrecursion.hoplon.span.call(null,G__193095,G__193096));
})();
var G__193066 = " ";
var G__193067 = (function (){var G__193097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193098 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193097,G__193098) : tailrecursion.hoplon.span.call(null,G__193097,G__193098));
})();
var G__193068 = "]\n  (";
var G__193069 = (function (){var G__193099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__193100 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193099,G__193100) : tailrecursion.hoplon.span.call(null,G__193099,G__193100));
})();
var G__193070 = "[";
var G__193071 = (function (){var G__193101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193102 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193101,G__193102) : tailrecursion.hoplon.span.call(null,G__193101,G__193102));
})();
var G__193072 = " (";
var G__193073 = (function (){var G__193103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__193104 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193103,G__193104) : tailrecursion.hoplon.span.call(null,G__193103,G__193104));
})();
var G__193074 = " ";
var G__193075 = (function (){var G__193105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193106 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193105,G__193106) : tailrecursion.hoplon.span.call(null,G__193105,G__193106));
})();
var G__193076 = " ";
var G__193077 = (function (){var G__193107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193108 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193107,G__193108) : tailrecursion.hoplon.span.call(null,G__193107,G__193108));
})();
var G__193078 = ")]\n    (";
var G__193079 = (function (){var G__193109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__193110 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193109,G__193110) : tailrecursion.hoplon.span.call(null,G__193109,G__193110));
})();
var G__193080 = "(";
var G__193081 = (function (){var G__193111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__193112 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193111,G__193112) : tailrecursion.hoplon.span.call(null,G__193111,G__193112));
})();
var G__193082 = (function (){var G__193113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193114 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193113,G__193114) : tailrecursion.hoplon.span.call(null,G__193113,G__193114));
})();
var G__193083 = " ";
var G__193084 = (function (){var G__193115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193116 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193115,G__193116) : tailrecursion.hoplon.span.call(null,G__193115,G__193116));
})();
var G__193085 = ") (";
var G__193086 = (function (){var G__193117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__193118 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193117,G__193118) : tailrecursion.hoplon.span.call(null,G__193117,G__193118));
})();
var G__193087 = (function (){var G__193119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193120 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193119,G__193120) : tailrecursion.hoplon.span.call(null,G__193119,G__193120));
})();
var G__193088 = " ";
var G__193089 = (function (){var G__193121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193122 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193121,G__193122) : tailrecursion.hoplon.span.call(null,G__193121,G__193122));
})();
var G__193090 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__193060,G__193061,G__193062,G__193063,G__193064,G__193065,G__193066,G__193067,G__193068,G__193069,G__193070,G__193071,G__193072,G__193073,G__193074,G__193075,G__193076,G__193077,G__193078,G__193079,G__193080,G__193081,G__193082,G__193083,G__193084,G__193085,G__193086,G__193087,G__193088,G__193089,G__193090) : tailrecursion.hoplon.pre.call(null,G__193060,G__193061,G__193062,G__193063,G__193064,G__193065,G__193066,G__193067,G__193068,G__193069,G__193070,G__193071,G__193072,G__193073,G__193074,G__193075,G__193076,G__193077,G__193078,G__193079,G__193080,G__193081,G__193082,G__193083,G__193084,G__193085,G__193086,G__193087,G__193088,G__193089,G__193090));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__193058,G__193059) : tailrecursion.hoplon.div.call(null,G__193058,G__193059));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__193057) : tailrecursion.hoplon.div.call(null,G__193057));
})(),(function (){var G__193123 = cljs.core.PersistentArrayMap.EMPTY;
var G__193124 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we have,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__193123,G__193124) : tailrecursion.hoplon.markdown.para_node.call(null,G__193123,G__193124));
})(),(function (){var G__193152 = (function (){var G__193153 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__193154 = (function (){var G__193155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__193156 = "(";
var G__193157 = (function (){var G__193168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__193169 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193168,G__193169) : tailrecursion.hoplon.span.call(null,G__193168,G__193169));
})();
var G__193158 = " (";
var G__193159 = (function (){var G__193170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__193171 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193170,G__193171) : tailrecursion.hoplon.span.call(null,G__193170,G__193171));
})();
var G__193160 = " ";
var G__193161 = (function (){var G__193172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193173 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193172,G__193173) : tailrecursion.hoplon.span.call(null,G__193172,G__193173));
})();
var G__193162 = " ";
var G__193163 = (function (){var G__193174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193175 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193174,G__193175) : tailrecursion.hoplon.span.call(null,G__193174,G__193175));
})();
var G__193164 = "))\n";
var G__193165 = (function (){var G__193176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__193177 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193176,G__193177) : tailrecursion.hoplon.span.call(null,G__193176,G__193177));
})();
var G__193166 = (function (){var G__193178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193179 = "/3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193178,G__193179) : tailrecursion.hoplon.span.call(null,G__193178,G__193179));
})();
var G__193167 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__193155,G__193156,G__193157,G__193158,G__193159,G__193160,G__193161,G__193162,G__193163,G__193164,G__193165,G__193166,G__193167) : tailrecursion.hoplon.pre.call(null,G__193155,G__193156,G__193157,G__193158,G__193159,G__193160,G__193161,G__193162,G__193163,G__193164,G__193165,G__193166,G__193167));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__193153,G__193154) : tailrecursion.hoplon.div.call(null,G__193153,G__193154));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__193152) : tailrecursion.hoplon.div.call(null,G__193152));
})(),(function (){var G__193180 = cljs.core.PersistentArrayMap.EMPTY;
var G__193181 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["as desired. This modification was accomplished by changing the constructor ",(function (){var G__193182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__193183 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193182,G__193183) : tailrecursion.hoplon.markdown.code_node.call(null,G__193182,G__193183));
})()," without changing any of the procedures (such as ",(function (){var G__193184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__193185 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193184,G__193185) : tailrecursion.hoplon.markdown.code_node.call(null,G__193184,G__193185));
})()," and ",(function (){var G__193186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mul-rat"], null);
var G__193187 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193186,G__193187) : tailrecursion.hoplon.markdown.code_node.call(null,G__193186,G__193187));
})(),") that implement the actual operations."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__193180,G__193181) : tailrecursion.hoplon.markdown.para_node.call(null,G__193180,G__193181));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_192454;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_192453;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_192452;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_192451;
}})()], 0));
var G__191112 = "";
var G__191113 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_193188 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_193189 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_193190 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_193191 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__193192 = cljs.core.PersistentArrayMap.EMPTY;
var G__193193 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a better version of ",(function (){var G__193194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__193195 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193194,G__193195) : tailrecursion.hoplon.markdown.code_node.call(null,G__193194,G__193195));
})()," that handles both positive and negative arguments. ",(function (){var G__193196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__193197 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193196,G__193197) : tailrecursion.hoplon.markdown.code_node.call(null,G__193196,G__193197));
})()," should normalize the sign so that if the rational number is positive, both the numerator and denominator are positive, and if the rational number is negative, only the numerator is negative."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__193192,G__193193) : tailrecursion.hoplon.markdown.para_node.call(null,G__193192,G__193193));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_193191;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_193190;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_193189;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_193188;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_193198 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_193199 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_193200 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_193201 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__193346 = (function (){var G__193347 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__193348 = (function (){var G__193349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__193350 = "(";
var G__193351 = (function (){var G__193419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__193420 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193419,G__193420) : tailrecursion.hoplon.span.call(null,G__193419,G__193420));
})();
var G__193352 = (function (){var G__193421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193422 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193421,G__193422) : tailrecursion.hoplon.span.call(null,G__193421,G__193422));
})();
var G__193353 = " [";
var G__193354 = (function (){var G__193423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193424 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193423,G__193424) : tailrecursion.hoplon.span.call(null,G__193423,G__193424));
})();
var G__193355 = " ";
var G__193356 = (function (){var G__193425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193426 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193425,G__193426) : tailrecursion.hoplon.span.call(null,G__193425,G__193426));
})();
var G__193357 = "]\n  (";
var G__193358 = (function (){var G__193427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__193428 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193427,G__193428) : tailrecursion.hoplon.span.call(null,G__193427,G__193428));
})();
var G__193359 = "[";
var G__193360 = (function (){var G__193429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193430 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193429,G__193430) : tailrecursion.hoplon.span.call(null,G__193429,G__193430));
})();
var G__193361 = " ";
var G__193362 = (function (){var G__193431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__193432 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193431,G__193432) : tailrecursion.hoplon.span.call(null,G__193431,G__193432));
})();
var G__193363 = "(";
var G__193364 = (function (){var G__193433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__193434 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193433,G__193434) : tailrecursion.hoplon.span.call(null,G__193433,G__193434));
})();
var G__193365 = "[";
var G__193366 = (function (){var G__193435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193436 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193435,G__193436) : tailrecursion.hoplon.span.call(null,G__193435,G__193436));
})();
var G__193367 = " (";
var G__193368 = (function (){var G__193437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__193438 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193437,G__193438) : tailrecursion.hoplon.span.call(null,G__193437,G__193438));
})();
var G__193369 = " ";
var G__193370 = (function (){var G__193439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193440 = "%1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193439,G__193440) : tailrecursion.hoplon.span.call(null,G__193439,G__193440));
})();
var G__193371 = " ";
var G__193372 = (function (){var G__193441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193442 = "%2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193441,G__193442) : tailrecursion.hoplon.span.call(null,G__193441,G__193442));
})();
var G__193373 = ")]\n                (";
var G__193374 = (function (){var G__193443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__193444 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193443,G__193444) : tailrecursion.hoplon.span.call(null,G__193443,G__193444));
})();
var G__193375 = "(";
var G__193376 = (function (){var G__193445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__193446 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193445,G__193446) : tailrecursion.hoplon.span.call(null,G__193445,G__193446));
})();
var G__193377 = (function (){var G__193447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193448 = "%1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193447,G__193448) : tailrecursion.hoplon.span.call(null,G__193447,G__193448));
})();
var G__193378 = " ";
var G__193379 = (function (){var G__193449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193450 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193449,G__193450) : tailrecursion.hoplon.span.call(null,G__193449,G__193450));
})();
var G__193380 = ") (";
var G__193381 = (function (){var G__193451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__193452 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193451,G__193452) : tailrecursion.hoplon.span.call(null,G__193451,G__193452));
})();
var G__193382 = (function (){var G__193453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193454 = "%2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193453,G__193454) : tailrecursion.hoplon.span.call(null,G__193453,G__193454));
})();
var G__193383 = " ";
var G__193384 = (function (){var G__193455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193456 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193455,G__193456) : tailrecursion.hoplon.span.call(null,G__193455,G__193456));
})();
var G__193385 = ")))]\n    (";
var G__193386 = (function (){var G__193457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__193458 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193457,G__193458) : tailrecursion.hoplon.span.call(null,G__193457,G__193458));
})();
var G__193387 = "(";
var G__193388 = (function (){var G__193459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__193460 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193459,G__193460) : tailrecursion.hoplon.span.call(null,G__193459,G__193460));
})();
var G__193389 = "(";
var G__193390 = (function (){var G__193461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__193462 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193461,G__193462) : tailrecursion.hoplon.span.call(null,G__193461,G__193462));
})();
var G__193391 = (function (){var G__193463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193464 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193463,G__193464) : tailrecursion.hoplon.span.call(null,G__193463,G__193464));
})();
var G__193392 = " ";
var G__193393 = (function (){var G__193465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193466 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193465,G__193466) : tailrecursion.hoplon.span.call(null,G__193465,G__193466));
})();
var G__193394 = ") ";
var G__193395 = (function (){var G__193467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__193468 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193467,G__193468) : tailrecursion.hoplon.span.call(null,G__193467,G__193468));
})();
var G__193396 = ")\n        (";
var G__193397 = (function (){var G__193469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__193470 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193469,G__193470) : tailrecursion.hoplon.span.call(null,G__193469,G__193470));
})();
var G__193398 = " (";
var G__193399 = (function (){var G__193471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__193472 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193471,G__193472) : tailrecursion.hoplon.span.call(null,G__193471,G__193472));
})();
var G__193400 = " ";
var G__193401 = (function (){var G__193473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193474 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193473,G__193474) : tailrecursion.hoplon.span.call(null,G__193473,G__193474));
})();
var G__193402 = ") (";
var G__193403 = (function (){var G__193475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__193476 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193475,G__193476) : tailrecursion.hoplon.span.call(null,G__193475,G__193476));
})();
var G__193404 = " ";
var G__193405 = (function (){var G__193477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193478 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193477,G__193478) : tailrecursion.hoplon.span.call(null,G__193477,G__193478));
})();
var G__193406 = "))\n        (";
var G__193407 = (function (){var G__193479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__193480 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193479,G__193480) : tailrecursion.hoplon.span.call(null,G__193479,G__193480));
})();
var G__193408 = " (";
var G__193409 = (function (){var G__193481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__193482 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193481,G__193482) : tailrecursion.hoplon.span.call(null,G__193481,G__193482));
})();
var G__193410 = "(";
var G__193411 = (function (){var G__193483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__193484 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193483,G__193484) : tailrecursion.hoplon.span.call(null,G__193483,G__193484));
})();
var G__193412 = " ";
var G__193413 = (function (){var G__193485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193486 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193485,G__193486) : tailrecursion.hoplon.span.call(null,G__193485,G__193486));
})();
var G__193414 = ")) (";
var G__193415 = (function (){var G__193487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__193488 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193487,G__193488) : tailrecursion.hoplon.span.call(null,G__193487,G__193488));
})();
var G__193416 = " ";
var G__193417 = (function (){var G__193489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193490 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193489,G__193490) : tailrecursion.hoplon.span.call(null,G__193489,G__193490));
})();
var G__193418 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$70 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$70(G__193349,G__193350,G__193351,G__193352,G__193353,G__193354,G__193355,G__193356,G__193357,G__193358,G__193359,G__193360,G__193361,G__193362,G__193363,G__193364,G__193365,G__193366,G__193367,G__193368,G__193369,G__193370,G__193371,G__193372,G__193373,G__193374,G__193375,G__193376,G__193377,G__193378,G__193379,G__193380,G__193381,G__193382,G__193383,G__193384,G__193385,G__193386,G__193387,G__193388,G__193389,G__193390,G__193391,G__193392,G__193393,G__193394,G__193395,G__193396,G__193397,G__193398,G__193399,G__193400,G__193401,G__193402,G__193403,G__193404,G__193405,G__193406,G__193407,G__193408,G__193409,G__193410,G__193411,G__193412,G__193413,G__193414,G__193415,G__193416,G__193417,G__193418) : tailrecursion.hoplon.pre.call(null,G__193349,G__193350,G__193351,G__193352,G__193353,G__193354,G__193355,G__193356,G__193357,G__193358,G__193359,G__193360,G__193361,G__193362,G__193363,G__193364,G__193365,G__193366,G__193367,G__193368,G__193369,G__193370,G__193371,G__193372,G__193373,G__193374,G__193375,G__193376,G__193377,G__193378,G__193379,G__193380,G__193381,G__193382,G__193383,G__193384,G__193385,G__193386,G__193387,G__193388,G__193389,G__193390,G__193391,G__193392,G__193393,G__193394,G__193395,G__193396,G__193397,G__193398,G__193399,G__193400,G__193401,G__193402,G__193403,G__193404,G__193405,G__193406,G__193407,G__193408,G__193409,G__193410,G__193411,G__193412,G__193413,G__193414,G__193415,G__193416,G__193417,G__193418));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__193347,G__193348) : tailrecursion.hoplon.div.call(null,G__193347,G__193348));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__193346) : tailrecursion.hoplon.div.call(null,G__193346));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_193201;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_193200;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_193199;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_193198;
}})()], 0))], 0))], 0));
var G__191114 = "";
var G__191115 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Abstraction Barriers"], null),(function (){var _STAR_references_STAR_193491 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_193492 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_193493 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_193494 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__193495 = cljs.core.PersistentArrayMap.EMPTY;
var G__193496 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Before continuing with more examples of compound data and data abstraction, let us consider some of the issues raised by the rational-number example. We defined the rational-number operations in terms of a constructor ",(function (){var G__193497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__193498 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193497,G__193498) : tailrecursion.hoplon.markdown.code_node.call(null,G__193497,G__193498));
})()," and selectors ",(function (){var G__193499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__193500 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193499,G__193500) : tailrecursion.hoplon.markdown.code_node.call(null,G__193499,G__193500));
})()," and ",(function (){var G__193501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__193502 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193501,G__193502) : tailrecursion.hoplon.markdown.code_node.call(null,G__193501,G__193502));
})(),". In general, the underlying idea of data abstraction is to identify for each type of data object the basic set of operations in terms of which all manipulations op data objects of that type will be expressed, and then to use only those operations in manipulating the data."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__193495,G__193496) : tailrecursion.hoplon.markdown.para_node.call(null,G__193495,G__193496));
})(),(function (){var G__193503 = cljs.core.PersistentArrayMap.EMPTY;
var G__193504 = new cljs.core.PersistentVector(null, 27, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can envision the structure of the rational-number system as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/fig/1/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 2.1"], null)], 0)),". The horizontal lines represent ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstraction barriers"], null)], 0))," that isolate different ",(function (){var G__193505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__193506 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["levels"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__193505,G__193506) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__193505,G__193506));
})()," of the system. At each level, the barrier separates the programs (above) that use th edata abstraction from the programs (below) that implement the data abstraction. Programs that use rational numbers manipulate them solely in terms of the procedures supplied ",(function (){var G__193507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__193508 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["for public use"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__193507,G__193508) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__193507,G__193508));
})()," by the rational-number package: ",(function (){var G__193509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__193510 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193509,G__193510) : tailrecursion.hoplon.markdown.code_node.call(null,G__193509,G__193510));
})(),", ",(function (){var G__193511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-rat"], null);
var G__193512 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193511,G__193512) : tailrecursion.hoplon.markdown.code_node.call(null,G__193511,G__193512));
})(),", ",(function (){var G__193513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mul-rat"], null);
var G__193514 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193513,G__193514) : tailrecursion.hoplon.markdown.code_node.call(null,G__193513,G__193514));
})(),", ",(function (){var G__193515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"div-rat"], null);
var G__193516 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193515,G__193516) : tailrecursion.hoplon.markdown.code_node.call(null,G__193515,G__193516));
})(),", ",(function (){var G__193517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__193518 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193517,G__193518) : tailrecursion.hoplon.markdown.code_node.call(null,G__193517,G__193518));
})(),", and ",(function (){var G__193519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__193520 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193519,G__193520) : tailrecursion.hoplon.markdown.code_node.call(null,G__193519,G__193520));
})(),", which themselves are implemented in terms of lists. The details of how lists are implemented are irrelevant to the rest of the rational-number package so long as lists can be manipulated by the use of ",(function (){var G__193521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__193522 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193521,G__193522) : tailrecursion.hoplon.markdown.code_node.call(null,G__193521,G__193522));
})(),", ",(function (){var G__193523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__193524 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193523,G__193524) : tailrecursion.hoplon.markdown.code_node.call(null,G__193523,G__193524));
})(),", and ",(function (){var G__193525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__193526 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193525,G__193526) : tailrecursion.hoplon.markdown.code_node.call(null,G__193525,G__193526));
})(),". In effect, procedures at each level are the interfaces that define the abstraction barriers and connect the different levels."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__193503,G__193504) : tailrecursion.hoplon.markdown.para_node.call(null,G__193503,G__193504));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_193494;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_193493;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_193492;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_193491;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"Data-abstraction barriers in the rational-number package."], null)], 0)),"",(function (){var _STAR_references_STAR_193527 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_193528 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_193529 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_193530 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__193531 = cljs.core.PersistentArrayMap.EMPTY;
var G__193532 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This simple idea has many advantages. One advantage is that it makes programs much easier to maintain and modify. Any complex data structure can be represented in a variety of ways within primitive data structures provided by a programming language. Of course, the choice of representation influences the programs that operate on it; thus, if the representation were to be changed at some later time, all such programs might have to be modified accordingly. This task could be time-consuming and expensive in the vase of large programs unless the dependence on the representation were to be confined by design to a very few program modules."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__193531,G__193532) : tailrecursion.hoplon.markdown.para_node.call(null,G__193531,G__193532));
})(),(function (){var G__193533 = cljs.core.PersistentArrayMap.EMPTY;
var G__193534 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For example, an alternate way to address the problem of reducing rational numbers to lowest terms is to perform the reduction whenever we acces the parts of a rational number, rather than when we construct it. This leads to different constructor and selector procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__193533,G__193534) : tailrecursion.hoplon.markdown.para_node.call(null,G__193533,G__193534));
})(),(function (){var G__193669 = (function (){var G__193670 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__193671 = (function (){var G__193672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__193673 = "(";
var G__193674 = (function (){var G__193734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__193735 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193734,G__193735) : tailrecursion.hoplon.span.call(null,G__193734,G__193735));
})();
var G__193675 = (function (){var G__193736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193737 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193736,G__193737) : tailrecursion.hoplon.span.call(null,G__193736,G__193737));
})();
var G__193676 = " [";
var G__193677 = (function (){var G__193738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193739 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193738,G__193739) : tailrecursion.hoplon.span.call(null,G__193738,G__193739));
})();
var G__193678 = " ";
var G__193679 = (function (){var G__193740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193741 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193740,G__193741) : tailrecursion.hoplon.span.call(null,G__193740,G__193741));
})();
var G__193680 = "]\n  (";
var G__193681 = (function (){var G__193742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__193743 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193742,G__193743) : tailrecursion.hoplon.span.call(null,G__193742,G__193743));
})();
var G__193682 = (function (){var G__193744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193745 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193744,G__193745) : tailrecursion.hoplon.span.call(null,G__193744,G__193745));
})();
var G__193683 = " ";
var G__193684 = (function (){var G__193746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193747 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193746,G__193747) : tailrecursion.hoplon.span.call(null,G__193746,G__193747));
})();
var G__193685 = "))\n(";
var G__193686 = (function (){var G__193748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__193749 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193748,G__193749) : tailrecursion.hoplon.span.call(null,G__193748,G__193749));
})();
var G__193687 = (function (){var G__193750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193751 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193750,G__193751) : tailrecursion.hoplon.span.call(null,G__193750,G__193751));
})();
var G__193688 = " [";
var G__193689 = (function (){var G__193752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193753 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193752,G__193753) : tailrecursion.hoplon.span.call(null,G__193752,G__193753));
})();
var G__193690 = "]\n  (";
var G__193691 = (function (){var G__193754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__193755 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193754,G__193755) : tailrecursion.hoplon.span.call(null,G__193754,G__193755));
})();
var G__193692 = "[";
var G__193693 = (function (){var G__193756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193757 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193756,G__193757) : tailrecursion.hoplon.span.call(null,G__193756,G__193757));
})();
var G__193694 = " (";
var G__193695 = (function (){var G__193758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__193759 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193758,G__193759) : tailrecursion.hoplon.span.call(null,G__193758,G__193759));
})();
var G__193696 = " (";
var G__193697 = (function (){var G__193760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__193761 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193760,G__193761) : tailrecursion.hoplon.span.call(null,G__193760,G__193761));
})();
var G__193698 = (function (){var G__193762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193763 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193762,G__193763) : tailrecursion.hoplon.span.call(null,G__193762,G__193763));
})();
var G__193699 = ") (";
var G__193700 = (function (){var G__193764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__193765 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193764,G__193765) : tailrecursion.hoplon.span.call(null,G__193764,G__193765));
})();
var G__193701 = (function (){var G__193766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193767 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193766,G__193767) : tailrecursion.hoplon.span.call(null,G__193766,G__193767));
})();
var G__193702 = "))]\n    (";
var G__193703 = (function (){var G__193768 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__193769 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193768,G__193769) : tailrecursion.hoplon.span.call(null,G__193768,G__193769));
})();
var G__193704 = "(";
var G__193705 = (function (){var G__193770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__193771 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193770,G__193771) : tailrecursion.hoplon.span.call(null,G__193770,G__193771));
})();
var G__193706 = (function (){var G__193772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193773 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193772,G__193773) : tailrecursion.hoplon.span.call(null,G__193772,G__193773));
})();
var G__193707 = ") ";
var G__193708 = (function (){var G__193774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193775 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193774,G__193775) : tailrecursion.hoplon.span.call(null,G__193774,G__193775));
})();
var G__193709 = ")))\n(";
var G__193710 = (function (){var G__193776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__193777 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193776,G__193777) : tailrecursion.hoplon.span.call(null,G__193776,G__193777));
})();
var G__193711 = (function (){var G__193778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193779 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193778,G__193779) : tailrecursion.hoplon.span.call(null,G__193778,G__193779));
})();
var G__193712 = " [";
var G__193713 = (function (){var G__193780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193781 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193780,G__193781) : tailrecursion.hoplon.span.call(null,G__193780,G__193781));
})();
var G__193714 = "]\n  (";
var G__193715 = (function (){var G__193782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__193783 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193782,G__193783) : tailrecursion.hoplon.span.call(null,G__193782,G__193783));
})();
var G__193716 = "[";
var G__193717 = (function (){var G__193784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193785 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193784,G__193785) : tailrecursion.hoplon.span.call(null,G__193784,G__193785));
})();
var G__193718 = " (";
var G__193719 = (function (){var G__193786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__193787 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193786,G__193787) : tailrecursion.hoplon.span.call(null,G__193786,G__193787));
})();
var G__193720 = " (";
var G__193721 = (function (){var G__193788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__193789 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193788,G__193789) : tailrecursion.hoplon.span.call(null,G__193788,G__193789));
})();
var G__193722 = (function (){var G__193790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193791 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193790,G__193791) : tailrecursion.hoplon.span.call(null,G__193790,G__193791));
})();
var G__193723 = ") (";
var G__193724 = (function (){var G__193792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__193793 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193792,G__193793) : tailrecursion.hoplon.span.call(null,G__193792,G__193793));
})();
var G__193725 = (function (){var G__193794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193795 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193794,G__193795) : tailrecursion.hoplon.span.call(null,G__193794,G__193795));
})();
var G__193726 = "))]\n    (";
var G__193727 = (function (){var G__193796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__193797 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193796,G__193797) : tailrecursion.hoplon.span.call(null,G__193796,G__193797));
})();
var G__193728 = "(";
var G__193729 = (function (){var G__193798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__193799 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193798,G__193799) : tailrecursion.hoplon.span.call(null,G__193798,G__193799));
})();
var G__193730 = (function (){var G__193800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193801 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193800,G__193801) : tailrecursion.hoplon.span.call(null,G__193800,G__193801));
})();
var G__193731 = ") ";
var G__193732 = (function (){var G__193802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193803 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193802,G__193803) : tailrecursion.hoplon.span.call(null,G__193802,G__193803));
})();
var G__193733 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$62 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$62(G__193672,G__193673,G__193674,G__193675,G__193676,G__193677,G__193678,G__193679,G__193680,G__193681,G__193682,G__193683,G__193684,G__193685,G__193686,G__193687,G__193688,G__193689,G__193690,G__193691,G__193692,G__193693,G__193694,G__193695,G__193696,G__193697,G__193698,G__193699,G__193700,G__193701,G__193702,G__193703,G__193704,G__193705,G__193706,G__193707,G__193708,G__193709,G__193710,G__193711,G__193712,G__193713,G__193714,G__193715,G__193716,G__193717,G__193718,G__193719,G__193720,G__193721,G__193722,G__193723,G__193724,G__193725,G__193726,G__193727,G__193728,G__193729,G__193730,G__193731,G__193732,G__193733) : tailrecursion.hoplon.pre.call(null,G__193672,G__193673,G__193674,G__193675,G__193676,G__193677,G__193678,G__193679,G__193680,G__193681,G__193682,G__193683,G__193684,G__193685,G__193686,G__193687,G__193688,G__193689,G__193690,G__193691,G__193692,G__193693,G__193694,G__193695,G__193696,G__193697,G__193698,G__193699,G__193700,G__193701,G__193702,G__193703,G__193704,G__193705,G__193706,G__193707,G__193708,G__193709,G__193710,G__193711,G__193712,G__193713,G__193714,G__193715,G__193716,G__193717,G__193718,G__193719,G__193720,G__193721,G__193722,G__193723,G__193724,G__193725,G__193726,G__193727,G__193728,G__193729,G__193730,G__193731,G__193732,G__193733));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__193670,G__193671) : tailrecursion.hoplon.div.call(null,G__193670,G__193671));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__193669) : tailrecursion.hoplon.div.call(null,G__193669));
})(),(function (){var G__193804 = cljs.core.PersistentArrayMap.EMPTY;
var G__193805 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The difference between this implementation and the previous one lies in when we compute the ",(function (){var G__193806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__193807 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193806,G__193807) : tailrecursion.hoplon.markdown.code_node.call(null,G__193806,G__193807));
})(),". If in our typical use of rational numbers we access the numerators and denominators of the same rational numbers many times, it would be preferable to compute the ",(function (){var G__193808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__193809 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193808,G__193809) : tailrecursion.hoplon.markdown.code_node.call(null,G__193808,G__193809));
})()," when the rational numbers are constructed. If not, we may be better off waiting until access time to compute the ",(function (){var G__193810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__193811 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193810,G__193811) : tailrecursion.hoplon.markdown.code_node.call(null,G__193810,G__193811));
})(),". In any case, when we change from one representation to the other, the procedures ",(function (){var G__193812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__193813 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193812,G__193813) : tailrecursion.hoplon.markdown.code_node.call(null,G__193812,G__193813));
})(),", ",(function (){var G__193814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-rat"], null);
var G__193815 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193814,G__193815) : tailrecursion.hoplon.markdown.code_node.call(null,G__193814,G__193815));
})()," and so on do not have to be modified at all."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__193804,G__193805) : tailrecursion.hoplon.markdown.para_node.call(null,G__193804,G__193805));
})(),(function (){var G__193816 = cljs.core.PersistentArrayMap.EMPTY;
var G__193817 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Constraining the dependence on the representation to a few interface procedures helps us design programs as well as modify them, because it allows us to maintain the flexibility to consider alternate implementations. To continue with our simple example, suppose we are designing a rational-number package and we can",(function (){var G__193818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__193819 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__193818,G__193819) : tailrecursion.hoplon.markdown.simple_node.call(null,G__193818,G__193819));
})(),"t decide initially whether to perform the ",(function (){var G__193820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__193821 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193820,G__193821) : tailrecursion.hoplon.markdown.code_node.call(null,G__193820,G__193821));
})()," at construction time or at selection time. The data-abstraction methodology gives us a way to defer that decision without losing the ability to make progress on the rest of the system."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__193816,G__193817) : tailrecursion.hoplon.markdown.para_node.call(null,G__193816,G__193817));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_193530;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_193529;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_193528;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_193527;
}})()], 0));
var G__191116 = "";
var G__191117 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_193822 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_193823 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_193824 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_193825 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__193826 = cljs.core.PersistentArrayMap.EMPTY;
var G__193827 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the problem of representing line segments in a plane. Each segment is represented as a pair of points: a starting point and an ending point. Define a constructor ",(function (){var G__193828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-segment"], null);
var G__193829 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193828,G__193829) : tailrecursion.hoplon.markdown.code_node.call(null,G__193828,G__193829));
})()," and selectors ",(function (){var G__193830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"start-segment"], null);
var G__193831 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193830,G__193831) : tailrecursion.hoplon.markdown.code_node.call(null,G__193830,G__193831));
})()," and ",(function (){var G__193832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"end-segment"], null);
var G__193833 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193832,G__193833) : tailrecursion.hoplon.markdown.code_node.call(null,G__193832,G__193833));
})()," that define the representation of segments in terms of points. Furthermore, a point can be represented as a pair of numbers: the \\(x\\) coordinate and the \\(y\\) coordinate. Accordingly, specify a constructor ",(function (){var G__193834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-point"], null);
var G__193835 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193834,G__193835) : tailrecursion.hoplon.markdown.code_node.call(null,G__193834,G__193835));
})()," and selectors ",(function (){var G__193836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x-point"], null);
var G__193837 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193836,G__193837) : tailrecursion.hoplon.markdown.code_node.call(null,G__193836,G__193837));
})()," and ",(function (){var G__193838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y-point"], null);
var G__193839 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193838,G__193839) : tailrecursion.hoplon.markdown.code_node.call(null,G__193838,G__193839));
})()," that define this representation. Finally, using your selectors and constructors, define a procedure ",(function (){var G__193840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"midpoint-segment"], null);
var G__193841 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__193840,G__193841) : tailrecursion.hoplon.markdown.code_node.call(null,G__193840,G__193841));
})()," that takes a line segment as argument and returns its midpoint (the point whose coordinates are the average of the coordinates of the endpoints). To try your procedures, you",(function (){var G__193842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__193843 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__193842,G__193843) : tailrecursion.hoplon.markdown.simple_node.call(null,G__193842,G__193843));
})(),"ll need a way to print points:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__193826,G__193827) : tailrecursion.hoplon.markdown.para_node.call(null,G__193826,G__193827));
})(),(function (){var G__193890 = (function (){var G__193891 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__193892 = (function (){var G__193893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__193894 = "(";
var G__193895 = (function (){var G__193915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__193916 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193915,G__193916) : tailrecursion.hoplon.span.call(null,G__193915,G__193916));
})();
var G__193896 = (function (){var G__193917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193918 = "print-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193917,G__193918) : tailrecursion.hoplon.span.call(null,G__193917,G__193918));
})();
var G__193897 = " [";
var G__193898 = (function (){var G__193919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193920 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193919,G__193920) : tailrecursion.hoplon.span.call(null,G__193919,G__193920));
})();
var G__193899 = "]\n  (";
var G__193900 = (function (){var G__193921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__193922 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193921,G__193922) : tailrecursion.hoplon.span.call(null,G__193921,G__193922));
})();
var G__193901 = (function (){var G__193923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__193924 = "\"(\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193923,G__193924) : tailrecursion.hoplon.span.call(null,G__193923,G__193924));
})();
var G__193902 = " (";
var G__193903 = (function (){var G__193925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__193926 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193925,G__193926) : tailrecursion.hoplon.span.call(null,G__193925,G__193926));
})();
var G__193904 = " ";
var G__193905 = (function (){var G__193927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193928 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193927,G__193928) : tailrecursion.hoplon.span.call(null,G__193927,G__193928));
})();
var G__193906 = ") ";
var G__193907 = (function (){var G__193929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__193930 = "\",\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193929,G__193930) : tailrecursion.hoplon.span.call(null,G__193929,G__193930));
})();
var G__193908 = " (";
var G__193909 = (function (){var G__193931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__193932 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193931,G__193932) : tailrecursion.hoplon.span.call(null,G__193931,G__193932));
})();
var G__193910 = " ";
var G__193911 = (function (){var G__193933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__193934 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193933,G__193934) : tailrecursion.hoplon.span.call(null,G__193933,G__193934));
})();
var G__193912 = ") ";
var G__193913 = (function (){var G__193935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__193936 = "\")\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__193935,G__193936) : tailrecursion.hoplon.span.call(null,G__193935,G__193936));
})();
var G__193914 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__193893,G__193894,G__193895,G__193896,G__193897,G__193898,G__193899,G__193900,G__193901,G__193902,G__193903,G__193904,G__193905,G__193906,G__193907,G__193908,G__193909,G__193910,G__193911,G__193912,G__193913,G__193914) : tailrecursion.hoplon.pre.call(null,G__193893,G__193894,G__193895,G__193896,G__193897,G__193898,G__193899,G__193900,G__193901,G__193902,G__193903,G__193904,G__193905,G__193906,G__193907,G__193908,G__193909,G__193910,G__193911,G__193912,G__193913,G__193914));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__193891,G__193892) : tailrecursion.hoplon.div.call(null,G__193891,G__193892));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__193890) : tailrecursion.hoplon.div.call(null,G__193890));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_193825;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_193824;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_193823;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_193822;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_193937 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_193938 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_193939 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_193940 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__194069 = (function (){var G__194070 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__194071 = (function (){var G__194072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__194073 = "(";
var G__194074 = (function (){var G__194130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194131 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194130,G__194131) : tailrecursion.hoplon.span.call(null,G__194130,G__194131));
})();
var G__194075 = (function (){var G__194132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194133 = "make-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194132,G__194133) : tailrecursion.hoplon.span.call(null,G__194132,G__194133));
})();
var G__194076 = " [";
var G__194077 = (function (){var G__194134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194135 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194134,G__194135) : tailrecursion.hoplon.span.call(null,G__194134,G__194135));
})();
var G__194078 = " ";
var G__194079 = (function (){var G__194136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194137 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194136,G__194137) : tailrecursion.hoplon.span.call(null,G__194136,G__194137));
})();
var G__194080 = "]\n  (";
var G__194081 = (function (){var G__194138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194139 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194138,G__194139) : tailrecursion.hoplon.span.call(null,G__194138,G__194139));
})();
var G__194082 = (function (){var G__194140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194141 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194140,G__194141) : tailrecursion.hoplon.span.call(null,G__194140,G__194141));
})();
var G__194083 = " ";
var G__194084 = (function (){var G__194142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194143 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194142,G__194143) : tailrecursion.hoplon.span.call(null,G__194142,G__194143));
})();
var G__194085 = "))\n(";
var G__194086 = (function (){var G__194144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194145 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194144,G__194145) : tailrecursion.hoplon.span.call(null,G__194144,G__194145));
})();
var G__194087 = (function (){var G__194146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194147 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194146,G__194147) : tailrecursion.hoplon.span.call(null,G__194146,G__194147));
})();
var G__194088 = " [";
var G__194089 = (function (){var G__194148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194149 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194148,G__194149) : tailrecursion.hoplon.span.call(null,G__194148,G__194149));
})();
var G__194090 = "]\n  (";
var G__194091 = (function (){var G__194150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194151 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194150,G__194151) : tailrecursion.hoplon.span.call(null,G__194150,G__194151));
})();
var G__194092 = (function (){var G__194152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194153 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194152,G__194153) : tailrecursion.hoplon.span.call(null,G__194152,G__194153));
})();
var G__194093 = "))\n(";
var G__194094 = (function (){var G__194154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194155 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194154,G__194155) : tailrecursion.hoplon.span.call(null,G__194154,G__194155));
})();
var G__194095 = (function (){var G__194156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194157 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194156,G__194157) : tailrecursion.hoplon.span.call(null,G__194156,G__194157));
})();
var G__194096 = " [";
var G__194097 = (function (){var G__194158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194159 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194158,G__194159) : tailrecursion.hoplon.span.call(null,G__194158,G__194159));
})();
var G__194098 = "]\n  (";
var G__194099 = (function (){var G__194160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194161 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194160,G__194161) : tailrecursion.hoplon.span.call(null,G__194160,G__194161));
})();
var G__194100 = (function (){var G__194162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194163 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194162,G__194163) : tailrecursion.hoplon.span.call(null,G__194162,G__194163));
})();
var G__194101 = "))\n(";
var G__194102 = (function (){var G__194164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194165 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194164,G__194165) : tailrecursion.hoplon.span.call(null,G__194164,G__194165));
})();
var G__194103 = (function (){var G__194166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194167 = "make-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194166,G__194167) : tailrecursion.hoplon.span.call(null,G__194166,G__194167));
})();
var G__194104 = " [";
var G__194105 = (function (){var G__194168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194169 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194168,G__194169) : tailrecursion.hoplon.span.call(null,G__194168,G__194169));
})();
var G__194106 = " ";
var G__194107 = (function (){var G__194170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194171 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194170,G__194171) : tailrecursion.hoplon.span.call(null,G__194170,G__194171));
})();
var G__194108 = "]\n  (";
var G__194109 = (function (){var G__194172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194173 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194172,G__194173) : tailrecursion.hoplon.span.call(null,G__194172,G__194173));
})();
var G__194110 = (function (){var G__194174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194175 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194174,G__194175) : tailrecursion.hoplon.span.call(null,G__194174,G__194175));
})();
var G__194111 = " ";
var G__194112 = (function (){var G__194176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194177 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194176,G__194177) : tailrecursion.hoplon.span.call(null,G__194176,G__194177));
})();
var G__194113 = "))\n(";
var G__194114 = (function (){var G__194178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194179 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194178,G__194179) : tailrecursion.hoplon.span.call(null,G__194178,G__194179));
})();
var G__194115 = (function (){var G__194180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194181 = "start-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194180,G__194181) : tailrecursion.hoplon.span.call(null,G__194180,G__194181));
})();
var G__194116 = " [";
var G__194117 = (function (){var G__194182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194183 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194182,G__194183) : tailrecursion.hoplon.span.call(null,G__194182,G__194183));
})();
var G__194118 = "]\n  (";
var G__194119 = (function (){var G__194184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194185 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194184,G__194185) : tailrecursion.hoplon.span.call(null,G__194184,G__194185));
})();
var G__194120 = (function (){var G__194186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194187 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194186,G__194187) : tailrecursion.hoplon.span.call(null,G__194186,G__194187));
})();
var G__194121 = "))\n(";
var G__194122 = (function (){var G__194188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194189 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194188,G__194189) : tailrecursion.hoplon.span.call(null,G__194188,G__194189));
})();
var G__194123 = (function (){var G__194190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194191 = "end-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194190,G__194191) : tailrecursion.hoplon.span.call(null,G__194190,G__194191));
})();
var G__194124 = " [";
var G__194125 = (function (){var G__194192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194193 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194192,G__194193) : tailrecursion.hoplon.span.call(null,G__194192,G__194193));
})();
var G__194126 = "]\n  (";
var G__194127 = (function (){var G__194194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194195 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194194,G__194195) : tailrecursion.hoplon.span.call(null,G__194194,G__194195));
})();
var G__194128 = (function (){var G__194196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194197 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194196,G__194197) : tailrecursion.hoplon.span.call(null,G__194196,G__194197));
})();
var G__194129 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__194072,G__194073,G__194074,G__194075,G__194076,G__194077,G__194078,G__194079,G__194080,G__194081,G__194082,G__194083,G__194084,G__194085,G__194086,G__194087,G__194088,G__194089,G__194090,G__194091,G__194092,G__194093,G__194094,G__194095,G__194096,G__194097,G__194098,G__194099,G__194100,G__194101,G__194102,G__194103,G__194104,G__194105,G__194106,G__194107,G__194108,G__194109,G__194110,G__194111,G__194112,G__194113,G__194114,G__194115,G__194116,G__194117,G__194118,G__194119,G__194120,G__194121,G__194122,G__194123,G__194124,G__194125,G__194126,G__194127,G__194128,G__194129) : tailrecursion.hoplon.pre.call(null,G__194072,G__194073,G__194074,G__194075,G__194076,G__194077,G__194078,G__194079,G__194080,G__194081,G__194082,G__194083,G__194084,G__194085,G__194086,G__194087,G__194088,G__194089,G__194090,G__194091,G__194092,G__194093,G__194094,G__194095,G__194096,G__194097,G__194098,G__194099,G__194100,G__194101,G__194102,G__194103,G__194104,G__194105,G__194106,G__194107,G__194108,G__194109,G__194110,G__194111,G__194112,G__194113,G__194114,G__194115,G__194116,G__194117,G__194118,G__194119,G__194120,G__194121,G__194122,G__194123,G__194124,G__194125,G__194126,G__194127,G__194128,G__194129));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__194070,G__194071) : tailrecursion.hoplon.div.call(null,G__194070,G__194071));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__194069) : tailrecursion.hoplon.div.call(null,G__194069));
})(),(function (){var G__194198 = cljs.core.PersistentArrayMap.EMPTY;
var G__194199 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Once we have those,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194198,G__194199) : tailrecursion.hoplon.markdown.para_node.call(null,G__194198,G__194199));
})(),(function (){var G__194319 = (function (){var G__194320 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__194321 = (function (){var G__194322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__194323 = "(";
var G__194324 = (function (){var G__194381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194382 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194381,G__194382) : tailrecursion.hoplon.span.call(null,G__194381,G__194382));
})();
var G__194325 = (function (){var G__194383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194384 = "midpoint-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194383,G__194384) : tailrecursion.hoplon.span.call(null,G__194383,G__194384));
})();
var G__194326 = " [";
var G__194327 = (function (){var G__194385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194386 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194385,G__194386) : tailrecursion.hoplon.span.call(null,G__194385,G__194386));
})();
var G__194328 = "]\n  (";
var G__194329 = (function (){var G__194387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194388 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194387,G__194388) : tailrecursion.hoplon.span.call(null,G__194387,G__194388));
})();
var G__194330 = "[";
var G__194331 = (function (){var G__194389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194390 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194389,G__194390) : tailrecursion.hoplon.span.call(null,G__194389,G__194390));
})();
var G__194332 = "  (";
var G__194333 = (function (){var G__194391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194392 = "start-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194391,G__194392) : tailrecursion.hoplon.span.call(null,G__194391,G__194392));
})();
var G__194334 = " ";
var G__194335 = (function (){var G__194393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194394 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194393,G__194394) : tailrecursion.hoplon.span.call(null,G__194393,G__194394));
})();
var G__194336 = ")\n        ";
var G__194337 = (function (){var G__194395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194396 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194395,G__194396) : tailrecursion.hoplon.span.call(null,G__194395,G__194396));
})();
var G__194338 = "  (";
var G__194339 = (function (){var G__194397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194398 = "end-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194397,G__194398) : tailrecursion.hoplon.span.call(null,G__194397,G__194398));
})();
var G__194340 = " ";
var G__194341 = (function (){var G__194399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194400 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194399,G__194400) : tailrecursion.hoplon.span.call(null,G__194399,G__194400));
})();
var G__194342 = ")\n        ";
var G__194343 = (function (){var G__194401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194402 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194401,G__194402) : tailrecursion.hoplon.span.call(null,G__194401,G__194402));
})();
var G__194344 = " (";
var G__194345 = (function (){var G__194403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194404 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194403,G__194404) : tailrecursion.hoplon.span.call(null,G__194403,G__194404));
})();
var G__194346 = " ";
var G__194347 = (function (){var G__194405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194406 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194405,G__194406) : tailrecursion.hoplon.span.call(null,G__194405,G__194406));
})();
var G__194348 = ")\n        ";
var G__194349 = (function (){var G__194407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194408 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194407,G__194408) : tailrecursion.hoplon.span.call(null,G__194407,G__194408));
})();
var G__194350 = " (";
var G__194351 = (function (){var G__194409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194410 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194409,G__194410) : tailrecursion.hoplon.span.call(null,G__194409,G__194410));
})();
var G__194352 = " ";
var G__194353 = (function (){var G__194411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194412 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194411,G__194412) : tailrecursion.hoplon.span.call(null,G__194411,G__194412));
})();
var G__194354 = ")\n        ";
var G__194355 = (function (){var G__194413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194414 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194413,G__194414) : tailrecursion.hoplon.span.call(null,G__194413,G__194414));
})();
var G__194356 = " (";
var G__194357 = (function (){var G__194415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194416 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194415,G__194416) : tailrecursion.hoplon.span.call(null,G__194415,G__194416));
})();
var G__194358 = " ";
var G__194359 = (function (){var G__194417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194418 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194417,G__194418) : tailrecursion.hoplon.span.call(null,G__194417,G__194418));
})();
var G__194360 = ")\n        ";
var G__194361 = (function (){var G__194419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194420 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194419,G__194420) : tailrecursion.hoplon.span.call(null,G__194419,G__194420));
})();
var G__194362 = " (";
var G__194363 = (function (){var G__194421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194422 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194421,G__194422) : tailrecursion.hoplon.span.call(null,G__194421,G__194422));
})();
var G__194364 = " ";
var G__194365 = (function (){var G__194423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194424 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194423,G__194424) : tailrecursion.hoplon.span.call(null,G__194423,G__194424));
})();
var G__194366 = ")]\n    (";
var G__194367 = (function (){var G__194425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194426 = "make-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194425,G__194426) : tailrecursion.hoplon.span.call(null,G__194425,G__194426));
})();
var G__194368 = " (";
var G__194369 = (function (){var G__194427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194428 = "average";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194427,G__194428) : tailrecursion.hoplon.span.call(null,G__194427,G__194428));
})();
var G__194370 = " ";
var G__194371 = (function (){var G__194429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194430 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194429,G__194430) : tailrecursion.hoplon.span.call(null,G__194429,G__194430));
})();
var G__194372 = " ";
var G__194373 = (function (){var G__194431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194432 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194431,G__194432) : tailrecursion.hoplon.span.call(null,G__194431,G__194432));
})();
var G__194374 = ") (";
var G__194375 = (function (){var G__194433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194434 = "average";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194433,G__194434) : tailrecursion.hoplon.span.call(null,G__194433,G__194434));
})();
var G__194376 = " ";
var G__194377 = (function (){var G__194435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194436 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194435,G__194436) : tailrecursion.hoplon.span.call(null,G__194435,G__194436));
})();
var G__194378 = " ";
var G__194379 = (function (){var G__194437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194438 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194437,G__194438) : tailrecursion.hoplon.span.call(null,G__194437,G__194438));
})();
var G__194380 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59(G__194322,G__194323,G__194324,G__194325,G__194326,G__194327,G__194328,G__194329,G__194330,G__194331,G__194332,G__194333,G__194334,G__194335,G__194336,G__194337,G__194338,G__194339,G__194340,G__194341,G__194342,G__194343,G__194344,G__194345,G__194346,G__194347,G__194348,G__194349,G__194350,G__194351,G__194352,G__194353,G__194354,G__194355,G__194356,G__194357,G__194358,G__194359,G__194360,G__194361,G__194362,G__194363,G__194364,G__194365,G__194366,G__194367,G__194368,G__194369,G__194370,G__194371,G__194372,G__194373,G__194374,G__194375,G__194376,G__194377,G__194378,G__194379,G__194380) : tailrecursion.hoplon.pre.call(null,G__194322,G__194323,G__194324,G__194325,G__194326,G__194327,G__194328,G__194329,G__194330,G__194331,G__194332,G__194333,G__194334,G__194335,G__194336,G__194337,G__194338,G__194339,G__194340,G__194341,G__194342,G__194343,G__194344,G__194345,G__194346,G__194347,G__194348,G__194349,G__194350,G__194351,G__194352,G__194353,G__194354,G__194355,G__194356,G__194357,G__194358,G__194359,G__194360,G__194361,G__194362,G__194363,G__194364,G__194365,G__194366,G__194367,G__194368,G__194369,G__194370,G__194371,G__194372,G__194373,G__194374,G__194375,G__194376,G__194377,G__194378,G__194379,G__194380));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__194320,G__194321) : tailrecursion.hoplon.div.call(null,G__194320,G__194321));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__194319) : tailrecursion.hoplon.div.call(null,G__194319));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_193940;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_193939;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_193938;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_193937;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_194439 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_194440 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_194441 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_194442 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__194443 = cljs.core.PersistentArrayMap.EMPTY;
var G__194444 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Implement a representation for rectangles in a plane. (Hint: you may want to make use of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/ex/2/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.2"], null)], 0))," In terms of your constructors and selectors, create procedures that compute the perimeter and the area of a given rectangle. Now implement a different representation for rectangles. Can you design your system with suitable abstraction barriers, so that the same perimeter and area procedures will work using either representation?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194443,G__194444) : tailrecursion.hoplon.markdown.para_node.call(null,G__194443,G__194444));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_194442;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_194441;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_194440;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_194439;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_194445 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_194446 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_194447 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_194448 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__194449 = cljs.core.PersistentArrayMap.EMPTY;
var G__194450 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Assuming we are given coordinates of an actual rectangle (so that we don",(function (){var G__194451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__194452 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__194451,G__194452) : tailrecursion.hoplon.markdown.simple_node.call(null,G__194451,G__194452));
})(),"t have to use the Pythagorean theorem or some other method to confirm that the points are what they claim to be), will simplify our lives considerably. Since any rectangle is determined by three of its vertices, we can assume that we are given three sequentially adjacent vertices."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194449,G__194450) : tailrecursion.hoplon.markdown.para_node.call(null,G__194449,G__194450));
})(),(function (){var G__194491 = (function (){var G__194492 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__194493 = (function (){var G__194494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__194495 = "(";
var G__194496 = (function (){var G__194512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194513 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194512,G__194513) : tailrecursion.hoplon.span.call(null,G__194512,G__194513));
})();
var G__194497 = (function (){var G__194514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194515 = "make-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194514,G__194515) : tailrecursion.hoplon.span.call(null,G__194514,G__194515));
})();
var G__194498 = " [";
var G__194499 = (function (){var G__194516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194517 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194516,G__194517) : tailrecursion.hoplon.span.call(null,G__194516,G__194517));
})();
var G__194500 = " ";
var G__194501 = (function (){var G__194518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194519 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194518,G__194519) : tailrecursion.hoplon.span.call(null,G__194518,G__194519));
})();
var G__194502 = " ";
var G__194503 = (function (){var G__194520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194521 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194520,G__194521) : tailrecursion.hoplon.span.call(null,G__194520,G__194521));
})();
var G__194504 = "]\n  (";
var G__194505 = (function (){var G__194522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194523 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194522,G__194523) : tailrecursion.hoplon.span.call(null,G__194522,G__194523));
})();
var G__194506 = (function (){var G__194524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194525 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194524,G__194525) : tailrecursion.hoplon.span.call(null,G__194524,G__194525));
})();
var G__194507 = " ";
var G__194508 = (function (){var G__194526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194527 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194526,G__194527) : tailrecursion.hoplon.span.call(null,G__194526,G__194527));
})();
var G__194509 = " ";
var G__194510 = (function (){var G__194528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194529 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194528,G__194529) : tailrecursion.hoplon.span.call(null,G__194528,G__194529));
})();
var G__194511 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__194494,G__194495,G__194496,G__194497,G__194498,G__194499,G__194500,G__194501,G__194502,G__194503,G__194504,G__194505,G__194506,G__194507,G__194508,G__194509,G__194510,G__194511) : tailrecursion.hoplon.pre.call(null,G__194494,G__194495,G__194496,G__194497,G__194498,G__194499,G__194500,G__194501,G__194502,G__194503,G__194504,G__194505,G__194506,G__194507,G__194508,G__194509,G__194510,G__194511));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__194492,G__194493) : tailrecursion.hoplon.div.call(null,G__194492,G__194493));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__194491) : tailrecursion.hoplon.div.call(null,G__194491));
})(),(function (){var G__194530 = cljs.core.PersistentArrayMap.EMPTY;
var G__194531 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then, we realize that in order to compute the area and perimeter, we need to know the length and width of the rectangle. So, let",(function (){var G__194532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__194533 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__194532,G__194533) : tailrecursion.hoplon.markdown.simple_node.call(null,G__194532,G__194533));
})(),"s write a separate procedure to do that. But before we do that, it might be a good idea to have a procedure that can find the length of a segment (we could do without this procedure, but it seems like a useful procedure to have if we are to be working with segments, so why not allow ourselves this tool?)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194530,G__194531) : tailrecursion.hoplon.markdown.para_node.call(null,G__194530,G__194531));
})(),(function (){var G__194663 = (function (){var G__194664 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__194665 = (function (){var G__194666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__194667 = "(";
var G__194668 = (function (){var G__194729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194730 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194729,G__194730) : tailrecursion.hoplon.span.call(null,G__194729,G__194730));
})();
var G__194669 = (function (){var G__194731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194732 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194731,G__194732) : tailrecursion.hoplon.span.call(null,G__194731,G__194732));
})();
var G__194670 = " [";
var G__194671 = (function (){var G__194733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194734 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194733,G__194734) : tailrecursion.hoplon.span.call(null,G__194733,G__194734));
})();
var G__194672 = "]\n  (";
var G__194673 = (function (){var G__194735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194736 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194735,G__194736) : tailrecursion.hoplon.span.call(null,G__194735,G__194736));
})();
var G__194674 = "[";
var G__194675 = (function (){var G__194737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194738 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194737,G__194738) : tailrecursion.hoplon.span.call(null,G__194737,G__194738));
})();
var G__194676 = "  (";
var G__194677 = (function (){var G__194739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194740 = "start-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194739,G__194740) : tailrecursion.hoplon.span.call(null,G__194739,G__194740));
})();
var G__194678 = " ";
var G__194679 = (function (){var G__194741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194742 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194741,G__194742) : tailrecursion.hoplon.span.call(null,G__194741,G__194742));
})();
var G__194680 = ")\n        ";
var G__194681 = (function (){var G__194743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194744 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194743,G__194744) : tailrecursion.hoplon.span.call(null,G__194743,G__194744));
})();
var G__194682 = "  (";
var G__194683 = (function (){var G__194745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194746 = "end-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194745,G__194746) : tailrecursion.hoplon.span.call(null,G__194745,G__194746));
})();
var G__194684 = " ";
var G__194685 = (function (){var G__194747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194748 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194747,G__194748) : tailrecursion.hoplon.span.call(null,G__194747,G__194748));
})();
var G__194686 = ")\n        ";
var G__194687 = (function (){var G__194749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194750 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194749,G__194750) : tailrecursion.hoplon.span.call(null,G__194749,G__194750));
})();
var G__194688 = " (";
var G__194689 = (function (){var G__194751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194752 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194751,G__194752) : tailrecursion.hoplon.span.call(null,G__194751,G__194752));
})();
var G__194690 = " ";
var G__194691 = (function (){var G__194753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194754 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194753,G__194754) : tailrecursion.hoplon.span.call(null,G__194753,G__194754));
})();
var G__194692 = ")\n        ";
var G__194693 = (function (){var G__194755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194756 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194755,G__194756) : tailrecursion.hoplon.span.call(null,G__194755,G__194756));
})();
var G__194694 = " (";
var G__194695 = (function (){var G__194757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194758 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194757,G__194758) : tailrecursion.hoplon.span.call(null,G__194757,G__194758));
})();
var G__194696 = " ";
var G__194697 = (function (){var G__194759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194760 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194759,G__194760) : tailrecursion.hoplon.span.call(null,G__194759,G__194760));
})();
var G__194698 = ")\n        ";
var G__194699 = (function (){var G__194761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194762 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194761,G__194762) : tailrecursion.hoplon.span.call(null,G__194761,G__194762));
})();
var G__194700 = " (";
var G__194701 = (function (){var G__194763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194764 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194763,G__194764) : tailrecursion.hoplon.span.call(null,G__194763,G__194764));
})();
var G__194702 = " ";
var G__194703 = (function (){var G__194765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194766 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194765,G__194766) : tailrecursion.hoplon.span.call(null,G__194765,G__194766));
})();
var G__194704 = ")\n        ";
var G__194705 = (function (){var G__194767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194768 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194767,G__194768) : tailrecursion.hoplon.span.call(null,G__194767,G__194768));
})();
var G__194706 = " (";
var G__194707 = (function (){var G__194769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194770 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194769,G__194770) : tailrecursion.hoplon.span.call(null,G__194769,G__194770));
})();
var G__194708 = " ";
var G__194709 = (function (){var G__194771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194772 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194771,G__194772) : tailrecursion.hoplon.span.call(null,G__194771,G__194772));
})();
var G__194710 = ")]\n    (";
var G__194711 = (function (){var G__194773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194774 = "Math/sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194773,G__194774) : tailrecursion.hoplon.span.call(null,G__194773,G__194774));
})();
var G__194712 = " (";
var G__194713 = (function (){var G__194775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194776 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194775,G__194776) : tailrecursion.hoplon.span.call(null,G__194775,G__194776));
})();
var G__194714 = "(";
var G__194715 = (function (){var G__194777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194778 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194777,G__194778) : tailrecursion.hoplon.span.call(null,G__194777,G__194778));
})();
var G__194716 = " (";
var G__194717 = (function (){var G__194779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194780 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194779,G__194780) : tailrecursion.hoplon.span.call(null,G__194779,G__194780));
})();
var G__194718 = (function (){var G__194781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194782 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194781,G__194782) : tailrecursion.hoplon.span.call(null,G__194781,G__194782));
})();
var G__194719 = " ";
var G__194720 = (function (){var G__194783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194784 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194783,G__194784) : tailrecursion.hoplon.span.call(null,G__194783,G__194784));
})();
var G__194721 = "))\n                  (";
var G__194722 = (function (){var G__194785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194786 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194785,G__194786) : tailrecursion.hoplon.span.call(null,G__194785,G__194786));
})();
var G__194723 = " (";
var G__194724 = (function (){var G__194787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194788 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194787,G__194788) : tailrecursion.hoplon.span.call(null,G__194787,G__194788));
})();
var G__194725 = (function (){var G__194789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194790 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194789,G__194790) : tailrecursion.hoplon.span.call(null,G__194789,G__194790));
})();
var G__194726 = " ";
var G__194727 = (function (){var G__194791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194792 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194791,G__194792) : tailrecursion.hoplon.span.call(null,G__194791,G__194792));
})();
var G__194728 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63(G__194666,G__194667,G__194668,G__194669,G__194670,G__194671,G__194672,G__194673,G__194674,G__194675,G__194676,G__194677,G__194678,G__194679,G__194680,G__194681,G__194682,G__194683,G__194684,G__194685,G__194686,G__194687,G__194688,G__194689,G__194690,G__194691,G__194692,G__194693,G__194694,G__194695,G__194696,G__194697,G__194698,G__194699,G__194700,G__194701,G__194702,G__194703,G__194704,G__194705,G__194706,G__194707,G__194708,G__194709,G__194710,G__194711,G__194712,G__194713,G__194714,G__194715,G__194716,G__194717,G__194718,G__194719,G__194720,G__194721,G__194722,G__194723,G__194724,G__194725,G__194726,G__194727,G__194728) : tailrecursion.hoplon.pre.call(null,G__194666,G__194667,G__194668,G__194669,G__194670,G__194671,G__194672,G__194673,G__194674,G__194675,G__194676,G__194677,G__194678,G__194679,G__194680,G__194681,G__194682,G__194683,G__194684,G__194685,G__194686,G__194687,G__194688,G__194689,G__194690,G__194691,G__194692,G__194693,G__194694,G__194695,G__194696,G__194697,G__194698,G__194699,G__194700,G__194701,G__194702,G__194703,G__194704,G__194705,G__194706,G__194707,G__194708,G__194709,G__194710,G__194711,G__194712,G__194713,G__194714,G__194715,G__194716,G__194717,G__194718,G__194719,G__194720,G__194721,G__194722,G__194723,G__194724,G__194725,G__194726,G__194727,G__194728));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__194664,G__194665) : tailrecursion.hoplon.div.call(null,G__194664,G__194665));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__194663) : tailrecursion.hoplon.div.call(null,G__194663));
})(),(function (){var G__194793 = cljs.core.PersistentArrayMap.EMPTY;
var G__194794 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Good, now we can move on. I",(function (){var G__194795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__194796 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__194795,G__194796) : tailrecursion.hoplon.markdown.simple_node.call(null,G__194795,G__194796));
})(),"m not sure if it would be useful to define a global procedure to get the sides of a rectangle as line-segments, but if it gets in the way, we can use a ",(function (){var G__194797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__194798 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194797,G__194798) : tailrecursion.hoplon.markdown.code_node.call(null,G__194797,G__194798));
})()," binding instead. For now, let",(function (){var G__194799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__194800 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__194799,G__194800) : tailrecursion.hoplon.markdown.simple_node.call(null,G__194799,G__194800));
})(),"s define it globally."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194793,G__194794) : tailrecursion.hoplon.markdown.para_node.call(null,G__194793,G__194794));
})(),(function (){var G__194867 = (function (){var G__194868 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__194869 = (function (){var G__194870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__194871 = "(";
var G__194872 = (function (){var G__194900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194901 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194900,G__194901) : tailrecursion.hoplon.span.call(null,G__194900,G__194901));
})();
var G__194873 = (function (){var G__194902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194903 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194902,G__194903) : tailrecursion.hoplon.span.call(null,G__194902,G__194903));
})();
var G__194874 = " [";
var G__194875 = (function (){var G__194904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194905 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194904,G__194905) : tailrecursion.hoplon.span.call(null,G__194904,G__194905));
})();
var G__194876 = "]\n  (";
var G__194877 = (function (){var G__194906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194907 = "make-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194906,G__194907) : tailrecursion.hoplon.span.call(null,G__194906,G__194907));
})();
var G__194878 = " (";
var G__194879 = (function (){var G__194908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194909 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194908,G__194909) : tailrecursion.hoplon.span.call(null,G__194908,G__194909));
})();
var G__194880 = (function (){var G__194910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194911 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194910,G__194911) : tailrecursion.hoplon.span.call(null,G__194910,G__194911));
})();
var G__194881 = ") (";
var G__194882 = (function (){var G__194912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194913 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194912,G__194913) : tailrecursion.hoplon.span.call(null,G__194912,G__194913));
})();
var G__194883 = (function (){var G__194914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194915 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194914,G__194915) : tailrecursion.hoplon.span.call(null,G__194914,G__194915));
})();
var G__194884 = ")))\n(";
var G__194885 = (function (){var G__194916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194917 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194916,G__194917) : tailrecursion.hoplon.span.call(null,G__194916,G__194917));
})();
var G__194886 = (function (){var G__194918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194919 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194918,G__194919) : tailrecursion.hoplon.span.call(null,G__194918,G__194919));
})();
var G__194887 = " [";
var G__194888 = (function (){var G__194920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194921 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194920,G__194921) : tailrecursion.hoplon.span.call(null,G__194920,G__194921));
})();
var G__194889 = "]\n  (";
var G__194890 = (function (){var G__194922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194923 = "make-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194922,G__194923) : tailrecursion.hoplon.span.call(null,G__194922,G__194923));
})();
var G__194891 = " (";
var G__194892 = (function (){var G__194924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194925 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194924,G__194925) : tailrecursion.hoplon.span.call(null,G__194924,G__194925));
})();
var G__194893 = (function (){var G__194926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194927 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194926,G__194927) : tailrecursion.hoplon.span.call(null,G__194926,G__194927));
})();
var G__194894 = ") (";
var G__194895 = (function (){var G__194928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194929 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194928,G__194929) : tailrecursion.hoplon.span.call(null,G__194928,G__194929));
})();
var G__194896 = (function (){var G__194930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194931 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194930,G__194931) : tailrecursion.hoplon.span.call(null,G__194930,G__194931));
})();
var G__194897 = " ";
var G__194898 = (function (){var G__194932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__194933 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194932,G__194933) : tailrecursion.hoplon.span.call(null,G__194932,G__194933));
})();
var G__194899 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30(G__194870,G__194871,G__194872,G__194873,G__194874,G__194875,G__194876,G__194877,G__194878,G__194879,G__194880,G__194881,G__194882,G__194883,G__194884,G__194885,G__194886,G__194887,G__194888,G__194889,G__194890,G__194891,G__194892,G__194893,G__194894,G__194895,G__194896,G__194897,G__194898,G__194899) : tailrecursion.hoplon.pre.call(null,G__194870,G__194871,G__194872,G__194873,G__194874,G__194875,G__194876,G__194877,G__194878,G__194879,G__194880,G__194881,G__194882,G__194883,G__194884,G__194885,G__194886,G__194887,G__194888,G__194889,G__194890,G__194891,G__194892,G__194893,G__194894,G__194895,G__194896,G__194897,G__194898,G__194899));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__194868,G__194869) : tailrecursion.hoplon.div.call(null,G__194868,G__194869));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__194867) : tailrecursion.hoplon.div.call(null,G__194867));
})(),(function (){var G__194934 = cljs.core.PersistentArrayMap.EMPTY;
var G__194935 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we",(function (){var G__194936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__194937 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__194936,G__194937) : tailrecursion.hoplon.markdown.simple_node.call(null,G__194936,G__194937));
})(),"re ready to make our area and perimeter procedures."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194934,G__194935) : tailrecursion.hoplon.markdown.para_node.call(null,G__194934,G__194935));
})(),(function (){var G__195027 = (function (){var G__195028 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__195029 = (function (){var G__195030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__195031 = "(";
var G__195032 = (function (){var G__195073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195074 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195073,G__195074) : tailrecursion.hoplon.span.call(null,G__195073,G__195074));
})();
var G__195033 = (function (){var G__195075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195076 = "area-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195075,G__195076) : tailrecursion.hoplon.span.call(null,G__195075,G__195076));
})();
var G__195034 = " [";
var G__195035 = (function (){var G__195077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195078 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195077,G__195078) : tailrecursion.hoplon.span.call(null,G__195077,G__195078));
})();
var G__195036 = "]\n  (";
var G__195037 = (function (){var G__195079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195080 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195079,G__195080) : tailrecursion.hoplon.span.call(null,G__195079,G__195080));
})();
var G__195038 = "(";
var G__195039 = (function (){var G__195081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195082 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195081,G__195082) : tailrecursion.hoplon.span.call(null,G__195081,G__195082));
})();
var G__195040 = " (";
var G__195041 = (function (){var G__195083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195084 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195083,G__195084) : tailrecursion.hoplon.span.call(null,G__195083,G__195084));
})();
var G__195042 = " ";
var G__195043 = (function (){var G__195085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195086 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195085,G__195086) : tailrecursion.hoplon.span.call(null,G__195085,G__195086));
})();
var G__195044 = "))\n     (";
var G__195045 = (function (){var G__195087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195088 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195087,G__195088) : tailrecursion.hoplon.span.call(null,G__195087,G__195088));
})();
var G__195046 = " (";
var G__195047 = (function (){var G__195089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195090 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195089,G__195090) : tailrecursion.hoplon.span.call(null,G__195089,G__195090));
})();
var G__195048 = " ";
var G__195049 = (function (){var G__195091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195092 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195091,G__195092) : tailrecursion.hoplon.span.call(null,G__195091,G__195092));
})();
var G__195050 = "))))\n(";
var G__195051 = (function (){var G__195093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195094 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195093,G__195094) : tailrecursion.hoplon.span.call(null,G__195093,G__195094));
})();
var G__195052 = (function (){var G__195095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195096 = "perimeter-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195095,G__195096) : tailrecursion.hoplon.span.call(null,G__195095,G__195096));
})();
var G__195053 = " [";
var G__195054 = (function (){var G__195097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195098 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195097,G__195098) : tailrecursion.hoplon.span.call(null,G__195097,G__195098));
})();
var G__195055 = "]\n  (";
var G__195056 = (function (){var G__195099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195100 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195099,G__195100) : tailrecursion.hoplon.span.call(null,G__195099,G__195100));
})();
var G__195057 = (function (){var G__195101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195102 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195101,G__195102) : tailrecursion.hoplon.span.call(null,G__195101,G__195102));
})();
var G__195058 = " (";
var G__195059 = (function (){var G__195103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195104 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195103,G__195104) : tailrecursion.hoplon.span.call(null,G__195103,G__195104));
})();
var G__195060 = "(";
var G__195061 = (function (){var G__195105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195106 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195105,G__195106) : tailrecursion.hoplon.span.call(null,G__195105,G__195106));
})();
var G__195062 = " (";
var G__195063 = (function (){var G__195107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195108 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195107,G__195108) : tailrecursion.hoplon.span.call(null,G__195107,G__195108));
})();
var G__195064 = " ";
var G__195065 = (function (){var G__195109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195110 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195109,G__195110) : tailrecursion.hoplon.span.call(null,G__195109,G__195110));
})();
var G__195066 = "))\n          (";
var G__195067 = (function (){var G__195111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195112 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195111,G__195112) : tailrecursion.hoplon.span.call(null,G__195111,G__195112));
})();
var G__195068 = " (";
var G__195069 = (function (){var G__195113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195114 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195113,G__195114) : tailrecursion.hoplon.span.call(null,G__195113,G__195114));
})();
var G__195070 = " ";
var G__195071 = (function (){var G__195115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195116 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195115,G__195116) : tailrecursion.hoplon.span.call(null,G__195115,G__195116));
})();
var G__195072 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43(G__195030,G__195031,G__195032,G__195033,G__195034,G__195035,G__195036,G__195037,G__195038,G__195039,G__195040,G__195041,G__195042,G__195043,G__195044,G__195045,G__195046,G__195047,G__195048,G__195049,G__195050,G__195051,G__195052,G__195053,G__195054,G__195055,G__195056,G__195057,G__195058,G__195059,G__195060,G__195061,G__195062,G__195063,G__195064,G__195065,G__195066,G__195067,G__195068,G__195069,G__195070,G__195071,G__195072) : tailrecursion.hoplon.pre.call(null,G__195030,G__195031,G__195032,G__195033,G__195034,G__195035,G__195036,G__195037,G__195038,G__195039,G__195040,G__195041,G__195042,G__195043,G__195044,G__195045,G__195046,G__195047,G__195048,G__195049,G__195050,G__195051,G__195052,G__195053,G__195054,G__195055,G__195056,G__195057,G__195058,G__195059,G__195060,G__195061,G__195062,G__195063,G__195064,G__195065,G__195066,G__195067,G__195068,G__195069,G__195070,G__195071,G__195072));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__195028,G__195029) : tailrecursion.hoplon.div.call(null,G__195028,G__195029));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__195027) : tailrecursion.hoplon.div.call(null,G__195027));
})(),(function (){var G__195117 = cljs.core.PersistentArrayMap.EMPTY;
var G__195118 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now, if our implementation for rectangles were something different, like:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195117,G__195118) : tailrecursion.hoplon.markdown.para_node.call(null,G__195117,G__195118));
})(),(function (){var G__195168 = (function (){var G__195169 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__195170 = (function (){var G__195171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__195172 = "(";
var G__195173 = (function (){var G__195194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195195 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195194,G__195195) : tailrecursion.hoplon.span.call(null,G__195194,G__195195));
})();
var G__195174 = (function (){var G__195196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195197 = "make-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195196,G__195197) : tailrecursion.hoplon.span.call(null,G__195196,G__195197));
})();
var G__195175 = " [";
var G__195176 = (function (){var G__195198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195199 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195198,G__195199) : tailrecursion.hoplon.span.call(null,G__195198,G__195199));
})();
var G__195177 = " ";
var G__195178 = (function (){var G__195200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195201 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195200,G__195201) : tailrecursion.hoplon.span.call(null,G__195200,G__195201));
})();
var G__195179 = " ";
var G__195180 = (function (){var G__195202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195203 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195202,G__195203) : tailrecursion.hoplon.span.call(null,G__195202,G__195203));
})();
var G__195181 = "]\n  (";
var G__195182 = (function (){var G__195204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195205 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195204,G__195205) : tailrecursion.hoplon.span.call(null,G__195204,G__195205));
})();
var G__195183 = "(";
var G__195184 = (function (){var G__195206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195207 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195206,G__195207) : tailrecursion.hoplon.span.call(null,G__195206,G__195207));
})();
var G__195185 = (function (){var G__195208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195209 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195208,G__195209) : tailrecursion.hoplon.span.call(null,G__195208,G__195209));
})();
var G__195186 = " ";
var G__195187 = (function (){var G__195210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195211 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195210,G__195211) : tailrecursion.hoplon.span.call(null,G__195210,G__195211));
})();
var G__195188 = ") (";
var G__195189 = (function (){var G__195212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195213 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195212,G__195213) : tailrecursion.hoplon.span.call(null,G__195212,G__195213));
})();
var G__195190 = (function (){var G__195214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195215 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195214,G__195215) : tailrecursion.hoplon.span.call(null,G__195214,G__195215));
})();
var G__195191 = " ";
var G__195192 = (function (){var G__195216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195217 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195216,G__195217) : tailrecursion.hoplon.span.call(null,G__195216,G__195217));
})();
var G__195193 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__195171,G__195172,G__195173,G__195174,G__195175,G__195176,G__195177,G__195178,G__195179,G__195180,G__195181,G__195182,G__195183,G__195184,G__195185,G__195186,G__195187,G__195188,G__195189,G__195190,G__195191,G__195192,G__195193) : tailrecursion.hoplon.pre.call(null,G__195171,G__195172,G__195173,G__195174,G__195175,G__195176,G__195177,G__195178,G__195179,G__195180,G__195181,G__195182,G__195183,G__195184,G__195185,G__195186,G__195187,G__195188,G__195189,G__195190,G__195191,G__195192,G__195193));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__195169,G__195170) : tailrecursion.hoplon.div.call(null,G__195169,G__195170));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__195168) : tailrecursion.hoplon.div.call(null,G__195168));
})(),(function (){var G__195218 = cljs.core.PersistentArrayMap.EMPTY;
var G__195219 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In this representation, we",(function (){var G__195220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__195221 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__195220,G__195221) : tailrecursion.hoplon.markdown.simple_node.call(null,G__195220,G__195221));
})(),"re defining rectangles by their sides rather than by their vertices. Let",(function (){var G__195222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__195223 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__195222,G__195223) : tailrecursion.hoplon.markdown.simple_node.call(null,G__195222,G__195223));
})(),"s see how things must change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195218,G__195219) : tailrecursion.hoplon.markdown.para_node.call(null,G__195218,G__195219));
})(),(function (){var G__195264 = (function (){var G__195265 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__195266 = (function (){var G__195267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__195268 = "(";
var G__195269 = (function (){var G__195285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195286 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195285,G__195286) : tailrecursion.hoplon.span.call(null,G__195285,G__195286));
})();
var G__195270 = (function (){var G__195287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195288 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195287,G__195288) : tailrecursion.hoplon.span.call(null,G__195287,G__195288));
})();
var G__195271 = " [";
var G__195272 = (function (){var G__195289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195290 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195289,G__195290) : tailrecursion.hoplon.span.call(null,G__195289,G__195290));
})();
var G__195273 = "]\n  (";
var G__195274 = (function (){var G__195291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195292 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195291,G__195292) : tailrecursion.hoplon.span.call(null,G__195291,G__195292));
})();
var G__195275 = (function (){var G__195293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195294 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195293,G__195294) : tailrecursion.hoplon.span.call(null,G__195293,G__195294));
})();
var G__195276 = "))\n(";
var G__195277 = (function (){var G__195295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195296 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195295,G__195296) : tailrecursion.hoplon.span.call(null,G__195295,G__195296));
})();
var G__195278 = (function (){var G__195297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195298 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195297,G__195298) : tailrecursion.hoplon.span.call(null,G__195297,G__195298));
})();
var G__195279 = " [";
var G__195280 = (function (){var G__195299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195300 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195299,G__195300) : tailrecursion.hoplon.span.call(null,G__195299,G__195300));
})();
var G__195281 = "]\n  (";
var G__195282 = (function (){var G__195301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195302 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195301,G__195302) : tailrecursion.hoplon.span.call(null,G__195301,G__195302));
})();
var G__195283 = (function (){var G__195303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195304 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195303,G__195304) : tailrecursion.hoplon.span.call(null,G__195303,G__195304));
})();
var G__195284 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__195267,G__195268,G__195269,G__195270,G__195271,G__195272,G__195273,G__195274,G__195275,G__195276,G__195277,G__195278,G__195279,G__195280,G__195281,G__195282,G__195283,G__195284) : tailrecursion.hoplon.pre.call(null,G__195267,G__195268,G__195269,G__195270,G__195271,G__195272,G__195273,G__195274,G__195275,G__195276,G__195277,G__195278,G__195279,G__195280,G__195281,G__195282,G__195283,G__195284));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__195265,G__195266) : tailrecursion.hoplon.div.call(null,G__195265,G__195266));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__195264) : tailrecursion.hoplon.div.call(null,G__195264));
})(),(function (){var G__195305 = cljs.core.PersistentArrayMap.EMPTY;
var G__195306 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then everything else works just fine."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195305,G__195306) : tailrecursion.hoplon.markdown.para_node.call(null,G__195305,G__195306));
})(),(function (){var G__195307 = cljs.core.PersistentArrayMap.EMPTY;
var G__195308 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: if we wanted to check to make sure that the points were in fact vertices of a rectangle, we could just add an ",(function (){var G__195309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"if"], null);
var G__195310 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195309,G__195310) : tailrecursion.hoplon.markdown.code_node.call(null,G__195309,G__195310));
})()," statement to our definition of ",(function (){var G__195311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rectangle"], null);
var G__195312 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195311,G__195312) : tailrecursion.hoplon.markdown.code_node.call(null,G__195311,G__195312));
})()," such that if it passes the Pythagorean test "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195307,G__195308) : tailrecursion.hoplon.markdown.para_node.call(null,G__195307,G__195308));
})(),(function (){var G__195361 = (function (){var G__195362 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__195363 = (function (){var G__195364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__195365 = "(";
var G__195366 = (function (){var G__195388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195389 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195388,G__195389) : tailrecursion.hoplon.span.call(null,G__195388,G__195389));
})();
var G__195367 = "(";
var G__195368 = (function (){var G__195390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195391 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195390,G__195391) : tailrecursion.hoplon.span.call(null,G__195390,G__195391));
})();
var G__195369 = " (";
var G__195370 = (function (){var G__195392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195393 = "diagonal-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195392,G__195393) : tailrecursion.hoplon.span.call(null,G__195392,G__195393));
})();
var G__195371 = " ";
var G__195372 = (function (){var G__195394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195395 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195394,G__195395) : tailrecursion.hoplon.span.call(null,G__195394,G__195395));
})();
var G__195373 = ")) \n   (";
var G__195374 = (function (){var G__195396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195397 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195396,G__195397) : tailrecursion.hoplon.span.call(null,G__195396,G__195397));
})();
var G__195375 = "(";
var G__195376 = (function (){var G__195398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195399 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195398,G__195399) : tailrecursion.hoplon.span.call(null,G__195398,G__195399));
})();
var G__195377 = " (";
var G__195378 = (function (){var G__195400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195401 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195400,G__195401) : tailrecursion.hoplon.span.call(null,G__195400,G__195401));
})();
var G__195379 = " ";
var G__195380 = (function (){var G__195402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195403 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195402,G__195403) : tailrecursion.hoplon.span.call(null,G__195402,G__195403));
})();
var G__195381 = ")) \n      (";
var G__195382 = (function (){var G__195404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195405 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195404,G__195405) : tailrecursion.hoplon.span.call(null,G__195404,G__195405));
})();
var G__195383 = " (";
var G__195384 = (function (){var G__195406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195407 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195406,G__195407) : tailrecursion.hoplon.span.call(null,G__195406,G__195407));
})();
var G__195385 = " ";
var G__195386 = (function (){var G__195408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195409 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195408,G__195409) : tailrecursion.hoplon.span.call(null,G__195408,G__195409));
})();
var G__195387 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24(G__195364,G__195365,G__195366,G__195367,G__195368,G__195369,G__195370,G__195371,G__195372,G__195373,G__195374,G__195375,G__195376,G__195377,G__195378,G__195379,G__195380,G__195381,G__195382,G__195383,G__195384,G__195385,G__195386,G__195387) : tailrecursion.hoplon.pre.call(null,G__195364,G__195365,G__195366,G__195367,G__195368,G__195369,G__195370,G__195371,G__195372,G__195373,G__195374,G__195375,G__195376,G__195377,G__195378,G__195379,G__195380,G__195381,G__195382,G__195383,G__195384,G__195385,G__195386,G__195387));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__195362,G__195363) : tailrecursion.hoplon.div.call(null,G__195362,G__195363));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__195361) : tailrecursion.hoplon.div.call(null,G__195361));
})(),(function (){var G__195410 = cljs.core.PersistentArrayMap.EMPTY;
var G__195411 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Where ",(function (){var G__195412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"diagonal-rectangle"], null);
var G__195413 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195412,G__195413) : tailrecursion.hoplon.markdown.code_node.call(null,G__195412,G__195413));
})()," would be defined in the necessary way to get what should be the diagonal of the rectangle."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195410,G__195411) : tailrecursion.hoplon.markdown.para_node.call(null,G__195410,G__195411));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_194448;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_194447;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_194446;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_194445;
}})()], 0))], 0))], 0));
var G__191118 = "";
var G__191119 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"What is Meant by Data?"], null),(function (){var _STAR_references_STAR_195414 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_195415 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_195416 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_195417 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__195418 = cljs.core.PersistentArrayMap.EMPTY;
var G__195419 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We began the rational-number implementation in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/sect/1/sub/1/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.1.1"], null)], 0))," by implementing the rational-number operations ",(function (){var G__195420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__195421 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195420,G__195421) : tailrecursion.hoplon.markdown.code_node.call(null,G__195420,G__195421));
})(),", ",(function (){var G__195422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-rat"], null);
var G__195423 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195422,G__195423) : tailrecursion.hoplon.markdown.code_node.call(null,G__195422,G__195423));
})(),", and so on in terms of three unspecified procedures: ",(function (){var G__195424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__195425 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195424,G__195425) : tailrecursion.hoplon.markdown.code_node.call(null,G__195424,G__195425));
})(),", ",(function (){var G__195426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__195427 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195426,G__195427) : tailrecursion.hoplon.markdown.code_node.call(null,G__195426,G__195427));
})(),", and ",(function (){var G__195428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__195429 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195428,G__195429) : tailrecursion.hoplon.markdown.code_node.call(null,G__195428,G__195429));
})(),". At that point, we could think of the operations as being defined in terms of data objects ",(function (){var G__195430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__195431 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__195430,G__195431) : tailrecursion.hoplon.markdown.simple_node.call(null,G__195430,G__195431));
})()," numerators, denominators, and rational numbers ",(function (){var G__195432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__195433 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__195432,G__195433) : tailrecursion.hoplon.markdown.simple_node.call(null,G__195432,G__195433));
})()," whose behavior was specified by the latter three procedures."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195418,G__195419) : tailrecursion.hoplon.markdown.para_node.call(null,G__195418,G__195419));
})(),(function (){var G__195434 = cljs.core.PersistentArrayMap.EMPTY;
var G__195435 = cljs.core.PersistentVector.fromArray(["But exactly what is meant by ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null)], 0)),"? It is not enough to say ",(function (){var G__195436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__195437 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["whatever is implemented by the given selectors and constructors."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__195436,G__195437) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__195436,G__195437));
})()," Clearly, not every arbitrary set of three procedures can serve as an appropriate basis for the rational-number implementation. We need to guarantee that, if we construct a rational number ",(function (){var G__195438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__195439 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195438,G__195439) : tailrecursion.hoplon.markdown.code_node.call(null,G__195438,G__195439));
})()," from a pair of integers ",(function (){var G__195440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__195441 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195440,G__195441) : tailrecursion.hoplon.markdown.code_node.call(null,G__195440,G__195441));
})()," and ",(function (){var G__195442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"d"], null);
var G__195443 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195442,G__195443) : tailrecursion.hoplon.markdown.code_node.call(null,G__195442,G__195443));
})(),", then extracting the ",(function (){var G__195444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__195445 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195444,G__195445) : tailrecursion.hoplon.markdown.code_node.call(null,G__195444,G__195445));
})()," and the ",(function (){var G__195446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__195447 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195446,G__195447) : tailrecursion.hoplon.markdown.code_node.call(null,G__195446,G__195447));
})()," of ",(function (){var G__195448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__195449 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195448,G__195449) : tailrecursion.hoplon.markdown.code_node.call(null,G__195448,G__195449));
})()," and dividing them should yield the same result as dividing ",(function (){var G__195450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__195451 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195450,G__195451) : tailrecursion.hoplon.markdown.code_node.call(null,G__195450,G__195451));
})()," by ",(function (){var G__195452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"d"], null);
var G__195453 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195452,G__195453) : tailrecursion.hoplon.markdown.code_node.call(null,G__195452,G__195453));
})(),". In other words, ",(function (){var G__195454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__195455 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195454,G__195455) : tailrecursion.hoplon.markdown.code_node.call(null,G__195454,G__195455));
})(),", ",(function (){var G__195456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__195457 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195456,G__195457) : tailrecursion.hoplon.markdown.code_node.call(null,G__195456,G__195457));
})(),", and ",(function (){var G__195458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__195459 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195458,G__195459) : tailrecursion.hoplon.markdown.code_node.call(null,G__195458,G__195459));
})()," must satisfy the condition that, for any integer ",(function (){var G__195460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__195461 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195460,G__195461) : tailrecursion.hoplon.markdown.code_node.call(null,G__195460,G__195461));
})()," and any non-zero integer ",(function (){var G__195462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"d"], null);
var G__195463 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195462,G__195463) : tailrecursion.hoplon.markdown.code_node.call(null,G__195462,G__195463));
})(),", if ",(function (){var G__195464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__195465 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195464,G__195465) : tailrecursion.hoplon.markdown.code_node.call(null,G__195464,G__195465));
})()," is ",(function (){var G__195466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(make-rat n d)"], null);
var G__195467 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195466,G__195467) : tailrecursion.hoplon.markdown.code_node.call(null,G__195466,G__195467));
})(),", then"], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195434,G__195435) : tailrecursion.hoplon.markdown.para_node.call(null,G__195434,G__195435));
})(),(function (){var G__195468 = cljs.core.PersistentArrayMap.EMPTY;
var G__195469 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{\\text{(numer x)}}{\\text{(denom x)}}=\\frac{\\text{n}}{\\text{d}}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195468,G__195469) : tailrecursion.hoplon.markdown.para_node.call(null,G__195468,G__195469));
})(),(function (){var G__195470 = cljs.core.PersistentArrayMap.EMPTY;
var G__195471 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In fact, this is the only condition ",(function (){var G__195472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__195473 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195472,G__195473) : tailrecursion.hoplon.markdown.code_node.call(null,G__195472,G__195473));
})(),", ",(function (){var G__195474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__195475 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195474,G__195475) : tailrecursion.hoplon.markdown.code_node.call(null,G__195474,G__195475));
})()," and ",(function (){var G__195476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__195477 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195476,G__195477) : tailrecursion.hoplon.markdown.code_node.call(null,G__195476,G__195477));
})()," must fulfill in order to form a suitable basis for a rational-number representation. In general, we can think of data as defined by some collection of selectors and constructors, together with specified conditions that these procedures must fulfill in order to be a valid representation.",(function (){var G__195478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__195479 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Surprisingly, this idea is very difficult to formulate rigorously. There are two approaches to giving such a formulation. One, pioneered by C. A. R. Hoare (1972), is known as the method of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstract models"], null)], 0)),". It formalizes the ",(function (){var G__195480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__195481 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["procedures plus conditions"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__195480,G__195481) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__195480,G__195481));
})()," specification as outlined in the rational-number example above. Note that the condition on the rational-number representation was stated in terms of facts about integers (equality and division). In general, abstract models define new kinds of data objects in terms of previously defined types of data objects. Assertions about data objects can therefore be checked by reducing them to assertions about previously defined data objects. Another approach, introduced by Zilles at MIT, by Goguen, Thatcher, Wagner, and Wright at IBM (see Thatcher, Wagner, and Wright 1978), and by Guttag at Toronto (see Guttag 1977), is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["algebraic specification"], null)], 0)),". It regards the ",(function (){var G__195482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__195483 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["procedures"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__195482,G__195483) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__195482,G__195483));
})()," as elements of an abstract algebraic system whose behavior is specified by axioms that correspond to our ",(function (){var G__195484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__195485 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["conditions,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__195484,G__195485) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__195484,G__195485));
})()," and uses the techniques of abstract algebra to check assertions about data objects. Both methods are surveyed in the paper by Liskov and Zilles (1975)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__195478,G__195479) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__195478,G__195479));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195470,G__195471) : tailrecursion.hoplon.markdown.para_node.call(null,G__195470,G__195471));
})(),(function (){var G__195486 = cljs.core.PersistentArrayMap.EMPTY;
var G__195487 = cljs.core.PersistentVector.fromArray(["This point of view can serve to define not only ",(function (){var G__195488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__195489 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["high-level"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__195488,G__195489) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__195488,G__195489));
})()," data objects, such as rational numbers, but lower-level objects as well. Consider the notion of a list or a pair (a list of two elements), which we used in order to define our rational numbers. We never actually said what these were, only that the language supplied procedures ",(function (){var G__195490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__195491 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195490,G__195491) : tailrecursion.hoplon.markdown.code_node.call(null,G__195490,G__195491));
})(),", ",(function (){var G__195492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__195493 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195492,G__195493) : tailrecursion.hoplon.markdown.code_node.call(null,G__195492,G__195493));
})(),", and ",(function (){var G__195494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__195495 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195494,G__195495) : tailrecursion.hoplon.markdown.code_node.call(null,G__195494,G__195495));
})()," for operating on them. But the only thing we need to know about these three operations is that if we glue two objects together using ",(function (){var G__195496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__195497 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195496,G__195497) : tailrecursion.hoplon.markdown.code_node.call(null,G__195496,G__195497));
})()," or ",(function (){var G__195498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__195499 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195498,G__195499) : tailrecursion.hoplon.markdown.code_node.call(null,G__195498,G__195499));
})(),", we can retrieve the objects using ",(function (){var G__195500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__195501 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195500,G__195501) : tailrecursion.hoplon.markdown.code_node.call(null,G__195500,G__195501));
})(),", ",(function (){var G__195502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__195503 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195502,G__195503) : tailrecursion.hoplon.markdown.code_node.call(null,G__195502,G__195503));
})(),", ",(function (){var G__195504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__195505 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195504,G__195505) : tailrecursion.hoplon.markdown.code_node.call(null,G__195504,G__195505));
})()," and ",(function (){var G__195506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nth"], null);
var G__195507 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195506,G__195507) : tailrecursion.hoplon.markdown.code_node.call(null,G__195506,G__195507));
})(),". That is, the operations satisfy the condition that, for any objects ",(function (){var G__195508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__195509 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195508,G__195509) : tailrecursion.hoplon.markdown.code_node.call(null,G__195508,G__195509));
})()," and ",(function (){var G__195510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y"], null);
var G__195511 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195510,G__195511) : tailrecursion.hoplon.markdown.code_node.call(null,G__195510,G__195511));
})(),", if ",(function (){var G__195512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"z"], null);
var G__195513 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195512,G__195513) : tailrecursion.hoplon.markdown.code_node.call(null,G__195512,G__195513));
})()," is ",(function (){var G__195514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(list x y)"], null);
var G__195515 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195514,G__195515) : tailrecursion.hoplon.markdown.code_node.call(null,G__195514,G__195515));
})()," then ",(function (){var G__195516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first z)"], null);
var G__195517 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195516,G__195517) : tailrecursion.hoplon.markdown.code_node.call(null,G__195516,G__195517));
})()," is ",(function (){var G__195518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__195519 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195518,G__195519) : tailrecursion.hoplon.markdown.code_node.call(null,G__195518,G__195519));
})()," and ",(function (){var G__195520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(second z)"], null);
var G__195521 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195520,G__195521) : tailrecursion.hoplon.markdown.code_node.call(null,G__195520,G__195521));
})()," is ",(function (){var G__195522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y"], null);
var G__195523 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195522,G__195523) : tailrecursion.hoplon.markdown.code_node.call(null,G__195522,G__195523));
})(),". Indeed, we mentioned that these three procedures are included as primitives in our language. However, any triple of procedures that satisfies the above condition can be used as the basis for implementing pairs. This point is illustrated strikingly by the fact that we could implement ",(function (){var G__195524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__195525 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195524,G__195525) : tailrecursion.hoplon.markdown.code_node.call(null,G__195524,G__195525));
})(),", ",(function (){var G__195526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__195527 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195526,G__195527) : tailrecursion.hoplon.markdown.code_node.call(null,G__195526,G__195527));
})(),", and ",(function (){var G__195528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__195529 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195528,G__195529) : tailrecursion.hoplon.markdown.code_node.call(null,G__195528,G__195529));
})()," for lists without using any data structures at all but only using procedures. Here are the definitions:"], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195486,G__195487) : tailrecursion.hoplon.markdown.para_node.call(null,G__195486,G__195487));
})(),(function (){var G__195661 = (function (){var G__195662 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__195663 = (function (){var G__195664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__195665 = "(";
var G__195666 = (function (){var G__195727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195728 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195727,G__195728) : tailrecursion.hoplon.span.call(null,G__195727,G__195728));
})();
var G__195667 = (function (){var G__195729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195730 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195729,G__195730) : tailrecursion.hoplon.span.call(null,G__195729,G__195730));
})();
var G__195668 = "[";
var G__195669 = (function (){var G__195731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195732 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195731,G__195732) : tailrecursion.hoplon.span.call(null,G__195731,G__195732));
})();
var G__195670 = " ";
var G__195671 = (function (){var G__195733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195734 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195733,G__195734) : tailrecursion.hoplon.span.call(null,G__195733,G__195734));
})();
var G__195672 = "]\n  (";
var G__195673 = (function (){var G__195735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195736 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195735,G__195736) : tailrecursion.hoplon.span.call(null,G__195735,G__195736));
})();
var G__195674 = "[";
var G__195675 = (function (){var G__195737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195738 = "dispatch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195737,G__195738) : tailrecursion.hoplon.span.call(null,G__195737,G__195738));
})();
var G__195676 = " (";
var G__195677 = (function (){var G__195739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195740 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195739,G__195740) : tailrecursion.hoplon.span.call(null,G__195739,G__195740));
})();
var G__195678 = "[";
var G__195679 = (function (){var G__195741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195742 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195741,G__195742) : tailrecursion.hoplon.span.call(null,G__195741,G__195742));
})();
var G__195680 = "] (";
var G__195681 = (function (){var G__195743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195744 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195743,G__195744) : tailrecursion.hoplon.span.call(null,G__195743,G__195744));
})();
var G__195682 = "(";
var G__195683 = (function (){var G__195745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195746 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195745,G__195746) : tailrecursion.hoplon.span.call(null,G__195745,G__195746));
})();
var G__195684 = (function (){var G__195747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195748 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195747,G__195748) : tailrecursion.hoplon.span.call(null,G__195747,G__195748));
})();
var G__195685 = " ";
var G__195686 = (function (){var G__195749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195750 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195749,G__195750) : tailrecursion.hoplon.span.call(null,G__195749,G__195750));
})();
var G__195687 = ") ";
var G__195688 = (function (){var G__195751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195752 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195751,G__195752) : tailrecursion.hoplon.span.call(null,G__195751,G__195752));
})();
var G__195689 = "\n                               (";
var G__195690 = (function (){var G__195753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195754 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195753,G__195754) : tailrecursion.hoplon.span.call(null,G__195753,G__195754));
})();
var G__195691 = (function (){var G__195755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195756 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195755,G__195756) : tailrecursion.hoplon.span.call(null,G__195755,G__195756));
})();
var G__195692 = " ";
var G__195693 = (function (){var G__195757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195758 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195757,G__195758) : tailrecursion.hoplon.span.call(null,G__195757,G__195758));
})();
var G__195694 = ") ";
var G__195695 = (function (){var G__195759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195760 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195759,G__195760) : tailrecursion.hoplon.span.call(null,G__195759,G__195760));
})();
var G__195696 = "\n                               ";
var G__195697 = (function (){var G__195761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195762 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195761,G__195762) : tailrecursion.hoplon.span.call(null,G__195761,G__195762));
})();
var G__195698 = " (";
var G__195699 = (function (){var G__195763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195764 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195763,G__195764) : tailrecursion.hoplon.span.call(null,G__195763,G__195764));
})();
var G__195700 = " (";
var G__195701 = (function (){var G__195765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195766 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195765,G__195766) : tailrecursion.hoplon.span.call(null,G__195765,G__195766));
})();
var G__195702 = " ";
var G__195703 = (function (){var G__195767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__195768 = "\"Argument not 0 or 1 -- CONS\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195767,G__195768) : tailrecursion.hoplon.span.call(null,G__195767,G__195768));
})();
var G__195704 = " ";
var G__195705 = (function (){var G__195769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195770 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195769,G__195770) : tailrecursion.hoplon.span.call(null,G__195769,G__195770));
})();
var G__195706 = "))))]\n    ";
var G__195707 = (function (){var G__195771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195772 = "dispatch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195771,G__195772) : tailrecursion.hoplon.span.call(null,G__195771,G__195772));
})();
var G__195708 = "))\n\n(";
var G__195709 = (function (){var G__195773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195774 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195773,G__195774) : tailrecursion.hoplon.span.call(null,G__195773,G__195774));
})();
var G__195710 = (function (){var G__195775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195776 = "car";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195775,G__195776) : tailrecursion.hoplon.span.call(null,G__195775,G__195776));
})();
var G__195711 = " [";
var G__195712 = (function (){var G__195777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195778 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195777,G__195778) : tailrecursion.hoplon.span.call(null,G__195777,G__195778));
})();
var G__195713 = "] (";
var G__195714 = (function (){var G__195779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195780 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195779,G__195780) : tailrecursion.hoplon.span.call(null,G__195779,G__195780));
})();
var G__195715 = " ";
var G__195716 = (function (){var G__195781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195782 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195781,G__195782) : tailrecursion.hoplon.span.call(null,G__195781,G__195782));
})();
var G__195717 = "))\n\n(";
var G__195718 = (function (){var G__195783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195784 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195783,G__195784) : tailrecursion.hoplon.span.call(null,G__195783,G__195784));
})();
var G__195719 = (function (){var G__195785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195786 = "cdr";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195785,G__195786) : tailrecursion.hoplon.span.call(null,G__195785,G__195786));
})();
var G__195720 = " [";
var G__195721 = (function (){var G__195787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195788 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195787,G__195788) : tailrecursion.hoplon.span.call(null,G__195787,G__195788));
})();
var G__195722 = "] (";
var G__195723 = (function (){var G__195789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195790 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195789,G__195790) : tailrecursion.hoplon.span.call(null,G__195789,G__195790));
})();
var G__195724 = " ";
var G__195725 = (function (){var G__195791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195792 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195791,G__195792) : tailrecursion.hoplon.span.call(null,G__195791,G__195792));
})();
var G__195726 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63(G__195664,G__195665,G__195666,G__195667,G__195668,G__195669,G__195670,G__195671,G__195672,G__195673,G__195674,G__195675,G__195676,G__195677,G__195678,G__195679,G__195680,G__195681,G__195682,G__195683,G__195684,G__195685,G__195686,G__195687,G__195688,G__195689,G__195690,G__195691,G__195692,G__195693,G__195694,G__195695,G__195696,G__195697,G__195698,G__195699,G__195700,G__195701,G__195702,G__195703,G__195704,G__195705,G__195706,G__195707,G__195708,G__195709,G__195710,G__195711,G__195712,G__195713,G__195714,G__195715,G__195716,G__195717,G__195718,G__195719,G__195720,G__195721,G__195722,G__195723,G__195724,G__195725,G__195726) : tailrecursion.hoplon.pre.call(null,G__195664,G__195665,G__195666,G__195667,G__195668,G__195669,G__195670,G__195671,G__195672,G__195673,G__195674,G__195675,G__195676,G__195677,G__195678,G__195679,G__195680,G__195681,G__195682,G__195683,G__195684,G__195685,G__195686,G__195687,G__195688,G__195689,G__195690,G__195691,G__195692,G__195693,G__195694,G__195695,G__195696,G__195697,G__195698,G__195699,G__195700,G__195701,G__195702,G__195703,G__195704,G__195705,G__195706,G__195707,G__195708,G__195709,G__195710,G__195711,G__195712,G__195713,G__195714,G__195715,G__195716,G__195717,G__195718,G__195719,G__195720,G__195721,G__195722,G__195723,G__195724,G__195725,G__195726));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__195662,G__195663) : tailrecursion.hoplon.div.call(null,G__195662,G__195663));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__195661) : tailrecursion.hoplon.div.call(null,G__195661));
})(),(function (){var G__195793 = cljs.core.PersistentArrayMap.EMPTY;
var G__195794 = new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In the above definitions I used ",(function (){var G__195795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__195796 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195795,G__195796) : tailrecursion.hoplon.markdown.code_node.call(null,G__195795,G__195796));
})(),", ",(function (){var G__195797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__195798 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195797,G__195798) : tailrecursion.hoplon.markdown.code_node.call(null,G__195797,G__195798));
})(),", and ",(function (){var G__195799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__195800 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195799,G__195800) : tailrecursion.hoplon.markdown.code_node.call(null,G__195799,G__195800));
})()," instead of ",(function (){var G__195801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__195802 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195801,G__195802) : tailrecursion.hoplon.markdown.code_node.call(null,G__195801,G__195802));
})(),", ",(function (){var G__195803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__195804 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195803,G__195804) : tailrecursion.hoplon.markdown.code_node.call(null,G__195803,G__195804));
})(),", and ",(function (){var G__195805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__195806 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195805,G__195806) : tailrecursion.hoplon.markdown.code_node.call(null,G__195805,G__195806));
})()," simply because I like to not deviate from the book whenever possible and it doesn",(function (){var G__195807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__195808 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__195807,G__195808) : tailrecursion.hoplon.markdown.simple_node.call(null,G__195807,G__195808));
})(),"t necessarily add anything to deviate. On the down side (of deviating from the text), this construction would not work if we used lists because lists can have any number of elements so we",(function (){var G__195809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__195810 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__195809,G__195810) : tailrecursion.hoplon.markdown.simple_node.call(null,G__195809,G__195810));
})(),"d have to use other methods to make it work. We digress",(function (){var G__195811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__195812 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__195811,G__195812) : tailrecursion.hoplon.markdown.simple_node.call(null,G__195811,G__195812));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195793,G__195794) : tailrecursion.hoplon.markdown.para_node.call(null,G__195793,G__195794));
})(),(function (){var G__195813 = cljs.core.PersistentArrayMap.EMPTY;
var G__195814 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This use of procedures corresponds to nothing like our intuitive notion of what data should be. Nevertheless, all we need to do to show that this is a valid way to represent pairs is to verify that these procedures satisfy the condition given above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195813,G__195814) : tailrecursion.hoplon.markdown.para_node.call(null,G__195813,G__195814));
})(),(function (){var G__195815 = cljs.core.PersistentArrayMap.EMPTY;
var G__195816 = cljs.core.PersistentVector.fromArray(["The subtle point to notice is that the value returned by ",(function (){var G__195817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(cons x y)"], null);
var G__195818 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195817,G__195818) : tailrecursion.hoplon.markdown.code_node.call(null,G__195817,G__195818));
})()," is a procedure ",(function (){var G__195819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__195820 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__195819,G__195820) : tailrecursion.hoplon.markdown.simple_node.call(null,G__195819,G__195820));
})()," namely the internally defined procedure ",(function (){var G__195821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"dispatch"], null);
var G__195822 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195821,G__195822) : tailrecursion.hoplon.markdown.code_node.call(null,G__195821,G__195822));
})(),", which takes one argument and returns either ",(function (){var G__195823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__195824 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195823,G__195824) : tailrecursion.hoplon.markdown.code_node.call(null,G__195823,G__195824));
})()," or ",(function (){var G__195825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y"], null);
var G__195826 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195825,G__195826) : tailrecursion.hoplon.markdown.code_node.call(null,G__195825,G__195826));
})()," depending on whether the argument is 0 or 1. Correspondingly, ",(function (){var G__195827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(car z)"], null);
var G__195828 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195827,G__195828) : tailrecursion.hoplon.markdown.code_node.call(null,G__195827,G__195828));
})()," is defined to apply ",(function (){var G__195829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"z"], null);
var G__195830 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195829,G__195830) : tailrecursion.hoplon.markdown.code_node.call(null,G__195829,G__195830));
})()," to 0. Hence, if ",(function (){var G__195831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"z"], null);
var G__195832 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195831,G__195832) : tailrecursion.hoplon.markdown.code_node.call(null,G__195831,G__195832));
})()," is the procedure formed by ",(function (){var G__195833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(cons x\ny)"], null);
var G__195834 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195833,G__195834) : tailrecursion.hoplon.markdown.code_node.call(null,G__195833,G__195834));
})(),", then ",(function (){var G__195835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"z"], null);
var G__195836 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195835,G__195836) : tailrecursion.hoplon.markdown.code_node.call(null,G__195835,G__195836));
})()," applied to 0 will yield ",(function (){var G__195837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__195838 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195837,G__195838) : tailrecursion.hoplon.markdown.code_node.call(null,G__195837,G__195838));
})(),". Thus, we have shown that ",(function (){var G__195839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(car (cons x y))"], null);
var G__195840 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195839,G__195840) : tailrecursion.hoplon.markdown.code_node.call(null,G__195839,G__195840));
})()," yields ",(function (){var G__195841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__195842 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195841,G__195842) : tailrecursion.hoplon.markdown.code_node.call(null,G__195841,G__195842));
})(),", as desired. Similarly, ",(function (){var G__195843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(cdr (cons x\ny))"], null);
var G__195844 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195843,G__195844) : tailrecursion.hoplon.markdown.code_node.call(null,G__195843,G__195844));
})()," applies the procedure returned by ",(function (){var G__195845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(cons x y)"], null);
var G__195846 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195845,G__195846) : tailrecursion.hoplon.markdown.code_node.call(null,G__195845,G__195846));
})()," to 1, which returns ",(function (){var G__195847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y"], null);
var G__195848 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195847,G__195848) : tailrecursion.hoplon.markdown.code_node.call(null,G__195847,G__195848));
})(),". Therefore, this procedural implementation of pairs is a valid implementation, and if we access pairs using only ",(function (){var G__195849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__195850 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195849,G__195850) : tailrecursion.hoplon.markdown.code_node.call(null,G__195849,G__195850));
})(),", ",(function (){var G__195851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__195852 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195851,G__195852) : tailrecursion.hoplon.markdown.code_node.call(null,G__195851,G__195852));
})(),", and ",(function (){var G__195853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__195854 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195853,G__195854) : tailrecursion.hoplon.markdown.code_node.call(null,G__195853,G__195854));
})()," we cannot distinguish this implementation from one that uses ",(function (){var G__195855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__195856 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["real"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__195855,G__195856) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__195855,G__195856));
})()," data structures."], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195815,G__195816) : tailrecursion.hoplon.markdown.para_node.call(null,G__195815,G__195816));
})(),(function (){var G__195857 = cljs.core.PersistentArrayMap.EMPTY;
var G__195858 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The point of exhibiting the procedural representation of pairs is not that our language works this way (Scheme, and Lisp systems in general, implement pairs directly, and Clojure implements lists directly as Java objects, for efficiency reasons) but that it could work this way. The procedural representation, although obscure, is a perfectly adequate way to represent pairs, since it fulfills the only conditions that pairs need to fulfill. This example also demonstrates that the ability to manipulate procedures as objects automatically provides the ability to represent compound data. This may seem a curiosity now, but procedural representations of data will play a central role in our programming repertoire. This style of programming is often called message passing, and we will be using it as a basic tool in chapter 3 when we address the issues of modeling and simulation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195857,G__195858) : tailrecursion.hoplon.markdown.para_node.call(null,G__195857,G__195858));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_195417;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_195416;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_195415;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_195414;
}})()], 0));
var G__191120 = "";
var G__191121 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_195859 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_195860 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_195861 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_195862 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__195863 = cljs.core.PersistentArrayMap.EMPTY;
var G__195864 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Here is an alternative procedural representation of pairs. For this representation, verify that (car (cons x y)) yields x for any objects x and y."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195863,G__195864) : tailrecursion.hoplon.markdown.para_node.call(null,G__195863,G__195864));
})(),(function (){var G__195935 = (function (){var G__195936 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__195937 = (function (){var G__195938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__195939 = "(";
var G__195940 = (function (){var G__195972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195973 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195972,G__195973) : tailrecursion.hoplon.span.call(null,G__195972,G__195973));
})();
var G__195941 = (function (){var G__195974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195975 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195974,G__195975) : tailrecursion.hoplon.span.call(null,G__195974,G__195975));
})();
var G__195942 = "[";
var G__195943 = (function (){var G__195976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195977 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195976,G__195977) : tailrecursion.hoplon.span.call(null,G__195976,G__195977));
})();
var G__195944 = " ";
var G__195945 = (function (){var G__195978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195979 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195978,G__195979) : tailrecursion.hoplon.span.call(null,G__195978,G__195979));
})();
var G__195946 = "]\n  (";
var G__195947 = (function (){var G__195980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195981 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195980,G__195981) : tailrecursion.hoplon.span.call(null,G__195980,G__195981));
})();
var G__195948 = "[";
var G__195949 = (function (){var G__195982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195983 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195982,G__195983) : tailrecursion.hoplon.span.call(null,G__195982,G__195983));
})();
var G__195950 = "] (";
var G__195951 = (function (){var G__195984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195985 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195984,G__195985) : tailrecursion.hoplon.span.call(null,G__195984,G__195985));
})();
var G__195952 = " ";
var G__195953 = (function (){var G__195986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195987 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195986,G__195987) : tailrecursion.hoplon.span.call(null,G__195986,G__195987));
})();
var G__195954 = " ";
var G__195955 = (function (){var G__195988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195989 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195988,G__195989) : tailrecursion.hoplon.span.call(null,G__195988,G__195989));
})();
var G__195956 = ")))\n(";
var G__195957 = (function (){var G__195990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195991 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195990,G__195991) : tailrecursion.hoplon.span.call(null,G__195990,G__195991));
})();
var G__195958 = (function (){var G__195992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195993 = "car";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195992,G__195993) : tailrecursion.hoplon.span.call(null,G__195992,G__195993));
})();
var G__195959 = " [";
var G__195960 = (function (){var G__195994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195995 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195994,G__195995) : tailrecursion.hoplon.span.call(null,G__195994,G__195995));
})();
var G__195961 = "]\n  (";
var G__195962 = (function (){var G__195996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195997 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195996,G__195997) : tailrecursion.hoplon.span.call(null,G__195996,G__195997));
})();
var G__195963 = " (";
var G__195964 = (function (){var G__195998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195999 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195998,G__195999) : tailrecursion.hoplon.span.call(null,G__195998,G__195999));
})();
var G__195965 = "[";
var G__195966 = (function (){var G__196000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196001 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196000,G__196001) : tailrecursion.hoplon.span.call(null,G__196000,G__196001));
})();
var G__195967 = " ";
var G__195968 = (function (){var G__196002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196003 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196002,G__196003) : tailrecursion.hoplon.span.call(null,G__196002,G__196003));
})();
var G__195969 = "] ";
var G__195970 = (function (){var G__196004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196005 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196004,G__196005) : tailrecursion.hoplon.span.call(null,G__196004,G__196005));
})();
var G__195971 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34(G__195938,G__195939,G__195940,G__195941,G__195942,G__195943,G__195944,G__195945,G__195946,G__195947,G__195948,G__195949,G__195950,G__195951,G__195952,G__195953,G__195954,G__195955,G__195956,G__195957,G__195958,G__195959,G__195960,G__195961,G__195962,G__195963,G__195964,G__195965,G__195966,G__195967,G__195968,G__195969,G__195970,G__195971) : tailrecursion.hoplon.pre.call(null,G__195938,G__195939,G__195940,G__195941,G__195942,G__195943,G__195944,G__195945,G__195946,G__195947,G__195948,G__195949,G__195950,G__195951,G__195952,G__195953,G__195954,G__195955,G__195956,G__195957,G__195958,G__195959,G__195960,G__195961,G__195962,G__195963,G__195964,G__195965,G__195966,G__195967,G__195968,G__195969,G__195970,G__195971));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__195936,G__195937) : tailrecursion.hoplon.div.call(null,G__195936,G__195937));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__195935) : tailrecursion.hoplon.div.call(null,G__195935));
})(),(function (){var G__196006 = cljs.core.PersistentArrayMap.EMPTY;
var G__196007 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What is the corresponding definition of ",(function (){var G__196008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__196009 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196008,G__196009) : tailrecursion.hoplon.markdown.code_node.call(null,G__196008,G__196009));
})(),"? (Hint: To verify that ths works, make use of the substitution model of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/1/sub/5/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.1.5"], null)], 0)),".)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196006,G__196007) : tailrecursion.hoplon.markdown.para_node.call(null,G__196006,G__196007));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_195862;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_195861;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_195860;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_195859;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_196010 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196011 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_196012 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196013 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__196049 = (function (){var G__196050 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__196051 = (function (){var G__196052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__196053 = "(";
var G__196054 = (function (){var G__196069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196070 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196069,G__196070) : tailrecursion.hoplon.span.call(null,G__196069,G__196070));
})();
var G__196055 = (function (){var G__196071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196072 = "cdr";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196071,G__196072) : tailrecursion.hoplon.span.call(null,G__196071,G__196072));
})();
var G__196056 = " [";
var G__196057 = (function (){var G__196073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196074 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196073,G__196074) : tailrecursion.hoplon.span.call(null,G__196073,G__196074));
})();
var G__196058 = "]\n  (";
var G__196059 = (function (){var G__196075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196076 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196075,G__196076) : tailrecursion.hoplon.span.call(null,G__196075,G__196076));
})();
var G__196060 = " (";
var G__196061 = (function (){var G__196077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196078 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196077,G__196078) : tailrecursion.hoplon.span.call(null,G__196077,G__196078));
})();
var G__196062 = "[";
var G__196063 = (function (){var G__196079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196080 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196079,G__196080) : tailrecursion.hoplon.span.call(null,G__196079,G__196080));
})();
var G__196064 = " ";
var G__196065 = (function (){var G__196081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196082 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196081,G__196082) : tailrecursion.hoplon.span.call(null,G__196081,G__196082));
})();
var G__196066 = "] ";
var G__196067 = (function (){var G__196083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196084 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196083,G__196084) : tailrecursion.hoplon.span.call(null,G__196083,G__196084));
})();
var G__196068 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__196052,G__196053,G__196054,G__196055,G__196056,G__196057,G__196058,G__196059,G__196060,G__196061,G__196062,G__196063,G__196064,G__196065,G__196066,G__196067,G__196068) : tailrecursion.hoplon.pre.call(null,G__196052,G__196053,G__196054,G__196055,G__196056,G__196057,G__196058,G__196059,G__196060,G__196061,G__196062,G__196063,G__196064,G__196065,G__196066,G__196067,G__196068));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__196050,G__196051) : tailrecursion.hoplon.div.call(null,G__196050,G__196051));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__196049) : tailrecursion.hoplon.div.call(null,G__196049));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196013;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196012;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196011;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196010;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_196085 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196086 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_196087 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196088 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__196089 = cljs.core.PersistentArrayMap.EMPTY;
var G__196090 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Show that we can represent pairs of nonnegative integers using only numbers and arithmetic operations if we represent the pair \\(a\\) and \\(b\\) as the integer that is the product \\(2^a3^b\\). Give the corresponding definitions of the procedures ",(function (){var G__196091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__196092 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196091,G__196092) : tailrecursion.hoplon.markdown.code_node.call(null,G__196091,G__196092));
})(),", ",(function (){var G__196093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__196094 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196093,G__196094) : tailrecursion.hoplon.markdown.code_node.call(null,G__196093,G__196094));
})(),", and ",(function (){var G__196095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__196096 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196095,G__196096) : tailrecursion.hoplon.markdown.code_node.call(null,G__196095,G__196096));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196089,G__196090) : tailrecursion.hoplon.markdown.para_node.call(null,G__196089,G__196090));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196088;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196087;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196086;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196085;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_196097 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196098 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_196099 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196100 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__196310 = (function (){var G__196311 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__196312 = (function (){var G__196313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__196314 = "(";
var G__196315 = (function (){var G__196414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196415 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196414,G__196415) : tailrecursion.hoplon.span.call(null,G__196414,G__196415));
})();
var G__196316 = (function (){var G__196416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196417 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196416,G__196417) : tailrecursion.hoplon.span.call(null,G__196416,G__196417));
})();
var G__196317 = "[";
var G__196318 = (function (){var G__196418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196419 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196418,G__196419) : tailrecursion.hoplon.span.call(null,G__196418,G__196419));
})();
var G__196319 = " ";
var G__196320 = (function (){var G__196420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196421 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196420,G__196421) : tailrecursion.hoplon.span.call(null,G__196420,G__196421));
})();
var G__196321 = "]\n  (";
var G__196322 = (function (){var G__196422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196423 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196422,G__196423) : tailrecursion.hoplon.span.call(null,G__196422,G__196423));
})();
var G__196323 = "(";
var G__196324 = (function (){var G__196424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196425 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196424,G__196425) : tailrecursion.hoplon.span.call(null,G__196424,G__196425));
})();
var G__196325 = " ";
var G__196326 = (function (){var G__196426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196427 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196426,G__196427) : tailrecursion.hoplon.span.call(null,G__196426,G__196427));
})();
var G__196327 = " ";
var G__196328 = (function (){var G__196428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196429 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196428,G__196429) : tailrecursion.hoplon.span.call(null,G__196428,G__196429));
})();
var G__196329 = ") (";
var G__196330 = (function (){var G__196430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196431 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196430,G__196431) : tailrecursion.hoplon.span.call(null,G__196430,G__196431));
})();
var G__196331 = " ";
var G__196332 = (function (){var G__196432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196433 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196432,G__196433) : tailrecursion.hoplon.span.call(null,G__196432,G__196433));
})();
var G__196333 = " ";
var G__196334 = (function (){var G__196434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196435 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196434,G__196435) : tailrecursion.hoplon.span.call(null,G__196434,G__196435));
})();
var G__196335 = ")))\n(";
var G__196336 = (function (){var G__196436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196437 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196436,G__196437) : tailrecursion.hoplon.span.call(null,G__196436,G__196437));
})();
var G__196337 = (function (){var G__196438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196439 = "car";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196438,G__196439) : tailrecursion.hoplon.span.call(null,G__196438,G__196439));
})();
var G__196338 = " [";
var G__196339 = (function (){var G__196440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196441 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196440,G__196441) : tailrecursion.hoplon.span.call(null,G__196440,G__196441));
})();
var G__196340 = "]\n  (";
var G__196341 = (function (){var G__196442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196443 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196442,G__196443) : tailrecursion.hoplon.span.call(null,G__196442,G__196443));
})();
var G__196342 = "[";
var G__196343 = (function (){var G__196444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196445 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196444,G__196445) : tailrecursion.hoplon.span.call(null,G__196444,G__196445));
})();
var G__196344 = "    ";
var G__196345 = (function (){var G__196446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196447 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196446,G__196447) : tailrecursion.hoplon.span.call(null,G__196446,G__196447));
})();
var G__196346 = "\n         ";
var G__196347 = (function (){var G__196448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196449 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196448,G__196449) : tailrecursion.hoplon.span.call(null,G__196448,G__196449));
})();
var G__196348 = " ";
var G__196349 = (function (){var G__196450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196451 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196450,G__196451) : tailrecursion.hoplon.span.call(null,G__196450,G__196451));
})();
var G__196350 = "]\n    (";
var G__196351 = (function (){var G__196452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196453 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196452,G__196453) : tailrecursion.hoplon.span.call(null,G__196452,G__196453));
})();
var G__196352 = "(";
var G__196353 = (function (){var G__196454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196455 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196454,G__196455) : tailrecursion.hoplon.span.call(null,G__196454,G__196455));
})();
var G__196354 = "(";
var G__196355 = (function (){var G__196456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196457 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196456,G__196457) : tailrecursion.hoplon.span.call(null,G__196456,G__196457));
})();
var G__196356 = " ";
var G__196357 = (function (){var G__196458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196459 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196458,G__196459) : tailrecursion.hoplon.span.call(null,G__196458,G__196459));
})();
var G__196358 = " ";
var G__196359 = (function (){var G__196460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196461 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196460,G__196461) : tailrecursion.hoplon.span.call(null,G__196460,G__196461));
})();
var G__196360 = ") ";
var G__196361 = (function (){var G__196462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196463 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196462,G__196463) : tailrecursion.hoplon.span.call(null,G__196462,G__196463));
})();
var G__196362 = ")\n        (";
var G__196363 = (function (){var G__196464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196465 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196464,G__196465) : tailrecursion.hoplon.span.call(null,G__196464,G__196465));
})();
var G__196364 = " (";
var G__196365 = (function (){var G__196466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196467 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196466,G__196467) : tailrecursion.hoplon.span.call(null,G__196466,G__196467));
})();
var G__196366 = (function (){var G__196468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196469 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196468,G__196469) : tailrecursion.hoplon.span.call(null,G__196468,G__196469));
})();
var G__196367 = " ";
var G__196368 = (function (){var G__196470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196471 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196470,G__196471) : tailrecursion.hoplon.span.call(null,G__196470,G__196471));
})();
var G__196369 = ") (";
var G__196370 = (function (){var G__196472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196473 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196472,G__196473) : tailrecursion.hoplon.span.call(null,G__196472,G__196473));
})();
var G__196371 = (function (){var G__196474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196475 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196474,G__196475) : tailrecursion.hoplon.span.call(null,G__196474,G__196475));
})();
var G__196372 = "))\n        ";
var G__196373 = (function (){var G__196476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196477 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196476,G__196477) : tailrecursion.hoplon.span.call(null,G__196476,G__196477));
})();
var G__196374 = ")))\n(";
var G__196375 = (function (){var G__196478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196479 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196478,G__196479) : tailrecursion.hoplon.span.call(null,G__196478,G__196479));
})();
var G__196376 = (function (){var G__196480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196481 = "cdr";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196480,G__196481) : tailrecursion.hoplon.span.call(null,G__196480,G__196481));
})();
var G__196377 = " [";
var G__196378 = (function (){var G__196482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196483 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196482,G__196483) : tailrecursion.hoplon.span.call(null,G__196482,G__196483));
})();
var G__196379 = "]\n  (";
var G__196380 = (function (){var G__196484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196485 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196484,G__196485) : tailrecursion.hoplon.span.call(null,G__196484,G__196485));
})();
var G__196381 = "[";
var G__196382 = (function (){var G__196486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196487 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196486,G__196487) : tailrecursion.hoplon.span.call(null,G__196486,G__196487));
})();
var G__196383 = "    ";
var G__196384 = (function (){var G__196488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196489 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196488,G__196489) : tailrecursion.hoplon.span.call(null,G__196488,G__196489));
})();
var G__196385 = "\n         ";
var G__196386 = (function (){var G__196490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196491 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196490,G__196491) : tailrecursion.hoplon.span.call(null,G__196490,G__196491));
})();
var G__196387 = " ";
var G__196388 = (function (){var G__196492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196493 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196492,G__196493) : tailrecursion.hoplon.span.call(null,G__196492,G__196493));
})();
var G__196389 = "]\n    (";
var G__196390 = (function (){var G__196494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196495 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196494,G__196495) : tailrecursion.hoplon.span.call(null,G__196494,G__196495));
})();
var G__196391 = "(";
var G__196392 = (function (){var G__196496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196497 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196496,G__196497) : tailrecursion.hoplon.span.call(null,G__196496,G__196497));
})();
var G__196393 = "(";
var G__196394 = (function (){var G__196498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196499 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196498,G__196499) : tailrecursion.hoplon.span.call(null,G__196498,G__196499));
})();
var G__196395 = " ";
var G__196396 = (function (){var G__196500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196501 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196500,G__196501) : tailrecursion.hoplon.span.call(null,G__196500,G__196501));
})();
var G__196397 = " ";
var G__196398 = (function (){var G__196502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196503 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196502,G__196503) : tailrecursion.hoplon.span.call(null,G__196502,G__196503));
})();
var G__196399 = ") ";
var G__196400 = (function (){var G__196504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196505 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196504,G__196505) : tailrecursion.hoplon.span.call(null,G__196504,G__196505));
})();
var G__196401 = ")\n        (";
var G__196402 = (function (){var G__196506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196507 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196506,G__196507) : tailrecursion.hoplon.span.call(null,G__196506,G__196507));
})();
var G__196403 = " (";
var G__196404 = (function (){var G__196508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196509 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196508,G__196509) : tailrecursion.hoplon.span.call(null,G__196508,G__196509));
})();
var G__196405 = (function (){var G__196510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196511 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196510,G__196511) : tailrecursion.hoplon.span.call(null,G__196510,G__196511));
})();
var G__196406 = " ";
var G__196407 = (function (){var G__196512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196513 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196512,G__196513) : tailrecursion.hoplon.span.call(null,G__196512,G__196513));
})();
var G__196408 = ") (";
var G__196409 = (function (){var G__196514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196515 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196514,G__196515) : tailrecursion.hoplon.span.call(null,G__196514,G__196515));
})();
var G__196410 = (function (){var G__196516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196517 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196516,G__196517) : tailrecursion.hoplon.span.call(null,G__196516,G__196517));
})();
var G__196411 = "))\n        ";
var G__196412 = (function (){var G__196518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196519 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196518,G__196519) : tailrecursion.hoplon.span.call(null,G__196518,G__196519));
})();
var G__196413 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$101 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$101(G__196313,G__196314,G__196315,G__196316,G__196317,G__196318,G__196319,G__196320,G__196321,G__196322,G__196323,G__196324,G__196325,G__196326,G__196327,G__196328,G__196329,G__196330,G__196331,G__196332,G__196333,G__196334,G__196335,G__196336,G__196337,G__196338,G__196339,G__196340,G__196341,G__196342,G__196343,G__196344,G__196345,G__196346,G__196347,G__196348,G__196349,G__196350,G__196351,G__196352,G__196353,G__196354,G__196355,G__196356,G__196357,G__196358,G__196359,G__196360,G__196361,G__196362,G__196363,G__196364,G__196365,G__196366,G__196367,G__196368,G__196369,G__196370,G__196371,G__196372,G__196373,G__196374,G__196375,G__196376,G__196377,G__196378,G__196379,G__196380,G__196381,G__196382,G__196383,G__196384,G__196385,G__196386,G__196387,G__196388,G__196389,G__196390,G__196391,G__196392,G__196393,G__196394,G__196395,G__196396,G__196397,G__196398,G__196399,G__196400,G__196401,G__196402,G__196403,G__196404,G__196405,G__196406,G__196407,G__196408,G__196409,G__196410,G__196411,G__196412,G__196413) : tailrecursion.hoplon.pre.call(null,G__196313,G__196314,G__196315,G__196316,G__196317,G__196318,G__196319,G__196320,G__196321,G__196322,G__196323,G__196324,G__196325,G__196326,G__196327,G__196328,G__196329,G__196330,G__196331,G__196332,G__196333,G__196334,G__196335,G__196336,G__196337,G__196338,G__196339,G__196340,G__196341,G__196342,G__196343,G__196344,G__196345,G__196346,G__196347,G__196348,G__196349,G__196350,G__196351,G__196352,G__196353,G__196354,G__196355,G__196356,G__196357,G__196358,G__196359,G__196360,G__196361,G__196362,G__196363,G__196364,G__196365,G__196366,G__196367,G__196368,G__196369,G__196370,G__196371,G__196372,G__196373,G__196374,G__196375,G__196376,G__196377,G__196378,G__196379,G__196380,G__196381,G__196382,G__196383,G__196384,G__196385,G__196386,G__196387,G__196388,G__196389,G__196390,G__196391,G__196392,G__196393,G__196394,G__196395,G__196396,G__196397,G__196398,G__196399,G__196400,G__196401,G__196402,G__196403,G__196404,G__196405,G__196406,G__196407,G__196408,G__196409,G__196410,G__196411,G__196412,G__196413));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__196311,G__196312) : tailrecursion.hoplon.div.call(null,G__196311,G__196312));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__196310) : tailrecursion.hoplon.div.call(null,G__196310));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196100;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196099;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196098;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196097;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_196520 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196521 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_196522 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196523 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__196524 = cljs.core.PersistentArrayMap.EMPTY;
var G__196525 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In case representing pairs as procedures wasn",(function (){var G__196526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__196527 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__196526,G__196527) : tailrecursion.hoplon.markdown.simple_node.call(null,G__196526,G__196527));
})(),"t mind-boggling enough, consider that, in a language that can manipulate procedures, we can get by without numbers (at least insofar as nonnegative integers are concerned) by implementing 0 and the operation of adding 1 as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196524,G__196525) : tailrecursion.hoplon.markdown.para_node.call(null,G__196524,G__196525));
})(),(function (){var G__196602 = (function (){var G__196603 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__196604 = (function (){var G__196605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__196606 = "(";
var G__196607 = (function (){var G__196641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196642 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196641,G__196642) : tailrecursion.hoplon.span.call(null,G__196641,G__196642));
})();
var G__196608 = (function (){var G__196643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196644 = "zero";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196643,G__196644) : tailrecursion.hoplon.span.call(null,G__196643,G__196644));
})();
var G__196609 = " (";
var G__196610 = (function (){var G__196645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196646 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196645,G__196646) : tailrecursion.hoplon.span.call(null,G__196645,G__196646));
})();
var G__196611 = "[";
var G__196612 = (function (){var G__196647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196648 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196647,G__196648) : tailrecursion.hoplon.span.call(null,G__196647,G__196648));
})();
var G__196613 = "] (";
var G__196614 = (function (){var G__196649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196650 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196649,G__196650) : tailrecursion.hoplon.span.call(null,G__196649,G__196650));
})();
var G__196615 = "[";
var G__196616 = (function (){var G__196651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196652 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196651,G__196652) : tailrecursion.hoplon.span.call(null,G__196651,G__196652));
})();
var G__196617 = "] ";
var G__196618 = (function (){var G__196653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196654 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196653,G__196654) : tailrecursion.hoplon.span.call(null,G__196653,G__196654));
})();
var G__196619 = ")))\n(";
var G__196620 = (function (){var G__196655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196656 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196655,G__196656) : tailrecursion.hoplon.span.call(null,G__196655,G__196656));
})();
var G__196621 = (function (){var G__196657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196658 = "add-1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196657,G__196658) : tailrecursion.hoplon.span.call(null,G__196657,G__196658));
})();
var G__196622 = " [";
var G__196623 = (function (){var G__196659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196660 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196659,G__196660) : tailrecursion.hoplon.span.call(null,G__196659,G__196660));
})();
var G__196624 = "]\n  (";
var G__196625 = (function (){var G__196661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196662 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196661,G__196662) : tailrecursion.hoplon.span.call(null,G__196661,G__196662));
})();
var G__196626 = "[";
var G__196627 = (function (){var G__196663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196664 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196663,G__196664) : tailrecursion.hoplon.span.call(null,G__196663,G__196664));
})();
var G__196628 = "] (";
var G__196629 = (function (){var G__196665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196666 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196665,G__196666) : tailrecursion.hoplon.span.call(null,G__196665,G__196666));
})();
var G__196630 = "[";
var G__196631 = (function (){var G__196667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196668 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196667,G__196668) : tailrecursion.hoplon.span.call(null,G__196667,G__196668));
})();
var G__196632 = "] (";
var G__196633 = (function (){var G__196669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196670 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196669,G__196670) : tailrecursion.hoplon.span.call(null,G__196669,G__196670));
})();
var G__196634 = " ((";
var G__196635 = (function (){var G__196671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196672 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196671,G__196672) : tailrecursion.hoplon.span.call(null,G__196671,G__196672));
})();
var G__196636 = " ";
var G__196637 = (function (){var G__196673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196674 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196673,G__196674) : tailrecursion.hoplon.span.call(null,G__196673,G__196674));
})();
var G__196638 = ") ";
var G__196639 = (function (){var G__196675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196676 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196675,G__196676) : tailrecursion.hoplon.span.call(null,G__196675,G__196676));
})();
var G__196640 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__196605,G__196606,G__196607,G__196608,G__196609,G__196610,G__196611,G__196612,G__196613,G__196614,G__196615,G__196616,G__196617,G__196618,G__196619,G__196620,G__196621,G__196622,G__196623,G__196624,G__196625,G__196626,G__196627,G__196628,G__196629,G__196630,G__196631,G__196632,G__196633,G__196634,G__196635,G__196636,G__196637,G__196638,G__196639,G__196640) : tailrecursion.hoplon.pre.call(null,G__196605,G__196606,G__196607,G__196608,G__196609,G__196610,G__196611,G__196612,G__196613,G__196614,G__196615,G__196616,G__196617,G__196618,G__196619,G__196620,G__196621,G__196622,G__196623,G__196624,G__196625,G__196626,G__196627,G__196628,G__196629,G__196630,G__196631,G__196632,G__196633,G__196634,G__196635,G__196636,G__196637,G__196638,G__196639,G__196640));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__196603,G__196604) : tailrecursion.hoplon.div.call(null,G__196603,G__196604));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__196602) : tailrecursion.hoplon.div.call(null,G__196602));
})(),(function (){var G__196677 = cljs.core.PersistentArrayMap.EMPTY;
var G__196678 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This representation is known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Church numerals"], null)], 0)),", after its inventor, Alanzo Church, the logician who invented the \u03BB calculus."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196677,G__196678) : tailrecursion.hoplon.markdown.para_node.call(null,G__196677,G__196678));
})(),(function (){var G__196679 = cljs.core.PersistentArrayMap.EMPTY;
var G__196680 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define ",(function (){var G__196681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"one"], null);
var G__196682 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196681,G__196682) : tailrecursion.hoplon.markdown.code_node.call(null,G__196681,G__196682));
})()," and ",(function (){var G__196683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"two"], null);
var G__196684 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196683,G__196684) : tailrecursion.hoplon.markdown.code_node.call(null,G__196683,G__196684));
})()," directly (not in terms of ",(function (){var G__196685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"zero"], null);
var G__196686 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196685,G__196686) : tailrecursion.hoplon.markdown.code_node.call(null,G__196685,G__196686));
})()," and ",(function (){var G__196687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-1"], null);
var G__196688 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196687,G__196688) : tailrecursion.hoplon.markdown.code_node.call(null,G__196687,G__196688));
})(),"). (Hint: Use substitution to evaluate ",(function (){var G__196689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(add-1 zero)"], null);
var G__196690 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196689,G__196690) : tailrecursion.hoplon.markdown.code_node.call(null,G__196689,G__196690));
})(),"). Give a direct definition of the addition procedure + (not in terms of repeated application of ",(function (){var G__196691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-1"], null);
var G__196692 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196691,G__196692) : tailrecursion.hoplon.markdown.code_node.call(null,G__196691,G__196692));
})(),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196679,G__196680) : tailrecursion.hoplon.markdown.para_node.call(null,G__196679,G__196680));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196523;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196522;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196521;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196520;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_196693 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196694 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_196695 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196696 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__196767 = (function (){var G__196768 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__196769 = (function (){var G__196770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__196771 = "(";
var G__196772 = (function (){var G__196804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196805 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196804,G__196805) : tailrecursion.hoplon.span.call(null,G__196804,G__196805));
})();
var G__196773 = (function (){var G__196806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196807 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196806,G__196807) : tailrecursion.hoplon.span.call(null,G__196806,G__196807));
})();
var G__196774 = "\n  (";
var G__196775 = (function (){var G__196808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196809 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196808,G__196809) : tailrecursion.hoplon.span.call(null,G__196808,G__196809));
})();
var G__196776 = "[";
var G__196777 = (function (){var G__196810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196811 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196810,G__196811) : tailrecursion.hoplon.span.call(null,G__196810,G__196811));
})();
var G__196778 = "] (";
var G__196779 = (function (){var G__196812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196813 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196812,G__196813) : tailrecursion.hoplon.span.call(null,G__196812,G__196813));
})();
var G__196780 = "[";
var G__196781 = (function (){var G__196814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196815 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196814,G__196815) : tailrecursion.hoplon.span.call(null,G__196814,G__196815));
})();
var G__196782 = "] (";
var G__196783 = (function (){var G__196816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196817 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196816,G__196817) : tailrecursion.hoplon.span.call(null,G__196816,G__196817));
})();
var G__196784 = " ";
var G__196785 = (function (){var G__196818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196819 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196818,G__196819) : tailrecursion.hoplon.span.call(null,G__196818,G__196819));
})();
var G__196786 = "))))\n(";
var G__196787 = (function (){var G__196820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196821 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196820,G__196821) : tailrecursion.hoplon.span.call(null,G__196820,G__196821));
})();
var G__196788 = (function (){var G__196822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196823 = "two";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196822,G__196823) : tailrecursion.hoplon.span.call(null,G__196822,G__196823));
})();
var G__196789 = "\n  (";
var G__196790 = (function (){var G__196824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196825 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196824,G__196825) : tailrecursion.hoplon.span.call(null,G__196824,G__196825));
})();
var G__196791 = "[";
var G__196792 = (function (){var G__196826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196827 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196826,G__196827) : tailrecursion.hoplon.span.call(null,G__196826,G__196827));
})();
var G__196793 = "] (";
var G__196794 = (function (){var G__196828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196829 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196828,G__196829) : tailrecursion.hoplon.span.call(null,G__196828,G__196829));
})();
var G__196795 = "[";
var G__196796 = (function (){var G__196830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196831 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196830,G__196831) : tailrecursion.hoplon.span.call(null,G__196830,G__196831));
})();
var G__196797 = "] (";
var G__196798 = (function (){var G__196832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196833 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196832,G__196833) : tailrecursion.hoplon.span.call(null,G__196832,G__196833));
})();
var G__196799 = " (";
var G__196800 = (function (){var G__196834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196835 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196834,G__196835) : tailrecursion.hoplon.span.call(null,G__196834,G__196835));
})();
var G__196801 = " ";
var G__196802 = (function (){var G__196836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196837 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196836,G__196837) : tailrecursion.hoplon.span.call(null,G__196836,G__196837));
})();
var G__196803 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34(G__196770,G__196771,G__196772,G__196773,G__196774,G__196775,G__196776,G__196777,G__196778,G__196779,G__196780,G__196781,G__196782,G__196783,G__196784,G__196785,G__196786,G__196787,G__196788,G__196789,G__196790,G__196791,G__196792,G__196793,G__196794,G__196795,G__196796,G__196797,G__196798,G__196799,G__196800,G__196801,G__196802,G__196803) : tailrecursion.hoplon.pre.call(null,G__196770,G__196771,G__196772,G__196773,G__196774,G__196775,G__196776,G__196777,G__196778,G__196779,G__196780,G__196781,G__196782,G__196783,G__196784,G__196785,G__196786,G__196787,G__196788,G__196789,G__196790,G__196791,G__196792,G__196793,G__196794,G__196795,G__196796,G__196797,G__196798,G__196799,G__196800,G__196801,G__196802,G__196803));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__196768,G__196769) : tailrecursion.hoplon.div.call(null,G__196768,G__196769));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__196767) : tailrecursion.hoplon.div.call(null,G__196767));
})(),(function (){var G__196838 = cljs.core.PersistentArrayMap.EMPTY;
var G__196839 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for addition, first let",(function (){var G__196840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__196841 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__196840,G__196841) : tailrecursion.hoplon.markdown.simple_node.call(null,G__196840,G__196841));
})(),"s build up a some functions to make this easier to reason about."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196838,G__196839) : tailrecursion.hoplon.markdown.para_node.call(null,G__196838,G__196839));
})(),(function (){var G__196881 = (function (){var G__196882 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__196883 = (function (){var G__196884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__196885 = "(";
var G__196886 = (function (){var G__196903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196904 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196903,G__196904) : tailrecursion.hoplon.span.call(null,G__196903,G__196904));
})();
var G__196887 = (function (){var G__196905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196906 = "compose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196905,G__196906) : tailrecursion.hoplon.span.call(null,G__196905,G__196906));
})();
var G__196888 = " [";
var G__196889 = (function (){var G__196907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196908 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196907,G__196908) : tailrecursion.hoplon.span.call(null,G__196907,G__196908));
})();
var G__196890 = " ";
var G__196891 = (function (){var G__196909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196910 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196909,G__196910) : tailrecursion.hoplon.span.call(null,G__196909,G__196910));
})();
var G__196892 = "]\n  (";
var G__196893 = (function (){var G__196911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196912 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196911,G__196912) : tailrecursion.hoplon.span.call(null,G__196911,G__196912));
})();
var G__196894 = "[";
var G__196895 = (function (){var G__196913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196914 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196913,G__196914) : tailrecursion.hoplon.span.call(null,G__196913,G__196914));
})();
var G__196896 = "] (";
var G__196897 = (function (){var G__196915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196916 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196915,G__196916) : tailrecursion.hoplon.span.call(null,G__196915,G__196916));
})();
var G__196898 = " (";
var G__196899 = (function (){var G__196917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196918 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196917,G__196918) : tailrecursion.hoplon.span.call(null,G__196917,G__196918));
})();
var G__196900 = " ";
var G__196901 = (function (){var G__196919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196920 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196919,G__196920) : tailrecursion.hoplon.span.call(null,G__196919,G__196920));
})();
var G__196902 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__196884,G__196885,G__196886,G__196887,G__196888,G__196889,G__196890,G__196891,G__196892,G__196893,G__196894,G__196895,G__196896,G__196897,G__196898,G__196899,G__196900,G__196901,G__196902) : tailrecursion.hoplon.pre.call(null,G__196884,G__196885,G__196886,G__196887,G__196888,G__196889,G__196890,G__196891,G__196892,G__196893,G__196894,G__196895,G__196896,G__196897,G__196898,G__196899,G__196900,G__196901,G__196902));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__196882,G__196883) : tailrecursion.hoplon.div.call(null,G__196882,G__196883));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__196881) : tailrecursion.hoplon.div.call(null,G__196881));
})(),(function (){var G__196921 = cljs.core.PersistentArrayMap.EMPTY;
var G__196922 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With that, we can now define"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196921,G__196922) : tailrecursion.hoplon.markdown.para_node.call(null,G__196921,G__196922));
})(),(function (){var G__196970 = (function (){var G__196971 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__196972 = (function (){var G__196973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__196974 = "(";
var G__196975 = (function (){var G__196996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196997 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196996,G__196997) : tailrecursion.hoplon.span.call(null,G__196996,G__196997));
})();
var G__196976 = (function (){var G__196998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196999 = "add";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196998,G__196999) : tailrecursion.hoplon.span.call(null,G__196998,G__196999));
})();
var G__196977 = " [";
var G__196978 = (function (){var G__197000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197001 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197000,G__197001) : tailrecursion.hoplon.span.call(null,G__197000,G__197001));
})();
var G__196979 = " ";
var G__196980 = (function (){var G__197002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197003 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197002,G__197003) : tailrecursion.hoplon.span.call(null,G__197002,G__197003));
})();
var G__196981 = "]\n  (";
var G__196982 = (function (){var G__197004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197005 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197004,G__197005) : tailrecursion.hoplon.span.call(null,G__197004,G__197005));
})();
var G__196983 = "[";
var G__196984 = (function (){var G__197006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197007 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197006,G__197007) : tailrecursion.hoplon.span.call(null,G__197006,G__197007));
})();
var G__196985 = "]\n    (";
var G__196986 = (function (){var G__197008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197009 = "compose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197008,G__197009) : tailrecursion.hoplon.span.call(null,G__197008,G__197009));
})();
var G__196987 = " (";
var G__196988 = (function (){var G__197010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197011 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197010,G__197011) : tailrecursion.hoplon.span.call(null,G__197010,G__197011));
})();
var G__196989 = " ";
var G__196990 = (function (){var G__197012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197013 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197012,G__197013) : tailrecursion.hoplon.span.call(null,G__197012,G__197013));
})();
var G__196991 = ") (";
var G__196992 = (function (){var G__197014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197015 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197014,G__197015) : tailrecursion.hoplon.span.call(null,G__197014,G__197015));
})();
var G__196993 = " ";
var G__196994 = (function (){var G__197016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197017 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197016,G__197017) : tailrecursion.hoplon.span.call(null,G__197016,G__197017));
})();
var G__196995 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__196973,G__196974,G__196975,G__196976,G__196977,G__196978,G__196979,G__196980,G__196981,G__196982,G__196983,G__196984,G__196985,G__196986,G__196987,G__196988,G__196989,G__196990,G__196991,G__196992,G__196993,G__196994,G__196995) : tailrecursion.hoplon.pre.call(null,G__196973,G__196974,G__196975,G__196976,G__196977,G__196978,G__196979,G__196980,G__196981,G__196982,G__196983,G__196984,G__196985,G__196986,G__196987,G__196988,G__196989,G__196990,G__196991,G__196992,G__196993,G__196994,G__196995));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__196971,G__196972) : tailrecursion.hoplon.div.call(null,G__196971,G__196972));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__196970) : tailrecursion.hoplon.div.call(null,G__196970));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196696;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196695;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196694;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196693;
}})()], 0))], 0))], 0));
var G__191122 = "";
var G__191123 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Extended Exercise: Interval Arithmetic"], null),(function (){var _STAR_references_STAR_197018 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197019 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_197020 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197021 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__197022 = cljs.core.PersistentArrayMap.EMPTY;
var G__197023 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa P. Hacker is designing a system to help people solve engineering problems. One feature she wants to provide in her system is the ability to manipulate inexact quantities (such as measured parameters of physical devices) with known precision, so that when computations are done with such approximate quantities the results will be numbers of known precision."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197022,G__197023) : tailrecursion.hoplon.markdown.para_node.call(null,G__197022,G__197023));
})(),(function (){var G__197024 = cljs.core.PersistentArrayMap.EMPTY;
var G__197025 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Electrical engineers will be using Alyssa",(function (){var G__197026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__197027 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__197026,G__197027) : tailrecursion.hoplon.markdown.simple_node.call(null,G__197026,G__197027));
})(),"s system to compute electrical quantities. It is sometimes necessary for them to compute the value of a parallel equivalent resistance \\(R_p\\) of two resistors \\(R_1\\) and \\(R_2\\) using the formula"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197024,G__197025) : tailrecursion.hoplon.markdown.para_node.call(null,G__197024,G__197025));
})(),(function (){var G__197028 = cljs.core.PersistentArrayMap.EMPTY;
var G__197029 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$R_p=\\frac{1}{1/R_1+1/R_2}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197028,G__197029) : tailrecursion.hoplon.markdown.para_node.call(null,G__197028,G__197029));
})(),(function (){var G__197030 = cljs.core.PersistentArrayMap.EMPTY;
var G__197031 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Resistance values are usually known only up to some tolerance guaranteed by the manufacturer of the resistor. For example, if you buy a resistor labeled ",(function (){var G__197032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__197033 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["6.8 ohms with 10% tolerance"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__197032,G__197033) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__197032,G__197033));
})()," you can only be sure that the resistor has a resistance between 6.8 - 0.68 = 6.12 and 6.8 + 0.68 = 7.48 ohms. Thus, if you have a 6.8-ohm 10% resistor in parallel with a 4.7-ohm 5% resistor, the resistance of the combination can range from about 2.58 ohms (if the two resistors are at the lower bounds) to about 2.97 ohms (if the two resistors are at the upper bounds)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197030,G__197031) : tailrecursion.hoplon.markdown.para_node.call(null,G__197030,G__197031));
})(),(function (){var G__197034 = cljs.core.PersistentArrayMap.EMPTY;
var G__197035 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa",(function (){var G__197036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__197037 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__197036,G__197037) : tailrecursion.hoplon.markdown.simple_node.call(null,G__197036,G__197037));
})(),"s idea is to implement ",(function (){var G__197038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__197039 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["interval arithmetic"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__197038,G__197039) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__197038,G__197039));
})()," as a set of arithmetic operations for combining ",(function (){var G__197040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__197041 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["intervals"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__197040,G__197041) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__197040,G__197041));
})()," (objects that represent the range of possible values of an inexact quantity). The result of adding, subtracting, multiplying, or dividing two intervals is itself an interval, representing the range of the result."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197034,G__197035) : tailrecursion.hoplon.markdown.para_node.call(null,G__197034,G__197035));
})(),(function (){var G__197042 = cljs.core.PersistentArrayMap.EMPTY;
var G__197043 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa postulates the existence of an abstract object called an ",(function (){var G__197044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__197045 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["interval"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__197044,G__197045) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__197044,G__197045));
})()," that has two endpoints: a lower bound and an upper bound. She also presumes that, given the endpoints of an interval, she can construct the interval using the data constructor ",(function (){var G__197046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-interval"], null);
var G__197047 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__197046,G__197047) : tailrecursion.hoplon.markdown.code_node.call(null,G__197046,G__197047));
})(),". Alyssa first writes a procedure for adding two intervals. She reasons that the minimum value the sum could be is the sum of the two lower bounds and the maximum value it could be is the sum of the two upper bounds:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197042,G__197043) : tailrecursion.hoplon.markdown.para_node.call(null,G__197042,G__197043));
})(),(function (){var G__197111 = (function (){var G__197112 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__197113 = (function (){var G__197114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__197115 = "(";
var G__197116 = (function (){var G__197145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197146 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197145,G__197146) : tailrecursion.hoplon.span.call(null,G__197145,G__197146));
})();
var G__197117 = (function (){var G__197147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197148 = "add-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197147,G__197148) : tailrecursion.hoplon.span.call(null,G__197147,G__197148));
})();
var G__197118 = " [";
var G__197119 = (function (){var G__197149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197150 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197149,G__197150) : tailrecursion.hoplon.span.call(null,G__197149,G__197150));
})();
var G__197120 = " ";
var G__197121 = (function (){var G__197151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197152 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197151,G__197152) : tailrecursion.hoplon.span.call(null,G__197151,G__197152));
})();
var G__197122 = "]\n  (";
var G__197123 = (function (){var G__197153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197154 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197153,G__197154) : tailrecursion.hoplon.span.call(null,G__197153,G__197154));
})();
var G__197124 = " (";
var G__197125 = (function (){var G__197155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197156 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197155,G__197156) : tailrecursion.hoplon.span.call(null,G__197155,G__197156));
})();
var G__197126 = "(";
var G__197127 = (function (){var G__197157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197158 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197157,G__197158) : tailrecursion.hoplon.span.call(null,G__197157,G__197158));
})();
var G__197128 = " ";
var G__197129 = (function (){var G__197159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197160 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197159,G__197160) : tailrecursion.hoplon.span.call(null,G__197159,G__197160));
})();
var G__197130 = ") (";
var G__197131 = (function (){var G__197161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197162 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197161,G__197162) : tailrecursion.hoplon.span.call(null,G__197161,G__197162));
})();
var G__197132 = " ";
var G__197133 = (function (){var G__197163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197164 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197163,G__197164) : tailrecursion.hoplon.span.call(null,G__197163,G__197164));
})();
var G__197134 = "))\n                 (";
var G__197135 = (function (){var G__197165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197166 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197165,G__197166) : tailrecursion.hoplon.span.call(null,G__197165,G__197166));
})();
var G__197136 = "(";
var G__197137 = (function (){var G__197167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197168 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197167,G__197168) : tailrecursion.hoplon.span.call(null,G__197167,G__197168));
})();
var G__197138 = " ";
var G__197139 = (function (){var G__197169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197170 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197169,G__197170) : tailrecursion.hoplon.span.call(null,G__197169,G__197170));
})();
var G__197140 = ") (";
var G__197141 = (function (){var G__197171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197172 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197171,G__197172) : tailrecursion.hoplon.span.call(null,G__197171,G__197172));
})();
var G__197142 = " ";
var G__197143 = (function (){var G__197173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197174 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197173,G__197174) : tailrecursion.hoplon.span.call(null,G__197173,G__197174));
})();
var G__197144 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__197114,G__197115,G__197116,G__197117,G__197118,G__197119,G__197120,G__197121,G__197122,G__197123,G__197124,G__197125,G__197126,G__197127,G__197128,G__197129,G__197130,G__197131,G__197132,G__197133,G__197134,G__197135,G__197136,G__197137,G__197138,G__197139,G__197140,G__197141,G__197142,G__197143,G__197144) : tailrecursion.hoplon.pre.call(null,G__197114,G__197115,G__197116,G__197117,G__197118,G__197119,G__197120,G__197121,G__197122,G__197123,G__197124,G__197125,G__197126,G__197127,G__197128,G__197129,G__197130,G__197131,G__197132,G__197133,G__197134,G__197135,G__197136,G__197137,G__197138,G__197139,G__197140,G__197141,G__197142,G__197143,G__197144));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__197112,G__197113) : tailrecursion.hoplon.div.call(null,G__197112,G__197113));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__197111) : tailrecursion.hoplon.div.call(null,G__197111));
})(),(function (){var G__197175 = cljs.core.PersistentArrayMap.EMPTY;
var G__197176 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa also works out the product of two intervals by finding the minimum and the maximum of the products of the bounds and using them as bounds of the resulting interval. (",(function (){var G__197177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"min"], null);
var G__197178 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__197177,G__197178) : tailrecursion.hoplon.markdown.code_node.call(null,G__197177,G__197178));
})()," and ",(function (){var G__197179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"max"], null);
var G__197180 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__197179,G__197180) : tailrecursion.hoplon.markdown.code_node.call(null,G__197179,G__197180));
})()," are primitives that find the minimum and maximum of any number of arguments.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197175,G__197176) : tailrecursion.hoplon.markdown.para_node.call(null,G__197175,G__197176));
})(),(function (){var G__197342 = (function (){var G__197343 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__197344 = (function (){var G__197345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__197346 = "(";
var G__197347 = (function (){var G__197424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197425 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197424,G__197425) : tailrecursion.hoplon.span.call(null,G__197424,G__197425));
})();
var G__197348 = (function (){var G__197426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197427 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197426,G__197427) : tailrecursion.hoplon.span.call(null,G__197426,G__197427));
})();
var G__197349 = " [";
var G__197350 = (function (){var G__197428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197429 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197428,G__197429) : tailrecursion.hoplon.span.call(null,G__197428,G__197429));
})();
var G__197351 = " ";
var G__197352 = (function (){var G__197430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197431 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197430,G__197431) : tailrecursion.hoplon.span.call(null,G__197430,G__197431));
})();
var G__197353 = "]\n  (";
var G__197354 = (function (){var G__197432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197433 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197432,G__197433) : tailrecursion.hoplon.span.call(null,G__197432,G__197433));
})();
var G__197355 = "[";
var G__197356 = (function (){var G__197434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197435 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197434,G__197435) : tailrecursion.hoplon.span.call(null,G__197434,G__197435));
})();
var G__197357 = " (";
var G__197358 = (function (){var G__197436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197437 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197436,G__197437) : tailrecursion.hoplon.span.call(null,G__197436,G__197437));
})();
var G__197359 = "(";
var G__197360 = (function (){var G__197438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197439 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197438,G__197439) : tailrecursion.hoplon.span.call(null,G__197438,G__197439));
})();
var G__197361 = " ";
var G__197362 = (function (){var G__197440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197441 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197440,G__197441) : tailrecursion.hoplon.span.call(null,G__197440,G__197441));
})();
var G__197363 = ") (";
var G__197364 = (function (){var G__197442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197443 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197442,G__197443) : tailrecursion.hoplon.span.call(null,G__197442,G__197443));
})();
var G__197365 = " ";
var G__197366 = (function (){var G__197444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197445 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197444,G__197445) : tailrecursion.hoplon.span.call(null,G__197444,G__197445));
})();
var G__197367 = "))\n        ";
var G__197368 = (function (){var G__197446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197447 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197446,G__197447) : tailrecursion.hoplon.span.call(null,G__197446,G__197447));
})();
var G__197369 = " (";
var G__197370 = (function (){var G__197448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197449 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197448,G__197449) : tailrecursion.hoplon.span.call(null,G__197448,G__197449));
})();
var G__197371 = "(";
var G__197372 = (function (){var G__197450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197451 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197450,G__197451) : tailrecursion.hoplon.span.call(null,G__197450,G__197451));
})();
var G__197373 = " ";
var G__197374 = (function (){var G__197452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197453 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197452,G__197453) : tailrecursion.hoplon.span.call(null,G__197452,G__197453));
})();
var G__197375 = ") (";
var G__197376 = (function (){var G__197454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197455 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197454,G__197455) : tailrecursion.hoplon.span.call(null,G__197454,G__197455));
})();
var G__197377 = " ";
var G__197378 = (function (){var G__197456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197457 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197456,G__197457) : tailrecursion.hoplon.span.call(null,G__197456,G__197457));
})();
var G__197379 = "))\n        ";
var G__197380 = (function (){var G__197458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197459 = "p3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197458,G__197459) : tailrecursion.hoplon.span.call(null,G__197458,G__197459));
})();
var G__197381 = " (";
var G__197382 = (function (){var G__197460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197461 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197460,G__197461) : tailrecursion.hoplon.span.call(null,G__197460,G__197461));
})();
var G__197383 = "(";
var G__197384 = (function (){var G__197462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197463 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197462,G__197463) : tailrecursion.hoplon.span.call(null,G__197462,G__197463));
})();
var G__197385 = " ";
var G__197386 = (function (){var G__197464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197465 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197464,G__197465) : tailrecursion.hoplon.span.call(null,G__197464,G__197465));
})();
var G__197387 = ") (";
var G__197388 = (function (){var G__197466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197467 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197466,G__197467) : tailrecursion.hoplon.span.call(null,G__197466,G__197467));
})();
var G__197389 = " ";
var G__197390 = (function (){var G__197468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197469 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197468,G__197469) : tailrecursion.hoplon.span.call(null,G__197468,G__197469));
})();
var G__197391 = "))\n        ";
var G__197392 = (function (){var G__197470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197471 = "p4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197470,G__197471) : tailrecursion.hoplon.span.call(null,G__197470,G__197471));
})();
var G__197393 = " (";
var G__197394 = (function (){var G__197472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197473 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197472,G__197473) : tailrecursion.hoplon.span.call(null,G__197472,G__197473));
})();
var G__197395 = "(";
var G__197396 = (function (){var G__197474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197475 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197474,G__197475) : tailrecursion.hoplon.span.call(null,G__197474,G__197475));
})();
var G__197397 = " ";
var G__197398 = (function (){var G__197476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197477 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197476,G__197477) : tailrecursion.hoplon.span.call(null,G__197476,G__197477));
})();
var G__197399 = ") (";
var G__197400 = (function (){var G__197478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197479 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197478,G__197479) : tailrecursion.hoplon.span.call(null,G__197478,G__197479));
})();
var G__197401 = " ";
var G__197402 = (function (){var G__197480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197481 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197480,G__197481) : tailrecursion.hoplon.span.call(null,G__197480,G__197481));
})();
var G__197403 = "))]\n    (";
var G__197404 = (function (){var G__197482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197483 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197482,G__197483) : tailrecursion.hoplon.span.call(null,G__197482,G__197483));
})();
var G__197405 = " (";
var G__197406 = (function (){var G__197484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197485 = "min ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197484,G__197485) : tailrecursion.hoplon.span.call(null,G__197484,G__197485));
})();
var G__197407 = (function (){var G__197486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197487 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197486,G__197487) : tailrecursion.hoplon.span.call(null,G__197486,G__197487));
})();
var G__197408 = " ";
var G__197409 = (function (){var G__197488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197489 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197488,G__197489) : tailrecursion.hoplon.span.call(null,G__197488,G__197489));
})();
var G__197410 = " ";
var G__197411 = (function (){var G__197490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197491 = "p3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197490,G__197491) : tailrecursion.hoplon.span.call(null,G__197490,G__197491));
})();
var G__197412 = " ";
var G__197413 = (function (){var G__197492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197493 = "p4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197492,G__197493) : tailrecursion.hoplon.span.call(null,G__197492,G__197493));
})();
var G__197414 = ")\n                   (";
var G__197415 = (function (){var G__197494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197495 = "max ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197494,G__197495) : tailrecursion.hoplon.span.call(null,G__197494,G__197495));
})();
var G__197416 = (function (){var G__197496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197497 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197496,G__197497) : tailrecursion.hoplon.span.call(null,G__197496,G__197497));
})();
var G__197417 = " ";
var G__197418 = (function (){var G__197498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197499 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197498,G__197499) : tailrecursion.hoplon.span.call(null,G__197498,G__197499));
})();
var G__197419 = " ";
var G__197420 = (function (){var G__197500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197501 = "p3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197500,G__197501) : tailrecursion.hoplon.span.call(null,G__197500,G__197501));
})();
var G__197421 = " ";
var G__197422 = (function (){var G__197502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197503 = "p4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197502,G__197503) : tailrecursion.hoplon.span.call(null,G__197502,G__197503));
})();
var G__197423 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$79 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$79(G__197345,G__197346,G__197347,G__197348,G__197349,G__197350,G__197351,G__197352,G__197353,G__197354,G__197355,G__197356,G__197357,G__197358,G__197359,G__197360,G__197361,G__197362,G__197363,G__197364,G__197365,G__197366,G__197367,G__197368,G__197369,G__197370,G__197371,G__197372,G__197373,G__197374,G__197375,G__197376,G__197377,G__197378,G__197379,G__197380,G__197381,G__197382,G__197383,G__197384,G__197385,G__197386,G__197387,G__197388,G__197389,G__197390,G__197391,G__197392,G__197393,G__197394,G__197395,G__197396,G__197397,G__197398,G__197399,G__197400,G__197401,G__197402,G__197403,G__197404,G__197405,G__197406,G__197407,G__197408,G__197409,G__197410,G__197411,G__197412,G__197413,G__197414,G__197415,G__197416,G__197417,G__197418,G__197419,G__197420,G__197421,G__197422,G__197423) : tailrecursion.hoplon.pre.call(null,G__197345,G__197346,G__197347,G__197348,G__197349,G__197350,G__197351,G__197352,G__197353,G__197354,G__197355,G__197356,G__197357,G__197358,G__197359,G__197360,G__197361,G__197362,G__197363,G__197364,G__197365,G__197366,G__197367,G__197368,G__197369,G__197370,G__197371,G__197372,G__197373,G__197374,G__197375,G__197376,G__197377,G__197378,G__197379,G__197380,G__197381,G__197382,G__197383,G__197384,G__197385,G__197386,G__197387,G__197388,G__197389,G__197390,G__197391,G__197392,G__197393,G__197394,G__197395,G__197396,G__197397,G__197398,G__197399,G__197400,G__197401,G__197402,G__197403,G__197404,G__197405,G__197406,G__197407,G__197408,G__197409,G__197410,G__197411,G__197412,G__197413,G__197414,G__197415,G__197416,G__197417,G__197418,G__197419,G__197420,G__197421,G__197422,G__197423));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__197343,G__197344) : tailrecursion.hoplon.div.call(null,G__197343,G__197344));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__197342) : tailrecursion.hoplon.div.call(null,G__197342));
})(),(function (){var G__197504 = cljs.core.PersistentArrayMap.EMPTY;
var G__197505 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To divide two intervals, Alyssa multiplies the first by the reciprocal of the second. Note that the bounds of the reciprocal interval are the reciprocal of the upper-bound and the reciprocal of the lower-bound, in that order."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197504,G__197505) : tailrecursion.hoplon.markdown.para_node.call(null,G__197504,G__197505));
})(),(function (){var G__197567 = (function (){var G__197568 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__197569 = (function (){var G__197570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__197571 = "(";
var G__197572 = (function (){var G__197599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197600 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197599,G__197600) : tailrecursion.hoplon.span.call(null,G__197599,G__197600));
})();
var G__197573 = (function (){var G__197601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197602 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197601,G__197602) : tailrecursion.hoplon.span.call(null,G__197601,G__197602));
})();
var G__197574 = " [";
var G__197575 = (function (){var G__197603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197604 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197603,G__197604) : tailrecursion.hoplon.span.call(null,G__197603,G__197604));
})();
var G__197576 = " ";
var G__197577 = (function (){var G__197605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197606 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197605,G__197606) : tailrecursion.hoplon.span.call(null,G__197605,G__197606));
})();
var G__197578 = "]\n  (";
var G__197579 = (function (){var G__197607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197608 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197607,G__197608) : tailrecursion.hoplon.span.call(null,G__197607,G__197608));
})();
var G__197580 = " ";
var G__197581 = (function (){var G__197609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197610 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197609,G__197610) : tailrecursion.hoplon.span.call(null,G__197609,G__197610));
})();
var G__197582 = "\n                (";
var G__197583 = (function (){var G__197611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197612 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197611,G__197612) : tailrecursion.hoplon.span.call(null,G__197611,G__197612));
})();
var G__197584 = " (";
var G__197585 = (function (){var G__197613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197614 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197613,G__197614) : tailrecursion.hoplon.span.call(null,G__197613,G__197614));
})();
var G__197586 = (function (){var G__197615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__197616 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197615,G__197616) : tailrecursion.hoplon.span.call(null,G__197615,G__197616));
})();
var G__197587 = " (";
var G__197588 = (function (){var G__197617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197618 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197617,G__197618) : tailrecursion.hoplon.span.call(null,G__197617,G__197618));
})();
var G__197589 = " ";
var G__197590 = (function (){var G__197619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197620 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197619,G__197620) : tailrecursion.hoplon.span.call(null,G__197619,G__197620));
})();
var G__197591 = "))\n                               (";
var G__197592 = (function (){var G__197621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197622 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197621,G__197622) : tailrecursion.hoplon.span.call(null,G__197621,G__197622));
})();
var G__197593 = (function (){var G__197623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__197624 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197623,G__197624) : tailrecursion.hoplon.span.call(null,G__197623,G__197624));
})();
var G__197594 = " (";
var G__197595 = (function (){var G__197625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197626 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197625,G__197626) : tailrecursion.hoplon.span.call(null,G__197625,G__197626));
})();
var G__197596 = " ";
var G__197597 = (function (){var G__197627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197628 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197627,G__197628) : tailrecursion.hoplon.span.call(null,G__197627,G__197628));
})();
var G__197598 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29(G__197570,G__197571,G__197572,G__197573,G__197574,G__197575,G__197576,G__197577,G__197578,G__197579,G__197580,G__197581,G__197582,G__197583,G__197584,G__197585,G__197586,G__197587,G__197588,G__197589,G__197590,G__197591,G__197592,G__197593,G__197594,G__197595,G__197596,G__197597,G__197598) : tailrecursion.hoplon.pre.call(null,G__197570,G__197571,G__197572,G__197573,G__197574,G__197575,G__197576,G__197577,G__197578,G__197579,G__197580,G__197581,G__197582,G__197583,G__197584,G__197585,G__197586,G__197587,G__197588,G__197589,G__197590,G__197591,G__197592,G__197593,G__197594,G__197595,G__197596,G__197597,G__197598));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__197568,G__197569) : tailrecursion.hoplon.div.call(null,G__197568,G__197569));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__197567) : tailrecursion.hoplon.div.call(null,G__197567));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197021;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197020;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197019;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197018;
}})()], 0));
var G__191124 = "";
var G__191125 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_197629 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197630 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_197631 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197632 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__197633 = cljs.core.PersistentArrayMap.EMPTY;
var G__197634 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa",(function (){var G__197635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__197636 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__197635,G__197636) : tailrecursion.hoplon.markdown.simple_node.call(null,G__197635,G__197636));
})(),"s program is incomplete because she has not specified the implementation of the interval abstraction. Here is a definition of the interval constructor:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197633,G__197634) : tailrecursion.hoplon.markdown.para_node.call(null,G__197633,G__197634));
})(),(function (){var G__197667 = (function (){var G__197668 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__197669 = (function (){var G__197670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__197671 = "(";
var G__197672 = (function (){var G__197684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197685 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197684,G__197685) : tailrecursion.hoplon.span.call(null,G__197684,G__197685));
})();
var G__197673 = (function (){var G__197686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197687 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197686,G__197687) : tailrecursion.hoplon.span.call(null,G__197686,G__197687));
})();
var G__197674 = " [";
var G__197675 = (function (){var G__197688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197689 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197688,G__197689) : tailrecursion.hoplon.span.call(null,G__197688,G__197689));
})();
var G__197676 = " ";
var G__197677 = (function (){var G__197690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197691 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197690,G__197691) : tailrecursion.hoplon.span.call(null,G__197690,G__197691));
})();
var G__197678 = "]\n  (";
var G__197679 = (function (){var G__197692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197693 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197692,G__197693) : tailrecursion.hoplon.span.call(null,G__197692,G__197693));
})();
var G__197680 = (function (){var G__197694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197695 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197694,G__197695) : tailrecursion.hoplon.span.call(null,G__197694,G__197695));
})();
var G__197681 = " ";
var G__197682 = (function (){var G__197696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197697 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197696,G__197697) : tailrecursion.hoplon.span.call(null,G__197696,G__197697));
})();
var G__197683 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__197670,G__197671,G__197672,G__197673,G__197674,G__197675,G__197676,G__197677,G__197678,G__197679,G__197680,G__197681,G__197682,G__197683) : tailrecursion.hoplon.pre.call(null,G__197670,G__197671,G__197672,G__197673,G__197674,G__197675,G__197676,G__197677,G__197678,G__197679,G__197680,G__197681,G__197682,G__197683));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__197668,G__197669) : tailrecursion.hoplon.div.call(null,G__197668,G__197669));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__197667) : tailrecursion.hoplon.div.call(null,G__197667));
})(),(function (){var G__197698 = cljs.core.PersistentArrayMap.EMPTY;
var G__197699 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define selectors ",(function (){var G__197700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"upper-bound"], null);
var G__197701 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__197700,G__197701) : tailrecursion.hoplon.markdown.code_node.call(null,G__197700,G__197701));
})()," and ",(function (){var G__197702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"lower-bound"], null);
var G__197703 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__197702,G__197703) : tailrecursion.hoplon.markdown.code_node.call(null,G__197702,G__197703));
})()," to complete the implementation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197698,G__197699) : tailrecursion.hoplon.markdown.para_node.call(null,G__197698,G__197699));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197632;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197631;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197630;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197629;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_197704 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197705 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_197706 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197707 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__197748 = (function (){var G__197749 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__197750 = (function (){var G__197751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__197752 = "(";
var G__197753 = (function (){var G__197769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197770 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197769,G__197770) : tailrecursion.hoplon.span.call(null,G__197769,G__197770));
})();
var G__197754 = (function (){var G__197771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197772 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197771,G__197772) : tailrecursion.hoplon.span.call(null,G__197771,G__197772));
})();
var G__197755 = " [";
var G__197756 = (function (){var G__197773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197774 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197773,G__197774) : tailrecursion.hoplon.span.call(null,G__197773,G__197774));
})();
var G__197757 = "]\n  (";
var G__197758 = (function (){var G__197775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197776 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197775,G__197776) : tailrecursion.hoplon.span.call(null,G__197775,G__197776));
})();
var G__197759 = (function (){var G__197777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197778 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197777,G__197778) : tailrecursion.hoplon.span.call(null,G__197777,G__197778));
})();
var G__197760 = "))\n(";
var G__197761 = (function (){var G__197779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197780 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197779,G__197780) : tailrecursion.hoplon.span.call(null,G__197779,G__197780));
})();
var G__197762 = (function (){var G__197781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197782 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197781,G__197782) : tailrecursion.hoplon.span.call(null,G__197781,G__197782));
})();
var G__197763 = " [";
var G__197764 = (function (){var G__197783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197784 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197783,G__197784) : tailrecursion.hoplon.span.call(null,G__197783,G__197784));
})();
var G__197765 = "]\n  (";
var G__197766 = (function (){var G__197785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197786 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197785,G__197786) : tailrecursion.hoplon.span.call(null,G__197785,G__197786));
})();
var G__197767 = (function (){var G__197787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197788 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197787,G__197788) : tailrecursion.hoplon.span.call(null,G__197787,G__197788));
})();
var G__197768 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__197751,G__197752,G__197753,G__197754,G__197755,G__197756,G__197757,G__197758,G__197759,G__197760,G__197761,G__197762,G__197763,G__197764,G__197765,G__197766,G__197767,G__197768) : tailrecursion.hoplon.pre.call(null,G__197751,G__197752,G__197753,G__197754,G__197755,G__197756,G__197757,G__197758,G__197759,G__197760,G__197761,G__197762,G__197763,G__197764,G__197765,G__197766,G__197767,G__197768));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__197749,G__197750) : tailrecursion.hoplon.div.call(null,G__197749,G__197750));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__197748) : tailrecursion.hoplon.div.call(null,G__197748));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197707;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197706;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197705;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197704;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_197789 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197790 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_197791 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197792 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__197793 = cljs.core.PersistentArrayMap.EMPTY;
var G__197794 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using reasoning analogous to Alyssa",(function (){var G__197795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__197796 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__197795,G__197796) : tailrecursion.hoplon.markdown.simple_node.call(null,G__197795,G__197796));
})(),"s, describe how the difference of two intervals may be computed. Define a corresponding subtraction procedure, called ",(function (){var G__197797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-interval"], null);
var G__197798 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__197797,G__197798) : tailrecursion.hoplon.markdown.code_node.call(null,G__197797,G__197798));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197793,G__197794) : tailrecursion.hoplon.markdown.para_node.call(null,G__197793,G__197794));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197792;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197791;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197790;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197789;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_197799 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197800 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_197801 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197802 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__197803 = cljs.core.PersistentArrayMap.EMPTY;
var G__197804 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using reasoning analogous to Alyssa",(function (){var G__197805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__197806 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__197805,G__197806) : tailrecursion.hoplon.markdown.simple_node.call(null,G__197805,G__197806));
})(),"s, we",(function (){var G__197807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__197808 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__197807,G__197808) : tailrecursion.hoplon.markdown.simple_node.call(null,G__197807,G__197808));
})(),"d define ",(function (){var G__197809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-interval"], null);
var G__197810 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__197809,G__197810) : tailrecursion.hoplon.markdown.code_node.call(null,G__197809,G__197810));
})()," as:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197803,G__197804) : tailrecursion.hoplon.markdown.para_node.call(null,G__197803,G__197804));
})(),(function (){var G__197874 = (function (){var G__197875 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__197876 = (function (){var G__197877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__197878 = "(";
var G__197879 = (function (){var G__197908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197909 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197908,G__197909) : tailrecursion.hoplon.span.call(null,G__197908,G__197909));
})();
var G__197880 = (function (){var G__197910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197911 = "sub-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197910,G__197911) : tailrecursion.hoplon.span.call(null,G__197910,G__197911));
})();
var G__197881 = " [";
var G__197882 = (function (){var G__197912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197913 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197912,G__197913) : tailrecursion.hoplon.span.call(null,G__197912,G__197913));
})();
var G__197883 = " ";
var G__197884 = (function (){var G__197914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197915 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197914,G__197915) : tailrecursion.hoplon.span.call(null,G__197914,G__197915));
})();
var G__197885 = "]\n  (";
var G__197886 = (function (){var G__197916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197917 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197916,G__197917) : tailrecursion.hoplon.span.call(null,G__197916,G__197917));
})();
var G__197887 = " (";
var G__197888 = (function (){var G__197918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197919 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197918,G__197919) : tailrecursion.hoplon.span.call(null,G__197918,G__197919));
})();
var G__197889 = "(";
var G__197890 = (function (){var G__197920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197921 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197920,G__197921) : tailrecursion.hoplon.span.call(null,G__197920,G__197921));
})();
var G__197891 = " ";
var G__197892 = (function (){var G__197922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197923 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197922,G__197923) : tailrecursion.hoplon.span.call(null,G__197922,G__197923));
})();
var G__197893 = ") (";
var G__197894 = (function (){var G__197924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197925 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197924,G__197925) : tailrecursion.hoplon.span.call(null,G__197924,G__197925));
})();
var G__197895 = " ";
var G__197896 = (function (){var G__197926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197927 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197926,G__197927) : tailrecursion.hoplon.span.call(null,G__197926,G__197927));
})();
var G__197897 = "))\n                 (";
var G__197898 = (function (){var G__197928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197929 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197928,G__197929) : tailrecursion.hoplon.span.call(null,G__197928,G__197929));
})();
var G__197899 = "(";
var G__197900 = (function (){var G__197930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197931 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197930,G__197931) : tailrecursion.hoplon.span.call(null,G__197930,G__197931));
})();
var G__197901 = " ";
var G__197902 = (function (){var G__197932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197933 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197932,G__197933) : tailrecursion.hoplon.span.call(null,G__197932,G__197933));
})();
var G__197903 = ") (";
var G__197904 = (function (){var G__197934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197935 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197934,G__197935) : tailrecursion.hoplon.span.call(null,G__197934,G__197935));
})();
var G__197905 = " ";
var G__197906 = (function (){var G__197936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197937 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197936,G__197937) : tailrecursion.hoplon.span.call(null,G__197936,G__197937));
})();
var G__197907 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__197877,G__197878,G__197879,G__197880,G__197881,G__197882,G__197883,G__197884,G__197885,G__197886,G__197887,G__197888,G__197889,G__197890,G__197891,G__197892,G__197893,G__197894,G__197895,G__197896,G__197897,G__197898,G__197899,G__197900,G__197901,G__197902,G__197903,G__197904,G__197905,G__197906,G__197907) : tailrecursion.hoplon.pre.call(null,G__197877,G__197878,G__197879,G__197880,G__197881,G__197882,G__197883,G__197884,G__197885,G__197886,G__197887,G__197888,G__197889,G__197890,G__197891,G__197892,G__197893,G__197894,G__197895,G__197896,G__197897,G__197898,G__197899,G__197900,G__197901,G__197902,G__197903,G__197904,G__197905,G__197906,G__197907));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__197875,G__197876) : tailrecursion.hoplon.div.call(null,G__197875,G__197876));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__197874) : tailrecursion.hoplon.div.call(null,G__197874));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197802;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197801;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197800;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197799;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_197938 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197939 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_197940 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197941 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__197942 = cljs.core.PersistentArrayMap.EMPTY;
var G__197943 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["width"], null)], 0))," of an interval is half of the difference between its upper and lower bounds. The width is a measure of the uncertainty of the number specified by the interval. For some arithmetic operations the width of the result of combining two intervals is a function only of the widths of the argument intervals. Show that the width of the sum (or difference) of two intervals is a function only of the widths of the intervals being added (or subtracted). Give examples to show that this is not true for multiplication or division."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197942,G__197943) : tailrecursion.hoplon.markdown.para_node.call(null,G__197942,G__197943));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197941;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197940;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197939;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197938;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_197944 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197945 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_197946 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197947 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__197948 = cljs.core.PersistentArrayMap.EMPTY;
var G__197949 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__197950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__197951 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__197950,G__197951) : tailrecursion.hoplon.markdown.simple_node.call(null,G__197950,G__197951));
})(),"s define two intervals \\(x=(a-\\delta,a+\\delta)\\), and \\(y=(b-\\epsilon,b+\\epsilon)\\), where \\(\\delta,\\epsilon\\) are positive real numbers (and hence the width of their respective intervals). Then, the interval ",(function (){var G__197952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(add-interval x y)"], null);
var G__197953 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__197952,G__197953) : tailrecursion.hoplon.markdown.code_node.call(null,G__197952,G__197953));
})()," would be \\((a+b-(\\epsilon+delta),a+b+(\\epsilon+\\delta))\\), making the width of the sum equal to the sum of the widths."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197948,G__197949) : tailrecursion.hoplon.markdown.para_node.call(null,G__197948,G__197949));
})(),(function (){var G__197954 = cljs.core.PersistentArrayMap.EMPTY;
var G__197955 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Similarly, ",(function (){var G__197956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(sub-interval a b)"], null);
var G__197957 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__197956,G__197957) : tailrecursion.hoplon.markdown.code_node.call(null,G__197956,G__197957));
})()," would be,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197954,G__197955) : tailrecursion.hoplon.markdown.para_node.call(null,G__197954,G__197955));
})(),(function (){var G__197958 = cljs.core.PersistentArrayMap.EMPTY;
var G__197959 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$(a-\\delta - (b+\\epsilon),a+\\epsilon-(b-\\epsilon))=(a-b-(\\delta+\\epsilon),a-b+(\\delta-\\epsilon))$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197958,G__197959) : tailrecursion.hoplon.markdown.para_node.call(null,G__197958,G__197959));
})(),(function (){var G__197960 = cljs.core.PersistentArrayMap.EMPTY;
var G__197961 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["making the width of the difference of intervals equal to the  difference of the widths of the intervals."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197960,G__197961) : tailrecursion.hoplon.markdown.para_node.call(null,G__197960,G__197961));
})(),(function (){var G__197962 = cljs.core.PersistentArrayMap.EMPTY;
var G__197963 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For multiplication, however, things are not as simple. Let",(function (){var G__197964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__197965 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__197964,G__197965) : tailrecursion.hoplon.markdown.simple_node.call(null,G__197964,G__197965));
})(),"s consider two pairs of intervals, each pair with the same corresponding widths:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197962,G__197963) : tailrecursion.hoplon.markdown.para_node.call(null,G__197962,G__197963));
})(),(function (){var G__197966 = cljs.core.PersistentArrayMap.EMPTY;
var G__197967 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$a=(0,2), b=(0,2) c=(5,7) d=(5,7)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197966,G__197967) : tailrecursion.hoplon.markdown.para_node.call(null,G__197966,G__197967));
})(),(function (){var G__197968 = cljs.core.PersistentArrayMap.EMPTY;
var G__197969 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since these intervals all have the same width, if the width of the product is a function of the widths of the intervals, then the product of any two of these intervals should yield an interval with the same width. But this is clearly not this case because ",(function (){var G__197970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(width\n(mul-interval a b))"], null);
var G__197971 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__197970,G__197971) : tailrecursion.hoplon.markdown.code_node.call(null,G__197970,G__197971));
})()," is 2, but ",(function (){var G__197972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(width (mul-interval c d))"], null);
var G__197973 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__197972,G__197973) : tailrecursion.hoplon.markdown.code_node.call(null,G__197972,G__197973));
})()," is 12. So clearly the width of the product is not a function of the widths alone."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197968,G__197969) : tailrecursion.hoplon.markdown.para_node.call(null,G__197968,G__197969));
})(),(function (){var G__197974 = cljs.core.PersistentArrayMap.EMPTY;
var G__197975 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for division, we can define \\(a,b=(1,2)\\), and \\(c,d=\\((5,6)\\). Then, ",(function (){var G__197976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(div-interval a b)"], null);
var G__197977 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__197976,G__197977) : tailrecursion.hoplon.markdown.code_node.call(null,G__197976,G__197977));
})()," is \\((1/2, 2)\\), but ",(function (){var G__197978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(div-interval c d)"], null);
var G__197979 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__197978,G__197979) : tailrecursion.hoplon.markdown.code_node.call(null,G__197978,G__197979));
})()," is \\((5/6,6/5)\\). The width of the first is 0.75 or 3/4, but the width of the second is 11/60."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197974,G__197975) : tailrecursion.hoplon.markdown.para_node.call(null,G__197974,G__197975));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197947;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197946;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197945;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197944;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_197980 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197981 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_197982 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197983 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__197984 = cljs.core.PersistentArrayMap.EMPTY;
var G__197985 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Ben Bitdiddle, an expert systems programmer, looks over Alyssa",(function (){var G__197986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__197987 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__197986,G__197987) : tailrecursion.hoplon.markdown.simple_node.call(null,G__197986,G__197987));
})(),"s shoulder and comments that it is not clear what it means to divide by an interval that spans zero. Modify Alyssa",(function (){var G__197988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__197989 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__197988,G__197989) : tailrecursion.hoplon.markdown.simple_node.call(null,G__197988,G__197989));
})(),"s code to check for this condition and to signal an error if it occurs."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197984,G__197985) : tailrecursion.hoplon.markdown.para_node.call(null,G__197984,G__197985));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197983;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197982;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197981;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197980;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_197990 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197991 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_197992 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197993 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__198118 = (function (){var G__198119 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__198120 = (function (){var G__198121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__198122 = "(";
var G__198123 = (function (){var G__198181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198182 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198181,G__198182) : tailrecursion.hoplon.span.call(null,G__198181,G__198182));
})();
var G__198124 = (function (){var G__198183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198184 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198183,G__198184) : tailrecursion.hoplon.span.call(null,G__198183,G__198184));
})();
var G__198125 = " [";
var G__198126 = (function (){var G__198185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198186 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198185,G__198186) : tailrecursion.hoplon.span.call(null,G__198185,G__198186));
})();
var G__198127 = " ";
var G__198128 = (function (){var G__198187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198188 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198187,G__198188) : tailrecursion.hoplon.span.call(null,G__198187,G__198188));
})();
var G__198129 = "]\n  (";
var G__198130 = (function (){var G__198189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198190 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198189,G__198190) : tailrecursion.hoplon.span.call(null,G__198189,G__198190));
})();
var G__198131 = "[";
var G__198132 = (function (){var G__198191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198192 = "span-zero?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198191,G__198192) : tailrecursion.hoplon.span.call(null,G__198191,G__198192));
})();
var G__198133 = " ";
var G__198134 = (function (){var G__198193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__198194 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198193,G__198194) : tailrecursion.hoplon.span.call(null,G__198193,G__198194));
})();
var G__198135 = "(";
var G__198136 = (function (){var G__198195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198196 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198195,G__198196) : tailrecursion.hoplon.span.call(null,G__198195,G__198196));
})();
var G__198137 = (function (){var G__198197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__198198 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198197,G__198198) : tailrecursion.hoplon.span.call(null,G__198197,G__198198));
})();
var G__198138 = "\n                       (";
var G__198139 = (function (){var G__198199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198200 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198199,G__198200) : tailrecursion.hoplon.span.call(null,G__198199,G__198200));
})();
var G__198140 = "(";
var G__198141 = (function (){var G__198201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198202 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198201,G__198202) : tailrecursion.hoplon.span.call(null,G__198201,G__198202));
})();
var G__198142 = " ";
var G__198143 = (function (){var G__198203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198204 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198203,G__198204) : tailrecursion.hoplon.span.call(null,G__198203,G__198204));
})();
var G__198144 = ")\n                          (";
var G__198145 = (function (){var G__198205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198206 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198205,G__198206) : tailrecursion.hoplon.span.call(null,G__198205,G__198206));
})();
var G__198146 = " ";
var G__198147 = (function (){var G__198207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198208 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198207,G__198208) : tailrecursion.hoplon.span.call(null,G__198207,G__198208));
})();
var G__198148 = ")))]\n    (";
var G__198149 = (function (){var G__198209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198210 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198209,G__198210) : tailrecursion.hoplon.span.call(null,G__198209,G__198210));
})();
var G__198150 = "(";
var G__198151 = (function (){var G__198211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198212 = "span-zero?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198211,G__198212) : tailrecursion.hoplon.span.call(null,G__198211,G__198212));
})();
var G__198152 = " ";
var G__198153 = (function (){var G__198213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198214 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198213,G__198214) : tailrecursion.hoplon.span.call(null,G__198213,G__198214));
})();
var G__198154 = ")\n        (";
var G__198155 = (function (){var G__198215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198216 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198215,G__198216) : tailrecursion.hoplon.span.call(null,G__198215,G__198216));
})();
var G__198156 = " (";
var G__198157 = (function (){var G__198217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198218 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198217,G__198218) : tailrecursion.hoplon.span.call(null,G__198217,G__198218));
})();
var G__198158 = " ";
var G__198159 = (function (){var G__198219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__198220 = "\"Can't divide by zero!\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198219,G__198220) : tailrecursion.hoplon.span.call(null,G__198219,G__198220));
})();
var G__198160 = "))\n        (";
var G__198161 = (function (){var G__198221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198222 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198221,G__198222) : tailrecursion.hoplon.span.call(null,G__198221,G__198222));
})();
var G__198162 = " ";
var G__198163 = (function (){var G__198223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198224 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198223,G__198224) : tailrecursion.hoplon.span.call(null,G__198223,G__198224));
})();
var G__198164 = "\n                      (";
var G__198165 = (function (){var G__198225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198226 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198225,G__198226) : tailrecursion.hoplon.span.call(null,G__198225,G__198226));
})();
var G__198166 = " (";
var G__198167 = (function (){var G__198227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198228 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198227,G__198228) : tailrecursion.hoplon.span.call(null,G__198227,G__198228));
})();
var G__198168 = (function (){var G__198229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__198230 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198229,G__198230) : tailrecursion.hoplon.span.call(null,G__198229,G__198230));
})();
var G__198169 = " (";
var G__198170 = (function (){var G__198231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198232 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198231,G__198232) : tailrecursion.hoplon.span.call(null,G__198231,G__198232));
})();
var G__198171 = " ";
var G__198172 = (function (){var G__198233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198234 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198233,G__198234) : tailrecursion.hoplon.span.call(null,G__198233,G__198234));
})();
var G__198173 = "))\n                                     (";
var G__198174 = (function (){var G__198235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198236 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198235,G__198236) : tailrecursion.hoplon.span.call(null,G__198235,G__198236));
})();
var G__198175 = (function (){var G__198237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__198238 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198237,G__198238) : tailrecursion.hoplon.span.call(null,G__198237,G__198238));
})();
var G__198176 = " (";
var G__198177 = (function (){var G__198239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198240 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198239,G__198240) : tailrecursion.hoplon.span.call(null,G__198239,G__198240));
})();
var G__198178 = " ";
var G__198179 = (function (){var G__198241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198242 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198241,G__198242) : tailrecursion.hoplon.span.call(null,G__198241,G__198242));
})();
var G__198180 = ")))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60(G__198121,G__198122,G__198123,G__198124,G__198125,G__198126,G__198127,G__198128,G__198129,G__198130,G__198131,G__198132,G__198133,G__198134,G__198135,G__198136,G__198137,G__198138,G__198139,G__198140,G__198141,G__198142,G__198143,G__198144,G__198145,G__198146,G__198147,G__198148,G__198149,G__198150,G__198151,G__198152,G__198153,G__198154,G__198155,G__198156,G__198157,G__198158,G__198159,G__198160,G__198161,G__198162,G__198163,G__198164,G__198165,G__198166,G__198167,G__198168,G__198169,G__198170,G__198171,G__198172,G__198173,G__198174,G__198175,G__198176,G__198177,G__198178,G__198179,G__198180) : tailrecursion.hoplon.pre.call(null,G__198121,G__198122,G__198123,G__198124,G__198125,G__198126,G__198127,G__198128,G__198129,G__198130,G__198131,G__198132,G__198133,G__198134,G__198135,G__198136,G__198137,G__198138,G__198139,G__198140,G__198141,G__198142,G__198143,G__198144,G__198145,G__198146,G__198147,G__198148,G__198149,G__198150,G__198151,G__198152,G__198153,G__198154,G__198155,G__198156,G__198157,G__198158,G__198159,G__198160,G__198161,G__198162,G__198163,G__198164,G__198165,G__198166,G__198167,G__198168,G__198169,G__198170,G__198171,G__198172,G__198173,G__198174,G__198175,G__198176,G__198177,G__198178,G__198179,G__198180));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__198119,G__198120) : tailrecursion.hoplon.div.call(null,G__198119,G__198120));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__198118) : tailrecursion.hoplon.div.call(null,G__198118));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197993;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197992;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197991;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197990;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_198243 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_198244 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_198245 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_198246 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__198247 = cljs.core.PersistentArrayMap.EMPTY;
var G__198248 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In passing, Ben also cryptically comments: ",(function (){var G__198249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__198250 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["By testing the signs of the endpoints of the intervals, it is possible to break mul-interval into nine cases, only one of which requires more than two multiplications."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__198249,G__198250) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__198249,G__198250));
})()," Rewrite this procedure using Ben",(function (){var G__198251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__198252 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__198251,G__198252) : tailrecursion.hoplon.markdown.simple_node.call(null,G__198251,G__198252));
})(),"s suggestion."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198247,G__198248) : tailrecursion.hoplon.markdown.para_node.call(null,G__198247,G__198248));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_198246;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_198245;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_198244;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_198243;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_198253 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_198254 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_198255 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_198256 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__198926 = (function (){var G__198927 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__198928 = (function (){var G__198929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__198930 = "(";
var G__198931 = (function (){var G__199260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199261 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199260,G__199261) : tailrecursion.hoplon.span.call(null,G__199260,G__199261));
})();
var G__198932 = (function (){var G__199262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199263 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199262,G__199263) : tailrecursion.hoplon.span.call(null,G__199262,G__199263));
})();
var G__198933 = " [";
var G__198934 = (function (){var G__199264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199265 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199264,G__199265) : tailrecursion.hoplon.span.call(null,G__199264,G__199265));
})();
var G__198935 = " ";
var G__198936 = (function (){var G__199266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199267 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199266,G__199267) : tailrecursion.hoplon.span.call(null,G__199266,G__199267));
})();
var G__198937 = "]\n  (";
var G__198938 = (function (){var G__199268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199269 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199268,G__199269) : tailrecursion.hoplon.span.call(null,G__199268,G__199269));
})();
var G__198939 = "(";
var G__198940 = (function (){var G__199270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199271 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199270,G__199271) : tailrecursion.hoplon.span.call(null,G__199270,G__199271));
})();
var G__198941 = "(";
var G__198942 = (function (){var G__199272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199273 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199272,G__199273) : tailrecursion.hoplon.span.call(null,G__199272,G__199273));
})();
var G__198943 = " ";
var G__198944 = (function (){var G__199274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199275 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199274,G__199275) : tailrecursion.hoplon.span.call(null,G__199274,G__199275));
})();
var G__198945 = ") ";
var G__198946 = (function (){var G__199276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199277 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199276,G__199277) : tailrecursion.hoplon.span.call(null,G__199276,G__199277));
})();
var G__198947 = ")\n        (";
var G__198948 = (function (){var G__199278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199279 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199278,G__199279) : tailrecursion.hoplon.span.call(null,G__199278,G__199279));
})();
var G__198949 = "(";
var G__198950 = (function (){var G__199280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199281 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199280,G__199281) : tailrecursion.hoplon.span.call(null,G__199280,G__199281));
})();
var G__198951 = "(";
var G__198952 = (function (){var G__199282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199283 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199282,G__199283) : tailrecursion.hoplon.span.call(null,G__199282,G__199283));
})();
var G__198953 = " ";
var G__198954 = (function (){var G__199284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199285 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199284,G__199285) : tailrecursion.hoplon.span.call(null,G__199284,G__199285));
})();
var G__198955 = ") ";
var G__198956 = (function (){var G__199286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199287 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199286,G__199287) : tailrecursion.hoplon.span.call(null,G__199286,G__199287));
})();
var G__198957 = ")\n              (";
var G__198958 = (function (){var G__199288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199289 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199288,G__199289) : tailrecursion.hoplon.span.call(null,G__199288,G__199289));
})();
var G__198959 = " (";
var G__198960 = (function (){var G__199290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199291 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199290,G__199291) : tailrecursion.hoplon.span.call(null,G__199290,G__199291));
})();
var G__198961 = "(";
var G__198962 = (function (){var G__199292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199293 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199292,G__199293) : tailrecursion.hoplon.span.call(null,G__199292,G__199293));
})();
var G__198963 = " ";
var G__198964 = (function (){var G__199294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199295 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199294,G__199295) : tailrecursion.hoplon.span.call(null,G__199294,G__199295));
})();
var G__198965 = ")\n                                (";
var G__198966 = (function (){var G__199296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199297 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199296,G__199297) : tailrecursion.hoplon.span.call(null,G__199296,G__199297));
})();
var G__198967 = " ";
var G__198968 = (function (){var G__199298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199299 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199298,G__199299) : tailrecursion.hoplon.span.call(null,G__199298,G__199299));
})();
var G__198969 = "))\n                             (";
var G__198970 = (function (){var G__199300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199301 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199300,G__199301) : tailrecursion.hoplon.span.call(null,G__199300,G__199301));
})();
var G__198971 = "(";
var G__198972 = (function (){var G__199302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199303 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199302,G__199303) : tailrecursion.hoplon.span.call(null,G__199302,G__199303));
})();
var G__198973 = " ";
var G__198974 = (function (){var G__199304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199305 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199304,G__199305) : tailrecursion.hoplon.span.call(null,G__199304,G__199305));
})();
var G__198975 = ")\n                                (";
var G__198976 = (function (){var G__199306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199307 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199306,G__199307) : tailrecursion.hoplon.span.call(null,G__199306,G__199307));
})();
var G__198977 = " ";
var G__198978 = (function (){var G__199308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199309 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199308,G__199309) : tailrecursion.hoplon.span.call(null,G__199308,G__199309));
})();
var G__198979 = ")))\n              (";
var G__198980 = (function (){var G__199310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199311 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199310,G__199311) : tailrecursion.hoplon.span.call(null,G__199310,G__199311));
})();
var G__198981 = (function (){var G__199312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199313 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199312,G__199313) : tailrecursion.hoplon.span.call(null,G__199312,G__199313));
})();
var G__198982 = " (";
var G__198983 = (function (){var G__199314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199315 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199314,G__199315) : tailrecursion.hoplon.span.call(null,G__199314,G__199315));
})();
var G__198984 = " ";
var G__198985 = (function (){var G__199316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199317 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199316,G__199317) : tailrecursion.hoplon.span.call(null,G__199316,G__199317));
})();
var G__198986 = "))\n              (";
var G__198987 = (function (){var G__199318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199319 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199318,G__199319) : tailrecursion.hoplon.span.call(null,G__199318,G__199319));
})();
var G__198988 = " (";
var G__198989 = (function (){var G__199320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199321 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199320,G__199321) : tailrecursion.hoplon.span.call(null,G__199320,G__199321));
})();
var G__198990 = "(";
var G__198991 = (function (){var G__199322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199323 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199322,G__199323) : tailrecursion.hoplon.span.call(null,G__199322,G__199323));
})();
var G__198992 = " ";
var G__198993 = (function (){var G__199324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199325 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199324,G__199325) : tailrecursion.hoplon.span.call(null,G__199324,G__199325));
})();
var G__198994 = ")\n                                (";
var G__198995 = (function (){var G__199326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199327 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199326,G__199327) : tailrecursion.hoplon.span.call(null,G__199326,G__199327));
})();
var G__198996 = " ";
var G__198997 = (function (){var G__199328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199329 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199328,G__199329) : tailrecursion.hoplon.span.call(null,G__199328,G__199329));
})();
var G__198998 = "))\n                             (";
var G__198999 = (function (){var G__199330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199331 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199330,G__199331) : tailrecursion.hoplon.span.call(null,G__199330,G__199331));
})();
var G__199000 = "(";
var G__199001 = (function (){var G__199332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199333 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199332,G__199333) : tailrecursion.hoplon.span.call(null,G__199332,G__199333));
})();
var G__199002 = " ";
var G__199003 = (function (){var G__199334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199335 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199334,G__199335) : tailrecursion.hoplon.span.call(null,G__199334,G__199335));
})();
var G__199004 = ")\n                                (";
var G__199005 = (function (){var G__199336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199337 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199336,G__199337) : tailrecursion.hoplon.span.call(null,G__199336,G__199337));
})();
var G__199006 = " ";
var G__199007 = (function (){var G__199338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199339 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199338,G__199339) : tailrecursion.hoplon.span.call(null,G__199338,G__199339));
})();
var G__199008 = ")))\n              ";
var G__199009 = (function (){var G__199340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199341 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199340,G__199341) : tailrecursion.hoplon.span.call(null,G__199340,G__199341));
})();
var G__199010 = " \n              (";
var G__199011 = (function (){var G__199342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199343 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199342,G__199343) : tailrecursion.hoplon.span.call(null,G__199342,G__199343));
})();
var G__199012 = " (";
var G__199013 = (function (){var G__199344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199345 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199344,G__199345) : tailrecursion.hoplon.span.call(null,G__199344,G__199345));
})();
var G__199014 = "(";
var G__199015 = (function (){var G__199346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199347 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199346,G__199347) : tailrecursion.hoplon.span.call(null,G__199346,G__199347));
})();
var G__199016 = " ";
var G__199017 = (function (){var G__199348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199349 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199348,G__199349) : tailrecursion.hoplon.span.call(null,G__199348,G__199349));
})();
var G__199018 = ")\n                                (";
var G__199019 = (function (){var G__199350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199351 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199350,G__199351) : tailrecursion.hoplon.span.call(null,G__199350,G__199351));
})();
var G__199020 = " ";
var G__199021 = (function (){var G__199352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199353 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199352,G__199353) : tailrecursion.hoplon.span.call(null,G__199352,G__199353));
})();
var G__199022 = "))\n                             (";
var G__199023 = (function (){var G__199354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199355 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199354,G__199355) : tailrecursion.hoplon.span.call(null,G__199354,G__199355));
})();
var G__199024 = "(";
var G__199025 = (function (){var G__199356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199357 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199356,G__199357) : tailrecursion.hoplon.span.call(null,G__199356,G__199357));
})();
var G__199026 = " ";
var G__199027 = (function (){var G__199358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199359 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199358,G__199359) : tailrecursion.hoplon.span.call(null,G__199358,G__199359));
})();
var G__199028 = ")\n                                (";
var G__199029 = (function (){var G__199360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199361 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199360,G__199361) : tailrecursion.hoplon.span.call(null,G__199360,G__199361));
})();
var G__199030 = " ";
var G__199031 = (function (){var G__199362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199363 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199362,G__199363) : tailrecursion.hoplon.span.call(null,G__199362,G__199363));
})();
var G__199032 = "))))\n        (";
var G__199033 = (function (){var G__199364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199365 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199364,G__199365) : tailrecursion.hoplon.span.call(null,G__199364,G__199365));
})();
var G__199034 = (function (){var G__199366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199367 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199366,G__199367) : tailrecursion.hoplon.span.call(null,G__199366,G__199367));
})();
var G__199035 = " (";
var G__199036 = (function (){var G__199368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199369 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199368,G__199369) : tailrecursion.hoplon.span.call(null,G__199368,G__199369));
})();
var G__199037 = " ";
var G__199038 = (function (){var G__199370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199371 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199370,G__199371) : tailrecursion.hoplon.span.call(null,G__199370,G__199371));
})();
var G__199039 = "))\n        (";
var G__199040 = (function (){var G__199372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199373 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199372,G__199373) : tailrecursion.hoplon.span.call(null,G__199372,G__199373));
})();
var G__199041 = "(";
var G__199042 = (function (){var G__199374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199375 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199374,G__199375) : tailrecursion.hoplon.span.call(null,G__199374,G__199375));
})();
var G__199043 = "(";
var G__199044 = (function (){var G__199376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199377 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199376,G__199377) : tailrecursion.hoplon.span.call(null,G__199376,G__199377));
})();
var G__199045 = " ";
var G__199046 = (function (){var G__199378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199379 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199378,G__199379) : tailrecursion.hoplon.span.call(null,G__199378,G__199379));
})();
var G__199047 = ") ";
var G__199048 = (function (){var G__199380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199381 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199380,G__199381) : tailrecursion.hoplon.span.call(null,G__199380,G__199381));
})();
var G__199049 = ")\n              (";
var G__199050 = (function (){var G__199382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199383 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199382,G__199383) : tailrecursion.hoplon.span.call(null,G__199382,G__199383));
})();
var G__199051 = " (";
var G__199052 = (function (){var G__199384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199385 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199384,G__199385) : tailrecursion.hoplon.span.call(null,G__199384,G__199385));
})();
var G__199053 = "(";
var G__199054 = (function (){var G__199386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199387 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199386,G__199387) : tailrecursion.hoplon.span.call(null,G__199386,G__199387));
})();
var G__199055 = " ";
var G__199056 = (function (){var G__199388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199389 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199388,G__199389) : tailrecursion.hoplon.span.call(null,G__199388,G__199389));
})();
var G__199057 = ")\n                                (";
var G__199058 = (function (){var G__199390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199391 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199390,G__199391) : tailrecursion.hoplon.span.call(null,G__199390,G__199391));
})();
var G__199059 = " ";
var G__199060 = (function (){var G__199392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199393 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199392,G__199393) : tailrecursion.hoplon.span.call(null,G__199392,G__199393));
})();
var G__199061 = "))\n                             (";
var G__199062 = (function (){var G__199394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199395 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199394,G__199395) : tailrecursion.hoplon.span.call(null,G__199394,G__199395));
})();
var G__199063 = "(";
var G__199064 = (function (){var G__199396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199397 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199396,G__199397) : tailrecursion.hoplon.span.call(null,G__199396,G__199397));
})();
var G__199065 = " ";
var G__199066 = (function (){var G__199398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199399 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199398,G__199399) : tailrecursion.hoplon.span.call(null,G__199398,G__199399));
})();
var G__199067 = ")\n                                (";
var G__199068 = (function (){var G__199400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199401 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199400,G__199401) : tailrecursion.hoplon.span.call(null,G__199400,G__199401));
})();
var G__199069 = " ";
var G__199070 = (function (){var G__199402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199403 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199402,G__199403) : tailrecursion.hoplon.span.call(null,G__199402,G__199403));
})();
var G__199071 = ")))\n              (";
var G__199072 = (function (){var G__199404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199405 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199404,G__199405) : tailrecursion.hoplon.span.call(null,G__199404,G__199405));
})();
var G__199073 = (function (){var G__199406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199407 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199406,G__199407) : tailrecursion.hoplon.span.call(null,G__199406,G__199407));
})();
var G__199074 = " (";
var G__199075 = (function (){var G__199408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199409 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199408,G__199409) : tailrecursion.hoplon.span.call(null,G__199408,G__199409));
})();
var G__199076 = " ";
var G__199077 = (function (){var G__199410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199411 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199410,G__199411) : tailrecursion.hoplon.span.call(null,G__199410,G__199411));
})();
var G__199078 = "))\n              (";
var G__199079 = (function (){var G__199412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199413 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199412,G__199413) : tailrecursion.hoplon.span.call(null,G__199412,G__199413));
})();
var G__199080 = " (";
var G__199081 = (function (){var G__199414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199415 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199414,G__199415) : tailrecursion.hoplon.span.call(null,G__199414,G__199415));
})();
var G__199082 = "(";
var G__199083 = (function (){var G__199416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199417 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199416,G__199417) : tailrecursion.hoplon.span.call(null,G__199416,G__199417));
})();
var G__199084 = " ";
var G__199085 = (function (){var G__199418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199419 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199418,G__199419) : tailrecursion.hoplon.span.call(null,G__199418,G__199419));
})();
var G__199086 = ")\n                                (";
var G__199087 = (function (){var G__199420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199421 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199420,G__199421) : tailrecursion.hoplon.span.call(null,G__199420,G__199421));
})();
var G__199088 = " ";
var G__199089 = (function (){var G__199422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199423 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199422,G__199423) : tailrecursion.hoplon.span.call(null,G__199422,G__199423));
})();
var G__199090 = "))\n                             (";
var G__199091 = (function (){var G__199424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199425 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199424,G__199425) : tailrecursion.hoplon.span.call(null,G__199424,G__199425));
})();
var G__199092 = "(";
var G__199093 = (function (){var G__199426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199427 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199426,G__199427) : tailrecursion.hoplon.span.call(null,G__199426,G__199427));
})();
var G__199094 = " ";
var G__199095 = (function (){var G__199428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199429 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199428,G__199429) : tailrecursion.hoplon.span.call(null,G__199428,G__199429));
})();
var G__199096 = ")\n                                (";
var G__199097 = (function (){var G__199430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199431 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199430,G__199431) : tailrecursion.hoplon.span.call(null,G__199430,G__199431));
})();
var G__199098 = " ";
var G__199099 = (function (){var G__199432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199433 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199432,G__199433) : tailrecursion.hoplon.span.call(null,G__199432,G__199433));
})();
var G__199100 = ")))\n              ";
var G__199101 = (function (){var G__199434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199435 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199434,G__199435) : tailrecursion.hoplon.span.call(null,G__199434,G__199435));
})();
var G__199102 = " \n              (";
var G__199103 = (function (){var G__199436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199437 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199436,G__199437) : tailrecursion.hoplon.span.call(null,G__199436,G__199437));
})();
var G__199104 = " (";
var G__199105 = (function (){var G__199438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199439 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199438,G__199439) : tailrecursion.hoplon.span.call(null,G__199438,G__199439));
})();
var G__199106 = "(";
var G__199107 = (function (){var G__199440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199441 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199440,G__199441) : tailrecursion.hoplon.span.call(null,G__199440,G__199441));
})();
var G__199108 = " ";
var G__199109 = (function (){var G__199442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199443 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199442,G__199443) : tailrecursion.hoplon.span.call(null,G__199442,G__199443));
})();
var G__199110 = ")\n                                (";
var G__199111 = (function (){var G__199444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199445 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199444,G__199445) : tailrecursion.hoplon.span.call(null,G__199444,G__199445));
})();
var G__199112 = " ";
var G__199113 = (function (){var G__199446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199447 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199446,G__199447) : tailrecursion.hoplon.span.call(null,G__199446,G__199447));
})();
var G__199114 = "))\n                             (";
var G__199115 = (function (){var G__199448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199449 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199448,G__199449) : tailrecursion.hoplon.span.call(null,G__199448,G__199449));
})();
var G__199116 = "(";
var G__199117 = (function (){var G__199450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199451 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199450,G__199451) : tailrecursion.hoplon.span.call(null,G__199450,G__199451));
})();
var G__199118 = " ";
var G__199119 = (function (){var G__199452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199453 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199452,G__199453) : tailrecursion.hoplon.span.call(null,G__199452,G__199453));
})();
var G__199120 = ")\n                                (";
var G__199121 = (function (){var G__199454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199455 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199454,G__199455) : tailrecursion.hoplon.span.call(null,G__199454,G__199455));
})();
var G__199122 = " ";
var G__199123 = (function (){var G__199456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199457 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199456,G__199457) : tailrecursion.hoplon.span.call(null,G__199456,G__199457));
})();
var G__199124 = "))))\n        ";
var G__199125 = (function (){var G__199458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199459 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199458,G__199459) : tailrecursion.hoplon.span.call(null,G__199458,G__199459));
})();
var G__199126 = "\n        (";
var G__199127 = (function (){var G__199460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199461 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199460,G__199461) : tailrecursion.hoplon.span.call(null,G__199460,G__199461));
})();
var G__199128 = "(";
var G__199129 = (function (){var G__199462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199463 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199462,G__199463) : tailrecursion.hoplon.span.call(null,G__199462,G__199463));
})();
var G__199130 = "(";
var G__199131 = (function (){var G__199464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199465 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199464,G__199465) : tailrecursion.hoplon.span.call(null,G__199464,G__199465));
})();
var G__199132 = " ";
var G__199133 = (function (){var G__199466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199467 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199466,G__199467) : tailrecursion.hoplon.span.call(null,G__199466,G__199467));
})();
var G__199134 = ") ";
var G__199135 = (function (){var G__199468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199469 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199468,G__199469) : tailrecursion.hoplon.span.call(null,G__199468,G__199469));
})();
var G__199136 = ")\n              (";
var G__199137 = (function (){var G__199470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199471 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199470,G__199471) : tailrecursion.hoplon.span.call(null,G__199470,G__199471));
})();
var G__199138 = " (";
var G__199139 = (function (){var G__199472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199473 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199472,G__199473) : tailrecursion.hoplon.span.call(null,G__199472,G__199473));
})();
var G__199140 = "(";
var G__199141 = (function (){var G__199474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199475 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199474,G__199475) : tailrecursion.hoplon.span.call(null,G__199474,G__199475));
})();
var G__199142 = " ";
var G__199143 = (function (){var G__199476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199477 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199476,G__199477) : tailrecursion.hoplon.span.call(null,G__199476,G__199477));
})();
var G__199144 = ")\n                                (";
var G__199145 = (function (){var G__199478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199479 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199478,G__199479) : tailrecursion.hoplon.span.call(null,G__199478,G__199479));
})();
var G__199146 = " ";
var G__199147 = (function (){var G__199480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199481 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199480,G__199481) : tailrecursion.hoplon.span.call(null,G__199480,G__199481));
})();
var G__199148 = "))\n                             (";
var G__199149 = (function (){var G__199482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199483 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199482,G__199483) : tailrecursion.hoplon.span.call(null,G__199482,G__199483));
})();
var G__199150 = "(";
var G__199151 = (function (){var G__199484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199485 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199484,G__199485) : tailrecursion.hoplon.span.call(null,G__199484,G__199485));
})();
var G__199152 = " ";
var G__199153 = (function (){var G__199486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199487 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199486,G__199487) : tailrecursion.hoplon.span.call(null,G__199486,G__199487));
})();
var G__199154 = ")\n                                (";
var G__199155 = (function (){var G__199488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199489 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199488,G__199489) : tailrecursion.hoplon.span.call(null,G__199488,G__199489));
})();
var G__199156 = " ";
var G__199157 = (function (){var G__199490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199491 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199490,G__199491) : tailrecursion.hoplon.span.call(null,G__199490,G__199491));
})();
var G__199158 = ")))\n              (";
var G__199159 = (function (){var G__199492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199493 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199492,G__199493) : tailrecursion.hoplon.span.call(null,G__199492,G__199493));
})();
var G__199160 = (function (){var G__199494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199495 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199494,G__199495) : tailrecursion.hoplon.span.call(null,G__199494,G__199495));
})();
var G__199161 = " (";
var G__199162 = (function (){var G__199496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199497 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199496,G__199497) : tailrecursion.hoplon.span.call(null,G__199496,G__199497));
})();
var G__199163 = " ";
var G__199164 = (function (){var G__199498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199499 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199498,G__199499) : tailrecursion.hoplon.span.call(null,G__199498,G__199499));
})();
var G__199165 = "))\n              (";
var G__199166 = (function (){var G__199500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199501 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199500,G__199501) : tailrecursion.hoplon.span.call(null,G__199500,G__199501));
})();
var G__199167 = " (";
var G__199168 = (function (){var G__199502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199503 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199502,G__199503) : tailrecursion.hoplon.span.call(null,G__199502,G__199503));
})();
var G__199169 = "(";
var G__199170 = (function (){var G__199504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199505 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199504,G__199505) : tailrecursion.hoplon.span.call(null,G__199504,G__199505));
})();
var G__199171 = " ";
var G__199172 = (function (){var G__199506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199507 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199506,G__199507) : tailrecursion.hoplon.span.call(null,G__199506,G__199507));
})();
var G__199173 = ")\n                                (";
var G__199174 = (function (){var G__199508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199509 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199508,G__199509) : tailrecursion.hoplon.span.call(null,G__199508,G__199509));
})();
var G__199175 = " ";
var G__199176 = (function (){var G__199510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199511 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199510,G__199511) : tailrecursion.hoplon.span.call(null,G__199510,G__199511));
})();
var G__199177 = "))\n                             (";
var G__199178 = (function (){var G__199512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199513 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199512,G__199513) : tailrecursion.hoplon.span.call(null,G__199512,G__199513));
})();
var G__199179 = "(";
var G__199180 = (function (){var G__199514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199515 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199514,G__199515) : tailrecursion.hoplon.span.call(null,G__199514,G__199515));
})();
var G__199181 = " ";
var G__199182 = (function (){var G__199516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199517 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199516,G__199517) : tailrecursion.hoplon.span.call(null,G__199516,G__199517));
})();
var G__199183 = ")\n                                (";
var G__199184 = (function (){var G__199518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199519 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199518,G__199519) : tailrecursion.hoplon.span.call(null,G__199518,G__199519));
})();
var G__199185 = " ";
var G__199186 = (function (){var G__199520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199521 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199520,G__199521) : tailrecursion.hoplon.span.call(null,G__199520,G__199521));
})();
var G__199187 = ")))\n              ";
var G__199188 = (function (){var G__199522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199523 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199522,G__199523) : tailrecursion.hoplon.span.call(null,G__199522,G__199523));
})();
var G__199189 = " \n              (";
var G__199190 = (function (){var G__199524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199525 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199524,G__199525) : tailrecursion.hoplon.span.call(null,G__199524,G__199525));
})();
var G__199191 = "[";
var G__199192 = (function (){var G__199526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199527 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199526,G__199527) : tailrecursion.hoplon.span.call(null,G__199526,G__199527));
})();
var G__199193 = " (";
var G__199194 = (function (){var G__199528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199529 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199528,G__199529) : tailrecursion.hoplon.span.call(null,G__199528,G__199529));
})();
var G__199195 = "(";
var G__199196 = (function (){var G__199530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199531 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199530,G__199531) : tailrecursion.hoplon.span.call(null,G__199530,G__199531));
})();
var G__199197 = " ";
var G__199198 = (function (){var G__199532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199533 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199532,G__199533) : tailrecursion.hoplon.span.call(null,G__199532,G__199533));
})();
var G__199199 = ")\n                         (";
var G__199200 = (function (){var G__199534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199535 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199534,G__199535) : tailrecursion.hoplon.span.call(null,G__199534,G__199535));
})();
var G__199201 = " ";
var G__199202 = (function (){var G__199536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199537 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199536,G__199537) : tailrecursion.hoplon.span.call(null,G__199536,G__199537));
})();
var G__199203 = "))\n                    ";
var G__199204 = (function (){var G__199538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199539 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199538,G__199539) : tailrecursion.hoplon.span.call(null,G__199538,G__199539));
})();
var G__199205 = " (";
var G__199206 = (function (){var G__199540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199541 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199540,G__199541) : tailrecursion.hoplon.span.call(null,G__199540,G__199541));
})();
var G__199207 = "(";
var G__199208 = (function (){var G__199542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199543 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199542,G__199543) : tailrecursion.hoplon.span.call(null,G__199542,G__199543));
})();
var G__199209 = " ";
var G__199210 = (function (){var G__199544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199545 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199544,G__199545) : tailrecursion.hoplon.span.call(null,G__199544,G__199545));
})();
var G__199211 = ")\n                         (";
var G__199212 = (function (){var G__199546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199547 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199546,G__199547) : tailrecursion.hoplon.span.call(null,G__199546,G__199547));
})();
var G__199213 = " ";
var G__199214 = (function (){var G__199548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199549 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199548,G__199549) : tailrecursion.hoplon.span.call(null,G__199548,G__199549));
})();
var G__199215 = "))\n                    ";
var G__199216 = (function (){var G__199550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199551 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199550,G__199551) : tailrecursion.hoplon.span.call(null,G__199550,G__199551));
})();
var G__199217 = " (";
var G__199218 = (function (){var G__199552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199553 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199552,G__199553) : tailrecursion.hoplon.span.call(null,G__199552,G__199553));
})();
var G__199219 = "(";
var G__199220 = (function (){var G__199554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199555 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199554,G__199555) : tailrecursion.hoplon.span.call(null,G__199554,G__199555));
})();
var G__199221 = " ";
var G__199222 = (function (){var G__199556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199557 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199556,G__199557) : tailrecursion.hoplon.span.call(null,G__199556,G__199557));
})();
var G__199223 = ")\n                         (";
var G__199224 = (function (){var G__199558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199559 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199558,G__199559) : tailrecursion.hoplon.span.call(null,G__199558,G__199559));
})();
var G__199225 = " ";
var G__199226 = (function (){var G__199560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199561 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199560,G__199561) : tailrecursion.hoplon.span.call(null,G__199560,G__199561));
})();
var G__199227 = "))\n                    ";
var G__199228 = (function (){var G__199562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199563 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199562,G__199563) : tailrecursion.hoplon.span.call(null,G__199562,G__199563));
})();
var G__199229 = " (";
var G__199230 = (function (){var G__199564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199565 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199564,G__199565) : tailrecursion.hoplon.span.call(null,G__199564,G__199565));
})();
var G__199231 = "(";
var G__199232 = (function (){var G__199566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199567 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199566,G__199567) : tailrecursion.hoplon.span.call(null,G__199566,G__199567));
})();
var G__199233 = " ";
var G__199234 = (function (){var G__199568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199569 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199568,G__199569) : tailrecursion.hoplon.span.call(null,G__199568,G__199569));
})();
var G__199235 = ")\n                         (";
var G__199236 = (function (){var G__199570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199571 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199570,G__199571) : tailrecursion.hoplon.span.call(null,G__199570,G__199571));
})();
var G__199237 = " ";
var G__199238 = (function (){var G__199572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199573 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199572,G__199573) : tailrecursion.hoplon.span.call(null,G__199572,G__199573));
})();
var G__199239 = "))]\n                (";
var G__199240 = (function (){var G__199574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199575 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199574,G__199575) : tailrecursion.hoplon.span.call(null,G__199574,G__199575));
})();
var G__199241 = " (";
var G__199242 = (function (){var G__199576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199577 = "min ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199576,G__199577) : tailrecursion.hoplon.span.call(null,G__199576,G__199577));
})();
var G__199243 = (function (){var G__199578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199579 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199578,G__199579) : tailrecursion.hoplon.span.call(null,G__199578,G__199579));
})();
var G__199244 = " ";
var G__199245 = (function (){var G__199580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199581 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199580,G__199581) : tailrecursion.hoplon.span.call(null,G__199580,G__199581));
})();
var G__199246 = " ";
var G__199247 = (function (){var G__199582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199583 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199582,G__199583) : tailrecursion.hoplon.span.call(null,G__199582,G__199583));
})();
var G__199248 = " ";
var G__199249 = (function (){var G__199584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199585 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199584,G__199585) : tailrecursion.hoplon.span.call(null,G__199584,G__199585));
})();
var G__199250 = ")\n                               (";
var G__199251 = (function (){var G__199586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199587 = "max ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199586,G__199587) : tailrecursion.hoplon.span.call(null,G__199586,G__199587));
})();
var G__199252 = (function (){var G__199588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199589 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199588,G__199589) : tailrecursion.hoplon.span.call(null,G__199588,G__199589));
})();
var G__199253 = " ";
var G__199254 = (function (){var G__199590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199591 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199590,G__199591) : tailrecursion.hoplon.span.call(null,G__199590,G__199591));
})();
var G__199255 = " ";
var G__199256 = (function (){var G__199592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199593 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199592,G__199593) : tailrecursion.hoplon.span.call(null,G__199592,G__199593));
})();
var G__199257 = " ";
var G__199258 = (function (){var G__199594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199595 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199594,G__199595) : tailrecursion.hoplon.span.call(null,G__199594,G__199595));
})();
var G__199259 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$331 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$331(G__198929,G__198930,G__198931,G__198932,G__198933,G__198934,G__198935,G__198936,G__198937,G__198938,G__198939,G__198940,G__198941,G__198942,G__198943,G__198944,G__198945,G__198946,G__198947,G__198948,G__198949,G__198950,G__198951,G__198952,G__198953,G__198954,G__198955,G__198956,G__198957,G__198958,G__198959,G__198960,G__198961,G__198962,G__198963,G__198964,G__198965,G__198966,G__198967,G__198968,G__198969,G__198970,G__198971,G__198972,G__198973,G__198974,G__198975,G__198976,G__198977,G__198978,G__198979,G__198980,G__198981,G__198982,G__198983,G__198984,G__198985,G__198986,G__198987,G__198988,G__198989,G__198990,G__198991,G__198992,G__198993,G__198994,G__198995,G__198996,G__198997,G__198998,G__198999,G__199000,G__199001,G__199002,G__199003,G__199004,G__199005,G__199006,G__199007,G__199008,G__199009,G__199010,G__199011,G__199012,G__199013,G__199014,G__199015,G__199016,G__199017,G__199018,G__199019,G__199020,G__199021,G__199022,G__199023,G__199024,G__199025,G__199026,G__199027,G__199028,G__199029,G__199030,G__199031,G__199032,G__199033,G__199034,G__199035,G__199036,G__199037,G__199038,G__199039,G__199040,G__199041,G__199042,G__199043,G__199044,G__199045,G__199046,G__199047,G__199048,G__199049,G__199050,G__199051,G__199052,G__199053,G__199054,G__199055,G__199056,G__199057,G__199058,G__199059,G__199060,G__199061,G__199062,G__199063,G__199064,G__199065,G__199066,G__199067,G__199068,G__199069,G__199070,G__199071,G__199072,G__199073,G__199074,G__199075,G__199076,G__199077,G__199078,G__199079,G__199080,G__199081,G__199082,G__199083,G__199084,G__199085,G__199086,G__199087,G__199088,G__199089,G__199090,G__199091,G__199092,G__199093,G__199094,G__199095,G__199096,G__199097,G__199098,G__199099,G__199100,G__199101,G__199102,G__199103,G__199104,G__199105,G__199106,G__199107,G__199108,G__199109,G__199110,G__199111,G__199112,G__199113,G__199114,G__199115,G__199116,G__199117,G__199118,G__199119,G__199120,G__199121,G__199122,G__199123,G__199124,G__199125,G__199126,G__199127,G__199128,G__199129,G__199130,G__199131,G__199132,G__199133,G__199134,G__199135,G__199136,G__199137,G__199138,G__199139,G__199140,G__199141,G__199142,G__199143,G__199144,G__199145,G__199146,G__199147,G__199148,G__199149,G__199150,G__199151,G__199152,G__199153,G__199154,G__199155,G__199156,G__199157,G__199158,G__199159,G__199160,G__199161,G__199162,G__199163,G__199164,G__199165,G__199166,G__199167,G__199168,G__199169,G__199170,G__199171,G__199172,G__199173,G__199174,G__199175,G__199176,G__199177,G__199178,G__199179,G__199180,G__199181,G__199182,G__199183,G__199184,G__199185,G__199186,G__199187,G__199188,G__199189,G__199190,G__199191,G__199192,G__199193,G__199194,G__199195,G__199196,G__199197,G__199198,G__199199,G__199200,G__199201,G__199202,G__199203,G__199204,G__199205,G__199206,G__199207,G__199208,G__199209,G__199210,G__199211,G__199212,G__199213,G__199214,G__199215,G__199216,G__199217,G__199218,G__199219,G__199220,G__199221,G__199222,G__199223,G__199224,G__199225,G__199226,G__199227,G__199228,G__199229,G__199230,G__199231,G__199232,G__199233,G__199234,G__199235,G__199236,G__199237,G__199238,G__199239,G__199240,G__199241,G__199242,G__199243,G__199244,G__199245,G__199246,G__199247,G__199248,G__199249,G__199250,G__199251,G__199252,G__199253,G__199254,G__199255,G__199256,G__199257,G__199258,G__199259) : tailrecursion.hoplon.pre.call(null,G__198929,G__198930,G__198931,G__198932,G__198933,G__198934,G__198935,G__198936,G__198937,G__198938,G__198939,G__198940,G__198941,G__198942,G__198943,G__198944,G__198945,G__198946,G__198947,G__198948,G__198949,G__198950,G__198951,G__198952,G__198953,G__198954,G__198955,G__198956,G__198957,G__198958,G__198959,G__198960,G__198961,G__198962,G__198963,G__198964,G__198965,G__198966,G__198967,G__198968,G__198969,G__198970,G__198971,G__198972,G__198973,G__198974,G__198975,G__198976,G__198977,G__198978,G__198979,G__198980,G__198981,G__198982,G__198983,G__198984,G__198985,G__198986,G__198987,G__198988,G__198989,G__198990,G__198991,G__198992,G__198993,G__198994,G__198995,G__198996,G__198997,G__198998,G__198999,G__199000,G__199001,G__199002,G__199003,G__199004,G__199005,G__199006,G__199007,G__199008,G__199009,G__199010,G__199011,G__199012,G__199013,G__199014,G__199015,G__199016,G__199017,G__199018,G__199019,G__199020,G__199021,G__199022,G__199023,G__199024,G__199025,G__199026,G__199027,G__199028,G__199029,G__199030,G__199031,G__199032,G__199033,G__199034,G__199035,G__199036,G__199037,G__199038,G__199039,G__199040,G__199041,G__199042,G__199043,G__199044,G__199045,G__199046,G__199047,G__199048,G__199049,G__199050,G__199051,G__199052,G__199053,G__199054,G__199055,G__199056,G__199057,G__199058,G__199059,G__199060,G__199061,G__199062,G__199063,G__199064,G__199065,G__199066,G__199067,G__199068,G__199069,G__199070,G__199071,G__199072,G__199073,G__199074,G__199075,G__199076,G__199077,G__199078,G__199079,G__199080,G__199081,G__199082,G__199083,G__199084,G__199085,G__199086,G__199087,G__199088,G__199089,G__199090,G__199091,G__199092,G__199093,G__199094,G__199095,G__199096,G__199097,G__199098,G__199099,G__199100,G__199101,G__199102,G__199103,G__199104,G__199105,G__199106,G__199107,G__199108,G__199109,G__199110,G__199111,G__199112,G__199113,G__199114,G__199115,G__199116,G__199117,G__199118,G__199119,G__199120,G__199121,G__199122,G__199123,G__199124,G__199125,G__199126,G__199127,G__199128,G__199129,G__199130,G__199131,G__199132,G__199133,G__199134,G__199135,G__199136,G__199137,G__199138,G__199139,G__199140,G__199141,G__199142,G__199143,G__199144,G__199145,G__199146,G__199147,G__199148,G__199149,G__199150,G__199151,G__199152,G__199153,G__199154,G__199155,G__199156,G__199157,G__199158,G__199159,G__199160,G__199161,G__199162,G__199163,G__199164,G__199165,G__199166,G__199167,G__199168,G__199169,G__199170,G__199171,G__199172,G__199173,G__199174,G__199175,G__199176,G__199177,G__199178,G__199179,G__199180,G__199181,G__199182,G__199183,G__199184,G__199185,G__199186,G__199187,G__199188,G__199189,G__199190,G__199191,G__199192,G__199193,G__199194,G__199195,G__199196,G__199197,G__199198,G__199199,G__199200,G__199201,G__199202,G__199203,G__199204,G__199205,G__199206,G__199207,G__199208,G__199209,G__199210,G__199211,G__199212,G__199213,G__199214,G__199215,G__199216,G__199217,G__199218,G__199219,G__199220,G__199221,G__199222,G__199223,G__199224,G__199225,G__199226,G__199227,G__199228,G__199229,G__199230,G__199231,G__199232,G__199233,G__199234,G__199235,G__199236,G__199237,G__199238,G__199239,G__199240,G__199241,G__199242,G__199243,G__199244,G__199245,G__199246,G__199247,G__199248,G__199249,G__199250,G__199251,G__199252,G__199253,G__199254,G__199255,G__199256,G__199257,G__199258,G__199259));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__198927,G__198928) : tailrecursion.hoplon.div.call(null,G__198927,G__198928));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__198926) : tailrecursion.hoplon.div.call(null,G__198926));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_198256;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_198255;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_198254;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_198253;
}})()], 0)),"",(function (){var _STAR_references_STAR_199596 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_199597 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_199598 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_199599 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__199600 = cljs.core.PersistentArrayMap.EMPTY;
var G__199601 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["After debugging her program, Alyssa shows it to a potential user, who complains that her program solves the wrong problem. He wants a program that can deal with numbers represented as a center value and an additive tolerance; for example, he wants to work with intervals such as 3.5\u00B1 0.15 rather than ",tailrecursion.hoplon.markdown.ref_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$separator_DASH_space,null,cljs.core.cst$kw$reference_DASH_key,null], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["3.35, 3.65"], null)], 0)),". Alyssa returns to her desk and fixes this problem by supplying an alternate constructor and alternate selectors:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__199600,G__199601) : tailrecursion.hoplon.markdown.para_node.call(null,G__199600,G__199601));
})(),(function (){var G__199725 = (function (){var G__199726 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__199727 = (function (){var G__199728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__199729 = "(";
var G__199730 = (function (){var G__199787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199788 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199787,G__199788) : tailrecursion.hoplon.span.call(null,G__199787,G__199788));
})();
var G__199731 = (function (){var G__199789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199790 = "make-center-width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199789,G__199790) : tailrecursion.hoplon.span.call(null,G__199789,G__199790));
})();
var G__199732 = " [";
var G__199733 = (function (){var G__199791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199792 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199791,G__199792) : tailrecursion.hoplon.span.call(null,G__199791,G__199792));
})();
var G__199734 = " ";
var G__199735 = (function (){var G__199793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199794 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199793,G__199794) : tailrecursion.hoplon.span.call(null,G__199793,G__199794));
})();
var G__199736 = "]\n  (";
var G__199737 = (function (){var G__199795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199796 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199795,G__199796) : tailrecursion.hoplon.span.call(null,G__199795,G__199796));
})();
var G__199738 = " (";
var G__199739 = (function (){var G__199797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199798 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199797,G__199798) : tailrecursion.hoplon.span.call(null,G__199797,G__199798));
})();
var G__199740 = (function (){var G__199799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199800 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199799,G__199800) : tailrecursion.hoplon.span.call(null,G__199799,G__199800));
})();
var G__199741 = " ";
var G__199742 = (function (){var G__199801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199802 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199801,G__199802) : tailrecursion.hoplon.span.call(null,G__199801,G__199802));
})();
var G__199743 = ") (";
var G__199744 = (function (){var G__199803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199804 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199803,G__199804) : tailrecursion.hoplon.span.call(null,G__199803,G__199804));
})();
var G__199745 = (function (){var G__199805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199806 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199805,G__199806) : tailrecursion.hoplon.span.call(null,G__199805,G__199806));
})();
var G__199746 = " ";
var G__199747 = (function (){var G__199807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199808 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199807,G__199808) : tailrecursion.hoplon.span.call(null,G__199807,G__199808));
})();
var G__199748 = ")))\n(";
var G__199749 = (function (){var G__199809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199810 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199809,G__199810) : tailrecursion.hoplon.span.call(null,G__199809,G__199810));
})();
var G__199750 = (function (){var G__199811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199812 = "center";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199811,G__199812) : tailrecursion.hoplon.span.call(null,G__199811,G__199812));
})();
var G__199751 = " [";
var G__199752 = (function (){var G__199813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199814 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199813,G__199814) : tailrecursion.hoplon.span.call(null,G__199813,G__199814));
})();
var G__199753 = "]\n  (";
var G__199754 = (function (){var G__199815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199816 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199815,G__199816) : tailrecursion.hoplon.span.call(null,G__199815,G__199816));
})();
var G__199755 = "(";
var G__199756 = (function (){var G__199817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199818 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199817,G__199818) : tailrecursion.hoplon.span.call(null,G__199817,G__199818));
})();
var G__199757 = "(";
var G__199758 = (function (){var G__199819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199820 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199819,G__199820) : tailrecursion.hoplon.span.call(null,G__199819,G__199820));
})();
var G__199759 = " ";
var G__199760 = (function (){var G__199821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199822 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199821,G__199822) : tailrecursion.hoplon.span.call(null,G__199821,G__199822));
})();
var G__199761 = ") (";
var G__199762 = (function (){var G__199823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199824 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199823,G__199824) : tailrecursion.hoplon.span.call(null,G__199823,G__199824));
})();
var G__199763 = " ";
var G__199764 = (function (){var G__199825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199826 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199825,G__199826) : tailrecursion.hoplon.span.call(null,G__199825,G__199826));
})();
var G__199765 = ")) ";
var G__199766 = (function (){var G__199827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199828 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199827,G__199828) : tailrecursion.hoplon.span.call(null,G__199827,G__199828));
})();
var G__199767 = "))\n(";
var G__199768 = (function (){var G__199829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199830 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199829,G__199830) : tailrecursion.hoplon.span.call(null,G__199829,G__199830));
})();
var G__199769 = (function (){var G__199831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199832 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199831,G__199832) : tailrecursion.hoplon.span.call(null,G__199831,G__199832));
})();
var G__199770 = " [";
var G__199771 = (function (){var G__199833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199834 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199833,G__199834) : tailrecursion.hoplon.span.call(null,G__199833,G__199834));
})();
var G__199772 = "]\n  (";
var G__199773 = (function (){var G__199835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199836 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199835,G__199836) : tailrecursion.hoplon.span.call(null,G__199835,G__199836));
})();
var G__199774 = "(";
var G__199775 = (function (){var G__199837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199838 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199837,G__199838) : tailrecursion.hoplon.span.call(null,G__199837,G__199838));
})();
var G__199776 = "(";
var G__199777 = (function (){var G__199839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199840 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199839,G__199840) : tailrecursion.hoplon.span.call(null,G__199839,G__199840));
})();
var G__199778 = " ";
var G__199779 = (function (){var G__199841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199842 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199841,G__199842) : tailrecursion.hoplon.span.call(null,G__199841,G__199842));
})();
var G__199780 = ") (";
var G__199781 = (function (){var G__199843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199844 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199843,G__199844) : tailrecursion.hoplon.span.call(null,G__199843,G__199844));
})();
var G__199782 = " ";
var G__199783 = (function (){var G__199845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199846 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199845,G__199846) : tailrecursion.hoplon.span.call(null,G__199845,G__199846));
})();
var G__199784 = ")) ";
var G__199785 = (function (){var G__199847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199848 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199847,G__199848) : tailrecursion.hoplon.span.call(null,G__199847,G__199848));
})();
var G__199786 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59(G__199728,G__199729,G__199730,G__199731,G__199732,G__199733,G__199734,G__199735,G__199736,G__199737,G__199738,G__199739,G__199740,G__199741,G__199742,G__199743,G__199744,G__199745,G__199746,G__199747,G__199748,G__199749,G__199750,G__199751,G__199752,G__199753,G__199754,G__199755,G__199756,G__199757,G__199758,G__199759,G__199760,G__199761,G__199762,G__199763,G__199764,G__199765,G__199766,G__199767,G__199768,G__199769,G__199770,G__199771,G__199772,G__199773,G__199774,G__199775,G__199776,G__199777,G__199778,G__199779,G__199780,G__199781,G__199782,G__199783,G__199784,G__199785,G__199786) : tailrecursion.hoplon.pre.call(null,G__199728,G__199729,G__199730,G__199731,G__199732,G__199733,G__199734,G__199735,G__199736,G__199737,G__199738,G__199739,G__199740,G__199741,G__199742,G__199743,G__199744,G__199745,G__199746,G__199747,G__199748,G__199749,G__199750,G__199751,G__199752,G__199753,G__199754,G__199755,G__199756,G__199757,G__199758,G__199759,G__199760,G__199761,G__199762,G__199763,G__199764,G__199765,G__199766,G__199767,G__199768,G__199769,G__199770,G__199771,G__199772,G__199773,G__199774,G__199775,G__199776,G__199777,G__199778,G__199779,G__199780,G__199781,G__199782,G__199783,G__199784,G__199785,G__199786));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__199726,G__199727) : tailrecursion.hoplon.div.call(null,G__199726,G__199727));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__199725) : tailrecursion.hoplon.div.call(null,G__199725));
})(),(function (){var G__199849 = cljs.core.PersistentArrayMap.EMPTY;
var G__199850 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Unfortunately, most of Alyssa",(function (){var G__199851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__199852 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__199851,G__199852) : tailrecursion.hoplon.markdown.simple_node.call(null,G__199851,G__199852));
})(),"s users are engineers. Real engineering situations usually involve measurements with only a small uncertainty, measured as the ratio of the width of the interval to the midpoint of the interval. Engineers usually specify percentage tolerances on the parameters of devices, as in the resistor specifications given earlier."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__199849,G__199850) : tailrecursion.hoplon.markdown.para_node.call(null,G__199849,G__199850));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_199599;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_199598;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_199597;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_199596;
}})()], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_199853 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_199854 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_199855 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_199856 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__199857 = cljs.core.PersistentArrayMap.EMPTY;
var G__199858 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a constructor ",(function (){var G__199859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-center-percent"], null);
var G__199860 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199859,G__199860) : tailrecursion.hoplon.markdown.code_node.call(null,G__199859,G__199860));
})()," that takes a center and a percentage tolerance and produces the desired interval. You must also define a selector ",(function (){var G__199861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"percent"], null);
var G__199862 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199861,G__199862) : tailrecursion.hoplon.markdown.code_node.call(null,G__199861,G__199862));
})()," that produces the percentage tolerance for a given interval. The ",(function (){var G__199863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"center"], null);
var G__199864 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199863,G__199864) : tailrecursion.hoplon.markdown.code_node.call(null,G__199863,G__199864));
})()," selector is the same as the one above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__199857,G__199858) : tailrecursion.hoplon.markdown.para_node.call(null,G__199857,G__199858));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_199856;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_199855;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_199854;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_199853;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_199865 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_199866 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_199867 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_199868 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__199964 = (function (){var G__199965 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__199966 = (function (){var G__199967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__199968 = "(";
var G__199969 = (function (){var G__200012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200013 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200012,G__200013) : tailrecursion.hoplon.span.call(null,G__200012,G__200013));
})();
var G__199970 = (function (){var G__200014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200015 = "make-center-percent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200014,G__200015) : tailrecursion.hoplon.span.call(null,G__200014,G__200015));
})();
var G__199971 = " [";
var G__199972 = (function (){var G__200016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200017 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200016,G__200017) : tailrecursion.hoplon.span.call(null,G__200016,G__200017));
})();
var G__199973 = " ";
var G__199974 = (function (){var G__200018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200019 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200018,G__200019) : tailrecursion.hoplon.span.call(null,G__200018,G__200019));
})();
var G__199975 = "]\n  (";
var G__199976 = (function (){var G__200020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200021 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200020,G__200021) : tailrecursion.hoplon.span.call(null,G__200020,G__200021));
})();
var G__199977 = "[";
var G__199978 = (function (){var G__200022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200023 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200022,G__200023) : tailrecursion.hoplon.span.call(null,G__200022,G__200023));
})();
var G__199979 = " (";
var G__199980 = (function (){var G__200024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200025 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200024,G__200025) : tailrecursion.hoplon.span.call(null,G__200024,G__200025));
})();
var G__199981 = (function (){var G__200026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200027 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200026,G__200027) : tailrecursion.hoplon.span.call(null,G__200026,G__200027));
})();
var G__199982 = " ";
var G__199983 = (function (){var G__200028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200029 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200028,G__200029) : tailrecursion.hoplon.span.call(null,G__200028,G__200029));
})();
var G__199984 = ")]\n    (";
var G__199985 = (function (){var G__200030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200031 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200030,G__200031) : tailrecursion.hoplon.span.call(null,G__200030,G__200031));
})();
var G__199986 = " (";
var G__199987 = (function (){var G__200032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200033 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200032,G__200033) : tailrecursion.hoplon.span.call(null,G__200032,G__200033));
})();
var G__199988 = (function (){var G__200034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200035 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200034,G__200035) : tailrecursion.hoplon.span.call(null,G__200034,G__200035));
})();
var G__199989 = " ";
var G__199990 = (function (){var G__200036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200037 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200036,G__200037) : tailrecursion.hoplon.span.call(null,G__200036,G__200037));
})();
var G__199991 = ") (";
var G__199992 = (function (){var G__200038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200039 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200038,G__200039) : tailrecursion.hoplon.span.call(null,G__200038,G__200039));
})();
var G__199993 = (function (){var G__200040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200041 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200040,G__200041) : tailrecursion.hoplon.span.call(null,G__200040,G__200041));
})();
var G__199994 = " ";
var G__199995 = (function (){var G__200042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200043 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200042,G__200043) : tailrecursion.hoplon.span.call(null,G__200042,G__200043));
})();
var G__199996 = "))))\n(";
var G__199997 = (function (){var G__200044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200045 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200044,G__200045) : tailrecursion.hoplon.span.call(null,G__200044,G__200045));
})();
var G__199998 = (function (){var G__200046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200047 = "percent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200046,G__200047) : tailrecursion.hoplon.span.call(null,G__200046,G__200047));
})();
var G__199999 = " [";
var G__200000 = (function (){var G__200048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200049 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200048,G__200049) : tailrecursion.hoplon.span.call(null,G__200048,G__200049));
})();
var G__200001 = "]\n  (";
var G__200002 = (function (){var G__200050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200051 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200050,G__200051) : tailrecursion.hoplon.span.call(null,G__200050,G__200051));
})();
var G__200003 = "(";
var G__200004 = (function (){var G__200052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200053 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200052,G__200053) : tailrecursion.hoplon.span.call(null,G__200052,G__200053));
})();
var G__200005 = " ";
var G__200006 = (function (){var G__200054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200055 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200054,G__200055) : tailrecursion.hoplon.span.call(null,G__200054,G__200055));
})();
var G__200007 = ") (";
var G__200008 = (function (){var G__200056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200057 = "center";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200056,G__200057) : tailrecursion.hoplon.span.call(null,G__200056,G__200057));
})();
var G__200009 = " ";
var G__200010 = (function (){var G__200058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200059 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200058,G__200059) : tailrecursion.hoplon.span.call(null,G__200058,G__200059));
})();
var G__200011 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45(G__199967,G__199968,G__199969,G__199970,G__199971,G__199972,G__199973,G__199974,G__199975,G__199976,G__199977,G__199978,G__199979,G__199980,G__199981,G__199982,G__199983,G__199984,G__199985,G__199986,G__199987,G__199988,G__199989,G__199990,G__199991,G__199992,G__199993,G__199994,G__199995,G__199996,G__199997,G__199998,G__199999,G__200000,G__200001,G__200002,G__200003,G__200004,G__200005,G__200006,G__200007,G__200008,G__200009,G__200010,G__200011) : tailrecursion.hoplon.pre.call(null,G__199967,G__199968,G__199969,G__199970,G__199971,G__199972,G__199973,G__199974,G__199975,G__199976,G__199977,G__199978,G__199979,G__199980,G__199981,G__199982,G__199983,G__199984,G__199985,G__199986,G__199987,G__199988,G__199989,G__199990,G__199991,G__199992,G__199993,G__199994,G__199995,G__199996,G__199997,G__199998,G__199999,G__200000,G__200001,G__200002,G__200003,G__200004,G__200005,G__200006,G__200007,G__200008,G__200009,G__200010,G__200011));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__199965,G__199966) : tailrecursion.hoplon.div.call(null,G__199965,G__199966));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__199964) : tailrecursion.hoplon.div.call(null,G__199964));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_199868;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_199867;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_199866;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_199865;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_200060 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200061 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_200062 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200063 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__200064 = cljs.core.PersistentArrayMap.EMPTY;
var G__200065 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Show that under the assumption of small percentage tolerances there is a simple formula for the approximate percentage tolerance of the product of two intervals in terms of the tolerances of the factors. You may simplify the problem by assuming that all numbers are positive."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200064,G__200065) : tailrecursion.hoplon.markdown.para_node.call(null,G__200064,G__200065));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200063;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200062;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200061;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200060;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_200066 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200067 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_200068 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200069 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__200070 = cljs.core.PersistentArrayMap.EMPTY;
var G__200071 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__200072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__200073 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__200072,G__200073) : tailrecursion.hoplon.markdown.simple_node.call(null,G__200072,G__200073));
})(),"s take two intervals, \\((a-\\epsilon,a+\\epsilon)\\) and \\((b-\\delta,b+\\delta)\\), where \\(a,b\\) and \\(\\epsilon,\\delta\\) are positive numbers and \\(\\epsilon,\\delta\\) are small. Then, the product is given by,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200070,G__200071) : tailrecursion.hoplon.markdown.para_node.call(null,G__200070,G__200071));
})(),(function (){var G__200074 = cljs.core.PersistentArrayMap.EMPTY;
var G__200075 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}&\\left((a-\\epsilon)(b-\\delta),(a+\\epsilon)(b+\\delta)\\right) \\\\=&\\left(ab-a\\delta-b\\epsilon+\\epsilon\\delta,ab+a\\delta+b\\epsilon+\\epsilon\\delta\\right) \\\\=&\\left((ab+\\epsilon\\delta)-(a\\delta+b\\epsilon),(ab+\\epsilon\\delta)+(a\\delta+b\\epsilon)\\right)\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200074,G__200075) : tailrecursion.hoplon.markdown.para_node.call(null,G__200074,G__200075));
})(),(function (){var G__200076 = cljs.core.PersistentArrayMap.EMPTY;
var G__200077 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, we see that the width in question is, \\(a\\delta+b\\epsilon\\), and the center is \\(ab+\\epsilon\\delta\\). Hence, the percentage tolerance is,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200076,G__200077) : tailrecursion.hoplon.markdown.para_node.call(null,G__200076,G__200077));
})(),(function (){var G__200078 = cljs.core.PersistentArrayMap.EMPTY;
var G__200079 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{a\\delta+b\\epsilon}{ab+\\epsilon\\delta}\\approx& \\frac{a\\delta +b\\epsilon}{ab+0} \\\\=&\\frac{a\\delta+b\\epsilon}{ab} \\\\=&\\frac{\\delta}{b}+\\frac{\\epsilon}{a}\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200078,G__200079) : tailrecursion.hoplon.markdown.para_node.call(null,G__200078,G__200079));
})(),(function (){var G__200080 = cljs.core.PersistentArrayMap.EMPTY;
var G__200081 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Which is the sum of the respective percentages."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200080,G__200081) : tailrecursion.hoplon.markdown.para_node.call(null,G__200080,G__200081));
})(),(function (){var G__200082 = cljs.core.PersistentArrayMap.EMPTY;
var G__200083 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, as long as the percentages are small enough for their squares to become negligible, the percentage tolerance of a product of intervals is sum of the percentage tolerances of the two respective intervals."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200082,G__200083) : tailrecursion.hoplon.markdown.para_node.call(null,G__200082,G__200083));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200069;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200068;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200067;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200066;
}})()], 0)),"",(function (){var _STAR_references_STAR_200084 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200085 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_200086 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200087 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__200088 = cljs.core.PersistentArrayMap.EMPTY;
var G__200089 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["After considerable work, Alyssa P. Hacker delivers her finished system. Several years later, after she has forgotten all about it, she gets a frenzied call from an irate user, Lem E. Tweakit. It seems that Lem has noticed that the formula for parallel resistors can be written in two algebraically equivalent ways:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200088,G__200089) : tailrecursion.hoplon.markdown.para_node.call(null,G__200088,G__200089));
})(),(function (){var G__200090 = cljs.core.PersistentArrayMap.EMPTY;
var G__200091 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{R_1R_2}{R_1+R_2}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200090,G__200091) : tailrecursion.hoplon.markdown.para_node.call(null,G__200090,G__200091));
})(),(function (){var G__200092 = cljs.core.PersistentArrayMap.EMPTY;
var G__200093 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200092,G__200093) : tailrecursion.hoplon.markdown.para_node.call(null,G__200092,G__200093));
})(),(function (){var G__200094 = cljs.core.PersistentArrayMap.EMPTY;
var G__200095 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{1}{1/R_1+1/R_2}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200094,G__200095) : tailrecursion.hoplon.markdown.para_node.call(null,G__200094,G__200095));
})(),(function (){var G__200096 = cljs.core.PersistentArrayMap.EMPTY;
var G__200097 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["He has written the following two programs, each of which computes the parallel-resistors formula differently:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200096,G__200097) : tailrecursion.hoplon.markdown.para_node.call(null,G__200096,G__200097));
})(),(function (){var G__200216 = (function (){var G__200217 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__200218 = (function (){var G__200219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__200220 = "(";
var G__200221 = (function (){var G__200277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200278 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200277,G__200278) : tailrecursion.hoplon.span.call(null,G__200277,G__200278));
})();
var G__200222 = (function (){var G__200279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200280 = "par1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200279,G__200280) : tailrecursion.hoplon.span.call(null,G__200279,G__200280));
})();
var G__200223 = " [";
var G__200224 = (function (){var G__200281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200282 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200281,G__200282) : tailrecursion.hoplon.span.call(null,G__200281,G__200282));
})();
var G__200225 = " ";
var G__200226 = (function (){var G__200283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200284 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200283,G__200284) : tailrecursion.hoplon.span.call(null,G__200283,G__200284));
})();
var G__200227 = "]\n  (";
var G__200228 = (function (){var G__200285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200286 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200285,G__200286) : tailrecursion.hoplon.span.call(null,G__200285,G__200286));
})();
var G__200229 = " (";
var G__200230 = (function (){var G__200287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200288 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200287,G__200288) : tailrecursion.hoplon.span.call(null,G__200287,G__200288));
})();
var G__200231 = " ";
var G__200232 = (function (){var G__200289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200290 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200289,G__200290) : tailrecursion.hoplon.span.call(null,G__200289,G__200290));
})();
var G__200233 = " ";
var G__200234 = (function (){var G__200291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200292 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200291,G__200292) : tailrecursion.hoplon.span.call(null,G__200291,G__200292));
})();
var G__200235 = ")\n                (";
var G__200236 = (function (){var G__200293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200294 = "add-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200293,G__200294) : tailrecursion.hoplon.span.call(null,G__200293,G__200294));
})();
var G__200237 = " ";
var G__200238 = (function (){var G__200295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200296 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200295,G__200296) : tailrecursion.hoplon.span.call(null,G__200295,G__200296));
})();
var G__200239 = " ";
var G__200240 = (function (){var G__200297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200298 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200297,G__200298) : tailrecursion.hoplon.span.call(null,G__200297,G__200298));
})();
var G__200241 = ")))\n(";
var G__200242 = (function (){var G__200299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200300 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200299,G__200300) : tailrecursion.hoplon.span.call(null,G__200299,G__200300));
})();
var G__200243 = (function (){var G__200301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200302 = "par2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200301,G__200302) : tailrecursion.hoplon.span.call(null,G__200301,G__200302));
})();
var G__200244 = " [";
var G__200245 = (function (){var G__200303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200304 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200303,G__200304) : tailrecursion.hoplon.span.call(null,G__200303,G__200304));
})();
var G__200246 = " ";
var G__200247 = (function (){var G__200305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200306 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200305,G__200306) : tailrecursion.hoplon.span.call(null,G__200305,G__200306));
})();
var G__200248 = "]\n  (";
var G__200249 = (function (){var G__200307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200308 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200307,G__200308) : tailrecursion.hoplon.span.call(null,G__200307,G__200308));
})();
var G__200250 = "[";
var G__200251 = (function (){var G__200309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200310 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200309,G__200310) : tailrecursion.hoplon.span.call(null,G__200309,G__200310));
})();
var G__200252 = " (";
var G__200253 = (function (){var G__200311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200312 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200311,G__200312) : tailrecursion.hoplon.span.call(null,G__200311,G__200312));
})();
var G__200254 = " ";
var G__200255 = (function (){var G__200313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__200314 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200313,G__200314) : tailrecursion.hoplon.span.call(null,G__200313,G__200314));
})();
var G__200256 = " ";
var G__200257 = (function (){var G__200315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__200316 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200315,G__200316) : tailrecursion.hoplon.span.call(null,G__200315,G__200316));
})();
var G__200258 = ")]\n    (";
var G__200259 = (function (){var G__200317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200318 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200317,G__200318) : tailrecursion.hoplon.span.call(null,G__200317,G__200318));
})();
var G__200260 = " ";
var G__200261 = (function (){var G__200319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200320 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200319,G__200320) : tailrecursion.hoplon.span.call(null,G__200319,G__200320));
})();
var G__200262 = "\n                  (";
var G__200263 = (function (){var G__200321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200322 = "add-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200321,G__200322) : tailrecursion.hoplon.span.call(null,G__200321,G__200322));
})();
var G__200264 = " (";
var G__200265 = (function (){var G__200323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200324 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200323,G__200324) : tailrecursion.hoplon.span.call(null,G__200323,G__200324));
})();
var G__200266 = " ";
var G__200267 = (function (){var G__200325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200326 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200325,G__200326) : tailrecursion.hoplon.span.call(null,G__200325,G__200326));
})();
var G__200268 = " ";
var G__200269 = (function (){var G__200327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200328 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200327,G__200328) : tailrecursion.hoplon.span.call(null,G__200327,G__200328));
})();
var G__200270 = ")\n                                (";
var G__200271 = (function (){var G__200329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200330 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200329,G__200330) : tailrecursion.hoplon.span.call(null,G__200329,G__200330));
})();
var G__200272 = " ";
var G__200273 = (function (){var G__200331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200332 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200331,G__200332) : tailrecursion.hoplon.span.call(null,G__200331,G__200332));
})();
var G__200274 = " ";
var G__200275 = (function (){var G__200333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200334 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200333,G__200334) : tailrecursion.hoplon.span.call(null,G__200333,G__200334));
})();
var G__200276 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__200219,G__200220,G__200221,G__200222,G__200223,G__200224,G__200225,G__200226,G__200227,G__200228,G__200229,G__200230,G__200231,G__200232,G__200233,G__200234,G__200235,G__200236,G__200237,G__200238,G__200239,G__200240,G__200241,G__200242,G__200243,G__200244,G__200245,G__200246,G__200247,G__200248,G__200249,G__200250,G__200251,G__200252,G__200253,G__200254,G__200255,G__200256,G__200257,G__200258,G__200259,G__200260,G__200261,G__200262,G__200263,G__200264,G__200265,G__200266,G__200267,G__200268,G__200269,G__200270,G__200271,G__200272,G__200273,G__200274,G__200275,G__200276) : tailrecursion.hoplon.pre.call(null,G__200219,G__200220,G__200221,G__200222,G__200223,G__200224,G__200225,G__200226,G__200227,G__200228,G__200229,G__200230,G__200231,G__200232,G__200233,G__200234,G__200235,G__200236,G__200237,G__200238,G__200239,G__200240,G__200241,G__200242,G__200243,G__200244,G__200245,G__200246,G__200247,G__200248,G__200249,G__200250,G__200251,G__200252,G__200253,G__200254,G__200255,G__200256,G__200257,G__200258,G__200259,G__200260,G__200261,G__200262,G__200263,G__200264,G__200265,G__200266,G__200267,G__200268,G__200269,G__200270,G__200271,G__200272,G__200273,G__200274,G__200275,G__200276));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__200217,G__200218) : tailrecursion.hoplon.div.call(null,G__200217,G__200218));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__200216) : tailrecursion.hoplon.div.call(null,G__200216));
})(),(function (){var G__200335 = cljs.core.PersistentArrayMap.EMPTY;
var G__200336 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lem complains that Alyssa",(function (){var G__200337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__200338 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__200337,G__200338) : tailrecursion.hoplon.markdown.simple_node.call(null,G__200337,G__200338));
})(),"s program gives different answers for the two ways of computing. This is a serious complaint."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200335,G__200336) : tailrecursion.hoplon.markdown.para_node.call(null,G__200335,G__200336));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200087;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200086;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200085;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200084;
}})()], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_200339 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200340 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_200341 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200342 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__200343 = cljs.core.PersistentArrayMap.EMPTY;
var G__200344 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Demonstrate that Lem is right. Investigate the behavior of the system on a variety of arithmetic expressions. Make some intervals A and B, and use them in computing the expressions A/A and A/B. You will get the most insight by using intervals whose width is a small percentage of the center value. Examine the results of the computation in center-percent form (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/ex/12/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.12"], null)], 0)),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200343,G__200344) : tailrecursion.hoplon.markdown.para_node.call(null,G__200343,G__200344));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200342;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200341;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200340;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200339;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_200345 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200346 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_200347 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200348 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__200349 = cljs.core.PersistentArrayMap.EMPTY;
var G__200350 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If we define \\(A=(29.9,30.1)\\), and \\(B=(49.9,51.1)\\), what happens when we divide \\(A\\) by itself? \\(B\\) by itself? \\(A\\) by \\(B\\)? \\(B\\) by \\(A\\)?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200349,G__200350) : tailrecursion.hoplon.markdown.para_node.call(null,G__200349,G__200350));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200348;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200347;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200346;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200345;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_200351 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200352 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_200353 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200354 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__200355 = cljs.core.PersistentArrayMap.EMPTY;
var G__200356 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Eva Lu Ator, another user, has also noticed the different intervals computed by different but algebraically equivalent expressions. She says that a formula to compute with intervals using Alyssa",(function (){var G__200357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__200358 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__200357,G__200358) : tailrecursion.hoplon.markdown.simple_node.call(null,G__200357,G__200358));
})(),"s system will produce tighter error bounds if it can be written in such a form that no variable that represents an uncertain number is repeated. Thus, she says, ",(function (){var G__200359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"par2"], null);
var G__200360 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200359,G__200360) : tailrecursion.hoplon.markdown.code_node.call(null,G__200359,G__200360));
})()," is a ",(function (){var G__200361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__200362 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["better"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__200361,G__200362) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__200361,G__200362));
})()," program for parallel resistances than ",(function (){var G__200363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"par1"], null);
var G__200364 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200363,G__200364) : tailrecursion.hoplon.markdown.code_node.call(null,G__200363,G__200364));
})(),". Is she right? Why?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200355,G__200356) : tailrecursion.hoplon.markdown.para_node.call(null,G__200355,G__200356));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200354;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200353;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200352;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200351;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_200365 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200366 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_200367 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200368 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__200369 = cljs.core.PersistentArrayMap.EMPTY;
var G__200370 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["She is correct. The reason is, if we write an equation, \\(\\frac{x+1}{x}\\), for instance, the assumption is that both \\(x\\)s in the equation have the same value. If we do this with the interval arithmetic we",(function (){var G__200371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__200372 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__200371,G__200372) : tailrecursion.hoplon.markdown.simple_node.call(null,G__200371,G__200372));
})(),"ve defined here, that is not necessarily true. ie, if we define \\(A=(2,4)\\) then compute the above formula using our interval arithmetic assuming that \\(x\\) is in the interval \\(A\\), we get"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200369,G__200370) : tailrecursion.hoplon.markdown.para_node.call(null,G__200369,G__200370));
})(),(function (){var G__200373 = cljs.core.PersistentArrayMap.EMPTY;
var G__200374 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{A+1}{A}=&\\frac{(3,5)}{(2.4)} \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200373,G__200374) : tailrecursion.hoplon.markdown.para_node.call(null,G__200373,G__200374));
})(),(function (){var G__200375 = cljs.core.PersistentArrayMap.EMPTY;
var G__200376 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["which is another way of saying, ",(function (){var G__200377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__200378 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the interval obtained by taking any number between 3 and 5 and dividing it by another number between 2 and 4."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__200377,G__200378) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__200377,G__200378));
})()," But then, 3/4, for instance, would be in that interval by letting the numerator be 3 and the denominator be 4. But the problem is, if the numerator is to be 4, then \\(x=2\\), which means the denominator would be 2 as well."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200375,G__200376) : tailrecursion.hoplon.markdown.para_node.call(null,G__200375,G__200376));
})(),(function (){var G__200379 = cljs.core.PersistentArrayMap.EMPTY;
var G__200380 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The issue we",(function (){var G__200381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__200382 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__200381,G__200382) : tailrecursion.hoplon.markdown.simple_node.call(null,G__200381,G__200382));
})(),"re arriving at is that different instances of the same variable can have different values (if we use our current system of interval arithmetic)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200379,G__200380) : tailrecursion.hoplon.markdown.para_node.call(null,G__200379,G__200380));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200368;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200367;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200366;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200365;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_200383 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200384 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_200385 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200386 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__200387 = cljs.core.PersistentArrayMap.EMPTY;
var G__200388 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Explain, in general, why equivalent algebraic expressions may lead to different answers. Can you devise an interval-arithmetic package that does not have this shortcoming, or is this task impossible? (Warning: This problem is very difficult.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200387,G__200388) : tailrecursion.hoplon.markdown.para_node.call(null,G__200387,G__200388));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200386;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200385;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200384;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200383;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_200389 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200390 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_200391 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200392 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__200393 = cljs.core.PersistentArrayMap.EMPTY;
var G__200394 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I guess this would depend on what we mean by ",(function (){var G__200395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__200396 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["equivalent"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__200395,G__200396) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__200395,G__200396));
})(),". Already due to what we",(function (){var G__200397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__200398 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__200397,G__200398) : tailrecursion.hoplon.markdown.simple_node.call(null,G__200397,G__200398));
})(),"ve seen in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/15/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.15"], null)], 0)),", very strange things happen algebraically. For instance, our interval arithmetic does not have the distributive property. To show this, just observe that the distributive property states, \\(A(B+C)=AB+AC\\), but since \\(A\\) appears twice on the right hand side and there are no repeated variables on the left, by the previous exercise we know that the left hand side must have ",(function (){var G__200399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__200400 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tighter error bounds"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__200399,G__200400) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__200399,G__200400));
})(),". Hence the two sides cannot be equal unless there is no error in \\(A\\) (in which case \\(A\\) is not an interval, but a number)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200393,G__200394) : tailrecursion.hoplon.markdown.para_node.call(null,G__200393,G__200394));
})(),(function (){var G__200401 = cljs.core.PersistentArrayMap.EMPTY;
var G__200402 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, I",(function (){var G__200403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__200404 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__200403,G__200404) : tailrecursion.hoplon.markdown.simple_node.call(null,G__200403,G__200404));
})(),"m not too sure if this is possible, but when would we use this? If it is an engineering (or scientific) concern, then we are not really interested in intervals, but rather statistical probabilities, in which case we can use some theorems about error propagation to achieve our goal."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200401,G__200402) : tailrecursion.hoplon.markdown.para_node.call(null,G__200401,G__200402));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200392;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200391;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200390;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200389;
}})()], 0))], 0))], 0));
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$22(G__191104,G__191105,G__191106,G__191107,G__191108,G__191109,G__191110,G__191111,G__191112,G__191113,G__191114,G__191115,G__191116,G__191117,G__191118,G__191119,G__191120,G__191121,G__191122,G__191123,G__191124,G__191125) : tailrecursion.hoplon.div.call(null,G__191104,G__191105,G__191106,G__191107,G__191108,G__191109,G__191110,G__191111,G__191112,G__191113,G__191114,G__191115,G__191116,G__191117,G__191118,G__191119,G__191120,G__191121,G__191122,G__191123,G__191124,G__191125));
};
var book$sicp$texts$ch2sect1$content = function (var_args){
var args__8262__auto__ = null;
if (arguments.length > 0) {
var G__200405__i = 0, G__200405__a = new Array(arguments.length -  0);
while (G__200405__i < G__200405__a.length) {G__200405__a[G__200405__i] = arguments[G__200405__i + 0]; ++G__200405__i;}
  args__8262__auto__ = new cljs.core.IndexedSeq(G__200405__a,0);
} 
return book$sicp$texts$ch2sect1$content__delegate.call(this,args__8262__auto__);};
book$sicp$texts$ch2sect1$content.cljs$lang$maxFixedArity = 0;
book$sicp$texts$ch2sect1$content.cljs$lang$applyTo = (function (arglist__200406){
var args__8262__auto__ = cljs.core.seq(arglist__200406);
return book$sicp$texts$ch2sect1$content__delegate(args__8262__auto__);
});
book$sicp$texts$ch2sect1$content.cljs$core$IFn$_invoke$arity$variadic = book$sicp$texts$ch2sect1$content__delegate;
return book$sicp$texts$ch2sect1$content;
})()
;

// Compiled by ClojureScript 1.7.48 {:static-fns true, :optimize-constants true}
goog.provide('book.sicp.texts.ch2sect1');
goog.require('cljs.core');
goog.require('tailrecursion.hoplon.markdown');
goog.require('book.sicp.book_data');
goog.require('tailrecursion.hoplon');
goog.require('tailrecursion.javelin');
/**
 * @param {...*} var_args
 */
book.sicp.texts.ch2sect1.content = (function() { 
var book$sicp$texts$ch2sect1$content__delegate = function (args__8262__auto__){
var vec__212487 = tailrecursion.hoplon.parse_args(args__8262__auto__);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__212487,(0),null);
var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__212487,(1),null);
var G__212488 = cljs.core.PersistentArrayMap.EMPTY;
var G__212489 = book.sicp.book_data.sect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Introduction to Data Abstraction"], null),(function (){var _STAR_references_STAR_212510 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_212511 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_212512 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_212513 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__212514 = cljs.core.PersistentArrayMap.EMPTY;
var G__212515 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/1/sub/8/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.1.8"], null)], 0)),", we noted that a procedure used as an element in creating a more complex procedure could be regarded not only as a collection of particular operations but also as a procedural abstraction. That is, the details of how the procedure was implemented could be suppressed, and the particular procedure itself could be replaced by any other procedure with the same overall behavior. In other words, we could make an abstraction that would separate the way the procedure would be used from the details of how the procedure would be implemented in terms of more primitive procedures. The analogous notion for compound data is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data abstraction"], null)], 0)),". Data abstraction is a methodology that enables us to isolate how a compound data object is used from the details of how it is constructed from more primitive data objects."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__212514,G__212515) : tailrecursion.hoplon.markdown.para_node.call(null,G__212514,G__212515));
})(),(function (){var G__212516 = cljs.core.PersistentArrayMap.EMPTY;
var G__212517 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The basic idea of data abstraction is to structure the programs that are to use compound data objects so that they operate on ",(function (){var G__212518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__212519 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstract data."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__212518,G__212519) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__212518,G__212519));
})()," That is, our programs should use data in such a way as to make no assumptions about the data that are not strictly necessary for performing the task at hand. At the same time, a ",(function (){var G__212520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__212521 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["concrete"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__212520,G__212521) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__212520,G__212521));
})()," data representation is defined independent of the programs that use the data. The interface between these two parts of our system will be a set of procedures, called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selectors"], null)], 0))," and ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["constructors"], null)], 0)),", that implement the abstract data in terms of the concrete representation. To illustrate this technique, we will consider how to design a set of procedures for manipulating rational numbers."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__212516,G__212517) : tailrecursion.hoplon.markdown.para_node.call(null,G__212516,G__212517));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_212513;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_212512;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_212511;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_212510;
}})()], 0));
var G__212490 = "";
var G__212491 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Example: Arithmetic Operations for Rational Numbers"], null),(function (){var _STAR_references_STAR_212522 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_212523 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_212524 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_212525 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__212526 = cljs.core.PersistentArrayMap.EMPTY;
var G__212527 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Suppose we want to do arithmetic with rational numbers. We want to be able to add, subtract, multiply, and divide them and to test whether two rational numbers are equal."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__212526,G__212527) : tailrecursion.hoplon.markdown.para_node.call(null,G__212526,G__212527));
})(),(function (){var G__212528 = cljs.core.PersistentArrayMap.EMPTY;
var G__212529 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let us begin by assuming that we already have a way of constructing a rational number from a numerator and a denominator. We also assume that, given a rational number, we have a way of extracting (or selecting) its numerator and its denominator. Let us further assume that the constructor and selectors are available as procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__212528,G__212529) : tailrecursion.hoplon.markdown.para_node.call(null,G__212528,G__212529));
})(),(function (){var G__212530 = cljs.core.PersistentArrayMap.EMPTY;
var G__212531 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__212532 = cljs.core.PersistentArrayMap.EMPTY;
var G__212533 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_212534 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_212535 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__212536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(make-rat <n> <d>)"], null);
var G__212537 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__212536,G__212537) : tailrecursion.hoplon.markdown.code_node.call(null,G__212536,G__212537));
})()," returns the rational number whose numerator is the integer ",(function (){var G__212538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<n>"], null);
var G__212539 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__212538,G__212539) : tailrecursion.hoplon.markdown.code_node.call(null,G__212538,G__212539));
})()," and whose denominator is the integer ",(function (){var G__212540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<d>"], null);
var G__212541 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__212540,G__212541) : tailrecursion.hoplon.markdown.code_node.call(null,G__212540,G__212541));
})(),". - ",(function (){var G__212542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(numer <x>)"], null);
var G__212543 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__212542,G__212543) : tailrecursion.hoplon.markdown.code_node.call(null,G__212542,G__212543));
})()," returns the numerator of the rational number ",(function (){var G__212544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<x>"], null);
var G__212545 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__212544,G__212545) : tailrecursion.hoplon.markdown.code_node.call(null,G__212544,G__212545));
})(),"."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_212535;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_212534;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__212532,G__212533) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__212532,G__212533));
})(),(function (){var G__212546 = cljs.core.PersistentArrayMap.EMPTY;
var G__212547 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_212548 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_212549 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__212550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(denom <x>)"], null);
var G__212551 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__212550,G__212551) : tailrecursion.hoplon.markdown.code_node.call(null,G__212550,G__212551));
})()," returns the denominator of the rational number ",(function (){var G__212552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<x>"], null);
var G__212553 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__212552,G__212553) : tailrecursion.hoplon.markdown.code_node.call(null,G__212552,G__212553));
})(),"."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_212549;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_212548;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__212546,G__212547) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__212546,G__212547));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__212530,G__212531) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__212530,G__212531));
})(),(function (){var G__212554 = cljs.core.PersistentArrayMap.EMPTY;
var G__212555 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We are using here a powerful strategy of synthesis: ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["wishful thinking"], null)], 0)),". We haven",(function (){var G__212556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__212557 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__212556,G__212557) : tailrecursion.hoplon.markdown.simple_node.call(null,G__212556,G__212557));
})(),"t yet said how a rational number is represented, or how the procedures ",(function (){var G__212558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__212559 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__212558,G__212559) : tailrecursion.hoplon.markdown.code_node.call(null,G__212558,G__212559));
})(),", ",(function (){var G__212560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__212561 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__212560,G__212561) : tailrecursion.hoplon.markdown.code_node.call(null,G__212560,G__212561));
})(),", and ",(function (){var G__212562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__212563 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__212562,G__212563) : tailrecursion.hoplon.markdown.code_node.call(null,G__212562,G__212563));
})()," should be implemented. Even so, if we did have these three procedures, we could then add, subtract, multiply, divide, and test equality by using the following relations:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__212554,G__212555) : tailrecursion.hoplon.markdown.para_node.call(null,G__212554,G__212555));
})(),(function (){var G__212564 = cljs.core.PersistentArrayMap.EMPTY;
var G__212565 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{n_1}{d_1}+\\frac{n_2}{d_2}=&\\frac{n_1d_2+n_2d_1}{d_1d_2} \\\\\\frac{n_1}{d_1}-\\frac{n_2}{d_2}=&\\frac{n_1d_2-n_2d_1}{d_1d_2} \\\\\\frac{n_1}{d_1}\\cdot\\frac{n_2}{d_2}=&\\frac{n_1n_2}{d_1d_2} \\\\\\frac{n_1}{d_1}/\\frac{n_2}{d_2}=&\\frac{n_1d_2}{n_2d_1} \\\\\\frac{n_1}{d_1}=\\frac{n_2}{d_2}\\iff& n_1d_2=n_2d_1\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__212564,G__212565) : tailrecursion.hoplon.markdown.para_node.call(null,G__212564,G__212565));
})(),(function (){var G__212566 = cljs.core.PersistentArrayMap.EMPTY;
var G__212567 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can express these rules as procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__212566,G__212567) : tailrecursion.hoplon.markdown.para_node.call(null,G__212566,G__212567));
})(),(function (){var G__212927 = (function (){var G__212928 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__212929 = (function (){var G__212930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__212931 = "(";
var G__212932 = (function (){var G__213105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213106 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213105,G__213106) : tailrecursion.hoplon.span.call(null,G__213105,G__213106));
})();
var G__212933 = (function (){var G__213107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213108 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213107,G__213108) : tailrecursion.hoplon.span.call(null,G__213107,G__213108));
})();
var G__212934 = " [";
var G__212935 = (function (){var G__213109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213110 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213109,G__213110) : tailrecursion.hoplon.span.call(null,G__213109,G__213110));
})();
var G__212936 = " ";
var G__212937 = (function (){var G__213111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213112 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213111,G__213112) : tailrecursion.hoplon.span.call(null,G__213111,G__213112));
})();
var G__212938 = "]\n  (";
var G__212939 = (function (){var G__213113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213114 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213113,G__213114) : tailrecursion.hoplon.span.call(null,G__213113,G__213114));
})();
var G__212940 = " (";
var G__212941 = (function (){var G__213115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213116 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213115,G__213116) : tailrecursion.hoplon.span.call(null,G__213115,G__213116));
})();
var G__212942 = "(";
var G__212943 = (function (){var G__213117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213118 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213117,G__213118) : tailrecursion.hoplon.span.call(null,G__213117,G__213118));
})();
var G__212944 = "(";
var G__212945 = (function (){var G__213119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213120 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213119,G__213120) : tailrecursion.hoplon.span.call(null,G__213119,G__213120));
})();
var G__212946 = " ";
var G__212947 = (function (){var G__213121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213122 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213121,G__213122) : tailrecursion.hoplon.span.call(null,G__213121,G__213122));
})();
var G__212948 = ") (";
var G__212949 = (function (){var G__213123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213124 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213123,G__213124) : tailrecursion.hoplon.span.call(null,G__213123,G__213124));
})();
var G__212950 = (function (){var G__213125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213126 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213125,G__213126) : tailrecursion.hoplon.span.call(null,G__213125,G__213126));
})();
var G__212951 = " ";
var G__212952 = (function (){var G__213127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213128 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213127,G__213128) : tailrecursion.hoplon.span.call(null,G__213127,G__213128));
})();
var G__212953 = "))\n               (";
var G__212954 = (function (){var G__213129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213130 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213129,G__213130) : tailrecursion.hoplon.span.call(null,G__213129,G__213130));
})();
var G__212955 = "(";
var G__212956 = (function (){var G__213131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213132 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213131,G__213132) : tailrecursion.hoplon.span.call(null,G__213131,G__213132));
})();
var G__212957 = " ";
var G__212958 = (function (){var G__213133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213134 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213133,G__213134) : tailrecursion.hoplon.span.call(null,G__213133,G__213134));
})();
var G__212959 = ") (";
var G__212960 = (function (){var G__213135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213136 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213135,G__213136) : tailrecursion.hoplon.span.call(null,G__213135,G__213136));
})();
var G__212961 = (function (){var G__213137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213138 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213137,G__213138) : tailrecursion.hoplon.span.call(null,G__213137,G__213138));
})();
var G__212962 = " ";
var G__212963 = (function (){var G__213139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213140 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213139,G__213140) : tailrecursion.hoplon.span.call(null,G__213139,G__213140));
})();
var G__212964 = ")))\n            (";
var G__212965 = (function (){var G__213141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213142 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213141,G__213142) : tailrecursion.hoplon.span.call(null,G__213141,G__213142));
})();
var G__212966 = "(";
var G__212967 = (function (){var G__213143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213144 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213143,G__213144) : tailrecursion.hoplon.span.call(null,G__213143,G__213144));
})();
var G__212968 = " ";
var G__212969 = (function (){var G__213145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213146 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213145,G__213146) : tailrecursion.hoplon.span.call(null,G__213145,G__213146));
})();
var G__212970 = ") (";
var G__212971 = (function (){var G__213147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213148 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213147,G__213148) : tailrecursion.hoplon.span.call(null,G__213147,G__213148));
})();
var G__212972 = " ";
var G__212973 = (function (){var G__213149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213150 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213149,G__213150) : tailrecursion.hoplon.span.call(null,G__213149,G__213150));
})();
var G__212974 = "))))\n(";
var G__212975 = (function (){var G__213151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213152 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213151,G__213152) : tailrecursion.hoplon.span.call(null,G__213151,G__213152));
})();
var G__212976 = (function (){var G__213153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213154 = "sub-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213153,G__213154) : tailrecursion.hoplon.span.call(null,G__213153,G__213154));
})();
var G__212977 = " [";
var G__212978 = (function (){var G__213155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213156 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213155,G__213156) : tailrecursion.hoplon.span.call(null,G__213155,G__213156));
})();
var G__212979 = " ";
var G__212980 = (function (){var G__213157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213158 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213157,G__213158) : tailrecursion.hoplon.span.call(null,G__213157,G__213158));
})();
var G__212981 = "]\n  (";
var G__212982 = (function (){var G__213159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213160 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213159,G__213160) : tailrecursion.hoplon.span.call(null,G__213159,G__213160));
})();
var G__212983 = " (";
var G__212984 = (function (){var G__213161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213162 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213161,G__213162) : tailrecursion.hoplon.span.call(null,G__213161,G__213162));
})();
var G__212985 = "(";
var G__212986 = (function (){var G__213163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213164 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213163,G__213164) : tailrecursion.hoplon.span.call(null,G__213163,G__213164));
})();
var G__212987 = "(";
var G__212988 = (function (){var G__213165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213166 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213165,G__213166) : tailrecursion.hoplon.span.call(null,G__213165,G__213166));
})();
var G__212989 = " ";
var G__212990 = (function (){var G__213167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213168 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213167,G__213168) : tailrecursion.hoplon.span.call(null,G__213167,G__213168));
})();
var G__212991 = ") (";
var G__212992 = (function (){var G__213169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213170 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213169,G__213170) : tailrecursion.hoplon.span.call(null,G__213169,G__213170));
})();
var G__212993 = (function (){var G__213171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213172 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213171,G__213172) : tailrecursion.hoplon.span.call(null,G__213171,G__213172));
})();
var G__212994 = " ";
var G__212995 = (function (){var G__213173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213174 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213173,G__213174) : tailrecursion.hoplon.span.call(null,G__213173,G__213174));
})();
var G__212996 = "))\n               (";
var G__212997 = (function (){var G__213175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213176 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213175,G__213176) : tailrecursion.hoplon.span.call(null,G__213175,G__213176));
})();
var G__212998 = "(";
var G__212999 = (function (){var G__213177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213178 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213177,G__213178) : tailrecursion.hoplon.span.call(null,G__213177,G__213178));
})();
var G__213000 = " ";
var G__213001 = (function (){var G__213179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213180 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213179,G__213180) : tailrecursion.hoplon.span.call(null,G__213179,G__213180));
})();
var G__213002 = ") (";
var G__213003 = (function (){var G__213181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213182 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213181,G__213182) : tailrecursion.hoplon.span.call(null,G__213181,G__213182));
})();
var G__213004 = (function (){var G__213183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213184 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213183,G__213184) : tailrecursion.hoplon.span.call(null,G__213183,G__213184));
})();
var G__213005 = " ";
var G__213006 = (function (){var G__213185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213186 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213185,G__213186) : tailrecursion.hoplon.span.call(null,G__213185,G__213186));
})();
var G__213007 = ")))\n            (";
var G__213008 = (function (){var G__213187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213188 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213187,G__213188) : tailrecursion.hoplon.span.call(null,G__213187,G__213188));
})();
var G__213009 = "(";
var G__213010 = (function (){var G__213189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213190 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213189,G__213190) : tailrecursion.hoplon.span.call(null,G__213189,G__213190));
})();
var G__213011 = " ";
var G__213012 = (function (){var G__213191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213192 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213191,G__213192) : tailrecursion.hoplon.span.call(null,G__213191,G__213192));
})();
var G__213013 = ") (";
var G__213014 = (function (){var G__213193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213194 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213193,G__213194) : tailrecursion.hoplon.span.call(null,G__213193,G__213194));
})();
var G__213015 = " ";
var G__213016 = (function (){var G__213195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213196 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213195,G__213196) : tailrecursion.hoplon.span.call(null,G__213195,G__213196));
})();
var G__213017 = "))))\n(";
var G__213018 = (function (){var G__213197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213198 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213197,G__213198) : tailrecursion.hoplon.span.call(null,G__213197,G__213198));
})();
var G__213019 = (function (){var G__213199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213200 = "mul-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213199,G__213200) : tailrecursion.hoplon.span.call(null,G__213199,G__213200));
})();
var G__213020 = " [";
var G__213021 = (function (){var G__213201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213202 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213201,G__213202) : tailrecursion.hoplon.span.call(null,G__213201,G__213202));
})();
var G__213022 = " ";
var G__213023 = (function (){var G__213203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213204 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213203,G__213204) : tailrecursion.hoplon.span.call(null,G__213203,G__213204));
})();
var G__213024 = "]\n  (";
var G__213025 = (function (){var G__213205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213206 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213205,G__213206) : tailrecursion.hoplon.span.call(null,G__213205,G__213206));
})();
var G__213026 = " (";
var G__213027 = (function (){var G__213207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213208 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213207,G__213208) : tailrecursion.hoplon.span.call(null,G__213207,G__213208));
})();
var G__213028 = "(";
var G__213029 = (function (){var G__213209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213210 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213209,G__213210) : tailrecursion.hoplon.span.call(null,G__213209,G__213210));
})();
var G__213030 = " ";
var G__213031 = (function (){var G__213211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213212 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213211,G__213212) : tailrecursion.hoplon.span.call(null,G__213211,G__213212));
})();
var G__213032 = ") (";
var G__213033 = (function (){var G__213213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213214 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213213,G__213214) : tailrecursion.hoplon.span.call(null,G__213213,G__213214));
})();
var G__213034 = " ";
var G__213035 = (function (){var G__213215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213216 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213215,G__213216) : tailrecursion.hoplon.span.call(null,G__213215,G__213216));
})();
var G__213036 = "))\n            (";
var G__213037 = (function (){var G__213217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213218 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213217,G__213218) : tailrecursion.hoplon.span.call(null,G__213217,G__213218));
})();
var G__213038 = "(";
var G__213039 = (function (){var G__213219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213220 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213219,G__213220) : tailrecursion.hoplon.span.call(null,G__213219,G__213220));
})();
var G__213040 = " ";
var G__213041 = (function (){var G__213221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213222 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213221,G__213222) : tailrecursion.hoplon.span.call(null,G__213221,G__213222));
})();
var G__213042 = ") (";
var G__213043 = (function (){var G__213223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213224 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213223,G__213224) : tailrecursion.hoplon.span.call(null,G__213223,G__213224));
})();
var G__213044 = " ";
var G__213045 = (function (){var G__213225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213226 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213225,G__213226) : tailrecursion.hoplon.span.call(null,G__213225,G__213226));
})();
var G__213046 = "))))\n(";
var G__213047 = (function (){var G__213227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213228 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213227,G__213228) : tailrecursion.hoplon.span.call(null,G__213227,G__213228));
})();
var G__213048 = (function (){var G__213229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213230 = "div-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213229,G__213230) : tailrecursion.hoplon.span.call(null,G__213229,G__213230));
})();
var G__213049 = " [";
var G__213050 = (function (){var G__213231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213232 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213231,G__213232) : tailrecursion.hoplon.span.call(null,G__213231,G__213232));
})();
var G__213051 = " ";
var G__213052 = (function (){var G__213233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213234 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213233,G__213234) : tailrecursion.hoplon.span.call(null,G__213233,G__213234));
})();
var G__213053 = "]\n  (";
var G__213054 = (function (){var G__213235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213236 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213235,G__213236) : tailrecursion.hoplon.span.call(null,G__213235,G__213236));
})();
var G__213055 = " (";
var G__213056 = (function (){var G__213237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213238 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213237,G__213238) : tailrecursion.hoplon.span.call(null,G__213237,G__213238));
})();
var G__213057 = "(";
var G__213058 = (function (){var G__213239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213240 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213239,G__213240) : tailrecursion.hoplon.span.call(null,G__213239,G__213240));
})();
var G__213059 = " ";
var G__213060 = (function (){var G__213241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213242 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213241,G__213242) : tailrecursion.hoplon.span.call(null,G__213241,G__213242));
})();
var G__213061 = ") (";
var G__213062 = (function (){var G__213243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213244 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213243,G__213244) : tailrecursion.hoplon.span.call(null,G__213243,G__213244));
})();
var G__213063 = " ";
var G__213064 = (function (){var G__213245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213246 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213245,G__213246) : tailrecursion.hoplon.span.call(null,G__213245,G__213246));
})();
var G__213065 = "))\n            (";
var G__213066 = (function (){var G__213247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213248 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213247,G__213248) : tailrecursion.hoplon.span.call(null,G__213247,G__213248));
})();
var G__213067 = "(";
var G__213068 = (function (){var G__213249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213250 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213249,G__213250) : tailrecursion.hoplon.span.call(null,G__213249,G__213250));
})();
var G__213069 = " ";
var G__213070 = (function (){var G__213251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213252 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213251,G__213252) : tailrecursion.hoplon.span.call(null,G__213251,G__213252));
})();
var G__213071 = ") (";
var G__213072 = (function (){var G__213253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213254 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213253,G__213254) : tailrecursion.hoplon.span.call(null,G__213253,G__213254));
})();
var G__213073 = " ";
var G__213074 = (function (){var G__213255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213256 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213255,G__213256) : tailrecursion.hoplon.span.call(null,G__213255,G__213256));
})();
var G__213075 = "))))\n(";
var G__213076 = (function (){var G__213257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213258 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213257,G__213258) : tailrecursion.hoplon.span.call(null,G__213257,G__213258));
})();
var G__213077 = (function (){var G__213259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213260 = "equal-rat?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213259,G__213260) : tailrecursion.hoplon.span.call(null,G__213259,G__213260));
})();
var G__213078 = " [";
var G__213079 = (function (){var G__213261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213262 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213261,G__213262) : tailrecursion.hoplon.span.call(null,G__213261,G__213262));
})();
var G__213080 = " ";
var G__213081 = (function (){var G__213263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213264 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213263,G__213264) : tailrecursion.hoplon.span.call(null,G__213263,G__213264));
})();
var G__213082 = "]\n  (";
var G__213083 = (function (){var G__213265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213266 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213265,G__213266) : tailrecursion.hoplon.span.call(null,G__213265,G__213266));
})();
var G__213084 = "(";
var G__213085 = (function (){var G__213267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213268 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213267,G__213268) : tailrecursion.hoplon.span.call(null,G__213267,G__213268));
})();
var G__213086 = "(";
var G__213087 = (function (){var G__213269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213270 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213269,G__213270) : tailrecursion.hoplon.span.call(null,G__213269,G__213270));
})();
var G__213088 = " ";
var G__213089 = (function (){var G__213271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213272 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213271,G__213272) : tailrecursion.hoplon.span.call(null,G__213271,G__213272));
})();
var G__213090 = ") (";
var G__213091 = (function (){var G__213273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213274 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213273,G__213274) : tailrecursion.hoplon.span.call(null,G__213273,G__213274));
})();
var G__213092 = " ";
var G__213093 = (function (){var G__213275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213276 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213275,G__213276) : tailrecursion.hoplon.span.call(null,G__213275,G__213276));
})();
var G__213094 = "))\n     (";
var G__213095 = (function (){var G__213277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213278 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213277,G__213278) : tailrecursion.hoplon.span.call(null,G__213277,G__213278));
})();
var G__213096 = "(";
var G__213097 = (function (){var G__213279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213280 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213279,G__213280) : tailrecursion.hoplon.span.call(null,G__213279,G__213280));
})();
var G__213098 = " ";
var G__213099 = (function (){var G__213281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213282 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213281,G__213282) : tailrecursion.hoplon.span.call(null,G__213281,G__213282));
})();
var G__213100 = ") (";
var G__213101 = (function (){var G__213283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213284 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213283,G__213284) : tailrecursion.hoplon.span.call(null,G__213283,G__213284));
})();
var G__213102 = " ";
var G__213103 = (function (){var G__213285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213286 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213285,G__213286) : tailrecursion.hoplon.span.call(null,G__213285,G__213286));
})();
var G__213104 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$175 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$175(G__212930,G__212931,G__212932,G__212933,G__212934,G__212935,G__212936,G__212937,G__212938,G__212939,G__212940,G__212941,G__212942,G__212943,G__212944,G__212945,G__212946,G__212947,G__212948,G__212949,G__212950,G__212951,G__212952,G__212953,G__212954,G__212955,G__212956,G__212957,G__212958,G__212959,G__212960,G__212961,G__212962,G__212963,G__212964,G__212965,G__212966,G__212967,G__212968,G__212969,G__212970,G__212971,G__212972,G__212973,G__212974,G__212975,G__212976,G__212977,G__212978,G__212979,G__212980,G__212981,G__212982,G__212983,G__212984,G__212985,G__212986,G__212987,G__212988,G__212989,G__212990,G__212991,G__212992,G__212993,G__212994,G__212995,G__212996,G__212997,G__212998,G__212999,G__213000,G__213001,G__213002,G__213003,G__213004,G__213005,G__213006,G__213007,G__213008,G__213009,G__213010,G__213011,G__213012,G__213013,G__213014,G__213015,G__213016,G__213017,G__213018,G__213019,G__213020,G__213021,G__213022,G__213023,G__213024,G__213025,G__213026,G__213027,G__213028,G__213029,G__213030,G__213031,G__213032,G__213033,G__213034,G__213035,G__213036,G__213037,G__213038,G__213039,G__213040,G__213041,G__213042,G__213043,G__213044,G__213045,G__213046,G__213047,G__213048,G__213049,G__213050,G__213051,G__213052,G__213053,G__213054,G__213055,G__213056,G__213057,G__213058,G__213059,G__213060,G__213061,G__213062,G__213063,G__213064,G__213065,G__213066,G__213067,G__213068,G__213069,G__213070,G__213071,G__213072,G__213073,G__213074,G__213075,G__213076,G__213077,G__213078,G__213079,G__213080,G__213081,G__213082,G__213083,G__213084,G__213085,G__213086,G__213087,G__213088,G__213089,G__213090,G__213091,G__213092,G__213093,G__213094,G__213095,G__213096,G__213097,G__213098,G__213099,G__213100,G__213101,G__213102,G__213103,G__213104) : tailrecursion.hoplon.pre.call(null,G__212930,G__212931,G__212932,G__212933,G__212934,G__212935,G__212936,G__212937,G__212938,G__212939,G__212940,G__212941,G__212942,G__212943,G__212944,G__212945,G__212946,G__212947,G__212948,G__212949,G__212950,G__212951,G__212952,G__212953,G__212954,G__212955,G__212956,G__212957,G__212958,G__212959,G__212960,G__212961,G__212962,G__212963,G__212964,G__212965,G__212966,G__212967,G__212968,G__212969,G__212970,G__212971,G__212972,G__212973,G__212974,G__212975,G__212976,G__212977,G__212978,G__212979,G__212980,G__212981,G__212982,G__212983,G__212984,G__212985,G__212986,G__212987,G__212988,G__212989,G__212990,G__212991,G__212992,G__212993,G__212994,G__212995,G__212996,G__212997,G__212998,G__212999,G__213000,G__213001,G__213002,G__213003,G__213004,G__213005,G__213006,G__213007,G__213008,G__213009,G__213010,G__213011,G__213012,G__213013,G__213014,G__213015,G__213016,G__213017,G__213018,G__213019,G__213020,G__213021,G__213022,G__213023,G__213024,G__213025,G__213026,G__213027,G__213028,G__213029,G__213030,G__213031,G__213032,G__213033,G__213034,G__213035,G__213036,G__213037,G__213038,G__213039,G__213040,G__213041,G__213042,G__213043,G__213044,G__213045,G__213046,G__213047,G__213048,G__213049,G__213050,G__213051,G__213052,G__213053,G__213054,G__213055,G__213056,G__213057,G__213058,G__213059,G__213060,G__213061,G__213062,G__213063,G__213064,G__213065,G__213066,G__213067,G__213068,G__213069,G__213070,G__213071,G__213072,G__213073,G__213074,G__213075,G__213076,G__213077,G__213078,G__213079,G__213080,G__213081,G__213082,G__213083,G__213084,G__213085,G__213086,G__213087,G__213088,G__213089,G__213090,G__213091,G__213092,G__213093,G__213094,G__213095,G__213096,G__213097,G__213098,G__213099,G__213100,G__213101,G__213102,G__213103,G__213104));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__212928,G__212929) : tailrecursion.hoplon.div.call(null,G__212928,G__212929));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__212927) : tailrecursion.hoplon.div.call(null,G__212927));
})(),(function (){var G__213287 = cljs.core.PersistentArrayMap.EMPTY;
var G__213288 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we have the operations on rational numbers defined in terms of the selector and constructor procedures ",(function (){var G__213289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__213290 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213289,G__213290) : tailrecursion.hoplon.markdown.code_node.call(null,G__213289,G__213290));
})(),", ",(function (){var G__213291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__213292 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213291,G__213292) : tailrecursion.hoplon.markdown.code_node.call(null,G__213291,G__213292));
})(),", and ",(function (){var G__213293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__213294 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213293,G__213294) : tailrecursion.hoplon.markdown.code_node.call(null,G__213293,G__213294));
})(),". But we haven",(function (){var G__213295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__213296 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__213295,G__213296) : tailrecursion.hoplon.markdown.simple_node.call(null,G__213295,G__213296));
})(),"t yet defined these. What we need is some way to glue together a numerator and a denominator to form a rational number."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__213287,G__213288) : tailrecursion.hoplon.markdown.para_node.call(null,G__213287,G__213288));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_212525;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_212524;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_212523;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_212522;
}})()], 0));
var G__212492 = "";
var G__212493 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Pairs (or Lists, for Us)"], null),(function (){var _STAR_references_STAR_213297 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_213298 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_213299 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_213300 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__213301 = cljs.core.PersistentArrayMap.EMPTY;
var G__213302 = cljs.core.PersistentVector.fromArray(["To enable us to implement the concrete level of our data abstraction, our language provides a compound structure abstraction called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sequential object"], null)], 0)),". These sequential objects are really just anything that has a concept of a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["first"], null)], 0))," item and a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["rest"], null)], 0))," of the items. Hence, a sequential object is any object which allows use of the ",(function (){var G__213303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__213304 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213303,G__213304) : tailrecursion.hoplon.markdown.code_node.call(null,G__213303,G__213304));
})()," and ",(function (){var G__213305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__213306 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213305,G__213306) : tailrecursion.hoplon.markdown.code_node.call(null,G__213305,G__213306));
})()," protocols (kind of like procedures, except their actual execution may be different from data type to data type). One example of a sequential object ",(function (){var G__213307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__213308 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__213307,G__213308) : tailrecursion.hoplon.markdown.simple_node.call(null,G__213307,G__213308));
})()," the one we will be using instead of the ",(function (){var G__213309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__213310 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pairs"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213309,G__213310) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213309,G__213310));
})()," they use for this section in Scheme ",(function (){var G__213311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__213312 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__213311,G__213312) : tailrecursion.hoplon.markdown.simple_node.call(null,G__213311,G__213312));
})()," is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["list"], null)], 0)),". Lists can be constructed via the procedure ",(function (){var G__213313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__213314 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213313,G__213314) : tailrecursion.hoplon.markdown.code_node.call(null,G__213313,G__213314));
})()," like so ",(function (){var G__213315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(list 1 2 3)"], null);
var G__213316 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213315,G__213316) : tailrecursion.hoplon.markdown.code_node.call(null,G__213315,G__213316));
})()," gives you a list containing 1, 2, and 3 as its elements. So ",(function (){var G__213317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first (list 1 2 3))"], null);
var G__213318 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213317,G__213318) : tailrecursion.hoplon.markdown.code_node.call(null,G__213317,G__213318));
})()," would return ",(function (){var G__213319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"1"], null);
var G__213320 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213319,G__213320) : tailrecursion.hoplon.markdown.code_node.call(null,G__213319,G__213320));
})(),", and ",(function (){var G__213321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(rest (list 1 2 3))"], null);
var G__213322 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213321,G__213322) : tailrecursion.hoplon.markdown.code_node.call(null,G__213321,G__213322));
})()," returns ",(function (){var G__213323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(2 3)"], null);
var G__213324 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213323,G__213324) : tailrecursion.hoplon.markdown.code_node.call(null,G__213323,G__213324));
})(),", which is to say the list containing 2 and 3 as its elements. To check if what we",(function (){var G__213325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__213326 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__213325,G__213326) : tailrecursion.hoplon.markdown.simple_node.call(null,G__213325,G__213326));
})(),"ve been given is indeed a list, we can use the procedure ",(function (){var G__213327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list?"], null);
var G__213328 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213327,G__213328) : tailrecursion.hoplon.markdown.code_node.call(null,G__213327,G__213328));
})()," like so: ",(function (){var G__213329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(list? (rest (list 1 2 3)))"], null);
var G__213330 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213329,G__213330) : tailrecursion.hoplon.markdown.code_node.call(null,G__213329,G__213330));
})(),". Lists are actually made via pairs (as will be described later in this section), but all of that is under the hood. Lists can also be constructed from old lists with the procedure ",(function (){var G__213331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__213332 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213331,G__213332) : tailrecursion.hoplon.markdown.code_node.call(null,G__213331,G__213332));
})(),".",(function (){var G__213333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__213334 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We should note that since these lists are immutable, the only way to ",(function (){var G__213335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__213336 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["edit"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213335,G__213336) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213335,G__213336));
})()," a list would be to create a new one with the desired changes and then destroy the old one. While this may seem unfortunate at first, it is actually quite a desireable feature when dealing with concurrency."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213333,G__213334) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213333,G__213334));
})()," This procedure takes two or more arguments, a sequential object and any number of values to append to the sequential object, then returns a sequential object of the same type with the values appended in whatever method appropriate to that sequential object in the order they appear. We will see later that lists are constructed in such a way that prepending is very cheap, so ",(function (){var G__213337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__213338 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213337,G__213338) : tailrecursion.hoplon.markdown.code_node.call(null,G__213337,G__213338));
})()," does exactly that. Hence, ",(function (){var G__213339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(conj (list 1 2 3) 4)"], null);
var G__213340 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213339,G__213340) : tailrecursion.hoplon.markdown.code_node.call(null,G__213339,G__213340));
})()," returns ",(function (){var G__213341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(4 1\n2 3)"], null);
var G__213342 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213341,G__213342) : tailrecursion.hoplon.markdown.code_node.call(null,G__213341,G__213342));
})(),", and ",(function (){var G__213343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(conj (list 1 2 3) 4 5)"], null);
var G__213344 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213343,G__213344) : tailrecursion.hoplon.markdown.code_node.call(null,G__213343,G__213344));
})()," returns ",(function (){var G__213345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(5 4 1 2 3)"], null);
var G__213346 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213345,G__213346) : tailrecursion.hoplon.markdown.code_node.call(null,G__213345,G__213346));
})()," (remember that they are prepended in the order they appear!)."], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__213301,G__213302) : tailrecursion.hoplon.markdown.para_node.call(null,G__213301,G__213302));
})(),(function (){var G__213347 = cljs.core.PersistentArrayMap.EMPTY;
var G__213348 = new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In Scheme, however, their building block is the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pair"], null)], 0)),", wich can be constructed via the primitive procedure ",(function (){var G__213349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213350 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213349,G__213350) : tailrecursion.hoplon.markdown.code_node.call(null,G__213349,G__213350));
})()," (which also works in Clojure",(function (){var G__213351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__213352 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__213351,G__213352) : tailrecursion.hoplon.markdown.simple_node.call(null,G__213351,G__213352));
})()," kinda) and has procedures ",(function (){var G__213353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__213354 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213353,G__213354) : tailrecursion.hoplon.markdown.code_node.call(null,G__213353,G__213354));
})()," and ",(function (){var G__213355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__213356 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213355,G__213356) : tailrecursion.hoplon.markdown.code_node.call(null,G__213355,G__213356));
})()," for obtaining the first and second values of the pair respectively.",(function (){var G__213357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__213358 = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The name ",(function (){var G__213359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213360 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213359,G__213360) : tailrecursion.hoplon.markdown.code_node.call(null,G__213359,G__213360));
})()," stands for ",(function (){var G__213361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__213362 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["construct."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213361,G__213362) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213361,G__213362));
})()," The names ",(function (){var G__213363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__213364 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213363,G__213364) : tailrecursion.hoplon.markdown.code_node.call(null,G__213363,G__213364));
})()," and ",(function (){var G__213365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__213366 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213365,G__213366) : tailrecursion.hoplon.markdown.code_node.call(null,G__213365,G__213366));
})()," derive from the original implementation of Lisp on the IBM 704. That machine had an addressing scheme that allowed one to reference the ",(function (){var G__213367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__213368 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["address"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213367,G__213368) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213367,G__213368));
})()," and ",(function (){var G__213369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__213370 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["decrement"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213369,G__213370) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213369,G__213370));
})()," parts of a memory location. ",(function (){var G__213371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__213372 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213371,G__213372) : tailrecursion.hoplon.markdown.code_node.call(null,G__213371,G__213372));
})()," stands for ",(function (){var G__213373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__213374 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Contents of Address part of Register"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213373,G__213374) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213373,G__213374));
})()," and ",(function (){var G__213375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__213376 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213375,G__213376) : tailrecursion.hoplon.markdown.code_node.call(null,G__213375,G__213376));
})()," (pronounced ",(function (){var G__213377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__213378 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["could-er"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213377,G__213378) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213377,G__213378));
})(),") stands for ",(function (){var G__213379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__213380 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Contents of Decrement part of Register."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213379,G__213380) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213379,G__213380));
})()], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213357,G__213358) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213357,G__213358));
})()," Thus, we in Scheme, we would be able to use ",(function (){var G__213381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213382 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213381,G__213382) : tailrecursion.hoplon.markdown.code_node.call(null,G__213381,G__213382));
})(),", ",(function (){var G__213383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__213384 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213383,G__213384) : tailrecursion.hoplon.markdown.code_node.call(null,G__213383,G__213384));
})(),", and ",(function (){var G__213385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__213386 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213385,G__213386) : tailrecursion.hoplon.markdown.code_node.call(null,G__213385,G__213386));
})()," as follows: "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__213347,G__213348) : tailrecursion.hoplon.markdown.para_node.call(null,G__213347,G__213348));
})(),(function (){var G__213409 = (function (){var G__213410 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__213411 = (function (){var G__213412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__213413 = "(";
var G__213414 = (function (){var G__213422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213423 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213422,G__213423) : tailrecursion.hoplon.span.call(null,G__213422,G__213423));
})();
var G__213415 = (function (){var G__213424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213425 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213424,G__213425) : tailrecursion.hoplon.span.call(null,G__213424,G__213425));
})();
var G__213416 = " (";
var G__213417 = (function (){var G__213426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213427 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213426,G__213427) : tailrecursion.hoplon.span.call(null,G__213426,G__213427));
})();
var G__213418 = (function (){var G__213428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213429 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213428,G__213429) : tailrecursion.hoplon.span.call(null,G__213428,G__213429));
})();
var G__213419 = " ";
var G__213420 = (function (){var G__213430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213431 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213430,G__213431) : tailrecursion.hoplon.span.call(null,G__213430,G__213431));
})();
var G__213421 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10(G__213412,G__213413,G__213414,G__213415,G__213416,G__213417,G__213418,G__213419,G__213420,G__213421) : tailrecursion.hoplon.pre.call(null,G__213412,G__213413,G__213414,G__213415,G__213416,G__213417,G__213418,G__213419,G__213420,G__213421));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__213410,G__213411) : tailrecursion.hoplon.div.call(null,G__213410,G__213411));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__213409) : tailrecursion.hoplon.div.call(null,G__213409));
})(),(function (){var G__213432 = cljs.core.PersistentArrayMap.EMPTY;
var G__213433 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Go ahead and try this in Clojure (can you translate that?)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__213432,G__213433) : tailrecursion.hoplon.markdown.para_node.call(null,G__213432,G__213433));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_213300;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_213299;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_213298;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_213297;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,"```clj\n(def x (cons 1 2))\n```"], 0)),"",(function (){var _STAR_references_STAR_213434 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_213435 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_213436 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_213437 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__213438 = cljs.core.PersistentArrayMap.EMPTY;
var G__213439 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If you tried the previous example. you probably got an error. That is because Clojure implements ",(function (){var G__213440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213441 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213440,G__213441) : tailrecursion.hoplon.markdown.code_node.call(null,G__213440,G__213441));
})()," differently. If we try "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__213438,G__213439) : tailrecursion.hoplon.markdown.para_node.call(null,G__213438,G__213439));
})(),(function (){var G__213471 = (function (){var G__213472 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__213473 = (function (){var G__213474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__213475 = "(";
var G__213476 = (function (){var G__213487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213488 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213487,G__213488) : tailrecursion.hoplon.span.call(null,G__213487,G__213488));
})();
var G__213477 = (function (){var G__213489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213490 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213489,G__213490) : tailrecursion.hoplon.span.call(null,G__213489,G__213490));
})();
var G__213478 = " (";
var G__213479 = (function (){var G__213491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213492 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213491,G__213492) : tailrecursion.hoplon.span.call(null,G__213491,G__213492));
})();
var G__213480 = (function (){var G__213493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213494 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213493,G__213494) : tailrecursion.hoplon.span.call(null,G__213493,G__213494));
})();
var G__213481 = " (";
var G__213482 = (function (){var G__213495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213496 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213495,G__213496) : tailrecursion.hoplon.span.call(null,G__213495,G__213496));
})();
var G__213483 = (function (){var G__213497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213498 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213497,G__213498) : tailrecursion.hoplon.span.call(null,G__213497,G__213498));
})();
var G__213484 = " ";
var G__213485 = (function (){var G__213499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213500 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213499,G__213500) : tailrecursion.hoplon.span.call(null,G__213499,G__213500));
})();
var G__213486 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__213474,G__213475,G__213476,G__213477,G__213478,G__213479,G__213480,G__213481,G__213482,G__213483,G__213484,G__213485,G__213486) : tailrecursion.hoplon.pre.call(null,G__213474,G__213475,G__213476,G__213477,G__213478,G__213479,G__213480,G__213481,G__213482,G__213483,G__213484,G__213485,G__213486));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__213472,G__213473) : tailrecursion.hoplon.div.call(null,G__213472,G__213473));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__213471) : tailrecursion.hoplon.div.call(null,G__213471));
})(),(function (){var G__213501 = cljs.core.PersistentArrayMap.EMPTY;
var G__213502 = new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then we shouldn",(function (){var G__213503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__213504 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__213503,G__213504) : tailrecursion.hoplon.markdown.simple_node.call(null,G__213503,G__213504));
})(),"t get any errors. The reason is that the second argument of ",(function (){var G__213505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213506 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213505,G__213506) : tailrecursion.hoplon.markdown.code_node.call(null,G__213505,G__213506));
})()," must be sequential object (or ",(function (){var G__213507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nil"], null);
var G__213508 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213507,G__213508) : tailrecursion.hoplon.markdown.code_node.call(null,G__213507,G__213508));
})(),"). Either way, we will not be using ",(function (){var G__213509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213510 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213509,G__213510) : tailrecursion.hoplon.markdown.code_node.call(null,G__213509,G__213510));
})()," for our discourse in this chapter, but rather the procedures ",(function (){var G__213511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__213512 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213511,G__213512) : tailrecursion.hoplon.markdown.code_node.call(null,G__213511,G__213512));
})()," and ",(function (){var G__213513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__213514 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213513,G__213514) : tailrecursion.hoplon.markdown.code_node.call(null,G__213513,G__213514));
})(),", which are more general anyway. Along with ",(function (){var G__213515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__213516 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213515,G__213516) : tailrecursion.hoplon.markdown.code_node.call(null,G__213515,G__213516));
})()," and ",(function (){var G__213517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__213518 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213517,G__213518) : tailrecursion.hoplon.markdown.code_node.call(null,G__213517,G__213518));
})(),", lists also have ",(function (){var G__213519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__213520 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213519,G__213520) : tailrecursion.hoplon.markdown.code_node.call(null,G__213519,G__213520));
})()," and ",(function (){var G__213521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nth"], null);
var G__213522 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213521,G__213522) : tailrecursion.hoplon.markdown.code_node.call(null,G__213521,G__213522));
})()," which give you exactly what you",(function (){var G__213523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__213524 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__213523,G__213524) : tailrecursion.hoplon.markdown.simple_node.call(null,G__213523,G__213524));
})(),"d expect, the second and the nth values in the list. So,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__213501,G__213502) : tailrecursion.hoplon.markdown.para_node.call(null,G__213501,G__213502));
})(),(function (){var G__213569 = (function (){var G__213570 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__213571 = (function (){var G__213572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__213573 = "(";
var G__213574 = (function (){var G__213592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213593 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213592,G__213593) : tailrecursion.hoplon.span.call(null,G__213592,G__213593));
})();
var G__213575 = (function (){var G__213594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213595 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213594,G__213595) : tailrecursion.hoplon.span.call(null,G__213594,G__213595));
})();
var G__213576 = " (";
var G__213577 = (function (){var G__213596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213597 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213596,G__213597) : tailrecursion.hoplon.span.call(null,G__213596,G__213597));
})();
var G__213578 = (function (){var G__213598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213599 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213598,G__213599) : tailrecursion.hoplon.span.call(null,G__213598,G__213599));
})();
var G__213579 = " ";
var G__213580 = (function (){var G__213600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213601 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213600,G__213601) : tailrecursion.hoplon.span.call(null,G__213600,G__213601));
})();
var G__213581 = "))\n(";
var G__213582 = (function (){var G__213602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213603 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213602,G__213603) : tailrecursion.hoplon.span.call(null,G__213602,G__213603));
})();
var G__213583 = (function (){var G__213604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213605 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213604,G__213605) : tailrecursion.hoplon.span.call(null,G__213604,G__213605));
})();
var G__213584 = ")\n";
var G__213585 = (function (){var G__213606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213607 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213606,G__213607) : tailrecursion.hoplon.span.call(null,G__213606,G__213607));
})();
var G__213586 = "\n(";
var G__213587 = (function (){var G__213608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213609 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213608,G__213609) : tailrecursion.hoplon.span.call(null,G__213608,G__213609));
})();
var G__213588 = (function (){var G__213610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213611 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213610,G__213611) : tailrecursion.hoplon.span.call(null,G__213610,G__213611));
})();
var G__213589 = ")\n";
var G__213590 = (function (){var G__213612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213613 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213612,G__213613) : tailrecursion.hoplon.span.call(null,G__213612,G__213613));
})();
var G__213591 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20(G__213572,G__213573,G__213574,G__213575,G__213576,G__213577,G__213578,G__213579,G__213580,G__213581,G__213582,G__213583,G__213584,G__213585,G__213586,G__213587,G__213588,G__213589,G__213590,G__213591) : tailrecursion.hoplon.pre.call(null,G__213572,G__213573,G__213574,G__213575,G__213576,G__213577,G__213578,G__213579,G__213580,G__213581,G__213582,G__213583,G__213584,G__213585,G__213586,G__213587,G__213588,G__213589,G__213590,G__213591));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__213570,G__213571) : tailrecursion.hoplon.div.call(null,G__213570,G__213571));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__213569) : tailrecursion.hoplon.div.call(null,G__213569));
})(),(function (){var G__213614 = cljs.core.PersistentArrayMap.EMPTY;
var G__213615 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Notice that a list is a data object that can be given a name and manipulated, just like a primitive data object. Moreover, ",(function (){var G__213616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__213617 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213616,G__213617) : tailrecursion.hoplon.markdown.code_node.call(null,G__213616,G__213617));
})()," can be used to form pairs whose elements are pairs, and so on:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__213614,G__213615) : tailrecursion.hoplon.markdown.para_node.call(null,G__213614,G__213615));
})(),(function (){var G__213720 = (function (){var G__213721 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__213722 = (function (){var G__213723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__213724 = "(";
var G__213725 = (function (){var G__213769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213770 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213769,G__213770) : tailrecursion.hoplon.span.call(null,G__213769,G__213770));
})();
var G__213726 = (function (){var G__213771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213772 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213771,G__213772) : tailrecursion.hoplon.span.call(null,G__213771,G__213772));
})();
var G__213727 = " (";
var G__213728 = (function (){var G__213773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213774 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213773,G__213774) : tailrecursion.hoplon.span.call(null,G__213773,G__213774));
})();
var G__213729 = (function (){var G__213775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213776 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213775,G__213776) : tailrecursion.hoplon.span.call(null,G__213775,G__213776));
})();
var G__213730 = " (";
var G__213731 = (function (){var G__213777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213778 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213777,G__213778) : tailrecursion.hoplon.span.call(null,G__213777,G__213778));
})();
var G__213732 = (function (){var G__213779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213780 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213779,G__213780) : tailrecursion.hoplon.span.call(null,G__213779,G__213780));
})();
var G__213733 = " ";
var G__213734 = (function (){var G__213781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213782 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213781,G__213782) : tailrecursion.hoplon.span.call(null,G__213781,G__213782));
})();
var G__213735 = ")))\n(";
var G__213736 = (function (){var G__213783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213784 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213783,G__213784) : tailrecursion.hoplon.span.call(null,G__213783,G__213784));
})();
var G__213737 = (function (){var G__213785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213786 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213785,G__213786) : tailrecursion.hoplon.span.call(null,G__213785,G__213786));
})();
var G__213738 = " (";
var G__213739 = (function (){var G__213787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213788 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213787,G__213788) : tailrecursion.hoplon.span.call(null,G__213787,G__213788));
})();
var G__213740 = (function (){var G__213789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213790 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213789,G__213790) : tailrecursion.hoplon.span.call(null,G__213789,G__213790));
})();
var G__213741 = " (";
var G__213742 = (function (){var G__213791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213792 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213791,G__213792) : tailrecursion.hoplon.span.call(null,G__213791,G__213792));
})();
var G__213743 = (function (){var G__213793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213794 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213793,G__213794) : tailrecursion.hoplon.span.call(null,G__213793,G__213794));
})();
var G__213744 = " ";
var G__213745 = (function (){var G__213795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213796 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213795,G__213796) : tailrecursion.hoplon.span.call(null,G__213795,G__213796));
})();
var G__213746 = ")))\n(";
var G__213747 = (function (){var G__213797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213798 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213797,G__213798) : tailrecursion.hoplon.span.call(null,G__213797,G__213798));
})();
var G__213748 = (function (){var G__213799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213800 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213799,G__213800) : tailrecursion.hoplon.span.call(null,G__213799,G__213800));
})();
var G__213749 = " (";
var G__213750 = (function (){var G__213801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213802 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213801,G__213802) : tailrecursion.hoplon.span.call(null,G__213801,G__213802));
})();
var G__213751 = (function (){var G__213803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213804 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213803,G__213804) : tailrecursion.hoplon.span.call(null,G__213803,G__213804));
})();
var G__213752 = " ";
var G__213753 = (function (){var G__213805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213806 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213805,G__213806) : tailrecursion.hoplon.span.call(null,G__213805,G__213806));
})();
var G__213754 = "))\n\n(";
var G__213755 = (function (){var G__213807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213808 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213807,G__213808) : tailrecursion.hoplon.span.call(null,G__213807,G__213808));
})();
var G__213756 = "(";
var G__213757 = (function (){var G__213809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213810 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213809,G__213810) : tailrecursion.hoplon.span.call(null,G__213809,G__213810));
})();
var G__213758 = (function (){var G__213811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213812 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213811,G__213812) : tailrecursion.hoplon.span.call(null,G__213811,G__213812));
})();
var G__213759 = "))\n";
var G__213760 = (function (){var G__213813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213814 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213813,G__213814) : tailrecursion.hoplon.span.call(null,G__213813,G__213814));
})();
var G__213761 = "\n(";
var G__213762 = (function (){var G__213815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213816 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213815,G__213816) : tailrecursion.hoplon.span.call(null,G__213815,G__213816));
})();
var G__213763 = "(";
var G__213764 = (function (){var G__213817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213818 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213817,G__213818) : tailrecursion.hoplon.span.call(null,G__213817,G__213818));
})();
var G__213765 = (function (){var G__213819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213820 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213819,G__213820) : tailrecursion.hoplon.span.call(null,G__213819,G__213820));
})();
var G__213766 = "))\n";
var G__213767 = (function (){var G__213821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213822 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213821,G__213822) : tailrecursion.hoplon.span.call(null,G__213821,G__213822));
})();
var G__213768 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__213723,G__213724,G__213725,G__213726,G__213727,G__213728,G__213729,G__213730,G__213731,G__213732,G__213733,G__213734,G__213735,G__213736,G__213737,G__213738,G__213739,G__213740,G__213741,G__213742,G__213743,G__213744,G__213745,G__213746,G__213747,G__213748,G__213749,G__213750,G__213751,G__213752,G__213753,G__213754,G__213755,G__213756,G__213757,G__213758,G__213759,G__213760,G__213761,G__213762,G__213763,G__213764,G__213765,G__213766,G__213767,G__213768) : tailrecursion.hoplon.pre.call(null,G__213723,G__213724,G__213725,G__213726,G__213727,G__213728,G__213729,G__213730,G__213731,G__213732,G__213733,G__213734,G__213735,G__213736,G__213737,G__213738,G__213739,G__213740,G__213741,G__213742,G__213743,G__213744,G__213745,G__213746,G__213747,G__213748,G__213749,G__213750,G__213751,G__213752,G__213753,G__213754,G__213755,G__213756,G__213757,G__213758,G__213759,G__213760,G__213761,G__213762,G__213763,G__213764,G__213765,G__213766,G__213767,G__213768));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__213721,G__213722) : tailrecursion.hoplon.div.call(null,G__213721,G__213722));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__213720) : tailrecursion.hoplon.div.call(null,G__213720));
})(),(function (){var G__213823 = cljs.core.PersistentArrayMap.EMPTY;
var G__213824 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/sect/2/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.2"], null)], 0))," we will see how this ability to combine pairs means that pairs can be used as general-purpose building blocks to create all sorts of complex data structures. The single compound-data primitive ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pair"], null)], 0)),", implemented in Scheme by the procedures ",(function (){var G__213825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213826 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213825,G__213826) : tailrecursion.hoplon.markdown.code_node.call(null,G__213825,G__213826));
})(),", ",(function (){var G__213827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__213828 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213827,G__213828) : tailrecursion.hoplon.markdown.code_node.call(null,G__213827,G__213828));
})(),", and ",(function (){var G__213829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__213830 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213829,G__213830) : tailrecursion.hoplon.markdown.code_node.call(null,G__213829,G__213830));
})(),", is the only glue we need. Data objects constructed from pairs are called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["list-structured"], null)], 0))," data. In fact, we will explore how lists are acutally implemented in Clojure and we will see that it is very similar to Scheme in that respect. For now, let",(function (){var G__213831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__213832 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__213831,G__213832) : tailrecursion.hoplon.markdown.simple_node.call(null,G__213831,G__213832));
})(),"s pretend like our ",(function (){var G__213833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__213834 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213833,G__213834) : tailrecursion.hoplon.markdown.code_node.call(null,G__213833,G__213834));
})(),"s are really pairs (for the purposes of learning the lessons meant to be learned in the following sections)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__213823,G__213824) : tailrecursion.hoplon.markdown.para_node.call(null,G__213823,G__213824));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_213437;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_213436;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_213435;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_213434;
}})()], 0));
var G__212494 = "";
var G__212495 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Representing Rational Numbers"], null),(function (){var _STAR_references_STAR_213835 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_213836 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_213837 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_213838 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__213839 = cljs.core.PersistentArrayMap.EMPTY;
var G__213840 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Pairs offer a natural way to complete the rational-number system. Simply represent a rational number as a pair of two integers: a numerator and a denominator. Then ",(function (){var G__213841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__213842 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213841,G__213842) : tailrecursion.hoplon.markdown.code_node.call(null,G__213841,G__213842));
})(),", ",(function (){var G__213843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__213844 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213843,G__213844) : tailrecursion.hoplon.markdown.code_node.call(null,G__213843,G__213844));
})(),", and ",(function (){var G__213845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__213846 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213845,G__213846) : tailrecursion.hoplon.markdown.code_node.call(null,G__213845,G__213846));
})()," are readily implemented as follows:",(function (){var G__213847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__213848 = cljs.core.PersistentVector.fromArray(["Another way to define the selectors and constructor is ",(function (){var G__213849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(define make-rat cons)"], null);
var G__213850 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213849,G__213850) : tailrecursion.hoplon.markdown.code_node.call(null,G__213849,G__213850));
})()," ",(function (){var G__213851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(define numer car)"], null);
var G__213852 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213851,G__213852) : tailrecursion.hoplon.markdown.code_node.call(null,G__213851,G__213852));
})()," ",(function (){var G__213853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(define denom cdr)"], null);
var G__213854 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213853,G__213854) : tailrecursion.hoplon.markdown.code_node.call(null,G__213853,G__213854));
})()," The first definition associates the name ",(function (){var G__213855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__213856 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213855,G__213856) : tailrecursion.hoplon.markdown.code_node.call(null,G__213855,G__213856));
})()," with the value of the expression ",(function (){var G__213857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213858 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213857,G__213858) : tailrecursion.hoplon.markdown.code_node.call(null,G__213857,G__213858));
})(),", which is the primitive procedure that constructs pairs. Thus ",(function (){var G__213859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__213860 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213859,G__213860) : tailrecursion.hoplon.markdown.code_node.call(null,G__213859,G__213860));
})()," and ",(function (){var G__213861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213862 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213861,G__213862) : tailrecursion.hoplon.markdown.code_node.call(null,G__213861,G__213862));
})()," are names for the same primitive constructor. Defining selectors and constructors this way is efficient: Instead of ",(function (){var G__213863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__213864 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213863,G__213864) : tailrecursion.hoplon.markdown.code_node.call(null,G__213863,G__213864));
})()," ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["calling"], null)], 0))," ",(function (){var G__213865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213866 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213865,G__213866) : tailrecursion.hoplon.markdown.code_node.call(null,G__213865,G__213866));
})(),", ",(function (){var G__213867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__213868 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213867,G__213868) : tailrecursion.hoplon.markdown.code_node.call(null,G__213867,G__213868));
})()," ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["is"], null)], 0))," ",(function (){var G__213869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213870 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213869,G__213870) : tailrecursion.hoplon.markdown.code_node.call(null,G__213869,G__213870));
})(),", so there is only one procedure called, not two, when ",(function (){var G__213871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__213872 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213871,G__213872) : tailrecursion.hoplon.markdown.code_node.call(null,G__213871,G__213872));
})()," is called. On the other hand, doing this defeats debugging aids that trace procedure calls or put breakpoints on procedure calls: You may want to watch ",(function (){var G__213873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__213874 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213873,G__213874) : tailrecursion.hoplon.markdown.code_node.call(null,G__213873,G__213874));
})()," being called, but you certainly don not want to watch every call to ",(function (){var G__213875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213876 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213875,G__213876) : tailrecursion.hoplon.markdown.code_node.call(null,G__213875,G__213876));
})(),"."], true);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213847,G__213848) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213847,G__213848));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__213839,G__213840) : tailrecursion.hoplon.markdown.para_node.call(null,G__213839,G__213840));
})(),(function (){var G__213948 = (function (){var G__213949 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__213950 = (function (){var G__213951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__213952 = "(";
var G__213953 = (function (){var G__213986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213987 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213986,G__213987) : tailrecursion.hoplon.span.call(null,G__213986,G__213987));
})();
var G__213954 = "(";
var G__213955 = (function (){var G__213988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213989 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213988,G__213989) : tailrecursion.hoplon.span.call(null,G__213988,G__213989));
})();
var G__213956 = " ";
var G__213957 = (function (){var G__213990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213991 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213990,G__213991) : tailrecursion.hoplon.span.call(null,G__213990,G__213991));
})();
var G__213958 = " ";
var G__213959 = (function (){var G__213992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213993 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213992,G__213993) : tailrecursion.hoplon.span.call(null,G__213992,G__213993));
})();
var G__213960 = ") (";
var G__213961 = (function (){var G__213994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213995 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213994,G__213995) : tailrecursion.hoplon.span.call(null,G__213994,G__213995));
})();
var G__213962 = (function (){var G__213996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213997 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213996,G__213997) : tailrecursion.hoplon.span.call(null,G__213996,G__213997));
})();
var G__213963 = " ";
var G__213964 = (function (){var G__213998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213999 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213998,G__213999) : tailrecursion.hoplon.span.call(null,G__213998,G__213999));
})();
var G__213965 = "))\n(";
var G__213966 = (function (){var G__214000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214001 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214000,G__214001) : tailrecursion.hoplon.span.call(null,G__214000,G__214001));
})();
var G__213967 = "(";
var G__213968 = (function (){var G__214002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214003 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214002,G__214003) : tailrecursion.hoplon.span.call(null,G__214002,G__214003));
})();
var G__213969 = " ";
var G__213970 = (function (){var G__214004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214005 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214004,G__214005) : tailrecursion.hoplon.span.call(null,G__214004,G__214005));
})();
var G__213971 = ") (";
var G__213972 = (function (){var G__214006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214007 = "first";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214006,G__214007) : tailrecursion.hoplon.span.call(null,G__214006,G__214007));
})();
var G__213973 = " ";
var G__213974 = (function (){var G__214008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214009 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214008,G__214009) : tailrecursion.hoplon.span.call(null,G__214008,G__214009));
})();
var G__213975 = "))\n(";
var G__213976 = (function (){var G__214010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214011 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214010,G__214011) : tailrecursion.hoplon.span.call(null,G__214010,G__214011));
})();
var G__213977 = "(";
var G__213978 = (function (){var G__214012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214013 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214012,G__214013) : tailrecursion.hoplon.span.call(null,G__214012,G__214013));
})();
var G__213979 = " ";
var G__213980 = (function (){var G__214014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214015 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214014,G__214015) : tailrecursion.hoplon.span.call(null,G__214014,G__214015));
})();
var G__213981 = ") (";
var G__213982 = (function (){var G__214016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214017 = "second";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214016,G__214017) : tailrecursion.hoplon.span.call(null,G__214016,G__214017));
})();
var G__213983 = " ";
var G__213984 = (function (){var G__214018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214019 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214018,G__214019) : tailrecursion.hoplon.span.call(null,G__214018,G__214019));
})();
var G__213985 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35(G__213951,G__213952,G__213953,G__213954,G__213955,G__213956,G__213957,G__213958,G__213959,G__213960,G__213961,G__213962,G__213963,G__213964,G__213965,G__213966,G__213967,G__213968,G__213969,G__213970,G__213971,G__213972,G__213973,G__213974,G__213975,G__213976,G__213977,G__213978,G__213979,G__213980,G__213981,G__213982,G__213983,G__213984,G__213985) : tailrecursion.hoplon.pre.call(null,G__213951,G__213952,G__213953,G__213954,G__213955,G__213956,G__213957,G__213958,G__213959,G__213960,G__213961,G__213962,G__213963,G__213964,G__213965,G__213966,G__213967,G__213968,G__213969,G__213970,G__213971,G__213972,G__213973,G__213974,G__213975,G__213976,G__213977,G__213978,G__213979,G__213980,G__213981,G__213982,G__213983,G__213984,G__213985));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__213949,G__213950) : tailrecursion.hoplon.div.call(null,G__213949,G__213950));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__213948) : tailrecursion.hoplon.div.call(null,G__213948));
})(),(function (){var G__214020 = cljs.core.PersistentArrayMap.EMPTY;
var G__214021 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Also, in order to display the results of our computations, we can print rational numbers by printing the numerator, a slash, and the denominator.",(function (){var G__214022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__214023 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note that ",(function (){var G__214024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"print"], null);
var G__214025 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214024,G__214025) : tailrecursion.hoplon.markdown.code_node.call(null,G__214024,G__214025));
})()," and ",(function (){var G__214026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"println"], null);
var G__214027 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214026,G__214027) : tailrecursion.hoplon.markdown.code_node.call(null,G__214026,G__214027));
})()," (there are others but we need not go into them right now) return values. Being as how the values are not currently of use to us, we show only what these functions print and not what the interpreter prints as the returned values."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__214022,G__214023) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__214022,G__214023));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__214020,G__214021) : tailrecursion.hoplon.markdown.para_node.call(null,G__214020,G__214021));
})(),(function (){var G__214067 = (function (){var G__214068 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__214069 = (function (){var G__214070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__214071 = "(";
var G__214072 = (function (){var G__214089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214090 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214089,G__214090) : tailrecursion.hoplon.span.call(null,G__214089,G__214090));
})();
var G__214073 = (function (){var G__214091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214092 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214091,G__214092) : tailrecursion.hoplon.span.call(null,G__214091,G__214092));
})();
var G__214074 = " [";
var G__214075 = (function (){var G__214093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214094 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214093,G__214094) : tailrecursion.hoplon.span.call(null,G__214093,G__214094));
})();
var G__214076 = "]\n  (";
var G__214077 = (function (){var G__214095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214096 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214095,G__214096) : tailrecursion.hoplon.span.call(null,G__214095,G__214096));
})();
var G__214078 = "(";
var G__214079 = (function (){var G__214097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214098 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214097,G__214098) : tailrecursion.hoplon.span.call(null,G__214097,G__214098));
})();
var G__214080 = " ";
var G__214081 = (function (){var G__214099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214100 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214099,G__214100) : tailrecursion.hoplon.span.call(null,G__214099,G__214100));
})();
var G__214082 = ") ";
var G__214083 = (function (){var G__214101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__214102 = "\"/\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214101,G__214102) : tailrecursion.hoplon.span.call(null,G__214101,G__214102));
})();
var G__214084 = " (";
var G__214085 = (function (){var G__214103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214104 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214103,G__214104) : tailrecursion.hoplon.span.call(null,G__214103,G__214104));
})();
var G__214086 = " ";
var G__214087 = (function (){var G__214105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214106 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214105,G__214106) : tailrecursion.hoplon.span.call(null,G__214105,G__214106));
})();
var G__214088 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__214070,G__214071,G__214072,G__214073,G__214074,G__214075,G__214076,G__214077,G__214078,G__214079,G__214080,G__214081,G__214082,G__214083,G__214084,G__214085,G__214086,G__214087,G__214088) : tailrecursion.hoplon.pre.call(null,G__214070,G__214071,G__214072,G__214073,G__214074,G__214075,G__214076,G__214077,G__214078,G__214079,G__214080,G__214081,G__214082,G__214083,G__214084,G__214085,G__214086,G__214087,G__214088));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__214068,G__214069) : tailrecursion.hoplon.div.call(null,G__214068,G__214069));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__214067) : tailrecursion.hoplon.div.call(null,G__214067));
})(),(function (){var G__214107 = cljs.core.PersistentArrayMap.EMPTY;
var G__214108 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note that ",(function (){var G__214109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"println"], null);
var G__214110 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214109,G__214110) : tailrecursion.hoplon.markdown.code_node.call(null,G__214109,G__214110));
})()," is a function that takes any number of arguments, converts them to a string, prints them to the screen followed by a new line, then it returns the value ",(function (){var G__214111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nil"], null);
var G__214112 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214111,G__214112) : tailrecursion.hoplon.markdown.code_node.call(null,G__214111,G__214112));
})()," (remember, everything has a value in Lisp!)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__214107,G__214108) : tailrecursion.hoplon.markdown.para_node.call(null,G__214107,G__214108));
})(),(function (){var G__214113 = cljs.core.PersistentArrayMap.EMPTY;
var G__214114 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we can try our rational-number procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__214113,G__214114) : tailrecursion.hoplon.markdown.para_node.call(null,G__214113,G__214114));
})(),(function (){var G__214241 = (function (){var G__214242 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__214243 = (function (){var G__214244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__214245 = "(";
var G__214246 = (function (){var G__214304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214305 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214304,G__214305) : tailrecursion.hoplon.span.call(null,G__214304,G__214305));
})();
var G__214247 = (function (){var G__214306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214307 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214306,G__214307) : tailrecursion.hoplon.span.call(null,G__214306,G__214307));
})();
var G__214248 = " (";
var G__214249 = (function (){var G__214308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214309 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214308,G__214309) : tailrecursion.hoplon.span.call(null,G__214308,G__214309));
})();
var G__214250 = " ";
var G__214251 = (function (){var G__214310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214311 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214310,G__214311) : tailrecursion.hoplon.span.call(null,G__214310,G__214311));
})();
var G__214252 = " ";
var G__214253 = (function (){var G__214312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214313 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214312,G__214313) : tailrecursion.hoplon.span.call(null,G__214312,G__214313));
})();
var G__214254 = "))\n(";
var G__214255 = (function (){var G__214314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214315 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214314,G__214315) : tailrecursion.hoplon.span.call(null,G__214314,G__214315));
})();
var G__214256 = " ";
var G__214257 = (function (){var G__214316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214317 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214316,G__214317) : tailrecursion.hoplon.span.call(null,G__214316,G__214317));
})();
var G__214258 = ")\n";
var G__214259 = (function (){var G__214318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214319 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214318,G__214319) : tailrecursion.hoplon.span.call(null,G__214318,G__214319));
})();
var G__214260 = (function (){var G__214320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214321 = "/2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214320,G__214321) : tailrecursion.hoplon.span.call(null,G__214320,G__214321));
})();
var G__214261 = "\n\n(";
var G__214262 = (function (){var G__214322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214323 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214322,G__214323) : tailrecursion.hoplon.span.call(null,G__214322,G__214323));
})();
var G__214263 = (function (){var G__214324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214325 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214324,G__214325) : tailrecursion.hoplon.span.call(null,G__214324,G__214325));
})();
var G__214264 = " (";
var G__214265 = (function (){var G__214326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214327 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214326,G__214327) : tailrecursion.hoplon.span.call(null,G__214326,G__214327));
})();
var G__214266 = " ";
var G__214267 = (function (){var G__214328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214329 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214328,G__214329) : tailrecursion.hoplon.span.call(null,G__214328,G__214329));
})();
var G__214268 = " ";
var G__214269 = (function (){var G__214330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214331 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214330,G__214331) : tailrecursion.hoplon.span.call(null,G__214330,G__214331));
})();
var G__214270 = "))\n(";
var G__214271 = (function (){var G__214332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214333 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214332,G__214333) : tailrecursion.hoplon.span.call(null,G__214332,G__214333));
})();
var G__214272 = " (";
var G__214273 = (function (){var G__214334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214335 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214334,G__214335) : tailrecursion.hoplon.span.call(null,G__214334,G__214335));
})();
var G__214274 = " ";
var G__214275 = (function (){var G__214336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214337 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214336,G__214337) : tailrecursion.hoplon.span.call(null,G__214336,G__214337));
})();
var G__214276 = " ";
var G__214277 = (function (){var G__214338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214339 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214338,G__214339) : tailrecursion.hoplon.span.call(null,G__214338,G__214339));
})();
var G__214278 = "))\n";
var G__214279 = (function (){var G__214340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214341 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214340,G__214341) : tailrecursion.hoplon.span.call(null,G__214340,G__214341));
})();
var G__214280 = (function (){var G__214342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214343 = "/6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214342,G__214343) : tailrecursion.hoplon.span.call(null,G__214342,G__214343));
})();
var G__214281 = "\n\n(";
var G__214282 = (function (){var G__214344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214345 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214344,G__214345) : tailrecursion.hoplon.span.call(null,G__214344,G__214345));
})();
var G__214283 = " (";
var G__214284 = (function (){var G__214346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214347 = "mul-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214346,G__214347) : tailrecursion.hoplon.span.call(null,G__214346,G__214347));
})();
var G__214285 = " ";
var G__214286 = (function (){var G__214348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214349 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214348,G__214349) : tailrecursion.hoplon.span.call(null,G__214348,G__214349));
})();
var G__214287 = " ";
var G__214288 = (function (){var G__214350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214351 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214350,G__214351) : tailrecursion.hoplon.span.call(null,G__214350,G__214351));
})();
var G__214289 = "))\n";
var G__214290 = (function (){var G__214352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214353 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214352,G__214353) : tailrecursion.hoplon.span.call(null,G__214352,G__214353));
})();
var G__214291 = (function (){var G__214354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214355 = "/6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214354,G__214355) : tailrecursion.hoplon.span.call(null,G__214354,G__214355));
})();
var G__214292 = "\n\n(";
var G__214293 = (function (){var G__214356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214357 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214356,G__214357) : tailrecursion.hoplon.span.call(null,G__214356,G__214357));
})();
var G__214294 = " (";
var G__214295 = (function (){var G__214358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214359 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214358,G__214359) : tailrecursion.hoplon.span.call(null,G__214358,G__214359));
})();
var G__214296 = " ";
var G__214297 = (function (){var G__214360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214361 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214360,G__214361) : tailrecursion.hoplon.span.call(null,G__214360,G__214361));
})();
var G__214298 = " ";
var G__214299 = (function (){var G__214362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214363 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214362,G__214363) : tailrecursion.hoplon.span.call(null,G__214362,G__214363));
})();
var G__214300 = "))\n";
var G__214301 = (function (){var G__214364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214365 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214364,G__214365) : tailrecursion.hoplon.span.call(null,G__214364,G__214365));
})();
var G__214302 = (function (){var G__214366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214367 = "/9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214366,G__214367) : tailrecursion.hoplon.span.call(null,G__214366,G__214367));
})();
var G__214303 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60(G__214244,G__214245,G__214246,G__214247,G__214248,G__214249,G__214250,G__214251,G__214252,G__214253,G__214254,G__214255,G__214256,G__214257,G__214258,G__214259,G__214260,G__214261,G__214262,G__214263,G__214264,G__214265,G__214266,G__214267,G__214268,G__214269,G__214270,G__214271,G__214272,G__214273,G__214274,G__214275,G__214276,G__214277,G__214278,G__214279,G__214280,G__214281,G__214282,G__214283,G__214284,G__214285,G__214286,G__214287,G__214288,G__214289,G__214290,G__214291,G__214292,G__214293,G__214294,G__214295,G__214296,G__214297,G__214298,G__214299,G__214300,G__214301,G__214302,G__214303) : tailrecursion.hoplon.pre.call(null,G__214244,G__214245,G__214246,G__214247,G__214248,G__214249,G__214250,G__214251,G__214252,G__214253,G__214254,G__214255,G__214256,G__214257,G__214258,G__214259,G__214260,G__214261,G__214262,G__214263,G__214264,G__214265,G__214266,G__214267,G__214268,G__214269,G__214270,G__214271,G__214272,G__214273,G__214274,G__214275,G__214276,G__214277,G__214278,G__214279,G__214280,G__214281,G__214282,G__214283,G__214284,G__214285,G__214286,G__214287,G__214288,G__214289,G__214290,G__214291,G__214292,G__214293,G__214294,G__214295,G__214296,G__214297,G__214298,G__214299,G__214300,G__214301,G__214302,G__214303));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__214242,G__214243) : tailrecursion.hoplon.div.call(null,G__214242,G__214243));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__214241) : tailrecursion.hoplon.div.call(null,G__214241));
})(),(function (){var G__214368 = cljs.core.PersistentArrayMap.EMPTY;
var G__214369 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As the final example shows, our rational-number implementation does not reduce rational numbers to lowest terms. We can rememdy this by changing ",(function (){var G__214370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__214371 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214370,G__214371) : tailrecursion.hoplon.markdown.code_node.call(null,G__214370,G__214371));
})(),". If we have a ",(function (){var G__214372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__214373 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214372,G__214373) : tailrecursion.hoplon.markdown.code_node.call(null,G__214372,G__214373));
})()," procedure like the one used in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/2/sub/5/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.5"], null)], 0))," that produces the greatest common divisor of two integers, we can use ",(function (){var G__214374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__214375 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214374,G__214375) : tailrecursion.hoplon.markdown.code_node.call(null,G__214374,G__214375));
})()," to reduce the numerator and the denominator to lowest terms before constructing the pair:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__214368,G__214369) : tailrecursion.hoplon.markdown.para_node.call(null,G__214368,G__214369));
})(),(function (){var G__214441 = (function (){var G__214442 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__214443 = (function (){var G__214444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__214445 = "(";
var G__214446 = (function (){var G__214475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214476 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214475,G__214476) : tailrecursion.hoplon.span.call(null,G__214475,G__214476));
})();
var G__214447 = (function (){var G__214477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214478 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214477,G__214478) : tailrecursion.hoplon.span.call(null,G__214477,G__214478));
})();
var G__214448 = " [";
var G__214449 = (function (){var G__214479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214480 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214479,G__214480) : tailrecursion.hoplon.span.call(null,G__214479,G__214480));
})();
var G__214450 = " ";
var G__214451 = (function (){var G__214481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214482 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214481,G__214482) : tailrecursion.hoplon.span.call(null,G__214481,G__214482));
})();
var G__214452 = "]\n  (";
var G__214453 = (function (){var G__214483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214484 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214483,G__214484) : tailrecursion.hoplon.span.call(null,G__214483,G__214484));
})();
var G__214454 = "[";
var G__214455 = (function (){var G__214485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214486 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214485,G__214486) : tailrecursion.hoplon.span.call(null,G__214485,G__214486));
})();
var G__214456 = " (";
var G__214457 = (function (){var G__214487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214488 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214487,G__214488) : tailrecursion.hoplon.span.call(null,G__214487,G__214488));
})();
var G__214458 = " ";
var G__214459 = (function (){var G__214489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214490 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214489,G__214490) : tailrecursion.hoplon.span.call(null,G__214489,G__214490));
})();
var G__214460 = " ";
var G__214461 = (function (){var G__214491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214492 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214491,G__214492) : tailrecursion.hoplon.span.call(null,G__214491,G__214492));
})();
var G__214462 = ")]\n    (";
var G__214463 = (function (){var G__214493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214494 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214493,G__214494) : tailrecursion.hoplon.span.call(null,G__214493,G__214494));
})();
var G__214464 = "(";
var G__214465 = (function (){var G__214495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214496 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214495,G__214496) : tailrecursion.hoplon.span.call(null,G__214495,G__214496));
})();
var G__214466 = (function (){var G__214497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214498 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214497,G__214498) : tailrecursion.hoplon.span.call(null,G__214497,G__214498));
})();
var G__214467 = " ";
var G__214468 = (function (){var G__214499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214500 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214499,G__214500) : tailrecursion.hoplon.span.call(null,G__214499,G__214500));
})();
var G__214469 = ") (";
var G__214470 = (function (){var G__214501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214502 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214501,G__214502) : tailrecursion.hoplon.span.call(null,G__214501,G__214502));
})();
var G__214471 = (function (){var G__214503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214504 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214503,G__214504) : tailrecursion.hoplon.span.call(null,G__214503,G__214504));
})();
var G__214472 = " ";
var G__214473 = (function (){var G__214505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214506 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214505,G__214506) : tailrecursion.hoplon.span.call(null,G__214505,G__214506));
})();
var G__214474 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__214444,G__214445,G__214446,G__214447,G__214448,G__214449,G__214450,G__214451,G__214452,G__214453,G__214454,G__214455,G__214456,G__214457,G__214458,G__214459,G__214460,G__214461,G__214462,G__214463,G__214464,G__214465,G__214466,G__214467,G__214468,G__214469,G__214470,G__214471,G__214472,G__214473,G__214474) : tailrecursion.hoplon.pre.call(null,G__214444,G__214445,G__214446,G__214447,G__214448,G__214449,G__214450,G__214451,G__214452,G__214453,G__214454,G__214455,G__214456,G__214457,G__214458,G__214459,G__214460,G__214461,G__214462,G__214463,G__214464,G__214465,G__214466,G__214467,G__214468,G__214469,G__214470,G__214471,G__214472,G__214473,G__214474));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__214442,G__214443) : tailrecursion.hoplon.div.call(null,G__214442,G__214443));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__214441) : tailrecursion.hoplon.div.call(null,G__214441));
})(),(function (){var G__214507 = cljs.core.PersistentArrayMap.EMPTY;
var G__214508 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we have,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__214507,G__214508) : tailrecursion.hoplon.markdown.para_node.call(null,G__214507,G__214508));
})(),(function (){var G__214536 = (function (){var G__214537 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__214538 = (function (){var G__214539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__214540 = "(";
var G__214541 = (function (){var G__214552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214553 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214552,G__214553) : tailrecursion.hoplon.span.call(null,G__214552,G__214553));
})();
var G__214542 = " (";
var G__214543 = (function (){var G__214554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214555 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214554,G__214555) : tailrecursion.hoplon.span.call(null,G__214554,G__214555));
})();
var G__214544 = " ";
var G__214545 = (function (){var G__214556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214557 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214556,G__214557) : tailrecursion.hoplon.span.call(null,G__214556,G__214557));
})();
var G__214546 = " ";
var G__214547 = (function (){var G__214558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214559 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214558,G__214559) : tailrecursion.hoplon.span.call(null,G__214558,G__214559));
})();
var G__214548 = "))\n";
var G__214549 = (function (){var G__214560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214561 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214560,G__214561) : tailrecursion.hoplon.span.call(null,G__214560,G__214561));
})();
var G__214550 = (function (){var G__214562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214563 = "/3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214562,G__214563) : tailrecursion.hoplon.span.call(null,G__214562,G__214563));
})();
var G__214551 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__214539,G__214540,G__214541,G__214542,G__214543,G__214544,G__214545,G__214546,G__214547,G__214548,G__214549,G__214550,G__214551) : tailrecursion.hoplon.pre.call(null,G__214539,G__214540,G__214541,G__214542,G__214543,G__214544,G__214545,G__214546,G__214547,G__214548,G__214549,G__214550,G__214551));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__214537,G__214538) : tailrecursion.hoplon.div.call(null,G__214537,G__214538));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__214536) : tailrecursion.hoplon.div.call(null,G__214536));
})(),(function (){var G__214564 = cljs.core.PersistentArrayMap.EMPTY;
var G__214565 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["as desired. This modification was accomplished by changing the constructor ",(function (){var G__214566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__214567 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214566,G__214567) : tailrecursion.hoplon.markdown.code_node.call(null,G__214566,G__214567));
})()," without changing any of the procedures (such as ",(function (){var G__214568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__214569 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214568,G__214569) : tailrecursion.hoplon.markdown.code_node.call(null,G__214568,G__214569));
})()," and ",(function (){var G__214570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mul-rat"], null);
var G__214571 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214570,G__214571) : tailrecursion.hoplon.markdown.code_node.call(null,G__214570,G__214571));
})(),") that implement the actual operations."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__214564,G__214565) : tailrecursion.hoplon.markdown.para_node.call(null,G__214564,G__214565));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_213838;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_213837;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_213836;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_213835;
}})()], 0));
var G__212496 = "";
var G__212497 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_214572 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_214573 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_214574 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_214575 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__214576 = cljs.core.PersistentArrayMap.EMPTY;
var G__214577 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a better version of ",(function (){var G__214578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__214579 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214578,G__214579) : tailrecursion.hoplon.markdown.code_node.call(null,G__214578,G__214579));
})()," that handles both positive and negative arguments. ",(function (){var G__214580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__214581 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214580,G__214581) : tailrecursion.hoplon.markdown.code_node.call(null,G__214580,G__214581));
})()," should normalize the sign so that if the rational number is positive, both the numerator and denominator are positive, and if the rational number is negative, only the numerator is negative."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__214576,G__214577) : tailrecursion.hoplon.markdown.para_node.call(null,G__214576,G__214577));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_214575;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_214574;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_214573;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_214572;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_214582 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_214583 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_214584 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_214585 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__214730 = (function (){var G__214731 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__214732 = (function (){var G__214733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__214734 = "(";
var G__214735 = (function (){var G__214803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214804 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214803,G__214804) : tailrecursion.hoplon.span.call(null,G__214803,G__214804));
})();
var G__214736 = (function (){var G__214805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214806 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214805,G__214806) : tailrecursion.hoplon.span.call(null,G__214805,G__214806));
})();
var G__214737 = " [";
var G__214738 = (function (){var G__214807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214808 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214807,G__214808) : tailrecursion.hoplon.span.call(null,G__214807,G__214808));
})();
var G__214739 = " ";
var G__214740 = (function (){var G__214809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214810 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214809,G__214810) : tailrecursion.hoplon.span.call(null,G__214809,G__214810));
})();
var G__214741 = "]\n  (";
var G__214742 = (function (){var G__214811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214812 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214811,G__214812) : tailrecursion.hoplon.span.call(null,G__214811,G__214812));
})();
var G__214743 = "[";
var G__214744 = (function (){var G__214813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214814 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214813,G__214814) : tailrecursion.hoplon.span.call(null,G__214813,G__214814));
})();
var G__214745 = " ";
var G__214746 = (function (){var G__214815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214816 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214815,G__214816) : tailrecursion.hoplon.span.call(null,G__214815,G__214816));
})();
var G__214747 = "(";
var G__214748 = (function (){var G__214817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214818 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214817,G__214818) : tailrecursion.hoplon.span.call(null,G__214817,G__214818));
})();
var G__214749 = "[";
var G__214750 = (function (){var G__214819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214820 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214819,G__214820) : tailrecursion.hoplon.span.call(null,G__214819,G__214820));
})();
var G__214751 = " (";
var G__214752 = (function (){var G__214821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214822 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214821,G__214822) : tailrecursion.hoplon.span.call(null,G__214821,G__214822));
})();
var G__214753 = " ";
var G__214754 = (function (){var G__214823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214824 = "%1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214823,G__214824) : tailrecursion.hoplon.span.call(null,G__214823,G__214824));
})();
var G__214755 = " ";
var G__214756 = (function (){var G__214825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214826 = "%2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214825,G__214826) : tailrecursion.hoplon.span.call(null,G__214825,G__214826));
})();
var G__214757 = ")]\n                (";
var G__214758 = (function (){var G__214827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214828 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214827,G__214828) : tailrecursion.hoplon.span.call(null,G__214827,G__214828));
})();
var G__214759 = "(";
var G__214760 = (function (){var G__214829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214830 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214829,G__214830) : tailrecursion.hoplon.span.call(null,G__214829,G__214830));
})();
var G__214761 = (function (){var G__214831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214832 = "%1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214831,G__214832) : tailrecursion.hoplon.span.call(null,G__214831,G__214832));
})();
var G__214762 = " ";
var G__214763 = (function (){var G__214833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214834 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214833,G__214834) : tailrecursion.hoplon.span.call(null,G__214833,G__214834));
})();
var G__214764 = ") (";
var G__214765 = (function (){var G__214835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214836 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214835,G__214836) : tailrecursion.hoplon.span.call(null,G__214835,G__214836));
})();
var G__214766 = (function (){var G__214837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214838 = "%2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214837,G__214838) : tailrecursion.hoplon.span.call(null,G__214837,G__214838));
})();
var G__214767 = " ";
var G__214768 = (function (){var G__214839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214840 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214839,G__214840) : tailrecursion.hoplon.span.call(null,G__214839,G__214840));
})();
var G__214769 = ")))]\n    (";
var G__214770 = (function (){var G__214841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214842 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214841,G__214842) : tailrecursion.hoplon.span.call(null,G__214841,G__214842));
})();
var G__214771 = "(";
var G__214772 = (function (){var G__214843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214844 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214843,G__214844) : tailrecursion.hoplon.span.call(null,G__214843,G__214844));
})();
var G__214773 = "(";
var G__214774 = (function (){var G__214845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214846 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214845,G__214846) : tailrecursion.hoplon.span.call(null,G__214845,G__214846));
})();
var G__214775 = (function (){var G__214847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214848 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214847,G__214848) : tailrecursion.hoplon.span.call(null,G__214847,G__214848));
})();
var G__214776 = " ";
var G__214777 = (function (){var G__214849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214850 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214849,G__214850) : tailrecursion.hoplon.span.call(null,G__214849,G__214850));
})();
var G__214778 = ") ";
var G__214779 = (function (){var G__214851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214852 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214851,G__214852) : tailrecursion.hoplon.span.call(null,G__214851,G__214852));
})();
var G__214780 = ")\n        (";
var G__214781 = (function (){var G__214853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214854 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214853,G__214854) : tailrecursion.hoplon.span.call(null,G__214853,G__214854));
})();
var G__214782 = " (";
var G__214783 = (function (){var G__214855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214856 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214855,G__214856) : tailrecursion.hoplon.span.call(null,G__214855,G__214856));
})();
var G__214784 = " ";
var G__214785 = (function (){var G__214857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214858 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214857,G__214858) : tailrecursion.hoplon.span.call(null,G__214857,G__214858));
})();
var G__214786 = ") (";
var G__214787 = (function (){var G__214859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214860 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214859,G__214860) : tailrecursion.hoplon.span.call(null,G__214859,G__214860));
})();
var G__214788 = " ";
var G__214789 = (function (){var G__214861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214862 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214861,G__214862) : tailrecursion.hoplon.span.call(null,G__214861,G__214862));
})();
var G__214790 = "))\n        (";
var G__214791 = (function (){var G__214863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214864 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214863,G__214864) : tailrecursion.hoplon.span.call(null,G__214863,G__214864));
})();
var G__214792 = " (";
var G__214793 = (function (){var G__214865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214866 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214865,G__214866) : tailrecursion.hoplon.span.call(null,G__214865,G__214866));
})();
var G__214794 = "(";
var G__214795 = (function (){var G__214867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214868 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214867,G__214868) : tailrecursion.hoplon.span.call(null,G__214867,G__214868));
})();
var G__214796 = " ";
var G__214797 = (function (){var G__214869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214870 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214869,G__214870) : tailrecursion.hoplon.span.call(null,G__214869,G__214870));
})();
var G__214798 = ")) (";
var G__214799 = (function (){var G__214871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214872 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214871,G__214872) : tailrecursion.hoplon.span.call(null,G__214871,G__214872));
})();
var G__214800 = " ";
var G__214801 = (function (){var G__214873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214874 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214873,G__214874) : tailrecursion.hoplon.span.call(null,G__214873,G__214874));
})();
var G__214802 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$70 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$70(G__214733,G__214734,G__214735,G__214736,G__214737,G__214738,G__214739,G__214740,G__214741,G__214742,G__214743,G__214744,G__214745,G__214746,G__214747,G__214748,G__214749,G__214750,G__214751,G__214752,G__214753,G__214754,G__214755,G__214756,G__214757,G__214758,G__214759,G__214760,G__214761,G__214762,G__214763,G__214764,G__214765,G__214766,G__214767,G__214768,G__214769,G__214770,G__214771,G__214772,G__214773,G__214774,G__214775,G__214776,G__214777,G__214778,G__214779,G__214780,G__214781,G__214782,G__214783,G__214784,G__214785,G__214786,G__214787,G__214788,G__214789,G__214790,G__214791,G__214792,G__214793,G__214794,G__214795,G__214796,G__214797,G__214798,G__214799,G__214800,G__214801,G__214802) : tailrecursion.hoplon.pre.call(null,G__214733,G__214734,G__214735,G__214736,G__214737,G__214738,G__214739,G__214740,G__214741,G__214742,G__214743,G__214744,G__214745,G__214746,G__214747,G__214748,G__214749,G__214750,G__214751,G__214752,G__214753,G__214754,G__214755,G__214756,G__214757,G__214758,G__214759,G__214760,G__214761,G__214762,G__214763,G__214764,G__214765,G__214766,G__214767,G__214768,G__214769,G__214770,G__214771,G__214772,G__214773,G__214774,G__214775,G__214776,G__214777,G__214778,G__214779,G__214780,G__214781,G__214782,G__214783,G__214784,G__214785,G__214786,G__214787,G__214788,G__214789,G__214790,G__214791,G__214792,G__214793,G__214794,G__214795,G__214796,G__214797,G__214798,G__214799,G__214800,G__214801,G__214802));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__214731,G__214732) : tailrecursion.hoplon.div.call(null,G__214731,G__214732));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__214730) : tailrecursion.hoplon.div.call(null,G__214730));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_214585;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_214584;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_214583;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_214582;
}})()], 0))], 0))], 0));
var G__212498 = "";
var G__212499 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Abstraction Barriers"], null),(function (){var _STAR_references_STAR_214875 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_214876 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_214877 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_214878 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__214879 = cljs.core.PersistentArrayMap.EMPTY;
var G__214880 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Before continuing with more examples of compound data and data abstraction, let us consider some of the issues raised by the rational-number example. We defined the rational-number operations in terms of a constructor ",(function (){var G__214881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__214882 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214881,G__214882) : tailrecursion.hoplon.markdown.code_node.call(null,G__214881,G__214882));
})()," and selectors ",(function (){var G__214883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__214884 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214883,G__214884) : tailrecursion.hoplon.markdown.code_node.call(null,G__214883,G__214884));
})()," and ",(function (){var G__214885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__214886 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214885,G__214886) : tailrecursion.hoplon.markdown.code_node.call(null,G__214885,G__214886));
})(),". In general, the underlying idea of data abstraction is to identify for each type of data object the basic set of operations in terms of which all manipulations op data objects of that type will be expressed, and then to use only those operations in manipulating the data."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__214879,G__214880) : tailrecursion.hoplon.markdown.para_node.call(null,G__214879,G__214880));
})(),(function (){var G__214887 = cljs.core.PersistentArrayMap.EMPTY;
var G__214888 = new cljs.core.PersistentVector(null, 27, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can envision the structure of the rational-number system as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/fig/1/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 2.1"], null)], 0)),". The horizontal lines represent ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstraction barriers"], null)], 0))," that isolate different ",(function (){var G__214889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__214890 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["levels"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__214889,G__214890) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__214889,G__214890));
})()," of the system. At each level, the barrier separates the programs (above) that use th edata abstraction from the programs (below) that implement the data abstraction. Programs that use rational numbers manipulate them solely in terms of the procedures supplied ",(function (){var G__214891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__214892 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["for public use"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__214891,G__214892) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__214891,G__214892));
})()," by the rational-number package: ",(function (){var G__214893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__214894 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214893,G__214894) : tailrecursion.hoplon.markdown.code_node.call(null,G__214893,G__214894));
})(),", ",(function (){var G__214895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-rat"], null);
var G__214896 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214895,G__214896) : tailrecursion.hoplon.markdown.code_node.call(null,G__214895,G__214896));
})(),", ",(function (){var G__214897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mul-rat"], null);
var G__214898 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214897,G__214898) : tailrecursion.hoplon.markdown.code_node.call(null,G__214897,G__214898));
})(),", ",(function (){var G__214899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"div-rat"], null);
var G__214900 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214899,G__214900) : tailrecursion.hoplon.markdown.code_node.call(null,G__214899,G__214900));
})(),", ",(function (){var G__214901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__214902 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214901,G__214902) : tailrecursion.hoplon.markdown.code_node.call(null,G__214901,G__214902));
})(),", and ",(function (){var G__214903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__214904 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214903,G__214904) : tailrecursion.hoplon.markdown.code_node.call(null,G__214903,G__214904));
})(),", which themselves are implemented in terms of lists. The details of how lists are implemented are irrelevant to the rest of the rational-number package so long as lists can be manipulated by the use of ",(function (){var G__214905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__214906 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214905,G__214906) : tailrecursion.hoplon.markdown.code_node.call(null,G__214905,G__214906));
})(),", ",(function (){var G__214907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__214908 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214907,G__214908) : tailrecursion.hoplon.markdown.code_node.call(null,G__214907,G__214908));
})(),", and ",(function (){var G__214909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__214910 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214909,G__214910) : tailrecursion.hoplon.markdown.code_node.call(null,G__214909,G__214910));
})(),". In effect, procedures at each level are the interfaces that define the abstraction barriers and connect the different levels."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__214887,G__214888) : tailrecursion.hoplon.markdown.para_node.call(null,G__214887,G__214888));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_214878;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_214877;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_214876;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_214875;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"Data-abstraction barriers in the rational-number package."], null)], 0)),"",(function (){var _STAR_references_STAR_214911 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_214912 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_214913 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_214914 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__214915 = cljs.core.PersistentArrayMap.EMPTY;
var G__214916 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This simple idea has many advantages. One advantage is that it makes programs much easier to maintain and modify. Any complex data structure can be represented in a variety of ways within primitive data structures provided by a programming language. Of course, the choice of representation influences the programs that operate on it; thus, if the representation were to be changed at some later time, all such programs might have to be modified accordingly. This task could be time-consuming and expensive in the vase of large programs unless the dependence on the representation were to be confined by design to a very few program modules."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__214915,G__214916) : tailrecursion.hoplon.markdown.para_node.call(null,G__214915,G__214916));
})(),(function (){var G__214917 = cljs.core.PersistentArrayMap.EMPTY;
var G__214918 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For example, an alternate way to address the problem of reducing rational numbers to lowest terms is to perform the reduction whenever we acces the parts of a rational number, rather than when we construct it. This leads to different constructor and selector procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__214917,G__214918) : tailrecursion.hoplon.markdown.para_node.call(null,G__214917,G__214918));
})(),(function (){var G__215053 = (function (){var G__215054 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__215055 = (function (){var G__215056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__215057 = "(";
var G__215058 = (function (){var G__215118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215119 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215118,G__215119) : tailrecursion.hoplon.span.call(null,G__215118,G__215119));
})();
var G__215059 = (function (){var G__215120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215121 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215120,G__215121) : tailrecursion.hoplon.span.call(null,G__215120,G__215121));
})();
var G__215060 = " [";
var G__215061 = (function (){var G__215122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215123 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215122,G__215123) : tailrecursion.hoplon.span.call(null,G__215122,G__215123));
})();
var G__215062 = " ";
var G__215063 = (function (){var G__215124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215125 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215124,G__215125) : tailrecursion.hoplon.span.call(null,G__215124,G__215125));
})();
var G__215064 = "]\n  (";
var G__215065 = (function (){var G__215126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215127 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215126,G__215127) : tailrecursion.hoplon.span.call(null,G__215126,G__215127));
})();
var G__215066 = (function (){var G__215128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215129 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215128,G__215129) : tailrecursion.hoplon.span.call(null,G__215128,G__215129));
})();
var G__215067 = " ";
var G__215068 = (function (){var G__215130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215131 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215130,G__215131) : tailrecursion.hoplon.span.call(null,G__215130,G__215131));
})();
var G__215069 = "))\n(";
var G__215070 = (function (){var G__215132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215133 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215132,G__215133) : tailrecursion.hoplon.span.call(null,G__215132,G__215133));
})();
var G__215071 = (function (){var G__215134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215135 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215134,G__215135) : tailrecursion.hoplon.span.call(null,G__215134,G__215135));
})();
var G__215072 = " [";
var G__215073 = (function (){var G__215136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215137 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215136,G__215137) : tailrecursion.hoplon.span.call(null,G__215136,G__215137));
})();
var G__215074 = "]\n  (";
var G__215075 = (function (){var G__215138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215139 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215138,G__215139) : tailrecursion.hoplon.span.call(null,G__215138,G__215139));
})();
var G__215076 = "[";
var G__215077 = (function (){var G__215140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215141 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215140,G__215141) : tailrecursion.hoplon.span.call(null,G__215140,G__215141));
})();
var G__215078 = " (";
var G__215079 = (function (){var G__215142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215143 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215142,G__215143) : tailrecursion.hoplon.span.call(null,G__215142,G__215143));
})();
var G__215080 = " (";
var G__215081 = (function (){var G__215144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215145 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215144,G__215145) : tailrecursion.hoplon.span.call(null,G__215144,G__215145));
})();
var G__215082 = (function (){var G__215146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215147 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215146,G__215147) : tailrecursion.hoplon.span.call(null,G__215146,G__215147));
})();
var G__215083 = ") (";
var G__215084 = (function (){var G__215148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215149 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215148,G__215149) : tailrecursion.hoplon.span.call(null,G__215148,G__215149));
})();
var G__215085 = (function (){var G__215150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215151 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215150,G__215151) : tailrecursion.hoplon.span.call(null,G__215150,G__215151));
})();
var G__215086 = "))]\n    (";
var G__215087 = (function (){var G__215152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215153 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215152,G__215153) : tailrecursion.hoplon.span.call(null,G__215152,G__215153));
})();
var G__215088 = "(";
var G__215089 = (function (){var G__215154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215155 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215154,G__215155) : tailrecursion.hoplon.span.call(null,G__215154,G__215155));
})();
var G__215090 = (function (){var G__215156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215157 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215156,G__215157) : tailrecursion.hoplon.span.call(null,G__215156,G__215157));
})();
var G__215091 = ") ";
var G__215092 = (function (){var G__215158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215159 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215158,G__215159) : tailrecursion.hoplon.span.call(null,G__215158,G__215159));
})();
var G__215093 = ")))\n(";
var G__215094 = (function (){var G__215160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215161 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215160,G__215161) : tailrecursion.hoplon.span.call(null,G__215160,G__215161));
})();
var G__215095 = (function (){var G__215162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215163 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215162,G__215163) : tailrecursion.hoplon.span.call(null,G__215162,G__215163));
})();
var G__215096 = " [";
var G__215097 = (function (){var G__215164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215165 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215164,G__215165) : tailrecursion.hoplon.span.call(null,G__215164,G__215165));
})();
var G__215098 = "]\n  (";
var G__215099 = (function (){var G__215166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215167 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215166,G__215167) : tailrecursion.hoplon.span.call(null,G__215166,G__215167));
})();
var G__215100 = "[";
var G__215101 = (function (){var G__215168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215169 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215168,G__215169) : tailrecursion.hoplon.span.call(null,G__215168,G__215169));
})();
var G__215102 = " (";
var G__215103 = (function (){var G__215170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215171 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215170,G__215171) : tailrecursion.hoplon.span.call(null,G__215170,G__215171));
})();
var G__215104 = " (";
var G__215105 = (function (){var G__215172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215173 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215172,G__215173) : tailrecursion.hoplon.span.call(null,G__215172,G__215173));
})();
var G__215106 = (function (){var G__215174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215175 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215174,G__215175) : tailrecursion.hoplon.span.call(null,G__215174,G__215175));
})();
var G__215107 = ") (";
var G__215108 = (function (){var G__215176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215177 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215176,G__215177) : tailrecursion.hoplon.span.call(null,G__215176,G__215177));
})();
var G__215109 = (function (){var G__215178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215179 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215178,G__215179) : tailrecursion.hoplon.span.call(null,G__215178,G__215179));
})();
var G__215110 = "))]\n    (";
var G__215111 = (function (){var G__215180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215181 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215180,G__215181) : tailrecursion.hoplon.span.call(null,G__215180,G__215181));
})();
var G__215112 = "(";
var G__215113 = (function (){var G__215182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215183 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215182,G__215183) : tailrecursion.hoplon.span.call(null,G__215182,G__215183));
})();
var G__215114 = (function (){var G__215184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215185 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215184,G__215185) : tailrecursion.hoplon.span.call(null,G__215184,G__215185));
})();
var G__215115 = ") ";
var G__215116 = (function (){var G__215186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215187 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215186,G__215187) : tailrecursion.hoplon.span.call(null,G__215186,G__215187));
})();
var G__215117 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$62 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$62(G__215056,G__215057,G__215058,G__215059,G__215060,G__215061,G__215062,G__215063,G__215064,G__215065,G__215066,G__215067,G__215068,G__215069,G__215070,G__215071,G__215072,G__215073,G__215074,G__215075,G__215076,G__215077,G__215078,G__215079,G__215080,G__215081,G__215082,G__215083,G__215084,G__215085,G__215086,G__215087,G__215088,G__215089,G__215090,G__215091,G__215092,G__215093,G__215094,G__215095,G__215096,G__215097,G__215098,G__215099,G__215100,G__215101,G__215102,G__215103,G__215104,G__215105,G__215106,G__215107,G__215108,G__215109,G__215110,G__215111,G__215112,G__215113,G__215114,G__215115,G__215116,G__215117) : tailrecursion.hoplon.pre.call(null,G__215056,G__215057,G__215058,G__215059,G__215060,G__215061,G__215062,G__215063,G__215064,G__215065,G__215066,G__215067,G__215068,G__215069,G__215070,G__215071,G__215072,G__215073,G__215074,G__215075,G__215076,G__215077,G__215078,G__215079,G__215080,G__215081,G__215082,G__215083,G__215084,G__215085,G__215086,G__215087,G__215088,G__215089,G__215090,G__215091,G__215092,G__215093,G__215094,G__215095,G__215096,G__215097,G__215098,G__215099,G__215100,G__215101,G__215102,G__215103,G__215104,G__215105,G__215106,G__215107,G__215108,G__215109,G__215110,G__215111,G__215112,G__215113,G__215114,G__215115,G__215116,G__215117));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__215054,G__215055) : tailrecursion.hoplon.div.call(null,G__215054,G__215055));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__215053) : tailrecursion.hoplon.div.call(null,G__215053));
})(),(function (){var G__215188 = cljs.core.PersistentArrayMap.EMPTY;
var G__215189 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The difference between this implementation and the previous one lies in when we compute the ",(function (){var G__215190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__215191 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215190,G__215191) : tailrecursion.hoplon.markdown.code_node.call(null,G__215190,G__215191));
})(),". If in our typical use of rational numbers we access the numerators and denominators of the same rational numbers many times, it would be preferable to compute the ",(function (){var G__215192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__215193 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215192,G__215193) : tailrecursion.hoplon.markdown.code_node.call(null,G__215192,G__215193));
})()," when the rational numbers are constructed. If not, we may be better off waiting until access time to compute the ",(function (){var G__215194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__215195 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215194,G__215195) : tailrecursion.hoplon.markdown.code_node.call(null,G__215194,G__215195));
})(),". In any case, when we change from one representation to the other, the procedures ",(function (){var G__215196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__215197 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215196,G__215197) : tailrecursion.hoplon.markdown.code_node.call(null,G__215196,G__215197));
})(),", ",(function (){var G__215198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-rat"], null);
var G__215199 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215198,G__215199) : tailrecursion.hoplon.markdown.code_node.call(null,G__215198,G__215199));
})()," and so on do not have to be modified at all."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__215188,G__215189) : tailrecursion.hoplon.markdown.para_node.call(null,G__215188,G__215189));
})(),(function (){var G__215200 = cljs.core.PersistentArrayMap.EMPTY;
var G__215201 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Constraining the dependence on the representation to a few interface procedures helps us design programs as well as modify them, because it allows us to maintain the flexibility to consider alternate implementations. To continue with our simple example, suppose we are designing a rational-number package and we can",(function (){var G__215202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__215203 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__215202,G__215203) : tailrecursion.hoplon.markdown.simple_node.call(null,G__215202,G__215203));
})(),"t decide initially whether to perform the ",(function (){var G__215204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__215205 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215204,G__215205) : tailrecursion.hoplon.markdown.code_node.call(null,G__215204,G__215205));
})()," at construction time or at selection time. The data-abstraction methodology gives us a way to defer that decision without losing the ability to make progress on the rest of the system."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__215200,G__215201) : tailrecursion.hoplon.markdown.para_node.call(null,G__215200,G__215201));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_214914;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_214913;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_214912;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_214911;
}})()], 0));
var G__212500 = "";
var G__212501 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_215206 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_215207 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_215208 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_215209 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__215210 = cljs.core.PersistentArrayMap.EMPTY;
var G__215211 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the problem of representing line segments in a plane. Each segment is represented as a pair of points: a starting point and an ending point. Define a constructor ",(function (){var G__215212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-segment"], null);
var G__215213 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215212,G__215213) : tailrecursion.hoplon.markdown.code_node.call(null,G__215212,G__215213));
})()," and selectors ",(function (){var G__215214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"start-segment"], null);
var G__215215 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215214,G__215215) : tailrecursion.hoplon.markdown.code_node.call(null,G__215214,G__215215));
})()," and ",(function (){var G__215216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"end-segment"], null);
var G__215217 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215216,G__215217) : tailrecursion.hoplon.markdown.code_node.call(null,G__215216,G__215217));
})()," that define the representation of segments in terms of points. Furthermore, a point can be represented as a pair of numbers: the \\(x\\) coordinate and the \\(y\\) coordinate. Accordingly, specify a constructor ",(function (){var G__215218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-point"], null);
var G__215219 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215218,G__215219) : tailrecursion.hoplon.markdown.code_node.call(null,G__215218,G__215219));
})()," and selectors ",(function (){var G__215220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x-point"], null);
var G__215221 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215220,G__215221) : tailrecursion.hoplon.markdown.code_node.call(null,G__215220,G__215221));
})()," and ",(function (){var G__215222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y-point"], null);
var G__215223 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215222,G__215223) : tailrecursion.hoplon.markdown.code_node.call(null,G__215222,G__215223));
})()," that define this representation. Finally, using your selectors and constructors, define a procedure ",(function (){var G__215224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"midpoint-segment"], null);
var G__215225 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215224,G__215225) : tailrecursion.hoplon.markdown.code_node.call(null,G__215224,G__215225));
})()," that takes a line segment as argument and returns its midpoint (the point whose coordinates are the average of the coordinates of the endpoints). To try your procedures, you",(function (){var G__215226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__215227 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__215226,G__215227) : tailrecursion.hoplon.markdown.simple_node.call(null,G__215226,G__215227));
})(),"ll need a way to print points:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__215210,G__215211) : tailrecursion.hoplon.markdown.para_node.call(null,G__215210,G__215211));
})(),(function (){var G__215274 = (function (){var G__215275 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__215276 = (function (){var G__215277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__215278 = "(";
var G__215279 = (function (){var G__215299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215300 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215299,G__215300) : tailrecursion.hoplon.span.call(null,G__215299,G__215300));
})();
var G__215280 = (function (){var G__215301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215302 = "print-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215301,G__215302) : tailrecursion.hoplon.span.call(null,G__215301,G__215302));
})();
var G__215281 = " [";
var G__215282 = (function (){var G__215303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215304 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215303,G__215304) : tailrecursion.hoplon.span.call(null,G__215303,G__215304));
})();
var G__215283 = "]\n  (";
var G__215284 = (function (){var G__215305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215306 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215305,G__215306) : tailrecursion.hoplon.span.call(null,G__215305,G__215306));
})();
var G__215285 = (function (){var G__215307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__215308 = "\"(\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215307,G__215308) : tailrecursion.hoplon.span.call(null,G__215307,G__215308));
})();
var G__215286 = " (";
var G__215287 = (function (){var G__215309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215310 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215309,G__215310) : tailrecursion.hoplon.span.call(null,G__215309,G__215310));
})();
var G__215288 = " ";
var G__215289 = (function (){var G__215311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215312 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215311,G__215312) : tailrecursion.hoplon.span.call(null,G__215311,G__215312));
})();
var G__215290 = ") ";
var G__215291 = (function (){var G__215313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__215314 = "\",\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215313,G__215314) : tailrecursion.hoplon.span.call(null,G__215313,G__215314));
})();
var G__215292 = " (";
var G__215293 = (function (){var G__215315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215316 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215315,G__215316) : tailrecursion.hoplon.span.call(null,G__215315,G__215316));
})();
var G__215294 = " ";
var G__215295 = (function (){var G__215317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215318 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215317,G__215318) : tailrecursion.hoplon.span.call(null,G__215317,G__215318));
})();
var G__215296 = ") ";
var G__215297 = (function (){var G__215319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__215320 = "\")\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215319,G__215320) : tailrecursion.hoplon.span.call(null,G__215319,G__215320));
})();
var G__215298 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__215277,G__215278,G__215279,G__215280,G__215281,G__215282,G__215283,G__215284,G__215285,G__215286,G__215287,G__215288,G__215289,G__215290,G__215291,G__215292,G__215293,G__215294,G__215295,G__215296,G__215297,G__215298) : tailrecursion.hoplon.pre.call(null,G__215277,G__215278,G__215279,G__215280,G__215281,G__215282,G__215283,G__215284,G__215285,G__215286,G__215287,G__215288,G__215289,G__215290,G__215291,G__215292,G__215293,G__215294,G__215295,G__215296,G__215297,G__215298));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__215275,G__215276) : tailrecursion.hoplon.div.call(null,G__215275,G__215276));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__215274) : tailrecursion.hoplon.div.call(null,G__215274));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_215209;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_215208;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_215207;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_215206;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_215321 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_215322 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_215323 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_215324 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__215453 = (function (){var G__215454 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__215455 = (function (){var G__215456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__215457 = "(";
var G__215458 = (function (){var G__215514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215515 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215514,G__215515) : tailrecursion.hoplon.span.call(null,G__215514,G__215515));
})();
var G__215459 = (function (){var G__215516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215517 = "make-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215516,G__215517) : tailrecursion.hoplon.span.call(null,G__215516,G__215517));
})();
var G__215460 = " [";
var G__215461 = (function (){var G__215518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215519 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215518,G__215519) : tailrecursion.hoplon.span.call(null,G__215518,G__215519));
})();
var G__215462 = " ";
var G__215463 = (function (){var G__215520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215521 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215520,G__215521) : tailrecursion.hoplon.span.call(null,G__215520,G__215521));
})();
var G__215464 = "]\n  (";
var G__215465 = (function (){var G__215522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215523 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215522,G__215523) : tailrecursion.hoplon.span.call(null,G__215522,G__215523));
})();
var G__215466 = (function (){var G__215524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215525 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215524,G__215525) : tailrecursion.hoplon.span.call(null,G__215524,G__215525));
})();
var G__215467 = " ";
var G__215468 = (function (){var G__215526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215527 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215526,G__215527) : tailrecursion.hoplon.span.call(null,G__215526,G__215527));
})();
var G__215469 = "))\n(";
var G__215470 = (function (){var G__215528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215529 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215528,G__215529) : tailrecursion.hoplon.span.call(null,G__215528,G__215529));
})();
var G__215471 = (function (){var G__215530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215531 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215530,G__215531) : tailrecursion.hoplon.span.call(null,G__215530,G__215531));
})();
var G__215472 = " [";
var G__215473 = (function (){var G__215532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215533 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215532,G__215533) : tailrecursion.hoplon.span.call(null,G__215532,G__215533));
})();
var G__215474 = "]\n  (";
var G__215475 = (function (){var G__215534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215535 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215534,G__215535) : tailrecursion.hoplon.span.call(null,G__215534,G__215535));
})();
var G__215476 = (function (){var G__215536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215537 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215536,G__215537) : tailrecursion.hoplon.span.call(null,G__215536,G__215537));
})();
var G__215477 = "))\n(";
var G__215478 = (function (){var G__215538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215539 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215538,G__215539) : tailrecursion.hoplon.span.call(null,G__215538,G__215539));
})();
var G__215479 = (function (){var G__215540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215541 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215540,G__215541) : tailrecursion.hoplon.span.call(null,G__215540,G__215541));
})();
var G__215480 = " [";
var G__215481 = (function (){var G__215542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215543 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215542,G__215543) : tailrecursion.hoplon.span.call(null,G__215542,G__215543));
})();
var G__215482 = "]\n  (";
var G__215483 = (function (){var G__215544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215545 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215544,G__215545) : tailrecursion.hoplon.span.call(null,G__215544,G__215545));
})();
var G__215484 = (function (){var G__215546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215547 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215546,G__215547) : tailrecursion.hoplon.span.call(null,G__215546,G__215547));
})();
var G__215485 = "))\n(";
var G__215486 = (function (){var G__215548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215549 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215548,G__215549) : tailrecursion.hoplon.span.call(null,G__215548,G__215549));
})();
var G__215487 = (function (){var G__215550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215551 = "make-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215550,G__215551) : tailrecursion.hoplon.span.call(null,G__215550,G__215551));
})();
var G__215488 = " [";
var G__215489 = (function (){var G__215552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215553 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215552,G__215553) : tailrecursion.hoplon.span.call(null,G__215552,G__215553));
})();
var G__215490 = " ";
var G__215491 = (function (){var G__215554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215555 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215554,G__215555) : tailrecursion.hoplon.span.call(null,G__215554,G__215555));
})();
var G__215492 = "]\n  (";
var G__215493 = (function (){var G__215556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215557 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215556,G__215557) : tailrecursion.hoplon.span.call(null,G__215556,G__215557));
})();
var G__215494 = (function (){var G__215558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215559 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215558,G__215559) : tailrecursion.hoplon.span.call(null,G__215558,G__215559));
})();
var G__215495 = " ";
var G__215496 = (function (){var G__215560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215561 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215560,G__215561) : tailrecursion.hoplon.span.call(null,G__215560,G__215561));
})();
var G__215497 = "))\n(";
var G__215498 = (function (){var G__215562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215563 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215562,G__215563) : tailrecursion.hoplon.span.call(null,G__215562,G__215563));
})();
var G__215499 = (function (){var G__215564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215565 = "start-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215564,G__215565) : tailrecursion.hoplon.span.call(null,G__215564,G__215565));
})();
var G__215500 = " [";
var G__215501 = (function (){var G__215566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215567 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215566,G__215567) : tailrecursion.hoplon.span.call(null,G__215566,G__215567));
})();
var G__215502 = "]\n  (";
var G__215503 = (function (){var G__215568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215569 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215568,G__215569) : tailrecursion.hoplon.span.call(null,G__215568,G__215569));
})();
var G__215504 = (function (){var G__215570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215571 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215570,G__215571) : tailrecursion.hoplon.span.call(null,G__215570,G__215571));
})();
var G__215505 = "))\n(";
var G__215506 = (function (){var G__215572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215573 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215572,G__215573) : tailrecursion.hoplon.span.call(null,G__215572,G__215573));
})();
var G__215507 = (function (){var G__215574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215575 = "end-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215574,G__215575) : tailrecursion.hoplon.span.call(null,G__215574,G__215575));
})();
var G__215508 = " [";
var G__215509 = (function (){var G__215576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215577 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215576,G__215577) : tailrecursion.hoplon.span.call(null,G__215576,G__215577));
})();
var G__215510 = "]\n  (";
var G__215511 = (function (){var G__215578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215579 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215578,G__215579) : tailrecursion.hoplon.span.call(null,G__215578,G__215579));
})();
var G__215512 = (function (){var G__215580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215581 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215580,G__215581) : tailrecursion.hoplon.span.call(null,G__215580,G__215581));
})();
var G__215513 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__215456,G__215457,G__215458,G__215459,G__215460,G__215461,G__215462,G__215463,G__215464,G__215465,G__215466,G__215467,G__215468,G__215469,G__215470,G__215471,G__215472,G__215473,G__215474,G__215475,G__215476,G__215477,G__215478,G__215479,G__215480,G__215481,G__215482,G__215483,G__215484,G__215485,G__215486,G__215487,G__215488,G__215489,G__215490,G__215491,G__215492,G__215493,G__215494,G__215495,G__215496,G__215497,G__215498,G__215499,G__215500,G__215501,G__215502,G__215503,G__215504,G__215505,G__215506,G__215507,G__215508,G__215509,G__215510,G__215511,G__215512,G__215513) : tailrecursion.hoplon.pre.call(null,G__215456,G__215457,G__215458,G__215459,G__215460,G__215461,G__215462,G__215463,G__215464,G__215465,G__215466,G__215467,G__215468,G__215469,G__215470,G__215471,G__215472,G__215473,G__215474,G__215475,G__215476,G__215477,G__215478,G__215479,G__215480,G__215481,G__215482,G__215483,G__215484,G__215485,G__215486,G__215487,G__215488,G__215489,G__215490,G__215491,G__215492,G__215493,G__215494,G__215495,G__215496,G__215497,G__215498,G__215499,G__215500,G__215501,G__215502,G__215503,G__215504,G__215505,G__215506,G__215507,G__215508,G__215509,G__215510,G__215511,G__215512,G__215513));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__215454,G__215455) : tailrecursion.hoplon.div.call(null,G__215454,G__215455));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__215453) : tailrecursion.hoplon.div.call(null,G__215453));
})(),(function (){var G__215582 = cljs.core.PersistentArrayMap.EMPTY;
var G__215583 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Once we have those,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__215582,G__215583) : tailrecursion.hoplon.markdown.para_node.call(null,G__215582,G__215583));
})(),(function (){var G__215703 = (function (){var G__215704 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__215705 = (function (){var G__215706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__215707 = "(";
var G__215708 = (function (){var G__215765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215766 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215765,G__215766) : tailrecursion.hoplon.span.call(null,G__215765,G__215766));
})();
var G__215709 = (function (){var G__215767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215768 = "midpoint-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215767,G__215768) : tailrecursion.hoplon.span.call(null,G__215767,G__215768));
})();
var G__215710 = " [";
var G__215711 = (function (){var G__215769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215770 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215769,G__215770) : tailrecursion.hoplon.span.call(null,G__215769,G__215770));
})();
var G__215712 = "]\n  (";
var G__215713 = (function (){var G__215771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215772 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215771,G__215772) : tailrecursion.hoplon.span.call(null,G__215771,G__215772));
})();
var G__215714 = "[";
var G__215715 = (function (){var G__215773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215774 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215773,G__215774) : tailrecursion.hoplon.span.call(null,G__215773,G__215774));
})();
var G__215716 = "  (";
var G__215717 = (function (){var G__215775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215776 = "start-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215775,G__215776) : tailrecursion.hoplon.span.call(null,G__215775,G__215776));
})();
var G__215718 = " ";
var G__215719 = (function (){var G__215777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215778 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215777,G__215778) : tailrecursion.hoplon.span.call(null,G__215777,G__215778));
})();
var G__215720 = ")\n        ";
var G__215721 = (function (){var G__215779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215780 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215779,G__215780) : tailrecursion.hoplon.span.call(null,G__215779,G__215780));
})();
var G__215722 = "  (";
var G__215723 = (function (){var G__215781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215782 = "end-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215781,G__215782) : tailrecursion.hoplon.span.call(null,G__215781,G__215782));
})();
var G__215724 = " ";
var G__215725 = (function (){var G__215783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215784 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215783,G__215784) : tailrecursion.hoplon.span.call(null,G__215783,G__215784));
})();
var G__215726 = ")\n        ";
var G__215727 = (function (){var G__215785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215786 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215785,G__215786) : tailrecursion.hoplon.span.call(null,G__215785,G__215786));
})();
var G__215728 = " (";
var G__215729 = (function (){var G__215787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215788 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215787,G__215788) : tailrecursion.hoplon.span.call(null,G__215787,G__215788));
})();
var G__215730 = " ";
var G__215731 = (function (){var G__215789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215790 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215789,G__215790) : tailrecursion.hoplon.span.call(null,G__215789,G__215790));
})();
var G__215732 = ")\n        ";
var G__215733 = (function (){var G__215791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215792 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215791,G__215792) : tailrecursion.hoplon.span.call(null,G__215791,G__215792));
})();
var G__215734 = " (";
var G__215735 = (function (){var G__215793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215794 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215793,G__215794) : tailrecursion.hoplon.span.call(null,G__215793,G__215794));
})();
var G__215736 = " ";
var G__215737 = (function (){var G__215795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215796 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215795,G__215796) : tailrecursion.hoplon.span.call(null,G__215795,G__215796));
})();
var G__215738 = ")\n        ";
var G__215739 = (function (){var G__215797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215798 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215797,G__215798) : tailrecursion.hoplon.span.call(null,G__215797,G__215798));
})();
var G__215740 = " (";
var G__215741 = (function (){var G__215799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215800 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215799,G__215800) : tailrecursion.hoplon.span.call(null,G__215799,G__215800));
})();
var G__215742 = " ";
var G__215743 = (function (){var G__215801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215802 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215801,G__215802) : tailrecursion.hoplon.span.call(null,G__215801,G__215802));
})();
var G__215744 = ")\n        ";
var G__215745 = (function (){var G__215803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215804 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215803,G__215804) : tailrecursion.hoplon.span.call(null,G__215803,G__215804));
})();
var G__215746 = " (";
var G__215747 = (function (){var G__215805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215806 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215805,G__215806) : tailrecursion.hoplon.span.call(null,G__215805,G__215806));
})();
var G__215748 = " ";
var G__215749 = (function (){var G__215807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215808 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215807,G__215808) : tailrecursion.hoplon.span.call(null,G__215807,G__215808));
})();
var G__215750 = ")]\n    (";
var G__215751 = (function (){var G__215809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215810 = "make-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215809,G__215810) : tailrecursion.hoplon.span.call(null,G__215809,G__215810));
})();
var G__215752 = " (";
var G__215753 = (function (){var G__215811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215812 = "average";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215811,G__215812) : tailrecursion.hoplon.span.call(null,G__215811,G__215812));
})();
var G__215754 = " ";
var G__215755 = (function (){var G__215813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215814 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215813,G__215814) : tailrecursion.hoplon.span.call(null,G__215813,G__215814));
})();
var G__215756 = " ";
var G__215757 = (function (){var G__215815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215816 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215815,G__215816) : tailrecursion.hoplon.span.call(null,G__215815,G__215816));
})();
var G__215758 = ") (";
var G__215759 = (function (){var G__215817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215818 = "average";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215817,G__215818) : tailrecursion.hoplon.span.call(null,G__215817,G__215818));
})();
var G__215760 = " ";
var G__215761 = (function (){var G__215819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215820 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215819,G__215820) : tailrecursion.hoplon.span.call(null,G__215819,G__215820));
})();
var G__215762 = " ";
var G__215763 = (function (){var G__215821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215822 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215821,G__215822) : tailrecursion.hoplon.span.call(null,G__215821,G__215822));
})();
var G__215764 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59(G__215706,G__215707,G__215708,G__215709,G__215710,G__215711,G__215712,G__215713,G__215714,G__215715,G__215716,G__215717,G__215718,G__215719,G__215720,G__215721,G__215722,G__215723,G__215724,G__215725,G__215726,G__215727,G__215728,G__215729,G__215730,G__215731,G__215732,G__215733,G__215734,G__215735,G__215736,G__215737,G__215738,G__215739,G__215740,G__215741,G__215742,G__215743,G__215744,G__215745,G__215746,G__215747,G__215748,G__215749,G__215750,G__215751,G__215752,G__215753,G__215754,G__215755,G__215756,G__215757,G__215758,G__215759,G__215760,G__215761,G__215762,G__215763,G__215764) : tailrecursion.hoplon.pre.call(null,G__215706,G__215707,G__215708,G__215709,G__215710,G__215711,G__215712,G__215713,G__215714,G__215715,G__215716,G__215717,G__215718,G__215719,G__215720,G__215721,G__215722,G__215723,G__215724,G__215725,G__215726,G__215727,G__215728,G__215729,G__215730,G__215731,G__215732,G__215733,G__215734,G__215735,G__215736,G__215737,G__215738,G__215739,G__215740,G__215741,G__215742,G__215743,G__215744,G__215745,G__215746,G__215747,G__215748,G__215749,G__215750,G__215751,G__215752,G__215753,G__215754,G__215755,G__215756,G__215757,G__215758,G__215759,G__215760,G__215761,G__215762,G__215763,G__215764));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__215704,G__215705) : tailrecursion.hoplon.div.call(null,G__215704,G__215705));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__215703) : tailrecursion.hoplon.div.call(null,G__215703));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_215324;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_215323;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_215322;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_215321;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_215823 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_215824 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_215825 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_215826 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__215827 = cljs.core.PersistentArrayMap.EMPTY;
var G__215828 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Implement a representation for rectangles in a plane. (Hint: you may want to make use of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/ex/2/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.2"], null)], 0))," In terms of your constructors and selectors, create procedures that compute the perimeter and the area of a given rectangle. Now implement a different representation for rectangles. Can you design your system with suitable abstraction barriers, so that the same perimeter and area procedures will work using either representation?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__215827,G__215828) : tailrecursion.hoplon.markdown.para_node.call(null,G__215827,G__215828));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_215826;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_215825;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_215824;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_215823;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_215829 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_215830 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_215831 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_215832 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__215833 = cljs.core.PersistentArrayMap.EMPTY;
var G__215834 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Assuming we are given coordinates of an actual rectangle (so that we don",(function (){var G__215835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__215836 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__215835,G__215836) : tailrecursion.hoplon.markdown.simple_node.call(null,G__215835,G__215836));
})(),"t have to use the Pythagorean theorem or some other method to confirm that the points are what they claim to be), will simplify our lives considerably. Since any rectangle is determined by three of its vertices, we can assume that we are given three sequentially adjacent vertices."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__215833,G__215834) : tailrecursion.hoplon.markdown.para_node.call(null,G__215833,G__215834));
})(),(function (){var G__215875 = (function (){var G__215876 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__215877 = (function (){var G__215878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__215879 = "(";
var G__215880 = (function (){var G__215896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215897 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215896,G__215897) : tailrecursion.hoplon.span.call(null,G__215896,G__215897));
})();
var G__215881 = (function (){var G__215898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215899 = "make-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215898,G__215899) : tailrecursion.hoplon.span.call(null,G__215898,G__215899));
})();
var G__215882 = " [";
var G__215883 = (function (){var G__215900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215901 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215900,G__215901) : tailrecursion.hoplon.span.call(null,G__215900,G__215901));
})();
var G__215884 = " ";
var G__215885 = (function (){var G__215902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215903 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215902,G__215903) : tailrecursion.hoplon.span.call(null,G__215902,G__215903));
})();
var G__215886 = " ";
var G__215887 = (function (){var G__215904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215905 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215904,G__215905) : tailrecursion.hoplon.span.call(null,G__215904,G__215905));
})();
var G__215888 = "]\n  (";
var G__215889 = (function (){var G__215906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215907 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215906,G__215907) : tailrecursion.hoplon.span.call(null,G__215906,G__215907));
})();
var G__215890 = (function (){var G__215908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215909 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215908,G__215909) : tailrecursion.hoplon.span.call(null,G__215908,G__215909));
})();
var G__215891 = " ";
var G__215892 = (function (){var G__215910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215911 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215910,G__215911) : tailrecursion.hoplon.span.call(null,G__215910,G__215911));
})();
var G__215893 = " ";
var G__215894 = (function (){var G__215912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215913 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215912,G__215913) : tailrecursion.hoplon.span.call(null,G__215912,G__215913));
})();
var G__215895 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__215878,G__215879,G__215880,G__215881,G__215882,G__215883,G__215884,G__215885,G__215886,G__215887,G__215888,G__215889,G__215890,G__215891,G__215892,G__215893,G__215894,G__215895) : tailrecursion.hoplon.pre.call(null,G__215878,G__215879,G__215880,G__215881,G__215882,G__215883,G__215884,G__215885,G__215886,G__215887,G__215888,G__215889,G__215890,G__215891,G__215892,G__215893,G__215894,G__215895));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__215876,G__215877) : tailrecursion.hoplon.div.call(null,G__215876,G__215877));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__215875) : tailrecursion.hoplon.div.call(null,G__215875));
})(),(function (){var G__215914 = cljs.core.PersistentArrayMap.EMPTY;
var G__215915 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then, we realize that in order to compute the area and perimeter, we need to know the length and width of the rectangle. So, let",(function (){var G__215916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__215917 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__215916,G__215917) : tailrecursion.hoplon.markdown.simple_node.call(null,G__215916,G__215917));
})(),"s write a separate procedure to do that. But before we do that, it might be a good idea to have a procedure that can find the length of a segment (we could do without this procedure, but it seems like a useful procedure to have if we are to be working with segments, so why not allow ourselves this tool?)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__215914,G__215915) : tailrecursion.hoplon.markdown.para_node.call(null,G__215914,G__215915));
})(),(function (){var G__216047 = (function (){var G__216048 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__216049 = (function (){var G__216050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__216051 = "(";
var G__216052 = (function (){var G__216113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__216114 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216113,G__216114) : tailrecursion.hoplon.span.call(null,G__216113,G__216114));
})();
var G__216053 = (function (){var G__216115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216116 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216115,G__216116) : tailrecursion.hoplon.span.call(null,G__216115,G__216116));
})();
var G__216054 = " [";
var G__216055 = (function (){var G__216117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216118 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216117,G__216118) : tailrecursion.hoplon.span.call(null,G__216117,G__216118));
})();
var G__216056 = "]\n  (";
var G__216057 = (function (){var G__216119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__216120 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216119,G__216120) : tailrecursion.hoplon.span.call(null,G__216119,G__216120));
})();
var G__216058 = "[";
var G__216059 = (function (){var G__216121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216122 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216121,G__216122) : tailrecursion.hoplon.span.call(null,G__216121,G__216122));
})();
var G__216060 = "  (";
var G__216061 = (function (){var G__216123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216124 = "start-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216123,G__216124) : tailrecursion.hoplon.span.call(null,G__216123,G__216124));
})();
var G__216062 = " ";
var G__216063 = (function (){var G__216125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216126 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216125,G__216126) : tailrecursion.hoplon.span.call(null,G__216125,G__216126));
})();
var G__216064 = ")\n        ";
var G__216065 = (function (){var G__216127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216128 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216127,G__216128) : tailrecursion.hoplon.span.call(null,G__216127,G__216128));
})();
var G__216066 = "  (";
var G__216067 = (function (){var G__216129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216130 = "end-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216129,G__216130) : tailrecursion.hoplon.span.call(null,G__216129,G__216130));
})();
var G__216068 = " ";
var G__216069 = (function (){var G__216131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216132 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216131,G__216132) : tailrecursion.hoplon.span.call(null,G__216131,G__216132));
})();
var G__216070 = ")\n        ";
var G__216071 = (function (){var G__216133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216134 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216133,G__216134) : tailrecursion.hoplon.span.call(null,G__216133,G__216134));
})();
var G__216072 = " (";
var G__216073 = (function (){var G__216135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216136 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216135,G__216136) : tailrecursion.hoplon.span.call(null,G__216135,G__216136));
})();
var G__216074 = " ";
var G__216075 = (function (){var G__216137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216138 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216137,G__216138) : tailrecursion.hoplon.span.call(null,G__216137,G__216138));
})();
var G__216076 = ")\n        ";
var G__216077 = (function (){var G__216139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216140 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216139,G__216140) : tailrecursion.hoplon.span.call(null,G__216139,G__216140));
})();
var G__216078 = " (";
var G__216079 = (function (){var G__216141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216142 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216141,G__216142) : tailrecursion.hoplon.span.call(null,G__216141,G__216142));
})();
var G__216080 = " ";
var G__216081 = (function (){var G__216143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216144 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216143,G__216144) : tailrecursion.hoplon.span.call(null,G__216143,G__216144));
})();
var G__216082 = ")\n        ";
var G__216083 = (function (){var G__216145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216146 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216145,G__216146) : tailrecursion.hoplon.span.call(null,G__216145,G__216146));
})();
var G__216084 = " (";
var G__216085 = (function (){var G__216147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216148 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216147,G__216148) : tailrecursion.hoplon.span.call(null,G__216147,G__216148));
})();
var G__216086 = " ";
var G__216087 = (function (){var G__216149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216150 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216149,G__216150) : tailrecursion.hoplon.span.call(null,G__216149,G__216150));
})();
var G__216088 = ")\n        ";
var G__216089 = (function (){var G__216151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216152 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216151,G__216152) : tailrecursion.hoplon.span.call(null,G__216151,G__216152));
})();
var G__216090 = " (";
var G__216091 = (function (){var G__216153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216154 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216153,G__216154) : tailrecursion.hoplon.span.call(null,G__216153,G__216154));
})();
var G__216092 = " ";
var G__216093 = (function (){var G__216155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216156 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216155,G__216156) : tailrecursion.hoplon.span.call(null,G__216155,G__216156));
})();
var G__216094 = ")]\n    (";
var G__216095 = (function (){var G__216157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216158 = "Math/sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216157,G__216158) : tailrecursion.hoplon.span.call(null,G__216157,G__216158));
})();
var G__216096 = " (";
var G__216097 = (function (){var G__216159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216160 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216159,G__216160) : tailrecursion.hoplon.span.call(null,G__216159,G__216160));
})();
var G__216098 = "(";
var G__216099 = (function (){var G__216161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216162 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216161,G__216162) : tailrecursion.hoplon.span.call(null,G__216161,G__216162));
})();
var G__216100 = " (";
var G__216101 = (function (){var G__216163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216164 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216163,G__216164) : tailrecursion.hoplon.span.call(null,G__216163,G__216164));
})();
var G__216102 = (function (){var G__216165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216166 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216165,G__216166) : tailrecursion.hoplon.span.call(null,G__216165,G__216166));
})();
var G__216103 = " ";
var G__216104 = (function (){var G__216167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216168 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216167,G__216168) : tailrecursion.hoplon.span.call(null,G__216167,G__216168));
})();
var G__216105 = "))\n                  (";
var G__216106 = (function (){var G__216169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216170 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216169,G__216170) : tailrecursion.hoplon.span.call(null,G__216169,G__216170));
})();
var G__216107 = " (";
var G__216108 = (function (){var G__216171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216172 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216171,G__216172) : tailrecursion.hoplon.span.call(null,G__216171,G__216172));
})();
var G__216109 = (function (){var G__216173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216174 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216173,G__216174) : tailrecursion.hoplon.span.call(null,G__216173,G__216174));
})();
var G__216110 = " ";
var G__216111 = (function (){var G__216175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216176 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216175,G__216176) : tailrecursion.hoplon.span.call(null,G__216175,G__216176));
})();
var G__216112 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63(G__216050,G__216051,G__216052,G__216053,G__216054,G__216055,G__216056,G__216057,G__216058,G__216059,G__216060,G__216061,G__216062,G__216063,G__216064,G__216065,G__216066,G__216067,G__216068,G__216069,G__216070,G__216071,G__216072,G__216073,G__216074,G__216075,G__216076,G__216077,G__216078,G__216079,G__216080,G__216081,G__216082,G__216083,G__216084,G__216085,G__216086,G__216087,G__216088,G__216089,G__216090,G__216091,G__216092,G__216093,G__216094,G__216095,G__216096,G__216097,G__216098,G__216099,G__216100,G__216101,G__216102,G__216103,G__216104,G__216105,G__216106,G__216107,G__216108,G__216109,G__216110,G__216111,G__216112) : tailrecursion.hoplon.pre.call(null,G__216050,G__216051,G__216052,G__216053,G__216054,G__216055,G__216056,G__216057,G__216058,G__216059,G__216060,G__216061,G__216062,G__216063,G__216064,G__216065,G__216066,G__216067,G__216068,G__216069,G__216070,G__216071,G__216072,G__216073,G__216074,G__216075,G__216076,G__216077,G__216078,G__216079,G__216080,G__216081,G__216082,G__216083,G__216084,G__216085,G__216086,G__216087,G__216088,G__216089,G__216090,G__216091,G__216092,G__216093,G__216094,G__216095,G__216096,G__216097,G__216098,G__216099,G__216100,G__216101,G__216102,G__216103,G__216104,G__216105,G__216106,G__216107,G__216108,G__216109,G__216110,G__216111,G__216112));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__216048,G__216049) : tailrecursion.hoplon.div.call(null,G__216048,G__216049));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__216047) : tailrecursion.hoplon.div.call(null,G__216047));
})(),(function (){var G__216177 = cljs.core.PersistentArrayMap.EMPTY;
var G__216178 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Good, now we can move on. I",(function (){var G__216179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__216180 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__216179,G__216180) : tailrecursion.hoplon.markdown.simple_node.call(null,G__216179,G__216180));
})(),"m not sure if it would be useful to define a global procedure to get the sides of a rectangle as line-segments, but if it gets in the way, we can use a ",(function (){var G__216181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__216182 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216181,G__216182) : tailrecursion.hoplon.markdown.code_node.call(null,G__216181,G__216182));
})()," binding instead. For now, let",(function (){var G__216183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__216184 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__216183,G__216184) : tailrecursion.hoplon.markdown.simple_node.call(null,G__216183,G__216184));
})(),"s define it globally."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216177,G__216178) : tailrecursion.hoplon.markdown.para_node.call(null,G__216177,G__216178));
})(),(function (){var G__216251 = (function (){var G__216252 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__216253 = (function (){var G__216254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__216255 = "(";
var G__216256 = (function (){var G__216284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__216285 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216284,G__216285) : tailrecursion.hoplon.span.call(null,G__216284,G__216285));
})();
var G__216257 = (function (){var G__216286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216287 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216286,G__216287) : tailrecursion.hoplon.span.call(null,G__216286,G__216287));
})();
var G__216258 = " [";
var G__216259 = (function (){var G__216288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216289 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216288,G__216289) : tailrecursion.hoplon.span.call(null,G__216288,G__216289));
})();
var G__216260 = "]\n  (";
var G__216261 = (function (){var G__216290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216291 = "make-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216290,G__216291) : tailrecursion.hoplon.span.call(null,G__216290,G__216291));
})();
var G__216262 = " (";
var G__216263 = (function (){var G__216292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216293 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216292,G__216293) : tailrecursion.hoplon.span.call(null,G__216292,G__216293));
})();
var G__216264 = (function (){var G__216294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216295 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216294,G__216295) : tailrecursion.hoplon.span.call(null,G__216294,G__216295));
})();
var G__216265 = ") (";
var G__216266 = (function (){var G__216296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216297 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216296,G__216297) : tailrecursion.hoplon.span.call(null,G__216296,G__216297));
})();
var G__216267 = (function (){var G__216298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216299 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216298,G__216299) : tailrecursion.hoplon.span.call(null,G__216298,G__216299));
})();
var G__216268 = ")))\n(";
var G__216269 = (function (){var G__216300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__216301 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216300,G__216301) : tailrecursion.hoplon.span.call(null,G__216300,G__216301));
})();
var G__216270 = (function (){var G__216302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216303 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216302,G__216303) : tailrecursion.hoplon.span.call(null,G__216302,G__216303));
})();
var G__216271 = " [";
var G__216272 = (function (){var G__216304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216305 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216304,G__216305) : tailrecursion.hoplon.span.call(null,G__216304,G__216305));
})();
var G__216273 = "]\n  (";
var G__216274 = (function (){var G__216306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216307 = "make-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216306,G__216307) : tailrecursion.hoplon.span.call(null,G__216306,G__216307));
})();
var G__216275 = " (";
var G__216276 = (function (){var G__216308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216309 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216308,G__216309) : tailrecursion.hoplon.span.call(null,G__216308,G__216309));
})();
var G__216277 = (function (){var G__216310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216311 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216310,G__216311) : tailrecursion.hoplon.span.call(null,G__216310,G__216311));
})();
var G__216278 = ") (";
var G__216279 = (function (){var G__216312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216313 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216312,G__216313) : tailrecursion.hoplon.span.call(null,G__216312,G__216313));
})();
var G__216280 = (function (){var G__216314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216315 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216314,G__216315) : tailrecursion.hoplon.span.call(null,G__216314,G__216315));
})();
var G__216281 = " ";
var G__216282 = (function (){var G__216316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__216317 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216316,G__216317) : tailrecursion.hoplon.span.call(null,G__216316,G__216317));
})();
var G__216283 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30(G__216254,G__216255,G__216256,G__216257,G__216258,G__216259,G__216260,G__216261,G__216262,G__216263,G__216264,G__216265,G__216266,G__216267,G__216268,G__216269,G__216270,G__216271,G__216272,G__216273,G__216274,G__216275,G__216276,G__216277,G__216278,G__216279,G__216280,G__216281,G__216282,G__216283) : tailrecursion.hoplon.pre.call(null,G__216254,G__216255,G__216256,G__216257,G__216258,G__216259,G__216260,G__216261,G__216262,G__216263,G__216264,G__216265,G__216266,G__216267,G__216268,G__216269,G__216270,G__216271,G__216272,G__216273,G__216274,G__216275,G__216276,G__216277,G__216278,G__216279,G__216280,G__216281,G__216282,G__216283));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__216252,G__216253) : tailrecursion.hoplon.div.call(null,G__216252,G__216253));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__216251) : tailrecursion.hoplon.div.call(null,G__216251));
})(),(function (){var G__216318 = cljs.core.PersistentArrayMap.EMPTY;
var G__216319 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we",(function (){var G__216320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__216321 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__216320,G__216321) : tailrecursion.hoplon.markdown.simple_node.call(null,G__216320,G__216321));
})(),"re ready to make our area and perimeter procedures."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216318,G__216319) : tailrecursion.hoplon.markdown.para_node.call(null,G__216318,G__216319));
})(),(function (){var G__216411 = (function (){var G__216412 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__216413 = (function (){var G__216414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__216415 = "(";
var G__216416 = (function (){var G__216457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__216458 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216457,G__216458) : tailrecursion.hoplon.span.call(null,G__216457,G__216458));
})();
var G__216417 = (function (){var G__216459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216460 = "area-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216459,G__216460) : tailrecursion.hoplon.span.call(null,G__216459,G__216460));
})();
var G__216418 = " [";
var G__216419 = (function (){var G__216461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216462 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216461,G__216462) : tailrecursion.hoplon.span.call(null,G__216461,G__216462));
})();
var G__216420 = "]\n  (";
var G__216421 = (function (){var G__216463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216464 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216463,G__216464) : tailrecursion.hoplon.span.call(null,G__216463,G__216464));
})();
var G__216422 = "(";
var G__216423 = (function (){var G__216465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216466 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216465,G__216466) : tailrecursion.hoplon.span.call(null,G__216465,G__216466));
})();
var G__216424 = " (";
var G__216425 = (function (){var G__216467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216468 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216467,G__216468) : tailrecursion.hoplon.span.call(null,G__216467,G__216468));
})();
var G__216426 = " ";
var G__216427 = (function (){var G__216469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216470 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216469,G__216470) : tailrecursion.hoplon.span.call(null,G__216469,G__216470));
})();
var G__216428 = "))\n     (";
var G__216429 = (function (){var G__216471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216472 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216471,G__216472) : tailrecursion.hoplon.span.call(null,G__216471,G__216472));
})();
var G__216430 = " (";
var G__216431 = (function (){var G__216473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216474 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216473,G__216474) : tailrecursion.hoplon.span.call(null,G__216473,G__216474));
})();
var G__216432 = " ";
var G__216433 = (function (){var G__216475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216476 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216475,G__216476) : tailrecursion.hoplon.span.call(null,G__216475,G__216476));
})();
var G__216434 = "))))\n(";
var G__216435 = (function (){var G__216477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__216478 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216477,G__216478) : tailrecursion.hoplon.span.call(null,G__216477,G__216478));
})();
var G__216436 = (function (){var G__216479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216480 = "perimeter-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216479,G__216480) : tailrecursion.hoplon.span.call(null,G__216479,G__216480));
})();
var G__216437 = " [";
var G__216438 = (function (){var G__216481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216482 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216481,G__216482) : tailrecursion.hoplon.span.call(null,G__216481,G__216482));
})();
var G__216439 = "]\n  (";
var G__216440 = (function (){var G__216483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216484 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216483,G__216484) : tailrecursion.hoplon.span.call(null,G__216483,G__216484));
})();
var G__216441 = (function (){var G__216485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__216486 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216485,G__216486) : tailrecursion.hoplon.span.call(null,G__216485,G__216486));
})();
var G__216442 = " (";
var G__216443 = (function (){var G__216487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216488 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216487,G__216488) : tailrecursion.hoplon.span.call(null,G__216487,G__216488));
})();
var G__216444 = "(";
var G__216445 = (function (){var G__216489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216490 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216489,G__216490) : tailrecursion.hoplon.span.call(null,G__216489,G__216490));
})();
var G__216446 = " (";
var G__216447 = (function (){var G__216491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216492 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216491,G__216492) : tailrecursion.hoplon.span.call(null,G__216491,G__216492));
})();
var G__216448 = " ";
var G__216449 = (function (){var G__216493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216494 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216493,G__216494) : tailrecursion.hoplon.span.call(null,G__216493,G__216494));
})();
var G__216450 = "))\n          (";
var G__216451 = (function (){var G__216495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216496 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216495,G__216496) : tailrecursion.hoplon.span.call(null,G__216495,G__216496));
})();
var G__216452 = " (";
var G__216453 = (function (){var G__216497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216498 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216497,G__216498) : tailrecursion.hoplon.span.call(null,G__216497,G__216498));
})();
var G__216454 = " ";
var G__216455 = (function (){var G__216499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216500 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216499,G__216500) : tailrecursion.hoplon.span.call(null,G__216499,G__216500));
})();
var G__216456 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43(G__216414,G__216415,G__216416,G__216417,G__216418,G__216419,G__216420,G__216421,G__216422,G__216423,G__216424,G__216425,G__216426,G__216427,G__216428,G__216429,G__216430,G__216431,G__216432,G__216433,G__216434,G__216435,G__216436,G__216437,G__216438,G__216439,G__216440,G__216441,G__216442,G__216443,G__216444,G__216445,G__216446,G__216447,G__216448,G__216449,G__216450,G__216451,G__216452,G__216453,G__216454,G__216455,G__216456) : tailrecursion.hoplon.pre.call(null,G__216414,G__216415,G__216416,G__216417,G__216418,G__216419,G__216420,G__216421,G__216422,G__216423,G__216424,G__216425,G__216426,G__216427,G__216428,G__216429,G__216430,G__216431,G__216432,G__216433,G__216434,G__216435,G__216436,G__216437,G__216438,G__216439,G__216440,G__216441,G__216442,G__216443,G__216444,G__216445,G__216446,G__216447,G__216448,G__216449,G__216450,G__216451,G__216452,G__216453,G__216454,G__216455,G__216456));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__216412,G__216413) : tailrecursion.hoplon.div.call(null,G__216412,G__216413));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__216411) : tailrecursion.hoplon.div.call(null,G__216411));
})(),(function (){var G__216501 = cljs.core.PersistentArrayMap.EMPTY;
var G__216502 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now, if our implementation for rectangles were something different, like:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216501,G__216502) : tailrecursion.hoplon.markdown.para_node.call(null,G__216501,G__216502));
})(),(function (){var G__216552 = (function (){var G__216553 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__216554 = (function (){var G__216555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__216556 = "(";
var G__216557 = (function (){var G__216578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__216579 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216578,G__216579) : tailrecursion.hoplon.span.call(null,G__216578,G__216579));
})();
var G__216558 = (function (){var G__216580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216581 = "make-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216580,G__216581) : tailrecursion.hoplon.span.call(null,G__216580,G__216581));
})();
var G__216559 = " [";
var G__216560 = (function (){var G__216582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216583 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216582,G__216583) : tailrecursion.hoplon.span.call(null,G__216582,G__216583));
})();
var G__216561 = " ";
var G__216562 = (function (){var G__216584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216585 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216584,G__216585) : tailrecursion.hoplon.span.call(null,G__216584,G__216585));
})();
var G__216563 = " ";
var G__216564 = (function (){var G__216586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216587 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216586,G__216587) : tailrecursion.hoplon.span.call(null,G__216586,G__216587));
})();
var G__216565 = "]\n  (";
var G__216566 = (function (){var G__216588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216589 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216588,G__216589) : tailrecursion.hoplon.span.call(null,G__216588,G__216589));
})();
var G__216567 = "(";
var G__216568 = (function (){var G__216590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216591 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216590,G__216591) : tailrecursion.hoplon.span.call(null,G__216590,G__216591));
})();
var G__216569 = (function (){var G__216592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216593 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216592,G__216593) : tailrecursion.hoplon.span.call(null,G__216592,G__216593));
})();
var G__216570 = " ";
var G__216571 = (function (){var G__216594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216595 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216594,G__216595) : tailrecursion.hoplon.span.call(null,G__216594,G__216595));
})();
var G__216572 = ") (";
var G__216573 = (function (){var G__216596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216597 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216596,G__216597) : tailrecursion.hoplon.span.call(null,G__216596,G__216597));
})();
var G__216574 = (function (){var G__216598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216599 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216598,G__216599) : tailrecursion.hoplon.span.call(null,G__216598,G__216599));
})();
var G__216575 = " ";
var G__216576 = (function (){var G__216600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216601 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216600,G__216601) : tailrecursion.hoplon.span.call(null,G__216600,G__216601));
})();
var G__216577 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__216555,G__216556,G__216557,G__216558,G__216559,G__216560,G__216561,G__216562,G__216563,G__216564,G__216565,G__216566,G__216567,G__216568,G__216569,G__216570,G__216571,G__216572,G__216573,G__216574,G__216575,G__216576,G__216577) : tailrecursion.hoplon.pre.call(null,G__216555,G__216556,G__216557,G__216558,G__216559,G__216560,G__216561,G__216562,G__216563,G__216564,G__216565,G__216566,G__216567,G__216568,G__216569,G__216570,G__216571,G__216572,G__216573,G__216574,G__216575,G__216576,G__216577));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__216553,G__216554) : tailrecursion.hoplon.div.call(null,G__216553,G__216554));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__216552) : tailrecursion.hoplon.div.call(null,G__216552));
})(),(function (){var G__216602 = cljs.core.PersistentArrayMap.EMPTY;
var G__216603 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In this representation, we",(function (){var G__216604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__216605 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__216604,G__216605) : tailrecursion.hoplon.markdown.simple_node.call(null,G__216604,G__216605));
})(),"re defining rectangles by their sides rather than by their vertices. Let",(function (){var G__216606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__216607 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__216606,G__216607) : tailrecursion.hoplon.markdown.simple_node.call(null,G__216606,G__216607));
})(),"s see how things must change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216602,G__216603) : tailrecursion.hoplon.markdown.para_node.call(null,G__216602,G__216603));
})(),(function (){var G__216648 = (function (){var G__216649 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__216650 = (function (){var G__216651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__216652 = "(";
var G__216653 = (function (){var G__216669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__216670 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216669,G__216670) : tailrecursion.hoplon.span.call(null,G__216669,G__216670));
})();
var G__216654 = (function (){var G__216671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216672 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216671,G__216672) : tailrecursion.hoplon.span.call(null,G__216671,G__216672));
})();
var G__216655 = " [";
var G__216656 = (function (){var G__216673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216674 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216673,G__216674) : tailrecursion.hoplon.span.call(null,G__216673,G__216674));
})();
var G__216657 = "]\n  (";
var G__216658 = (function (){var G__216675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216676 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216675,G__216676) : tailrecursion.hoplon.span.call(null,G__216675,G__216676));
})();
var G__216659 = (function (){var G__216677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216678 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216677,G__216678) : tailrecursion.hoplon.span.call(null,G__216677,G__216678));
})();
var G__216660 = "))\n(";
var G__216661 = (function (){var G__216679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__216680 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216679,G__216680) : tailrecursion.hoplon.span.call(null,G__216679,G__216680));
})();
var G__216662 = (function (){var G__216681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216682 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216681,G__216682) : tailrecursion.hoplon.span.call(null,G__216681,G__216682));
})();
var G__216663 = " [";
var G__216664 = (function (){var G__216683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216684 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216683,G__216684) : tailrecursion.hoplon.span.call(null,G__216683,G__216684));
})();
var G__216665 = "]\n  (";
var G__216666 = (function (){var G__216685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216686 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216685,G__216686) : tailrecursion.hoplon.span.call(null,G__216685,G__216686));
})();
var G__216667 = (function (){var G__216687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216688 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216687,G__216688) : tailrecursion.hoplon.span.call(null,G__216687,G__216688));
})();
var G__216668 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__216651,G__216652,G__216653,G__216654,G__216655,G__216656,G__216657,G__216658,G__216659,G__216660,G__216661,G__216662,G__216663,G__216664,G__216665,G__216666,G__216667,G__216668) : tailrecursion.hoplon.pre.call(null,G__216651,G__216652,G__216653,G__216654,G__216655,G__216656,G__216657,G__216658,G__216659,G__216660,G__216661,G__216662,G__216663,G__216664,G__216665,G__216666,G__216667,G__216668));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__216649,G__216650) : tailrecursion.hoplon.div.call(null,G__216649,G__216650));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__216648) : tailrecursion.hoplon.div.call(null,G__216648));
})(),(function (){var G__216689 = cljs.core.PersistentArrayMap.EMPTY;
var G__216690 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then everything else works just fine."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216689,G__216690) : tailrecursion.hoplon.markdown.para_node.call(null,G__216689,G__216690));
})(),(function (){var G__216691 = cljs.core.PersistentArrayMap.EMPTY;
var G__216692 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: if we wanted to check to make sure that the points were in fact vertices of a rectangle, we could just add an ",(function (){var G__216693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"if"], null);
var G__216694 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216693,G__216694) : tailrecursion.hoplon.markdown.code_node.call(null,G__216693,G__216694));
})()," statement to our definition of ",(function (){var G__216695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rectangle"], null);
var G__216696 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216695,G__216696) : tailrecursion.hoplon.markdown.code_node.call(null,G__216695,G__216696));
})()," such that if it passes the Pythagorean test "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216691,G__216692) : tailrecursion.hoplon.markdown.para_node.call(null,G__216691,G__216692));
})(),(function (){var G__216745 = (function (){var G__216746 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__216747 = (function (){var G__216748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__216749 = "(";
var G__216750 = (function (){var G__216772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216773 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216772,G__216773) : tailrecursion.hoplon.span.call(null,G__216772,G__216773));
})();
var G__216751 = "(";
var G__216752 = (function (){var G__216774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216775 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216774,G__216775) : tailrecursion.hoplon.span.call(null,G__216774,G__216775));
})();
var G__216753 = " (";
var G__216754 = (function (){var G__216776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216777 = "diagonal-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216776,G__216777) : tailrecursion.hoplon.span.call(null,G__216776,G__216777));
})();
var G__216755 = " ";
var G__216756 = (function (){var G__216778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216779 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216778,G__216779) : tailrecursion.hoplon.span.call(null,G__216778,G__216779));
})();
var G__216757 = ")) \n   (";
var G__216758 = (function (){var G__216780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216781 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216780,G__216781) : tailrecursion.hoplon.span.call(null,G__216780,G__216781));
})();
var G__216759 = "(";
var G__216760 = (function (){var G__216782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216783 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216782,G__216783) : tailrecursion.hoplon.span.call(null,G__216782,G__216783));
})();
var G__216761 = " (";
var G__216762 = (function (){var G__216784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216785 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216784,G__216785) : tailrecursion.hoplon.span.call(null,G__216784,G__216785));
})();
var G__216763 = " ";
var G__216764 = (function (){var G__216786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216787 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216786,G__216787) : tailrecursion.hoplon.span.call(null,G__216786,G__216787));
})();
var G__216765 = ")) \n      (";
var G__216766 = (function (){var G__216788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216789 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216788,G__216789) : tailrecursion.hoplon.span.call(null,G__216788,G__216789));
})();
var G__216767 = " (";
var G__216768 = (function (){var G__216790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216791 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216790,G__216791) : tailrecursion.hoplon.span.call(null,G__216790,G__216791));
})();
var G__216769 = " ";
var G__216770 = (function (){var G__216792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216793 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216792,G__216793) : tailrecursion.hoplon.span.call(null,G__216792,G__216793));
})();
var G__216771 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24(G__216748,G__216749,G__216750,G__216751,G__216752,G__216753,G__216754,G__216755,G__216756,G__216757,G__216758,G__216759,G__216760,G__216761,G__216762,G__216763,G__216764,G__216765,G__216766,G__216767,G__216768,G__216769,G__216770,G__216771) : tailrecursion.hoplon.pre.call(null,G__216748,G__216749,G__216750,G__216751,G__216752,G__216753,G__216754,G__216755,G__216756,G__216757,G__216758,G__216759,G__216760,G__216761,G__216762,G__216763,G__216764,G__216765,G__216766,G__216767,G__216768,G__216769,G__216770,G__216771));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__216746,G__216747) : tailrecursion.hoplon.div.call(null,G__216746,G__216747));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__216745) : tailrecursion.hoplon.div.call(null,G__216745));
})(),(function (){var G__216794 = cljs.core.PersistentArrayMap.EMPTY;
var G__216795 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Where ",(function (){var G__216796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"diagonal-rectangle"], null);
var G__216797 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216796,G__216797) : tailrecursion.hoplon.markdown.code_node.call(null,G__216796,G__216797));
})()," would be defined in the necessary way to get what should be the diagonal of the rectangle."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216794,G__216795) : tailrecursion.hoplon.markdown.para_node.call(null,G__216794,G__216795));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_215832;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_215831;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_215830;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_215829;
}})()], 0))], 0))], 0));
var G__212502 = "";
var G__212503 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"What is Meant by Data?"], null),(function (){var _STAR_references_STAR_216798 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_216799 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_216800 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_216801 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__216802 = cljs.core.PersistentArrayMap.EMPTY;
var G__216803 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We began the rational-number implementation in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/sect/1/sub/1/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.1.1"], null)], 0))," by implementing the rational-number operations ",(function (){var G__216804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__216805 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216804,G__216805) : tailrecursion.hoplon.markdown.code_node.call(null,G__216804,G__216805));
})(),", ",(function (){var G__216806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-rat"], null);
var G__216807 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216806,G__216807) : tailrecursion.hoplon.markdown.code_node.call(null,G__216806,G__216807));
})(),", and so on in terms of three unspecified procedures: ",(function (){var G__216808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__216809 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216808,G__216809) : tailrecursion.hoplon.markdown.code_node.call(null,G__216808,G__216809));
})(),", ",(function (){var G__216810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__216811 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216810,G__216811) : tailrecursion.hoplon.markdown.code_node.call(null,G__216810,G__216811));
})(),", and ",(function (){var G__216812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__216813 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216812,G__216813) : tailrecursion.hoplon.markdown.code_node.call(null,G__216812,G__216813));
})(),". At that point, we could think of the operations as being defined in terms of data objects ",(function (){var G__216814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__216815 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__216814,G__216815) : tailrecursion.hoplon.markdown.simple_node.call(null,G__216814,G__216815));
})()," numerators, denominators, and rational numbers ",(function (){var G__216816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__216817 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__216816,G__216817) : tailrecursion.hoplon.markdown.simple_node.call(null,G__216816,G__216817));
})()," whose behavior was specified by the latter three procedures."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216802,G__216803) : tailrecursion.hoplon.markdown.para_node.call(null,G__216802,G__216803));
})(),(function (){var G__216818 = cljs.core.PersistentArrayMap.EMPTY;
var G__216819 = cljs.core.PersistentVector.fromArray(["But exactly what is meant by ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null)], 0)),"? It is not enough to say ",(function (){var G__216820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__216821 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["whatever is implemented by the given selectors and constructors."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__216820,G__216821) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__216820,G__216821));
})()," Clearly, not every arbitrary set of three procedures can serve as an appropriate basis for the rational-number implementation. We need to guarantee that, if we construct a rational number ",(function (){var G__216822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__216823 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216822,G__216823) : tailrecursion.hoplon.markdown.code_node.call(null,G__216822,G__216823));
})()," from a pair of integers ",(function (){var G__216824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__216825 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216824,G__216825) : tailrecursion.hoplon.markdown.code_node.call(null,G__216824,G__216825));
})()," and ",(function (){var G__216826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"d"], null);
var G__216827 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216826,G__216827) : tailrecursion.hoplon.markdown.code_node.call(null,G__216826,G__216827));
})(),", then extracting the ",(function (){var G__216828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__216829 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216828,G__216829) : tailrecursion.hoplon.markdown.code_node.call(null,G__216828,G__216829));
})()," and the ",(function (){var G__216830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__216831 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216830,G__216831) : tailrecursion.hoplon.markdown.code_node.call(null,G__216830,G__216831));
})()," of ",(function (){var G__216832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__216833 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216832,G__216833) : tailrecursion.hoplon.markdown.code_node.call(null,G__216832,G__216833));
})()," and dividing them should yield the same result as dividing ",(function (){var G__216834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__216835 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216834,G__216835) : tailrecursion.hoplon.markdown.code_node.call(null,G__216834,G__216835));
})()," by ",(function (){var G__216836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"d"], null);
var G__216837 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216836,G__216837) : tailrecursion.hoplon.markdown.code_node.call(null,G__216836,G__216837));
})(),". In other words, ",(function (){var G__216838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__216839 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216838,G__216839) : tailrecursion.hoplon.markdown.code_node.call(null,G__216838,G__216839));
})(),", ",(function (){var G__216840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__216841 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216840,G__216841) : tailrecursion.hoplon.markdown.code_node.call(null,G__216840,G__216841));
})(),", and ",(function (){var G__216842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__216843 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216842,G__216843) : tailrecursion.hoplon.markdown.code_node.call(null,G__216842,G__216843));
})()," must satisfy the condition that, for any integer ",(function (){var G__216844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__216845 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216844,G__216845) : tailrecursion.hoplon.markdown.code_node.call(null,G__216844,G__216845));
})()," and any non-zero integer ",(function (){var G__216846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"d"], null);
var G__216847 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216846,G__216847) : tailrecursion.hoplon.markdown.code_node.call(null,G__216846,G__216847));
})(),", if ",(function (){var G__216848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__216849 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216848,G__216849) : tailrecursion.hoplon.markdown.code_node.call(null,G__216848,G__216849));
})()," is ",(function (){var G__216850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(make-rat n d)"], null);
var G__216851 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216850,G__216851) : tailrecursion.hoplon.markdown.code_node.call(null,G__216850,G__216851));
})(),", then"], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216818,G__216819) : tailrecursion.hoplon.markdown.para_node.call(null,G__216818,G__216819));
})(),(function (){var G__216852 = cljs.core.PersistentArrayMap.EMPTY;
var G__216853 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{\\text{(numer x)}}{\\text{(denom x)}}=\\frac{\\text{n}}{\\text{d}}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216852,G__216853) : tailrecursion.hoplon.markdown.para_node.call(null,G__216852,G__216853));
})(),(function (){var G__216854 = cljs.core.PersistentArrayMap.EMPTY;
var G__216855 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In fact, this is the only condition ",(function (){var G__216856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__216857 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216856,G__216857) : tailrecursion.hoplon.markdown.code_node.call(null,G__216856,G__216857));
})(),", ",(function (){var G__216858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__216859 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216858,G__216859) : tailrecursion.hoplon.markdown.code_node.call(null,G__216858,G__216859));
})()," and ",(function (){var G__216860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__216861 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216860,G__216861) : tailrecursion.hoplon.markdown.code_node.call(null,G__216860,G__216861));
})()," must fulfill in order to form a suitable basis for a rational-number representation. In general, we can think of data as defined by some collection of selectors and constructors, together with specified conditions that these procedures must fulfill in order to be a valid representation.",(function (){var G__216862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__216863 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Surprisingly, this idea is very difficult to formulate rigorously. There are two approaches to giving such a formulation. One, pioneered by C. A. R. Hoare (1972), is known as the method of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstract models"], null)], 0)),". It formalizes the ",(function (){var G__216864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__216865 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["procedures plus conditions"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__216864,G__216865) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__216864,G__216865));
})()," specification as outlined in the rational-number example above. Note that the condition on the rational-number representation was stated in terms of facts about integers (equality and division). In general, abstract models define new kinds of data objects in terms of previously defined types of data objects. Assertions about data objects can therefore be checked by reducing them to assertions about previously defined data objects. Another approach, introduced by Zilles at MIT, by Goguen, Thatcher, Wagner, and Wright at IBM (see Thatcher, Wagner, and Wright 1978), and by Guttag at Toronto (see Guttag 1977), is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["algebraic specification"], null)], 0)),". It regards the ",(function (){var G__216866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__216867 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["procedures"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__216866,G__216867) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__216866,G__216867));
})()," as elements of an abstract algebraic system whose behavior is specified by axioms that correspond to our ",(function (){var G__216868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__216869 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["conditions,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__216868,G__216869) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__216868,G__216869));
})()," and uses the techniques of abstract algebra to check assertions about data objects. Both methods are surveyed in the paper by Liskov and Zilles (1975)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__216862,G__216863) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__216862,G__216863));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216854,G__216855) : tailrecursion.hoplon.markdown.para_node.call(null,G__216854,G__216855));
})(),(function (){var G__216870 = cljs.core.PersistentArrayMap.EMPTY;
var G__216871 = cljs.core.PersistentVector.fromArray(["This point of view can serve to define not only ",(function (){var G__216872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__216873 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["high-level"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__216872,G__216873) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__216872,G__216873));
})()," data objects, such as rational numbers, but lower-level objects as well. Consider the notion of a list or a pair (a list of two elements), which we used in order to define our rational numbers. We never actually said what these were, only that the language supplied procedures ",(function (){var G__216874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__216875 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216874,G__216875) : tailrecursion.hoplon.markdown.code_node.call(null,G__216874,G__216875));
})(),", ",(function (){var G__216876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__216877 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216876,G__216877) : tailrecursion.hoplon.markdown.code_node.call(null,G__216876,G__216877));
})(),", and ",(function (){var G__216878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__216879 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216878,G__216879) : tailrecursion.hoplon.markdown.code_node.call(null,G__216878,G__216879));
})()," for operating on them. But the only thing we need to know about these three operations is that if we glue two objects together using ",(function (){var G__216880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__216881 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216880,G__216881) : tailrecursion.hoplon.markdown.code_node.call(null,G__216880,G__216881));
})()," or ",(function (){var G__216882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__216883 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216882,G__216883) : tailrecursion.hoplon.markdown.code_node.call(null,G__216882,G__216883));
})(),", we can retrieve the objects using ",(function (){var G__216884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__216885 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216884,G__216885) : tailrecursion.hoplon.markdown.code_node.call(null,G__216884,G__216885));
})(),", ",(function (){var G__216886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__216887 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216886,G__216887) : tailrecursion.hoplon.markdown.code_node.call(null,G__216886,G__216887));
})(),", ",(function (){var G__216888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__216889 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216888,G__216889) : tailrecursion.hoplon.markdown.code_node.call(null,G__216888,G__216889));
})()," and ",(function (){var G__216890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nth"], null);
var G__216891 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216890,G__216891) : tailrecursion.hoplon.markdown.code_node.call(null,G__216890,G__216891));
})(),". That is, the operations satisfy the condition that, for any objects ",(function (){var G__216892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__216893 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216892,G__216893) : tailrecursion.hoplon.markdown.code_node.call(null,G__216892,G__216893));
})()," and ",(function (){var G__216894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y"], null);
var G__216895 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216894,G__216895) : tailrecursion.hoplon.markdown.code_node.call(null,G__216894,G__216895));
})(),", if ",(function (){var G__216896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"z"], null);
var G__216897 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216896,G__216897) : tailrecursion.hoplon.markdown.code_node.call(null,G__216896,G__216897));
})()," is ",(function (){var G__216898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(list x y)"], null);
var G__216899 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216898,G__216899) : tailrecursion.hoplon.markdown.code_node.call(null,G__216898,G__216899));
})()," then ",(function (){var G__216900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first z)"], null);
var G__216901 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216900,G__216901) : tailrecursion.hoplon.markdown.code_node.call(null,G__216900,G__216901));
})()," is ",(function (){var G__216902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__216903 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216902,G__216903) : tailrecursion.hoplon.markdown.code_node.call(null,G__216902,G__216903));
})()," and ",(function (){var G__216904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(second z)"], null);
var G__216905 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216904,G__216905) : tailrecursion.hoplon.markdown.code_node.call(null,G__216904,G__216905));
})()," is ",(function (){var G__216906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y"], null);
var G__216907 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216906,G__216907) : tailrecursion.hoplon.markdown.code_node.call(null,G__216906,G__216907));
})(),". Indeed, we mentioned that these three procedures are included as primitives in our language. However, any triple of procedures that satisfies the above condition can be used as the basis for implementing pairs. This point is illustrated strikingly by the fact that we could implement ",(function (){var G__216908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__216909 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216908,G__216909) : tailrecursion.hoplon.markdown.code_node.call(null,G__216908,G__216909));
})(),", ",(function (){var G__216910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__216911 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216910,G__216911) : tailrecursion.hoplon.markdown.code_node.call(null,G__216910,G__216911));
})(),", and ",(function (){var G__216912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__216913 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216912,G__216913) : tailrecursion.hoplon.markdown.code_node.call(null,G__216912,G__216913));
})()," for lists without using any data structures at all but only using procedures. Here are the definitions:"], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216870,G__216871) : tailrecursion.hoplon.markdown.para_node.call(null,G__216870,G__216871));
})(),(function (){var G__217045 = (function (){var G__217046 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__217047 = (function (){var G__217048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__217049 = "(";
var G__217050 = (function (){var G__217111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217112 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217111,G__217112) : tailrecursion.hoplon.span.call(null,G__217111,G__217112));
})();
var G__217051 = (function (){var G__217113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217114 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217113,G__217114) : tailrecursion.hoplon.span.call(null,G__217113,G__217114));
})();
var G__217052 = "[";
var G__217053 = (function (){var G__217115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217116 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217115,G__217116) : tailrecursion.hoplon.span.call(null,G__217115,G__217116));
})();
var G__217054 = " ";
var G__217055 = (function (){var G__217117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217118 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217117,G__217118) : tailrecursion.hoplon.span.call(null,G__217117,G__217118));
})();
var G__217056 = "]\n  (";
var G__217057 = (function (){var G__217119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217120 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217119,G__217120) : tailrecursion.hoplon.span.call(null,G__217119,G__217120));
})();
var G__217058 = "[";
var G__217059 = (function (){var G__217121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217122 = "dispatch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217121,G__217122) : tailrecursion.hoplon.span.call(null,G__217121,G__217122));
})();
var G__217060 = " (";
var G__217061 = (function (){var G__217123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217124 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217123,G__217124) : tailrecursion.hoplon.span.call(null,G__217123,G__217124));
})();
var G__217062 = "[";
var G__217063 = (function (){var G__217125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217126 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217125,G__217126) : tailrecursion.hoplon.span.call(null,G__217125,G__217126));
})();
var G__217064 = "] (";
var G__217065 = (function (){var G__217127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217128 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217127,G__217128) : tailrecursion.hoplon.span.call(null,G__217127,G__217128));
})();
var G__217066 = "(";
var G__217067 = (function (){var G__217129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217130 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217129,G__217130) : tailrecursion.hoplon.span.call(null,G__217129,G__217130));
})();
var G__217068 = (function (){var G__217131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217132 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217131,G__217132) : tailrecursion.hoplon.span.call(null,G__217131,G__217132));
})();
var G__217069 = " ";
var G__217070 = (function (){var G__217133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217134 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217133,G__217134) : tailrecursion.hoplon.span.call(null,G__217133,G__217134));
})();
var G__217071 = ") ";
var G__217072 = (function (){var G__217135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217136 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217135,G__217136) : tailrecursion.hoplon.span.call(null,G__217135,G__217136));
})();
var G__217073 = "\n                               (";
var G__217074 = (function (){var G__217137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217138 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217137,G__217138) : tailrecursion.hoplon.span.call(null,G__217137,G__217138));
})();
var G__217075 = (function (){var G__217139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217140 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217139,G__217140) : tailrecursion.hoplon.span.call(null,G__217139,G__217140));
})();
var G__217076 = " ";
var G__217077 = (function (){var G__217141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217142 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217141,G__217142) : tailrecursion.hoplon.span.call(null,G__217141,G__217142));
})();
var G__217078 = ") ";
var G__217079 = (function (){var G__217143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217144 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217143,G__217144) : tailrecursion.hoplon.span.call(null,G__217143,G__217144));
})();
var G__217080 = "\n                               ";
var G__217081 = (function (){var G__217145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217146 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217145,G__217146) : tailrecursion.hoplon.span.call(null,G__217145,G__217146));
})();
var G__217082 = " (";
var G__217083 = (function (){var G__217147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217148 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217147,G__217148) : tailrecursion.hoplon.span.call(null,G__217147,G__217148));
})();
var G__217084 = " (";
var G__217085 = (function (){var G__217149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217150 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217149,G__217150) : tailrecursion.hoplon.span.call(null,G__217149,G__217150));
})();
var G__217086 = " ";
var G__217087 = (function (){var G__217151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__217152 = "\"Argument not 0 or 1 -- CONS\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217151,G__217152) : tailrecursion.hoplon.span.call(null,G__217151,G__217152));
})();
var G__217088 = " ";
var G__217089 = (function (){var G__217153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217154 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217153,G__217154) : tailrecursion.hoplon.span.call(null,G__217153,G__217154));
})();
var G__217090 = "))))]\n    ";
var G__217091 = (function (){var G__217155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217156 = "dispatch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217155,G__217156) : tailrecursion.hoplon.span.call(null,G__217155,G__217156));
})();
var G__217092 = "))\n\n(";
var G__217093 = (function (){var G__217157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217158 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217157,G__217158) : tailrecursion.hoplon.span.call(null,G__217157,G__217158));
})();
var G__217094 = (function (){var G__217159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217160 = "car";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217159,G__217160) : tailrecursion.hoplon.span.call(null,G__217159,G__217160));
})();
var G__217095 = " [";
var G__217096 = (function (){var G__217161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217162 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217161,G__217162) : tailrecursion.hoplon.span.call(null,G__217161,G__217162));
})();
var G__217097 = "] (";
var G__217098 = (function (){var G__217163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217164 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217163,G__217164) : tailrecursion.hoplon.span.call(null,G__217163,G__217164));
})();
var G__217099 = " ";
var G__217100 = (function (){var G__217165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217166 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217165,G__217166) : tailrecursion.hoplon.span.call(null,G__217165,G__217166));
})();
var G__217101 = "))\n\n(";
var G__217102 = (function (){var G__217167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217168 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217167,G__217168) : tailrecursion.hoplon.span.call(null,G__217167,G__217168));
})();
var G__217103 = (function (){var G__217169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217170 = "cdr";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217169,G__217170) : tailrecursion.hoplon.span.call(null,G__217169,G__217170));
})();
var G__217104 = " [";
var G__217105 = (function (){var G__217171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217172 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217171,G__217172) : tailrecursion.hoplon.span.call(null,G__217171,G__217172));
})();
var G__217106 = "] (";
var G__217107 = (function (){var G__217173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217174 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217173,G__217174) : tailrecursion.hoplon.span.call(null,G__217173,G__217174));
})();
var G__217108 = " ";
var G__217109 = (function (){var G__217175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217176 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217175,G__217176) : tailrecursion.hoplon.span.call(null,G__217175,G__217176));
})();
var G__217110 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63(G__217048,G__217049,G__217050,G__217051,G__217052,G__217053,G__217054,G__217055,G__217056,G__217057,G__217058,G__217059,G__217060,G__217061,G__217062,G__217063,G__217064,G__217065,G__217066,G__217067,G__217068,G__217069,G__217070,G__217071,G__217072,G__217073,G__217074,G__217075,G__217076,G__217077,G__217078,G__217079,G__217080,G__217081,G__217082,G__217083,G__217084,G__217085,G__217086,G__217087,G__217088,G__217089,G__217090,G__217091,G__217092,G__217093,G__217094,G__217095,G__217096,G__217097,G__217098,G__217099,G__217100,G__217101,G__217102,G__217103,G__217104,G__217105,G__217106,G__217107,G__217108,G__217109,G__217110) : tailrecursion.hoplon.pre.call(null,G__217048,G__217049,G__217050,G__217051,G__217052,G__217053,G__217054,G__217055,G__217056,G__217057,G__217058,G__217059,G__217060,G__217061,G__217062,G__217063,G__217064,G__217065,G__217066,G__217067,G__217068,G__217069,G__217070,G__217071,G__217072,G__217073,G__217074,G__217075,G__217076,G__217077,G__217078,G__217079,G__217080,G__217081,G__217082,G__217083,G__217084,G__217085,G__217086,G__217087,G__217088,G__217089,G__217090,G__217091,G__217092,G__217093,G__217094,G__217095,G__217096,G__217097,G__217098,G__217099,G__217100,G__217101,G__217102,G__217103,G__217104,G__217105,G__217106,G__217107,G__217108,G__217109,G__217110));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__217046,G__217047) : tailrecursion.hoplon.div.call(null,G__217046,G__217047));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__217045) : tailrecursion.hoplon.div.call(null,G__217045));
})(),(function (){var G__217177 = cljs.core.PersistentArrayMap.EMPTY;
var G__217178 = new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In the above definitions I used ",(function (){var G__217179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__217180 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217179,G__217180) : tailrecursion.hoplon.markdown.code_node.call(null,G__217179,G__217180));
})(),", ",(function (){var G__217181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__217182 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217181,G__217182) : tailrecursion.hoplon.markdown.code_node.call(null,G__217181,G__217182));
})(),", and ",(function (){var G__217183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__217184 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217183,G__217184) : tailrecursion.hoplon.markdown.code_node.call(null,G__217183,G__217184));
})()," instead of ",(function (){var G__217185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__217186 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217185,G__217186) : tailrecursion.hoplon.markdown.code_node.call(null,G__217185,G__217186));
})(),", ",(function (){var G__217187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__217188 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217187,G__217188) : tailrecursion.hoplon.markdown.code_node.call(null,G__217187,G__217188));
})(),", and ",(function (){var G__217189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__217190 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217189,G__217190) : tailrecursion.hoplon.markdown.code_node.call(null,G__217189,G__217190));
})()," simply because I like to not deviate from the book whenever possible and it doesn",(function (){var G__217191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__217192 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__217191,G__217192) : tailrecursion.hoplon.markdown.simple_node.call(null,G__217191,G__217192));
})(),"t necessarily add anything to deviate. On the down side (of deviating from the text), this construction would not work if we used lists because lists can have any number of elements so we",(function (){var G__217193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__217194 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__217193,G__217194) : tailrecursion.hoplon.markdown.simple_node.call(null,G__217193,G__217194));
})(),"d have to use other methods to make it work. We digress",(function (){var G__217195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__217196 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__217195,G__217196) : tailrecursion.hoplon.markdown.simple_node.call(null,G__217195,G__217196));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__217177,G__217178) : tailrecursion.hoplon.markdown.para_node.call(null,G__217177,G__217178));
})(),(function (){var G__217197 = cljs.core.PersistentArrayMap.EMPTY;
var G__217198 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This use of procedures corresponds to nothing like our intuitive notion of what data should be. Nevertheless, all we need to do to show that this is a valid way to represent pairs is to verify that these procedures satisfy the condition given above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__217197,G__217198) : tailrecursion.hoplon.markdown.para_node.call(null,G__217197,G__217198));
})(),(function (){var G__217199 = cljs.core.PersistentArrayMap.EMPTY;
var G__217200 = cljs.core.PersistentVector.fromArray(["The subtle point to notice is that the value returned by ",(function (){var G__217201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(cons x y)"], null);
var G__217202 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217201,G__217202) : tailrecursion.hoplon.markdown.code_node.call(null,G__217201,G__217202));
})()," is a procedure ",(function (){var G__217203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__217204 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__217203,G__217204) : tailrecursion.hoplon.markdown.simple_node.call(null,G__217203,G__217204));
})()," namely the internally defined procedure ",(function (){var G__217205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"dispatch"], null);
var G__217206 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217205,G__217206) : tailrecursion.hoplon.markdown.code_node.call(null,G__217205,G__217206));
})(),", which takes one argument and returns either ",(function (){var G__217207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__217208 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217207,G__217208) : tailrecursion.hoplon.markdown.code_node.call(null,G__217207,G__217208));
})()," or ",(function (){var G__217209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y"], null);
var G__217210 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217209,G__217210) : tailrecursion.hoplon.markdown.code_node.call(null,G__217209,G__217210));
})()," depending on whether the argument is 0 or 1. Correspondingly, ",(function (){var G__217211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(car z)"], null);
var G__217212 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217211,G__217212) : tailrecursion.hoplon.markdown.code_node.call(null,G__217211,G__217212));
})()," is defined to apply ",(function (){var G__217213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"z"], null);
var G__217214 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217213,G__217214) : tailrecursion.hoplon.markdown.code_node.call(null,G__217213,G__217214));
})()," to 0. Hence, if ",(function (){var G__217215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"z"], null);
var G__217216 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217215,G__217216) : tailrecursion.hoplon.markdown.code_node.call(null,G__217215,G__217216));
})()," is the procedure formed by ",(function (){var G__217217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(cons x\ny)"], null);
var G__217218 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217217,G__217218) : tailrecursion.hoplon.markdown.code_node.call(null,G__217217,G__217218));
})(),", then ",(function (){var G__217219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"z"], null);
var G__217220 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217219,G__217220) : tailrecursion.hoplon.markdown.code_node.call(null,G__217219,G__217220));
})()," applied to 0 will yield ",(function (){var G__217221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__217222 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217221,G__217222) : tailrecursion.hoplon.markdown.code_node.call(null,G__217221,G__217222));
})(),". Thus, we have shown that ",(function (){var G__217223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(car (cons x y))"], null);
var G__217224 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217223,G__217224) : tailrecursion.hoplon.markdown.code_node.call(null,G__217223,G__217224));
})()," yields ",(function (){var G__217225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__217226 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217225,G__217226) : tailrecursion.hoplon.markdown.code_node.call(null,G__217225,G__217226));
})(),", as desired. Similarly, ",(function (){var G__217227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(cdr (cons x\ny))"], null);
var G__217228 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217227,G__217228) : tailrecursion.hoplon.markdown.code_node.call(null,G__217227,G__217228));
})()," applies the procedure returned by ",(function (){var G__217229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(cons x y)"], null);
var G__217230 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217229,G__217230) : tailrecursion.hoplon.markdown.code_node.call(null,G__217229,G__217230));
})()," to 1, which returns ",(function (){var G__217231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y"], null);
var G__217232 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217231,G__217232) : tailrecursion.hoplon.markdown.code_node.call(null,G__217231,G__217232));
})(),". Therefore, this procedural implementation of pairs is a valid implementation, and if we access pairs using only ",(function (){var G__217233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__217234 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217233,G__217234) : tailrecursion.hoplon.markdown.code_node.call(null,G__217233,G__217234));
})(),", ",(function (){var G__217235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__217236 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217235,G__217236) : tailrecursion.hoplon.markdown.code_node.call(null,G__217235,G__217236));
})(),", and ",(function (){var G__217237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__217238 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217237,G__217238) : tailrecursion.hoplon.markdown.code_node.call(null,G__217237,G__217238));
})()," we cannot distinguish this implementation from one that uses ",(function (){var G__217239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__217240 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["real"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__217239,G__217240) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__217239,G__217240));
})()," data structures."], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__217199,G__217200) : tailrecursion.hoplon.markdown.para_node.call(null,G__217199,G__217200));
})(),(function (){var G__217241 = cljs.core.PersistentArrayMap.EMPTY;
var G__217242 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The point of exhibiting the procedural representation of pairs is not that our language works this way (Scheme, and Lisp systems in general, implement pairs directly, and Clojure implements lists directly as Java objects, for efficiency reasons) but that it could work this way. The procedural representation, although obscure, is a perfectly adequate way to represent pairs, since it fulfills the only conditions that pairs need to fulfill. This example also demonstrates that the ability to manipulate procedures as objects automatically provides the ability to represent compound data. This may seem a curiosity now, but procedural representations of data will play a central role in our programming repertoire. This style of programming is often called message passing, and we will be using it as a basic tool in chapter 3 when we address the issues of modeling and simulation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__217241,G__217242) : tailrecursion.hoplon.markdown.para_node.call(null,G__217241,G__217242));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_216801;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_216800;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_216799;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_216798;
}})()], 0));
var G__212504 = "";
var G__212505 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_217243 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217244 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_217245 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217246 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__217247 = cljs.core.PersistentArrayMap.EMPTY;
var G__217248 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Here is an alternative procedural representation of pairs. For this representation, verify that (car (cons x y)) yields x for any objects x and y."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__217247,G__217248) : tailrecursion.hoplon.markdown.para_node.call(null,G__217247,G__217248));
})(),(function (){var G__217319 = (function (){var G__217320 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__217321 = (function (){var G__217322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__217323 = "(";
var G__217324 = (function (){var G__217356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217357 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217356,G__217357) : tailrecursion.hoplon.span.call(null,G__217356,G__217357));
})();
var G__217325 = (function (){var G__217358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217359 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217358,G__217359) : tailrecursion.hoplon.span.call(null,G__217358,G__217359));
})();
var G__217326 = "[";
var G__217327 = (function (){var G__217360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217361 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217360,G__217361) : tailrecursion.hoplon.span.call(null,G__217360,G__217361));
})();
var G__217328 = " ";
var G__217329 = (function (){var G__217362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217363 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217362,G__217363) : tailrecursion.hoplon.span.call(null,G__217362,G__217363));
})();
var G__217330 = "]\n  (";
var G__217331 = (function (){var G__217364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217365 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217364,G__217365) : tailrecursion.hoplon.span.call(null,G__217364,G__217365));
})();
var G__217332 = "[";
var G__217333 = (function (){var G__217366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217367 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217366,G__217367) : tailrecursion.hoplon.span.call(null,G__217366,G__217367));
})();
var G__217334 = "] (";
var G__217335 = (function (){var G__217368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217369 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217368,G__217369) : tailrecursion.hoplon.span.call(null,G__217368,G__217369));
})();
var G__217336 = " ";
var G__217337 = (function (){var G__217370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217371 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217370,G__217371) : tailrecursion.hoplon.span.call(null,G__217370,G__217371));
})();
var G__217338 = " ";
var G__217339 = (function (){var G__217372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217373 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217372,G__217373) : tailrecursion.hoplon.span.call(null,G__217372,G__217373));
})();
var G__217340 = ")))\n(";
var G__217341 = (function (){var G__217374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217375 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217374,G__217375) : tailrecursion.hoplon.span.call(null,G__217374,G__217375));
})();
var G__217342 = (function (){var G__217376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217377 = "car";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217376,G__217377) : tailrecursion.hoplon.span.call(null,G__217376,G__217377));
})();
var G__217343 = " [";
var G__217344 = (function (){var G__217378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217379 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217378,G__217379) : tailrecursion.hoplon.span.call(null,G__217378,G__217379));
})();
var G__217345 = "]\n  (";
var G__217346 = (function (){var G__217380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217381 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217380,G__217381) : tailrecursion.hoplon.span.call(null,G__217380,G__217381));
})();
var G__217347 = " (";
var G__217348 = (function (){var G__217382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217383 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217382,G__217383) : tailrecursion.hoplon.span.call(null,G__217382,G__217383));
})();
var G__217349 = "[";
var G__217350 = (function (){var G__217384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217385 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217384,G__217385) : tailrecursion.hoplon.span.call(null,G__217384,G__217385));
})();
var G__217351 = " ";
var G__217352 = (function (){var G__217386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217387 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217386,G__217387) : tailrecursion.hoplon.span.call(null,G__217386,G__217387));
})();
var G__217353 = "] ";
var G__217354 = (function (){var G__217388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217389 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217388,G__217389) : tailrecursion.hoplon.span.call(null,G__217388,G__217389));
})();
var G__217355 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34(G__217322,G__217323,G__217324,G__217325,G__217326,G__217327,G__217328,G__217329,G__217330,G__217331,G__217332,G__217333,G__217334,G__217335,G__217336,G__217337,G__217338,G__217339,G__217340,G__217341,G__217342,G__217343,G__217344,G__217345,G__217346,G__217347,G__217348,G__217349,G__217350,G__217351,G__217352,G__217353,G__217354,G__217355) : tailrecursion.hoplon.pre.call(null,G__217322,G__217323,G__217324,G__217325,G__217326,G__217327,G__217328,G__217329,G__217330,G__217331,G__217332,G__217333,G__217334,G__217335,G__217336,G__217337,G__217338,G__217339,G__217340,G__217341,G__217342,G__217343,G__217344,G__217345,G__217346,G__217347,G__217348,G__217349,G__217350,G__217351,G__217352,G__217353,G__217354,G__217355));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__217320,G__217321) : tailrecursion.hoplon.div.call(null,G__217320,G__217321));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__217319) : tailrecursion.hoplon.div.call(null,G__217319));
})(),(function (){var G__217390 = cljs.core.PersistentArrayMap.EMPTY;
var G__217391 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What is the corresponding definition of ",(function (){var G__217392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__217393 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217392,G__217393) : tailrecursion.hoplon.markdown.code_node.call(null,G__217392,G__217393));
})(),"? (Hint: To verify that ths works, make use of the substitution model of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/1/sub/5/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.1.5"], null)], 0)),".)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__217390,G__217391) : tailrecursion.hoplon.markdown.para_node.call(null,G__217390,G__217391));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217246;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217245;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217244;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217243;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_217394 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217395 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_217396 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217397 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__217433 = (function (){var G__217434 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__217435 = (function (){var G__217436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__217437 = "(";
var G__217438 = (function (){var G__217453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217454 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217453,G__217454) : tailrecursion.hoplon.span.call(null,G__217453,G__217454));
})();
var G__217439 = (function (){var G__217455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217456 = "cdr";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217455,G__217456) : tailrecursion.hoplon.span.call(null,G__217455,G__217456));
})();
var G__217440 = " [";
var G__217441 = (function (){var G__217457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217458 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217457,G__217458) : tailrecursion.hoplon.span.call(null,G__217457,G__217458));
})();
var G__217442 = "]\n  (";
var G__217443 = (function (){var G__217459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217460 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217459,G__217460) : tailrecursion.hoplon.span.call(null,G__217459,G__217460));
})();
var G__217444 = " (";
var G__217445 = (function (){var G__217461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217462 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217461,G__217462) : tailrecursion.hoplon.span.call(null,G__217461,G__217462));
})();
var G__217446 = "[";
var G__217447 = (function (){var G__217463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217464 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217463,G__217464) : tailrecursion.hoplon.span.call(null,G__217463,G__217464));
})();
var G__217448 = " ";
var G__217449 = (function (){var G__217465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217466 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217465,G__217466) : tailrecursion.hoplon.span.call(null,G__217465,G__217466));
})();
var G__217450 = "] ";
var G__217451 = (function (){var G__217467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217468 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217467,G__217468) : tailrecursion.hoplon.span.call(null,G__217467,G__217468));
})();
var G__217452 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__217436,G__217437,G__217438,G__217439,G__217440,G__217441,G__217442,G__217443,G__217444,G__217445,G__217446,G__217447,G__217448,G__217449,G__217450,G__217451,G__217452) : tailrecursion.hoplon.pre.call(null,G__217436,G__217437,G__217438,G__217439,G__217440,G__217441,G__217442,G__217443,G__217444,G__217445,G__217446,G__217447,G__217448,G__217449,G__217450,G__217451,G__217452));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__217434,G__217435) : tailrecursion.hoplon.div.call(null,G__217434,G__217435));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__217433) : tailrecursion.hoplon.div.call(null,G__217433));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217397;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217396;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217395;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217394;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_217469 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217470 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_217471 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217472 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__217473 = cljs.core.PersistentArrayMap.EMPTY;
var G__217474 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Show that we can represent pairs of nonnegative integers using only numbers and arithmetic operations if we represent the pair \\(a\\) and \\(b\\) as the integer that is the product \\(2^a3^b\\). Give the corresponding definitions of the procedures ",(function (){var G__217475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__217476 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217475,G__217476) : tailrecursion.hoplon.markdown.code_node.call(null,G__217475,G__217476));
})(),", ",(function (){var G__217477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__217478 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217477,G__217478) : tailrecursion.hoplon.markdown.code_node.call(null,G__217477,G__217478));
})(),", and ",(function (){var G__217479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__217480 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217479,G__217480) : tailrecursion.hoplon.markdown.code_node.call(null,G__217479,G__217480));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__217473,G__217474) : tailrecursion.hoplon.markdown.para_node.call(null,G__217473,G__217474));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217472;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217471;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217470;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217469;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_217481 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217482 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_217483 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217484 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__217694 = (function (){var G__217695 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__217696 = (function (){var G__217697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__217698 = "(";
var G__217699 = (function (){var G__217798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217799 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217798,G__217799) : tailrecursion.hoplon.span.call(null,G__217798,G__217799));
})();
var G__217700 = (function (){var G__217800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217801 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217800,G__217801) : tailrecursion.hoplon.span.call(null,G__217800,G__217801));
})();
var G__217701 = "[";
var G__217702 = (function (){var G__217802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217803 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217802,G__217803) : tailrecursion.hoplon.span.call(null,G__217802,G__217803));
})();
var G__217703 = " ";
var G__217704 = (function (){var G__217804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217805 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217804,G__217805) : tailrecursion.hoplon.span.call(null,G__217804,G__217805));
})();
var G__217705 = "]\n  (";
var G__217706 = (function (){var G__217806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217807 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217806,G__217807) : tailrecursion.hoplon.span.call(null,G__217806,G__217807));
})();
var G__217707 = "(";
var G__217708 = (function (){var G__217808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217809 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217808,G__217809) : tailrecursion.hoplon.span.call(null,G__217808,G__217809));
})();
var G__217709 = " ";
var G__217710 = (function (){var G__217810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217811 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217810,G__217811) : tailrecursion.hoplon.span.call(null,G__217810,G__217811));
})();
var G__217711 = " ";
var G__217712 = (function (){var G__217812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217813 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217812,G__217813) : tailrecursion.hoplon.span.call(null,G__217812,G__217813));
})();
var G__217713 = ") (";
var G__217714 = (function (){var G__217814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217815 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217814,G__217815) : tailrecursion.hoplon.span.call(null,G__217814,G__217815));
})();
var G__217715 = " ";
var G__217716 = (function (){var G__217816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217817 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217816,G__217817) : tailrecursion.hoplon.span.call(null,G__217816,G__217817));
})();
var G__217717 = " ";
var G__217718 = (function (){var G__217818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217819 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217818,G__217819) : tailrecursion.hoplon.span.call(null,G__217818,G__217819));
})();
var G__217719 = ")))\n(";
var G__217720 = (function (){var G__217820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217821 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217820,G__217821) : tailrecursion.hoplon.span.call(null,G__217820,G__217821));
})();
var G__217721 = (function (){var G__217822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217823 = "car";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217822,G__217823) : tailrecursion.hoplon.span.call(null,G__217822,G__217823));
})();
var G__217722 = " [";
var G__217723 = (function (){var G__217824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217825 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217824,G__217825) : tailrecursion.hoplon.span.call(null,G__217824,G__217825));
})();
var G__217724 = "]\n  (";
var G__217725 = (function (){var G__217826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217827 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217826,G__217827) : tailrecursion.hoplon.span.call(null,G__217826,G__217827));
})();
var G__217726 = "[";
var G__217727 = (function (){var G__217828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217829 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217828,G__217829) : tailrecursion.hoplon.span.call(null,G__217828,G__217829));
})();
var G__217728 = "    ";
var G__217729 = (function (){var G__217830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217831 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217830,G__217831) : tailrecursion.hoplon.span.call(null,G__217830,G__217831));
})();
var G__217730 = "\n         ";
var G__217731 = (function (){var G__217832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217833 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217832,G__217833) : tailrecursion.hoplon.span.call(null,G__217832,G__217833));
})();
var G__217732 = " ";
var G__217733 = (function (){var G__217834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217835 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217834,G__217835) : tailrecursion.hoplon.span.call(null,G__217834,G__217835));
})();
var G__217734 = "]\n    (";
var G__217735 = (function (){var G__217836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217837 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217836,G__217837) : tailrecursion.hoplon.span.call(null,G__217836,G__217837));
})();
var G__217736 = "(";
var G__217737 = (function (){var G__217838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217839 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217838,G__217839) : tailrecursion.hoplon.span.call(null,G__217838,G__217839));
})();
var G__217738 = "(";
var G__217739 = (function (){var G__217840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217841 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217840,G__217841) : tailrecursion.hoplon.span.call(null,G__217840,G__217841));
})();
var G__217740 = " ";
var G__217741 = (function (){var G__217842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217843 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217842,G__217843) : tailrecursion.hoplon.span.call(null,G__217842,G__217843));
})();
var G__217742 = " ";
var G__217743 = (function (){var G__217844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217845 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217844,G__217845) : tailrecursion.hoplon.span.call(null,G__217844,G__217845));
})();
var G__217744 = ") ";
var G__217745 = (function (){var G__217846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217847 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217846,G__217847) : tailrecursion.hoplon.span.call(null,G__217846,G__217847));
})();
var G__217746 = ")\n        (";
var G__217747 = (function (){var G__217848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217849 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217848,G__217849) : tailrecursion.hoplon.span.call(null,G__217848,G__217849));
})();
var G__217748 = " (";
var G__217749 = (function (){var G__217850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217851 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217850,G__217851) : tailrecursion.hoplon.span.call(null,G__217850,G__217851));
})();
var G__217750 = (function (){var G__217852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217853 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217852,G__217853) : tailrecursion.hoplon.span.call(null,G__217852,G__217853));
})();
var G__217751 = " ";
var G__217752 = (function (){var G__217854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217855 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217854,G__217855) : tailrecursion.hoplon.span.call(null,G__217854,G__217855));
})();
var G__217753 = ") (";
var G__217754 = (function (){var G__217856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217857 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217856,G__217857) : tailrecursion.hoplon.span.call(null,G__217856,G__217857));
})();
var G__217755 = (function (){var G__217858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217859 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217858,G__217859) : tailrecursion.hoplon.span.call(null,G__217858,G__217859));
})();
var G__217756 = "))\n        ";
var G__217757 = (function (){var G__217860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217861 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217860,G__217861) : tailrecursion.hoplon.span.call(null,G__217860,G__217861));
})();
var G__217758 = ")))\n(";
var G__217759 = (function (){var G__217862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217863 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217862,G__217863) : tailrecursion.hoplon.span.call(null,G__217862,G__217863));
})();
var G__217760 = (function (){var G__217864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217865 = "cdr";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217864,G__217865) : tailrecursion.hoplon.span.call(null,G__217864,G__217865));
})();
var G__217761 = " [";
var G__217762 = (function (){var G__217866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217867 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217866,G__217867) : tailrecursion.hoplon.span.call(null,G__217866,G__217867));
})();
var G__217763 = "]\n  (";
var G__217764 = (function (){var G__217868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217869 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217868,G__217869) : tailrecursion.hoplon.span.call(null,G__217868,G__217869));
})();
var G__217765 = "[";
var G__217766 = (function (){var G__217870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217871 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217870,G__217871) : tailrecursion.hoplon.span.call(null,G__217870,G__217871));
})();
var G__217767 = "    ";
var G__217768 = (function (){var G__217872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217873 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217872,G__217873) : tailrecursion.hoplon.span.call(null,G__217872,G__217873));
})();
var G__217769 = "\n         ";
var G__217770 = (function (){var G__217874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217875 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217874,G__217875) : tailrecursion.hoplon.span.call(null,G__217874,G__217875));
})();
var G__217771 = " ";
var G__217772 = (function (){var G__217876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217877 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217876,G__217877) : tailrecursion.hoplon.span.call(null,G__217876,G__217877));
})();
var G__217773 = "]\n    (";
var G__217774 = (function (){var G__217878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217879 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217878,G__217879) : tailrecursion.hoplon.span.call(null,G__217878,G__217879));
})();
var G__217775 = "(";
var G__217776 = (function (){var G__217880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217881 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217880,G__217881) : tailrecursion.hoplon.span.call(null,G__217880,G__217881));
})();
var G__217777 = "(";
var G__217778 = (function (){var G__217882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217883 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217882,G__217883) : tailrecursion.hoplon.span.call(null,G__217882,G__217883));
})();
var G__217779 = " ";
var G__217780 = (function (){var G__217884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217885 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217884,G__217885) : tailrecursion.hoplon.span.call(null,G__217884,G__217885));
})();
var G__217781 = " ";
var G__217782 = (function (){var G__217886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217887 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217886,G__217887) : tailrecursion.hoplon.span.call(null,G__217886,G__217887));
})();
var G__217783 = ") ";
var G__217784 = (function (){var G__217888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217889 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217888,G__217889) : tailrecursion.hoplon.span.call(null,G__217888,G__217889));
})();
var G__217785 = ")\n        (";
var G__217786 = (function (){var G__217890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217891 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217890,G__217891) : tailrecursion.hoplon.span.call(null,G__217890,G__217891));
})();
var G__217787 = " (";
var G__217788 = (function (){var G__217892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217893 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217892,G__217893) : tailrecursion.hoplon.span.call(null,G__217892,G__217893));
})();
var G__217789 = (function (){var G__217894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217895 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217894,G__217895) : tailrecursion.hoplon.span.call(null,G__217894,G__217895));
})();
var G__217790 = " ";
var G__217791 = (function (){var G__217896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217897 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217896,G__217897) : tailrecursion.hoplon.span.call(null,G__217896,G__217897));
})();
var G__217792 = ") (";
var G__217793 = (function (){var G__217898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217899 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217898,G__217899) : tailrecursion.hoplon.span.call(null,G__217898,G__217899));
})();
var G__217794 = (function (){var G__217900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217901 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217900,G__217901) : tailrecursion.hoplon.span.call(null,G__217900,G__217901));
})();
var G__217795 = "))\n        ";
var G__217796 = (function (){var G__217902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217903 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217902,G__217903) : tailrecursion.hoplon.span.call(null,G__217902,G__217903));
})();
var G__217797 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$101 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$101(G__217697,G__217698,G__217699,G__217700,G__217701,G__217702,G__217703,G__217704,G__217705,G__217706,G__217707,G__217708,G__217709,G__217710,G__217711,G__217712,G__217713,G__217714,G__217715,G__217716,G__217717,G__217718,G__217719,G__217720,G__217721,G__217722,G__217723,G__217724,G__217725,G__217726,G__217727,G__217728,G__217729,G__217730,G__217731,G__217732,G__217733,G__217734,G__217735,G__217736,G__217737,G__217738,G__217739,G__217740,G__217741,G__217742,G__217743,G__217744,G__217745,G__217746,G__217747,G__217748,G__217749,G__217750,G__217751,G__217752,G__217753,G__217754,G__217755,G__217756,G__217757,G__217758,G__217759,G__217760,G__217761,G__217762,G__217763,G__217764,G__217765,G__217766,G__217767,G__217768,G__217769,G__217770,G__217771,G__217772,G__217773,G__217774,G__217775,G__217776,G__217777,G__217778,G__217779,G__217780,G__217781,G__217782,G__217783,G__217784,G__217785,G__217786,G__217787,G__217788,G__217789,G__217790,G__217791,G__217792,G__217793,G__217794,G__217795,G__217796,G__217797) : tailrecursion.hoplon.pre.call(null,G__217697,G__217698,G__217699,G__217700,G__217701,G__217702,G__217703,G__217704,G__217705,G__217706,G__217707,G__217708,G__217709,G__217710,G__217711,G__217712,G__217713,G__217714,G__217715,G__217716,G__217717,G__217718,G__217719,G__217720,G__217721,G__217722,G__217723,G__217724,G__217725,G__217726,G__217727,G__217728,G__217729,G__217730,G__217731,G__217732,G__217733,G__217734,G__217735,G__217736,G__217737,G__217738,G__217739,G__217740,G__217741,G__217742,G__217743,G__217744,G__217745,G__217746,G__217747,G__217748,G__217749,G__217750,G__217751,G__217752,G__217753,G__217754,G__217755,G__217756,G__217757,G__217758,G__217759,G__217760,G__217761,G__217762,G__217763,G__217764,G__217765,G__217766,G__217767,G__217768,G__217769,G__217770,G__217771,G__217772,G__217773,G__217774,G__217775,G__217776,G__217777,G__217778,G__217779,G__217780,G__217781,G__217782,G__217783,G__217784,G__217785,G__217786,G__217787,G__217788,G__217789,G__217790,G__217791,G__217792,G__217793,G__217794,G__217795,G__217796,G__217797));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__217695,G__217696) : tailrecursion.hoplon.div.call(null,G__217695,G__217696));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__217694) : tailrecursion.hoplon.div.call(null,G__217694));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217484;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217483;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217482;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217481;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_217904 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217905 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_217906 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217907 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__217908 = cljs.core.PersistentArrayMap.EMPTY;
var G__217909 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In case representing pairs as procedures wasn",(function (){var G__217910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__217911 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__217910,G__217911) : tailrecursion.hoplon.markdown.simple_node.call(null,G__217910,G__217911));
})(),"t mind-boggling enough, consider that, in a language that can manipulate procedures, we can get by without numbers (at least insofar as nonnegative integers are concerned) by implementing 0 and the operation of adding 1 as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__217908,G__217909) : tailrecursion.hoplon.markdown.para_node.call(null,G__217908,G__217909));
})(),(function (){var G__217986 = (function (){var G__217987 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__217988 = (function (){var G__217989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__217990 = "(";
var G__217991 = (function (){var G__218025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218026 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218025,G__218026) : tailrecursion.hoplon.span.call(null,G__218025,G__218026));
})();
var G__217992 = (function (){var G__218027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218028 = "zero";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218027,G__218028) : tailrecursion.hoplon.span.call(null,G__218027,G__218028));
})();
var G__217993 = " (";
var G__217994 = (function (){var G__218029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218030 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218029,G__218030) : tailrecursion.hoplon.span.call(null,G__218029,G__218030));
})();
var G__217995 = "[";
var G__217996 = (function (){var G__218031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218032 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218031,G__218032) : tailrecursion.hoplon.span.call(null,G__218031,G__218032));
})();
var G__217997 = "] (";
var G__217998 = (function (){var G__218033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218034 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218033,G__218034) : tailrecursion.hoplon.span.call(null,G__218033,G__218034));
})();
var G__217999 = "[";
var G__218000 = (function (){var G__218035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218036 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218035,G__218036) : tailrecursion.hoplon.span.call(null,G__218035,G__218036));
})();
var G__218001 = "] ";
var G__218002 = (function (){var G__218037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218038 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218037,G__218038) : tailrecursion.hoplon.span.call(null,G__218037,G__218038));
})();
var G__218003 = ")))\n(";
var G__218004 = (function (){var G__218039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218040 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218039,G__218040) : tailrecursion.hoplon.span.call(null,G__218039,G__218040));
})();
var G__218005 = (function (){var G__218041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218042 = "add-1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218041,G__218042) : tailrecursion.hoplon.span.call(null,G__218041,G__218042));
})();
var G__218006 = " [";
var G__218007 = (function (){var G__218043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218044 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218043,G__218044) : tailrecursion.hoplon.span.call(null,G__218043,G__218044));
})();
var G__218008 = "]\n  (";
var G__218009 = (function (){var G__218045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218046 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218045,G__218046) : tailrecursion.hoplon.span.call(null,G__218045,G__218046));
})();
var G__218010 = "[";
var G__218011 = (function (){var G__218047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218048 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218047,G__218048) : tailrecursion.hoplon.span.call(null,G__218047,G__218048));
})();
var G__218012 = "] (";
var G__218013 = (function (){var G__218049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218050 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218049,G__218050) : tailrecursion.hoplon.span.call(null,G__218049,G__218050));
})();
var G__218014 = "[";
var G__218015 = (function (){var G__218051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218052 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218051,G__218052) : tailrecursion.hoplon.span.call(null,G__218051,G__218052));
})();
var G__218016 = "] (";
var G__218017 = (function (){var G__218053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218054 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218053,G__218054) : tailrecursion.hoplon.span.call(null,G__218053,G__218054));
})();
var G__218018 = " ((";
var G__218019 = (function (){var G__218055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218056 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218055,G__218056) : tailrecursion.hoplon.span.call(null,G__218055,G__218056));
})();
var G__218020 = " ";
var G__218021 = (function (){var G__218057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218058 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218057,G__218058) : tailrecursion.hoplon.span.call(null,G__218057,G__218058));
})();
var G__218022 = ") ";
var G__218023 = (function (){var G__218059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218060 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218059,G__218060) : tailrecursion.hoplon.span.call(null,G__218059,G__218060));
})();
var G__218024 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__217989,G__217990,G__217991,G__217992,G__217993,G__217994,G__217995,G__217996,G__217997,G__217998,G__217999,G__218000,G__218001,G__218002,G__218003,G__218004,G__218005,G__218006,G__218007,G__218008,G__218009,G__218010,G__218011,G__218012,G__218013,G__218014,G__218015,G__218016,G__218017,G__218018,G__218019,G__218020,G__218021,G__218022,G__218023,G__218024) : tailrecursion.hoplon.pre.call(null,G__217989,G__217990,G__217991,G__217992,G__217993,G__217994,G__217995,G__217996,G__217997,G__217998,G__217999,G__218000,G__218001,G__218002,G__218003,G__218004,G__218005,G__218006,G__218007,G__218008,G__218009,G__218010,G__218011,G__218012,G__218013,G__218014,G__218015,G__218016,G__218017,G__218018,G__218019,G__218020,G__218021,G__218022,G__218023,G__218024));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__217987,G__217988) : tailrecursion.hoplon.div.call(null,G__217987,G__217988));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__217986) : tailrecursion.hoplon.div.call(null,G__217986));
})(),(function (){var G__218061 = cljs.core.PersistentArrayMap.EMPTY;
var G__218062 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This representation is known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Church numerals"], null)], 0)),", after its inventor, Alanzo Church, the logician who invented the \u03BB calculus."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218061,G__218062) : tailrecursion.hoplon.markdown.para_node.call(null,G__218061,G__218062));
})(),(function (){var G__218063 = cljs.core.PersistentArrayMap.EMPTY;
var G__218064 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define ",(function (){var G__218065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"one"], null);
var G__218066 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__218065,G__218066) : tailrecursion.hoplon.markdown.code_node.call(null,G__218065,G__218066));
})()," and ",(function (){var G__218067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"two"], null);
var G__218068 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__218067,G__218068) : tailrecursion.hoplon.markdown.code_node.call(null,G__218067,G__218068));
})()," directly (not in terms of ",(function (){var G__218069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"zero"], null);
var G__218070 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__218069,G__218070) : tailrecursion.hoplon.markdown.code_node.call(null,G__218069,G__218070));
})()," and ",(function (){var G__218071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-1"], null);
var G__218072 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__218071,G__218072) : tailrecursion.hoplon.markdown.code_node.call(null,G__218071,G__218072));
})(),"). (Hint: Use substitution to evaluate ",(function (){var G__218073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(add-1 zero)"], null);
var G__218074 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__218073,G__218074) : tailrecursion.hoplon.markdown.code_node.call(null,G__218073,G__218074));
})(),"). Give a direct definition of the addition procedure + (not in terms of repeated application of ",(function (){var G__218075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-1"], null);
var G__218076 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__218075,G__218076) : tailrecursion.hoplon.markdown.code_node.call(null,G__218075,G__218076));
})(),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218063,G__218064) : tailrecursion.hoplon.markdown.para_node.call(null,G__218063,G__218064));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217907;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217906;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217905;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217904;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_218077 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_218078 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_218079 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_218080 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__218151 = (function (){var G__218152 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__218153 = (function (){var G__218154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__218155 = "(";
var G__218156 = (function (){var G__218188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218189 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218188,G__218189) : tailrecursion.hoplon.span.call(null,G__218188,G__218189));
})();
var G__218157 = (function (){var G__218190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218191 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218190,G__218191) : tailrecursion.hoplon.span.call(null,G__218190,G__218191));
})();
var G__218158 = "\n  (";
var G__218159 = (function (){var G__218192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218193 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218192,G__218193) : tailrecursion.hoplon.span.call(null,G__218192,G__218193));
})();
var G__218160 = "[";
var G__218161 = (function (){var G__218194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218195 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218194,G__218195) : tailrecursion.hoplon.span.call(null,G__218194,G__218195));
})();
var G__218162 = "] (";
var G__218163 = (function (){var G__218196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218197 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218196,G__218197) : tailrecursion.hoplon.span.call(null,G__218196,G__218197));
})();
var G__218164 = "[";
var G__218165 = (function (){var G__218198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218199 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218198,G__218199) : tailrecursion.hoplon.span.call(null,G__218198,G__218199));
})();
var G__218166 = "] (";
var G__218167 = (function (){var G__218200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218201 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218200,G__218201) : tailrecursion.hoplon.span.call(null,G__218200,G__218201));
})();
var G__218168 = " ";
var G__218169 = (function (){var G__218202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218203 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218202,G__218203) : tailrecursion.hoplon.span.call(null,G__218202,G__218203));
})();
var G__218170 = "))))\n(";
var G__218171 = (function (){var G__218204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218205 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218204,G__218205) : tailrecursion.hoplon.span.call(null,G__218204,G__218205));
})();
var G__218172 = (function (){var G__218206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218207 = "two";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218206,G__218207) : tailrecursion.hoplon.span.call(null,G__218206,G__218207));
})();
var G__218173 = "\n  (";
var G__218174 = (function (){var G__218208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218209 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218208,G__218209) : tailrecursion.hoplon.span.call(null,G__218208,G__218209));
})();
var G__218175 = "[";
var G__218176 = (function (){var G__218210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218211 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218210,G__218211) : tailrecursion.hoplon.span.call(null,G__218210,G__218211));
})();
var G__218177 = "] (";
var G__218178 = (function (){var G__218212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218213 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218212,G__218213) : tailrecursion.hoplon.span.call(null,G__218212,G__218213));
})();
var G__218179 = "[";
var G__218180 = (function (){var G__218214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218215 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218214,G__218215) : tailrecursion.hoplon.span.call(null,G__218214,G__218215));
})();
var G__218181 = "] (";
var G__218182 = (function (){var G__218216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218217 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218216,G__218217) : tailrecursion.hoplon.span.call(null,G__218216,G__218217));
})();
var G__218183 = " (";
var G__218184 = (function (){var G__218218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218219 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218218,G__218219) : tailrecursion.hoplon.span.call(null,G__218218,G__218219));
})();
var G__218185 = " ";
var G__218186 = (function (){var G__218220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218221 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218220,G__218221) : tailrecursion.hoplon.span.call(null,G__218220,G__218221));
})();
var G__218187 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34(G__218154,G__218155,G__218156,G__218157,G__218158,G__218159,G__218160,G__218161,G__218162,G__218163,G__218164,G__218165,G__218166,G__218167,G__218168,G__218169,G__218170,G__218171,G__218172,G__218173,G__218174,G__218175,G__218176,G__218177,G__218178,G__218179,G__218180,G__218181,G__218182,G__218183,G__218184,G__218185,G__218186,G__218187) : tailrecursion.hoplon.pre.call(null,G__218154,G__218155,G__218156,G__218157,G__218158,G__218159,G__218160,G__218161,G__218162,G__218163,G__218164,G__218165,G__218166,G__218167,G__218168,G__218169,G__218170,G__218171,G__218172,G__218173,G__218174,G__218175,G__218176,G__218177,G__218178,G__218179,G__218180,G__218181,G__218182,G__218183,G__218184,G__218185,G__218186,G__218187));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__218152,G__218153) : tailrecursion.hoplon.div.call(null,G__218152,G__218153));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__218151) : tailrecursion.hoplon.div.call(null,G__218151));
})(),(function (){var G__218222 = cljs.core.PersistentArrayMap.EMPTY;
var G__218223 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for addition, first let",(function (){var G__218224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__218225 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__218224,G__218225) : tailrecursion.hoplon.markdown.simple_node.call(null,G__218224,G__218225));
})(),"s build up a some functions to make this easier to reason about."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218222,G__218223) : tailrecursion.hoplon.markdown.para_node.call(null,G__218222,G__218223));
})(),(function (){var G__218265 = (function (){var G__218266 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__218267 = (function (){var G__218268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__218269 = "(";
var G__218270 = (function (){var G__218287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218288 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218287,G__218288) : tailrecursion.hoplon.span.call(null,G__218287,G__218288));
})();
var G__218271 = (function (){var G__218289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218290 = "compose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218289,G__218290) : tailrecursion.hoplon.span.call(null,G__218289,G__218290));
})();
var G__218272 = " [";
var G__218273 = (function (){var G__218291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218292 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218291,G__218292) : tailrecursion.hoplon.span.call(null,G__218291,G__218292));
})();
var G__218274 = " ";
var G__218275 = (function (){var G__218293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218294 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218293,G__218294) : tailrecursion.hoplon.span.call(null,G__218293,G__218294));
})();
var G__218276 = "]\n  (";
var G__218277 = (function (){var G__218295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218296 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218295,G__218296) : tailrecursion.hoplon.span.call(null,G__218295,G__218296));
})();
var G__218278 = "[";
var G__218279 = (function (){var G__218297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218298 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218297,G__218298) : tailrecursion.hoplon.span.call(null,G__218297,G__218298));
})();
var G__218280 = "] (";
var G__218281 = (function (){var G__218299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218300 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218299,G__218300) : tailrecursion.hoplon.span.call(null,G__218299,G__218300));
})();
var G__218282 = " (";
var G__218283 = (function (){var G__218301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218302 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218301,G__218302) : tailrecursion.hoplon.span.call(null,G__218301,G__218302));
})();
var G__218284 = " ";
var G__218285 = (function (){var G__218303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218304 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218303,G__218304) : tailrecursion.hoplon.span.call(null,G__218303,G__218304));
})();
var G__218286 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__218268,G__218269,G__218270,G__218271,G__218272,G__218273,G__218274,G__218275,G__218276,G__218277,G__218278,G__218279,G__218280,G__218281,G__218282,G__218283,G__218284,G__218285,G__218286) : tailrecursion.hoplon.pre.call(null,G__218268,G__218269,G__218270,G__218271,G__218272,G__218273,G__218274,G__218275,G__218276,G__218277,G__218278,G__218279,G__218280,G__218281,G__218282,G__218283,G__218284,G__218285,G__218286));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__218266,G__218267) : tailrecursion.hoplon.div.call(null,G__218266,G__218267));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__218265) : tailrecursion.hoplon.div.call(null,G__218265));
})(),(function (){var G__218305 = cljs.core.PersistentArrayMap.EMPTY;
var G__218306 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With that, we can now define"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218305,G__218306) : tailrecursion.hoplon.markdown.para_node.call(null,G__218305,G__218306));
})(),(function (){var G__218354 = (function (){var G__218355 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__218356 = (function (){var G__218357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__218358 = "(";
var G__218359 = (function (){var G__218380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218381 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218380,G__218381) : tailrecursion.hoplon.span.call(null,G__218380,G__218381));
})();
var G__218360 = (function (){var G__218382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218383 = "add";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218382,G__218383) : tailrecursion.hoplon.span.call(null,G__218382,G__218383));
})();
var G__218361 = " [";
var G__218362 = (function (){var G__218384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218385 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218384,G__218385) : tailrecursion.hoplon.span.call(null,G__218384,G__218385));
})();
var G__218363 = " ";
var G__218364 = (function (){var G__218386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218387 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218386,G__218387) : tailrecursion.hoplon.span.call(null,G__218386,G__218387));
})();
var G__218365 = "]\n  (";
var G__218366 = (function (){var G__218388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218389 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218388,G__218389) : tailrecursion.hoplon.span.call(null,G__218388,G__218389));
})();
var G__218367 = "[";
var G__218368 = (function (){var G__218390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218391 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218390,G__218391) : tailrecursion.hoplon.span.call(null,G__218390,G__218391));
})();
var G__218369 = "]\n    (";
var G__218370 = (function (){var G__218392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218393 = "compose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218392,G__218393) : tailrecursion.hoplon.span.call(null,G__218392,G__218393));
})();
var G__218371 = " (";
var G__218372 = (function (){var G__218394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218395 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218394,G__218395) : tailrecursion.hoplon.span.call(null,G__218394,G__218395));
})();
var G__218373 = " ";
var G__218374 = (function (){var G__218396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218397 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218396,G__218397) : tailrecursion.hoplon.span.call(null,G__218396,G__218397));
})();
var G__218375 = ") (";
var G__218376 = (function (){var G__218398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218399 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218398,G__218399) : tailrecursion.hoplon.span.call(null,G__218398,G__218399));
})();
var G__218377 = " ";
var G__218378 = (function (){var G__218400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218401 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218400,G__218401) : tailrecursion.hoplon.span.call(null,G__218400,G__218401));
})();
var G__218379 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__218357,G__218358,G__218359,G__218360,G__218361,G__218362,G__218363,G__218364,G__218365,G__218366,G__218367,G__218368,G__218369,G__218370,G__218371,G__218372,G__218373,G__218374,G__218375,G__218376,G__218377,G__218378,G__218379) : tailrecursion.hoplon.pre.call(null,G__218357,G__218358,G__218359,G__218360,G__218361,G__218362,G__218363,G__218364,G__218365,G__218366,G__218367,G__218368,G__218369,G__218370,G__218371,G__218372,G__218373,G__218374,G__218375,G__218376,G__218377,G__218378,G__218379));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__218355,G__218356) : tailrecursion.hoplon.div.call(null,G__218355,G__218356));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__218354) : tailrecursion.hoplon.div.call(null,G__218354));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_218080;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_218079;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_218078;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_218077;
}})()], 0))], 0))], 0));
var G__212506 = "";
var G__212507 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Extended Exercise: Interval Arithmetic"], null),(function (){var _STAR_references_STAR_218402 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_218403 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_218404 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_218405 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__218406 = cljs.core.PersistentArrayMap.EMPTY;
var G__218407 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa P. Hacker is designing a system to help people solve engineering problems. One feature she wants to provide in her system is the ability to manipulate inexact quantities (such as measured parameters of physical devices) with known precision, so that when computations are done with such approximate quantities the results will be numbers of known precision."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218406,G__218407) : tailrecursion.hoplon.markdown.para_node.call(null,G__218406,G__218407));
})(),(function (){var G__218408 = cljs.core.PersistentArrayMap.EMPTY;
var G__218409 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Electrical engineers will be using Alyssa",(function (){var G__218410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__218411 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__218410,G__218411) : tailrecursion.hoplon.markdown.simple_node.call(null,G__218410,G__218411));
})(),"s system to compute electrical quantities. It is sometimes necessary for them to compute the value of a parallel equivalent resistance \\(R_p\\) of two resistors \\(R_1\\) and \\(R_2\\) using the formula"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218408,G__218409) : tailrecursion.hoplon.markdown.para_node.call(null,G__218408,G__218409));
})(),(function (){var G__218412 = cljs.core.PersistentArrayMap.EMPTY;
var G__218413 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$R_p=\\frac{1}{1/R_1+1/R_2}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218412,G__218413) : tailrecursion.hoplon.markdown.para_node.call(null,G__218412,G__218413));
})(),(function (){var G__218414 = cljs.core.PersistentArrayMap.EMPTY;
var G__218415 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Resistance values are usually known only up to some tolerance guaranteed by the manufacturer of the resistor. For example, if you buy a resistor labeled ",(function (){var G__218416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__218417 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["6.8 ohms with 10% tolerance"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__218416,G__218417) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__218416,G__218417));
})()," you can only be sure that the resistor has a resistance between 6.8 - 0.68 = 6.12 and 6.8 + 0.68 = 7.48 ohms. Thus, if you have a 6.8-ohm 10% resistor in parallel with a 4.7-ohm 5% resistor, the resistance of the combination can range from about 2.58 ohms (if the two resistors are at the lower bounds) to about 2.97 ohms (if the two resistors are at the upper bounds)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218414,G__218415) : tailrecursion.hoplon.markdown.para_node.call(null,G__218414,G__218415));
})(),(function (){var G__218418 = cljs.core.PersistentArrayMap.EMPTY;
var G__218419 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa",(function (){var G__218420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__218421 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__218420,G__218421) : tailrecursion.hoplon.markdown.simple_node.call(null,G__218420,G__218421));
})(),"s idea is to implement ",(function (){var G__218422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__218423 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["interval arithmetic"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__218422,G__218423) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__218422,G__218423));
})()," as a set of arithmetic operations for combining ",(function (){var G__218424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__218425 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["intervals"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__218424,G__218425) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__218424,G__218425));
})()," (objects that represent the range of possible values of an inexact quantity). The result of adding, subtracting, multiplying, or dividing two intervals is itself an interval, representing the range of the result."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218418,G__218419) : tailrecursion.hoplon.markdown.para_node.call(null,G__218418,G__218419));
})(),(function (){var G__218426 = cljs.core.PersistentArrayMap.EMPTY;
var G__218427 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa postulates the existence of an abstract object called an ",(function (){var G__218428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__218429 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["interval"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__218428,G__218429) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__218428,G__218429));
})()," that has two endpoints: a lower bound and an upper bound. She also presumes that, given the endpoints of an interval, she can construct the interval using the data constructor ",(function (){var G__218430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-interval"], null);
var G__218431 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__218430,G__218431) : tailrecursion.hoplon.markdown.code_node.call(null,G__218430,G__218431));
})(),". Alyssa first writes a procedure for adding two intervals. She reasons that the minimum value the sum could be is the sum of the two lower bounds and the maximum value it could be is the sum of the two upper bounds:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218426,G__218427) : tailrecursion.hoplon.markdown.para_node.call(null,G__218426,G__218427));
})(),(function (){var G__218495 = (function (){var G__218496 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__218497 = (function (){var G__218498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__218499 = "(";
var G__218500 = (function (){var G__218529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218530 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218529,G__218530) : tailrecursion.hoplon.span.call(null,G__218529,G__218530));
})();
var G__218501 = (function (){var G__218531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218532 = "add-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218531,G__218532) : tailrecursion.hoplon.span.call(null,G__218531,G__218532));
})();
var G__218502 = " [";
var G__218503 = (function (){var G__218533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218534 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218533,G__218534) : tailrecursion.hoplon.span.call(null,G__218533,G__218534));
})();
var G__218504 = " ";
var G__218505 = (function (){var G__218535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218536 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218535,G__218536) : tailrecursion.hoplon.span.call(null,G__218535,G__218536));
})();
var G__218506 = "]\n  (";
var G__218507 = (function (){var G__218537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218538 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218537,G__218538) : tailrecursion.hoplon.span.call(null,G__218537,G__218538));
})();
var G__218508 = " (";
var G__218509 = (function (){var G__218539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218540 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218539,G__218540) : tailrecursion.hoplon.span.call(null,G__218539,G__218540));
})();
var G__218510 = "(";
var G__218511 = (function (){var G__218541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218542 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218541,G__218542) : tailrecursion.hoplon.span.call(null,G__218541,G__218542));
})();
var G__218512 = " ";
var G__218513 = (function (){var G__218543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218544 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218543,G__218544) : tailrecursion.hoplon.span.call(null,G__218543,G__218544));
})();
var G__218514 = ") (";
var G__218515 = (function (){var G__218545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218546 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218545,G__218546) : tailrecursion.hoplon.span.call(null,G__218545,G__218546));
})();
var G__218516 = " ";
var G__218517 = (function (){var G__218547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218548 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218547,G__218548) : tailrecursion.hoplon.span.call(null,G__218547,G__218548));
})();
var G__218518 = "))\n                 (";
var G__218519 = (function (){var G__218549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218550 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218549,G__218550) : tailrecursion.hoplon.span.call(null,G__218549,G__218550));
})();
var G__218520 = "(";
var G__218521 = (function (){var G__218551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218552 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218551,G__218552) : tailrecursion.hoplon.span.call(null,G__218551,G__218552));
})();
var G__218522 = " ";
var G__218523 = (function (){var G__218553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218554 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218553,G__218554) : tailrecursion.hoplon.span.call(null,G__218553,G__218554));
})();
var G__218524 = ") (";
var G__218525 = (function (){var G__218555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218556 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218555,G__218556) : tailrecursion.hoplon.span.call(null,G__218555,G__218556));
})();
var G__218526 = " ";
var G__218527 = (function (){var G__218557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218558 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218557,G__218558) : tailrecursion.hoplon.span.call(null,G__218557,G__218558));
})();
var G__218528 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__218498,G__218499,G__218500,G__218501,G__218502,G__218503,G__218504,G__218505,G__218506,G__218507,G__218508,G__218509,G__218510,G__218511,G__218512,G__218513,G__218514,G__218515,G__218516,G__218517,G__218518,G__218519,G__218520,G__218521,G__218522,G__218523,G__218524,G__218525,G__218526,G__218527,G__218528) : tailrecursion.hoplon.pre.call(null,G__218498,G__218499,G__218500,G__218501,G__218502,G__218503,G__218504,G__218505,G__218506,G__218507,G__218508,G__218509,G__218510,G__218511,G__218512,G__218513,G__218514,G__218515,G__218516,G__218517,G__218518,G__218519,G__218520,G__218521,G__218522,G__218523,G__218524,G__218525,G__218526,G__218527,G__218528));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__218496,G__218497) : tailrecursion.hoplon.div.call(null,G__218496,G__218497));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__218495) : tailrecursion.hoplon.div.call(null,G__218495));
})(),(function (){var G__218559 = cljs.core.PersistentArrayMap.EMPTY;
var G__218560 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa also works out the product of two intervals by finding the minimum and the maximum of the products of the bounds and using them as bounds of the resulting interval. (",(function (){var G__218561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"min"], null);
var G__218562 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__218561,G__218562) : tailrecursion.hoplon.markdown.code_node.call(null,G__218561,G__218562));
})()," and ",(function (){var G__218563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"max"], null);
var G__218564 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__218563,G__218564) : tailrecursion.hoplon.markdown.code_node.call(null,G__218563,G__218564));
})()," are primitives that find the minimum and maximum of any number of arguments.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218559,G__218560) : tailrecursion.hoplon.markdown.para_node.call(null,G__218559,G__218560));
})(),(function (){var G__218726 = (function (){var G__218727 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__218728 = (function (){var G__218729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__218730 = "(";
var G__218731 = (function (){var G__218808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218809 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218808,G__218809) : tailrecursion.hoplon.span.call(null,G__218808,G__218809));
})();
var G__218732 = (function (){var G__218810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218811 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218810,G__218811) : tailrecursion.hoplon.span.call(null,G__218810,G__218811));
})();
var G__218733 = " [";
var G__218734 = (function (){var G__218812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218813 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218812,G__218813) : tailrecursion.hoplon.span.call(null,G__218812,G__218813));
})();
var G__218735 = " ";
var G__218736 = (function (){var G__218814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218815 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218814,G__218815) : tailrecursion.hoplon.span.call(null,G__218814,G__218815));
})();
var G__218737 = "]\n  (";
var G__218738 = (function (){var G__218816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218817 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218816,G__218817) : tailrecursion.hoplon.span.call(null,G__218816,G__218817));
})();
var G__218739 = "[";
var G__218740 = (function (){var G__218818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218819 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218818,G__218819) : tailrecursion.hoplon.span.call(null,G__218818,G__218819));
})();
var G__218741 = " (";
var G__218742 = (function (){var G__218820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218821 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218820,G__218821) : tailrecursion.hoplon.span.call(null,G__218820,G__218821));
})();
var G__218743 = "(";
var G__218744 = (function (){var G__218822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218823 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218822,G__218823) : tailrecursion.hoplon.span.call(null,G__218822,G__218823));
})();
var G__218745 = " ";
var G__218746 = (function (){var G__218824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218825 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218824,G__218825) : tailrecursion.hoplon.span.call(null,G__218824,G__218825));
})();
var G__218747 = ") (";
var G__218748 = (function (){var G__218826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218827 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218826,G__218827) : tailrecursion.hoplon.span.call(null,G__218826,G__218827));
})();
var G__218749 = " ";
var G__218750 = (function (){var G__218828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218829 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218828,G__218829) : tailrecursion.hoplon.span.call(null,G__218828,G__218829));
})();
var G__218751 = "))\n        ";
var G__218752 = (function (){var G__218830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218831 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218830,G__218831) : tailrecursion.hoplon.span.call(null,G__218830,G__218831));
})();
var G__218753 = " (";
var G__218754 = (function (){var G__218832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218833 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218832,G__218833) : tailrecursion.hoplon.span.call(null,G__218832,G__218833));
})();
var G__218755 = "(";
var G__218756 = (function (){var G__218834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218835 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218834,G__218835) : tailrecursion.hoplon.span.call(null,G__218834,G__218835));
})();
var G__218757 = " ";
var G__218758 = (function (){var G__218836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218837 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218836,G__218837) : tailrecursion.hoplon.span.call(null,G__218836,G__218837));
})();
var G__218759 = ") (";
var G__218760 = (function (){var G__218838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218839 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218838,G__218839) : tailrecursion.hoplon.span.call(null,G__218838,G__218839));
})();
var G__218761 = " ";
var G__218762 = (function (){var G__218840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218841 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218840,G__218841) : tailrecursion.hoplon.span.call(null,G__218840,G__218841));
})();
var G__218763 = "))\n        ";
var G__218764 = (function (){var G__218842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218843 = "p3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218842,G__218843) : tailrecursion.hoplon.span.call(null,G__218842,G__218843));
})();
var G__218765 = " (";
var G__218766 = (function (){var G__218844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218845 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218844,G__218845) : tailrecursion.hoplon.span.call(null,G__218844,G__218845));
})();
var G__218767 = "(";
var G__218768 = (function (){var G__218846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218847 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218846,G__218847) : tailrecursion.hoplon.span.call(null,G__218846,G__218847));
})();
var G__218769 = " ";
var G__218770 = (function (){var G__218848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218849 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218848,G__218849) : tailrecursion.hoplon.span.call(null,G__218848,G__218849));
})();
var G__218771 = ") (";
var G__218772 = (function (){var G__218850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218851 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218850,G__218851) : tailrecursion.hoplon.span.call(null,G__218850,G__218851));
})();
var G__218773 = " ";
var G__218774 = (function (){var G__218852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218853 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218852,G__218853) : tailrecursion.hoplon.span.call(null,G__218852,G__218853));
})();
var G__218775 = "))\n        ";
var G__218776 = (function (){var G__218854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218855 = "p4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218854,G__218855) : tailrecursion.hoplon.span.call(null,G__218854,G__218855));
})();
var G__218777 = " (";
var G__218778 = (function (){var G__218856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218857 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218856,G__218857) : tailrecursion.hoplon.span.call(null,G__218856,G__218857));
})();
var G__218779 = "(";
var G__218780 = (function (){var G__218858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218859 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218858,G__218859) : tailrecursion.hoplon.span.call(null,G__218858,G__218859));
})();
var G__218781 = " ";
var G__218782 = (function (){var G__218860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218861 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218860,G__218861) : tailrecursion.hoplon.span.call(null,G__218860,G__218861));
})();
var G__218783 = ") (";
var G__218784 = (function (){var G__218862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218863 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218862,G__218863) : tailrecursion.hoplon.span.call(null,G__218862,G__218863));
})();
var G__218785 = " ";
var G__218786 = (function (){var G__218864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218865 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218864,G__218865) : tailrecursion.hoplon.span.call(null,G__218864,G__218865));
})();
var G__218787 = "))]\n    (";
var G__218788 = (function (){var G__218866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218867 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218866,G__218867) : tailrecursion.hoplon.span.call(null,G__218866,G__218867));
})();
var G__218789 = " (";
var G__218790 = (function (){var G__218868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218869 = "min ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218868,G__218869) : tailrecursion.hoplon.span.call(null,G__218868,G__218869));
})();
var G__218791 = (function (){var G__218870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218871 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218870,G__218871) : tailrecursion.hoplon.span.call(null,G__218870,G__218871));
})();
var G__218792 = " ";
var G__218793 = (function (){var G__218872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218873 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218872,G__218873) : tailrecursion.hoplon.span.call(null,G__218872,G__218873));
})();
var G__218794 = " ";
var G__218795 = (function (){var G__218874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218875 = "p3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218874,G__218875) : tailrecursion.hoplon.span.call(null,G__218874,G__218875));
})();
var G__218796 = " ";
var G__218797 = (function (){var G__218876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218877 = "p4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218876,G__218877) : tailrecursion.hoplon.span.call(null,G__218876,G__218877));
})();
var G__218798 = ")\n                   (";
var G__218799 = (function (){var G__218878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218879 = "max ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218878,G__218879) : tailrecursion.hoplon.span.call(null,G__218878,G__218879));
})();
var G__218800 = (function (){var G__218880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218881 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218880,G__218881) : tailrecursion.hoplon.span.call(null,G__218880,G__218881));
})();
var G__218801 = " ";
var G__218802 = (function (){var G__218882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218883 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218882,G__218883) : tailrecursion.hoplon.span.call(null,G__218882,G__218883));
})();
var G__218803 = " ";
var G__218804 = (function (){var G__218884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218885 = "p3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218884,G__218885) : tailrecursion.hoplon.span.call(null,G__218884,G__218885));
})();
var G__218805 = " ";
var G__218806 = (function (){var G__218886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218887 = "p4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218886,G__218887) : tailrecursion.hoplon.span.call(null,G__218886,G__218887));
})();
var G__218807 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$79 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$79(G__218729,G__218730,G__218731,G__218732,G__218733,G__218734,G__218735,G__218736,G__218737,G__218738,G__218739,G__218740,G__218741,G__218742,G__218743,G__218744,G__218745,G__218746,G__218747,G__218748,G__218749,G__218750,G__218751,G__218752,G__218753,G__218754,G__218755,G__218756,G__218757,G__218758,G__218759,G__218760,G__218761,G__218762,G__218763,G__218764,G__218765,G__218766,G__218767,G__218768,G__218769,G__218770,G__218771,G__218772,G__218773,G__218774,G__218775,G__218776,G__218777,G__218778,G__218779,G__218780,G__218781,G__218782,G__218783,G__218784,G__218785,G__218786,G__218787,G__218788,G__218789,G__218790,G__218791,G__218792,G__218793,G__218794,G__218795,G__218796,G__218797,G__218798,G__218799,G__218800,G__218801,G__218802,G__218803,G__218804,G__218805,G__218806,G__218807) : tailrecursion.hoplon.pre.call(null,G__218729,G__218730,G__218731,G__218732,G__218733,G__218734,G__218735,G__218736,G__218737,G__218738,G__218739,G__218740,G__218741,G__218742,G__218743,G__218744,G__218745,G__218746,G__218747,G__218748,G__218749,G__218750,G__218751,G__218752,G__218753,G__218754,G__218755,G__218756,G__218757,G__218758,G__218759,G__218760,G__218761,G__218762,G__218763,G__218764,G__218765,G__218766,G__218767,G__218768,G__218769,G__218770,G__218771,G__218772,G__218773,G__218774,G__218775,G__218776,G__218777,G__218778,G__218779,G__218780,G__218781,G__218782,G__218783,G__218784,G__218785,G__218786,G__218787,G__218788,G__218789,G__218790,G__218791,G__218792,G__218793,G__218794,G__218795,G__218796,G__218797,G__218798,G__218799,G__218800,G__218801,G__218802,G__218803,G__218804,G__218805,G__218806,G__218807));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__218727,G__218728) : tailrecursion.hoplon.div.call(null,G__218727,G__218728));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__218726) : tailrecursion.hoplon.div.call(null,G__218726));
})(),(function (){var G__218888 = cljs.core.PersistentArrayMap.EMPTY;
var G__218889 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To divide two intervals, Alyssa multiplies the first by the reciprocal of the second. Note that the bounds of the reciprocal interval are the reciprocal of the upper-bound and the reciprocal of the lower-bound, in that order."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218888,G__218889) : tailrecursion.hoplon.markdown.para_node.call(null,G__218888,G__218889));
})(),(function (){var G__218951 = (function (){var G__218952 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__218953 = (function (){var G__218954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__218955 = "(";
var G__218956 = (function (){var G__218983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218984 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218983,G__218984) : tailrecursion.hoplon.span.call(null,G__218983,G__218984));
})();
var G__218957 = (function (){var G__218985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218986 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218985,G__218986) : tailrecursion.hoplon.span.call(null,G__218985,G__218986));
})();
var G__218958 = " [";
var G__218959 = (function (){var G__218987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218988 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218987,G__218988) : tailrecursion.hoplon.span.call(null,G__218987,G__218988));
})();
var G__218960 = " ";
var G__218961 = (function (){var G__218989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218990 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218989,G__218990) : tailrecursion.hoplon.span.call(null,G__218989,G__218990));
})();
var G__218962 = "]\n  (";
var G__218963 = (function (){var G__218991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218992 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218991,G__218992) : tailrecursion.hoplon.span.call(null,G__218991,G__218992));
})();
var G__218964 = " ";
var G__218965 = (function (){var G__218993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218994 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218993,G__218994) : tailrecursion.hoplon.span.call(null,G__218993,G__218994));
})();
var G__218966 = "\n                (";
var G__218967 = (function (){var G__218995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218996 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218995,G__218996) : tailrecursion.hoplon.span.call(null,G__218995,G__218996));
})();
var G__218968 = " (";
var G__218969 = (function (){var G__218997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218998 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218997,G__218998) : tailrecursion.hoplon.span.call(null,G__218997,G__218998));
})();
var G__218970 = (function (){var G__218999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__219000 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218999,G__219000) : tailrecursion.hoplon.span.call(null,G__218999,G__219000));
})();
var G__218971 = " (";
var G__218972 = (function (){var G__219001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219002 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219001,G__219002) : tailrecursion.hoplon.span.call(null,G__219001,G__219002));
})();
var G__218973 = " ";
var G__218974 = (function (){var G__219003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219004 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219003,G__219004) : tailrecursion.hoplon.span.call(null,G__219003,G__219004));
})();
var G__218975 = "))\n                               (";
var G__218976 = (function (){var G__219005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__219006 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219005,G__219006) : tailrecursion.hoplon.span.call(null,G__219005,G__219006));
})();
var G__218977 = (function (){var G__219007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__219008 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219007,G__219008) : tailrecursion.hoplon.span.call(null,G__219007,G__219008));
})();
var G__218978 = " (";
var G__218979 = (function (){var G__219009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219010 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219009,G__219010) : tailrecursion.hoplon.span.call(null,G__219009,G__219010));
})();
var G__218980 = " ";
var G__218981 = (function (){var G__219011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219012 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219011,G__219012) : tailrecursion.hoplon.span.call(null,G__219011,G__219012));
})();
var G__218982 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29(G__218954,G__218955,G__218956,G__218957,G__218958,G__218959,G__218960,G__218961,G__218962,G__218963,G__218964,G__218965,G__218966,G__218967,G__218968,G__218969,G__218970,G__218971,G__218972,G__218973,G__218974,G__218975,G__218976,G__218977,G__218978,G__218979,G__218980,G__218981,G__218982) : tailrecursion.hoplon.pre.call(null,G__218954,G__218955,G__218956,G__218957,G__218958,G__218959,G__218960,G__218961,G__218962,G__218963,G__218964,G__218965,G__218966,G__218967,G__218968,G__218969,G__218970,G__218971,G__218972,G__218973,G__218974,G__218975,G__218976,G__218977,G__218978,G__218979,G__218980,G__218981,G__218982));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__218952,G__218953) : tailrecursion.hoplon.div.call(null,G__218952,G__218953));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__218951) : tailrecursion.hoplon.div.call(null,G__218951));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_218405;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_218404;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_218403;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_218402;
}})()], 0));
var G__212508 = "";
var G__212509 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_219013 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219014 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_219015 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219016 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__219017 = cljs.core.PersistentArrayMap.EMPTY;
var G__219018 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa",(function (){var G__219019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__219020 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__219019,G__219020) : tailrecursion.hoplon.markdown.simple_node.call(null,G__219019,G__219020));
})(),"s program is incomplete because she has not specified the implementation of the interval abstraction. Here is a definition of the interval constructor:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219017,G__219018) : tailrecursion.hoplon.markdown.para_node.call(null,G__219017,G__219018));
})(),(function (){var G__219051 = (function (){var G__219052 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__219053 = (function (){var G__219054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__219055 = "(";
var G__219056 = (function (){var G__219068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__219069 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219068,G__219069) : tailrecursion.hoplon.span.call(null,G__219068,G__219069));
})();
var G__219057 = (function (){var G__219070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219071 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219070,G__219071) : tailrecursion.hoplon.span.call(null,G__219070,G__219071));
})();
var G__219058 = " [";
var G__219059 = (function (){var G__219072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219073 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219072,G__219073) : tailrecursion.hoplon.span.call(null,G__219072,G__219073));
})();
var G__219060 = " ";
var G__219061 = (function (){var G__219074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219075 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219074,G__219075) : tailrecursion.hoplon.span.call(null,G__219074,G__219075));
})();
var G__219062 = "]\n  (";
var G__219063 = (function (){var G__219076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__219077 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219076,G__219077) : tailrecursion.hoplon.span.call(null,G__219076,G__219077));
})();
var G__219064 = (function (){var G__219078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219079 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219078,G__219079) : tailrecursion.hoplon.span.call(null,G__219078,G__219079));
})();
var G__219065 = " ";
var G__219066 = (function (){var G__219080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219081 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219080,G__219081) : tailrecursion.hoplon.span.call(null,G__219080,G__219081));
})();
var G__219067 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__219054,G__219055,G__219056,G__219057,G__219058,G__219059,G__219060,G__219061,G__219062,G__219063,G__219064,G__219065,G__219066,G__219067) : tailrecursion.hoplon.pre.call(null,G__219054,G__219055,G__219056,G__219057,G__219058,G__219059,G__219060,G__219061,G__219062,G__219063,G__219064,G__219065,G__219066,G__219067));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__219052,G__219053) : tailrecursion.hoplon.div.call(null,G__219052,G__219053));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__219051) : tailrecursion.hoplon.div.call(null,G__219051));
})(),(function (){var G__219082 = cljs.core.PersistentArrayMap.EMPTY;
var G__219083 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define selectors ",(function (){var G__219084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"upper-bound"], null);
var G__219085 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__219084,G__219085) : tailrecursion.hoplon.markdown.code_node.call(null,G__219084,G__219085));
})()," and ",(function (){var G__219086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"lower-bound"], null);
var G__219087 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__219086,G__219087) : tailrecursion.hoplon.markdown.code_node.call(null,G__219086,G__219087));
})()," to complete the implementation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219082,G__219083) : tailrecursion.hoplon.markdown.para_node.call(null,G__219082,G__219083));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219016;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219015;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219014;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219013;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_219088 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219089 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_219090 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219091 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__219132 = (function (){var G__219133 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__219134 = (function (){var G__219135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__219136 = "(";
var G__219137 = (function (){var G__219153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__219154 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219153,G__219154) : tailrecursion.hoplon.span.call(null,G__219153,G__219154));
})();
var G__219138 = (function (){var G__219155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219156 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219155,G__219156) : tailrecursion.hoplon.span.call(null,G__219155,G__219156));
})();
var G__219139 = " [";
var G__219140 = (function (){var G__219157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219158 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219157,G__219158) : tailrecursion.hoplon.span.call(null,G__219157,G__219158));
})();
var G__219141 = "]\n  (";
var G__219142 = (function (){var G__219159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__219160 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219159,G__219160) : tailrecursion.hoplon.span.call(null,G__219159,G__219160));
})();
var G__219143 = (function (){var G__219161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219162 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219161,G__219162) : tailrecursion.hoplon.span.call(null,G__219161,G__219162));
})();
var G__219144 = "))\n(";
var G__219145 = (function (){var G__219163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__219164 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219163,G__219164) : tailrecursion.hoplon.span.call(null,G__219163,G__219164));
})();
var G__219146 = (function (){var G__219165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219166 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219165,G__219166) : tailrecursion.hoplon.span.call(null,G__219165,G__219166));
})();
var G__219147 = " [";
var G__219148 = (function (){var G__219167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219168 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219167,G__219168) : tailrecursion.hoplon.span.call(null,G__219167,G__219168));
})();
var G__219149 = "]\n  (";
var G__219150 = (function (){var G__219169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__219170 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219169,G__219170) : tailrecursion.hoplon.span.call(null,G__219169,G__219170));
})();
var G__219151 = (function (){var G__219171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219172 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219171,G__219172) : tailrecursion.hoplon.span.call(null,G__219171,G__219172));
})();
var G__219152 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__219135,G__219136,G__219137,G__219138,G__219139,G__219140,G__219141,G__219142,G__219143,G__219144,G__219145,G__219146,G__219147,G__219148,G__219149,G__219150,G__219151,G__219152) : tailrecursion.hoplon.pre.call(null,G__219135,G__219136,G__219137,G__219138,G__219139,G__219140,G__219141,G__219142,G__219143,G__219144,G__219145,G__219146,G__219147,G__219148,G__219149,G__219150,G__219151,G__219152));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__219133,G__219134) : tailrecursion.hoplon.div.call(null,G__219133,G__219134));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__219132) : tailrecursion.hoplon.div.call(null,G__219132));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219091;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219090;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219089;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219088;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_219173 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219174 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_219175 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219176 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__219177 = cljs.core.PersistentArrayMap.EMPTY;
var G__219178 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using reasoning analogous to Alyssa",(function (){var G__219179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__219180 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__219179,G__219180) : tailrecursion.hoplon.markdown.simple_node.call(null,G__219179,G__219180));
})(),"s, describe how the difference of two intervals may be computed. Define a corresponding subtraction procedure, called ",(function (){var G__219181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-interval"], null);
var G__219182 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__219181,G__219182) : tailrecursion.hoplon.markdown.code_node.call(null,G__219181,G__219182));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219177,G__219178) : tailrecursion.hoplon.markdown.para_node.call(null,G__219177,G__219178));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219176;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219175;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219174;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219173;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_219183 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219184 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_219185 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219186 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__219187 = cljs.core.PersistentArrayMap.EMPTY;
var G__219188 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using reasoning analogous to Alyssa",(function (){var G__219189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__219190 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__219189,G__219190) : tailrecursion.hoplon.markdown.simple_node.call(null,G__219189,G__219190));
})(),"s, we",(function (){var G__219191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__219192 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__219191,G__219192) : tailrecursion.hoplon.markdown.simple_node.call(null,G__219191,G__219192));
})(),"d define ",(function (){var G__219193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-interval"], null);
var G__219194 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__219193,G__219194) : tailrecursion.hoplon.markdown.code_node.call(null,G__219193,G__219194));
})()," as:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219187,G__219188) : tailrecursion.hoplon.markdown.para_node.call(null,G__219187,G__219188));
})(),(function (){var G__219258 = (function (){var G__219259 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__219260 = (function (){var G__219261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__219262 = "(";
var G__219263 = (function (){var G__219292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__219293 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219292,G__219293) : tailrecursion.hoplon.span.call(null,G__219292,G__219293));
})();
var G__219264 = (function (){var G__219294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219295 = "sub-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219294,G__219295) : tailrecursion.hoplon.span.call(null,G__219294,G__219295));
})();
var G__219265 = " [";
var G__219266 = (function (){var G__219296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219297 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219296,G__219297) : tailrecursion.hoplon.span.call(null,G__219296,G__219297));
})();
var G__219267 = " ";
var G__219268 = (function (){var G__219298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219299 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219298,G__219299) : tailrecursion.hoplon.span.call(null,G__219298,G__219299));
})();
var G__219269 = "]\n  (";
var G__219270 = (function (){var G__219300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219301 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219300,G__219301) : tailrecursion.hoplon.span.call(null,G__219300,G__219301));
})();
var G__219271 = " (";
var G__219272 = (function (){var G__219302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__219303 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219302,G__219303) : tailrecursion.hoplon.span.call(null,G__219302,G__219303));
})();
var G__219273 = "(";
var G__219274 = (function (){var G__219304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219305 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219304,G__219305) : tailrecursion.hoplon.span.call(null,G__219304,G__219305));
})();
var G__219275 = " ";
var G__219276 = (function (){var G__219306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219307 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219306,G__219307) : tailrecursion.hoplon.span.call(null,G__219306,G__219307));
})();
var G__219277 = ") (";
var G__219278 = (function (){var G__219308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219309 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219308,G__219309) : tailrecursion.hoplon.span.call(null,G__219308,G__219309));
})();
var G__219279 = " ";
var G__219280 = (function (){var G__219310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219311 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219310,G__219311) : tailrecursion.hoplon.span.call(null,G__219310,G__219311));
})();
var G__219281 = "))\n                 (";
var G__219282 = (function (){var G__219312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__219313 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219312,G__219313) : tailrecursion.hoplon.span.call(null,G__219312,G__219313));
})();
var G__219283 = "(";
var G__219284 = (function (){var G__219314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219315 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219314,G__219315) : tailrecursion.hoplon.span.call(null,G__219314,G__219315));
})();
var G__219285 = " ";
var G__219286 = (function (){var G__219316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219317 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219316,G__219317) : tailrecursion.hoplon.span.call(null,G__219316,G__219317));
})();
var G__219287 = ") (";
var G__219288 = (function (){var G__219318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219319 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219318,G__219319) : tailrecursion.hoplon.span.call(null,G__219318,G__219319));
})();
var G__219289 = " ";
var G__219290 = (function (){var G__219320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219321 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219320,G__219321) : tailrecursion.hoplon.span.call(null,G__219320,G__219321));
})();
var G__219291 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__219261,G__219262,G__219263,G__219264,G__219265,G__219266,G__219267,G__219268,G__219269,G__219270,G__219271,G__219272,G__219273,G__219274,G__219275,G__219276,G__219277,G__219278,G__219279,G__219280,G__219281,G__219282,G__219283,G__219284,G__219285,G__219286,G__219287,G__219288,G__219289,G__219290,G__219291) : tailrecursion.hoplon.pre.call(null,G__219261,G__219262,G__219263,G__219264,G__219265,G__219266,G__219267,G__219268,G__219269,G__219270,G__219271,G__219272,G__219273,G__219274,G__219275,G__219276,G__219277,G__219278,G__219279,G__219280,G__219281,G__219282,G__219283,G__219284,G__219285,G__219286,G__219287,G__219288,G__219289,G__219290,G__219291));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__219259,G__219260) : tailrecursion.hoplon.div.call(null,G__219259,G__219260));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__219258) : tailrecursion.hoplon.div.call(null,G__219258));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219186;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219185;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219184;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219183;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_219322 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219323 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_219324 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219325 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__219326 = cljs.core.PersistentArrayMap.EMPTY;
var G__219327 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["width"], null)], 0))," of an interval is half of the difference between its upper and lower bounds. The width is a measure of the uncertainty of the number specified by the interval. For some arithmetic operations the width of the result of combining two intervals is a function only of the widths of the argument intervals. Show that the width of the sum (or difference) of two intervals is a function only of the widths of the intervals being added (or subtracted). Give examples to show that this is not true for multiplication or division."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219326,G__219327) : tailrecursion.hoplon.markdown.para_node.call(null,G__219326,G__219327));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219325;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219324;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219323;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219322;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_219328 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219329 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_219330 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219331 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__219332 = cljs.core.PersistentArrayMap.EMPTY;
var G__219333 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__219334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__219335 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__219334,G__219335) : tailrecursion.hoplon.markdown.simple_node.call(null,G__219334,G__219335));
})(),"s define two intervals \\(x=(a-\\delta,a+\\delta)\\), and \\(y=(b-\\epsilon,b+\\epsilon)\\), where \\(\\delta,\\epsilon\\) are positive real numbers (and hence the width of their respective intervals). Then, the interval ",(function (){var G__219336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(add-interval x y)"], null);
var G__219337 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__219336,G__219337) : tailrecursion.hoplon.markdown.code_node.call(null,G__219336,G__219337));
})()," would be \\((a+b-(\\epsilon+delta),a+b+(\\epsilon+\\delta))\\), making the width of the sum equal to the sum of the widths."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219332,G__219333) : tailrecursion.hoplon.markdown.para_node.call(null,G__219332,G__219333));
})(),(function (){var G__219338 = cljs.core.PersistentArrayMap.EMPTY;
var G__219339 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Similarly, ",(function (){var G__219340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(sub-interval a b)"], null);
var G__219341 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__219340,G__219341) : tailrecursion.hoplon.markdown.code_node.call(null,G__219340,G__219341));
})()," would be,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219338,G__219339) : tailrecursion.hoplon.markdown.para_node.call(null,G__219338,G__219339));
})(),(function (){var G__219342 = cljs.core.PersistentArrayMap.EMPTY;
var G__219343 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$(a-\\delta - (b+\\epsilon),a+\\epsilon-(b-\\epsilon))=(a-b-(\\delta+\\epsilon),a-b+(\\delta-\\epsilon))$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219342,G__219343) : tailrecursion.hoplon.markdown.para_node.call(null,G__219342,G__219343));
})(),(function (){var G__219344 = cljs.core.PersistentArrayMap.EMPTY;
var G__219345 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["making the width of the difference of intervals equal to the  difference of the widths of the intervals."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219344,G__219345) : tailrecursion.hoplon.markdown.para_node.call(null,G__219344,G__219345));
})(),(function (){var G__219346 = cljs.core.PersistentArrayMap.EMPTY;
var G__219347 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For multiplication, however, things are not as simple. Let",(function (){var G__219348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__219349 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__219348,G__219349) : tailrecursion.hoplon.markdown.simple_node.call(null,G__219348,G__219349));
})(),"s consider two pairs of intervals, each pair with the same corresponding widths:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219346,G__219347) : tailrecursion.hoplon.markdown.para_node.call(null,G__219346,G__219347));
})(),(function (){var G__219350 = cljs.core.PersistentArrayMap.EMPTY;
var G__219351 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$a=(0,2), b=(0,2) c=(5,7) d=(5,7)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219350,G__219351) : tailrecursion.hoplon.markdown.para_node.call(null,G__219350,G__219351));
})(),(function (){var G__219352 = cljs.core.PersistentArrayMap.EMPTY;
var G__219353 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since these intervals all have the same width, if the width of the product is a function of the widths of the intervals, then the product of any two of these intervals should yield an interval with the same width. But this is clearly not this case because ",(function (){var G__219354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(width\n(mul-interval a b))"], null);
var G__219355 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__219354,G__219355) : tailrecursion.hoplon.markdown.code_node.call(null,G__219354,G__219355));
})()," is 2, but ",(function (){var G__219356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(width (mul-interval c d))"], null);
var G__219357 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__219356,G__219357) : tailrecursion.hoplon.markdown.code_node.call(null,G__219356,G__219357));
})()," is 12. So clearly the width of the product is not a function of the widths alone."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219352,G__219353) : tailrecursion.hoplon.markdown.para_node.call(null,G__219352,G__219353));
})(),(function (){var G__219358 = cljs.core.PersistentArrayMap.EMPTY;
var G__219359 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for division, we can define \\(a,b=(1,2)\\), and \\(c,d=\\((5,6)\\). Then, ",(function (){var G__219360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(div-interval a b)"], null);
var G__219361 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__219360,G__219361) : tailrecursion.hoplon.markdown.code_node.call(null,G__219360,G__219361));
})()," is \\((1/2, 2)\\), but ",(function (){var G__219362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(div-interval c d)"], null);
var G__219363 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__219362,G__219363) : tailrecursion.hoplon.markdown.code_node.call(null,G__219362,G__219363));
})()," is \\((5/6,6/5)\\). The width of the first is 0.75 or 3/4, but the width of the second is 11/60."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219358,G__219359) : tailrecursion.hoplon.markdown.para_node.call(null,G__219358,G__219359));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219331;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219330;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219329;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219328;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_219364 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219365 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_219366 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219367 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__219368 = cljs.core.PersistentArrayMap.EMPTY;
var G__219369 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Ben Bitdiddle, an expert systems programmer, looks over Alyssa",(function (){var G__219370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__219371 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__219370,G__219371) : tailrecursion.hoplon.markdown.simple_node.call(null,G__219370,G__219371));
})(),"s shoulder and comments that it is not clear what it means to divide by an interval that spans zero. Modify Alyssa",(function (){var G__219372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__219373 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__219372,G__219373) : tailrecursion.hoplon.markdown.simple_node.call(null,G__219372,G__219373));
})(),"s code to check for this condition and to signal an error if it occurs."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219368,G__219369) : tailrecursion.hoplon.markdown.para_node.call(null,G__219368,G__219369));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219367;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219366;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219365;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219364;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_219374 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219375 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_219376 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219377 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__219502 = (function (){var G__219503 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__219504 = (function (){var G__219505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__219506 = "(";
var G__219507 = (function (){var G__219565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__219566 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219565,G__219566) : tailrecursion.hoplon.span.call(null,G__219565,G__219566));
})();
var G__219508 = (function (){var G__219567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219568 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219567,G__219568) : tailrecursion.hoplon.span.call(null,G__219567,G__219568));
})();
var G__219509 = " [";
var G__219510 = (function (){var G__219569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219570 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219569,G__219570) : tailrecursion.hoplon.span.call(null,G__219569,G__219570));
})();
var G__219511 = " ";
var G__219512 = (function (){var G__219571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219572 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219571,G__219572) : tailrecursion.hoplon.span.call(null,G__219571,G__219572));
})();
var G__219513 = "]\n  (";
var G__219514 = (function (){var G__219573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__219574 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219573,G__219574) : tailrecursion.hoplon.span.call(null,G__219573,G__219574));
})();
var G__219515 = "[";
var G__219516 = (function (){var G__219575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219576 = "span-zero?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219575,G__219576) : tailrecursion.hoplon.span.call(null,G__219575,G__219576));
})();
var G__219517 = " ";
var G__219518 = (function (){var G__219577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__219578 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219577,G__219578) : tailrecursion.hoplon.span.call(null,G__219577,G__219578));
})();
var G__219519 = "(";
var G__219520 = (function (){var G__219579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__219580 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219579,G__219580) : tailrecursion.hoplon.span.call(null,G__219579,G__219580));
})();
var G__219521 = (function (){var G__219581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__219582 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219581,G__219582) : tailrecursion.hoplon.span.call(null,G__219581,G__219582));
})();
var G__219522 = "\n                       (";
var G__219523 = (function (){var G__219583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__219584 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219583,G__219584) : tailrecursion.hoplon.span.call(null,G__219583,G__219584));
})();
var G__219524 = "(";
var G__219525 = (function (){var G__219585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219586 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219585,G__219586) : tailrecursion.hoplon.span.call(null,G__219585,G__219586));
})();
var G__219526 = " ";
var G__219527 = (function (){var G__219587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219588 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219587,G__219588) : tailrecursion.hoplon.span.call(null,G__219587,G__219588));
})();
var G__219528 = ")\n                          (";
var G__219529 = (function (){var G__219589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219590 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219589,G__219590) : tailrecursion.hoplon.span.call(null,G__219589,G__219590));
})();
var G__219530 = " ";
var G__219531 = (function (){var G__219591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219592 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219591,G__219592) : tailrecursion.hoplon.span.call(null,G__219591,G__219592));
})();
var G__219532 = ")))]\n    (";
var G__219533 = (function (){var G__219593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__219594 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219593,G__219594) : tailrecursion.hoplon.span.call(null,G__219593,G__219594));
})();
var G__219534 = "(";
var G__219535 = (function (){var G__219595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219596 = "span-zero?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219595,G__219596) : tailrecursion.hoplon.span.call(null,G__219595,G__219596));
})();
var G__219536 = " ";
var G__219537 = (function (){var G__219597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219598 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219597,G__219598) : tailrecursion.hoplon.span.call(null,G__219597,G__219598));
})();
var G__219538 = ")\n        (";
var G__219539 = (function (){var G__219599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219600 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219599,G__219600) : tailrecursion.hoplon.span.call(null,G__219599,G__219600));
})();
var G__219540 = " (";
var G__219541 = (function (){var G__219601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219602 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219601,G__219602) : tailrecursion.hoplon.span.call(null,G__219601,G__219602));
})();
var G__219542 = " ";
var G__219543 = (function (){var G__219603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__219604 = "\"Can't divide by zero!\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219603,G__219604) : tailrecursion.hoplon.span.call(null,G__219603,G__219604));
})();
var G__219544 = "))\n        (";
var G__219545 = (function (){var G__219605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219606 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219605,G__219606) : tailrecursion.hoplon.span.call(null,G__219605,G__219606));
})();
var G__219546 = " ";
var G__219547 = (function (){var G__219607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219608 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219607,G__219608) : tailrecursion.hoplon.span.call(null,G__219607,G__219608));
})();
var G__219548 = "\n                      (";
var G__219549 = (function (){var G__219609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219610 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219609,G__219610) : tailrecursion.hoplon.span.call(null,G__219609,G__219610));
})();
var G__219550 = " (";
var G__219551 = (function (){var G__219611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__219612 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219611,G__219612) : tailrecursion.hoplon.span.call(null,G__219611,G__219612));
})();
var G__219552 = (function (){var G__219613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__219614 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219613,G__219614) : tailrecursion.hoplon.span.call(null,G__219613,G__219614));
})();
var G__219553 = " (";
var G__219554 = (function (){var G__219615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219616 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219615,G__219616) : tailrecursion.hoplon.span.call(null,G__219615,G__219616));
})();
var G__219555 = " ";
var G__219556 = (function (){var G__219617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219618 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219617,G__219618) : tailrecursion.hoplon.span.call(null,G__219617,G__219618));
})();
var G__219557 = "))\n                                     (";
var G__219558 = (function (){var G__219619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__219620 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219619,G__219620) : tailrecursion.hoplon.span.call(null,G__219619,G__219620));
})();
var G__219559 = (function (){var G__219621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__219622 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219621,G__219622) : tailrecursion.hoplon.span.call(null,G__219621,G__219622));
})();
var G__219560 = " (";
var G__219561 = (function (){var G__219623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219624 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219623,G__219624) : tailrecursion.hoplon.span.call(null,G__219623,G__219624));
})();
var G__219562 = " ";
var G__219563 = (function (){var G__219625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219626 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219625,G__219626) : tailrecursion.hoplon.span.call(null,G__219625,G__219626));
})();
var G__219564 = ")))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60(G__219505,G__219506,G__219507,G__219508,G__219509,G__219510,G__219511,G__219512,G__219513,G__219514,G__219515,G__219516,G__219517,G__219518,G__219519,G__219520,G__219521,G__219522,G__219523,G__219524,G__219525,G__219526,G__219527,G__219528,G__219529,G__219530,G__219531,G__219532,G__219533,G__219534,G__219535,G__219536,G__219537,G__219538,G__219539,G__219540,G__219541,G__219542,G__219543,G__219544,G__219545,G__219546,G__219547,G__219548,G__219549,G__219550,G__219551,G__219552,G__219553,G__219554,G__219555,G__219556,G__219557,G__219558,G__219559,G__219560,G__219561,G__219562,G__219563,G__219564) : tailrecursion.hoplon.pre.call(null,G__219505,G__219506,G__219507,G__219508,G__219509,G__219510,G__219511,G__219512,G__219513,G__219514,G__219515,G__219516,G__219517,G__219518,G__219519,G__219520,G__219521,G__219522,G__219523,G__219524,G__219525,G__219526,G__219527,G__219528,G__219529,G__219530,G__219531,G__219532,G__219533,G__219534,G__219535,G__219536,G__219537,G__219538,G__219539,G__219540,G__219541,G__219542,G__219543,G__219544,G__219545,G__219546,G__219547,G__219548,G__219549,G__219550,G__219551,G__219552,G__219553,G__219554,G__219555,G__219556,G__219557,G__219558,G__219559,G__219560,G__219561,G__219562,G__219563,G__219564));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__219503,G__219504) : tailrecursion.hoplon.div.call(null,G__219503,G__219504));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__219502) : tailrecursion.hoplon.div.call(null,G__219502));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219377;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219376;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219375;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219374;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_219627 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219628 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_219629 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219630 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__219631 = cljs.core.PersistentArrayMap.EMPTY;
var G__219632 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In passing, Ben also cryptically comments: ",(function (){var G__219633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__219634 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["By testing the signs of the endpoints of the intervals, it is possible to break mul-interval into nine cases, only one of which requires more than two multiplications."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__219633,G__219634) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__219633,G__219634));
})()," Rewrite this procedure using Ben",(function (){var G__219635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__219636 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__219635,G__219636) : tailrecursion.hoplon.markdown.simple_node.call(null,G__219635,G__219636));
})(),"s suggestion."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219631,G__219632) : tailrecursion.hoplon.markdown.para_node.call(null,G__219631,G__219632));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219630;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219629;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219628;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219627;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_219637 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219638 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_219639 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219640 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__220310 = (function (){var G__220311 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__220312 = (function (){var G__220313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__220314 = "(";
var G__220315 = (function (){var G__220644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__220645 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220644,G__220645) : tailrecursion.hoplon.span.call(null,G__220644,G__220645));
})();
var G__220316 = (function (){var G__220646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220647 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220646,G__220647) : tailrecursion.hoplon.span.call(null,G__220646,G__220647));
})();
var G__220317 = " [";
var G__220318 = (function (){var G__220648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220649 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220648,G__220649) : tailrecursion.hoplon.span.call(null,G__220648,G__220649));
})();
var G__220319 = " ";
var G__220320 = (function (){var G__220650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220651 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220650,G__220651) : tailrecursion.hoplon.span.call(null,G__220650,G__220651));
})();
var G__220321 = "]\n  (";
var G__220322 = (function (){var G__220652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220653 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220652,G__220653) : tailrecursion.hoplon.span.call(null,G__220652,G__220653));
})();
var G__220323 = "(";
var G__220324 = (function (){var G__220654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220655 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220654,G__220655) : tailrecursion.hoplon.span.call(null,G__220654,G__220655));
})();
var G__220325 = "(";
var G__220326 = (function (){var G__220656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220657 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220656,G__220657) : tailrecursion.hoplon.span.call(null,G__220656,G__220657));
})();
var G__220327 = " ";
var G__220328 = (function (){var G__220658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220659 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220658,G__220659) : tailrecursion.hoplon.span.call(null,G__220658,G__220659));
})();
var G__220329 = ") ";
var G__220330 = (function (){var G__220660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__220661 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220660,G__220661) : tailrecursion.hoplon.span.call(null,G__220660,G__220661));
})();
var G__220331 = ")\n        (";
var G__220332 = (function (){var G__220662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220663 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220662,G__220663) : tailrecursion.hoplon.span.call(null,G__220662,G__220663));
})();
var G__220333 = "(";
var G__220334 = (function (){var G__220664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220665 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220664,G__220665) : tailrecursion.hoplon.span.call(null,G__220664,G__220665));
})();
var G__220335 = "(";
var G__220336 = (function (){var G__220666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220667 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220666,G__220667) : tailrecursion.hoplon.span.call(null,G__220666,G__220667));
})();
var G__220337 = " ";
var G__220338 = (function (){var G__220668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220669 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220668,G__220669) : tailrecursion.hoplon.span.call(null,G__220668,G__220669));
})();
var G__220339 = ") ";
var G__220340 = (function (){var G__220670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__220671 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220670,G__220671) : tailrecursion.hoplon.span.call(null,G__220670,G__220671));
})();
var G__220341 = ")\n              (";
var G__220342 = (function (){var G__220672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220673 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220672,G__220673) : tailrecursion.hoplon.span.call(null,G__220672,G__220673));
})();
var G__220343 = " (";
var G__220344 = (function (){var G__220674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220675 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220674,G__220675) : tailrecursion.hoplon.span.call(null,G__220674,G__220675));
})();
var G__220345 = "(";
var G__220346 = (function (){var G__220676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220677 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220676,G__220677) : tailrecursion.hoplon.span.call(null,G__220676,G__220677));
})();
var G__220347 = " ";
var G__220348 = (function (){var G__220678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220679 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220678,G__220679) : tailrecursion.hoplon.span.call(null,G__220678,G__220679));
})();
var G__220349 = ")\n                                (";
var G__220350 = (function (){var G__220680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220681 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220680,G__220681) : tailrecursion.hoplon.span.call(null,G__220680,G__220681));
})();
var G__220351 = " ";
var G__220352 = (function (){var G__220682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220683 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220682,G__220683) : tailrecursion.hoplon.span.call(null,G__220682,G__220683));
})();
var G__220353 = "))\n                             (";
var G__220354 = (function (){var G__220684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220685 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220684,G__220685) : tailrecursion.hoplon.span.call(null,G__220684,G__220685));
})();
var G__220355 = "(";
var G__220356 = (function (){var G__220686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220687 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220686,G__220687) : tailrecursion.hoplon.span.call(null,G__220686,G__220687));
})();
var G__220357 = " ";
var G__220358 = (function (){var G__220688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220689 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220688,G__220689) : tailrecursion.hoplon.span.call(null,G__220688,G__220689));
})();
var G__220359 = ")\n                                (";
var G__220360 = (function (){var G__220690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220691 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220690,G__220691) : tailrecursion.hoplon.span.call(null,G__220690,G__220691));
})();
var G__220361 = " ";
var G__220362 = (function (){var G__220692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220693 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220692,G__220693) : tailrecursion.hoplon.span.call(null,G__220692,G__220693));
})();
var G__220363 = ")))\n              (";
var G__220364 = (function (){var G__220694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220695 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220694,G__220695) : tailrecursion.hoplon.span.call(null,G__220694,G__220695));
})();
var G__220365 = (function (){var G__220696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__220697 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220696,G__220697) : tailrecursion.hoplon.span.call(null,G__220696,G__220697));
})();
var G__220366 = " (";
var G__220367 = (function (){var G__220698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220699 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220698,G__220699) : tailrecursion.hoplon.span.call(null,G__220698,G__220699));
})();
var G__220368 = " ";
var G__220369 = (function (){var G__220700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220701 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220700,G__220701) : tailrecursion.hoplon.span.call(null,G__220700,G__220701));
})();
var G__220370 = "))\n              (";
var G__220371 = (function (){var G__220702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220703 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220702,G__220703) : tailrecursion.hoplon.span.call(null,G__220702,G__220703));
})();
var G__220372 = " (";
var G__220373 = (function (){var G__220704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220705 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220704,G__220705) : tailrecursion.hoplon.span.call(null,G__220704,G__220705));
})();
var G__220374 = "(";
var G__220375 = (function (){var G__220706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220707 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220706,G__220707) : tailrecursion.hoplon.span.call(null,G__220706,G__220707));
})();
var G__220376 = " ";
var G__220377 = (function (){var G__220708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220709 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220708,G__220709) : tailrecursion.hoplon.span.call(null,G__220708,G__220709));
})();
var G__220378 = ")\n                                (";
var G__220379 = (function (){var G__220710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220711 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220710,G__220711) : tailrecursion.hoplon.span.call(null,G__220710,G__220711));
})();
var G__220380 = " ";
var G__220381 = (function (){var G__220712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220713 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220712,G__220713) : tailrecursion.hoplon.span.call(null,G__220712,G__220713));
})();
var G__220382 = "))\n                             (";
var G__220383 = (function (){var G__220714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220715 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220714,G__220715) : tailrecursion.hoplon.span.call(null,G__220714,G__220715));
})();
var G__220384 = "(";
var G__220385 = (function (){var G__220716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220717 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220716,G__220717) : tailrecursion.hoplon.span.call(null,G__220716,G__220717));
})();
var G__220386 = " ";
var G__220387 = (function (){var G__220718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220719 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220718,G__220719) : tailrecursion.hoplon.span.call(null,G__220718,G__220719));
})();
var G__220388 = ")\n                                (";
var G__220389 = (function (){var G__220720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220721 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220720,G__220721) : tailrecursion.hoplon.span.call(null,G__220720,G__220721));
})();
var G__220390 = " ";
var G__220391 = (function (){var G__220722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220723 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220722,G__220723) : tailrecursion.hoplon.span.call(null,G__220722,G__220723));
})();
var G__220392 = ")))\n              ";
var G__220393 = (function (){var G__220724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220725 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220724,G__220725) : tailrecursion.hoplon.span.call(null,G__220724,G__220725));
})();
var G__220394 = " \n              (";
var G__220395 = (function (){var G__220726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220727 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220726,G__220727) : tailrecursion.hoplon.span.call(null,G__220726,G__220727));
})();
var G__220396 = " (";
var G__220397 = (function (){var G__220728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220729 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220728,G__220729) : tailrecursion.hoplon.span.call(null,G__220728,G__220729));
})();
var G__220398 = "(";
var G__220399 = (function (){var G__220730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220731 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220730,G__220731) : tailrecursion.hoplon.span.call(null,G__220730,G__220731));
})();
var G__220400 = " ";
var G__220401 = (function (){var G__220732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220733 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220732,G__220733) : tailrecursion.hoplon.span.call(null,G__220732,G__220733));
})();
var G__220402 = ")\n                                (";
var G__220403 = (function (){var G__220734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220735 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220734,G__220735) : tailrecursion.hoplon.span.call(null,G__220734,G__220735));
})();
var G__220404 = " ";
var G__220405 = (function (){var G__220736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220737 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220736,G__220737) : tailrecursion.hoplon.span.call(null,G__220736,G__220737));
})();
var G__220406 = "))\n                             (";
var G__220407 = (function (){var G__220738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220739 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220738,G__220739) : tailrecursion.hoplon.span.call(null,G__220738,G__220739));
})();
var G__220408 = "(";
var G__220409 = (function (){var G__220740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220741 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220740,G__220741) : tailrecursion.hoplon.span.call(null,G__220740,G__220741));
})();
var G__220410 = " ";
var G__220411 = (function (){var G__220742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220743 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220742,G__220743) : tailrecursion.hoplon.span.call(null,G__220742,G__220743));
})();
var G__220412 = ")\n                                (";
var G__220413 = (function (){var G__220744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220745 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220744,G__220745) : tailrecursion.hoplon.span.call(null,G__220744,G__220745));
})();
var G__220414 = " ";
var G__220415 = (function (){var G__220746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220747 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220746,G__220747) : tailrecursion.hoplon.span.call(null,G__220746,G__220747));
})();
var G__220416 = "))))\n        (";
var G__220417 = (function (){var G__220748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220749 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220748,G__220749) : tailrecursion.hoplon.span.call(null,G__220748,G__220749));
})();
var G__220418 = (function (){var G__220750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__220751 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220750,G__220751) : tailrecursion.hoplon.span.call(null,G__220750,G__220751));
})();
var G__220419 = " (";
var G__220420 = (function (){var G__220752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220753 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220752,G__220753) : tailrecursion.hoplon.span.call(null,G__220752,G__220753));
})();
var G__220421 = " ";
var G__220422 = (function (){var G__220754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220755 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220754,G__220755) : tailrecursion.hoplon.span.call(null,G__220754,G__220755));
})();
var G__220423 = "))\n        (";
var G__220424 = (function (){var G__220756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220757 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220756,G__220757) : tailrecursion.hoplon.span.call(null,G__220756,G__220757));
})();
var G__220425 = "(";
var G__220426 = (function (){var G__220758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220759 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220758,G__220759) : tailrecursion.hoplon.span.call(null,G__220758,G__220759));
})();
var G__220427 = "(";
var G__220428 = (function (){var G__220760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220761 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220760,G__220761) : tailrecursion.hoplon.span.call(null,G__220760,G__220761));
})();
var G__220429 = " ";
var G__220430 = (function (){var G__220762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220763 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220762,G__220763) : tailrecursion.hoplon.span.call(null,G__220762,G__220763));
})();
var G__220431 = ") ";
var G__220432 = (function (){var G__220764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__220765 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220764,G__220765) : tailrecursion.hoplon.span.call(null,G__220764,G__220765));
})();
var G__220433 = ")\n              (";
var G__220434 = (function (){var G__220766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220767 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220766,G__220767) : tailrecursion.hoplon.span.call(null,G__220766,G__220767));
})();
var G__220435 = " (";
var G__220436 = (function (){var G__220768 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220769 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220768,G__220769) : tailrecursion.hoplon.span.call(null,G__220768,G__220769));
})();
var G__220437 = "(";
var G__220438 = (function (){var G__220770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220771 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220770,G__220771) : tailrecursion.hoplon.span.call(null,G__220770,G__220771));
})();
var G__220439 = " ";
var G__220440 = (function (){var G__220772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220773 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220772,G__220773) : tailrecursion.hoplon.span.call(null,G__220772,G__220773));
})();
var G__220441 = ")\n                                (";
var G__220442 = (function (){var G__220774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220775 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220774,G__220775) : tailrecursion.hoplon.span.call(null,G__220774,G__220775));
})();
var G__220443 = " ";
var G__220444 = (function (){var G__220776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220777 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220776,G__220777) : tailrecursion.hoplon.span.call(null,G__220776,G__220777));
})();
var G__220445 = "))\n                             (";
var G__220446 = (function (){var G__220778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220779 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220778,G__220779) : tailrecursion.hoplon.span.call(null,G__220778,G__220779));
})();
var G__220447 = "(";
var G__220448 = (function (){var G__220780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220781 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220780,G__220781) : tailrecursion.hoplon.span.call(null,G__220780,G__220781));
})();
var G__220449 = " ";
var G__220450 = (function (){var G__220782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220783 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220782,G__220783) : tailrecursion.hoplon.span.call(null,G__220782,G__220783));
})();
var G__220451 = ")\n                                (";
var G__220452 = (function (){var G__220784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220785 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220784,G__220785) : tailrecursion.hoplon.span.call(null,G__220784,G__220785));
})();
var G__220453 = " ";
var G__220454 = (function (){var G__220786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220787 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220786,G__220787) : tailrecursion.hoplon.span.call(null,G__220786,G__220787));
})();
var G__220455 = ")))\n              (";
var G__220456 = (function (){var G__220788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220789 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220788,G__220789) : tailrecursion.hoplon.span.call(null,G__220788,G__220789));
})();
var G__220457 = (function (){var G__220790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__220791 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220790,G__220791) : tailrecursion.hoplon.span.call(null,G__220790,G__220791));
})();
var G__220458 = " (";
var G__220459 = (function (){var G__220792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220793 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220792,G__220793) : tailrecursion.hoplon.span.call(null,G__220792,G__220793));
})();
var G__220460 = " ";
var G__220461 = (function (){var G__220794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220795 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220794,G__220795) : tailrecursion.hoplon.span.call(null,G__220794,G__220795));
})();
var G__220462 = "))\n              (";
var G__220463 = (function (){var G__220796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220797 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220796,G__220797) : tailrecursion.hoplon.span.call(null,G__220796,G__220797));
})();
var G__220464 = " (";
var G__220465 = (function (){var G__220798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220799 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220798,G__220799) : tailrecursion.hoplon.span.call(null,G__220798,G__220799));
})();
var G__220466 = "(";
var G__220467 = (function (){var G__220800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220801 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220800,G__220801) : tailrecursion.hoplon.span.call(null,G__220800,G__220801));
})();
var G__220468 = " ";
var G__220469 = (function (){var G__220802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220803 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220802,G__220803) : tailrecursion.hoplon.span.call(null,G__220802,G__220803));
})();
var G__220470 = ")\n                                (";
var G__220471 = (function (){var G__220804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220805 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220804,G__220805) : tailrecursion.hoplon.span.call(null,G__220804,G__220805));
})();
var G__220472 = " ";
var G__220473 = (function (){var G__220806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220807 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220806,G__220807) : tailrecursion.hoplon.span.call(null,G__220806,G__220807));
})();
var G__220474 = "))\n                             (";
var G__220475 = (function (){var G__220808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220809 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220808,G__220809) : tailrecursion.hoplon.span.call(null,G__220808,G__220809));
})();
var G__220476 = "(";
var G__220477 = (function (){var G__220810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220811 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220810,G__220811) : tailrecursion.hoplon.span.call(null,G__220810,G__220811));
})();
var G__220478 = " ";
var G__220479 = (function (){var G__220812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220813 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220812,G__220813) : tailrecursion.hoplon.span.call(null,G__220812,G__220813));
})();
var G__220480 = ")\n                                (";
var G__220481 = (function (){var G__220814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220815 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220814,G__220815) : tailrecursion.hoplon.span.call(null,G__220814,G__220815));
})();
var G__220482 = " ";
var G__220483 = (function (){var G__220816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220817 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220816,G__220817) : tailrecursion.hoplon.span.call(null,G__220816,G__220817));
})();
var G__220484 = ")))\n              ";
var G__220485 = (function (){var G__220818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220819 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220818,G__220819) : tailrecursion.hoplon.span.call(null,G__220818,G__220819));
})();
var G__220486 = " \n              (";
var G__220487 = (function (){var G__220820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220821 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220820,G__220821) : tailrecursion.hoplon.span.call(null,G__220820,G__220821));
})();
var G__220488 = " (";
var G__220489 = (function (){var G__220822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220823 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220822,G__220823) : tailrecursion.hoplon.span.call(null,G__220822,G__220823));
})();
var G__220490 = "(";
var G__220491 = (function (){var G__220824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220825 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220824,G__220825) : tailrecursion.hoplon.span.call(null,G__220824,G__220825));
})();
var G__220492 = " ";
var G__220493 = (function (){var G__220826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220827 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220826,G__220827) : tailrecursion.hoplon.span.call(null,G__220826,G__220827));
})();
var G__220494 = ")\n                                (";
var G__220495 = (function (){var G__220828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220829 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220828,G__220829) : tailrecursion.hoplon.span.call(null,G__220828,G__220829));
})();
var G__220496 = " ";
var G__220497 = (function (){var G__220830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220831 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220830,G__220831) : tailrecursion.hoplon.span.call(null,G__220830,G__220831));
})();
var G__220498 = "))\n                             (";
var G__220499 = (function (){var G__220832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220833 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220832,G__220833) : tailrecursion.hoplon.span.call(null,G__220832,G__220833));
})();
var G__220500 = "(";
var G__220501 = (function (){var G__220834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220835 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220834,G__220835) : tailrecursion.hoplon.span.call(null,G__220834,G__220835));
})();
var G__220502 = " ";
var G__220503 = (function (){var G__220836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220837 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220836,G__220837) : tailrecursion.hoplon.span.call(null,G__220836,G__220837));
})();
var G__220504 = ")\n                                (";
var G__220505 = (function (){var G__220838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220839 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220838,G__220839) : tailrecursion.hoplon.span.call(null,G__220838,G__220839));
})();
var G__220506 = " ";
var G__220507 = (function (){var G__220840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220841 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220840,G__220841) : tailrecursion.hoplon.span.call(null,G__220840,G__220841));
})();
var G__220508 = "))))\n        ";
var G__220509 = (function (){var G__220842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220843 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220842,G__220843) : tailrecursion.hoplon.span.call(null,G__220842,G__220843));
})();
var G__220510 = "\n        (";
var G__220511 = (function (){var G__220844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220845 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220844,G__220845) : tailrecursion.hoplon.span.call(null,G__220844,G__220845));
})();
var G__220512 = "(";
var G__220513 = (function (){var G__220846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220847 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220846,G__220847) : tailrecursion.hoplon.span.call(null,G__220846,G__220847));
})();
var G__220514 = "(";
var G__220515 = (function (){var G__220848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220849 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220848,G__220849) : tailrecursion.hoplon.span.call(null,G__220848,G__220849));
})();
var G__220516 = " ";
var G__220517 = (function (){var G__220850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220851 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220850,G__220851) : tailrecursion.hoplon.span.call(null,G__220850,G__220851));
})();
var G__220518 = ") ";
var G__220519 = (function (){var G__220852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__220853 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220852,G__220853) : tailrecursion.hoplon.span.call(null,G__220852,G__220853));
})();
var G__220520 = ")\n              (";
var G__220521 = (function (){var G__220854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220855 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220854,G__220855) : tailrecursion.hoplon.span.call(null,G__220854,G__220855));
})();
var G__220522 = " (";
var G__220523 = (function (){var G__220856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220857 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220856,G__220857) : tailrecursion.hoplon.span.call(null,G__220856,G__220857));
})();
var G__220524 = "(";
var G__220525 = (function (){var G__220858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220859 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220858,G__220859) : tailrecursion.hoplon.span.call(null,G__220858,G__220859));
})();
var G__220526 = " ";
var G__220527 = (function (){var G__220860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220861 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220860,G__220861) : tailrecursion.hoplon.span.call(null,G__220860,G__220861));
})();
var G__220528 = ")\n                                (";
var G__220529 = (function (){var G__220862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220863 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220862,G__220863) : tailrecursion.hoplon.span.call(null,G__220862,G__220863));
})();
var G__220530 = " ";
var G__220531 = (function (){var G__220864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220865 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220864,G__220865) : tailrecursion.hoplon.span.call(null,G__220864,G__220865));
})();
var G__220532 = "))\n                             (";
var G__220533 = (function (){var G__220866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220867 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220866,G__220867) : tailrecursion.hoplon.span.call(null,G__220866,G__220867));
})();
var G__220534 = "(";
var G__220535 = (function (){var G__220868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220869 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220868,G__220869) : tailrecursion.hoplon.span.call(null,G__220868,G__220869));
})();
var G__220536 = " ";
var G__220537 = (function (){var G__220870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220871 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220870,G__220871) : tailrecursion.hoplon.span.call(null,G__220870,G__220871));
})();
var G__220538 = ")\n                                (";
var G__220539 = (function (){var G__220872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220873 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220872,G__220873) : tailrecursion.hoplon.span.call(null,G__220872,G__220873));
})();
var G__220540 = " ";
var G__220541 = (function (){var G__220874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220875 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220874,G__220875) : tailrecursion.hoplon.span.call(null,G__220874,G__220875));
})();
var G__220542 = ")))\n              (";
var G__220543 = (function (){var G__220876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220877 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220876,G__220877) : tailrecursion.hoplon.span.call(null,G__220876,G__220877));
})();
var G__220544 = (function (){var G__220878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__220879 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220878,G__220879) : tailrecursion.hoplon.span.call(null,G__220878,G__220879));
})();
var G__220545 = " (";
var G__220546 = (function (){var G__220880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220881 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220880,G__220881) : tailrecursion.hoplon.span.call(null,G__220880,G__220881));
})();
var G__220547 = " ";
var G__220548 = (function (){var G__220882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220883 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220882,G__220883) : tailrecursion.hoplon.span.call(null,G__220882,G__220883));
})();
var G__220549 = "))\n              (";
var G__220550 = (function (){var G__220884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220885 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220884,G__220885) : tailrecursion.hoplon.span.call(null,G__220884,G__220885));
})();
var G__220551 = " (";
var G__220552 = (function (){var G__220886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220887 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220886,G__220887) : tailrecursion.hoplon.span.call(null,G__220886,G__220887));
})();
var G__220553 = "(";
var G__220554 = (function (){var G__220888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220889 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220888,G__220889) : tailrecursion.hoplon.span.call(null,G__220888,G__220889));
})();
var G__220555 = " ";
var G__220556 = (function (){var G__220890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220891 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220890,G__220891) : tailrecursion.hoplon.span.call(null,G__220890,G__220891));
})();
var G__220557 = ")\n                                (";
var G__220558 = (function (){var G__220892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220893 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220892,G__220893) : tailrecursion.hoplon.span.call(null,G__220892,G__220893));
})();
var G__220559 = " ";
var G__220560 = (function (){var G__220894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220895 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220894,G__220895) : tailrecursion.hoplon.span.call(null,G__220894,G__220895));
})();
var G__220561 = "))\n                             (";
var G__220562 = (function (){var G__220896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220897 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220896,G__220897) : tailrecursion.hoplon.span.call(null,G__220896,G__220897));
})();
var G__220563 = "(";
var G__220564 = (function (){var G__220898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220899 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220898,G__220899) : tailrecursion.hoplon.span.call(null,G__220898,G__220899));
})();
var G__220565 = " ";
var G__220566 = (function (){var G__220900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220901 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220900,G__220901) : tailrecursion.hoplon.span.call(null,G__220900,G__220901));
})();
var G__220567 = ")\n                                (";
var G__220568 = (function (){var G__220902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220903 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220902,G__220903) : tailrecursion.hoplon.span.call(null,G__220902,G__220903));
})();
var G__220569 = " ";
var G__220570 = (function (){var G__220904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220905 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220904,G__220905) : tailrecursion.hoplon.span.call(null,G__220904,G__220905));
})();
var G__220571 = ")))\n              ";
var G__220572 = (function (){var G__220906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220907 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220906,G__220907) : tailrecursion.hoplon.span.call(null,G__220906,G__220907));
})();
var G__220573 = " \n              (";
var G__220574 = (function (){var G__220908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__220909 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220908,G__220909) : tailrecursion.hoplon.span.call(null,G__220908,G__220909));
})();
var G__220575 = "[";
var G__220576 = (function (){var G__220910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220911 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220910,G__220911) : tailrecursion.hoplon.span.call(null,G__220910,G__220911));
})();
var G__220577 = " (";
var G__220578 = (function (){var G__220912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220913 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220912,G__220913) : tailrecursion.hoplon.span.call(null,G__220912,G__220913));
})();
var G__220579 = "(";
var G__220580 = (function (){var G__220914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220915 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220914,G__220915) : tailrecursion.hoplon.span.call(null,G__220914,G__220915));
})();
var G__220581 = " ";
var G__220582 = (function (){var G__220916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220917 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220916,G__220917) : tailrecursion.hoplon.span.call(null,G__220916,G__220917));
})();
var G__220583 = ")\n                         (";
var G__220584 = (function (){var G__220918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220919 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220918,G__220919) : tailrecursion.hoplon.span.call(null,G__220918,G__220919));
})();
var G__220585 = " ";
var G__220586 = (function (){var G__220920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220921 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220920,G__220921) : tailrecursion.hoplon.span.call(null,G__220920,G__220921));
})();
var G__220587 = "))\n                    ";
var G__220588 = (function (){var G__220922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220923 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220922,G__220923) : tailrecursion.hoplon.span.call(null,G__220922,G__220923));
})();
var G__220589 = " (";
var G__220590 = (function (){var G__220924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220925 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220924,G__220925) : tailrecursion.hoplon.span.call(null,G__220924,G__220925));
})();
var G__220591 = "(";
var G__220592 = (function (){var G__220926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220927 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220926,G__220927) : tailrecursion.hoplon.span.call(null,G__220926,G__220927));
})();
var G__220593 = " ";
var G__220594 = (function (){var G__220928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220929 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220928,G__220929) : tailrecursion.hoplon.span.call(null,G__220928,G__220929));
})();
var G__220595 = ")\n                         (";
var G__220596 = (function (){var G__220930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220931 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220930,G__220931) : tailrecursion.hoplon.span.call(null,G__220930,G__220931));
})();
var G__220597 = " ";
var G__220598 = (function (){var G__220932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220933 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220932,G__220933) : tailrecursion.hoplon.span.call(null,G__220932,G__220933));
})();
var G__220599 = "))\n                    ";
var G__220600 = (function (){var G__220934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220935 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220934,G__220935) : tailrecursion.hoplon.span.call(null,G__220934,G__220935));
})();
var G__220601 = " (";
var G__220602 = (function (){var G__220936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220937 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220936,G__220937) : tailrecursion.hoplon.span.call(null,G__220936,G__220937));
})();
var G__220603 = "(";
var G__220604 = (function (){var G__220938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220939 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220938,G__220939) : tailrecursion.hoplon.span.call(null,G__220938,G__220939));
})();
var G__220605 = " ";
var G__220606 = (function (){var G__220940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220941 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220940,G__220941) : tailrecursion.hoplon.span.call(null,G__220940,G__220941));
})();
var G__220607 = ")\n                         (";
var G__220608 = (function (){var G__220942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220943 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220942,G__220943) : tailrecursion.hoplon.span.call(null,G__220942,G__220943));
})();
var G__220609 = " ";
var G__220610 = (function (){var G__220944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220945 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220944,G__220945) : tailrecursion.hoplon.span.call(null,G__220944,G__220945));
})();
var G__220611 = "))\n                    ";
var G__220612 = (function (){var G__220946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220947 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220946,G__220947) : tailrecursion.hoplon.span.call(null,G__220946,G__220947));
})();
var G__220613 = " (";
var G__220614 = (function (){var G__220948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220949 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220948,G__220949) : tailrecursion.hoplon.span.call(null,G__220948,G__220949));
})();
var G__220615 = "(";
var G__220616 = (function (){var G__220950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220951 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220950,G__220951) : tailrecursion.hoplon.span.call(null,G__220950,G__220951));
})();
var G__220617 = " ";
var G__220618 = (function (){var G__220952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220953 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220952,G__220953) : tailrecursion.hoplon.span.call(null,G__220952,G__220953));
})();
var G__220619 = ")\n                         (";
var G__220620 = (function (){var G__220954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220955 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220954,G__220955) : tailrecursion.hoplon.span.call(null,G__220954,G__220955));
})();
var G__220621 = " ";
var G__220622 = (function (){var G__220956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220957 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220956,G__220957) : tailrecursion.hoplon.span.call(null,G__220956,G__220957));
})();
var G__220623 = "))]\n                (";
var G__220624 = (function (){var G__220958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220959 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220958,G__220959) : tailrecursion.hoplon.span.call(null,G__220958,G__220959));
})();
var G__220625 = " (";
var G__220626 = (function (){var G__220960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220961 = "min ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220960,G__220961) : tailrecursion.hoplon.span.call(null,G__220960,G__220961));
})();
var G__220627 = (function (){var G__220962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220963 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220962,G__220963) : tailrecursion.hoplon.span.call(null,G__220962,G__220963));
})();
var G__220628 = " ";
var G__220629 = (function (){var G__220964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220965 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220964,G__220965) : tailrecursion.hoplon.span.call(null,G__220964,G__220965));
})();
var G__220630 = " ";
var G__220631 = (function (){var G__220966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220967 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220966,G__220967) : tailrecursion.hoplon.span.call(null,G__220966,G__220967));
})();
var G__220632 = " ";
var G__220633 = (function (){var G__220968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220969 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220968,G__220969) : tailrecursion.hoplon.span.call(null,G__220968,G__220969));
})();
var G__220634 = ")\n                               (";
var G__220635 = (function (){var G__220970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220971 = "max ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220970,G__220971) : tailrecursion.hoplon.span.call(null,G__220970,G__220971));
})();
var G__220636 = (function (){var G__220972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220973 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220972,G__220973) : tailrecursion.hoplon.span.call(null,G__220972,G__220973));
})();
var G__220637 = " ";
var G__220638 = (function (){var G__220974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220975 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220974,G__220975) : tailrecursion.hoplon.span.call(null,G__220974,G__220975));
})();
var G__220639 = " ";
var G__220640 = (function (){var G__220976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220977 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220976,G__220977) : tailrecursion.hoplon.span.call(null,G__220976,G__220977));
})();
var G__220641 = " ";
var G__220642 = (function (){var G__220978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220979 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220978,G__220979) : tailrecursion.hoplon.span.call(null,G__220978,G__220979));
})();
var G__220643 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$331 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$331(G__220313,G__220314,G__220315,G__220316,G__220317,G__220318,G__220319,G__220320,G__220321,G__220322,G__220323,G__220324,G__220325,G__220326,G__220327,G__220328,G__220329,G__220330,G__220331,G__220332,G__220333,G__220334,G__220335,G__220336,G__220337,G__220338,G__220339,G__220340,G__220341,G__220342,G__220343,G__220344,G__220345,G__220346,G__220347,G__220348,G__220349,G__220350,G__220351,G__220352,G__220353,G__220354,G__220355,G__220356,G__220357,G__220358,G__220359,G__220360,G__220361,G__220362,G__220363,G__220364,G__220365,G__220366,G__220367,G__220368,G__220369,G__220370,G__220371,G__220372,G__220373,G__220374,G__220375,G__220376,G__220377,G__220378,G__220379,G__220380,G__220381,G__220382,G__220383,G__220384,G__220385,G__220386,G__220387,G__220388,G__220389,G__220390,G__220391,G__220392,G__220393,G__220394,G__220395,G__220396,G__220397,G__220398,G__220399,G__220400,G__220401,G__220402,G__220403,G__220404,G__220405,G__220406,G__220407,G__220408,G__220409,G__220410,G__220411,G__220412,G__220413,G__220414,G__220415,G__220416,G__220417,G__220418,G__220419,G__220420,G__220421,G__220422,G__220423,G__220424,G__220425,G__220426,G__220427,G__220428,G__220429,G__220430,G__220431,G__220432,G__220433,G__220434,G__220435,G__220436,G__220437,G__220438,G__220439,G__220440,G__220441,G__220442,G__220443,G__220444,G__220445,G__220446,G__220447,G__220448,G__220449,G__220450,G__220451,G__220452,G__220453,G__220454,G__220455,G__220456,G__220457,G__220458,G__220459,G__220460,G__220461,G__220462,G__220463,G__220464,G__220465,G__220466,G__220467,G__220468,G__220469,G__220470,G__220471,G__220472,G__220473,G__220474,G__220475,G__220476,G__220477,G__220478,G__220479,G__220480,G__220481,G__220482,G__220483,G__220484,G__220485,G__220486,G__220487,G__220488,G__220489,G__220490,G__220491,G__220492,G__220493,G__220494,G__220495,G__220496,G__220497,G__220498,G__220499,G__220500,G__220501,G__220502,G__220503,G__220504,G__220505,G__220506,G__220507,G__220508,G__220509,G__220510,G__220511,G__220512,G__220513,G__220514,G__220515,G__220516,G__220517,G__220518,G__220519,G__220520,G__220521,G__220522,G__220523,G__220524,G__220525,G__220526,G__220527,G__220528,G__220529,G__220530,G__220531,G__220532,G__220533,G__220534,G__220535,G__220536,G__220537,G__220538,G__220539,G__220540,G__220541,G__220542,G__220543,G__220544,G__220545,G__220546,G__220547,G__220548,G__220549,G__220550,G__220551,G__220552,G__220553,G__220554,G__220555,G__220556,G__220557,G__220558,G__220559,G__220560,G__220561,G__220562,G__220563,G__220564,G__220565,G__220566,G__220567,G__220568,G__220569,G__220570,G__220571,G__220572,G__220573,G__220574,G__220575,G__220576,G__220577,G__220578,G__220579,G__220580,G__220581,G__220582,G__220583,G__220584,G__220585,G__220586,G__220587,G__220588,G__220589,G__220590,G__220591,G__220592,G__220593,G__220594,G__220595,G__220596,G__220597,G__220598,G__220599,G__220600,G__220601,G__220602,G__220603,G__220604,G__220605,G__220606,G__220607,G__220608,G__220609,G__220610,G__220611,G__220612,G__220613,G__220614,G__220615,G__220616,G__220617,G__220618,G__220619,G__220620,G__220621,G__220622,G__220623,G__220624,G__220625,G__220626,G__220627,G__220628,G__220629,G__220630,G__220631,G__220632,G__220633,G__220634,G__220635,G__220636,G__220637,G__220638,G__220639,G__220640,G__220641,G__220642,G__220643) : tailrecursion.hoplon.pre.call(null,G__220313,G__220314,G__220315,G__220316,G__220317,G__220318,G__220319,G__220320,G__220321,G__220322,G__220323,G__220324,G__220325,G__220326,G__220327,G__220328,G__220329,G__220330,G__220331,G__220332,G__220333,G__220334,G__220335,G__220336,G__220337,G__220338,G__220339,G__220340,G__220341,G__220342,G__220343,G__220344,G__220345,G__220346,G__220347,G__220348,G__220349,G__220350,G__220351,G__220352,G__220353,G__220354,G__220355,G__220356,G__220357,G__220358,G__220359,G__220360,G__220361,G__220362,G__220363,G__220364,G__220365,G__220366,G__220367,G__220368,G__220369,G__220370,G__220371,G__220372,G__220373,G__220374,G__220375,G__220376,G__220377,G__220378,G__220379,G__220380,G__220381,G__220382,G__220383,G__220384,G__220385,G__220386,G__220387,G__220388,G__220389,G__220390,G__220391,G__220392,G__220393,G__220394,G__220395,G__220396,G__220397,G__220398,G__220399,G__220400,G__220401,G__220402,G__220403,G__220404,G__220405,G__220406,G__220407,G__220408,G__220409,G__220410,G__220411,G__220412,G__220413,G__220414,G__220415,G__220416,G__220417,G__220418,G__220419,G__220420,G__220421,G__220422,G__220423,G__220424,G__220425,G__220426,G__220427,G__220428,G__220429,G__220430,G__220431,G__220432,G__220433,G__220434,G__220435,G__220436,G__220437,G__220438,G__220439,G__220440,G__220441,G__220442,G__220443,G__220444,G__220445,G__220446,G__220447,G__220448,G__220449,G__220450,G__220451,G__220452,G__220453,G__220454,G__220455,G__220456,G__220457,G__220458,G__220459,G__220460,G__220461,G__220462,G__220463,G__220464,G__220465,G__220466,G__220467,G__220468,G__220469,G__220470,G__220471,G__220472,G__220473,G__220474,G__220475,G__220476,G__220477,G__220478,G__220479,G__220480,G__220481,G__220482,G__220483,G__220484,G__220485,G__220486,G__220487,G__220488,G__220489,G__220490,G__220491,G__220492,G__220493,G__220494,G__220495,G__220496,G__220497,G__220498,G__220499,G__220500,G__220501,G__220502,G__220503,G__220504,G__220505,G__220506,G__220507,G__220508,G__220509,G__220510,G__220511,G__220512,G__220513,G__220514,G__220515,G__220516,G__220517,G__220518,G__220519,G__220520,G__220521,G__220522,G__220523,G__220524,G__220525,G__220526,G__220527,G__220528,G__220529,G__220530,G__220531,G__220532,G__220533,G__220534,G__220535,G__220536,G__220537,G__220538,G__220539,G__220540,G__220541,G__220542,G__220543,G__220544,G__220545,G__220546,G__220547,G__220548,G__220549,G__220550,G__220551,G__220552,G__220553,G__220554,G__220555,G__220556,G__220557,G__220558,G__220559,G__220560,G__220561,G__220562,G__220563,G__220564,G__220565,G__220566,G__220567,G__220568,G__220569,G__220570,G__220571,G__220572,G__220573,G__220574,G__220575,G__220576,G__220577,G__220578,G__220579,G__220580,G__220581,G__220582,G__220583,G__220584,G__220585,G__220586,G__220587,G__220588,G__220589,G__220590,G__220591,G__220592,G__220593,G__220594,G__220595,G__220596,G__220597,G__220598,G__220599,G__220600,G__220601,G__220602,G__220603,G__220604,G__220605,G__220606,G__220607,G__220608,G__220609,G__220610,G__220611,G__220612,G__220613,G__220614,G__220615,G__220616,G__220617,G__220618,G__220619,G__220620,G__220621,G__220622,G__220623,G__220624,G__220625,G__220626,G__220627,G__220628,G__220629,G__220630,G__220631,G__220632,G__220633,G__220634,G__220635,G__220636,G__220637,G__220638,G__220639,G__220640,G__220641,G__220642,G__220643));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__220311,G__220312) : tailrecursion.hoplon.div.call(null,G__220311,G__220312));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__220310) : tailrecursion.hoplon.div.call(null,G__220310));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219640;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219639;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219638;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219637;
}})()], 0)),"",(function (){var _STAR_references_STAR_220980 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_220981 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_220982 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_220983 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__220984 = cljs.core.PersistentArrayMap.EMPTY;
var G__220985 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["After debugging her program, Alyssa shows it to a potential user, who complains that her program solves the wrong problem. He wants a program that can deal with numbers represented as a center value and an additive tolerance; for example, he wants to work with intervals such as 3.5\u00B1 0.15 rather than ",tailrecursion.hoplon.markdown.ref_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$separator_DASH_space,null,cljs.core.cst$kw$reference_DASH_key,null], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["3.35, 3.65"], null)], 0)),". Alyssa returns to her desk and fixes this problem by supplying an alternate constructor and alternate selectors:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__220984,G__220985) : tailrecursion.hoplon.markdown.para_node.call(null,G__220984,G__220985));
})(),(function (){var G__221109 = (function (){var G__221110 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__221111 = (function (){var G__221112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__221113 = "(";
var G__221114 = (function (){var G__221171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__221172 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221171,G__221172) : tailrecursion.hoplon.span.call(null,G__221171,G__221172));
})();
var G__221115 = (function (){var G__221173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221174 = "make-center-width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221173,G__221174) : tailrecursion.hoplon.span.call(null,G__221173,G__221174));
})();
var G__221116 = " [";
var G__221117 = (function (){var G__221175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221176 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221175,G__221176) : tailrecursion.hoplon.span.call(null,G__221175,G__221176));
})();
var G__221118 = " ";
var G__221119 = (function (){var G__221177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221178 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221177,G__221178) : tailrecursion.hoplon.span.call(null,G__221177,G__221178));
})();
var G__221120 = "]\n  (";
var G__221121 = (function (){var G__221179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221180 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221179,G__221180) : tailrecursion.hoplon.span.call(null,G__221179,G__221180));
})();
var G__221122 = " (";
var G__221123 = (function (){var G__221181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__221182 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221181,G__221182) : tailrecursion.hoplon.span.call(null,G__221181,G__221182));
})();
var G__221124 = (function (){var G__221183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221184 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221183,G__221184) : tailrecursion.hoplon.span.call(null,G__221183,G__221184));
})();
var G__221125 = " ";
var G__221126 = (function (){var G__221185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221186 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221185,G__221186) : tailrecursion.hoplon.span.call(null,G__221185,G__221186));
})();
var G__221127 = ") (";
var G__221128 = (function (){var G__221187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__221188 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221187,G__221188) : tailrecursion.hoplon.span.call(null,G__221187,G__221188));
})();
var G__221129 = (function (){var G__221189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221190 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221189,G__221190) : tailrecursion.hoplon.span.call(null,G__221189,G__221190));
})();
var G__221130 = " ";
var G__221131 = (function (){var G__221191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221192 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221191,G__221192) : tailrecursion.hoplon.span.call(null,G__221191,G__221192));
})();
var G__221132 = ")))\n(";
var G__221133 = (function (){var G__221193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__221194 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221193,G__221194) : tailrecursion.hoplon.span.call(null,G__221193,G__221194));
})();
var G__221134 = (function (){var G__221195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221196 = "center";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221195,G__221196) : tailrecursion.hoplon.span.call(null,G__221195,G__221196));
})();
var G__221135 = " [";
var G__221136 = (function (){var G__221197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221198 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221197,G__221198) : tailrecursion.hoplon.span.call(null,G__221197,G__221198));
})();
var G__221137 = "]\n  (";
var G__221138 = (function (){var G__221199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__221200 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221199,G__221200) : tailrecursion.hoplon.span.call(null,G__221199,G__221200));
})();
var G__221139 = "(";
var G__221140 = (function (){var G__221201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__221202 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221201,G__221202) : tailrecursion.hoplon.span.call(null,G__221201,G__221202));
})();
var G__221141 = "(";
var G__221142 = (function (){var G__221203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221204 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221203,G__221204) : tailrecursion.hoplon.span.call(null,G__221203,G__221204));
})();
var G__221143 = " ";
var G__221144 = (function (){var G__221205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221206 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221205,G__221206) : tailrecursion.hoplon.span.call(null,G__221205,G__221206));
})();
var G__221145 = ") (";
var G__221146 = (function (){var G__221207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221208 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221207,G__221208) : tailrecursion.hoplon.span.call(null,G__221207,G__221208));
})();
var G__221147 = " ";
var G__221148 = (function (){var G__221209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221210 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221209,G__221210) : tailrecursion.hoplon.span.call(null,G__221209,G__221210));
})();
var G__221149 = ")) ";
var G__221150 = (function (){var G__221211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__221212 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221211,G__221212) : tailrecursion.hoplon.span.call(null,G__221211,G__221212));
})();
var G__221151 = "))\n(";
var G__221152 = (function (){var G__221213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__221214 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221213,G__221214) : tailrecursion.hoplon.span.call(null,G__221213,G__221214));
})();
var G__221153 = (function (){var G__221215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221216 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221215,G__221216) : tailrecursion.hoplon.span.call(null,G__221215,G__221216));
})();
var G__221154 = " [";
var G__221155 = (function (){var G__221217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221218 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221217,G__221218) : tailrecursion.hoplon.span.call(null,G__221217,G__221218));
})();
var G__221156 = "]\n  (";
var G__221157 = (function (){var G__221219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__221220 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221219,G__221220) : tailrecursion.hoplon.span.call(null,G__221219,G__221220));
})();
var G__221158 = "(";
var G__221159 = (function (){var G__221221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__221222 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221221,G__221222) : tailrecursion.hoplon.span.call(null,G__221221,G__221222));
})();
var G__221160 = "(";
var G__221161 = (function (){var G__221223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221224 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221223,G__221224) : tailrecursion.hoplon.span.call(null,G__221223,G__221224));
})();
var G__221162 = " ";
var G__221163 = (function (){var G__221225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221226 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221225,G__221226) : tailrecursion.hoplon.span.call(null,G__221225,G__221226));
})();
var G__221164 = ") (";
var G__221165 = (function (){var G__221227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221228 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221227,G__221228) : tailrecursion.hoplon.span.call(null,G__221227,G__221228));
})();
var G__221166 = " ";
var G__221167 = (function (){var G__221229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221230 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221229,G__221230) : tailrecursion.hoplon.span.call(null,G__221229,G__221230));
})();
var G__221168 = ")) ";
var G__221169 = (function (){var G__221231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__221232 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221231,G__221232) : tailrecursion.hoplon.span.call(null,G__221231,G__221232));
})();
var G__221170 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59(G__221112,G__221113,G__221114,G__221115,G__221116,G__221117,G__221118,G__221119,G__221120,G__221121,G__221122,G__221123,G__221124,G__221125,G__221126,G__221127,G__221128,G__221129,G__221130,G__221131,G__221132,G__221133,G__221134,G__221135,G__221136,G__221137,G__221138,G__221139,G__221140,G__221141,G__221142,G__221143,G__221144,G__221145,G__221146,G__221147,G__221148,G__221149,G__221150,G__221151,G__221152,G__221153,G__221154,G__221155,G__221156,G__221157,G__221158,G__221159,G__221160,G__221161,G__221162,G__221163,G__221164,G__221165,G__221166,G__221167,G__221168,G__221169,G__221170) : tailrecursion.hoplon.pre.call(null,G__221112,G__221113,G__221114,G__221115,G__221116,G__221117,G__221118,G__221119,G__221120,G__221121,G__221122,G__221123,G__221124,G__221125,G__221126,G__221127,G__221128,G__221129,G__221130,G__221131,G__221132,G__221133,G__221134,G__221135,G__221136,G__221137,G__221138,G__221139,G__221140,G__221141,G__221142,G__221143,G__221144,G__221145,G__221146,G__221147,G__221148,G__221149,G__221150,G__221151,G__221152,G__221153,G__221154,G__221155,G__221156,G__221157,G__221158,G__221159,G__221160,G__221161,G__221162,G__221163,G__221164,G__221165,G__221166,G__221167,G__221168,G__221169,G__221170));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__221110,G__221111) : tailrecursion.hoplon.div.call(null,G__221110,G__221111));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__221109) : tailrecursion.hoplon.div.call(null,G__221109));
})(),(function (){var G__221233 = cljs.core.PersistentArrayMap.EMPTY;
var G__221234 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Unfortunately, most of Alyssa",(function (){var G__221235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__221236 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__221235,G__221236) : tailrecursion.hoplon.markdown.simple_node.call(null,G__221235,G__221236));
})(),"s users are engineers. Real engineering situations usually involve measurements with only a small uncertainty, measured as the ratio of the width of the interval to the midpoint of the interval. Engineers usually specify percentage tolerances on the parameters of devices, as in the resistor specifications given earlier."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221233,G__221234) : tailrecursion.hoplon.markdown.para_node.call(null,G__221233,G__221234));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_220983;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_220982;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_220981;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_220980;
}})()], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_221237 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221238 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221239 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221240 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221241 = cljs.core.PersistentArrayMap.EMPTY;
var G__221242 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a constructor ",(function (){var G__221243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-center-percent"], null);
var G__221244 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__221243,G__221244) : tailrecursion.hoplon.markdown.code_node.call(null,G__221243,G__221244));
})()," that takes a center and a percentage tolerance and produces the desired interval. You must also define a selector ",(function (){var G__221245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"percent"], null);
var G__221246 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__221245,G__221246) : tailrecursion.hoplon.markdown.code_node.call(null,G__221245,G__221246));
})()," that produces the percentage tolerance for a given interval. The ",(function (){var G__221247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"center"], null);
var G__221248 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__221247,G__221248) : tailrecursion.hoplon.markdown.code_node.call(null,G__221247,G__221248));
})()," selector is the same as the one above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221241,G__221242) : tailrecursion.hoplon.markdown.para_node.call(null,G__221241,G__221242));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221240;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221239;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221238;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221237;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_221249 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221250 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221251 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221252 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221348 = (function (){var G__221349 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__221350 = (function (){var G__221351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__221352 = "(";
var G__221353 = (function (){var G__221396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__221397 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221396,G__221397) : tailrecursion.hoplon.span.call(null,G__221396,G__221397));
})();
var G__221354 = (function (){var G__221398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221399 = "make-center-percent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221398,G__221399) : tailrecursion.hoplon.span.call(null,G__221398,G__221399));
})();
var G__221355 = " [";
var G__221356 = (function (){var G__221400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221401 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221400,G__221401) : tailrecursion.hoplon.span.call(null,G__221400,G__221401));
})();
var G__221357 = " ";
var G__221358 = (function (){var G__221402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221403 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221402,G__221403) : tailrecursion.hoplon.span.call(null,G__221402,G__221403));
})();
var G__221359 = "]\n  (";
var G__221360 = (function (){var G__221404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__221405 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221404,G__221405) : tailrecursion.hoplon.span.call(null,G__221404,G__221405));
})();
var G__221361 = "[";
var G__221362 = (function (){var G__221406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221407 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221406,G__221407) : tailrecursion.hoplon.span.call(null,G__221406,G__221407));
})();
var G__221363 = " (";
var G__221364 = (function (){var G__221408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__221409 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221408,G__221409) : tailrecursion.hoplon.span.call(null,G__221408,G__221409));
})();
var G__221365 = (function (){var G__221410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221411 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221410,G__221411) : tailrecursion.hoplon.span.call(null,G__221410,G__221411));
})();
var G__221366 = " ";
var G__221367 = (function (){var G__221412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221413 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221412,G__221413) : tailrecursion.hoplon.span.call(null,G__221412,G__221413));
})();
var G__221368 = ")]\n    (";
var G__221369 = (function (){var G__221414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221415 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221414,G__221415) : tailrecursion.hoplon.span.call(null,G__221414,G__221415));
})();
var G__221370 = " (";
var G__221371 = (function (){var G__221416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__221417 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221416,G__221417) : tailrecursion.hoplon.span.call(null,G__221416,G__221417));
})();
var G__221372 = (function (){var G__221418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221419 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221418,G__221419) : tailrecursion.hoplon.span.call(null,G__221418,G__221419));
})();
var G__221373 = " ";
var G__221374 = (function (){var G__221420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221421 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221420,G__221421) : tailrecursion.hoplon.span.call(null,G__221420,G__221421));
})();
var G__221375 = ") (";
var G__221376 = (function (){var G__221422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__221423 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221422,G__221423) : tailrecursion.hoplon.span.call(null,G__221422,G__221423));
})();
var G__221377 = (function (){var G__221424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221425 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221424,G__221425) : tailrecursion.hoplon.span.call(null,G__221424,G__221425));
})();
var G__221378 = " ";
var G__221379 = (function (){var G__221426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221427 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221426,G__221427) : tailrecursion.hoplon.span.call(null,G__221426,G__221427));
})();
var G__221380 = "))))\n(";
var G__221381 = (function (){var G__221428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__221429 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221428,G__221429) : tailrecursion.hoplon.span.call(null,G__221428,G__221429));
})();
var G__221382 = (function (){var G__221430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221431 = "percent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221430,G__221431) : tailrecursion.hoplon.span.call(null,G__221430,G__221431));
})();
var G__221383 = " [";
var G__221384 = (function (){var G__221432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221433 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221432,G__221433) : tailrecursion.hoplon.span.call(null,G__221432,G__221433));
})();
var G__221385 = "]\n  (";
var G__221386 = (function (){var G__221434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__221435 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221434,G__221435) : tailrecursion.hoplon.span.call(null,G__221434,G__221435));
})();
var G__221387 = "(";
var G__221388 = (function (){var G__221436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221437 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221436,G__221437) : tailrecursion.hoplon.span.call(null,G__221436,G__221437));
})();
var G__221389 = " ";
var G__221390 = (function (){var G__221438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221439 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221438,G__221439) : tailrecursion.hoplon.span.call(null,G__221438,G__221439));
})();
var G__221391 = ") (";
var G__221392 = (function (){var G__221440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221441 = "center";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221440,G__221441) : tailrecursion.hoplon.span.call(null,G__221440,G__221441));
})();
var G__221393 = " ";
var G__221394 = (function (){var G__221442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221443 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221442,G__221443) : tailrecursion.hoplon.span.call(null,G__221442,G__221443));
})();
var G__221395 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45(G__221351,G__221352,G__221353,G__221354,G__221355,G__221356,G__221357,G__221358,G__221359,G__221360,G__221361,G__221362,G__221363,G__221364,G__221365,G__221366,G__221367,G__221368,G__221369,G__221370,G__221371,G__221372,G__221373,G__221374,G__221375,G__221376,G__221377,G__221378,G__221379,G__221380,G__221381,G__221382,G__221383,G__221384,G__221385,G__221386,G__221387,G__221388,G__221389,G__221390,G__221391,G__221392,G__221393,G__221394,G__221395) : tailrecursion.hoplon.pre.call(null,G__221351,G__221352,G__221353,G__221354,G__221355,G__221356,G__221357,G__221358,G__221359,G__221360,G__221361,G__221362,G__221363,G__221364,G__221365,G__221366,G__221367,G__221368,G__221369,G__221370,G__221371,G__221372,G__221373,G__221374,G__221375,G__221376,G__221377,G__221378,G__221379,G__221380,G__221381,G__221382,G__221383,G__221384,G__221385,G__221386,G__221387,G__221388,G__221389,G__221390,G__221391,G__221392,G__221393,G__221394,G__221395));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__221349,G__221350) : tailrecursion.hoplon.div.call(null,G__221349,G__221350));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__221348) : tailrecursion.hoplon.div.call(null,G__221348));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221252;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221251;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221250;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221249;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_221444 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221445 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221446 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221447 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221448 = cljs.core.PersistentArrayMap.EMPTY;
var G__221449 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Show that under the assumption of small percentage tolerances there is a simple formula for the approximate percentage tolerance of the product of two intervals in terms of the tolerances of the factors. You may simplify the problem by assuming that all numbers are positive."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221448,G__221449) : tailrecursion.hoplon.markdown.para_node.call(null,G__221448,G__221449));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221447;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221446;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221445;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221444;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_221450 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221451 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221452 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221453 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221454 = cljs.core.PersistentArrayMap.EMPTY;
var G__221455 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__221456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__221457 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__221456,G__221457) : tailrecursion.hoplon.markdown.simple_node.call(null,G__221456,G__221457));
})(),"s take two intervals, \\((a-\\epsilon,a+\\epsilon)\\) and \\((b-\\delta,b+\\delta)\\), where \\(a,b\\) and \\(\\epsilon,\\delta\\) are positive numbers and \\(\\epsilon,\\delta\\) are small. Then, the product is given by,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221454,G__221455) : tailrecursion.hoplon.markdown.para_node.call(null,G__221454,G__221455));
})(),(function (){var G__221458 = cljs.core.PersistentArrayMap.EMPTY;
var G__221459 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}&\\left((a-\\epsilon)(b-\\delta),(a+\\epsilon)(b+\\delta)\\right) \\\\=&\\left(ab-a\\delta-b\\epsilon+\\epsilon\\delta,ab+a\\delta+b\\epsilon+\\epsilon\\delta\\right) \\\\=&\\left((ab+\\epsilon\\delta)-(a\\delta+b\\epsilon),(ab+\\epsilon\\delta)+(a\\delta+b\\epsilon)\\right)\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221458,G__221459) : tailrecursion.hoplon.markdown.para_node.call(null,G__221458,G__221459));
})(),(function (){var G__221460 = cljs.core.PersistentArrayMap.EMPTY;
var G__221461 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, we see that the width in question is, \\(a\\delta+b\\epsilon\\), and the center is \\(ab+\\epsilon\\delta\\). Hence, the percentage tolerance is,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221460,G__221461) : tailrecursion.hoplon.markdown.para_node.call(null,G__221460,G__221461));
})(),(function (){var G__221462 = cljs.core.PersistentArrayMap.EMPTY;
var G__221463 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{a\\delta+b\\epsilon}{ab+\\epsilon\\delta}\\approx& \\frac{a\\delta +b\\epsilon}{ab+0} \\\\=&\\frac{a\\delta+b\\epsilon}{ab} \\\\=&\\frac{\\delta}{b}+\\frac{\\epsilon}{a}\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221462,G__221463) : tailrecursion.hoplon.markdown.para_node.call(null,G__221462,G__221463));
})(),(function (){var G__221464 = cljs.core.PersistentArrayMap.EMPTY;
var G__221465 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Which is the sum of the respective percentages."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221464,G__221465) : tailrecursion.hoplon.markdown.para_node.call(null,G__221464,G__221465));
})(),(function (){var G__221466 = cljs.core.PersistentArrayMap.EMPTY;
var G__221467 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, as long as the percentages are small enough for their squares to become negligible, the percentage tolerance of a product of intervals is sum of the percentage tolerances of the two respective intervals."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221466,G__221467) : tailrecursion.hoplon.markdown.para_node.call(null,G__221466,G__221467));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221453;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221452;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221451;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221450;
}})()], 0)),"",(function (){var _STAR_references_STAR_221468 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221469 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221470 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221471 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221472 = cljs.core.PersistentArrayMap.EMPTY;
var G__221473 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["After considerable work, Alyssa P. Hacker delivers her finished system. Several years later, after she has forgotten all about it, she gets a frenzied call from an irate user, Lem E. Tweakit. It seems that Lem has noticed that the formula for parallel resistors can be written in two algebraically equivalent ways:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221472,G__221473) : tailrecursion.hoplon.markdown.para_node.call(null,G__221472,G__221473));
})(),(function (){var G__221474 = cljs.core.PersistentArrayMap.EMPTY;
var G__221475 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{R_1R_2}{R_1+R_2}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221474,G__221475) : tailrecursion.hoplon.markdown.para_node.call(null,G__221474,G__221475));
})(),(function (){var G__221476 = cljs.core.PersistentArrayMap.EMPTY;
var G__221477 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221476,G__221477) : tailrecursion.hoplon.markdown.para_node.call(null,G__221476,G__221477));
})(),(function (){var G__221478 = cljs.core.PersistentArrayMap.EMPTY;
var G__221479 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{1}{1/R_1+1/R_2}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221478,G__221479) : tailrecursion.hoplon.markdown.para_node.call(null,G__221478,G__221479));
})(),(function (){var G__221480 = cljs.core.PersistentArrayMap.EMPTY;
var G__221481 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["He has written the following two programs, each of which computes the parallel-resistors formula differently:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221480,G__221481) : tailrecursion.hoplon.markdown.para_node.call(null,G__221480,G__221481));
})(),(function (){var G__221600 = (function (){var G__221601 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__221602 = (function (){var G__221603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__221604 = "(";
var G__221605 = (function (){var G__221661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__221662 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221661,G__221662) : tailrecursion.hoplon.span.call(null,G__221661,G__221662));
})();
var G__221606 = (function (){var G__221663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221664 = "par1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221663,G__221664) : tailrecursion.hoplon.span.call(null,G__221663,G__221664));
})();
var G__221607 = " [";
var G__221608 = (function (){var G__221665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221666 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221665,G__221666) : tailrecursion.hoplon.span.call(null,G__221665,G__221666));
})();
var G__221609 = " ";
var G__221610 = (function (){var G__221667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221668 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221667,G__221668) : tailrecursion.hoplon.span.call(null,G__221667,G__221668));
})();
var G__221611 = "]\n  (";
var G__221612 = (function (){var G__221669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221670 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221669,G__221670) : tailrecursion.hoplon.span.call(null,G__221669,G__221670));
})();
var G__221613 = " (";
var G__221614 = (function (){var G__221671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221672 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221671,G__221672) : tailrecursion.hoplon.span.call(null,G__221671,G__221672));
})();
var G__221615 = " ";
var G__221616 = (function (){var G__221673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221674 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221673,G__221674) : tailrecursion.hoplon.span.call(null,G__221673,G__221674));
})();
var G__221617 = " ";
var G__221618 = (function (){var G__221675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221676 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221675,G__221676) : tailrecursion.hoplon.span.call(null,G__221675,G__221676));
})();
var G__221619 = ")\n                (";
var G__221620 = (function (){var G__221677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221678 = "add-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221677,G__221678) : tailrecursion.hoplon.span.call(null,G__221677,G__221678));
})();
var G__221621 = " ";
var G__221622 = (function (){var G__221679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221680 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221679,G__221680) : tailrecursion.hoplon.span.call(null,G__221679,G__221680));
})();
var G__221623 = " ";
var G__221624 = (function (){var G__221681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221682 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221681,G__221682) : tailrecursion.hoplon.span.call(null,G__221681,G__221682));
})();
var G__221625 = ")))\n(";
var G__221626 = (function (){var G__221683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__221684 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221683,G__221684) : tailrecursion.hoplon.span.call(null,G__221683,G__221684));
})();
var G__221627 = (function (){var G__221685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221686 = "par2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221685,G__221686) : tailrecursion.hoplon.span.call(null,G__221685,G__221686));
})();
var G__221628 = " [";
var G__221629 = (function (){var G__221687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221688 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221687,G__221688) : tailrecursion.hoplon.span.call(null,G__221687,G__221688));
})();
var G__221630 = " ";
var G__221631 = (function (){var G__221689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221690 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221689,G__221690) : tailrecursion.hoplon.span.call(null,G__221689,G__221690));
})();
var G__221632 = "]\n  (";
var G__221633 = (function (){var G__221691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__221692 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221691,G__221692) : tailrecursion.hoplon.span.call(null,G__221691,G__221692));
})();
var G__221634 = "[";
var G__221635 = (function (){var G__221693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221694 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221693,G__221694) : tailrecursion.hoplon.span.call(null,G__221693,G__221694));
})();
var G__221636 = " (";
var G__221637 = (function (){var G__221695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221696 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221695,G__221696) : tailrecursion.hoplon.span.call(null,G__221695,G__221696));
})();
var G__221638 = " ";
var G__221639 = (function (){var G__221697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__221698 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221697,G__221698) : tailrecursion.hoplon.span.call(null,G__221697,G__221698));
})();
var G__221640 = " ";
var G__221641 = (function (){var G__221699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__221700 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221699,G__221700) : tailrecursion.hoplon.span.call(null,G__221699,G__221700));
})();
var G__221642 = ")]\n    (";
var G__221643 = (function (){var G__221701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221702 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221701,G__221702) : tailrecursion.hoplon.span.call(null,G__221701,G__221702));
})();
var G__221644 = " ";
var G__221645 = (function (){var G__221703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221704 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221703,G__221704) : tailrecursion.hoplon.span.call(null,G__221703,G__221704));
})();
var G__221646 = "\n                  (";
var G__221647 = (function (){var G__221705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221706 = "add-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221705,G__221706) : tailrecursion.hoplon.span.call(null,G__221705,G__221706));
})();
var G__221648 = " (";
var G__221649 = (function (){var G__221707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221708 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221707,G__221708) : tailrecursion.hoplon.span.call(null,G__221707,G__221708));
})();
var G__221650 = " ";
var G__221651 = (function (){var G__221709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221710 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221709,G__221710) : tailrecursion.hoplon.span.call(null,G__221709,G__221710));
})();
var G__221652 = " ";
var G__221653 = (function (){var G__221711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221712 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221711,G__221712) : tailrecursion.hoplon.span.call(null,G__221711,G__221712));
})();
var G__221654 = ")\n                                (";
var G__221655 = (function (){var G__221713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221714 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221713,G__221714) : tailrecursion.hoplon.span.call(null,G__221713,G__221714));
})();
var G__221656 = " ";
var G__221657 = (function (){var G__221715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221716 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221715,G__221716) : tailrecursion.hoplon.span.call(null,G__221715,G__221716));
})();
var G__221658 = " ";
var G__221659 = (function (){var G__221717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221718 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221717,G__221718) : tailrecursion.hoplon.span.call(null,G__221717,G__221718));
})();
var G__221660 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__221603,G__221604,G__221605,G__221606,G__221607,G__221608,G__221609,G__221610,G__221611,G__221612,G__221613,G__221614,G__221615,G__221616,G__221617,G__221618,G__221619,G__221620,G__221621,G__221622,G__221623,G__221624,G__221625,G__221626,G__221627,G__221628,G__221629,G__221630,G__221631,G__221632,G__221633,G__221634,G__221635,G__221636,G__221637,G__221638,G__221639,G__221640,G__221641,G__221642,G__221643,G__221644,G__221645,G__221646,G__221647,G__221648,G__221649,G__221650,G__221651,G__221652,G__221653,G__221654,G__221655,G__221656,G__221657,G__221658,G__221659,G__221660) : tailrecursion.hoplon.pre.call(null,G__221603,G__221604,G__221605,G__221606,G__221607,G__221608,G__221609,G__221610,G__221611,G__221612,G__221613,G__221614,G__221615,G__221616,G__221617,G__221618,G__221619,G__221620,G__221621,G__221622,G__221623,G__221624,G__221625,G__221626,G__221627,G__221628,G__221629,G__221630,G__221631,G__221632,G__221633,G__221634,G__221635,G__221636,G__221637,G__221638,G__221639,G__221640,G__221641,G__221642,G__221643,G__221644,G__221645,G__221646,G__221647,G__221648,G__221649,G__221650,G__221651,G__221652,G__221653,G__221654,G__221655,G__221656,G__221657,G__221658,G__221659,G__221660));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__221601,G__221602) : tailrecursion.hoplon.div.call(null,G__221601,G__221602));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__221600) : tailrecursion.hoplon.div.call(null,G__221600));
})(),(function (){var G__221719 = cljs.core.PersistentArrayMap.EMPTY;
var G__221720 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lem complains that Alyssa",(function (){var G__221721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__221722 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__221721,G__221722) : tailrecursion.hoplon.markdown.simple_node.call(null,G__221721,G__221722));
})(),"s program gives different answers for the two ways of computing. This is a serious complaint."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221719,G__221720) : tailrecursion.hoplon.markdown.para_node.call(null,G__221719,G__221720));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221471;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221470;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221469;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221468;
}})()], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_221723 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221724 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221725 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221726 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221727 = cljs.core.PersistentArrayMap.EMPTY;
var G__221728 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Demonstrate that Lem is right. Investigate the behavior of the system on a variety of arithmetic expressions. Make some intervals A and B, and use them in computing the expressions A/A and A/B. You will get the most insight by using intervals whose width is a small percentage of the center value. Examine the results of the computation in center-percent form (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/ex/12/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.12"], null)], 0)),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221727,G__221728) : tailrecursion.hoplon.markdown.para_node.call(null,G__221727,G__221728));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221726;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221725;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221724;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221723;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_221729 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221730 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221731 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221732 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221733 = cljs.core.PersistentArrayMap.EMPTY;
var G__221734 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If we define \\(A=(29.9,30.1)\\), and \\(B=(49.9,51.1)\\), what happens when we divide \\(A\\) by itself? \\(B\\) by itself? \\(A\\) by \\(B\\)? \\(B\\) by \\(A\\)?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221733,G__221734) : tailrecursion.hoplon.markdown.para_node.call(null,G__221733,G__221734));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221732;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221731;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221730;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221729;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_221735 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221736 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221737 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221738 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221739 = cljs.core.PersistentArrayMap.EMPTY;
var G__221740 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Eva Lu Ator, another user, has also noticed the different intervals computed by different but algebraically equivalent expressions. She says that a formula to compute with intervals using Alyssa",(function (){var G__221741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__221742 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__221741,G__221742) : tailrecursion.hoplon.markdown.simple_node.call(null,G__221741,G__221742));
})(),"s system will produce tighter error bounds if it can be written in such a form that no variable that represents an uncertain number is repeated. Thus, she says, ",(function (){var G__221743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"par2"], null);
var G__221744 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__221743,G__221744) : tailrecursion.hoplon.markdown.code_node.call(null,G__221743,G__221744));
})()," is a ",(function (){var G__221745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__221746 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["better"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__221745,G__221746) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__221745,G__221746));
})()," program for parallel resistances than ",(function (){var G__221747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"par1"], null);
var G__221748 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__221747,G__221748) : tailrecursion.hoplon.markdown.code_node.call(null,G__221747,G__221748));
})(),". Is she right? Why?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221739,G__221740) : tailrecursion.hoplon.markdown.para_node.call(null,G__221739,G__221740));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221738;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221737;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221736;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221735;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_221749 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221750 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221751 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221752 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221753 = cljs.core.PersistentArrayMap.EMPTY;
var G__221754 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["She is correct. The reason is, if we write an equation, \\(\\frac{x+1}{x}\\), for instance, the assumption is that both \\(x\\)s in the equation have the same value. If we do this with the interval arithmetic we",(function (){var G__221755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__221756 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__221755,G__221756) : tailrecursion.hoplon.markdown.simple_node.call(null,G__221755,G__221756));
})(),"ve defined here, that is not necessarily true. ie, if we define \\(A=(2,4)\\) then compute the above formula using our interval arithmetic assuming that \\(x\\) is in the interval \\(A\\), we get"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221753,G__221754) : tailrecursion.hoplon.markdown.para_node.call(null,G__221753,G__221754));
})(),(function (){var G__221757 = cljs.core.PersistentArrayMap.EMPTY;
var G__221758 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{A+1}{A}=&\\frac{(3,5)}{(2.4)} \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221757,G__221758) : tailrecursion.hoplon.markdown.para_node.call(null,G__221757,G__221758));
})(),(function (){var G__221759 = cljs.core.PersistentArrayMap.EMPTY;
var G__221760 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["which is another way of saying, ",(function (){var G__221761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__221762 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the interval obtained by taking any number between 3 and 5 and dividing it by another number between 2 and 4."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__221761,G__221762) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__221761,G__221762));
})()," But then, 3/4, for instance, would be in that interval by letting the numerator be 3 and the denominator be 4. But the problem is, if the numerator is to be 4, then \\(x=2\\), which means the denominator would be 2 as well."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221759,G__221760) : tailrecursion.hoplon.markdown.para_node.call(null,G__221759,G__221760));
})(),(function (){var G__221763 = cljs.core.PersistentArrayMap.EMPTY;
var G__221764 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The issue we",(function (){var G__221765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__221766 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__221765,G__221766) : tailrecursion.hoplon.markdown.simple_node.call(null,G__221765,G__221766));
})(),"re arriving at is that different instances of the same variable can have different values (if we use our current system of interval arithmetic)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221763,G__221764) : tailrecursion.hoplon.markdown.para_node.call(null,G__221763,G__221764));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221752;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221751;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221750;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221749;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_221767 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221768 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221769 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221770 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221771 = cljs.core.PersistentArrayMap.EMPTY;
var G__221772 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Explain, in general, why equivalent algebraic expressions may lead to different answers. Can you devise an interval-arithmetic package that does not have this shortcoming, or is this task impossible? (Warning: This problem is very difficult.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221771,G__221772) : tailrecursion.hoplon.markdown.para_node.call(null,G__221771,G__221772));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221770;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221769;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221768;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221767;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_221773 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221774 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221775 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221776 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221777 = cljs.core.PersistentArrayMap.EMPTY;
var G__221778 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I guess this would depend on what we mean by ",(function (){var G__221779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__221780 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["equivalent"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__221779,G__221780) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__221779,G__221780));
})(),". Already due to what we",(function (){var G__221781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__221782 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__221781,G__221782) : tailrecursion.hoplon.markdown.simple_node.call(null,G__221781,G__221782));
})(),"ve seen in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/15/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.15"], null)], 0)),", very strange things happen algebraically. For instance, our interval arithmetic does not have the distributive property. To show this, just observe that the distributive property states, \\(A(B+C)=AB+AC\\), but since \\(A\\) appears twice on the right hand side and there are no repeated variables on the left, by the previous exercise we know that the left hand side must have ",(function (){var G__221783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__221784 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tighter error bounds"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__221783,G__221784) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__221783,G__221784));
})(),". Hence the two sides cannot be equal unless there is no error in \\(A\\) (in which case \\(A\\) is not an interval, but a number)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221777,G__221778) : tailrecursion.hoplon.markdown.para_node.call(null,G__221777,G__221778));
})(),(function (){var G__221785 = cljs.core.PersistentArrayMap.EMPTY;
var G__221786 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, I",(function (){var G__221787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__221788 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__221787,G__221788) : tailrecursion.hoplon.markdown.simple_node.call(null,G__221787,G__221788));
})(),"m not too sure if this is possible, but when would we use this? If it is an engineering (or scientific) concern, then we are not really interested in intervals, but rather statistical probabilities, in which case we can use some theorems about error propagation to achieve our goal."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221785,G__221786) : tailrecursion.hoplon.markdown.para_node.call(null,G__221785,G__221786));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221776;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221775;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221774;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221773;
}})()], 0))], 0))], 0));
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$22(G__212488,G__212489,G__212490,G__212491,G__212492,G__212493,G__212494,G__212495,G__212496,G__212497,G__212498,G__212499,G__212500,G__212501,G__212502,G__212503,G__212504,G__212505,G__212506,G__212507,G__212508,G__212509) : tailrecursion.hoplon.div.call(null,G__212488,G__212489,G__212490,G__212491,G__212492,G__212493,G__212494,G__212495,G__212496,G__212497,G__212498,G__212499,G__212500,G__212501,G__212502,G__212503,G__212504,G__212505,G__212506,G__212507,G__212508,G__212509));
};
var book$sicp$texts$ch2sect1$content = function (var_args){
var args__8262__auto__ = null;
if (arguments.length > 0) {
var G__221789__i = 0, G__221789__a = new Array(arguments.length -  0);
while (G__221789__i < G__221789__a.length) {G__221789__a[G__221789__i] = arguments[G__221789__i + 0]; ++G__221789__i;}
  args__8262__auto__ = new cljs.core.IndexedSeq(G__221789__a,0);
} 
return book$sicp$texts$ch2sect1$content__delegate.call(this,args__8262__auto__);};
book$sicp$texts$ch2sect1$content.cljs$lang$maxFixedArity = 0;
book$sicp$texts$ch2sect1$content.cljs$lang$applyTo = (function (arglist__221790){
var args__8262__auto__ = cljs.core.seq(arglist__221790);
return book$sicp$texts$ch2sect1$content__delegate(args__8262__auto__);
});
book$sicp$texts$ch2sect1$content.cljs$core$IFn$_invoke$arity$variadic = book$sicp$texts$ch2sect1$content__delegate;
return book$sicp$texts$ch2sect1$content;
})()
;

// Compiled by ClojureScript 1.7.48 {:static-fns true, :optimize-constants true}
goog.provide('book.sicp.texts.ch2sect1');
goog.require('cljs.core');
goog.require('tailrecursion.hoplon.markdown');
goog.require('book.sicp.book_data');
goog.require('tailrecursion.hoplon');
goog.require('tailrecursion.javelin');
/**
 * @param {...*} var_args
 */
book.sicp.texts.ch2sect1.content = (function() { 
var book$sicp$texts$ch2sect1$content__delegate = function (args__8082__auto__){
var vec__212307 = tailrecursion.hoplon.parse_args(args__8082__auto__);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__212307,(0),null);
var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__212307,(1),null);
var G__212308 = cljs.core.PersistentArrayMap.EMPTY;
var G__212309 = book.sicp.book_data.sect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Introduction to Data Abstraction"], null),(function (){var _STAR_references_STAR_212330 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_212331 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_212332 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_212333 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__212334 = cljs.core.PersistentArrayMap.EMPTY;
var G__212335 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/1/sub/8/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.1.8"], null)], 0)),", we noted that a procedure used as an element in creating a more complex procedure could be regarded not only as a collection of particular operations but also as a procedural abstraction. That is, the details of how the procedure was implemented could be suppressed, and the particular procedure itself could be replaced by any other procedure with the same overall behavior. In other words, we could make an abstraction that would separate the way the procedure would be used from the details of how the procedure would be implemented in terms of more primitive procedures. The analogous notion for compound data is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data abstraction"], null)], 0)),". Data abstraction is a methodology that enables us to isolate how a compound data object is used from the details of how it is constructed from more primitive data objects."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__212334,G__212335) : tailrecursion.hoplon.markdown.para_node.call(null,G__212334,G__212335));
})(),(function (){var G__212336 = cljs.core.PersistentArrayMap.EMPTY;
var G__212337 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The basic idea of data abstraction is to structure the programs that are to use compound data objects so that they operate on ",(function (){var G__212338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__212339 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstract data."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__212338,G__212339) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__212338,G__212339));
})()," That is, our programs should use data in such a way as to make no assumptions about the data that are not strictly necessary for performing the task at hand. At the same time, a ",(function (){var G__212340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__212341 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["concrete"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__212340,G__212341) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__212340,G__212341));
})()," data representation is defined independent of the programs that use the data. The interface between these two parts of our system will be a set of procedures, called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selectors"], null)], 0))," and ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["constructors"], null)], 0)),", that implement the abstract data in terms of the concrete representation. To illustrate this technique, we will consider how to design a set of procedures for manipulating rational numbers."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__212336,G__212337) : tailrecursion.hoplon.markdown.para_node.call(null,G__212336,G__212337));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_212333;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_212332;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_212331;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_212330;
}})()], 0));
var G__212310 = "";
var G__212311 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Example: Arithmetic Operations for Rational Numbers"], null),(function (){var _STAR_references_STAR_212342 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_212343 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_212344 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_212345 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__212346 = cljs.core.PersistentArrayMap.EMPTY;
var G__212347 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Suppose we want to do arithmetic with rational numbers. We want to be able to add, subtract, multiply, and divide them and to test whether two rational numbers are equal."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__212346,G__212347) : tailrecursion.hoplon.markdown.para_node.call(null,G__212346,G__212347));
})(),(function (){var G__212348 = cljs.core.PersistentArrayMap.EMPTY;
var G__212349 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let us begin by assuming that we already have a way of constructing a rational number from a numerator and a denominator. We also assume that, given a rational number, we have a way of extracting (or selecting) its numerator and its denominator. Let us further assume that the constructor and selectors are available as procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__212348,G__212349) : tailrecursion.hoplon.markdown.para_node.call(null,G__212348,G__212349));
})(),(function (){var G__212350 = cljs.core.PersistentArrayMap.EMPTY;
var G__212351 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__212352 = cljs.core.PersistentArrayMap.EMPTY;
var G__212353 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_212354 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_212355 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__212356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(make-rat <n> <d>)"], null);
var G__212357 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__212356,G__212357) : tailrecursion.hoplon.markdown.code_node.call(null,G__212356,G__212357));
})()," returns the rational number whose numerator is the integer ",(function (){var G__212358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<n>"], null);
var G__212359 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__212358,G__212359) : tailrecursion.hoplon.markdown.code_node.call(null,G__212358,G__212359));
})()," and whose denominator is the integer ",(function (){var G__212360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<d>"], null);
var G__212361 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__212360,G__212361) : tailrecursion.hoplon.markdown.code_node.call(null,G__212360,G__212361));
})(),". - ",(function (){var G__212362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(numer <x>)"], null);
var G__212363 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__212362,G__212363) : tailrecursion.hoplon.markdown.code_node.call(null,G__212362,G__212363));
})()," returns the numerator of the rational number ",(function (){var G__212364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<x>"], null);
var G__212365 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__212364,G__212365) : tailrecursion.hoplon.markdown.code_node.call(null,G__212364,G__212365));
})(),"."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_212355;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_212354;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__212352,G__212353) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__212352,G__212353));
})(),(function (){var G__212366 = cljs.core.PersistentArrayMap.EMPTY;
var G__212367 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_212368 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_212369 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__212370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(denom <x>)"], null);
var G__212371 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__212370,G__212371) : tailrecursion.hoplon.markdown.code_node.call(null,G__212370,G__212371));
})()," returns the denominator of the rational number ",(function (){var G__212372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<x>"], null);
var G__212373 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__212372,G__212373) : tailrecursion.hoplon.markdown.code_node.call(null,G__212372,G__212373));
})(),"."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_212369;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_212368;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__212366,G__212367) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__212366,G__212367));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__212350,G__212351) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__212350,G__212351));
})(),(function (){var G__212374 = cljs.core.PersistentArrayMap.EMPTY;
var G__212375 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We are using here a powerful strategy of synthesis: ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["wishful thinking"], null)], 0)),". We haven",(function (){var G__212376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__212377 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__212376,G__212377) : tailrecursion.hoplon.markdown.simple_node.call(null,G__212376,G__212377));
})(),"t yet said how a rational number is represented, or how the procedures ",(function (){var G__212378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__212379 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__212378,G__212379) : tailrecursion.hoplon.markdown.code_node.call(null,G__212378,G__212379));
})(),", ",(function (){var G__212380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__212381 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__212380,G__212381) : tailrecursion.hoplon.markdown.code_node.call(null,G__212380,G__212381));
})(),", and ",(function (){var G__212382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__212383 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__212382,G__212383) : tailrecursion.hoplon.markdown.code_node.call(null,G__212382,G__212383));
})()," should be implemented. Even so, if we did have these three procedures, we could then add, subtract, multiply, divide, and test equality by using the following relations:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__212374,G__212375) : tailrecursion.hoplon.markdown.para_node.call(null,G__212374,G__212375));
})(),(function (){var G__212384 = cljs.core.PersistentArrayMap.EMPTY;
var G__212385 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{n_1}{d_1}+\\frac{n_2}{d_2}=&\\frac{n_1d_2+n_2d_1}{d_1d_2} \\\\\\frac{n_1}{d_1}-\\frac{n_2}{d_2}=&\\frac{n_1d_2-n_2d_1}{d_1d_2} \\\\\\frac{n_1}{d_1}\\cdot\\frac{n_2}{d_2}=&\\frac{n_1n_2}{d_1d_2} \\\\\\frac{n_1}{d_1}/\\frac{n_2}{d_2}=&\\frac{n_1d_2}{n_2d_1} \\\\\\frac{n_1}{d_1}=\\frac{n_2}{d_2}\\iff& n_1d_2=n_2d_1\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__212384,G__212385) : tailrecursion.hoplon.markdown.para_node.call(null,G__212384,G__212385));
})(),(function (){var G__212386 = cljs.core.PersistentArrayMap.EMPTY;
var G__212387 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can express these rules as procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__212386,G__212387) : tailrecursion.hoplon.markdown.para_node.call(null,G__212386,G__212387));
})(),(function (){var G__212747 = (function (){var G__212748 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__212749 = (function (){var G__212750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__212751 = "(";
var G__212752 = (function (){var G__212925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__212926 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212925,G__212926) : tailrecursion.hoplon.span.call(null,G__212925,G__212926));
})();
var G__212753 = (function (){var G__212927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__212928 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212927,G__212928) : tailrecursion.hoplon.span.call(null,G__212927,G__212928));
})();
var G__212754 = " [";
var G__212755 = (function (){var G__212929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__212930 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212929,G__212930) : tailrecursion.hoplon.span.call(null,G__212929,G__212930));
})();
var G__212756 = " ";
var G__212757 = (function (){var G__212931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__212932 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212931,G__212932) : tailrecursion.hoplon.span.call(null,G__212931,G__212932));
})();
var G__212758 = "]\n  (";
var G__212759 = (function (){var G__212933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__212934 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212933,G__212934) : tailrecursion.hoplon.span.call(null,G__212933,G__212934));
})();
var G__212760 = " (";
var G__212761 = (function (){var G__212935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__212936 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212935,G__212936) : tailrecursion.hoplon.span.call(null,G__212935,G__212936));
})();
var G__212762 = "(";
var G__212763 = (function (){var G__212937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__212938 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212937,G__212938) : tailrecursion.hoplon.span.call(null,G__212937,G__212938));
})();
var G__212764 = "(";
var G__212765 = (function (){var G__212939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__212940 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212939,G__212940) : tailrecursion.hoplon.span.call(null,G__212939,G__212940));
})();
var G__212766 = " ";
var G__212767 = (function (){var G__212941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__212942 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212941,G__212942) : tailrecursion.hoplon.span.call(null,G__212941,G__212942));
})();
var G__212768 = ") (";
var G__212769 = (function (){var G__212943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__212944 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212943,G__212944) : tailrecursion.hoplon.span.call(null,G__212943,G__212944));
})();
var G__212770 = (function (){var G__212945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__212946 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212945,G__212946) : tailrecursion.hoplon.span.call(null,G__212945,G__212946));
})();
var G__212771 = " ";
var G__212772 = (function (){var G__212947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__212948 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212947,G__212948) : tailrecursion.hoplon.span.call(null,G__212947,G__212948));
})();
var G__212773 = "))\n               (";
var G__212774 = (function (){var G__212949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__212950 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212949,G__212950) : tailrecursion.hoplon.span.call(null,G__212949,G__212950));
})();
var G__212775 = "(";
var G__212776 = (function (){var G__212951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__212952 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212951,G__212952) : tailrecursion.hoplon.span.call(null,G__212951,G__212952));
})();
var G__212777 = " ";
var G__212778 = (function (){var G__212953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__212954 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212953,G__212954) : tailrecursion.hoplon.span.call(null,G__212953,G__212954));
})();
var G__212779 = ") (";
var G__212780 = (function (){var G__212955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__212956 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212955,G__212956) : tailrecursion.hoplon.span.call(null,G__212955,G__212956));
})();
var G__212781 = (function (){var G__212957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__212958 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212957,G__212958) : tailrecursion.hoplon.span.call(null,G__212957,G__212958));
})();
var G__212782 = " ";
var G__212783 = (function (){var G__212959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__212960 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212959,G__212960) : tailrecursion.hoplon.span.call(null,G__212959,G__212960));
})();
var G__212784 = ")))\n            (";
var G__212785 = (function (){var G__212961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__212962 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212961,G__212962) : tailrecursion.hoplon.span.call(null,G__212961,G__212962));
})();
var G__212786 = "(";
var G__212787 = (function (){var G__212963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__212964 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212963,G__212964) : tailrecursion.hoplon.span.call(null,G__212963,G__212964));
})();
var G__212788 = " ";
var G__212789 = (function (){var G__212965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__212966 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212965,G__212966) : tailrecursion.hoplon.span.call(null,G__212965,G__212966));
})();
var G__212790 = ") (";
var G__212791 = (function (){var G__212967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__212968 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212967,G__212968) : tailrecursion.hoplon.span.call(null,G__212967,G__212968));
})();
var G__212792 = " ";
var G__212793 = (function (){var G__212969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__212970 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212969,G__212970) : tailrecursion.hoplon.span.call(null,G__212969,G__212970));
})();
var G__212794 = "))))\n(";
var G__212795 = (function (){var G__212971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__212972 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212971,G__212972) : tailrecursion.hoplon.span.call(null,G__212971,G__212972));
})();
var G__212796 = (function (){var G__212973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__212974 = "sub-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212973,G__212974) : tailrecursion.hoplon.span.call(null,G__212973,G__212974));
})();
var G__212797 = " [";
var G__212798 = (function (){var G__212975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__212976 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212975,G__212976) : tailrecursion.hoplon.span.call(null,G__212975,G__212976));
})();
var G__212799 = " ";
var G__212800 = (function (){var G__212977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__212978 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212977,G__212978) : tailrecursion.hoplon.span.call(null,G__212977,G__212978));
})();
var G__212801 = "]\n  (";
var G__212802 = (function (){var G__212979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__212980 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212979,G__212980) : tailrecursion.hoplon.span.call(null,G__212979,G__212980));
})();
var G__212803 = " (";
var G__212804 = (function (){var G__212981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__212982 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212981,G__212982) : tailrecursion.hoplon.span.call(null,G__212981,G__212982));
})();
var G__212805 = "(";
var G__212806 = (function (){var G__212983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__212984 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212983,G__212984) : tailrecursion.hoplon.span.call(null,G__212983,G__212984));
})();
var G__212807 = "(";
var G__212808 = (function (){var G__212985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__212986 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212985,G__212986) : tailrecursion.hoplon.span.call(null,G__212985,G__212986));
})();
var G__212809 = " ";
var G__212810 = (function (){var G__212987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__212988 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212987,G__212988) : tailrecursion.hoplon.span.call(null,G__212987,G__212988));
})();
var G__212811 = ") (";
var G__212812 = (function (){var G__212989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__212990 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212989,G__212990) : tailrecursion.hoplon.span.call(null,G__212989,G__212990));
})();
var G__212813 = (function (){var G__212991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__212992 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212991,G__212992) : tailrecursion.hoplon.span.call(null,G__212991,G__212992));
})();
var G__212814 = " ";
var G__212815 = (function (){var G__212993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__212994 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212993,G__212994) : tailrecursion.hoplon.span.call(null,G__212993,G__212994));
})();
var G__212816 = "))\n               (";
var G__212817 = (function (){var G__212995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__212996 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212995,G__212996) : tailrecursion.hoplon.span.call(null,G__212995,G__212996));
})();
var G__212818 = "(";
var G__212819 = (function (){var G__212997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__212998 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212997,G__212998) : tailrecursion.hoplon.span.call(null,G__212997,G__212998));
})();
var G__212820 = " ";
var G__212821 = (function (){var G__212999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213000 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__212999,G__213000) : tailrecursion.hoplon.span.call(null,G__212999,G__213000));
})();
var G__212822 = ") (";
var G__212823 = (function (){var G__213001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213002 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213001,G__213002) : tailrecursion.hoplon.span.call(null,G__213001,G__213002));
})();
var G__212824 = (function (){var G__213003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213004 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213003,G__213004) : tailrecursion.hoplon.span.call(null,G__213003,G__213004));
})();
var G__212825 = " ";
var G__212826 = (function (){var G__213005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213006 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213005,G__213006) : tailrecursion.hoplon.span.call(null,G__213005,G__213006));
})();
var G__212827 = ")))\n            (";
var G__212828 = (function (){var G__213007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213008 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213007,G__213008) : tailrecursion.hoplon.span.call(null,G__213007,G__213008));
})();
var G__212829 = "(";
var G__212830 = (function (){var G__213009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213010 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213009,G__213010) : tailrecursion.hoplon.span.call(null,G__213009,G__213010));
})();
var G__212831 = " ";
var G__212832 = (function (){var G__213011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213012 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213011,G__213012) : tailrecursion.hoplon.span.call(null,G__213011,G__213012));
})();
var G__212833 = ") (";
var G__212834 = (function (){var G__213013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213014 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213013,G__213014) : tailrecursion.hoplon.span.call(null,G__213013,G__213014));
})();
var G__212835 = " ";
var G__212836 = (function (){var G__213015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213016 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213015,G__213016) : tailrecursion.hoplon.span.call(null,G__213015,G__213016));
})();
var G__212837 = "))))\n(";
var G__212838 = (function (){var G__213017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213018 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213017,G__213018) : tailrecursion.hoplon.span.call(null,G__213017,G__213018));
})();
var G__212839 = (function (){var G__213019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213020 = "mul-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213019,G__213020) : tailrecursion.hoplon.span.call(null,G__213019,G__213020));
})();
var G__212840 = " [";
var G__212841 = (function (){var G__213021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213022 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213021,G__213022) : tailrecursion.hoplon.span.call(null,G__213021,G__213022));
})();
var G__212842 = " ";
var G__212843 = (function (){var G__213023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213024 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213023,G__213024) : tailrecursion.hoplon.span.call(null,G__213023,G__213024));
})();
var G__212844 = "]\n  (";
var G__212845 = (function (){var G__213025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213026 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213025,G__213026) : tailrecursion.hoplon.span.call(null,G__213025,G__213026));
})();
var G__212846 = " (";
var G__212847 = (function (){var G__213027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213028 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213027,G__213028) : tailrecursion.hoplon.span.call(null,G__213027,G__213028));
})();
var G__212848 = "(";
var G__212849 = (function (){var G__213029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213030 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213029,G__213030) : tailrecursion.hoplon.span.call(null,G__213029,G__213030));
})();
var G__212850 = " ";
var G__212851 = (function (){var G__213031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213032 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213031,G__213032) : tailrecursion.hoplon.span.call(null,G__213031,G__213032));
})();
var G__212852 = ") (";
var G__212853 = (function (){var G__213033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213034 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213033,G__213034) : tailrecursion.hoplon.span.call(null,G__213033,G__213034));
})();
var G__212854 = " ";
var G__212855 = (function (){var G__213035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213036 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213035,G__213036) : tailrecursion.hoplon.span.call(null,G__213035,G__213036));
})();
var G__212856 = "))\n            (";
var G__212857 = (function (){var G__213037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213038 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213037,G__213038) : tailrecursion.hoplon.span.call(null,G__213037,G__213038));
})();
var G__212858 = "(";
var G__212859 = (function (){var G__213039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213040 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213039,G__213040) : tailrecursion.hoplon.span.call(null,G__213039,G__213040));
})();
var G__212860 = " ";
var G__212861 = (function (){var G__213041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213042 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213041,G__213042) : tailrecursion.hoplon.span.call(null,G__213041,G__213042));
})();
var G__212862 = ") (";
var G__212863 = (function (){var G__213043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213044 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213043,G__213044) : tailrecursion.hoplon.span.call(null,G__213043,G__213044));
})();
var G__212864 = " ";
var G__212865 = (function (){var G__213045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213046 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213045,G__213046) : tailrecursion.hoplon.span.call(null,G__213045,G__213046));
})();
var G__212866 = "))))\n(";
var G__212867 = (function (){var G__213047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213048 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213047,G__213048) : tailrecursion.hoplon.span.call(null,G__213047,G__213048));
})();
var G__212868 = (function (){var G__213049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213050 = "div-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213049,G__213050) : tailrecursion.hoplon.span.call(null,G__213049,G__213050));
})();
var G__212869 = " [";
var G__212870 = (function (){var G__213051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213052 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213051,G__213052) : tailrecursion.hoplon.span.call(null,G__213051,G__213052));
})();
var G__212871 = " ";
var G__212872 = (function (){var G__213053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213054 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213053,G__213054) : tailrecursion.hoplon.span.call(null,G__213053,G__213054));
})();
var G__212873 = "]\n  (";
var G__212874 = (function (){var G__213055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213056 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213055,G__213056) : tailrecursion.hoplon.span.call(null,G__213055,G__213056));
})();
var G__212875 = " (";
var G__212876 = (function (){var G__213057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213058 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213057,G__213058) : tailrecursion.hoplon.span.call(null,G__213057,G__213058));
})();
var G__212877 = "(";
var G__212878 = (function (){var G__213059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213060 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213059,G__213060) : tailrecursion.hoplon.span.call(null,G__213059,G__213060));
})();
var G__212879 = " ";
var G__212880 = (function (){var G__213061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213062 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213061,G__213062) : tailrecursion.hoplon.span.call(null,G__213061,G__213062));
})();
var G__212881 = ") (";
var G__212882 = (function (){var G__213063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213064 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213063,G__213064) : tailrecursion.hoplon.span.call(null,G__213063,G__213064));
})();
var G__212883 = " ";
var G__212884 = (function (){var G__213065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213066 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213065,G__213066) : tailrecursion.hoplon.span.call(null,G__213065,G__213066));
})();
var G__212885 = "))\n            (";
var G__212886 = (function (){var G__213067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213068 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213067,G__213068) : tailrecursion.hoplon.span.call(null,G__213067,G__213068));
})();
var G__212887 = "(";
var G__212888 = (function (){var G__213069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213070 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213069,G__213070) : tailrecursion.hoplon.span.call(null,G__213069,G__213070));
})();
var G__212889 = " ";
var G__212890 = (function (){var G__213071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213072 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213071,G__213072) : tailrecursion.hoplon.span.call(null,G__213071,G__213072));
})();
var G__212891 = ") (";
var G__212892 = (function (){var G__213073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213074 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213073,G__213074) : tailrecursion.hoplon.span.call(null,G__213073,G__213074));
})();
var G__212893 = " ";
var G__212894 = (function (){var G__213075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213076 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213075,G__213076) : tailrecursion.hoplon.span.call(null,G__213075,G__213076));
})();
var G__212895 = "))))\n(";
var G__212896 = (function (){var G__213077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213078 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213077,G__213078) : tailrecursion.hoplon.span.call(null,G__213077,G__213078));
})();
var G__212897 = (function (){var G__213079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213080 = "equal-rat?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213079,G__213080) : tailrecursion.hoplon.span.call(null,G__213079,G__213080));
})();
var G__212898 = " [";
var G__212899 = (function (){var G__213081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213082 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213081,G__213082) : tailrecursion.hoplon.span.call(null,G__213081,G__213082));
})();
var G__212900 = " ";
var G__212901 = (function (){var G__213083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213084 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213083,G__213084) : tailrecursion.hoplon.span.call(null,G__213083,G__213084));
})();
var G__212902 = "]\n  (";
var G__212903 = (function (){var G__213085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213086 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213085,G__213086) : tailrecursion.hoplon.span.call(null,G__213085,G__213086));
})();
var G__212904 = "(";
var G__212905 = (function (){var G__213087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213088 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213087,G__213088) : tailrecursion.hoplon.span.call(null,G__213087,G__213088));
})();
var G__212906 = "(";
var G__212907 = (function (){var G__213089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213090 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213089,G__213090) : tailrecursion.hoplon.span.call(null,G__213089,G__213090));
})();
var G__212908 = " ";
var G__212909 = (function (){var G__213091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213092 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213091,G__213092) : tailrecursion.hoplon.span.call(null,G__213091,G__213092));
})();
var G__212910 = ") (";
var G__212911 = (function (){var G__213093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213094 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213093,G__213094) : tailrecursion.hoplon.span.call(null,G__213093,G__213094));
})();
var G__212912 = " ";
var G__212913 = (function (){var G__213095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213096 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213095,G__213096) : tailrecursion.hoplon.span.call(null,G__213095,G__213096));
})();
var G__212914 = "))\n     (";
var G__212915 = (function (){var G__213097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213098 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213097,G__213098) : tailrecursion.hoplon.span.call(null,G__213097,G__213098));
})();
var G__212916 = "(";
var G__212917 = (function (){var G__213099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213100 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213099,G__213100) : tailrecursion.hoplon.span.call(null,G__213099,G__213100));
})();
var G__212918 = " ";
var G__212919 = (function (){var G__213101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213102 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213101,G__213102) : tailrecursion.hoplon.span.call(null,G__213101,G__213102));
})();
var G__212920 = ") (";
var G__212921 = (function (){var G__213103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213104 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213103,G__213104) : tailrecursion.hoplon.span.call(null,G__213103,G__213104));
})();
var G__212922 = " ";
var G__212923 = (function (){var G__213105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213106 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213105,G__213106) : tailrecursion.hoplon.span.call(null,G__213105,G__213106));
})();
var G__212924 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$175 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$175(G__212750,G__212751,G__212752,G__212753,G__212754,G__212755,G__212756,G__212757,G__212758,G__212759,G__212760,G__212761,G__212762,G__212763,G__212764,G__212765,G__212766,G__212767,G__212768,G__212769,G__212770,G__212771,G__212772,G__212773,G__212774,G__212775,G__212776,G__212777,G__212778,G__212779,G__212780,G__212781,G__212782,G__212783,G__212784,G__212785,G__212786,G__212787,G__212788,G__212789,G__212790,G__212791,G__212792,G__212793,G__212794,G__212795,G__212796,G__212797,G__212798,G__212799,G__212800,G__212801,G__212802,G__212803,G__212804,G__212805,G__212806,G__212807,G__212808,G__212809,G__212810,G__212811,G__212812,G__212813,G__212814,G__212815,G__212816,G__212817,G__212818,G__212819,G__212820,G__212821,G__212822,G__212823,G__212824,G__212825,G__212826,G__212827,G__212828,G__212829,G__212830,G__212831,G__212832,G__212833,G__212834,G__212835,G__212836,G__212837,G__212838,G__212839,G__212840,G__212841,G__212842,G__212843,G__212844,G__212845,G__212846,G__212847,G__212848,G__212849,G__212850,G__212851,G__212852,G__212853,G__212854,G__212855,G__212856,G__212857,G__212858,G__212859,G__212860,G__212861,G__212862,G__212863,G__212864,G__212865,G__212866,G__212867,G__212868,G__212869,G__212870,G__212871,G__212872,G__212873,G__212874,G__212875,G__212876,G__212877,G__212878,G__212879,G__212880,G__212881,G__212882,G__212883,G__212884,G__212885,G__212886,G__212887,G__212888,G__212889,G__212890,G__212891,G__212892,G__212893,G__212894,G__212895,G__212896,G__212897,G__212898,G__212899,G__212900,G__212901,G__212902,G__212903,G__212904,G__212905,G__212906,G__212907,G__212908,G__212909,G__212910,G__212911,G__212912,G__212913,G__212914,G__212915,G__212916,G__212917,G__212918,G__212919,G__212920,G__212921,G__212922,G__212923,G__212924) : tailrecursion.hoplon.pre.call(null,G__212750,G__212751,G__212752,G__212753,G__212754,G__212755,G__212756,G__212757,G__212758,G__212759,G__212760,G__212761,G__212762,G__212763,G__212764,G__212765,G__212766,G__212767,G__212768,G__212769,G__212770,G__212771,G__212772,G__212773,G__212774,G__212775,G__212776,G__212777,G__212778,G__212779,G__212780,G__212781,G__212782,G__212783,G__212784,G__212785,G__212786,G__212787,G__212788,G__212789,G__212790,G__212791,G__212792,G__212793,G__212794,G__212795,G__212796,G__212797,G__212798,G__212799,G__212800,G__212801,G__212802,G__212803,G__212804,G__212805,G__212806,G__212807,G__212808,G__212809,G__212810,G__212811,G__212812,G__212813,G__212814,G__212815,G__212816,G__212817,G__212818,G__212819,G__212820,G__212821,G__212822,G__212823,G__212824,G__212825,G__212826,G__212827,G__212828,G__212829,G__212830,G__212831,G__212832,G__212833,G__212834,G__212835,G__212836,G__212837,G__212838,G__212839,G__212840,G__212841,G__212842,G__212843,G__212844,G__212845,G__212846,G__212847,G__212848,G__212849,G__212850,G__212851,G__212852,G__212853,G__212854,G__212855,G__212856,G__212857,G__212858,G__212859,G__212860,G__212861,G__212862,G__212863,G__212864,G__212865,G__212866,G__212867,G__212868,G__212869,G__212870,G__212871,G__212872,G__212873,G__212874,G__212875,G__212876,G__212877,G__212878,G__212879,G__212880,G__212881,G__212882,G__212883,G__212884,G__212885,G__212886,G__212887,G__212888,G__212889,G__212890,G__212891,G__212892,G__212893,G__212894,G__212895,G__212896,G__212897,G__212898,G__212899,G__212900,G__212901,G__212902,G__212903,G__212904,G__212905,G__212906,G__212907,G__212908,G__212909,G__212910,G__212911,G__212912,G__212913,G__212914,G__212915,G__212916,G__212917,G__212918,G__212919,G__212920,G__212921,G__212922,G__212923,G__212924));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__212748,G__212749) : tailrecursion.hoplon.div.call(null,G__212748,G__212749));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__212747) : tailrecursion.hoplon.div.call(null,G__212747));
})(),(function (){var G__213107 = cljs.core.PersistentArrayMap.EMPTY;
var G__213108 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we have the operations on rational numbers defined in terms of the selector and constructor procedures ",(function (){var G__213109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__213110 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213109,G__213110) : tailrecursion.hoplon.markdown.code_node.call(null,G__213109,G__213110));
})(),", ",(function (){var G__213111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__213112 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213111,G__213112) : tailrecursion.hoplon.markdown.code_node.call(null,G__213111,G__213112));
})(),", and ",(function (){var G__213113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__213114 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213113,G__213114) : tailrecursion.hoplon.markdown.code_node.call(null,G__213113,G__213114));
})(),". But we haven",(function (){var G__213115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__213116 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__213115,G__213116) : tailrecursion.hoplon.markdown.simple_node.call(null,G__213115,G__213116));
})(),"t yet defined these. What we need is some way to glue together a numerator and a denominator to form a rational number."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__213107,G__213108) : tailrecursion.hoplon.markdown.para_node.call(null,G__213107,G__213108));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_212345;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_212344;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_212343;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_212342;
}})()], 0));
var G__212312 = "";
var G__212313 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Pairs (or Lists, for Us)"], null),(function (){var _STAR_references_STAR_213117 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_213118 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_213119 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_213120 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__213121 = cljs.core.PersistentArrayMap.EMPTY;
var G__213122 = cljs.core.PersistentVector.fromArray(["To enable us to implement the concrete level of our data abstraction, our language provides a compound structure abstraction called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sequential object"], null)], 0)),". These sequential objects are really just anything that has a concept of a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["first"], null)], 0))," item and a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["rest"], null)], 0))," of the items. Hence, a sequential object is any object which allows use of the ",(function (){var G__213123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__213124 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213123,G__213124) : tailrecursion.hoplon.markdown.code_node.call(null,G__213123,G__213124));
})()," and ",(function (){var G__213125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__213126 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213125,G__213126) : tailrecursion.hoplon.markdown.code_node.call(null,G__213125,G__213126));
})()," protocols (kind of like procedures, except their actual execution may be different from data type to data type). One example of a sequential object ",(function (){var G__213127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__213128 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__213127,G__213128) : tailrecursion.hoplon.markdown.simple_node.call(null,G__213127,G__213128));
})()," the one we will be using instead of the ",(function (){var G__213129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__213130 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pairs"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213129,G__213130) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213129,G__213130));
})()," they use for this section in Scheme ",(function (){var G__213131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__213132 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__213131,G__213132) : tailrecursion.hoplon.markdown.simple_node.call(null,G__213131,G__213132));
})()," is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["list"], null)], 0)),". Lists can be constructed via the procedure ",(function (){var G__213133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__213134 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213133,G__213134) : tailrecursion.hoplon.markdown.code_node.call(null,G__213133,G__213134));
})()," like so ",(function (){var G__213135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(list 1 2 3)"], null);
var G__213136 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213135,G__213136) : tailrecursion.hoplon.markdown.code_node.call(null,G__213135,G__213136));
})()," gives you a list containing 1, 2, and 3 as its elements. So ",(function (){var G__213137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first (list 1 2 3))"], null);
var G__213138 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213137,G__213138) : tailrecursion.hoplon.markdown.code_node.call(null,G__213137,G__213138));
})()," would return ",(function (){var G__213139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"1"], null);
var G__213140 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213139,G__213140) : tailrecursion.hoplon.markdown.code_node.call(null,G__213139,G__213140));
})(),", and ",(function (){var G__213141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(rest (list 1 2 3))"], null);
var G__213142 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213141,G__213142) : tailrecursion.hoplon.markdown.code_node.call(null,G__213141,G__213142));
})()," returns ",(function (){var G__213143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(2 3)"], null);
var G__213144 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213143,G__213144) : tailrecursion.hoplon.markdown.code_node.call(null,G__213143,G__213144));
})(),", which is to say the list containing 2 and 3 as its elements. To check if what we",(function (){var G__213145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__213146 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__213145,G__213146) : tailrecursion.hoplon.markdown.simple_node.call(null,G__213145,G__213146));
})(),"ve been given is indeed a list, we can use the procedure ",(function (){var G__213147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list?"], null);
var G__213148 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213147,G__213148) : tailrecursion.hoplon.markdown.code_node.call(null,G__213147,G__213148));
})()," like so: ",(function (){var G__213149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(list? (rest (list 1 2 3)))"], null);
var G__213150 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213149,G__213150) : tailrecursion.hoplon.markdown.code_node.call(null,G__213149,G__213150));
})(),". Lists are actually made via pairs (as will be described later in this section), but all of that is under the hood. Lists can also be constructed from old lists with the procedure ",(function (){var G__213151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__213152 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213151,G__213152) : tailrecursion.hoplon.markdown.code_node.call(null,G__213151,G__213152));
})(),".",(function (){var G__213153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__213154 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We should note that since these lists are immutable, the only way to ",(function (){var G__213155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__213156 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["edit"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213155,G__213156) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213155,G__213156));
})()," a list would be to create a new one with the desired changes and then destroy the old one. While this may seem unfortunate at first, it is actually quite a desireable feature when dealing with concurrency."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213153,G__213154) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213153,G__213154));
})()," This procedure takes two or more arguments, a sequential object and any number of values to append to the sequential object, then returns a sequential object of the same type with the values appended in whatever method appropriate to that sequential object in the order they appear. We will see later that lists are constructed in such a way that prepending is very cheap, so ",(function (){var G__213157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__213158 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213157,G__213158) : tailrecursion.hoplon.markdown.code_node.call(null,G__213157,G__213158));
})()," does exactly that. Hence, ",(function (){var G__213159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(conj (list 1 2 3) 4)"], null);
var G__213160 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213159,G__213160) : tailrecursion.hoplon.markdown.code_node.call(null,G__213159,G__213160));
})()," returns ",(function (){var G__213161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(4 1\n2 3)"], null);
var G__213162 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213161,G__213162) : tailrecursion.hoplon.markdown.code_node.call(null,G__213161,G__213162));
})(),", and ",(function (){var G__213163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(conj (list 1 2 3) 4 5)"], null);
var G__213164 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213163,G__213164) : tailrecursion.hoplon.markdown.code_node.call(null,G__213163,G__213164));
})()," returns ",(function (){var G__213165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(5 4 1 2 3)"], null);
var G__213166 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213165,G__213166) : tailrecursion.hoplon.markdown.code_node.call(null,G__213165,G__213166));
})()," (remember that they are prepended in the order they appear!)."], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__213121,G__213122) : tailrecursion.hoplon.markdown.para_node.call(null,G__213121,G__213122));
})(),(function (){var G__213167 = cljs.core.PersistentArrayMap.EMPTY;
var G__213168 = new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In Scheme, however, their building block is the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pair"], null)], 0)),", wich can be constructed via the primitive procedure ",(function (){var G__213169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213170 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213169,G__213170) : tailrecursion.hoplon.markdown.code_node.call(null,G__213169,G__213170));
})()," (which also works in Clojure",(function (){var G__213171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__213172 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__213171,G__213172) : tailrecursion.hoplon.markdown.simple_node.call(null,G__213171,G__213172));
})()," kinda) and has procedures ",(function (){var G__213173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__213174 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213173,G__213174) : tailrecursion.hoplon.markdown.code_node.call(null,G__213173,G__213174));
})()," and ",(function (){var G__213175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__213176 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213175,G__213176) : tailrecursion.hoplon.markdown.code_node.call(null,G__213175,G__213176));
})()," for obtaining the first and second values of the pair respectively.",(function (){var G__213177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__213178 = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The name ",(function (){var G__213179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213180 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213179,G__213180) : tailrecursion.hoplon.markdown.code_node.call(null,G__213179,G__213180));
})()," stands for ",(function (){var G__213181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__213182 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["construct."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213181,G__213182) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213181,G__213182));
})()," The names ",(function (){var G__213183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__213184 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213183,G__213184) : tailrecursion.hoplon.markdown.code_node.call(null,G__213183,G__213184));
})()," and ",(function (){var G__213185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__213186 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213185,G__213186) : tailrecursion.hoplon.markdown.code_node.call(null,G__213185,G__213186));
})()," derive from the original implementation of Lisp on the IBM 704. That machine had an addressing scheme that allowed one to reference the ",(function (){var G__213187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__213188 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["address"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213187,G__213188) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213187,G__213188));
})()," and ",(function (){var G__213189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__213190 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["decrement"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213189,G__213190) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213189,G__213190));
})()," parts of a memory location. ",(function (){var G__213191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__213192 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213191,G__213192) : tailrecursion.hoplon.markdown.code_node.call(null,G__213191,G__213192));
})()," stands for ",(function (){var G__213193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__213194 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Contents of Address part of Register"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213193,G__213194) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213193,G__213194));
})()," and ",(function (){var G__213195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__213196 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213195,G__213196) : tailrecursion.hoplon.markdown.code_node.call(null,G__213195,G__213196));
})()," (pronounced ",(function (){var G__213197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__213198 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["could-er"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213197,G__213198) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213197,G__213198));
})(),") stands for ",(function (){var G__213199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__213200 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Contents of Decrement part of Register."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213199,G__213200) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213199,G__213200));
})()], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213177,G__213178) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213177,G__213178));
})()," Thus, we in Scheme, we would be able to use ",(function (){var G__213201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213202 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213201,G__213202) : tailrecursion.hoplon.markdown.code_node.call(null,G__213201,G__213202));
})(),", ",(function (){var G__213203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__213204 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213203,G__213204) : tailrecursion.hoplon.markdown.code_node.call(null,G__213203,G__213204));
})(),", and ",(function (){var G__213205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__213206 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213205,G__213206) : tailrecursion.hoplon.markdown.code_node.call(null,G__213205,G__213206));
})()," as follows: "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__213167,G__213168) : tailrecursion.hoplon.markdown.para_node.call(null,G__213167,G__213168));
})(),(function (){var G__213229 = (function (){var G__213230 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__213231 = (function (){var G__213232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__213233 = "(";
var G__213234 = (function (){var G__213242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213243 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213242,G__213243) : tailrecursion.hoplon.span.call(null,G__213242,G__213243));
})();
var G__213235 = (function (){var G__213244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213245 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213244,G__213245) : tailrecursion.hoplon.span.call(null,G__213244,G__213245));
})();
var G__213236 = " (";
var G__213237 = (function (){var G__213246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213247 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213246,G__213247) : tailrecursion.hoplon.span.call(null,G__213246,G__213247));
})();
var G__213238 = (function (){var G__213248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213249 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213248,G__213249) : tailrecursion.hoplon.span.call(null,G__213248,G__213249));
})();
var G__213239 = " ";
var G__213240 = (function (){var G__213250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213251 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213250,G__213251) : tailrecursion.hoplon.span.call(null,G__213250,G__213251));
})();
var G__213241 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10(G__213232,G__213233,G__213234,G__213235,G__213236,G__213237,G__213238,G__213239,G__213240,G__213241) : tailrecursion.hoplon.pre.call(null,G__213232,G__213233,G__213234,G__213235,G__213236,G__213237,G__213238,G__213239,G__213240,G__213241));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__213230,G__213231) : tailrecursion.hoplon.div.call(null,G__213230,G__213231));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__213229) : tailrecursion.hoplon.div.call(null,G__213229));
})(),(function (){var G__213252 = cljs.core.PersistentArrayMap.EMPTY;
var G__213253 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Go ahead and try this in Clojure (can you translate that?)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__213252,G__213253) : tailrecursion.hoplon.markdown.para_node.call(null,G__213252,G__213253));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_213120;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_213119;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_213118;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_213117;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,"```clj\n(def x (cons 1 2))\n```"], 0)),"",(function (){var _STAR_references_STAR_213254 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_213255 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_213256 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_213257 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__213258 = cljs.core.PersistentArrayMap.EMPTY;
var G__213259 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If you tried the previous example. you probably got an error. That is because Clojure implements ",(function (){var G__213260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213261 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213260,G__213261) : tailrecursion.hoplon.markdown.code_node.call(null,G__213260,G__213261));
})()," differently. If we try "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__213258,G__213259) : tailrecursion.hoplon.markdown.para_node.call(null,G__213258,G__213259));
})(),(function (){var G__213291 = (function (){var G__213292 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__213293 = (function (){var G__213294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__213295 = "(";
var G__213296 = (function (){var G__213307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213308 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213307,G__213308) : tailrecursion.hoplon.span.call(null,G__213307,G__213308));
})();
var G__213297 = (function (){var G__213309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213310 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213309,G__213310) : tailrecursion.hoplon.span.call(null,G__213309,G__213310));
})();
var G__213298 = " (";
var G__213299 = (function (){var G__213311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213312 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213311,G__213312) : tailrecursion.hoplon.span.call(null,G__213311,G__213312));
})();
var G__213300 = (function (){var G__213313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213314 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213313,G__213314) : tailrecursion.hoplon.span.call(null,G__213313,G__213314));
})();
var G__213301 = " (";
var G__213302 = (function (){var G__213315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213316 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213315,G__213316) : tailrecursion.hoplon.span.call(null,G__213315,G__213316));
})();
var G__213303 = (function (){var G__213317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213318 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213317,G__213318) : tailrecursion.hoplon.span.call(null,G__213317,G__213318));
})();
var G__213304 = " ";
var G__213305 = (function (){var G__213319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213320 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213319,G__213320) : tailrecursion.hoplon.span.call(null,G__213319,G__213320));
})();
var G__213306 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__213294,G__213295,G__213296,G__213297,G__213298,G__213299,G__213300,G__213301,G__213302,G__213303,G__213304,G__213305,G__213306) : tailrecursion.hoplon.pre.call(null,G__213294,G__213295,G__213296,G__213297,G__213298,G__213299,G__213300,G__213301,G__213302,G__213303,G__213304,G__213305,G__213306));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__213292,G__213293) : tailrecursion.hoplon.div.call(null,G__213292,G__213293));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__213291) : tailrecursion.hoplon.div.call(null,G__213291));
})(),(function (){var G__213321 = cljs.core.PersistentArrayMap.EMPTY;
var G__213322 = new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then we shouldn",(function (){var G__213323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__213324 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__213323,G__213324) : tailrecursion.hoplon.markdown.simple_node.call(null,G__213323,G__213324));
})(),"t get any errors. The reason is that the second argument of ",(function (){var G__213325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213326 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213325,G__213326) : tailrecursion.hoplon.markdown.code_node.call(null,G__213325,G__213326));
})()," must be sequential object (or ",(function (){var G__213327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nil"], null);
var G__213328 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213327,G__213328) : tailrecursion.hoplon.markdown.code_node.call(null,G__213327,G__213328));
})(),"). Either way, we will not be using ",(function (){var G__213329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213330 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213329,G__213330) : tailrecursion.hoplon.markdown.code_node.call(null,G__213329,G__213330));
})()," for our discourse in this chapter, but rather the procedures ",(function (){var G__213331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__213332 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213331,G__213332) : tailrecursion.hoplon.markdown.code_node.call(null,G__213331,G__213332));
})()," and ",(function (){var G__213333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__213334 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213333,G__213334) : tailrecursion.hoplon.markdown.code_node.call(null,G__213333,G__213334));
})(),", which are more general anyway. Along with ",(function (){var G__213335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__213336 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213335,G__213336) : tailrecursion.hoplon.markdown.code_node.call(null,G__213335,G__213336));
})()," and ",(function (){var G__213337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__213338 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213337,G__213338) : tailrecursion.hoplon.markdown.code_node.call(null,G__213337,G__213338));
})(),", lists also have ",(function (){var G__213339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__213340 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213339,G__213340) : tailrecursion.hoplon.markdown.code_node.call(null,G__213339,G__213340));
})()," and ",(function (){var G__213341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nth"], null);
var G__213342 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213341,G__213342) : tailrecursion.hoplon.markdown.code_node.call(null,G__213341,G__213342));
})()," which give you exactly what you",(function (){var G__213343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__213344 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__213343,G__213344) : tailrecursion.hoplon.markdown.simple_node.call(null,G__213343,G__213344));
})(),"d expect, the second and the nth values in the list. So,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__213321,G__213322) : tailrecursion.hoplon.markdown.para_node.call(null,G__213321,G__213322));
})(),(function (){var G__213389 = (function (){var G__213390 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__213391 = (function (){var G__213392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__213393 = "(";
var G__213394 = (function (){var G__213412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213413 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213412,G__213413) : tailrecursion.hoplon.span.call(null,G__213412,G__213413));
})();
var G__213395 = (function (){var G__213414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213415 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213414,G__213415) : tailrecursion.hoplon.span.call(null,G__213414,G__213415));
})();
var G__213396 = " (";
var G__213397 = (function (){var G__213416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213417 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213416,G__213417) : tailrecursion.hoplon.span.call(null,G__213416,G__213417));
})();
var G__213398 = (function (){var G__213418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213419 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213418,G__213419) : tailrecursion.hoplon.span.call(null,G__213418,G__213419));
})();
var G__213399 = " ";
var G__213400 = (function (){var G__213420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213421 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213420,G__213421) : tailrecursion.hoplon.span.call(null,G__213420,G__213421));
})();
var G__213401 = "))\n(";
var G__213402 = (function (){var G__213422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213423 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213422,G__213423) : tailrecursion.hoplon.span.call(null,G__213422,G__213423));
})();
var G__213403 = (function (){var G__213424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213425 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213424,G__213425) : tailrecursion.hoplon.span.call(null,G__213424,G__213425));
})();
var G__213404 = ")\n";
var G__213405 = (function (){var G__213426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213427 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213426,G__213427) : tailrecursion.hoplon.span.call(null,G__213426,G__213427));
})();
var G__213406 = "\n(";
var G__213407 = (function (){var G__213428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213429 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213428,G__213429) : tailrecursion.hoplon.span.call(null,G__213428,G__213429));
})();
var G__213408 = (function (){var G__213430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213431 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213430,G__213431) : tailrecursion.hoplon.span.call(null,G__213430,G__213431));
})();
var G__213409 = ")\n";
var G__213410 = (function (){var G__213432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213433 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213432,G__213433) : tailrecursion.hoplon.span.call(null,G__213432,G__213433));
})();
var G__213411 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20(G__213392,G__213393,G__213394,G__213395,G__213396,G__213397,G__213398,G__213399,G__213400,G__213401,G__213402,G__213403,G__213404,G__213405,G__213406,G__213407,G__213408,G__213409,G__213410,G__213411) : tailrecursion.hoplon.pre.call(null,G__213392,G__213393,G__213394,G__213395,G__213396,G__213397,G__213398,G__213399,G__213400,G__213401,G__213402,G__213403,G__213404,G__213405,G__213406,G__213407,G__213408,G__213409,G__213410,G__213411));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__213390,G__213391) : tailrecursion.hoplon.div.call(null,G__213390,G__213391));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__213389) : tailrecursion.hoplon.div.call(null,G__213389));
})(),(function (){var G__213434 = cljs.core.PersistentArrayMap.EMPTY;
var G__213435 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Notice that a list is a data object that can be given a name and manipulated, just like a primitive data object. Moreover, ",(function (){var G__213436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__213437 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213436,G__213437) : tailrecursion.hoplon.markdown.code_node.call(null,G__213436,G__213437));
})()," can be used to form pairs whose elements are pairs, and so on:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__213434,G__213435) : tailrecursion.hoplon.markdown.para_node.call(null,G__213434,G__213435));
})(),(function (){var G__213540 = (function (){var G__213541 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__213542 = (function (){var G__213543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__213544 = "(";
var G__213545 = (function (){var G__213589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213590 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213589,G__213590) : tailrecursion.hoplon.span.call(null,G__213589,G__213590));
})();
var G__213546 = (function (){var G__213591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213592 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213591,G__213592) : tailrecursion.hoplon.span.call(null,G__213591,G__213592));
})();
var G__213547 = " (";
var G__213548 = (function (){var G__213593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213594 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213593,G__213594) : tailrecursion.hoplon.span.call(null,G__213593,G__213594));
})();
var G__213549 = (function (){var G__213595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213596 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213595,G__213596) : tailrecursion.hoplon.span.call(null,G__213595,G__213596));
})();
var G__213550 = " (";
var G__213551 = (function (){var G__213597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213598 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213597,G__213598) : tailrecursion.hoplon.span.call(null,G__213597,G__213598));
})();
var G__213552 = (function (){var G__213599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213600 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213599,G__213600) : tailrecursion.hoplon.span.call(null,G__213599,G__213600));
})();
var G__213553 = " ";
var G__213554 = (function (){var G__213601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213602 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213601,G__213602) : tailrecursion.hoplon.span.call(null,G__213601,G__213602));
})();
var G__213555 = ")))\n(";
var G__213556 = (function (){var G__213603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213604 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213603,G__213604) : tailrecursion.hoplon.span.call(null,G__213603,G__213604));
})();
var G__213557 = (function (){var G__213605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213606 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213605,G__213606) : tailrecursion.hoplon.span.call(null,G__213605,G__213606));
})();
var G__213558 = " (";
var G__213559 = (function (){var G__213607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213608 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213607,G__213608) : tailrecursion.hoplon.span.call(null,G__213607,G__213608));
})();
var G__213560 = (function (){var G__213609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213610 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213609,G__213610) : tailrecursion.hoplon.span.call(null,G__213609,G__213610));
})();
var G__213561 = " (";
var G__213562 = (function (){var G__213611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213612 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213611,G__213612) : tailrecursion.hoplon.span.call(null,G__213611,G__213612));
})();
var G__213563 = (function (){var G__213613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213614 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213613,G__213614) : tailrecursion.hoplon.span.call(null,G__213613,G__213614));
})();
var G__213564 = " ";
var G__213565 = (function (){var G__213615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213616 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213615,G__213616) : tailrecursion.hoplon.span.call(null,G__213615,G__213616));
})();
var G__213566 = ")))\n(";
var G__213567 = (function (){var G__213617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213618 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213617,G__213618) : tailrecursion.hoplon.span.call(null,G__213617,G__213618));
})();
var G__213568 = (function (){var G__213619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213620 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213619,G__213620) : tailrecursion.hoplon.span.call(null,G__213619,G__213620));
})();
var G__213569 = " (";
var G__213570 = (function (){var G__213621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213622 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213621,G__213622) : tailrecursion.hoplon.span.call(null,G__213621,G__213622));
})();
var G__213571 = (function (){var G__213623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213624 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213623,G__213624) : tailrecursion.hoplon.span.call(null,G__213623,G__213624));
})();
var G__213572 = " ";
var G__213573 = (function (){var G__213625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213626 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213625,G__213626) : tailrecursion.hoplon.span.call(null,G__213625,G__213626));
})();
var G__213574 = "))\n\n(";
var G__213575 = (function (){var G__213627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213628 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213627,G__213628) : tailrecursion.hoplon.span.call(null,G__213627,G__213628));
})();
var G__213576 = "(";
var G__213577 = (function (){var G__213629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213630 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213629,G__213630) : tailrecursion.hoplon.span.call(null,G__213629,G__213630));
})();
var G__213578 = (function (){var G__213631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213632 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213631,G__213632) : tailrecursion.hoplon.span.call(null,G__213631,G__213632));
})();
var G__213579 = "))\n";
var G__213580 = (function (){var G__213633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213634 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213633,G__213634) : tailrecursion.hoplon.span.call(null,G__213633,G__213634));
})();
var G__213581 = "\n(";
var G__213582 = (function (){var G__213635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213636 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213635,G__213636) : tailrecursion.hoplon.span.call(null,G__213635,G__213636));
})();
var G__213583 = "(";
var G__213584 = (function (){var G__213637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213638 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213637,G__213638) : tailrecursion.hoplon.span.call(null,G__213637,G__213638));
})();
var G__213585 = (function (){var G__213639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213640 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213639,G__213640) : tailrecursion.hoplon.span.call(null,G__213639,G__213640));
})();
var G__213586 = "))\n";
var G__213587 = (function (){var G__213641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__213642 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213641,G__213642) : tailrecursion.hoplon.span.call(null,G__213641,G__213642));
})();
var G__213588 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__213543,G__213544,G__213545,G__213546,G__213547,G__213548,G__213549,G__213550,G__213551,G__213552,G__213553,G__213554,G__213555,G__213556,G__213557,G__213558,G__213559,G__213560,G__213561,G__213562,G__213563,G__213564,G__213565,G__213566,G__213567,G__213568,G__213569,G__213570,G__213571,G__213572,G__213573,G__213574,G__213575,G__213576,G__213577,G__213578,G__213579,G__213580,G__213581,G__213582,G__213583,G__213584,G__213585,G__213586,G__213587,G__213588) : tailrecursion.hoplon.pre.call(null,G__213543,G__213544,G__213545,G__213546,G__213547,G__213548,G__213549,G__213550,G__213551,G__213552,G__213553,G__213554,G__213555,G__213556,G__213557,G__213558,G__213559,G__213560,G__213561,G__213562,G__213563,G__213564,G__213565,G__213566,G__213567,G__213568,G__213569,G__213570,G__213571,G__213572,G__213573,G__213574,G__213575,G__213576,G__213577,G__213578,G__213579,G__213580,G__213581,G__213582,G__213583,G__213584,G__213585,G__213586,G__213587,G__213588));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__213541,G__213542) : tailrecursion.hoplon.div.call(null,G__213541,G__213542));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__213540) : tailrecursion.hoplon.div.call(null,G__213540));
})(),(function (){var G__213643 = cljs.core.PersistentArrayMap.EMPTY;
var G__213644 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/sect/2/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.2"], null)], 0))," we will see how this ability to combine pairs means that pairs can be used as general-purpose building blocks to create all sorts of complex data structures. The single compound-data primitive ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pair"], null)], 0)),", implemented in Scheme by the procedures ",(function (){var G__213645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213646 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213645,G__213646) : tailrecursion.hoplon.markdown.code_node.call(null,G__213645,G__213646));
})(),", ",(function (){var G__213647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__213648 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213647,G__213648) : tailrecursion.hoplon.markdown.code_node.call(null,G__213647,G__213648));
})(),", and ",(function (){var G__213649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__213650 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213649,G__213650) : tailrecursion.hoplon.markdown.code_node.call(null,G__213649,G__213650));
})(),", is the only glue we need. Data objects constructed from pairs are called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["list-structured"], null)], 0))," data. In fact, we will explore how lists are acutally implemented in Clojure and we will see that it is very similar to Scheme in that respect. For now, let",(function (){var G__213651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__213652 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__213651,G__213652) : tailrecursion.hoplon.markdown.simple_node.call(null,G__213651,G__213652));
})(),"s pretend like our ",(function (){var G__213653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__213654 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213653,G__213654) : tailrecursion.hoplon.markdown.code_node.call(null,G__213653,G__213654));
})(),"s are really pairs (for the purposes of learning the lessons meant to be learned in the following sections)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__213643,G__213644) : tailrecursion.hoplon.markdown.para_node.call(null,G__213643,G__213644));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_213257;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_213256;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_213255;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_213254;
}})()], 0));
var G__212314 = "";
var G__212315 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Representing Rational Numbers"], null),(function (){var _STAR_references_STAR_213655 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_213656 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_213657 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_213658 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__213659 = cljs.core.PersistentArrayMap.EMPTY;
var G__213660 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Pairs offer a natural way to complete the rational-number system. Simply represent a rational number as a pair of two integers: a numerator and a denominator. Then ",(function (){var G__213661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__213662 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213661,G__213662) : tailrecursion.hoplon.markdown.code_node.call(null,G__213661,G__213662));
})(),", ",(function (){var G__213663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__213664 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213663,G__213664) : tailrecursion.hoplon.markdown.code_node.call(null,G__213663,G__213664));
})(),", and ",(function (){var G__213665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__213666 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213665,G__213666) : tailrecursion.hoplon.markdown.code_node.call(null,G__213665,G__213666));
})()," are readily implemented as follows:",(function (){var G__213667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__213668 = cljs.core.PersistentVector.fromArray(["Another way to define the selectors and constructor is ",(function (){var G__213669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(define make-rat cons)"], null);
var G__213670 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213669,G__213670) : tailrecursion.hoplon.markdown.code_node.call(null,G__213669,G__213670));
})()," ",(function (){var G__213671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(define numer car)"], null);
var G__213672 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213671,G__213672) : tailrecursion.hoplon.markdown.code_node.call(null,G__213671,G__213672));
})()," ",(function (){var G__213673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(define denom cdr)"], null);
var G__213674 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213673,G__213674) : tailrecursion.hoplon.markdown.code_node.call(null,G__213673,G__213674));
})()," The first definition associates the name ",(function (){var G__213675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__213676 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213675,G__213676) : tailrecursion.hoplon.markdown.code_node.call(null,G__213675,G__213676));
})()," with the value of the expression ",(function (){var G__213677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213678 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213677,G__213678) : tailrecursion.hoplon.markdown.code_node.call(null,G__213677,G__213678));
})(),", which is the primitive procedure that constructs pairs. Thus ",(function (){var G__213679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__213680 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213679,G__213680) : tailrecursion.hoplon.markdown.code_node.call(null,G__213679,G__213680));
})()," and ",(function (){var G__213681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213682 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213681,G__213682) : tailrecursion.hoplon.markdown.code_node.call(null,G__213681,G__213682));
})()," are names for the same primitive constructor. Defining selectors and constructors this way is efficient: Instead of ",(function (){var G__213683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__213684 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213683,G__213684) : tailrecursion.hoplon.markdown.code_node.call(null,G__213683,G__213684));
})()," ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["calling"], null)], 0))," ",(function (){var G__213685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213686 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213685,G__213686) : tailrecursion.hoplon.markdown.code_node.call(null,G__213685,G__213686));
})(),", ",(function (){var G__213687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__213688 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213687,G__213688) : tailrecursion.hoplon.markdown.code_node.call(null,G__213687,G__213688));
})()," ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["is"], null)], 0))," ",(function (){var G__213689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213690 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213689,G__213690) : tailrecursion.hoplon.markdown.code_node.call(null,G__213689,G__213690));
})(),", so there is only one procedure called, not two, when ",(function (){var G__213691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__213692 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213691,G__213692) : tailrecursion.hoplon.markdown.code_node.call(null,G__213691,G__213692));
})()," is called. On the other hand, doing this defeats debugging aids that trace procedure calls or put breakpoints on procedure calls: You may want to watch ",(function (){var G__213693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__213694 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213693,G__213694) : tailrecursion.hoplon.markdown.code_node.call(null,G__213693,G__213694));
})()," being called, but you certainly don not want to watch every call to ",(function (){var G__213695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__213696 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213695,G__213696) : tailrecursion.hoplon.markdown.code_node.call(null,G__213695,G__213696));
})(),"."], true);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213667,G__213668) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213667,G__213668));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__213659,G__213660) : tailrecursion.hoplon.markdown.para_node.call(null,G__213659,G__213660));
})(),(function (){var G__213768 = (function (){var G__213769 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__213770 = (function (){var G__213771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__213772 = "(";
var G__213773 = (function (){var G__213806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213807 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213806,G__213807) : tailrecursion.hoplon.span.call(null,G__213806,G__213807));
})();
var G__213774 = "(";
var G__213775 = (function (){var G__213808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213809 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213808,G__213809) : tailrecursion.hoplon.span.call(null,G__213808,G__213809));
})();
var G__213776 = " ";
var G__213777 = (function (){var G__213810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213811 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213810,G__213811) : tailrecursion.hoplon.span.call(null,G__213810,G__213811));
})();
var G__213778 = " ";
var G__213779 = (function (){var G__213812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213813 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213812,G__213813) : tailrecursion.hoplon.span.call(null,G__213812,G__213813));
})();
var G__213780 = ") (";
var G__213781 = (function (){var G__213814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213815 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213814,G__213815) : tailrecursion.hoplon.span.call(null,G__213814,G__213815));
})();
var G__213782 = (function (){var G__213816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213817 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213816,G__213817) : tailrecursion.hoplon.span.call(null,G__213816,G__213817));
})();
var G__213783 = " ";
var G__213784 = (function (){var G__213818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213819 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213818,G__213819) : tailrecursion.hoplon.span.call(null,G__213818,G__213819));
})();
var G__213785 = "))\n(";
var G__213786 = (function (){var G__213820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213821 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213820,G__213821) : tailrecursion.hoplon.span.call(null,G__213820,G__213821));
})();
var G__213787 = "(";
var G__213788 = (function (){var G__213822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213823 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213822,G__213823) : tailrecursion.hoplon.span.call(null,G__213822,G__213823));
})();
var G__213789 = " ";
var G__213790 = (function (){var G__213824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213825 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213824,G__213825) : tailrecursion.hoplon.span.call(null,G__213824,G__213825));
})();
var G__213791 = ") (";
var G__213792 = (function (){var G__213826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213827 = "first";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213826,G__213827) : tailrecursion.hoplon.span.call(null,G__213826,G__213827));
})();
var G__213793 = " ";
var G__213794 = (function (){var G__213828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213829 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213828,G__213829) : tailrecursion.hoplon.span.call(null,G__213828,G__213829));
})();
var G__213795 = "))\n(";
var G__213796 = (function (){var G__213830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213831 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213830,G__213831) : tailrecursion.hoplon.span.call(null,G__213830,G__213831));
})();
var G__213797 = "(";
var G__213798 = (function (){var G__213832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213833 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213832,G__213833) : tailrecursion.hoplon.span.call(null,G__213832,G__213833));
})();
var G__213799 = " ";
var G__213800 = (function (){var G__213834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213835 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213834,G__213835) : tailrecursion.hoplon.span.call(null,G__213834,G__213835));
})();
var G__213801 = ") (";
var G__213802 = (function (){var G__213836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213837 = "second";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213836,G__213837) : tailrecursion.hoplon.span.call(null,G__213836,G__213837));
})();
var G__213803 = " ";
var G__213804 = (function (){var G__213838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213839 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213838,G__213839) : tailrecursion.hoplon.span.call(null,G__213838,G__213839));
})();
var G__213805 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35(G__213771,G__213772,G__213773,G__213774,G__213775,G__213776,G__213777,G__213778,G__213779,G__213780,G__213781,G__213782,G__213783,G__213784,G__213785,G__213786,G__213787,G__213788,G__213789,G__213790,G__213791,G__213792,G__213793,G__213794,G__213795,G__213796,G__213797,G__213798,G__213799,G__213800,G__213801,G__213802,G__213803,G__213804,G__213805) : tailrecursion.hoplon.pre.call(null,G__213771,G__213772,G__213773,G__213774,G__213775,G__213776,G__213777,G__213778,G__213779,G__213780,G__213781,G__213782,G__213783,G__213784,G__213785,G__213786,G__213787,G__213788,G__213789,G__213790,G__213791,G__213792,G__213793,G__213794,G__213795,G__213796,G__213797,G__213798,G__213799,G__213800,G__213801,G__213802,G__213803,G__213804,G__213805));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__213769,G__213770) : tailrecursion.hoplon.div.call(null,G__213769,G__213770));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__213768) : tailrecursion.hoplon.div.call(null,G__213768));
})(),(function (){var G__213840 = cljs.core.PersistentArrayMap.EMPTY;
var G__213841 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Also, in order to display the results of our computations, we can print rational numbers by printing the numerator, a slash, and the denominator.",(function (){var G__213842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__213843 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note that ",(function (){var G__213844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"print"], null);
var G__213845 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213844,G__213845) : tailrecursion.hoplon.markdown.code_node.call(null,G__213844,G__213845));
})()," and ",(function (){var G__213846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"println"], null);
var G__213847 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213846,G__213847) : tailrecursion.hoplon.markdown.code_node.call(null,G__213846,G__213847));
})()," (there are others but we need not go into them right now) return values. Being as how the values are not currently of use to us, we show only what these functions print and not what the interpreter prints as the returned values."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__213842,G__213843) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__213842,G__213843));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__213840,G__213841) : tailrecursion.hoplon.markdown.para_node.call(null,G__213840,G__213841));
})(),(function (){var G__213887 = (function (){var G__213888 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__213889 = (function (){var G__213890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__213891 = "(";
var G__213892 = (function (){var G__213909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__213910 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213909,G__213910) : tailrecursion.hoplon.span.call(null,G__213909,G__213910));
})();
var G__213893 = (function (){var G__213911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213912 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213911,G__213912) : tailrecursion.hoplon.span.call(null,G__213911,G__213912));
})();
var G__213894 = " [";
var G__213895 = (function (){var G__213913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213914 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213913,G__213914) : tailrecursion.hoplon.span.call(null,G__213913,G__213914));
})();
var G__213896 = "]\n  (";
var G__213897 = (function (){var G__213915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__213916 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213915,G__213916) : tailrecursion.hoplon.span.call(null,G__213915,G__213916));
})();
var G__213898 = "(";
var G__213899 = (function (){var G__213917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213918 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213917,G__213918) : tailrecursion.hoplon.span.call(null,G__213917,G__213918));
})();
var G__213900 = " ";
var G__213901 = (function (){var G__213919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213920 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213919,G__213920) : tailrecursion.hoplon.span.call(null,G__213919,G__213920));
})();
var G__213902 = ") ";
var G__213903 = (function (){var G__213921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__213922 = "\"/\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213921,G__213922) : tailrecursion.hoplon.span.call(null,G__213921,G__213922));
})();
var G__213904 = " (";
var G__213905 = (function (){var G__213923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__213924 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213923,G__213924) : tailrecursion.hoplon.span.call(null,G__213923,G__213924));
})();
var G__213906 = " ";
var G__213907 = (function (){var G__213925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__213926 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__213925,G__213926) : tailrecursion.hoplon.span.call(null,G__213925,G__213926));
})();
var G__213908 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__213890,G__213891,G__213892,G__213893,G__213894,G__213895,G__213896,G__213897,G__213898,G__213899,G__213900,G__213901,G__213902,G__213903,G__213904,G__213905,G__213906,G__213907,G__213908) : tailrecursion.hoplon.pre.call(null,G__213890,G__213891,G__213892,G__213893,G__213894,G__213895,G__213896,G__213897,G__213898,G__213899,G__213900,G__213901,G__213902,G__213903,G__213904,G__213905,G__213906,G__213907,G__213908));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__213888,G__213889) : tailrecursion.hoplon.div.call(null,G__213888,G__213889));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__213887) : tailrecursion.hoplon.div.call(null,G__213887));
})(),(function (){var G__213927 = cljs.core.PersistentArrayMap.EMPTY;
var G__213928 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note that ",(function (){var G__213929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"println"], null);
var G__213930 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213929,G__213930) : tailrecursion.hoplon.markdown.code_node.call(null,G__213929,G__213930));
})()," is a function that takes any number of arguments, converts them to a string, prints them to the screen followed by a new line, then it returns the value ",(function (){var G__213931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nil"], null);
var G__213932 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__213931,G__213932) : tailrecursion.hoplon.markdown.code_node.call(null,G__213931,G__213932));
})()," (remember, everything has a value in Lisp!)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__213927,G__213928) : tailrecursion.hoplon.markdown.para_node.call(null,G__213927,G__213928));
})(),(function (){var G__213933 = cljs.core.PersistentArrayMap.EMPTY;
var G__213934 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we can try our rational-number procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__213933,G__213934) : tailrecursion.hoplon.markdown.para_node.call(null,G__213933,G__213934));
})(),(function (){var G__214061 = (function (){var G__214062 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__214063 = (function (){var G__214064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__214065 = "(";
var G__214066 = (function (){var G__214124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214125 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214124,G__214125) : tailrecursion.hoplon.span.call(null,G__214124,G__214125));
})();
var G__214067 = (function (){var G__214126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214127 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214126,G__214127) : tailrecursion.hoplon.span.call(null,G__214126,G__214127));
})();
var G__214068 = " (";
var G__214069 = (function (){var G__214128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214129 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214128,G__214129) : tailrecursion.hoplon.span.call(null,G__214128,G__214129));
})();
var G__214070 = " ";
var G__214071 = (function (){var G__214130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214131 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214130,G__214131) : tailrecursion.hoplon.span.call(null,G__214130,G__214131));
})();
var G__214072 = " ";
var G__214073 = (function (){var G__214132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214133 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214132,G__214133) : tailrecursion.hoplon.span.call(null,G__214132,G__214133));
})();
var G__214074 = "))\n(";
var G__214075 = (function (){var G__214134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214135 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214134,G__214135) : tailrecursion.hoplon.span.call(null,G__214134,G__214135));
})();
var G__214076 = " ";
var G__214077 = (function (){var G__214136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214137 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214136,G__214137) : tailrecursion.hoplon.span.call(null,G__214136,G__214137));
})();
var G__214078 = ")\n";
var G__214079 = (function (){var G__214138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214139 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214138,G__214139) : tailrecursion.hoplon.span.call(null,G__214138,G__214139));
})();
var G__214080 = (function (){var G__214140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214141 = "/2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214140,G__214141) : tailrecursion.hoplon.span.call(null,G__214140,G__214141));
})();
var G__214081 = "\n\n(";
var G__214082 = (function (){var G__214142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214143 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214142,G__214143) : tailrecursion.hoplon.span.call(null,G__214142,G__214143));
})();
var G__214083 = (function (){var G__214144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214145 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214144,G__214145) : tailrecursion.hoplon.span.call(null,G__214144,G__214145));
})();
var G__214084 = " (";
var G__214085 = (function (){var G__214146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214147 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214146,G__214147) : tailrecursion.hoplon.span.call(null,G__214146,G__214147));
})();
var G__214086 = " ";
var G__214087 = (function (){var G__214148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214149 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214148,G__214149) : tailrecursion.hoplon.span.call(null,G__214148,G__214149));
})();
var G__214088 = " ";
var G__214089 = (function (){var G__214150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214151 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214150,G__214151) : tailrecursion.hoplon.span.call(null,G__214150,G__214151));
})();
var G__214090 = "))\n(";
var G__214091 = (function (){var G__214152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214153 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214152,G__214153) : tailrecursion.hoplon.span.call(null,G__214152,G__214153));
})();
var G__214092 = " (";
var G__214093 = (function (){var G__214154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214155 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214154,G__214155) : tailrecursion.hoplon.span.call(null,G__214154,G__214155));
})();
var G__214094 = " ";
var G__214095 = (function (){var G__214156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214157 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214156,G__214157) : tailrecursion.hoplon.span.call(null,G__214156,G__214157));
})();
var G__214096 = " ";
var G__214097 = (function (){var G__214158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214159 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214158,G__214159) : tailrecursion.hoplon.span.call(null,G__214158,G__214159));
})();
var G__214098 = "))\n";
var G__214099 = (function (){var G__214160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214161 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214160,G__214161) : tailrecursion.hoplon.span.call(null,G__214160,G__214161));
})();
var G__214100 = (function (){var G__214162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214163 = "/6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214162,G__214163) : tailrecursion.hoplon.span.call(null,G__214162,G__214163));
})();
var G__214101 = "\n\n(";
var G__214102 = (function (){var G__214164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214165 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214164,G__214165) : tailrecursion.hoplon.span.call(null,G__214164,G__214165));
})();
var G__214103 = " (";
var G__214104 = (function (){var G__214166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214167 = "mul-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214166,G__214167) : tailrecursion.hoplon.span.call(null,G__214166,G__214167));
})();
var G__214105 = " ";
var G__214106 = (function (){var G__214168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214169 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214168,G__214169) : tailrecursion.hoplon.span.call(null,G__214168,G__214169));
})();
var G__214107 = " ";
var G__214108 = (function (){var G__214170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214171 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214170,G__214171) : tailrecursion.hoplon.span.call(null,G__214170,G__214171));
})();
var G__214109 = "))\n";
var G__214110 = (function (){var G__214172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214173 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214172,G__214173) : tailrecursion.hoplon.span.call(null,G__214172,G__214173));
})();
var G__214111 = (function (){var G__214174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214175 = "/6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214174,G__214175) : tailrecursion.hoplon.span.call(null,G__214174,G__214175));
})();
var G__214112 = "\n\n(";
var G__214113 = (function (){var G__214176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214177 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214176,G__214177) : tailrecursion.hoplon.span.call(null,G__214176,G__214177));
})();
var G__214114 = " (";
var G__214115 = (function (){var G__214178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214179 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214178,G__214179) : tailrecursion.hoplon.span.call(null,G__214178,G__214179));
})();
var G__214116 = " ";
var G__214117 = (function (){var G__214180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214181 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214180,G__214181) : tailrecursion.hoplon.span.call(null,G__214180,G__214181));
})();
var G__214118 = " ";
var G__214119 = (function (){var G__214182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214183 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214182,G__214183) : tailrecursion.hoplon.span.call(null,G__214182,G__214183));
})();
var G__214120 = "))\n";
var G__214121 = (function (){var G__214184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214185 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214184,G__214185) : tailrecursion.hoplon.span.call(null,G__214184,G__214185));
})();
var G__214122 = (function (){var G__214186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214187 = "/9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214186,G__214187) : tailrecursion.hoplon.span.call(null,G__214186,G__214187));
})();
var G__214123 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60(G__214064,G__214065,G__214066,G__214067,G__214068,G__214069,G__214070,G__214071,G__214072,G__214073,G__214074,G__214075,G__214076,G__214077,G__214078,G__214079,G__214080,G__214081,G__214082,G__214083,G__214084,G__214085,G__214086,G__214087,G__214088,G__214089,G__214090,G__214091,G__214092,G__214093,G__214094,G__214095,G__214096,G__214097,G__214098,G__214099,G__214100,G__214101,G__214102,G__214103,G__214104,G__214105,G__214106,G__214107,G__214108,G__214109,G__214110,G__214111,G__214112,G__214113,G__214114,G__214115,G__214116,G__214117,G__214118,G__214119,G__214120,G__214121,G__214122,G__214123) : tailrecursion.hoplon.pre.call(null,G__214064,G__214065,G__214066,G__214067,G__214068,G__214069,G__214070,G__214071,G__214072,G__214073,G__214074,G__214075,G__214076,G__214077,G__214078,G__214079,G__214080,G__214081,G__214082,G__214083,G__214084,G__214085,G__214086,G__214087,G__214088,G__214089,G__214090,G__214091,G__214092,G__214093,G__214094,G__214095,G__214096,G__214097,G__214098,G__214099,G__214100,G__214101,G__214102,G__214103,G__214104,G__214105,G__214106,G__214107,G__214108,G__214109,G__214110,G__214111,G__214112,G__214113,G__214114,G__214115,G__214116,G__214117,G__214118,G__214119,G__214120,G__214121,G__214122,G__214123));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__214062,G__214063) : tailrecursion.hoplon.div.call(null,G__214062,G__214063));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__214061) : tailrecursion.hoplon.div.call(null,G__214061));
})(),(function (){var G__214188 = cljs.core.PersistentArrayMap.EMPTY;
var G__214189 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As the final example shows, our rational-number implementation does not reduce rational numbers to lowest terms. We can rememdy this by changing ",(function (){var G__214190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__214191 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214190,G__214191) : tailrecursion.hoplon.markdown.code_node.call(null,G__214190,G__214191));
})(),". If we have a ",(function (){var G__214192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__214193 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214192,G__214193) : tailrecursion.hoplon.markdown.code_node.call(null,G__214192,G__214193));
})()," procedure like the one used in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/2/sub/5/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.5"], null)], 0))," that produces the greatest common divisor of two integers, we can use ",(function (){var G__214194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__214195 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214194,G__214195) : tailrecursion.hoplon.markdown.code_node.call(null,G__214194,G__214195));
})()," to reduce the numerator and the denominator to lowest terms before constructing the pair:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__214188,G__214189) : tailrecursion.hoplon.markdown.para_node.call(null,G__214188,G__214189));
})(),(function (){var G__214261 = (function (){var G__214262 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__214263 = (function (){var G__214264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__214265 = "(";
var G__214266 = (function (){var G__214295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214296 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214295,G__214296) : tailrecursion.hoplon.span.call(null,G__214295,G__214296));
})();
var G__214267 = (function (){var G__214297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214298 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214297,G__214298) : tailrecursion.hoplon.span.call(null,G__214297,G__214298));
})();
var G__214268 = " [";
var G__214269 = (function (){var G__214299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214300 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214299,G__214300) : tailrecursion.hoplon.span.call(null,G__214299,G__214300));
})();
var G__214270 = " ";
var G__214271 = (function (){var G__214301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214302 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214301,G__214302) : tailrecursion.hoplon.span.call(null,G__214301,G__214302));
})();
var G__214272 = "]\n  (";
var G__214273 = (function (){var G__214303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214304 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214303,G__214304) : tailrecursion.hoplon.span.call(null,G__214303,G__214304));
})();
var G__214274 = "[";
var G__214275 = (function (){var G__214305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214306 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214305,G__214306) : tailrecursion.hoplon.span.call(null,G__214305,G__214306));
})();
var G__214276 = " (";
var G__214277 = (function (){var G__214307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214308 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214307,G__214308) : tailrecursion.hoplon.span.call(null,G__214307,G__214308));
})();
var G__214278 = " ";
var G__214279 = (function (){var G__214309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214310 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214309,G__214310) : tailrecursion.hoplon.span.call(null,G__214309,G__214310));
})();
var G__214280 = " ";
var G__214281 = (function (){var G__214311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214312 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214311,G__214312) : tailrecursion.hoplon.span.call(null,G__214311,G__214312));
})();
var G__214282 = ")]\n    (";
var G__214283 = (function (){var G__214313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214314 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214313,G__214314) : tailrecursion.hoplon.span.call(null,G__214313,G__214314));
})();
var G__214284 = "(";
var G__214285 = (function (){var G__214315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214316 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214315,G__214316) : tailrecursion.hoplon.span.call(null,G__214315,G__214316));
})();
var G__214286 = (function (){var G__214317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214318 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214317,G__214318) : tailrecursion.hoplon.span.call(null,G__214317,G__214318));
})();
var G__214287 = " ";
var G__214288 = (function (){var G__214319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214320 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214319,G__214320) : tailrecursion.hoplon.span.call(null,G__214319,G__214320));
})();
var G__214289 = ") (";
var G__214290 = (function (){var G__214321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214322 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214321,G__214322) : tailrecursion.hoplon.span.call(null,G__214321,G__214322));
})();
var G__214291 = (function (){var G__214323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214324 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214323,G__214324) : tailrecursion.hoplon.span.call(null,G__214323,G__214324));
})();
var G__214292 = " ";
var G__214293 = (function (){var G__214325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214326 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214325,G__214326) : tailrecursion.hoplon.span.call(null,G__214325,G__214326));
})();
var G__214294 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__214264,G__214265,G__214266,G__214267,G__214268,G__214269,G__214270,G__214271,G__214272,G__214273,G__214274,G__214275,G__214276,G__214277,G__214278,G__214279,G__214280,G__214281,G__214282,G__214283,G__214284,G__214285,G__214286,G__214287,G__214288,G__214289,G__214290,G__214291,G__214292,G__214293,G__214294) : tailrecursion.hoplon.pre.call(null,G__214264,G__214265,G__214266,G__214267,G__214268,G__214269,G__214270,G__214271,G__214272,G__214273,G__214274,G__214275,G__214276,G__214277,G__214278,G__214279,G__214280,G__214281,G__214282,G__214283,G__214284,G__214285,G__214286,G__214287,G__214288,G__214289,G__214290,G__214291,G__214292,G__214293,G__214294));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__214262,G__214263) : tailrecursion.hoplon.div.call(null,G__214262,G__214263));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__214261) : tailrecursion.hoplon.div.call(null,G__214261));
})(),(function (){var G__214327 = cljs.core.PersistentArrayMap.EMPTY;
var G__214328 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we have,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__214327,G__214328) : tailrecursion.hoplon.markdown.para_node.call(null,G__214327,G__214328));
})(),(function (){var G__214356 = (function (){var G__214357 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__214358 = (function (){var G__214359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__214360 = "(";
var G__214361 = (function (){var G__214372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214373 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214372,G__214373) : tailrecursion.hoplon.span.call(null,G__214372,G__214373));
})();
var G__214362 = " (";
var G__214363 = (function (){var G__214374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214375 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214374,G__214375) : tailrecursion.hoplon.span.call(null,G__214374,G__214375));
})();
var G__214364 = " ";
var G__214365 = (function (){var G__214376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214377 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214376,G__214377) : tailrecursion.hoplon.span.call(null,G__214376,G__214377));
})();
var G__214366 = " ";
var G__214367 = (function (){var G__214378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214379 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214378,G__214379) : tailrecursion.hoplon.span.call(null,G__214378,G__214379));
})();
var G__214368 = "))\n";
var G__214369 = (function (){var G__214380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214381 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214380,G__214381) : tailrecursion.hoplon.span.call(null,G__214380,G__214381));
})();
var G__214370 = (function (){var G__214382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214383 = "/3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214382,G__214383) : tailrecursion.hoplon.span.call(null,G__214382,G__214383));
})();
var G__214371 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__214359,G__214360,G__214361,G__214362,G__214363,G__214364,G__214365,G__214366,G__214367,G__214368,G__214369,G__214370,G__214371) : tailrecursion.hoplon.pre.call(null,G__214359,G__214360,G__214361,G__214362,G__214363,G__214364,G__214365,G__214366,G__214367,G__214368,G__214369,G__214370,G__214371));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__214357,G__214358) : tailrecursion.hoplon.div.call(null,G__214357,G__214358));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__214356) : tailrecursion.hoplon.div.call(null,G__214356));
})(),(function (){var G__214384 = cljs.core.PersistentArrayMap.EMPTY;
var G__214385 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["as desired. This modification was accomplished by changing the constructor ",(function (){var G__214386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__214387 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214386,G__214387) : tailrecursion.hoplon.markdown.code_node.call(null,G__214386,G__214387));
})()," without changing any of the procedures (such as ",(function (){var G__214388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__214389 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214388,G__214389) : tailrecursion.hoplon.markdown.code_node.call(null,G__214388,G__214389));
})()," and ",(function (){var G__214390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mul-rat"], null);
var G__214391 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214390,G__214391) : tailrecursion.hoplon.markdown.code_node.call(null,G__214390,G__214391));
})(),") that implement the actual operations."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__214384,G__214385) : tailrecursion.hoplon.markdown.para_node.call(null,G__214384,G__214385));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_213658;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_213657;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_213656;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_213655;
}})()], 0));
var G__212316 = "";
var G__212317 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_214392 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_214393 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_214394 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_214395 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__214396 = cljs.core.PersistentArrayMap.EMPTY;
var G__214397 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a better version of ",(function (){var G__214398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__214399 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214398,G__214399) : tailrecursion.hoplon.markdown.code_node.call(null,G__214398,G__214399));
})()," that handles both positive and negative arguments. ",(function (){var G__214400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__214401 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214400,G__214401) : tailrecursion.hoplon.markdown.code_node.call(null,G__214400,G__214401));
})()," should normalize the sign so that if the rational number is positive, both the numerator and denominator are positive, and if the rational number is negative, only the numerator is negative."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__214396,G__214397) : tailrecursion.hoplon.markdown.para_node.call(null,G__214396,G__214397));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_214395;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_214394;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_214393;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_214392;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_214402 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_214403 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_214404 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_214405 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__214550 = (function (){var G__214551 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__214552 = (function (){var G__214553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__214554 = "(";
var G__214555 = (function (){var G__214623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214624 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214623,G__214624) : tailrecursion.hoplon.span.call(null,G__214623,G__214624));
})();
var G__214556 = (function (){var G__214625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214626 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214625,G__214626) : tailrecursion.hoplon.span.call(null,G__214625,G__214626));
})();
var G__214557 = " [";
var G__214558 = (function (){var G__214627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214628 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214627,G__214628) : tailrecursion.hoplon.span.call(null,G__214627,G__214628));
})();
var G__214559 = " ";
var G__214560 = (function (){var G__214629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214630 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214629,G__214630) : tailrecursion.hoplon.span.call(null,G__214629,G__214630));
})();
var G__214561 = "]\n  (";
var G__214562 = (function (){var G__214631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214632 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214631,G__214632) : tailrecursion.hoplon.span.call(null,G__214631,G__214632));
})();
var G__214563 = "[";
var G__214564 = (function (){var G__214633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214634 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214633,G__214634) : tailrecursion.hoplon.span.call(null,G__214633,G__214634));
})();
var G__214565 = " ";
var G__214566 = (function (){var G__214635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214636 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214635,G__214636) : tailrecursion.hoplon.span.call(null,G__214635,G__214636));
})();
var G__214567 = "(";
var G__214568 = (function (){var G__214637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214638 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214637,G__214638) : tailrecursion.hoplon.span.call(null,G__214637,G__214638));
})();
var G__214569 = "[";
var G__214570 = (function (){var G__214639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214640 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214639,G__214640) : tailrecursion.hoplon.span.call(null,G__214639,G__214640));
})();
var G__214571 = " (";
var G__214572 = (function (){var G__214641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214642 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214641,G__214642) : tailrecursion.hoplon.span.call(null,G__214641,G__214642));
})();
var G__214573 = " ";
var G__214574 = (function (){var G__214643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214644 = "%1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214643,G__214644) : tailrecursion.hoplon.span.call(null,G__214643,G__214644));
})();
var G__214575 = " ";
var G__214576 = (function (){var G__214645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214646 = "%2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214645,G__214646) : tailrecursion.hoplon.span.call(null,G__214645,G__214646));
})();
var G__214577 = ")]\n                (";
var G__214578 = (function (){var G__214647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214648 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214647,G__214648) : tailrecursion.hoplon.span.call(null,G__214647,G__214648));
})();
var G__214579 = "(";
var G__214580 = (function (){var G__214649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214650 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214649,G__214650) : tailrecursion.hoplon.span.call(null,G__214649,G__214650));
})();
var G__214581 = (function (){var G__214651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214652 = "%1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214651,G__214652) : tailrecursion.hoplon.span.call(null,G__214651,G__214652));
})();
var G__214582 = " ";
var G__214583 = (function (){var G__214653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214654 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214653,G__214654) : tailrecursion.hoplon.span.call(null,G__214653,G__214654));
})();
var G__214584 = ") (";
var G__214585 = (function (){var G__214655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214656 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214655,G__214656) : tailrecursion.hoplon.span.call(null,G__214655,G__214656));
})();
var G__214586 = (function (){var G__214657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214658 = "%2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214657,G__214658) : tailrecursion.hoplon.span.call(null,G__214657,G__214658));
})();
var G__214587 = " ";
var G__214588 = (function (){var G__214659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214660 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214659,G__214660) : tailrecursion.hoplon.span.call(null,G__214659,G__214660));
})();
var G__214589 = ")))]\n    (";
var G__214590 = (function (){var G__214661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214662 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214661,G__214662) : tailrecursion.hoplon.span.call(null,G__214661,G__214662));
})();
var G__214591 = "(";
var G__214592 = (function (){var G__214663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214664 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214663,G__214664) : tailrecursion.hoplon.span.call(null,G__214663,G__214664));
})();
var G__214593 = "(";
var G__214594 = (function (){var G__214665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214666 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214665,G__214666) : tailrecursion.hoplon.span.call(null,G__214665,G__214666));
})();
var G__214595 = (function (){var G__214667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214668 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214667,G__214668) : tailrecursion.hoplon.span.call(null,G__214667,G__214668));
})();
var G__214596 = " ";
var G__214597 = (function (){var G__214669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214670 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214669,G__214670) : tailrecursion.hoplon.span.call(null,G__214669,G__214670));
})();
var G__214598 = ") ";
var G__214599 = (function (){var G__214671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__214672 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214671,G__214672) : tailrecursion.hoplon.span.call(null,G__214671,G__214672));
})();
var G__214600 = ")\n        (";
var G__214601 = (function (){var G__214673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214674 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214673,G__214674) : tailrecursion.hoplon.span.call(null,G__214673,G__214674));
})();
var G__214602 = " (";
var G__214603 = (function (){var G__214675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214676 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214675,G__214676) : tailrecursion.hoplon.span.call(null,G__214675,G__214676));
})();
var G__214604 = " ";
var G__214605 = (function (){var G__214677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214678 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214677,G__214678) : tailrecursion.hoplon.span.call(null,G__214677,G__214678));
})();
var G__214606 = ") (";
var G__214607 = (function (){var G__214679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214680 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214679,G__214680) : tailrecursion.hoplon.span.call(null,G__214679,G__214680));
})();
var G__214608 = " ";
var G__214609 = (function (){var G__214681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214682 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214681,G__214682) : tailrecursion.hoplon.span.call(null,G__214681,G__214682));
})();
var G__214610 = "))\n        (";
var G__214611 = (function (){var G__214683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214684 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214683,G__214684) : tailrecursion.hoplon.span.call(null,G__214683,G__214684));
})();
var G__214612 = " (";
var G__214613 = (function (){var G__214685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214686 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214685,G__214686) : tailrecursion.hoplon.span.call(null,G__214685,G__214686));
})();
var G__214614 = "(";
var G__214615 = (function (){var G__214687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214688 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214687,G__214688) : tailrecursion.hoplon.span.call(null,G__214687,G__214688));
})();
var G__214616 = " ";
var G__214617 = (function (){var G__214689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214690 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214689,G__214690) : tailrecursion.hoplon.span.call(null,G__214689,G__214690));
})();
var G__214618 = ")) (";
var G__214619 = (function (){var G__214691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214692 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214691,G__214692) : tailrecursion.hoplon.span.call(null,G__214691,G__214692));
})();
var G__214620 = " ";
var G__214621 = (function (){var G__214693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214694 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214693,G__214694) : tailrecursion.hoplon.span.call(null,G__214693,G__214694));
})();
var G__214622 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$70 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$70(G__214553,G__214554,G__214555,G__214556,G__214557,G__214558,G__214559,G__214560,G__214561,G__214562,G__214563,G__214564,G__214565,G__214566,G__214567,G__214568,G__214569,G__214570,G__214571,G__214572,G__214573,G__214574,G__214575,G__214576,G__214577,G__214578,G__214579,G__214580,G__214581,G__214582,G__214583,G__214584,G__214585,G__214586,G__214587,G__214588,G__214589,G__214590,G__214591,G__214592,G__214593,G__214594,G__214595,G__214596,G__214597,G__214598,G__214599,G__214600,G__214601,G__214602,G__214603,G__214604,G__214605,G__214606,G__214607,G__214608,G__214609,G__214610,G__214611,G__214612,G__214613,G__214614,G__214615,G__214616,G__214617,G__214618,G__214619,G__214620,G__214621,G__214622) : tailrecursion.hoplon.pre.call(null,G__214553,G__214554,G__214555,G__214556,G__214557,G__214558,G__214559,G__214560,G__214561,G__214562,G__214563,G__214564,G__214565,G__214566,G__214567,G__214568,G__214569,G__214570,G__214571,G__214572,G__214573,G__214574,G__214575,G__214576,G__214577,G__214578,G__214579,G__214580,G__214581,G__214582,G__214583,G__214584,G__214585,G__214586,G__214587,G__214588,G__214589,G__214590,G__214591,G__214592,G__214593,G__214594,G__214595,G__214596,G__214597,G__214598,G__214599,G__214600,G__214601,G__214602,G__214603,G__214604,G__214605,G__214606,G__214607,G__214608,G__214609,G__214610,G__214611,G__214612,G__214613,G__214614,G__214615,G__214616,G__214617,G__214618,G__214619,G__214620,G__214621,G__214622));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__214551,G__214552) : tailrecursion.hoplon.div.call(null,G__214551,G__214552));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__214550) : tailrecursion.hoplon.div.call(null,G__214550));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_214405;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_214404;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_214403;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_214402;
}})()], 0))], 0))], 0));
var G__212318 = "";
var G__212319 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Abstraction Barriers"], null),(function (){var _STAR_references_STAR_214695 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_214696 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_214697 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_214698 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__214699 = cljs.core.PersistentArrayMap.EMPTY;
var G__214700 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Before continuing with more examples of compound data and data abstraction, let us consider some of the issues raised by the rational-number example. We defined the rational-number operations in terms of a constructor ",(function (){var G__214701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__214702 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214701,G__214702) : tailrecursion.hoplon.markdown.code_node.call(null,G__214701,G__214702));
})()," and selectors ",(function (){var G__214703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__214704 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214703,G__214704) : tailrecursion.hoplon.markdown.code_node.call(null,G__214703,G__214704));
})()," and ",(function (){var G__214705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__214706 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214705,G__214706) : tailrecursion.hoplon.markdown.code_node.call(null,G__214705,G__214706));
})(),". In general, the underlying idea of data abstraction is to identify for each type of data object the basic set of operations in terms of which all manipulations op data objects of that type will be expressed, and then to use only those operations in manipulating the data."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__214699,G__214700) : tailrecursion.hoplon.markdown.para_node.call(null,G__214699,G__214700));
})(),(function (){var G__214707 = cljs.core.PersistentArrayMap.EMPTY;
var G__214708 = new cljs.core.PersistentVector(null, 27, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can envision the structure of the rational-number system as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/fig/1/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 2.1"], null)], 0)),". The horizontal lines represent ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstraction barriers"], null)], 0))," that isolate different ",(function (){var G__214709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__214710 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["levels"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__214709,G__214710) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__214709,G__214710));
})()," of the system. At each level, the barrier separates the programs (above) that use th edata abstraction from the programs (below) that implement the data abstraction. Programs that use rational numbers manipulate them solely in terms of the procedures supplied ",(function (){var G__214711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__214712 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["for public use"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__214711,G__214712) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__214711,G__214712));
})()," by the rational-number package: ",(function (){var G__214713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__214714 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214713,G__214714) : tailrecursion.hoplon.markdown.code_node.call(null,G__214713,G__214714));
})(),", ",(function (){var G__214715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-rat"], null);
var G__214716 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214715,G__214716) : tailrecursion.hoplon.markdown.code_node.call(null,G__214715,G__214716));
})(),", ",(function (){var G__214717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mul-rat"], null);
var G__214718 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214717,G__214718) : tailrecursion.hoplon.markdown.code_node.call(null,G__214717,G__214718));
})(),", ",(function (){var G__214719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"div-rat"], null);
var G__214720 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214719,G__214720) : tailrecursion.hoplon.markdown.code_node.call(null,G__214719,G__214720));
})(),", ",(function (){var G__214721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__214722 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214721,G__214722) : tailrecursion.hoplon.markdown.code_node.call(null,G__214721,G__214722));
})(),", and ",(function (){var G__214723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__214724 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214723,G__214724) : tailrecursion.hoplon.markdown.code_node.call(null,G__214723,G__214724));
})(),", which themselves are implemented in terms of lists. The details of how lists are implemented are irrelevant to the rest of the rational-number package so long as lists can be manipulated by the use of ",(function (){var G__214725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__214726 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214725,G__214726) : tailrecursion.hoplon.markdown.code_node.call(null,G__214725,G__214726));
})(),", ",(function (){var G__214727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__214728 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214727,G__214728) : tailrecursion.hoplon.markdown.code_node.call(null,G__214727,G__214728));
})(),", and ",(function (){var G__214729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__214730 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__214729,G__214730) : tailrecursion.hoplon.markdown.code_node.call(null,G__214729,G__214730));
})(),". In effect, procedures at each level are the interfaces that define the abstraction barriers and connect the different levels."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__214707,G__214708) : tailrecursion.hoplon.markdown.para_node.call(null,G__214707,G__214708));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_214698;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_214697;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_214696;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_214695;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"Data-abstraction barriers in the rational-number package."], null)], 0)),"",(function (){var _STAR_references_STAR_214731 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_214732 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_214733 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_214734 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__214735 = cljs.core.PersistentArrayMap.EMPTY;
var G__214736 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This simple idea has many advantages. One advantage is that it makes programs much easier to maintain and modify. Any complex data structure can be represented in a variety of ways within primitive data structures provided by a programming language. Of course, the choice of representation influences the programs that operate on it; thus, if the representation were to be changed at some later time, all such programs might have to be modified accordingly. This task could be time-consuming and expensive in the vase of large programs unless the dependence on the representation were to be confined by design to a very few program modules."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__214735,G__214736) : tailrecursion.hoplon.markdown.para_node.call(null,G__214735,G__214736));
})(),(function (){var G__214737 = cljs.core.PersistentArrayMap.EMPTY;
var G__214738 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For example, an alternate way to address the problem of reducing rational numbers to lowest terms is to perform the reduction whenever we acces the parts of a rational number, rather than when we construct it. This leads to different constructor and selector procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__214737,G__214738) : tailrecursion.hoplon.markdown.para_node.call(null,G__214737,G__214738));
})(),(function (){var G__214873 = (function (){var G__214874 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__214875 = (function (){var G__214876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__214877 = "(";
var G__214878 = (function (){var G__214938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214939 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214938,G__214939) : tailrecursion.hoplon.span.call(null,G__214938,G__214939));
})();
var G__214879 = (function (){var G__214940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214941 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214940,G__214941) : tailrecursion.hoplon.span.call(null,G__214940,G__214941));
})();
var G__214880 = " [";
var G__214881 = (function (){var G__214942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214943 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214942,G__214943) : tailrecursion.hoplon.span.call(null,G__214942,G__214943));
})();
var G__214882 = " ";
var G__214883 = (function (){var G__214944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214945 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214944,G__214945) : tailrecursion.hoplon.span.call(null,G__214944,G__214945));
})();
var G__214884 = "]\n  (";
var G__214885 = (function (){var G__214946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214947 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214946,G__214947) : tailrecursion.hoplon.span.call(null,G__214946,G__214947));
})();
var G__214886 = (function (){var G__214948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214949 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214948,G__214949) : tailrecursion.hoplon.span.call(null,G__214948,G__214949));
})();
var G__214887 = " ";
var G__214888 = (function (){var G__214950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214951 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214950,G__214951) : tailrecursion.hoplon.span.call(null,G__214950,G__214951));
})();
var G__214889 = "))\n(";
var G__214890 = (function (){var G__214952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214953 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214952,G__214953) : tailrecursion.hoplon.span.call(null,G__214952,G__214953));
})();
var G__214891 = (function (){var G__214954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214955 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214954,G__214955) : tailrecursion.hoplon.span.call(null,G__214954,G__214955));
})();
var G__214892 = " [";
var G__214893 = (function (){var G__214956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214957 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214956,G__214957) : tailrecursion.hoplon.span.call(null,G__214956,G__214957));
})();
var G__214894 = "]\n  (";
var G__214895 = (function (){var G__214958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214959 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214958,G__214959) : tailrecursion.hoplon.span.call(null,G__214958,G__214959));
})();
var G__214896 = "[";
var G__214897 = (function (){var G__214960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214961 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214960,G__214961) : tailrecursion.hoplon.span.call(null,G__214960,G__214961));
})();
var G__214898 = " (";
var G__214899 = (function (){var G__214962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214963 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214962,G__214963) : tailrecursion.hoplon.span.call(null,G__214962,G__214963));
})();
var G__214900 = " (";
var G__214901 = (function (){var G__214964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214965 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214964,G__214965) : tailrecursion.hoplon.span.call(null,G__214964,G__214965));
})();
var G__214902 = (function (){var G__214966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214967 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214966,G__214967) : tailrecursion.hoplon.span.call(null,G__214966,G__214967));
})();
var G__214903 = ") (";
var G__214904 = (function (){var G__214968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214969 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214968,G__214969) : tailrecursion.hoplon.span.call(null,G__214968,G__214969));
})();
var G__214905 = (function (){var G__214970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214971 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214970,G__214971) : tailrecursion.hoplon.span.call(null,G__214970,G__214971));
})();
var G__214906 = "))]\n    (";
var G__214907 = (function (){var G__214972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214973 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214972,G__214973) : tailrecursion.hoplon.span.call(null,G__214972,G__214973));
})();
var G__214908 = "(";
var G__214909 = (function (){var G__214974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214975 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214974,G__214975) : tailrecursion.hoplon.span.call(null,G__214974,G__214975));
})();
var G__214910 = (function (){var G__214976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214977 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214976,G__214977) : tailrecursion.hoplon.span.call(null,G__214976,G__214977));
})();
var G__214911 = ") ";
var G__214912 = (function (){var G__214978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214979 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214978,G__214979) : tailrecursion.hoplon.span.call(null,G__214978,G__214979));
})();
var G__214913 = ")))\n(";
var G__214914 = (function (){var G__214980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214981 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214980,G__214981) : tailrecursion.hoplon.span.call(null,G__214980,G__214981));
})();
var G__214915 = (function (){var G__214982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214983 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214982,G__214983) : tailrecursion.hoplon.span.call(null,G__214982,G__214983));
})();
var G__214916 = " [";
var G__214917 = (function (){var G__214984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214985 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214984,G__214985) : tailrecursion.hoplon.span.call(null,G__214984,G__214985));
})();
var G__214918 = "]\n  (";
var G__214919 = (function (){var G__214986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__214987 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214986,G__214987) : tailrecursion.hoplon.span.call(null,G__214986,G__214987));
})();
var G__214920 = "[";
var G__214921 = (function (){var G__214988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214989 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214988,G__214989) : tailrecursion.hoplon.span.call(null,G__214988,G__214989));
})();
var G__214922 = " (";
var G__214923 = (function (){var G__214990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__214991 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214990,G__214991) : tailrecursion.hoplon.span.call(null,G__214990,G__214991));
})();
var G__214924 = " (";
var G__214925 = (function (){var G__214992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214993 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214992,G__214993) : tailrecursion.hoplon.span.call(null,G__214992,G__214993));
})();
var G__214926 = (function (){var G__214994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214995 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214994,G__214995) : tailrecursion.hoplon.span.call(null,G__214994,G__214995));
})();
var G__214927 = ") (";
var G__214928 = (function (){var G__214996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__214997 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214996,G__214997) : tailrecursion.hoplon.span.call(null,G__214996,G__214997));
})();
var G__214929 = (function (){var G__214998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__214999 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__214998,G__214999) : tailrecursion.hoplon.span.call(null,G__214998,G__214999));
})();
var G__214930 = "))]\n    (";
var G__214931 = (function (){var G__215000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215001 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215000,G__215001) : tailrecursion.hoplon.span.call(null,G__215000,G__215001));
})();
var G__214932 = "(";
var G__214933 = (function (){var G__215002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215003 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215002,G__215003) : tailrecursion.hoplon.span.call(null,G__215002,G__215003));
})();
var G__214934 = (function (){var G__215004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215005 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215004,G__215005) : tailrecursion.hoplon.span.call(null,G__215004,G__215005));
})();
var G__214935 = ") ";
var G__214936 = (function (){var G__215006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215007 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215006,G__215007) : tailrecursion.hoplon.span.call(null,G__215006,G__215007));
})();
var G__214937 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$62 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$62(G__214876,G__214877,G__214878,G__214879,G__214880,G__214881,G__214882,G__214883,G__214884,G__214885,G__214886,G__214887,G__214888,G__214889,G__214890,G__214891,G__214892,G__214893,G__214894,G__214895,G__214896,G__214897,G__214898,G__214899,G__214900,G__214901,G__214902,G__214903,G__214904,G__214905,G__214906,G__214907,G__214908,G__214909,G__214910,G__214911,G__214912,G__214913,G__214914,G__214915,G__214916,G__214917,G__214918,G__214919,G__214920,G__214921,G__214922,G__214923,G__214924,G__214925,G__214926,G__214927,G__214928,G__214929,G__214930,G__214931,G__214932,G__214933,G__214934,G__214935,G__214936,G__214937) : tailrecursion.hoplon.pre.call(null,G__214876,G__214877,G__214878,G__214879,G__214880,G__214881,G__214882,G__214883,G__214884,G__214885,G__214886,G__214887,G__214888,G__214889,G__214890,G__214891,G__214892,G__214893,G__214894,G__214895,G__214896,G__214897,G__214898,G__214899,G__214900,G__214901,G__214902,G__214903,G__214904,G__214905,G__214906,G__214907,G__214908,G__214909,G__214910,G__214911,G__214912,G__214913,G__214914,G__214915,G__214916,G__214917,G__214918,G__214919,G__214920,G__214921,G__214922,G__214923,G__214924,G__214925,G__214926,G__214927,G__214928,G__214929,G__214930,G__214931,G__214932,G__214933,G__214934,G__214935,G__214936,G__214937));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__214874,G__214875) : tailrecursion.hoplon.div.call(null,G__214874,G__214875));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__214873) : tailrecursion.hoplon.div.call(null,G__214873));
})(),(function (){var G__215008 = cljs.core.PersistentArrayMap.EMPTY;
var G__215009 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The difference between this implementation and the previous one lies in when we compute the ",(function (){var G__215010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__215011 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215010,G__215011) : tailrecursion.hoplon.markdown.code_node.call(null,G__215010,G__215011));
})(),". If in our typical use of rational numbers we access the numerators and denominators of the same rational numbers many times, it would be preferable to compute the ",(function (){var G__215012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__215013 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215012,G__215013) : tailrecursion.hoplon.markdown.code_node.call(null,G__215012,G__215013));
})()," when the rational numbers are constructed. If not, we may be better off waiting until access time to compute the ",(function (){var G__215014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__215015 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215014,G__215015) : tailrecursion.hoplon.markdown.code_node.call(null,G__215014,G__215015));
})(),". In any case, when we change from one representation to the other, the procedures ",(function (){var G__215016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__215017 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215016,G__215017) : tailrecursion.hoplon.markdown.code_node.call(null,G__215016,G__215017));
})(),", ",(function (){var G__215018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-rat"], null);
var G__215019 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215018,G__215019) : tailrecursion.hoplon.markdown.code_node.call(null,G__215018,G__215019));
})()," and so on do not have to be modified at all."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__215008,G__215009) : tailrecursion.hoplon.markdown.para_node.call(null,G__215008,G__215009));
})(),(function (){var G__215020 = cljs.core.PersistentArrayMap.EMPTY;
var G__215021 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Constraining the dependence on the representation to a few interface procedures helps us design programs as well as modify them, because it allows us to maintain the flexibility to consider alternate implementations. To continue with our simple example, suppose we are designing a rational-number package and we can",(function (){var G__215022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__215023 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__215022,G__215023) : tailrecursion.hoplon.markdown.simple_node.call(null,G__215022,G__215023));
})(),"t decide initially whether to perform the ",(function (){var G__215024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__215025 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215024,G__215025) : tailrecursion.hoplon.markdown.code_node.call(null,G__215024,G__215025));
})()," at construction time or at selection time. The data-abstraction methodology gives us a way to defer that decision without losing the ability to make progress on the rest of the system."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__215020,G__215021) : tailrecursion.hoplon.markdown.para_node.call(null,G__215020,G__215021));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_214734;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_214733;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_214732;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_214731;
}})()], 0));
var G__212320 = "";
var G__212321 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_215026 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_215027 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_215028 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_215029 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__215030 = cljs.core.PersistentArrayMap.EMPTY;
var G__215031 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the problem of representing line segments in a plane. Each segment is represented as a pair of points: a starting point and an ending point. Define a constructor ",(function (){var G__215032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-segment"], null);
var G__215033 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215032,G__215033) : tailrecursion.hoplon.markdown.code_node.call(null,G__215032,G__215033));
})()," and selectors ",(function (){var G__215034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"start-segment"], null);
var G__215035 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215034,G__215035) : tailrecursion.hoplon.markdown.code_node.call(null,G__215034,G__215035));
})()," and ",(function (){var G__215036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"end-segment"], null);
var G__215037 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215036,G__215037) : tailrecursion.hoplon.markdown.code_node.call(null,G__215036,G__215037));
})()," that define the representation of segments in terms of points. Furthermore, a point can be represented as a pair of numbers: the \\(x\\) coordinate and the \\(y\\) coordinate. Accordingly, specify a constructor ",(function (){var G__215038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-point"], null);
var G__215039 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215038,G__215039) : tailrecursion.hoplon.markdown.code_node.call(null,G__215038,G__215039));
})()," and selectors ",(function (){var G__215040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x-point"], null);
var G__215041 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215040,G__215041) : tailrecursion.hoplon.markdown.code_node.call(null,G__215040,G__215041));
})()," and ",(function (){var G__215042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y-point"], null);
var G__215043 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215042,G__215043) : tailrecursion.hoplon.markdown.code_node.call(null,G__215042,G__215043));
})()," that define this representation. Finally, using your selectors and constructors, define a procedure ",(function (){var G__215044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"midpoint-segment"], null);
var G__215045 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__215044,G__215045) : tailrecursion.hoplon.markdown.code_node.call(null,G__215044,G__215045));
})()," that takes a line segment as argument and returns its midpoint (the point whose coordinates are the average of the coordinates of the endpoints). To try your procedures, you",(function (){var G__215046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__215047 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__215046,G__215047) : tailrecursion.hoplon.markdown.simple_node.call(null,G__215046,G__215047));
})(),"ll need a way to print points:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__215030,G__215031) : tailrecursion.hoplon.markdown.para_node.call(null,G__215030,G__215031));
})(),(function (){var G__215094 = (function (){var G__215095 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__215096 = (function (){var G__215097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__215098 = "(";
var G__215099 = (function (){var G__215119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215120 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215119,G__215120) : tailrecursion.hoplon.span.call(null,G__215119,G__215120));
})();
var G__215100 = (function (){var G__215121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215122 = "print-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215121,G__215122) : tailrecursion.hoplon.span.call(null,G__215121,G__215122));
})();
var G__215101 = " [";
var G__215102 = (function (){var G__215123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215124 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215123,G__215124) : tailrecursion.hoplon.span.call(null,G__215123,G__215124));
})();
var G__215103 = "]\n  (";
var G__215104 = (function (){var G__215125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215126 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215125,G__215126) : tailrecursion.hoplon.span.call(null,G__215125,G__215126));
})();
var G__215105 = (function (){var G__215127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__215128 = "\"(\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215127,G__215128) : tailrecursion.hoplon.span.call(null,G__215127,G__215128));
})();
var G__215106 = " (";
var G__215107 = (function (){var G__215129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215130 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215129,G__215130) : tailrecursion.hoplon.span.call(null,G__215129,G__215130));
})();
var G__215108 = " ";
var G__215109 = (function (){var G__215131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215132 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215131,G__215132) : tailrecursion.hoplon.span.call(null,G__215131,G__215132));
})();
var G__215110 = ") ";
var G__215111 = (function (){var G__215133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__215134 = "\",\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215133,G__215134) : tailrecursion.hoplon.span.call(null,G__215133,G__215134));
})();
var G__215112 = " (";
var G__215113 = (function (){var G__215135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215136 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215135,G__215136) : tailrecursion.hoplon.span.call(null,G__215135,G__215136));
})();
var G__215114 = " ";
var G__215115 = (function (){var G__215137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215138 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215137,G__215138) : tailrecursion.hoplon.span.call(null,G__215137,G__215138));
})();
var G__215116 = ") ";
var G__215117 = (function (){var G__215139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__215140 = "\")\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215139,G__215140) : tailrecursion.hoplon.span.call(null,G__215139,G__215140));
})();
var G__215118 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__215097,G__215098,G__215099,G__215100,G__215101,G__215102,G__215103,G__215104,G__215105,G__215106,G__215107,G__215108,G__215109,G__215110,G__215111,G__215112,G__215113,G__215114,G__215115,G__215116,G__215117,G__215118) : tailrecursion.hoplon.pre.call(null,G__215097,G__215098,G__215099,G__215100,G__215101,G__215102,G__215103,G__215104,G__215105,G__215106,G__215107,G__215108,G__215109,G__215110,G__215111,G__215112,G__215113,G__215114,G__215115,G__215116,G__215117,G__215118));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__215095,G__215096) : tailrecursion.hoplon.div.call(null,G__215095,G__215096));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__215094) : tailrecursion.hoplon.div.call(null,G__215094));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_215029;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_215028;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_215027;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_215026;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_215141 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_215142 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_215143 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_215144 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__215273 = (function (){var G__215274 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__215275 = (function (){var G__215276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__215277 = "(";
var G__215278 = (function (){var G__215334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215335 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215334,G__215335) : tailrecursion.hoplon.span.call(null,G__215334,G__215335));
})();
var G__215279 = (function (){var G__215336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215337 = "make-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215336,G__215337) : tailrecursion.hoplon.span.call(null,G__215336,G__215337));
})();
var G__215280 = " [";
var G__215281 = (function (){var G__215338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215339 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215338,G__215339) : tailrecursion.hoplon.span.call(null,G__215338,G__215339));
})();
var G__215282 = " ";
var G__215283 = (function (){var G__215340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215341 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215340,G__215341) : tailrecursion.hoplon.span.call(null,G__215340,G__215341));
})();
var G__215284 = "]\n  (";
var G__215285 = (function (){var G__215342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215343 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215342,G__215343) : tailrecursion.hoplon.span.call(null,G__215342,G__215343));
})();
var G__215286 = (function (){var G__215344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215345 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215344,G__215345) : tailrecursion.hoplon.span.call(null,G__215344,G__215345));
})();
var G__215287 = " ";
var G__215288 = (function (){var G__215346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215347 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215346,G__215347) : tailrecursion.hoplon.span.call(null,G__215346,G__215347));
})();
var G__215289 = "))\n(";
var G__215290 = (function (){var G__215348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215349 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215348,G__215349) : tailrecursion.hoplon.span.call(null,G__215348,G__215349));
})();
var G__215291 = (function (){var G__215350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215351 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215350,G__215351) : tailrecursion.hoplon.span.call(null,G__215350,G__215351));
})();
var G__215292 = " [";
var G__215293 = (function (){var G__215352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215353 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215352,G__215353) : tailrecursion.hoplon.span.call(null,G__215352,G__215353));
})();
var G__215294 = "]\n  (";
var G__215295 = (function (){var G__215354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215355 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215354,G__215355) : tailrecursion.hoplon.span.call(null,G__215354,G__215355));
})();
var G__215296 = (function (){var G__215356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215357 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215356,G__215357) : tailrecursion.hoplon.span.call(null,G__215356,G__215357));
})();
var G__215297 = "))\n(";
var G__215298 = (function (){var G__215358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215359 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215358,G__215359) : tailrecursion.hoplon.span.call(null,G__215358,G__215359));
})();
var G__215299 = (function (){var G__215360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215361 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215360,G__215361) : tailrecursion.hoplon.span.call(null,G__215360,G__215361));
})();
var G__215300 = " [";
var G__215301 = (function (){var G__215362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215363 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215362,G__215363) : tailrecursion.hoplon.span.call(null,G__215362,G__215363));
})();
var G__215302 = "]\n  (";
var G__215303 = (function (){var G__215364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215365 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215364,G__215365) : tailrecursion.hoplon.span.call(null,G__215364,G__215365));
})();
var G__215304 = (function (){var G__215366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215367 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215366,G__215367) : tailrecursion.hoplon.span.call(null,G__215366,G__215367));
})();
var G__215305 = "))\n(";
var G__215306 = (function (){var G__215368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215369 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215368,G__215369) : tailrecursion.hoplon.span.call(null,G__215368,G__215369));
})();
var G__215307 = (function (){var G__215370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215371 = "make-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215370,G__215371) : tailrecursion.hoplon.span.call(null,G__215370,G__215371));
})();
var G__215308 = " [";
var G__215309 = (function (){var G__215372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215373 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215372,G__215373) : tailrecursion.hoplon.span.call(null,G__215372,G__215373));
})();
var G__215310 = " ";
var G__215311 = (function (){var G__215374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215375 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215374,G__215375) : tailrecursion.hoplon.span.call(null,G__215374,G__215375));
})();
var G__215312 = "]\n  (";
var G__215313 = (function (){var G__215376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215377 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215376,G__215377) : tailrecursion.hoplon.span.call(null,G__215376,G__215377));
})();
var G__215314 = (function (){var G__215378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215379 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215378,G__215379) : tailrecursion.hoplon.span.call(null,G__215378,G__215379));
})();
var G__215315 = " ";
var G__215316 = (function (){var G__215380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215381 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215380,G__215381) : tailrecursion.hoplon.span.call(null,G__215380,G__215381));
})();
var G__215317 = "))\n(";
var G__215318 = (function (){var G__215382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215383 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215382,G__215383) : tailrecursion.hoplon.span.call(null,G__215382,G__215383));
})();
var G__215319 = (function (){var G__215384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215385 = "start-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215384,G__215385) : tailrecursion.hoplon.span.call(null,G__215384,G__215385));
})();
var G__215320 = " [";
var G__215321 = (function (){var G__215386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215387 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215386,G__215387) : tailrecursion.hoplon.span.call(null,G__215386,G__215387));
})();
var G__215322 = "]\n  (";
var G__215323 = (function (){var G__215388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215389 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215388,G__215389) : tailrecursion.hoplon.span.call(null,G__215388,G__215389));
})();
var G__215324 = (function (){var G__215390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215391 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215390,G__215391) : tailrecursion.hoplon.span.call(null,G__215390,G__215391));
})();
var G__215325 = "))\n(";
var G__215326 = (function (){var G__215392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215393 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215392,G__215393) : tailrecursion.hoplon.span.call(null,G__215392,G__215393));
})();
var G__215327 = (function (){var G__215394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215395 = "end-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215394,G__215395) : tailrecursion.hoplon.span.call(null,G__215394,G__215395));
})();
var G__215328 = " [";
var G__215329 = (function (){var G__215396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215397 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215396,G__215397) : tailrecursion.hoplon.span.call(null,G__215396,G__215397));
})();
var G__215330 = "]\n  (";
var G__215331 = (function (){var G__215398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215399 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215398,G__215399) : tailrecursion.hoplon.span.call(null,G__215398,G__215399));
})();
var G__215332 = (function (){var G__215400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215401 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215400,G__215401) : tailrecursion.hoplon.span.call(null,G__215400,G__215401));
})();
var G__215333 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__215276,G__215277,G__215278,G__215279,G__215280,G__215281,G__215282,G__215283,G__215284,G__215285,G__215286,G__215287,G__215288,G__215289,G__215290,G__215291,G__215292,G__215293,G__215294,G__215295,G__215296,G__215297,G__215298,G__215299,G__215300,G__215301,G__215302,G__215303,G__215304,G__215305,G__215306,G__215307,G__215308,G__215309,G__215310,G__215311,G__215312,G__215313,G__215314,G__215315,G__215316,G__215317,G__215318,G__215319,G__215320,G__215321,G__215322,G__215323,G__215324,G__215325,G__215326,G__215327,G__215328,G__215329,G__215330,G__215331,G__215332,G__215333) : tailrecursion.hoplon.pre.call(null,G__215276,G__215277,G__215278,G__215279,G__215280,G__215281,G__215282,G__215283,G__215284,G__215285,G__215286,G__215287,G__215288,G__215289,G__215290,G__215291,G__215292,G__215293,G__215294,G__215295,G__215296,G__215297,G__215298,G__215299,G__215300,G__215301,G__215302,G__215303,G__215304,G__215305,G__215306,G__215307,G__215308,G__215309,G__215310,G__215311,G__215312,G__215313,G__215314,G__215315,G__215316,G__215317,G__215318,G__215319,G__215320,G__215321,G__215322,G__215323,G__215324,G__215325,G__215326,G__215327,G__215328,G__215329,G__215330,G__215331,G__215332,G__215333));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__215274,G__215275) : tailrecursion.hoplon.div.call(null,G__215274,G__215275));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__215273) : tailrecursion.hoplon.div.call(null,G__215273));
})(),(function (){var G__215402 = cljs.core.PersistentArrayMap.EMPTY;
var G__215403 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Once we have those,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__215402,G__215403) : tailrecursion.hoplon.markdown.para_node.call(null,G__215402,G__215403));
})(),(function (){var G__215523 = (function (){var G__215524 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__215525 = (function (){var G__215526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__215527 = "(";
var G__215528 = (function (){var G__215585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215586 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215585,G__215586) : tailrecursion.hoplon.span.call(null,G__215585,G__215586));
})();
var G__215529 = (function (){var G__215587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215588 = "midpoint-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215587,G__215588) : tailrecursion.hoplon.span.call(null,G__215587,G__215588));
})();
var G__215530 = " [";
var G__215531 = (function (){var G__215589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215590 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215589,G__215590) : tailrecursion.hoplon.span.call(null,G__215589,G__215590));
})();
var G__215532 = "]\n  (";
var G__215533 = (function (){var G__215591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215592 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215591,G__215592) : tailrecursion.hoplon.span.call(null,G__215591,G__215592));
})();
var G__215534 = "[";
var G__215535 = (function (){var G__215593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215594 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215593,G__215594) : tailrecursion.hoplon.span.call(null,G__215593,G__215594));
})();
var G__215536 = "  (";
var G__215537 = (function (){var G__215595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215596 = "start-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215595,G__215596) : tailrecursion.hoplon.span.call(null,G__215595,G__215596));
})();
var G__215538 = " ";
var G__215539 = (function (){var G__215597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215598 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215597,G__215598) : tailrecursion.hoplon.span.call(null,G__215597,G__215598));
})();
var G__215540 = ")\n        ";
var G__215541 = (function (){var G__215599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215600 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215599,G__215600) : tailrecursion.hoplon.span.call(null,G__215599,G__215600));
})();
var G__215542 = "  (";
var G__215543 = (function (){var G__215601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215602 = "end-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215601,G__215602) : tailrecursion.hoplon.span.call(null,G__215601,G__215602));
})();
var G__215544 = " ";
var G__215545 = (function (){var G__215603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215604 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215603,G__215604) : tailrecursion.hoplon.span.call(null,G__215603,G__215604));
})();
var G__215546 = ")\n        ";
var G__215547 = (function (){var G__215605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215606 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215605,G__215606) : tailrecursion.hoplon.span.call(null,G__215605,G__215606));
})();
var G__215548 = " (";
var G__215549 = (function (){var G__215607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215608 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215607,G__215608) : tailrecursion.hoplon.span.call(null,G__215607,G__215608));
})();
var G__215550 = " ";
var G__215551 = (function (){var G__215609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215610 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215609,G__215610) : tailrecursion.hoplon.span.call(null,G__215609,G__215610));
})();
var G__215552 = ")\n        ";
var G__215553 = (function (){var G__215611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215612 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215611,G__215612) : tailrecursion.hoplon.span.call(null,G__215611,G__215612));
})();
var G__215554 = " (";
var G__215555 = (function (){var G__215613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215614 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215613,G__215614) : tailrecursion.hoplon.span.call(null,G__215613,G__215614));
})();
var G__215556 = " ";
var G__215557 = (function (){var G__215615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215616 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215615,G__215616) : tailrecursion.hoplon.span.call(null,G__215615,G__215616));
})();
var G__215558 = ")\n        ";
var G__215559 = (function (){var G__215617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215618 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215617,G__215618) : tailrecursion.hoplon.span.call(null,G__215617,G__215618));
})();
var G__215560 = " (";
var G__215561 = (function (){var G__215619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215620 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215619,G__215620) : tailrecursion.hoplon.span.call(null,G__215619,G__215620));
})();
var G__215562 = " ";
var G__215563 = (function (){var G__215621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215622 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215621,G__215622) : tailrecursion.hoplon.span.call(null,G__215621,G__215622));
})();
var G__215564 = ")\n        ";
var G__215565 = (function (){var G__215623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215624 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215623,G__215624) : tailrecursion.hoplon.span.call(null,G__215623,G__215624));
})();
var G__215566 = " (";
var G__215567 = (function (){var G__215625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215626 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215625,G__215626) : tailrecursion.hoplon.span.call(null,G__215625,G__215626));
})();
var G__215568 = " ";
var G__215569 = (function (){var G__215627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215628 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215627,G__215628) : tailrecursion.hoplon.span.call(null,G__215627,G__215628));
})();
var G__215570 = ")]\n    (";
var G__215571 = (function (){var G__215629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215630 = "make-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215629,G__215630) : tailrecursion.hoplon.span.call(null,G__215629,G__215630));
})();
var G__215572 = " (";
var G__215573 = (function (){var G__215631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215632 = "average";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215631,G__215632) : tailrecursion.hoplon.span.call(null,G__215631,G__215632));
})();
var G__215574 = " ";
var G__215575 = (function (){var G__215633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215634 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215633,G__215634) : tailrecursion.hoplon.span.call(null,G__215633,G__215634));
})();
var G__215576 = " ";
var G__215577 = (function (){var G__215635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215636 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215635,G__215636) : tailrecursion.hoplon.span.call(null,G__215635,G__215636));
})();
var G__215578 = ") (";
var G__215579 = (function (){var G__215637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215638 = "average";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215637,G__215638) : tailrecursion.hoplon.span.call(null,G__215637,G__215638));
})();
var G__215580 = " ";
var G__215581 = (function (){var G__215639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215640 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215639,G__215640) : tailrecursion.hoplon.span.call(null,G__215639,G__215640));
})();
var G__215582 = " ";
var G__215583 = (function (){var G__215641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215642 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215641,G__215642) : tailrecursion.hoplon.span.call(null,G__215641,G__215642));
})();
var G__215584 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59(G__215526,G__215527,G__215528,G__215529,G__215530,G__215531,G__215532,G__215533,G__215534,G__215535,G__215536,G__215537,G__215538,G__215539,G__215540,G__215541,G__215542,G__215543,G__215544,G__215545,G__215546,G__215547,G__215548,G__215549,G__215550,G__215551,G__215552,G__215553,G__215554,G__215555,G__215556,G__215557,G__215558,G__215559,G__215560,G__215561,G__215562,G__215563,G__215564,G__215565,G__215566,G__215567,G__215568,G__215569,G__215570,G__215571,G__215572,G__215573,G__215574,G__215575,G__215576,G__215577,G__215578,G__215579,G__215580,G__215581,G__215582,G__215583,G__215584) : tailrecursion.hoplon.pre.call(null,G__215526,G__215527,G__215528,G__215529,G__215530,G__215531,G__215532,G__215533,G__215534,G__215535,G__215536,G__215537,G__215538,G__215539,G__215540,G__215541,G__215542,G__215543,G__215544,G__215545,G__215546,G__215547,G__215548,G__215549,G__215550,G__215551,G__215552,G__215553,G__215554,G__215555,G__215556,G__215557,G__215558,G__215559,G__215560,G__215561,G__215562,G__215563,G__215564,G__215565,G__215566,G__215567,G__215568,G__215569,G__215570,G__215571,G__215572,G__215573,G__215574,G__215575,G__215576,G__215577,G__215578,G__215579,G__215580,G__215581,G__215582,G__215583,G__215584));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__215524,G__215525) : tailrecursion.hoplon.div.call(null,G__215524,G__215525));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__215523) : tailrecursion.hoplon.div.call(null,G__215523));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_215144;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_215143;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_215142;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_215141;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_215643 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_215644 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_215645 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_215646 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__215647 = cljs.core.PersistentArrayMap.EMPTY;
var G__215648 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Implement a representation for rectangles in a plane. (Hint: you may want to make use of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/ex/2/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.2"], null)], 0))," In terms of your constructors and selectors, create procedures that compute the perimeter and the area of a given rectangle. Now implement a different representation for rectangles. Can you design your system with suitable abstraction barriers, so that the same perimeter and area procedures will work using either representation?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__215647,G__215648) : tailrecursion.hoplon.markdown.para_node.call(null,G__215647,G__215648));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_215646;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_215645;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_215644;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_215643;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_215649 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_215650 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_215651 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_215652 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__215653 = cljs.core.PersistentArrayMap.EMPTY;
var G__215654 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Assuming we are given coordinates of an actual rectangle (so that we don",(function (){var G__215655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__215656 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__215655,G__215656) : tailrecursion.hoplon.markdown.simple_node.call(null,G__215655,G__215656));
})(),"t have to use the Pythagorean theorem or some other method to confirm that the points are what they claim to be), will simplify our lives considerably. Since any rectangle is determined by three of its vertices, we can assume that we are given three sequentially adjacent vertices."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__215653,G__215654) : tailrecursion.hoplon.markdown.para_node.call(null,G__215653,G__215654));
})(),(function (){var G__215695 = (function (){var G__215696 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__215697 = (function (){var G__215698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__215699 = "(";
var G__215700 = (function (){var G__215716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215717 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215716,G__215717) : tailrecursion.hoplon.span.call(null,G__215716,G__215717));
})();
var G__215701 = (function (){var G__215718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215719 = "make-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215718,G__215719) : tailrecursion.hoplon.span.call(null,G__215718,G__215719));
})();
var G__215702 = " [";
var G__215703 = (function (){var G__215720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215721 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215720,G__215721) : tailrecursion.hoplon.span.call(null,G__215720,G__215721));
})();
var G__215704 = " ";
var G__215705 = (function (){var G__215722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215723 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215722,G__215723) : tailrecursion.hoplon.span.call(null,G__215722,G__215723));
})();
var G__215706 = " ";
var G__215707 = (function (){var G__215724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215725 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215724,G__215725) : tailrecursion.hoplon.span.call(null,G__215724,G__215725));
})();
var G__215708 = "]\n  (";
var G__215709 = (function (){var G__215726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215727 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215726,G__215727) : tailrecursion.hoplon.span.call(null,G__215726,G__215727));
})();
var G__215710 = (function (){var G__215728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215729 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215728,G__215729) : tailrecursion.hoplon.span.call(null,G__215728,G__215729));
})();
var G__215711 = " ";
var G__215712 = (function (){var G__215730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215731 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215730,G__215731) : tailrecursion.hoplon.span.call(null,G__215730,G__215731));
})();
var G__215713 = " ";
var G__215714 = (function (){var G__215732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215733 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215732,G__215733) : tailrecursion.hoplon.span.call(null,G__215732,G__215733));
})();
var G__215715 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__215698,G__215699,G__215700,G__215701,G__215702,G__215703,G__215704,G__215705,G__215706,G__215707,G__215708,G__215709,G__215710,G__215711,G__215712,G__215713,G__215714,G__215715) : tailrecursion.hoplon.pre.call(null,G__215698,G__215699,G__215700,G__215701,G__215702,G__215703,G__215704,G__215705,G__215706,G__215707,G__215708,G__215709,G__215710,G__215711,G__215712,G__215713,G__215714,G__215715));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__215696,G__215697) : tailrecursion.hoplon.div.call(null,G__215696,G__215697));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__215695) : tailrecursion.hoplon.div.call(null,G__215695));
})(),(function (){var G__215734 = cljs.core.PersistentArrayMap.EMPTY;
var G__215735 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then, we realize that in order to compute the area and perimeter, we need to know the length and width of the rectangle. So, let",(function (){var G__215736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__215737 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__215736,G__215737) : tailrecursion.hoplon.markdown.simple_node.call(null,G__215736,G__215737));
})(),"s write a separate procedure to do that. But before we do that, it might be a good idea to have a procedure that can find the length of a segment (we could do without this procedure, but it seems like a useful procedure to have if we are to be working with segments, so why not allow ourselves this tool?)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__215734,G__215735) : tailrecursion.hoplon.markdown.para_node.call(null,G__215734,G__215735));
})(),(function (){var G__215867 = (function (){var G__215868 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__215869 = (function (){var G__215870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__215871 = "(";
var G__215872 = (function (){var G__215933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215934 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215933,G__215934) : tailrecursion.hoplon.span.call(null,G__215933,G__215934));
})();
var G__215873 = (function (){var G__215935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215936 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215935,G__215936) : tailrecursion.hoplon.span.call(null,G__215935,G__215936));
})();
var G__215874 = " [";
var G__215875 = (function (){var G__215937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215938 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215937,G__215938) : tailrecursion.hoplon.span.call(null,G__215937,G__215938));
})();
var G__215876 = "]\n  (";
var G__215877 = (function (){var G__215939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__215940 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215939,G__215940) : tailrecursion.hoplon.span.call(null,G__215939,G__215940));
})();
var G__215878 = "[";
var G__215879 = (function (){var G__215941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215942 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215941,G__215942) : tailrecursion.hoplon.span.call(null,G__215941,G__215942));
})();
var G__215880 = "  (";
var G__215881 = (function (){var G__215943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215944 = "start-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215943,G__215944) : tailrecursion.hoplon.span.call(null,G__215943,G__215944));
})();
var G__215882 = " ";
var G__215883 = (function (){var G__215945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215946 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215945,G__215946) : tailrecursion.hoplon.span.call(null,G__215945,G__215946));
})();
var G__215884 = ")\n        ";
var G__215885 = (function (){var G__215947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215948 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215947,G__215948) : tailrecursion.hoplon.span.call(null,G__215947,G__215948));
})();
var G__215886 = "  (";
var G__215887 = (function (){var G__215949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215950 = "end-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215949,G__215950) : tailrecursion.hoplon.span.call(null,G__215949,G__215950));
})();
var G__215888 = " ";
var G__215889 = (function (){var G__215951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215952 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215951,G__215952) : tailrecursion.hoplon.span.call(null,G__215951,G__215952));
})();
var G__215890 = ")\n        ";
var G__215891 = (function (){var G__215953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215954 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215953,G__215954) : tailrecursion.hoplon.span.call(null,G__215953,G__215954));
})();
var G__215892 = " (";
var G__215893 = (function (){var G__215955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215956 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215955,G__215956) : tailrecursion.hoplon.span.call(null,G__215955,G__215956));
})();
var G__215894 = " ";
var G__215895 = (function (){var G__215957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215958 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215957,G__215958) : tailrecursion.hoplon.span.call(null,G__215957,G__215958));
})();
var G__215896 = ")\n        ";
var G__215897 = (function (){var G__215959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215960 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215959,G__215960) : tailrecursion.hoplon.span.call(null,G__215959,G__215960));
})();
var G__215898 = " (";
var G__215899 = (function (){var G__215961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215962 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215961,G__215962) : tailrecursion.hoplon.span.call(null,G__215961,G__215962));
})();
var G__215900 = " ";
var G__215901 = (function (){var G__215963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215964 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215963,G__215964) : tailrecursion.hoplon.span.call(null,G__215963,G__215964));
})();
var G__215902 = ")\n        ";
var G__215903 = (function (){var G__215965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215966 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215965,G__215966) : tailrecursion.hoplon.span.call(null,G__215965,G__215966));
})();
var G__215904 = " (";
var G__215905 = (function (){var G__215967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215968 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215967,G__215968) : tailrecursion.hoplon.span.call(null,G__215967,G__215968));
})();
var G__215906 = " ";
var G__215907 = (function (){var G__215969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215970 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215969,G__215970) : tailrecursion.hoplon.span.call(null,G__215969,G__215970));
})();
var G__215908 = ")\n        ";
var G__215909 = (function (){var G__215971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215972 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215971,G__215972) : tailrecursion.hoplon.span.call(null,G__215971,G__215972));
})();
var G__215910 = " (";
var G__215911 = (function (){var G__215973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215974 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215973,G__215974) : tailrecursion.hoplon.span.call(null,G__215973,G__215974));
})();
var G__215912 = " ";
var G__215913 = (function (){var G__215975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215976 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215975,G__215976) : tailrecursion.hoplon.span.call(null,G__215975,G__215976));
})();
var G__215914 = ")]\n    (";
var G__215915 = (function (){var G__215977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215978 = "Math/sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215977,G__215978) : tailrecursion.hoplon.span.call(null,G__215977,G__215978));
})();
var G__215916 = " (";
var G__215917 = (function (){var G__215979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215980 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215979,G__215980) : tailrecursion.hoplon.span.call(null,G__215979,G__215980));
})();
var G__215918 = "(";
var G__215919 = (function (){var G__215981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215982 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215981,G__215982) : tailrecursion.hoplon.span.call(null,G__215981,G__215982));
})();
var G__215920 = " (";
var G__215921 = (function (){var G__215983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215984 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215983,G__215984) : tailrecursion.hoplon.span.call(null,G__215983,G__215984));
})();
var G__215922 = (function (){var G__215985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215986 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215985,G__215986) : tailrecursion.hoplon.span.call(null,G__215985,G__215986));
})();
var G__215923 = " ";
var G__215924 = (function (){var G__215987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215988 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215987,G__215988) : tailrecursion.hoplon.span.call(null,G__215987,G__215988));
})();
var G__215925 = "))\n                  (";
var G__215926 = (function (){var G__215989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__215990 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215989,G__215990) : tailrecursion.hoplon.span.call(null,G__215989,G__215990));
})();
var G__215927 = " (";
var G__215928 = (function (){var G__215991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__215992 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215991,G__215992) : tailrecursion.hoplon.span.call(null,G__215991,G__215992));
})();
var G__215929 = (function (){var G__215993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215994 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215993,G__215994) : tailrecursion.hoplon.span.call(null,G__215993,G__215994));
})();
var G__215930 = " ";
var G__215931 = (function (){var G__215995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__215996 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__215995,G__215996) : tailrecursion.hoplon.span.call(null,G__215995,G__215996));
})();
var G__215932 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63(G__215870,G__215871,G__215872,G__215873,G__215874,G__215875,G__215876,G__215877,G__215878,G__215879,G__215880,G__215881,G__215882,G__215883,G__215884,G__215885,G__215886,G__215887,G__215888,G__215889,G__215890,G__215891,G__215892,G__215893,G__215894,G__215895,G__215896,G__215897,G__215898,G__215899,G__215900,G__215901,G__215902,G__215903,G__215904,G__215905,G__215906,G__215907,G__215908,G__215909,G__215910,G__215911,G__215912,G__215913,G__215914,G__215915,G__215916,G__215917,G__215918,G__215919,G__215920,G__215921,G__215922,G__215923,G__215924,G__215925,G__215926,G__215927,G__215928,G__215929,G__215930,G__215931,G__215932) : tailrecursion.hoplon.pre.call(null,G__215870,G__215871,G__215872,G__215873,G__215874,G__215875,G__215876,G__215877,G__215878,G__215879,G__215880,G__215881,G__215882,G__215883,G__215884,G__215885,G__215886,G__215887,G__215888,G__215889,G__215890,G__215891,G__215892,G__215893,G__215894,G__215895,G__215896,G__215897,G__215898,G__215899,G__215900,G__215901,G__215902,G__215903,G__215904,G__215905,G__215906,G__215907,G__215908,G__215909,G__215910,G__215911,G__215912,G__215913,G__215914,G__215915,G__215916,G__215917,G__215918,G__215919,G__215920,G__215921,G__215922,G__215923,G__215924,G__215925,G__215926,G__215927,G__215928,G__215929,G__215930,G__215931,G__215932));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__215868,G__215869) : tailrecursion.hoplon.div.call(null,G__215868,G__215869));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__215867) : tailrecursion.hoplon.div.call(null,G__215867));
})(),(function (){var G__215997 = cljs.core.PersistentArrayMap.EMPTY;
var G__215998 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Good, now we can move on. I",(function (){var G__215999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__216000 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__215999,G__216000) : tailrecursion.hoplon.markdown.simple_node.call(null,G__215999,G__216000));
})(),"m not sure if it would be useful to define a global procedure to get the sides of a rectangle as line-segments, but if it gets in the way, we can use a ",(function (){var G__216001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__216002 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216001,G__216002) : tailrecursion.hoplon.markdown.code_node.call(null,G__216001,G__216002));
})()," binding instead. For now, let",(function (){var G__216003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__216004 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__216003,G__216004) : tailrecursion.hoplon.markdown.simple_node.call(null,G__216003,G__216004));
})(),"s define it globally."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__215997,G__215998) : tailrecursion.hoplon.markdown.para_node.call(null,G__215997,G__215998));
})(),(function (){var G__216071 = (function (){var G__216072 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__216073 = (function (){var G__216074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__216075 = "(";
var G__216076 = (function (){var G__216104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__216105 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216104,G__216105) : tailrecursion.hoplon.span.call(null,G__216104,G__216105));
})();
var G__216077 = (function (){var G__216106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216107 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216106,G__216107) : tailrecursion.hoplon.span.call(null,G__216106,G__216107));
})();
var G__216078 = " [";
var G__216079 = (function (){var G__216108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216109 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216108,G__216109) : tailrecursion.hoplon.span.call(null,G__216108,G__216109));
})();
var G__216080 = "]\n  (";
var G__216081 = (function (){var G__216110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216111 = "make-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216110,G__216111) : tailrecursion.hoplon.span.call(null,G__216110,G__216111));
})();
var G__216082 = " (";
var G__216083 = (function (){var G__216112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216113 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216112,G__216113) : tailrecursion.hoplon.span.call(null,G__216112,G__216113));
})();
var G__216084 = (function (){var G__216114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216115 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216114,G__216115) : tailrecursion.hoplon.span.call(null,G__216114,G__216115));
})();
var G__216085 = ") (";
var G__216086 = (function (){var G__216116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216117 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216116,G__216117) : tailrecursion.hoplon.span.call(null,G__216116,G__216117));
})();
var G__216087 = (function (){var G__216118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216119 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216118,G__216119) : tailrecursion.hoplon.span.call(null,G__216118,G__216119));
})();
var G__216088 = ")))\n(";
var G__216089 = (function (){var G__216120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__216121 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216120,G__216121) : tailrecursion.hoplon.span.call(null,G__216120,G__216121));
})();
var G__216090 = (function (){var G__216122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216123 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216122,G__216123) : tailrecursion.hoplon.span.call(null,G__216122,G__216123));
})();
var G__216091 = " [";
var G__216092 = (function (){var G__216124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216125 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216124,G__216125) : tailrecursion.hoplon.span.call(null,G__216124,G__216125));
})();
var G__216093 = "]\n  (";
var G__216094 = (function (){var G__216126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216127 = "make-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216126,G__216127) : tailrecursion.hoplon.span.call(null,G__216126,G__216127));
})();
var G__216095 = " (";
var G__216096 = (function (){var G__216128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216129 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216128,G__216129) : tailrecursion.hoplon.span.call(null,G__216128,G__216129));
})();
var G__216097 = (function (){var G__216130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216131 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216130,G__216131) : tailrecursion.hoplon.span.call(null,G__216130,G__216131));
})();
var G__216098 = ") (";
var G__216099 = (function (){var G__216132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216133 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216132,G__216133) : tailrecursion.hoplon.span.call(null,G__216132,G__216133));
})();
var G__216100 = (function (){var G__216134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216135 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216134,G__216135) : tailrecursion.hoplon.span.call(null,G__216134,G__216135));
})();
var G__216101 = " ";
var G__216102 = (function (){var G__216136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__216137 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216136,G__216137) : tailrecursion.hoplon.span.call(null,G__216136,G__216137));
})();
var G__216103 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30(G__216074,G__216075,G__216076,G__216077,G__216078,G__216079,G__216080,G__216081,G__216082,G__216083,G__216084,G__216085,G__216086,G__216087,G__216088,G__216089,G__216090,G__216091,G__216092,G__216093,G__216094,G__216095,G__216096,G__216097,G__216098,G__216099,G__216100,G__216101,G__216102,G__216103) : tailrecursion.hoplon.pre.call(null,G__216074,G__216075,G__216076,G__216077,G__216078,G__216079,G__216080,G__216081,G__216082,G__216083,G__216084,G__216085,G__216086,G__216087,G__216088,G__216089,G__216090,G__216091,G__216092,G__216093,G__216094,G__216095,G__216096,G__216097,G__216098,G__216099,G__216100,G__216101,G__216102,G__216103));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__216072,G__216073) : tailrecursion.hoplon.div.call(null,G__216072,G__216073));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__216071) : tailrecursion.hoplon.div.call(null,G__216071));
})(),(function (){var G__216138 = cljs.core.PersistentArrayMap.EMPTY;
var G__216139 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we",(function (){var G__216140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__216141 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__216140,G__216141) : tailrecursion.hoplon.markdown.simple_node.call(null,G__216140,G__216141));
})(),"re ready to make our area and perimeter procedures."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216138,G__216139) : tailrecursion.hoplon.markdown.para_node.call(null,G__216138,G__216139));
})(),(function (){var G__216231 = (function (){var G__216232 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__216233 = (function (){var G__216234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__216235 = "(";
var G__216236 = (function (){var G__216277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__216278 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216277,G__216278) : tailrecursion.hoplon.span.call(null,G__216277,G__216278));
})();
var G__216237 = (function (){var G__216279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216280 = "area-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216279,G__216280) : tailrecursion.hoplon.span.call(null,G__216279,G__216280));
})();
var G__216238 = " [";
var G__216239 = (function (){var G__216281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216282 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216281,G__216282) : tailrecursion.hoplon.span.call(null,G__216281,G__216282));
})();
var G__216240 = "]\n  (";
var G__216241 = (function (){var G__216283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216284 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216283,G__216284) : tailrecursion.hoplon.span.call(null,G__216283,G__216284));
})();
var G__216242 = "(";
var G__216243 = (function (){var G__216285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216286 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216285,G__216286) : tailrecursion.hoplon.span.call(null,G__216285,G__216286));
})();
var G__216244 = " (";
var G__216245 = (function (){var G__216287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216288 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216287,G__216288) : tailrecursion.hoplon.span.call(null,G__216287,G__216288));
})();
var G__216246 = " ";
var G__216247 = (function (){var G__216289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216290 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216289,G__216290) : tailrecursion.hoplon.span.call(null,G__216289,G__216290));
})();
var G__216248 = "))\n     (";
var G__216249 = (function (){var G__216291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216292 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216291,G__216292) : tailrecursion.hoplon.span.call(null,G__216291,G__216292));
})();
var G__216250 = " (";
var G__216251 = (function (){var G__216293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216294 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216293,G__216294) : tailrecursion.hoplon.span.call(null,G__216293,G__216294));
})();
var G__216252 = " ";
var G__216253 = (function (){var G__216295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216296 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216295,G__216296) : tailrecursion.hoplon.span.call(null,G__216295,G__216296));
})();
var G__216254 = "))))\n(";
var G__216255 = (function (){var G__216297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__216298 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216297,G__216298) : tailrecursion.hoplon.span.call(null,G__216297,G__216298));
})();
var G__216256 = (function (){var G__216299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216300 = "perimeter-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216299,G__216300) : tailrecursion.hoplon.span.call(null,G__216299,G__216300));
})();
var G__216257 = " [";
var G__216258 = (function (){var G__216301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216302 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216301,G__216302) : tailrecursion.hoplon.span.call(null,G__216301,G__216302));
})();
var G__216259 = "]\n  (";
var G__216260 = (function (){var G__216303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216304 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216303,G__216304) : tailrecursion.hoplon.span.call(null,G__216303,G__216304));
})();
var G__216261 = (function (){var G__216305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__216306 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216305,G__216306) : tailrecursion.hoplon.span.call(null,G__216305,G__216306));
})();
var G__216262 = " (";
var G__216263 = (function (){var G__216307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216308 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216307,G__216308) : tailrecursion.hoplon.span.call(null,G__216307,G__216308));
})();
var G__216264 = "(";
var G__216265 = (function (){var G__216309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216310 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216309,G__216310) : tailrecursion.hoplon.span.call(null,G__216309,G__216310));
})();
var G__216266 = " (";
var G__216267 = (function (){var G__216311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216312 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216311,G__216312) : tailrecursion.hoplon.span.call(null,G__216311,G__216312));
})();
var G__216268 = " ";
var G__216269 = (function (){var G__216313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216314 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216313,G__216314) : tailrecursion.hoplon.span.call(null,G__216313,G__216314));
})();
var G__216270 = "))\n          (";
var G__216271 = (function (){var G__216315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216316 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216315,G__216316) : tailrecursion.hoplon.span.call(null,G__216315,G__216316));
})();
var G__216272 = " (";
var G__216273 = (function (){var G__216317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216318 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216317,G__216318) : tailrecursion.hoplon.span.call(null,G__216317,G__216318));
})();
var G__216274 = " ";
var G__216275 = (function (){var G__216319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216320 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216319,G__216320) : tailrecursion.hoplon.span.call(null,G__216319,G__216320));
})();
var G__216276 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43(G__216234,G__216235,G__216236,G__216237,G__216238,G__216239,G__216240,G__216241,G__216242,G__216243,G__216244,G__216245,G__216246,G__216247,G__216248,G__216249,G__216250,G__216251,G__216252,G__216253,G__216254,G__216255,G__216256,G__216257,G__216258,G__216259,G__216260,G__216261,G__216262,G__216263,G__216264,G__216265,G__216266,G__216267,G__216268,G__216269,G__216270,G__216271,G__216272,G__216273,G__216274,G__216275,G__216276) : tailrecursion.hoplon.pre.call(null,G__216234,G__216235,G__216236,G__216237,G__216238,G__216239,G__216240,G__216241,G__216242,G__216243,G__216244,G__216245,G__216246,G__216247,G__216248,G__216249,G__216250,G__216251,G__216252,G__216253,G__216254,G__216255,G__216256,G__216257,G__216258,G__216259,G__216260,G__216261,G__216262,G__216263,G__216264,G__216265,G__216266,G__216267,G__216268,G__216269,G__216270,G__216271,G__216272,G__216273,G__216274,G__216275,G__216276));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__216232,G__216233) : tailrecursion.hoplon.div.call(null,G__216232,G__216233));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__216231) : tailrecursion.hoplon.div.call(null,G__216231));
})(),(function (){var G__216321 = cljs.core.PersistentArrayMap.EMPTY;
var G__216322 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now, if our implementation for rectangles were something different, like:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216321,G__216322) : tailrecursion.hoplon.markdown.para_node.call(null,G__216321,G__216322));
})(),(function (){var G__216372 = (function (){var G__216373 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__216374 = (function (){var G__216375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__216376 = "(";
var G__216377 = (function (){var G__216398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__216399 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216398,G__216399) : tailrecursion.hoplon.span.call(null,G__216398,G__216399));
})();
var G__216378 = (function (){var G__216400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216401 = "make-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216400,G__216401) : tailrecursion.hoplon.span.call(null,G__216400,G__216401));
})();
var G__216379 = " [";
var G__216380 = (function (){var G__216402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216403 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216402,G__216403) : tailrecursion.hoplon.span.call(null,G__216402,G__216403));
})();
var G__216381 = " ";
var G__216382 = (function (){var G__216404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216405 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216404,G__216405) : tailrecursion.hoplon.span.call(null,G__216404,G__216405));
})();
var G__216383 = " ";
var G__216384 = (function (){var G__216406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216407 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216406,G__216407) : tailrecursion.hoplon.span.call(null,G__216406,G__216407));
})();
var G__216385 = "]\n  (";
var G__216386 = (function (){var G__216408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216409 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216408,G__216409) : tailrecursion.hoplon.span.call(null,G__216408,G__216409));
})();
var G__216387 = "(";
var G__216388 = (function (){var G__216410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216411 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216410,G__216411) : tailrecursion.hoplon.span.call(null,G__216410,G__216411));
})();
var G__216389 = (function (){var G__216412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216413 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216412,G__216413) : tailrecursion.hoplon.span.call(null,G__216412,G__216413));
})();
var G__216390 = " ";
var G__216391 = (function (){var G__216414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216415 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216414,G__216415) : tailrecursion.hoplon.span.call(null,G__216414,G__216415));
})();
var G__216392 = ") (";
var G__216393 = (function (){var G__216416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216417 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216416,G__216417) : tailrecursion.hoplon.span.call(null,G__216416,G__216417));
})();
var G__216394 = (function (){var G__216418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216419 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216418,G__216419) : tailrecursion.hoplon.span.call(null,G__216418,G__216419));
})();
var G__216395 = " ";
var G__216396 = (function (){var G__216420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216421 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216420,G__216421) : tailrecursion.hoplon.span.call(null,G__216420,G__216421));
})();
var G__216397 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__216375,G__216376,G__216377,G__216378,G__216379,G__216380,G__216381,G__216382,G__216383,G__216384,G__216385,G__216386,G__216387,G__216388,G__216389,G__216390,G__216391,G__216392,G__216393,G__216394,G__216395,G__216396,G__216397) : tailrecursion.hoplon.pre.call(null,G__216375,G__216376,G__216377,G__216378,G__216379,G__216380,G__216381,G__216382,G__216383,G__216384,G__216385,G__216386,G__216387,G__216388,G__216389,G__216390,G__216391,G__216392,G__216393,G__216394,G__216395,G__216396,G__216397));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__216373,G__216374) : tailrecursion.hoplon.div.call(null,G__216373,G__216374));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__216372) : tailrecursion.hoplon.div.call(null,G__216372));
})(),(function (){var G__216422 = cljs.core.PersistentArrayMap.EMPTY;
var G__216423 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In this representation, we",(function (){var G__216424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__216425 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__216424,G__216425) : tailrecursion.hoplon.markdown.simple_node.call(null,G__216424,G__216425));
})(),"re defining rectangles by their sides rather than by their vertices. Let",(function (){var G__216426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__216427 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__216426,G__216427) : tailrecursion.hoplon.markdown.simple_node.call(null,G__216426,G__216427));
})(),"s see how things must change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216422,G__216423) : tailrecursion.hoplon.markdown.para_node.call(null,G__216422,G__216423));
})(),(function (){var G__216468 = (function (){var G__216469 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__216470 = (function (){var G__216471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__216472 = "(";
var G__216473 = (function (){var G__216489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__216490 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216489,G__216490) : tailrecursion.hoplon.span.call(null,G__216489,G__216490));
})();
var G__216474 = (function (){var G__216491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216492 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216491,G__216492) : tailrecursion.hoplon.span.call(null,G__216491,G__216492));
})();
var G__216475 = " [";
var G__216476 = (function (){var G__216493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216494 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216493,G__216494) : tailrecursion.hoplon.span.call(null,G__216493,G__216494));
})();
var G__216477 = "]\n  (";
var G__216478 = (function (){var G__216495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216496 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216495,G__216496) : tailrecursion.hoplon.span.call(null,G__216495,G__216496));
})();
var G__216479 = (function (){var G__216497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216498 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216497,G__216498) : tailrecursion.hoplon.span.call(null,G__216497,G__216498));
})();
var G__216480 = "))\n(";
var G__216481 = (function (){var G__216499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__216500 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216499,G__216500) : tailrecursion.hoplon.span.call(null,G__216499,G__216500));
})();
var G__216482 = (function (){var G__216501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216502 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216501,G__216502) : tailrecursion.hoplon.span.call(null,G__216501,G__216502));
})();
var G__216483 = " [";
var G__216484 = (function (){var G__216503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216504 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216503,G__216504) : tailrecursion.hoplon.span.call(null,G__216503,G__216504));
})();
var G__216485 = "]\n  (";
var G__216486 = (function (){var G__216505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216506 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216505,G__216506) : tailrecursion.hoplon.span.call(null,G__216505,G__216506));
})();
var G__216487 = (function (){var G__216507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216508 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216507,G__216508) : tailrecursion.hoplon.span.call(null,G__216507,G__216508));
})();
var G__216488 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__216471,G__216472,G__216473,G__216474,G__216475,G__216476,G__216477,G__216478,G__216479,G__216480,G__216481,G__216482,G__216483,G__216484,G__216485,G__216486,G__216487,G__216488) : tailrecursion.hoplon.pre.call(null,G__216471,G__216472,G__216473,G__216474,G__216475,G__216476,G__216477,G__216478,G__216479,G__216480,G__216481,G__216482,G__216483,G__216484,G__216485,G__216486,G__216487,G__216488));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__216469,G__216470) : tailrecursion.hoplon.div.call(null,G__216469,G__216470));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__216468) : tailrecursion.hoplon.div.call(null,G__216468));
})(),(function (){var G__216509 = cljs.core.PersistentArrayMap.EMPTY;
var G__216510 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then everything else works just fine."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216509,G__216510) : tailrecursion.hoplon.markdown.para_node.call(null,G__216509,G__216510));
})(),(function (){var G__216511 = cljs.core.PersistentArrayMap.EMPTY;
var G__216512 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: if we wanted to check to make sure that the points were in fact vertices of a rectangle, we could just add an ",(function (){var G__216513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"if"], null);
var G__216514 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216513,G__216514) : tailrecursion.hoplon.markdown.code_node.call(null,G__216513,G__216514));
})()," statement to our definition of ",(function (){var G__216515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rectangle"], null);
var G__216516 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216515,G__216516) : tailrecursion.hoplon.markdown.code_node.call(null,G__216515,G__216516));
})()," such that if it passes the Pythagorean test "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216511,G__216512) : tailrecursion.hoplon.markdown.para_node.call(null,G__216511,G__216512));
})(),(function (){var G__216565 = (function (){var G__216566 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__216567 = (function (){var G__216568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__216569 = "(";
var G__216570 = (function (){var G__216592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216593 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216592,G__216593) : tailrecursion.hoplon.span.call(null,G__216592,G__216593));
})();
var G__216571 = "(";
var G__216572 = (function (){var G__216594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216595 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216594,G__216595) : tailrecursion.hoplon.span.call(null,G__216594,G__216595));
})();
var G__216573 = " (";
var G__216574 = (function (){var G__216596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216597 = "diagonal-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216596,G__216597) : tailrecursion.hoplon.span.call(null,G__216596,G__216597));
})();
var G__216575 = " ";
var G__216576 = (function (){var G__216598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216599 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216598,G__216599) : tailrecursion.hoplon.span.call(null,G__216598,G__216599));
})();
var G__216577 = ")) \n   (";
var G__216578 = (function (){var G__216600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216601 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216600,G__216601) : tailrecursion.hoplon.span.call(null,G__216600,G__216601));
})();
var G__216579 = "(";
var G__216580 = (function (){var G__216602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216603 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216602,G__216603) : tailrecursion.hoplon.span.call(null,G__216602,G__216603));
})();
var G__216581 = " (";
var G__216582 = (function (){var G__216604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216605 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216604,G__216605) : tailrecursion.hoplon.span.call(null,G__216604,G__216605));
})();
var G__216583 = " ";
var G__216584 = (function (){var G__216606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216607 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216606,G__216607) : tailrecursion.hoplon.span.call(null,G__216606,G__216607));
})();
var G__216585 = ")) \n      (";
var G__216586 = (function (){var G__216608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216609 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216608,G__216609) : tailrecursion.hoplon.span.call(null,G__216608,G__216609));
})();
var G__216587 = " (";
var G__216588 = (function (){var G__216610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216611 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216610,G__216611) : tailrecursion.hoplon.span.call(null,G__216610,G__216611));
})();
var G__216589 = " ";
var G__216590 = (function (){var G__216612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216613 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216612,G__216613) : tailrecursion.hoplon.span.call(null,G__216612,G__216613));
})();
var G__216591 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24(G__216568,G__216569,G__216570,G__216571,G__216572,G__216573,G__216574,G__216575,G__216576,G__216577,G__216578,G__216579,G__216580,G__216581,G__216582,G__216583,G__216584,G__216585,G__216586,G__216587,G__216588,G__216589,G__216590,G__216591) : tailrecursion.hoplon.pre.call(null,G__216568,G__216569,G__216570,G__216571,G__216572,G__216573,G__216574,G__216575,G__216576,G__216577,G__216578,G__216579,G__216580,G__216581,G__216582,G__216583,G__216584,G__216585,G__216586,G__216587,G__216588,G__216589,G__216590,G__216591));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__216566,G__216567) : tailrecursion.hoplon.div.call(null,G__216566,G__216567));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__216565) : tailrecursion.hoplon.div.call(null,G__216565));
})(),(function (){var G__216614 = cljs.core.PersistentArrayMap.EMPTY;
var G__216615 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Where ",(function (){var G__216616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"diagonal-rectangle"], null);
var G__216617 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216616,G__216617) : tailrecursion.hoplon.markdown.code_node.call(null,G__216616,G__216617));
})()," would be defined in the necessary way to get what should be the diagonal of the rectangle."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216614,G__216615) : tailrecursion.hoplon.markdown.para_node.call(null,G__216614,G__216615));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_215652;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_215651;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_215650;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_215649;
}})()], 0))], 0))], 0));
var G__212322 = "";
var G__212323 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"What is Meant by Data?"], null),(function (){var _STAR_references_STAR_216618 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_216619 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_216620 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_216621 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__216622 = cljs.core.PersistentArrayMap.EMPTY;
var G__216623 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We began the rational-number implementation in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/sect/1/sub/1/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.1.1"], null)], 0))," by implementing the rational-number operations ",(function (){var G__216624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__216625 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216624,G__216625) : tailrecursion.hoplon.markdown.code_node.call(null,G__216624,G__216625));
})(),", ",(function (){var G__216626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-rat"], null);
var G__216627 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216626,G__216627) : tailrecursion.hoplon.markdown.code_node.call(null,G__216626,G__216627));
})(),", and so on in terms of three unspecified procedures: ",(function (){var G__216628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__216629 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216628,G__216629) : tailrecursion.hoplon.markdown.code_node.call(null,G__216628,G__216629));
})(),", ",(function (){var G__216630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__216631 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216630,G__216631) : tailrecursion.hoplon.markdown.code_node.call(null,G__216630,G__216631));
})(),", and ",(function (){var G__216632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__216633 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216632,G__216633) : tailrecursion.hoplon.markdown.code_node.call(null,G__216632,G__216633));
})(),". At that point, we could think of the operations as being defined in terms of data objects ",(function (){var G__216634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__216635 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__216634,G__216635) : tailrecursion.hoplon.markdown.simple_node.call(null,G__216634,G__216635));
})()," numerators, denominators, and rational numbers ",(function (){var G__216636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__216637 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__216636,G__216637) : tailrecursion.hoplon.markdown.simple_node.call(null,G__216636,G__216637));
})()," whose behavior was specified by the latter three procedures."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216622,G__216623) : tailrecursion.hoplon.markdown.para_node.call(null,G__216622,G__216623));
})(),(function (){var G__216638 = cljs.core.PersistentArrayMap.EMPTY;
var G__216639 = cljs.core.PersistentVector.fromArray(["But exactly what is meant by ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null)], 0)),"? It is not enough to say ",(function (){var G__216640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__216641 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["whatever is implemented by the given selectors and constructors."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__216640,G__216641) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__216640,G__216641));
})()," Clearly, not every arbitrary set of three procedures can serve as an appropriate basis for the rational-number implementation. We need to guarantee that, if we construct a rational number ",(function (){var G__216642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__216643 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216642,G__216643) : tailrecursion.hoplon.markdown.code_node.call(null,G__216642,G__216643));
})()," from a pair of integers ",(function (){var G__216644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__216645 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216644,G__216645) : tailrecursion.hoplon.markdown.code_node.call(null,G__216644,G__216645));
})()," and ",(function (){var G__216646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"d"], null);
var G__216647 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216646,G__216647) : tailrecursion.hoplon.markdown.code_node.call(null,G__216646,G__216647));
})(),", then extracting the ",(function (){var G__216648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__216649 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216648,G__216649) : tailrecursion.hoplon.markdown.code_node.call(null,G__216648,G__216649));
})()," and the ",(function (){var G__216650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__216651 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216650,G__216651) : tailrecursion.hoplon.markdown.code_node.call(null,G__216650,G__216651));
})()," of ",(function (){var G__216652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__216653 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216652,G__216653) : tailrecursion.hoplon.markdown.code_node.call(null,G__216652,G__216653));
})()," and dividing them should yield the same result as dividing ",(function (){var G__216654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__216655 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216654,G__216655) : tailrecursion.hoplon.markdown.code_node.call(null,G__216654,G__216655));
})()," by ",(function (){var G__216656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"d"], null);
var G__216657 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216656,G__216657) : tailrecursion.hoplon.markdown.code_node.call(null,G__216656,G__216657));
})(),". In other words, ",(function (){var G__216658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__216659 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216658,G__216659) : tailrecursion.hoplon.markdown.code_node.call(null,G__216658,G__216659));
})(),", ",(function (){var G__216660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__216661 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216660,G__216661) : tailrecursion.hoplon.markdown.code_node.call(null,G__216660,G__216661));
})(),", and ",(function (){var G__216662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__216663 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216662,G__216663) : tailrecursion.hoplon.markdown.code_node.call(null,G__216662,G__216663));
})()," must satisfy the condition that, for any integer ",(function (){var G__216664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__216665 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216664,G__216665) : tailrecursion.hoplon.markdown.code_node.call(null,G__216664,G__216665));
})()," and any non-zero integer ",(function (){var G__216666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"d"], null);
var G__216667 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216666,G__216667) : tailrecursion.hoplon.markdown.code_node.call(null,G__216666,G__216667));
})(),", if ",(function (){var G__216668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__216669 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216668,G__216669) : tailrecursion.hoplon.markdown.code_node.call(null,G__216668,G__216669));
})()," is ",(function (){var G__216670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(make-rat n d)"], null);
var G__216671 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216670,G__216671) : tailrecursion.hoplon.markdown.code_node.call(null,G__216670,G__216671));
})(),", then"], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216638,G__216639) : tailrecursion.hoplon.markdown.para_node.call(null,G__216638,G__216639));
})(),(function (){var G__216672 = cljs.core.PersistentArrayMap.EMPTY;
var G__216673 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{\\text{(numer x)}}{\\text{(denom x)}}=\\frac{\\text{n}}{\\text{d}}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216672,G__216673) : tailrecursion.hoplon.markdown.para_node.call(null,G__216672,G__216673));
})(),(function (){var G__216674 = cljs.core.PersistentArrayMap.EMPTY;
var G__216675 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In fact, this is the only condition ",(function (){var G__216676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__216677 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216676,G__216677) : tailrecursion.hoplon.markdown.code_node.call(null,G__216676,G__216677));
})(),", ",(function (){var G__216678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__216679 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216678,G__216679) : tailrecursion.hoplon.markdown.code_node.call(null,G__216678,G__216679));
})()," and ",(function (){var G__216680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__216681 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216680,G__216681) : tailrecursion.hoplon.markdown.code_node.call(null,G__216680,G__216681));
})()," must fulfill in order to form a suitable basis for a rational-number representation. In general, we can think of data as defined by some collection of selectors and constructors, together with specified conditions that these procedures must fulfill in order to be a valid representation.",(function (){var G__216682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__216683 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Surprisingly, this idea is very difficult to formulate rigorously. There are two approaches to giving such a formulation. One, pioneered by C. A. R. Hoare (1972), is known as the method of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstract models"], null)], 0)),". It formalizes the ",(function (){var G__216684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__216685 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["procedures plus conditions"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__216684,G__216685) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__216684,G__216685));
})()," specification as outlined in the rational-number example above. Note that the condition on the rational-number representation was stated in terms of facts about integers (equality and division). In general, abstract models define new kinds of data objects in terms of previously defined types of data objects. Assertions about data objects can therefore be checked by reducing them to assertions about previously defined data objects. Another approach, introduced by Zilles at MIT, by Goguen, Thatcher, Wagner, and Wright at IBM (see Thatcher, Wagner, and Wright 1978), and by Guttag at Toronto (see Guttag 1977), is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["algebraic specification"], null)], 0)),". It regards the ",(function (){var G__216686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__216687 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["procedures"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__216686,G__216687) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__216686,G__216687));
})()," as elements of an abstract algebraic system whose behavior is specified by axioms that correspond to our ",(function (){var G__216688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__216689 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["conditions,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__216688,G__216689) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__216688,G__216689));
})()," and uses the techniques of abstract algebra to check assertions about data objects. Both methods are surveyed in the paper by Liskov and Zilles (1975)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__216682,G__216683) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__216682,G__216683));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216674,G__216675) : tailrecursion.hoplon.markdown.para_node.call(null,G__216674,G__216675));
})(),(function (){var G__216690 = cljs.core.PersistentArrayMap.EMPTY;
var G__216691 = cljs.core.PersistentVector.fromArray(["This point of view can serve to define not only ",(function (){var G__216692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__216693 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["high-level"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__216692,G__216693) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__216692,G__216693));
})()," data objects, such as rational numbers, but lower-level objects as well. Consider the notion of a list or a pair (a list of two elements), which we used in order to define our rational numbers. We never actually said what these were, only that the language supplied procedures ",(function (){var G__216694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__216695 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216694,G__216695) : tailrecursion.hoplon.markdown.code_node.call(null,G__216694,G__216695));
})(),", ",(function (){var G__216696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__216697 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216696,G__216697) : tailrecursion.hoplon.markdown.code_node.call(null,G__216696,G__216697));
})(),", and ",(function (){var G__216698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__216699 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216698,G__216699) : tailrecursion.hoplon.markdown.code_node.call(null,G__216698,G__216699));
})()," for operating on them. But the only thing we need to know about these three operations is that if we glue two objects together using ",(function (){var G__216700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__216701 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216700,G__216701) : tailrecursion.hoplon.markdown.code_node.call(null,G__216700,G__216701));
})()," or ",(function (){var G__216702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__216703 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216702,G__216703) : tailrecursion.hoplon.markdown.code_node.call(null,G__216702,G__216703));
})(),", we can retrieve the objects using ",(function (){var G__216704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__216705 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216704,G__216705) : tailrecursion.hoplon.markdown.code_node.call(null,G__216704,G__216705));
})(),", ",(function (){var G__216706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__216707 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216706,G__216707) : tailrecursion.hoplon.markdown.code_node.call(null,G__216706,G__216707));
})(),", ",(function (){var G__216708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__216709 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216708,G__216709) : tailrecursion.hoplon.markdown.code_node.call(null,G__216708,G__216709));
})()," and ",(function (){var G__216710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nth"], null);
var G__216711 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216710,G__216711) : tailrecursion.hoplon.markdown.code_node.call(null,G__216710,G__216711));
})(),". That is, the operations satisfy the condition that, for any objects ",(function (){var G__216712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__216713 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216712,G__216713) : tailrecursion.hoplon.markdown.code_node.call(null,G__216712,G__216713));
})()," and ",(function (){var G__216714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y"], null);
var G__216715 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216714,G__216715) : tailrecursion.hoplon.markdown.code_node.call(null,G__216714,G__216715));
})(),", if ",(function (){var G__216716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"z"], null);
var G__216717 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216716,G__216717) : tailrecursion.hoplon.markdown.code_node.call(null,G__216716,G__216717));
})()," is ",(function (){var G__216718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(list x y)"], null);
var G__216719 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216718,G__216719) : tailrecursion.hoplon.markdown.code_node.call(null,G__216718,G__216719));
})()," then ",(function (){var G__216720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first z)"], null);
var G__216721 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216720,G__216721) : tailrecursion.hoplon.markdown.code_node.call(null,G__216720,G__216721));
})()," is ",(function (){var G__216722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__216723 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216722,G__216723) : tailrecursion.hoplon.markdown.code_node.call(null,G__216722,G__216723));
})()," and ",(function (){var G__216724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(second z)"], null);
var G__216725 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216724,G__216725) : tailrecursion.hoplon.markdown.code_node.call(null,G__216724,G__216725));
})()," is ",(function (){var G__216726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y"], null);
var G__216727 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216726,G__216727) : tailrecursion.hoplon.markdown.code_node.call(null,G__216726,G__216727));
})(),". Indeed, we mentioned that these three procedures are included as primitives in our language. However, any triple of procedures that satisfies the above condition can be used as the basis for implementing pairs. This point is illustrated strikingly by the fact that we could implement ",(function (){var G__216728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__216729 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216728,G__216729) : tailrecursion.hoplon.markdown.code_node.call(null,G__216728,G__216729));
})(),", ",(function (){var G__216730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__216731 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216730,G__216731) : tailrecursion.hoplon.markdown.code_node.call(null,G__216730,G__216731));
})(),", and ",(function (){var G__216732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__216733 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216732,G__216733) : tailrecursion.hoplon.markdown.code_node.call(null,G__216732,G__216733));
})()," for lists without using any data structures at all but only using procedures. Here are the definitions:"], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216690,G__216691) : tailrecursion.hoplon.markdown.para_node.call(null,G__216690,G__216691));
})(),(function (){var G__216865 = (function (){var G__216866 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__216867 = (function (){var G__216868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__216869 = "(";
var G__216870 = (function (){var G__216931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__216932 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216931,G__216932) : tailrecursion.hoplon.span.call(null,G__216931,G__216932));
})();
var G__216871 = (function (){var G__216933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216934 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216933,G__216934) : tailrecursion.hoplon.span.call(null,G__216933,G__216934));
})();
var G__216872 = "[";
var G__216873 = (function (){var G__216935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216936 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216935,G__216936) : tailrecursion.hoplon.span.call(null,G__216935,G__216936));
})();
var G__216874 = " ";
var G__216875 = (function (){var G__216937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216938 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216937,G__216938) : tailrecursion.hoplon.span.call(null,G__216937,G__216938));
})();
var G__216876 = "]\n  (";
var G__216877 = (function (){var G__216939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__216940 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216939,G__216940) : tailrecursion.hoplon.span.call(null,G__216939,G__216940));
})();
var G__216878 = "[";
var G__216879 = (function (){var G__216941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216942 = "dispatch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216941,G__216942) : tailrecursion.hoplon.span.call(null,G__216941,G__216942));
})();
var G__216880 = " (";
var G__216881 = (function (){var G__216943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__216944 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216943,G__216944) : tailrecursion.hoplon.span.call(null,G__216943,G__216944));
})();
var G__216882 = "[";
var G__216883 = (function (){var G__216945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216946 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216945,G__216946) : tailrecursion.hoplon.span.call(null,G__216945,G__216946));
})();
var G__216884 = "] (";
var G__216885 = (function (){var G__216947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216948 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216947,G__216948) : tailrecursion.hoplon.span.call(null,G__216947,G__216948));
})();
var G__216886 = "(";
var G__216887 = (function (){var G__216949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216950 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216949,G__216950) : tailrecursion.hoplon.span.call(null,G__216949,G__216950));
})();
var G__216888 = (function (){var G__216951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216952 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216951,G__216952) : tailrecursion.hoplon.span.call(null,G__216951,G__216952));
})();
var G__216889 = " ";
var G__216890 = (function (){var G__216953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__216954 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216953,G__216954) : tailrecursion.hoplon.span.call(null,G__216953,G__216954));
})();
var G__216891 = ") ";
var G__216892 = (function (){var G__216955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216956 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216955,G__216956) : tailrecursion.hoplon.span.call(null,G__216955,G__216956));
})();
var G__216893 = "\n                               (";
var G__216894 = (function (){var G__216957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__216958 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216957,G__216958) : tailrecursion.hoplon.span.call(null,G__216957,G__216958));
})();
var G__216895 = (function (){var G__216959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216960 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216959,G__216960) : tailrecursion.hoplon.span.call(null,G__216959,G__216960));
})();
var G__216896 = " ";
var G__216897 = (function (){var G__216961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__216962 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216961,G__216962) : tailrecursion.hoplon.span.call(null,G__216961,G__216962));
})();
var G__216898 = ") ";
var G__216899 = (function (){var G__216963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216964 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216963,G__216964) : tailrecursion.hoplon.span.call(null,G__216963,G__216964));
})();
var G__216900 = "\n                               ";
var G__216901 = (function (){var G__216965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216966 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216965,G__216966) : tailrecursion.hoplon.span.call(null,G__216965,G__216966));
})();
var G__216902 = " (";
var G__216903 = (function (){var G__216967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216968 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216967,G__216968) : tailrecursion.hoplon.span.call(null,G__216967,G__216968));
})();
var G__216904 = " (";
var G__216905 = (function (){var G__216969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216970 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216969,G__216970) : tailrecursion.hoplon.span.call(null,G__216969,G__216970));
})();
var G__216906 = " ";
var G__216907 = (function (){var G__216971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__216972 = "\"Argument not 0 or 1 -- CONS\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216971,G__216972) : tailrecursion.hoplon.span.call(null,G__216971,G__216972));
})();
var G__216908 = " ";
var G__216909 = (function (){var G__216973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216974 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216973,G__216974) : tailrecursion.hoplon.span.call(null,G__216973,G__216974));
})();
var G__216910 = "))))]\n    ";
var G__216911 = (function (){var G__216975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216976 = "dispatch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216975,G__216976) : tailrecursion.hoplon.span.call(null,G__216975,G__216976));
})();
var G__216912 = "))\n\n(";
var G__216913 = (function (){var G__216977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__216978 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216977,G__216978) : tailrecursion.hoplon.span.call(null,G__216977,G__216978));
})();
var G__216914 = (function (){var G__216979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216980 = "car";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216979,G__216980) : tailrecursion.hoplon.span.call(null,G__216979,G__216980));
})();
var G__216915 = " [";
var G__216916 = (function (){var G__216981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216982 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216981,G__216982) : tailrecursion.hoplon.span.call(null,G__216981,G__216982));
})();
var G__216917 = "] (";
var G__216918 = (function (){var G__216983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216984 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216983,G__216984) : tailrecursion.hoplon.span.call(null,G__216983,G__216984));
})();
var G__216919 = " ";
var G__216920 = (function (){var G__216985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__216986 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216985,G__216986) : tailrecursion.hoplon.span.call(null,G__216985,G__216986));
})();
var G__216921 = "))\n\n(";
var G__216922 = (function (){var G__216987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__216988 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216987,G__216988) : tailrecursion.hoplon.span.call(null,G__216987,G__216988));
})();
var G__216923 = (function (){var G__216989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216990 = "cdr";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216989,G__216990) : tailrecursion.hoplon.span.call(null,G__216989,G__216990));
})();
var G__216924 = " [";
var G__216925 = (function (){var G__216991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__216992 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216991,G__216992) : tailrecursion.hoplon.span.call(null,G__216991,G__216992));
})();
var G__216926 = "] (";
var G__216927 = (function (){var G__216993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__216994 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216993,G__216994) : tailrecursion.hoplon.span.call(null,G__216993,G__216994));
})();
var G__216928 = " ";
var G__216929 = (function (){var G__216995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__216996 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__216995,G__216996) : tailrecursion.hoplon.span.call(null,G__216995,G__216996));
})();
var G__216930 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63(G__216868,G__216869,G__216870,G__216871,G__216872,G__216873,G__216874,G__216875,G__216876,G__216877,G__216878,G__216879,G__216880,G__216881,G__216882,G__216883,G__216884,G__216885,G__216886,G__216887,G__216888,G__216889,G__216890,G__216891,G__216892,G__216893,G__216894,G__216895,G__216896,G__216897,G__216898,G__216899,G__216900,G__216901,G__216902,G__216903,G__216904,G__216905,G__216906,G__216907,G__216908,G__216909,G__216910,G__216911,G__216912,G__216913,G__216914,G__216915,G__216916,G__216917,G__216918,G__216919,G__216920,G__216921,G__216922,G__216923,G__216924,G__216925,G__216926,G__216927,G__216928,G__216929,G__216930) : tailrecursion.hoplon.pre.call(null,G__216868,G__216869,G__216870,G__216871,G__216872,G__216873,G__216874,G__216875,G__216876,G__216877,G__216878,G__216879,G__216880,G__216881,G__216882,G__216883,G__216884,G__216885,G__216886,G__216887,G__216888,G__216889,G__216890,G__216891,G__216892,G__216893,G__216894,G__216895,G__216896,G__216897,G__216898,G__216899,G__216900,G__216901,G__216902,G__216903,G__216904,G__216905,G__216906,G__216907,G__216908,G__216909,G__216910,G__216911,G__216912,G__216913,G__216914,G__216915,G__216916,G__216917,G__216918,G__216919,G__216920,G__216921,G__216922,G__216923,G__216924,G__216925,G__216926,G__216927,G__216928,G__216929,G__216930));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__216866,G__216867) : tailrecursion.hoplon.div.call(null,G__216866,G__216867));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__216865) : tailrecursion.hoplon.div.call(null,G__216865));
})(),(function (){var G__216997 = cljs.core.PersistentArrayMap.EMPTY;
var G__216998 = new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In the above definitions I used ",(function (){var G__216999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__217000 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__216999,G__217000) : tailrecursion.hoplon.markdown.code_node.call(null,G__216999,G__217000));
})(),", ",(function (){var G__217001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__217002 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217001,G__217002) : tailrecursion.hoplon.markdown.code_node.call(null,G__217001,G__217002));
})(),", and ",(function (){var G__217003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__217004 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217003,G__217004) : tailrecursion.hoplon.markdown.code_node.call(null,G__217003,G__217004));
})()," instead of ",(function (){var G__217005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__217006 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217005,G__217006) : tailrecursion.hoplon.markdown.code_node.call(null,G__217005,G__217006));
})(),", ",(function (){var G__217007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__217008 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217007,G__217008) : tailrecursion.hoplon.markdown.code_node.call(null,G__217007,G__217008));
})(),", and ",(function (){var G__217009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__217010 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217009,G__217010) : tailrecursion.hoplon.markdown.code_node.call(null,G__217009,G__217010));
})()," simply because I like to not deviate from the book whenever possible and it doesn",(function (){var G__217011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__217012 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__217011,G__217012) : tailrecursion.hoplon.markdown.simple_node.call(null,G__217011,G__217012));
})(),"t necessarily add anything to deviate. On the down side (of deviating from the text), this construction would not work if we used lists because lists can have any number of elements so we",(function (){var G__217013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__217014 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__217013,G__217014) : tailrecursion.hoplon.markdown.simple_node.call(null,G__217013,G__217014));
})(),"d have to use other methods to make it work. We digress",(function (){var G__217015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__217016 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__217015,G__217016) : tailrecursion.hoplon.markdown.simple_node.call(null,G__217015,G__217016));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__216997,G__216998) : tailrecursion.hoplon.markdown.para_node.call(null,G__216997,G__216998));
})(),(function (){var G__217017 = cljs.core.PersistentArrayMap.EMPTY;
var G__217018 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This use of procedures corresponds to nothing like our intuitive notion of what data should be. Nevertheless, all we need to do to show that this is a valid way to represent pairs is to verify that these procedures satisfy the condition given above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__217017,G__217018) : tailrecursion.hoplon.markdown.para_node.call(null,G__217017,G__217018));
})(),(function (){var G__217019 = cljs.core.PersistentArrayMap.EMPTY;
var G__217020 = cljs.core.PersistentVector.fromArray(["The subtle point to notice is that the value returned by ",(function (){var G__217021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(cons x y)"], null);
var G__217022 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217021,G__217022) : tailrecursion.hoplon.markdown.code_node.call(null,G__217021,G__217022));
})()," is a procedure ",(function (){var G__217023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__217024 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__217023,G__217024) : tailrecursion.hoplon.markdown.simple_node.call(null,G__217023,G__217024));
})()," namely the internally defined procedure ",(function (){var G__217025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"dispatch"], null);
var G__217026 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217025,G__217026) : tailrecursion.hoplon.markdown.code_node.call(null,G__217025,G__217026));
})(),", which takes one argument and returns either ",(function (){var G__217027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__217028 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217027,G__217028) : tailrecursion.hoplon.markdown.code_node.call(null,G__217027,G__217028));
})()," or ",(function (){var G__217029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y"], null);
var G__217030 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217029,G__217030) : tailrecursion.hoplon.markdown.code_node.call(null,G__217029,G__217030));
})()," depending on whether the argument is 0 or 1. Correspondingly, ",(function (){var G__217031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(car z)"], null);
var G__217032 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217031,G__217032) : tailrecursion.hoplon.markdown.code_node.call(null,G__217031,G__217032));
})()," is defined to apply ",(function (){var G__217033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"z"], null);
var G__217034 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217033,G__217034) : tailrecursion.hoplon.markdown.code_node.call(null,G__217033,G__217034));
})()," to 0. Hence, if ",(function (){var G__217035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"z"], null);
var G__217036 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217035,G__217036) : tailrecursion.hoplon.markdown.code_node.call(null,G__217035,G__217036));
})()," is the procedure formed by ",(function (){var G__217037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(cons x\ny)"], null);
var G__217038 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217037,G__217038) : tailrecursion.hoplon.markdown.code_node.call(null,G__217037,G__217038));
})(),", then ",(function (){var G__217039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"z"], null);
var G__217040 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217039,G__217040) : tailrecursion.hoplon.markdown.code_node.call(null,G__217039,G__217040));
})()," applied to 0 will yield ",(function (){var G__217041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__217042 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217041,G__217042) : tailrecursion.hoplon.markdown.code_node.call(null,G__217041,G__217042));
})(),". Thus, we have shown that ",(function (){var G__217043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(car (cons x y))"], null);
var G__217044 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217043,G__217044) : tailrecursion.hoplon.markdown.code_node.call(null,G__217043,G__217044));
})()," yields ",(function (){var G__217045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__217046 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217045,G__217046) : tailrecursion.hoplon.markdown.code_node.call(null,G__217045,G__217046));
})(),", as desired. Similarly, ",(function (){var G__217047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(cdr (cons x\ny))"], null);
var G__217048 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217047,G__217048) : tailrecursion.hoplon.markdown.code_node.call(null,G__217047,G__217048));
})()," applies the procedure returned by ",(function (){var G__217049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(cons x y)"], null);
var G__217050 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217049,G__217050) : tailrecursion.hoplon.markdown.code_node.call(null,G__217049,G__217050));
})()," to 1, which returns ",(function (){var G__217051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y"], null);
var G__217052 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217051,G__217052) : tailrecursion.hoplon.markdown.code_node.call(null,G__217051,G__217052));
})(),". Therefore, this procedural implementation of pairs is a valid implementation, and if we access pairs using only ",(function (){var G__217053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__217054 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217053,G__217054) : tailrecursion.hoplon.markdown.code_node.call(null,G__217053,G__217054));
})(),", ",(function (){var G__217055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__217056 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217055,G__217056) : tailrecursion.hoplon.markdown.code_node.call(null,G__217055,G__217056));
})(),", and ",(function (){var G__217057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__217058 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217057,G__217058) : tailrecursion.hoplon.markdown.code_node.call(null,G__217057,G__217058));
})()," we cannot distinguish this implementation from one that uses ",(function (){var G__217059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__217060 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["real"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__217059,G__217060) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__217059,G__217060));
})()," data structures."], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__217019,G__217020) : tailrecursion.hoplon.markdown.para_node.call(null,G__217019,G__217020));
})(),(function (){var G__217061 = cljs.core.PersistentArrayMap.EMPTY;
var G__217062 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The point of exhibiting the procedural representation of pairs is not that our language works this way (Scheme, and Lisp systems in general, implement pairs directly, and Clojure implements lists directly as Java objects, for efficiency reasons) but that it could work this way. The procedural representation, although obscure, is a perfectly adequate way to represent pairs, since it fulfills the only conditions that pairs need to fulfill. This example also demonstrates that the ability to manipulate procedures as objects automatically provides the ability to represent compound data. This may seem a curiosity now, but procedural representations of data will play a central role in our programming repertoire. This style of programming is often called message passing, and we will be using it as a basic tool in chapter 3 when we address the issues of modeling and simulation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__217061,G__217062) : tailrecursion.hoplon.markdown.para_node.call(null,G__217061,G__217062));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_216621;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_216620;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_216619;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_216618;
}})()], 0));
var G__212324 = "";
var G__212325 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_217063 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217064 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_217065 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217066 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__217067 = cljs.core.PersistentArrayMap.EMPTY;
var G__217068 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Here is an alternative procedural representation of pairs. For this representation, verify that (car (cons x y)) yields x for any objects x and y."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__217067,G__217068) : tailrecursion.hoplon.markdown.para_node.call(null,G__217067,G__217068));
})(),(function (){var G__217139 = (function (){var G__217140 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__217141 = (function (){var G__217142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__217143 = "(";
var G__217144 = (function (){var G__217176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217177 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217176,G__217177) : tailrecursion.hoplon.span.call(null,G__217176,G__217177));
})();
var G__217145 = (function (){var G__217178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217179 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217178,G__217179) : tailrecursion.hoplon.span.call(null,G__217178,G__217179));
})();
var G__217146 = "[";
var G__217147 = (function (){var G__217180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217181 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217180,G__217181) : tailrecursion.hoplon.span.call(null,G__217180,G__217181));
})();
var G__217148 = " ";
var G__217149 = (function (){var G__217182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217183 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217182,G__217183) : tailrecursion.hoplon.span.call(null,G__217182,G__217183));
})();
var G__217150 = "]\n  (";
var G__217151 = (function (){var G__217184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217185 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217184,G__217185) : tailrecursion.hoplon.span.call(null,G__217184,G__217185));
})();
var G__217152 = "[";
var G__217153 = (function (){var G__217186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217187 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217186,G__217187) : tailrecursion.hoplon.span.call(null,G__217186,G__217187));
})();
var G__217154 = "] (";
var G__217155 = (function (){var G__217188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217189 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217188,G__217189) : tailrecursion.hoplon.span.call(null,G__217188,G__217189));
})();
var G__217156 = " ";
var G__217157 = (function (){var G__217190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217191 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217190,G__217191) : tailrecursion.hoplon.span.call(null,G__217190,G__217191));
})();
var G__217158 = " ";
var G__217159 = (function (){var G__217192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217193 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217192,G__217193) : tailrecursion.hoplon.span.call(null,G__217192,G__217193));
})();
var G__217160 = ")))\n(";
var G__217161 = (function (){var G__217194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217195 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217194,G__217195) : tailrecursion.hoplon.span.call(null,G__217194,G__217195));
})();
var G__217162 = (function (){var G__217196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217197 = "car";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217196,G__217197) : tailrecursion.hoplon.span.call(null,G__217196,G__217197));
})();
var G__217163 = " [";
var G__217164 = (function (){var G__217198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217199 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217198,G__217199) : tailrecursion.hoplon.span.call(null,G__217198,G__217199));
})();
var G__217165 = "]\n  (";
var G__217166 = (function (){var G__217200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217201 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217200,G__217201) : tailrecursion.hoplon.span.call(null,G__217200,G__217201));
})();
var G__217167 = " (";
var G__217168 = (function (){var G__217202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217203 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217202,G__217203) : tailrecursion.hoplon.span.call(null,G__217202,G__217203));
})();
var G__217169 = "[";
var G__217170 = (function (){var G__217204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217205 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217204,G__217205) : tailrecursion.hoplon.span.call(null,G__217204,G__217205));
})();
var G__217171 = " ";
var G__217172 = (function (){var G__217206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217207 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217206,G__217207) : tailrecursion.hoplon.span.call(null,G__217206,G__217207));
})();
var G__217173 = "] ";
var G__217174 = (function (){var G__217208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217209 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217208,G__217209) : tailrecursion.hoplon.span.call(null,G__217208,G__217209));
})();
var G__217175 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34(G__217142,G__217143,G__217144,G__217145,G__217146,G__217147,G__217148,G__217149,G__217150,G__217151,G__217152,G__217153,G__217154,G__217155,G__217156,G__217157,G__217158,G__217159,G__217160,G__217161,G__217162,G__217163,G__217164,G__217165,G__217166,G__217167,G__217168,G__217169,G__217170,G__217171,G__217172,G__217173,G__217174,G__217175) : tailrecursion.hoplon.pre.call(null,G__217142,G__217143,G__217144,G__217145,G__217146,G__217147,G__217148,G__217149,G__217150,G__217151,G__217152,G__217153,G__217154,G__217155,G__217156,G__217157,G__217158,G__217159,G__217160,G__217161,G__217162,G__217163,G__217164,G__217165,G__217166,G__217167,G__217168,G__217169,G__217170,G__217171,G__217172,G__217173,G__217174,G__217175));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__217140,G__217141) : tailrecursion.hoplon.div.call(null,G__217140,G__217141));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__217139) : tailrecursion.hoplon.div.call(null,G__217139));
})(),(function (){var G__217210 = cljs.core.PersistentArrayMap.EMPTY;
var G__217211 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What is the corresponding definition of ",(function (){var G__217212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__217213 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217212,G__217213) : tailrecursion.hoplon.markdown.code_node.call(null,G__217212,G__217213));
})(),"? (Hint: To verify that ths works, make use of the substitution model of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/1/sub/5/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.1.5"], null)], 0)),".)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__217210,G__217211) : tailrecursion.hoplon.markdown.para_node.call(null,G__217210,G__217211));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217066;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217065;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217064;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217063;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_217214 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217215 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_217216 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217217 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__217253 = (function (){var G__217254 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__217255 = (function (){var G__217256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__217257 = "(";
var G__217258 = (function (){var G__217273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217274 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217273,G__217274) : tailrecursion.hoplon.span.call(null,G__217273,G__217274));
})();
var G__217259 = (function (){var G__217275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217276 = "cdr";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217275,G__217276) : tailrecursion.hoplon.span.call(null,G__217275,G__217276));
})();
var G__217260 = " [";
var G__217261 = (function (){var G__217277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217278 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217277,G__217278) : tailrecursion.hoplon.span.call(null,G__217277,G__217278));
})();
var G__217262 = "]\n  (";
var G__217263 = (function (){var G__217279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217280 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217279,G__217280) : tailrecursion.hoplon.span.call(null,G__217279,G__217280));
})();
var G__217264 = " (";
var G__217265 = (function (){var G__217281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217282 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217281,G__217282) : tailrecursion.hoplon.span.call(null,G__217281,G__217282));
})();
var G__217266 = "[";
var G__217267 = (function (){var G__217283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217284 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217283,G__217284) : tailrecursion.hoplon.span.call(null,G__217283,G__217284));
})();
var G__217268 = " ";
var G__217269 = (function (){var G__217285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217286 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217285,G__217286) : tailrecursion.hoplon.span.call(null,G__217285,G__217286));
})();
var G__217270 = "] ";
var G__217271 = (function (){var G__217287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217288 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217287,G__217288) : tailrecursion.hoplon.span.call(null,G__217287,G__217288));
})();
var G__217272 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__217256,G__217257,G__217258,G__217259,G__217260,G__217261,G__217262,G__217263,G__217264,G__217265,G__217266,G__217267,G__217268,G__217269,G__217270,G__217271,G__217272) : tailrecursion.hoplon.pre.call(null,G__217256,G__217257,G__217258,G__217259,G__217260,G__217261,G__217262,G__217263,G__217264,G__217265,G__217266,G__217267,G__217268,G__217269,G__217270,G__217271,G__217272));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__217254,G__217255) : tailrecursion.hoplon.div.call(null,G__217254,G__217255));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__217253) : tailrecursion.hoplon.div.call(null,G__217253));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217217;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217216;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217215;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217214;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_217289 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217290 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_217291 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217292 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__217293 = cljs.core.PersistentArrayMap.EMPTY;
var G__217294 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Show that we can represent pairs of nonnegative integers using only numbers and arithmetic operations if we represent the pair \\(a\\) and \\(b\\) as the integer that is the product \\(2^a3^b\\). Give the corresponding definitions of the procedures ",(function (){var G__217295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__217296 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217295,G__217296) : tailrecursion.hoplon.markdown.code_node.call(null,G__217295,G__217296));
})(),", ",(function (){var G__217297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__217298 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217297,G__217298) : tailrecursion.hoplon.markdown.code_node.call(null,G__217297,G__217298));
})(),", and ",(function (){var G__217299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__217300 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217299,G__217300) : tailrecursion.hoplon.markdown.code_node.call(null,G__217299,G__217300));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__217293,G__217294) : tailrecursion.hoplon.markdown.para_node.call(null,G__217293,G__217294));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217292;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217291;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217290;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217289;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_217301 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217302 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_217303 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217304 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__217514 = (function (){var G__217515 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__217516 = (function (){var G__217517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__217518 = "(";
var G__217519 = (function (){var G__217618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217619 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217618,G__217619) : tailrecursion.hoplon.span.call(null,G__217618,G__217619));
})();
var G__217520 = (function (){var G__217620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217621 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217620,G__217621) : tailrecursion.hoplon.span.call(null,G__217620,G__217621));
})();
var G__217521 = "[";
var G__217522 = (function (){var G__217622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217623 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217622,G__217623) : tailrecursion.hoplon.span.call(null,G__217622,G__217623));
})();
var G__217523 = " ";
var G__217524 = (function (){var G__217624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217625 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217624,G__217625) : tailrecursion.hoplon.span.call(null,G__217624,G__217625));
})();
var G__217525 = "]\n  (";
var G__217526 = (function (){var G__217626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217627 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217626,G__217627) : tailrecursion.hoplon.span.call(null,G__217626,G__217627));
})();
var G__217527 = "(";
var G__217528 = (function (){var G__217628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217629 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217628,G__217629) : tailrecursion.hoplon.span.call(null,G__217628,G__217629));
})();
var G__217529 = " ";
var G__217530 = (function (){var G__217630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217631 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217630,G__217631) : tailrecursion.hoplon.span.call(null,G__217630,G__217631));
})();
var G__217531 = " ";
var G__217532 = (function (){var G__217632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217633 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217632,G__217633) : tailrecursion.hoplon.span.call(null,G__217632,G__217633));
})();
var G__217533 = ") (";
var G__217534 = (function (){var G__217634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217635 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217634,G__217635) : tailrecursion.hoplon.span.call(null,G__217634,G__217635));
})();
var G__217535 = " ";
var G__217536 = (function (){var G__217636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217637 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217636,G__217637) : tailrecursion.hoplon.span.call(null,G__217636,G__217637));
})();
var G__217537 = " ";
var G__217538 = (function (){var G__217638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217639 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217638,G__217639) : tailrecursion.hoplon.span.call(null,G__217638,G__217639));
})();
var G__217539 = ")))\n(";
var G__217540 = (function (){var G__217640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217641 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217640,G__217641) : tailrecursion.hoplon.span.call(null,G__217640,G__217641));
})();
var G__217541 = (function (){var G__217642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217643 = "car";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217642,G__217643) : tailrecursion.hoplon.span.call(null,G__217642,G__217643));
})();
var G__217542 = " [";
var G__217543 = (function (){var G__217644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217645 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217644,G__217645) : tailrecursion.hoplon.span.call(null,G__217644,G__217645));
})();
var G__217544 = "]\n  (";
var G__217545 = (function (){var G__217646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217647 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217646,G__217647) : tailrecursion.hoplon.span.call(null,G__217646,G__217647));
})();
var G__217546 = "[";
var G__217547 = (function (){var G__217648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217649 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217648,G__217649) : tailrecursion.hoplon.span.call(null,G__217648,G__217649));
})();
var G__217548 = "    ";
var G__217549 = (function (){var G__217650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217651 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217650,G__217651) : tailrecursion.hoplon.span.call(null,G__217650,G__217651));
})();
var G__217550 = "\n         ";
var G__217551 = (function (){var G__217652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217653 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217652,G__217653) : tailrecursion.hoplon.span.call(null,G__217652,G__217653));
})();
var G__217552 = " ";
var G__217553 = (function (){var G__217654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217655 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217654,G__217655) : tailrecursion.hoplon.span.call(null,G__217654,G__217655));
})();
var G__217554 = "]\n    (";
var G__217555 = (function (){var G__217656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217657 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217656,G__217657) : tailrecursion.hoplon.span.call(null,G__217656,G__217657));
})();
var G__217556 = "(";
var G__217557 = (function (){var G__217658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217659 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217658,G__217659) : tailrecursion.hoplon.span.call(null,G__217658,G__217659));
})();
var G__217558 = "(";
var G__217559 = (function (){var G__217660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217661 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217660,G__217661) : tailrecursion.hoplon.span.call(null,G__217660,G__217661));
})();
var G__217560 = " ";
var G__217561 = (function (){var G__217662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217663 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217662,G__217663) : tailrecursion.hoplon.span.call(null,G__217662,G__217663));
})();
var G__217562 = " ";
var G__217563 = (function (){var G__217664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217665 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217664,G__217665) : tailrecursion.hoplon.span.call(null,G__217664,G__217665));
})();
var G__217564 = ") ";
var G__217565 = (function (){var G__217666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217667 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217666,G__217667) : tailrecursion.hoplon.span.call(null,G__217666,G__217667));
})();
var G__217566 = ")\n        (";
var G__217567 = (function (){var G__217668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217669 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217668,G__217669) : tailrecursion.hoplon.span.call(null,G__217668,G__217669));
})();
var G__217568 = " (";
var G__217569 = (function (){var G__217670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217671 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217670,G__217671) : tailrecursion.hoplon.span.call(null,G__217670,G__217671));
})();
var G__217570 = (function (){var G__217672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217673 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217672,G__217673) : tailrecursion.hoplon.span.call(null,G__217672,G__217673));
})();
var G__217571 = " ";
var G__217572 = (function (){var G__217674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217675 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217674,G__217675) : tailrecursion.hoplon.span.call(null,G__217674,G__217675));
})();
var G__217573 = ") (";
var G__217574 = (function (){var G__217676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217677 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217676,G__217677) : tailrecursion.hoplon.span.call(null,G__217676,G__217677));
})();
var G__217575 = (function (){var G__217678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217679 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217678,G__217679) : tailrecursion.hoplon.span.call(null,G__217678,G__217679));
})();
var G__217576 = "))\n        ";
var G__217577 = (function (){var G__217680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217681 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217680,G__217681) : tailrecursion.hoplon.span.call(null,G__217680,G__217681));
})();
var G__217578 = ")))\n(";
var G__217579 = (function (){var G__217682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217683 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217682,G__217683) : tailrecursion.hoplon.span.call(null,G__217682,G__217683));
})();
var G__217580 = (function (){var G__217684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217685 = "cdr";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217684,G__217685) : tailrecursion.hoplon.span.call(null,G__217684,G__217685));
})();
var G__217581 = " [";
var G__217582 = (function (){var G__217686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217687 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217686,G__217687) : tailrecursion.hoplon.span.call(null,G__217686,G__217687));
})();
var G__217583 = "]\n  (";
var G__217584 = (function (){var G__217688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217689 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217688,G__217689) : tailrecursion.hoplon.span.call(null,G__217688,G__217689));
})();
var G__217585 = "[";
var G__217586 = (function (){var G__217690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217691 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217690,G__217691) : tailrecursion.hoplon.span.call(null,G__217690,G__217691));
})();
var G__217587 = "    ";
var G__217588 = (function (){var G__217692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217693 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217692,G__217693) : tailrecursion.hoplon.span.call(null,G__217692,G__217693));
})();
var G__217589 = "\n         ";
var G__217590 = (function (){var G__217694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217695 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217694,G__217695) : tailrecursion.hoplon.span.call(null,G__217694,G__217695));
})();
var G__217591 = " ";
var G__217592 = (function (){var G__217696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217697 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217696,G__217697) : tailrecursion.hoplon.span.call(null,G__217696,G__217697));
})();
var G__217593 = "]\n    (";
var G__217594 = (function (){var G__217698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217699 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217698,G__217699) : tailrecursion.hoplon.span.call(null,G__217698,G__217699));
})();
var G__217595 = "(";
var G__217596 = (function (){var G__217700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217701 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217700,G__217701) : tailrecursion.hoplon.span.call(null,G__217700,G__217701));
})();
var G__217597 = "(";
var G__217598 = (function (){var G__217702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217703 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217702,G__217703) : tailrecursion.hoplon.span.call(null,G__217702,G__217703));
})();
var G__217599 = " ";
var G__217600 = (function (){var G__217704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217705 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217704,G__217705) : tailrecursion.hoplon.span.call(null,G__217704,G__217705));
})();
var G__217601 = " ";
var G__217602 = (function (){var G__217706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217707 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217706,G__217707) : tailrecursion.hoplon.span.call(null,G__217706,G__217707));
})();
var G__217603 = ") ";
var G__217604 = (function (){var G__217708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217709 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217708,G__217709) : tailrecursion.hoplon.span.call(null,G__217708,G__217709));
})();
var G__217605 = ")\n        (";
var G__217606 = (function (){var G__217710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217711 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217710,G__217711) : tailrecursion.hoplon.span.call(null,G__217710,G__217711));
})();
var G__217607 = " (";
var G__217608 = (function (){var G__217712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217713 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217712,G__217713) : tailrecursion.hoplon.span.call(null,G__217712,G__217713));
})();
var G__217609 = (function (){var G__217714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217715 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217714,G__217715) : tailrecursion.hoplon.span.call(null,G__217714,G__217715));
})();
var G__217610 = " ";
var G__217611 = (function (){var G__217716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__217717 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217716,G__217717) : tailrecursion.hoplon.span.call(null,G__217716,G__217717));
})();
var G__217612 = ") (";
var G__217613 = (function (){var G__217718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__217719 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217718,G__217719) : tailrecursion.hoplon.span.call(null,G__217718,G__217719));
})();
var G__217614 = (function (){var G__217720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217721 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217720,G__217721) : tailrecursion.hoplon.span.call(null,G__217720,G__217721));
})();
var G__217615 = "))\n        ";
var G__217616 = (function (){var G__217722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217723 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217722,G__217723) : tailrecursion.hoplon.span.call(null,G__217722,G__217723));
})();
var G__217617 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$101 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$101(G__217517,G__217518,G__217519,G__217520,G__217521,G__217522,G__217523,G__217524,G__217525,G__217526,G__217527,G__217528,G__217529,G__217530,G__217531,G__217532,G__217533,G__217534,G__217535,G__217536,G__217537,G__217538,G__217539,G__217540,G__217541,G__217542,G__217543,G__217544,G__217545,G__217546,G__217547,G__217548,G__217549,G__217550,G__217551,G__217552,G__217553,G__217554,G__217555,G__217556,G__217557,G__217558,G__217559,G__217560,G__217561,G__217562,G__217563,G__217564,G__217565,G__217566,G__217567,G__217568,G__217569,G__217570,G__217571,G__217572,G__217573,G__217574,G__217575,G__217576,G__217577,G__217578,G__217579,G__217580,G__217581,G__217582,G__217583,G__217584,G__217585,G__217586,G__217587,G__217588,G__217589,G__217590,G__217591,G__217592,G__217593,G__217594,G__217595,G__217596,G__217597,G__217598,G__217599,G__217600,G__217601,G__217602,G__217603,G__217604,G__217605,G__217606,G__217607,G__217608,G__217609,G__217610,G__217611,G__217612,G__217613,G__217614,G__217615,G__217616,G__217617) : tailrecursion.hoplon.pre.call(null,G__217517,G__217518,G__217519,G__217520,G__217521,G__217522,G__217523,G__217524,G__217525,G__217526,G__217527,G__217528,G__217529,G__217530,G__217531,G__217532,G__217533,G__217534,G__217535,G__217536,G__217537,G__217538,G__217539,G__217540,G__217541,G__217542,G__217543,G__217544,G__217545,G__217546,G__217547,G__217548,G__217549,G__217550,G__217551,G__217552,G__217553,G__217554,G__217555,G__217556,G__217557,G__217558,G__217559,G__217560,G__217561,G__217562,G__217563,G__217564,G__217565,G__217566,G__217567,G__217568,G__217569,G__217570,G__217571,G__217572,G__217573,G__217574,G__217575,G__217576,G__217577,G__217578,G__217579,G__217580,G__217581,G__217582,G__217583,G__217584,G__217585,G__217586,G__217587,G__217588,G__217589,G__217590,G__217591,G__217592,G__217593,G__217594,G__217595,G__217596,G__217597,G__217598,G__217599,G__217600,G__217601,G__217602,G__217603,G__217604,G__217605,G__217606,G__217607,G__217608,G__217609,G__217610,G__217611,G__217612,G__217613,G__217614,G__217615,G__217616,G__217617));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__217515,G__217516) : tailrecursion.hoplon.div.call(null,G__217515,G__217516));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__217514) : tailrecursion.hoplon.div.call(null,G__217514));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217304;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217303;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217302;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217301;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_217724 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217725 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_217726 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217727 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__217728 = cljs.core.PersistentArrayMap.EMPTY;
var G__217729 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In case representing pairs as procedures wasn",(function (){var G__217730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__217731 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__217730,G__217731) : tailrecursion.hoplon.markdown.simple_node.call(null,G__217730,G__217731));
})(),"t mind-boggling enough, consider that, in a language that can manipulate procedures, we can get by without numbers (at least insofar as nonnegative integers are concerned) by implementing 0 and the operation of adding 1 as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__217728,G__217729) : tailrecursion.hoplon.markdown.para_node.call(null,G__217728,G__217729));
})(),(function (){var G__217806 = (function (){var G__217807 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__217808 = (function (){var G__217809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__217810 = "(";
var G__217811 = (function (){var G__217845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217846 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217845,G__217846) : tailrecursion.hoplon.span.call(null,G__217845,G__217846));
})();
var G__217812 = (function (){var G__217847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217848 = "zero";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217847,G__217848) : tailrecursion.hoplon.span.call(null,G__217847,G__217848));
})();
var G__217813 = " (";
var G__217814 = (function (){var G__217849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217850 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217849,G__217850) : tailrecursion.hoplon.span.call(null,G__217849,G__217850));
})();
var G__217815 = "[";
var G__217816 = (function (){var G__217851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217852 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217851,G__217852) : tailrecursion.hoplon.span.call(null,G__217851,G__217852));
})();
var G__217817 = "] (";
var G__217818 = (function (){var G__217853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217854 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217853,G__217854) : tailrecursion.hoplon.span.call(null,G__217853,G__217854));
})();
var G__217819 = "[";
var G__217820 = (function (){var G__217855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217856 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217855,G__217856) : tailrecursion.hoplon.span.call(null,G__217855,G__217856));
})();
var G__217821 = "] ";
var G__217822 = (function (){var G__217857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217858 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217857,G__217858) : tailrecursion.hoplon.span.call(null,G__217857,G__217858));
})();
var G__217823 = ")))\n(";
var G__217824 = (function (){var G__217859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217860 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217859,G__217860) : tailrecursion.hoplon.span.call(null,G__217859,G__217860));
})();
var G__217825 = (function (){var G__217861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217862 = "add-1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217861,G__217862) : tailrecursion.hoplon.span.call(null,G__217861,G__217862));
})();
var G__217826 = " [";
var G__217827 = (function (){var G__217863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217864 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217863,G__217864) : tailrecursion.hoplon.span.call(null,G__217863,G__217864));
})();
var G__217828 = "]\n  (";
var G__217829 = (function (){var G__217865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217866 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217865,G__217866) : tailrecursion.hoplon.span.call(null,G__217865,G__217866));
})();
var G__217830 = "[";
var G__217831 = (function (){var G__217867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217868 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217867,G__217868) : tailrecursion.hoplon.span.call(null,G__217867,G__217868));
})();
var G__217832 = "] (";
var G__217833 = (function (){var G__217869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__217870 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217869,G__217870) : tailrecursion.hoplon.span.call(null,G__217869,G__217870));
})();
var G__217834 = "[";
var G__217835 = (function (){var G__217871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217872 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217871,G__217872) : tailrecursion.hoplon.span.call(null,G__217871,G__217872));
})();
var G__217836 = "] (";
var G__217837 = (function (){var G__217873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217874 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217873,G__217874) : tailrecursion.hoplon.span.call(null,G__217873,G__217874));
})();
var G__217838 = " ((";
var G__217839 = (function (){var G__217875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__217876 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217875,G__217876) : tailrecursion.hoplon.span.call(null,G__217875,G__217876));
})();
var G__217840 = " ";
var G__217841 = (function (){var G__217877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217878 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217877,G__217878) : tailrecursion.hoplon.span.call(null,G__217877,G__217878));
})();
var G__217842 = ") ";
var G__217843 = (function (){var G__217879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__217880 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__217879,G__217880) : tailrecursion.hoplon.span.call(null,G__217879,G__217880));
})();
var G__217844 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__217809,G__217810,G__217811,G__217812,G__217813,G__217814,G__217815,G__217816,G__217817,G__217818,G__217819,G__217820,G__217821,G__217822,G__217823,G__217824,G__217825,G__217826,G__217827,G__217828,G__217829,G__217830,G__217831,G__217832,G__217833,G__217834,G__217835,G__217836,G__217837,G__217838,G__217839,G__217840,G__217841,G__217842,G__217843,G__217844) : tailrecursion.hoplon.pre.call(null,G__217809,G__217810,G__217811,G__217812,G__217813,G__217814,G__217815,G__217816,G__217817,G__217818,G__217819,G__217820,G__217821,G__217822,G__217823,G__217824,G__217825,G__217826,G__217827,G__217828,G__217829,G__217830,G__217831,G__217832,G__217833,G__217834,G__217835,G__217836,G__217837,G__217838,G__217839,G__217840,G__217841,G__217842,G__217843,G__217844));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__217807,G__217808) : tailrecursion.hoplon.div.call(null,G__217807,G__217808));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__217806) : tailrecursion.hoplon.div.call(null,G__217806));
})(),(function (){var G__217881 = cljs.core.PersistentArrayMap.EMPTY;
var G__217882 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This representation is known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Church numerals"], null)], 0)),", after its inventor, Alanzo Church, the logician who invented the \u03BB calculus."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__217881,G__217882) : tailrecursion.hoplon.markdown.para_node.call(null,G__217881,G__217882));
})(),(function (){var G__217883 = cljs.core.PersistentArrayMap.EMPTY;
var G__217884 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define ",(function (){var G__217885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"one"], null);
var G__217886 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217885,G__217886) : tailrecursion.hoplon.markdown.code_node.call(null,G__217885,G__217886));
})()," and ",(function (){var G__217887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"two"], null);
var G__217888 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217887,G__217888) : tailrecursion.hoplon.markdown.code_node.call(null,G__217887,G__217888));
})()," directly (not in terms of ",(function (){var G__217889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"zero"], null);
var G__217890 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217889,G__217890) : tailrecursion.hoplon.markdown.code_node.call(null,G__217889,G__217890));
})()," and ",(function (){var G__217891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-1"], null);
var G__217892 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217891,G__217892) : tailrecursion.hoplon.markdown.code_node.call(null,G__217891,G__217892));
})(),"). (Hint: Use substitution to evaluate ",(function (){var G__217893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(add-1 zero)"], null);
var G__217894 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217893,G__217894) : tailrecursion.hoplon.markdown.code_node.call(null,G__217893,G__217894));
})(),"). Give a direct definition of the addition procedure + (not in terms of repeated application of ",(function (){var G__217895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-1"], null);
var G__217896 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__217895,G__217896) : tailrecursion.hoplon.markdown.code_node.call(null,G__217895,G__217896));
})(),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__217883,G__217884) : tailrecursion.hoplon.markdown.para_node.call(null,G__217883,G__217884));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217727;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217726;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217725;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217724;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_217897 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217898 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_217899 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_217900 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__217971 = (function (){var G__217972 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__217973 = (function (){var G__217974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__217975 = "(";
var G__217976 = (function (){var G__218008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218009 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218008,G__218009) : tailrecursion.hoplon.span.call(null,G__218008,G__218009));
})();
var G__217977 = (function (){var G__218010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218011 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218010,G__218011) : tailrecursion.hoplon.span.call(null,G__218010,G__218011));
})();
var G__217978 = "\n  (";
var G__217979 = (function (){var G__218012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218013 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218012,G__218013) : tailrecursion.hoplon.span.call(null,G__218012,G__218013));
})();
var G__217980 = "[";
var G__217981 = (function (){var G__218014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218015 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218014,G__218015) : tailrecursion.hoplon.span.call(null,G__218014,G__218015));
})();
var G__217982 = "] (";
var G__217983 = (function (){var G__218016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218017 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218016,G__218017) : tailrecursion.hoplon.span.call(null,G__218016,G__218017));
})();
var G__217984 = "[";
var G__217985 = (function (){var G__218018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218019 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218018,G__218019) : tailrecursion.hoplon.span.call(null,G__218018,G__218019));
})();
var G__217986 = "] (";
var G__217987 = (function (){var G__218020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218021 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218020,G__218021) : tailrecursion.hoplon.span.call(null,G__218020,G__218021));
})();
var G__217988 = " ";
var G__217989 = (function (){var G__218022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218023 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218022,G__218023) : tailrecursion.hoplon.span.call(null,G__218022,G__218023));
})();
var G__217990 = "))))\n(";
var G__217991 = (function (){var G__218024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218025 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218024,G__218025) : tailrecursion.hoplon.span.call(null,G__218024,G__218025));
})();
var G__217992 = (function (){var G__218026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218027 = "two";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218026,G__218027) : tailrecursion.hoplon.span.call(null,G__218026,G__218027));
})();
var G__217993 = "\n  (";
var G__217994 = (function (){var G__218028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218029 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218028,G__218029) : tailrecursion.hoplon.span.call(null,G__218028,G__218029));
})();
var G__217995 = "[";
var G__217996 = (function (){var G__218030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218031 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218030,G__218031) : tailrecursion.hoplon.span.call(null,G__218030,G__218031));
})();
var G__217997 = "] (";
var G__217998 = (function (){var G__218032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218033 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218032,G__218033) : tailrecursion.hoplon.span.call(null,G__218032,G__218033));
})();
var G__217999 = "[";
var G__218000 = (function (){var G__218034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218035 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218034,G__218035) : tailrecursion.hoplon.span.call(null,G__218034,G__218035));
})();
var G__218001 = "] (";
var G__218002 = (function (){var G__218036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218037 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218036,G__218037) : tailrecursion.hoplon.span.call(null,G__218036,G__218037));
})();
var G__218003 = " (";
var G__218004 = (function (){var G__218038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218039 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218038,G__218039) : tailrecursion.hoplon.span.call(null,G__218038,G__218039));
})();
var G__218005 = " ";
var G__218006 = (function (){var G__218040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218041 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218040,G__218041) : tailrecursion.hoplon.span.call(null,G__218040,G__218041));
})();
var G__218007 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34(G__217974,G__217975,G__217976,G__217977,G__217978,G__217979,G__217980,G__217981,G__217982,G__217983,G__217984,G__217985,G__217986,G__217987,G__217988,G__217989,G__217990,G__217991,G__217992,G__217993,G__217994,G__217995,G__217996,G__217997,G__217998,G__217999,G__218000,G__218001,G__218002,G__218003,G__218004,G__218005,G__218006,G__218007) : tailrecursion.hoplon.pre.call(null,G__217974,G__217975,G__217976,G__217977,G__217978,G__217979,G__217980,G__217981,G__217982,G__217983,G__217984,G__217985,G__217986,G__217987,G__217988,G__217989,G__217990,G__217991,G__217992,G__217993,G__217994,G__217995,G__217996,G__217997,G__217998,G__217999,G__218000,G__218001,G__218002,G__218003,G__218004,G__218005,G__218006,G__218007));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__217972,G__217973) : tailrecursion.hoplon.div.call(null,G__217972,G__217973));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__217971) : tailrecursion.hoplon.div.call(null,G__217971));
})(),(function (){var G__218042 = cljs.core.PersistentArrayMap.EMPTY;
var G__218043 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for addition, first let",(function (){var G__218044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__218045 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__218044,G__218045) : tailrecursion.hoplon.markdown.simple_node.call(null,G__218044,G__218045));
})(),"s build up a some functions to make this easier to reason about."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218042,G__218043) : tailrecursion.hoplon.markdown.para_node.call(null,G__218042,G__218043));
})(),(function (){var G__218085 = (function (){var G__218086 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__218087 = (function (){var G__218088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__218089 = "(";
var G__218090 = (function (){var G__218107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218108 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218107,G__218108) : tailrecursion.hoplon.span.call(null,G__218107,G__218108));
})();
var G__218091 = (function (){var G__218109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218110 = "compose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218109,G__218110) : tailrecursion.hoplon.span.call(null,G__218109,G__218110));
})();
var G__218092 = " [";
var G__218093 = (function (){var G__218111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218112 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218111,G__218112) : tailrecursion.hoplon.span.call(null,G__218111,G__218112));
})();
var G__218094 = " ";
var G__218095 = (function (){var G__218113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218114 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218113,G__218114) : tailrecursion.hoplon.span.call(null,G__218113,G__218114));
})();
var G__218096 = "]\n  (";
var G__218097 = (function (){var G__218115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218116 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218115,G__218116) : tailrecursion.hoplon.span.call(null,G__218115,G__218116));
})();
var G__218098 = "[";
var G__218099 = (function (){var G__218117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218118 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218117,G__218118) : tailrecursion.hoplon.span.call(null,G__218117,G__218118));
})();
var G__218100 = "] (";
var G__218101 = (function (){var G__218119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218120 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218119,G__218120) : tailrecursion.hoplon.span.call(null,G__218119,G__218120));
})();
var G__218102 = " (";
var G__218103 = (function (){var G__218121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218122 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218121,G__218122) : tailrecursion.hoplon.span.call(null,G__218121,G__218122));
})();
var G__218104 = " ";
var G__218105 = (function (){var G__218123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218124 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218123,G__218124) : tailrecursion.hoplon.span.call(null,G__218123,G__218124));
})();
var G__218106 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__218088,G__218089,G__218090,G__218091,G__218092,G__218093,G__218094,G__218095,G__218096,G__218097,G__218098,G__218099,G__218100,G__218101,G__218102,G__218103,G__218104,G__218105,G__218106) : tailrecursion.hoplon.pre.call(null,G__218088,G__218089,G__218090,G__218091,G__218092,G__218093,G__218094,G__218095,G__218096,G__218097,G__218098,G__218099,G__218100,G__218101,G__218102,G__218103,G__218104,G__218105,G__218106));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__218086,G__218087) : tailrecursion.hoplon.div.call(null,G__218086,G__218087));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__218085) : tailrecursion.hoplon.div.call(null,G__218085));
})(),(function (){var G__218125 = cljs.core.PersistentArrayMap.EMPTY;
var G__218126 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With that, we can now define"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218125,G__218126) : tailrecursion.hoplon.markdown.para_node.call(null,G__218125,G__218126));
})(),(function (){var G__218174 = (function (){var G__218175 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__218176 = (function (){var G__218177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__218178 = "(";
var G__218179 = (function (){var G__218200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218201 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218200,G__218201) : tailrecursion.hoplon.span.call(null,G__218200,G__218201));
})();
var G__218180 = (function (){var G__218202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218203 = "add";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218202,G__218203) : tailrecursion.hoplon.span.call(null,G__218202,G__218203));
})();
var G__218181 = " [";
var G__218182 = (function (){var G__218204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218205 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218204,G__218205) : tailrecursion.hoplon.span.call(null,G__218204,G__218205));
})();
var G__218183 = " ";
var G__218184 = (function (){var G__218206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218207 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218206,G__218207) : tailrecursion.hoplon.span.call(null,G__218206,G__218207));
})();
var G__218185 = "]\n  (";
var G__218186 = (function (){var G__218208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218209 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218208,G__218209) : tailrecursion.hoplon.span.call(null,G__218208,G__218209));
})();
var G__218187 = "[";
var G__218188 = (function (){var G__218210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218211 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218210,G__218211) : tailrecursion.hoplon.span.call(null,G__218210,G__218211));
})();
var G__218189 = "]\n    (";
var G__218190 = (function (){var G__218212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218213 = "compose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218212,G__218213) : tailrecursion.hoplon.span.call(null,G__218212,G__218213));
})();
var G__218191 = " (";
var G__218192 = (function (){var G__218214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218215 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218214,G__218215) : tailrecursion.hoplon.span.call(null,G__218214,G__218215));
})();
var G__218193 = " ";
var G__218194 = (function (){var G__218216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218217 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218216,G__218217) : tailrecursion.hoplon.span.call(null,G__218216,G__218217));
})();
var G__218195 = ") (";
var G__218196 = (function (){var G__218218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218219 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218218,G__218219) : tailrecursion.hoplon.span.call(null,G__218218,G__218219));
})();
var G__218197 = " ";
var G__218198 = (function (){var G__218220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218221 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218220,G__218221) : tailrecursion.hoplon.span.call(null,G__218220,G__218221));
})();
var G__218199 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__218177,G__218178,G__218179,G__218180,G__218181,G__218182,G__218183,G__218184,G__218185,G__218186,G__218187,G__218188,G__218189,G__218190,G__218191,G__218192,G__218193,G__218194,G__218195,G__218196,G__218197,G__218198,G__218199) : tailrecursion.hoplon.pre.call(null,G__218177,G__218178,G__218179,G__218180,G__218181,G__218182,G__218183,G__218184,G__218185,G__218186,G__218187,G__218188,G__218189,G__218190,G__218191,G__218192,G__218193,G__218194,G__218195,G__218196,G__218197,G__218198,G__218199));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__218175,G__218176) : tailrecursion.hoplon.div.call(null,G__218175,G__218176));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__218174) : tailrecursion.hoplon.div.call(null,G__218174));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217900;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217899;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_217898;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_217897;
}})()], 0))], 0))], 0));
var G__212326 = "";
var G__212327 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Extended Exercise: Interval Arithmetic"], null),(function (){var _STAR_references_STAR_218222 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_218223 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_218224 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_218225 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__218226 = cljs.core.PersistentArrayMap.EMPTY;
var G__218227 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa P. Hacker is designing a system to help people solve engineering problems. One feature she wants to provide in her system is the ability to manipulate inexact quantities (such as measured parameters of physical devices) with known precision, so that when computations are done with such approximate quantities the results will be numbers of known precision."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218226,G__218227) : tailrecursion.hoplon.markdown.para_node.call(null,G__218226,G__218227));
})(),(function (){var G__218228 = cljs.core.PersistentArrayMap.EMPTY;
var G__218229 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Electrical engineers will be using Alyssa",(function (){var G__218230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__218231 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__218230,G__218231) : tailrecursion.hoplon.markdown.simple_node.call(null,G__218230,G__218231));
})(),"s system to compute electrical quantities. It is sometimes necessary for them to compute the value of a parallel equivalent resistance \\(R_p\\) of two resistors \\(R_1\\) and \\(R_2\\) using the formula"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218228,G__218229) : tailrecursion.hoplon.markdown.para_node.call(null,G__218228,G__218229));
})(),(function (){var G__218232 = cljs.core.PersistentArrayMap.EMPTY;
var G__218233 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$R_p=\\frac{1}{1/R_1+1/R_2}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218232,G__218233) : tailrecursion.hoplon.markdown.para_node.call(null,G__218232,G__218233));
})(),(function (){var G__218234 = cljs.core.PersistentArrayMap.EMPTY;
var G__218235 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Resistance values are usually known only up to some tolerance guaranteed by the manufacturer of the resistor. For example, if you buy a resistor labeled ",(function (){var G__218236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__218237 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["6.8 ohms with 10% tolerance"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__218236,G__218237) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__218236,G__218237));
})()," you can only be sure that the resistor has a resistance between 6.8 - 0.68 = 6.12 and 6.8 + 0.68 = 7.48 ohms. Thus, if you have a 6.8-ohm 10% resistor in parallel with a 4.7-ohm 5% resistor, the resistance of the combination can range from about 2.58 ohms (if the two resistors are at the lower bounds) to about 2.97 ohms (if the two resistors are at the upper bounds)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218234,G__218235) : tailrecursion.hoplon.markdown.para_node.call(null,G__218234,G__218235));
})(),(function (){var G__218238 = cljs.core.PersistentArrayMap.EMPTY;
var G__218239 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa",(function (){var G__218240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__218241 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__218240,G__218241) : tailrecursion.hoplon.markdown.simple_node.call(null,G__218240,G__218241));
})(),"s idea is to implement ",(function (){var G__218242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__218243 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["interval arithmetic"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__218242,G__218243) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__218242,G__218243));
})()," as a set of arithmetic operations for combining ",(function (){var G__218244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__218245 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["intervals"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__218244,G__218245) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__218244,G__218245));
})()," (objects that represent the range of possible values of an inexact quantity). The result of adding, subtracting, multiplying, or dividing two intervals is itself an interval, representing the range of the result."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218238,G__218239) : tailrecursion.hoplon.markdown.para_node.call(null,G__218238,G__218239));
})(),(function (){var G__218246 = cljs.core.PersistentArrayMap.EMPTY;
var G__218247 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa postulates the existence of an abstract object called an ",(function (){var G__218248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__218249 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["interval"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__218248,G__218249) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__218248,G__218249));
})()," that has two endpoints: a lower bound and an upper bound. She also presumes that, given the endpoints of an interval, she can construct the interval using the data constructor ",(function (){var G__218250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-interval"], null);
var G__218251 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__218250,G__218251) : tailrecursion.hoplon.markdown.code_node.call(null,G__218250,G__218251));
})(),". Alyssa first writes a procedure for adding two intervals. She reasons that the minimum value the sum could be is the sum of the two lower bounds and the maximum value it could be is the sum of the two upper bounds:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218246,G__218247) : tailrecursion.hoplon.markdown.para_node.call(null,G__218246,G__218247));
})(),(function (){var G__218315 = (function (){var G__218316 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__218317 = (function (){var G__218318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__218319 = "(";
var G__218320 = (function (){var G__218349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218350 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218349,G__218350) : tailrecursion.hoplon.span.call(null,G__218349,G__218350));
})();
var G__218321 = (function (){var G__218351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218352 = "add-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218351,G__218352) : tailrecursion.hoplon.span.call(null,G__218351,G__218352));
})();
var G__218322 = " [";
var G__218323 = (function (){var G__218353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218354 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218353,G__218354) : tailrecursion.hoplon.span.call(null,G__218353,G__218354));
})();
var G__218324 = " ";
var G__218325 = (function (){var G__218355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218356 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218355,G__218356) : tailrecursion.hoplon.span.call(null,G__218355,G__218356));
})();
var G__218326 = "]\n  (";
var G__218327 = (function (){var G__218357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218358 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218357,G__218358) : tailrecursion.hoplon.span.call(null,G__218357,G__218358));
})();
var G__218328 = " (";
var G__218329 = (function (){var G__218359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218360 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218359,G__218360) : tailrecursion.hoplon.span.call(null,G__218359,G__218360));
})();
var G__218330 = "(";
var G__218331 = (function (){var G__218361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218362 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218361,G__218362) : tailrecursion.hoplon.span.call(null,G__218361,G__218362));
})();
var G__218332 = " ";
var G__218333 = (function (){var G__218363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218364 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218363,G__218364) : tailrecursion.hoplon.span.call(null,G__218363,G__218364));
})();
var G__218334 = ") (";
var G__218335 = (function (){var G__218365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218366 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218365,G__218366) : tailrecursion.hoplon.span.call(null,G__218365,G__218366));
})();
var G__218336 = " ";
var G__218337 = (function (){var G__218367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218368 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218367,G__218368) : tailrecursion.hoplon.span.call(null,G__218367,G__218368));
})();
var G__218338 = "))\n                 (";
var G__218339 = (function (){var G__218369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218370 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218369,G__218370) : tailrecursion.hoplon.span.call(null,G__218369,G__218370));
})();
var G__218340 = "(";
var G__218341 = (function (){var G__218371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218372 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218371,G__218372) : tailrecursion.hoplon.span.call(null,G__218371,G__218372));
})();
var G__218342 = " ";
var G__218343 = (function (){var G__218373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218374 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218373,G__218374) : tailrecursion.hoplon.span.call(null,G__218373,G__218374));
})();
var G__218344 = ") (";
var G__218345 = (function (){var G__218375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218376 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218375,G__218376) : tailrecursion.hoplon.span.call(null,G__218375,G__218376));
})();
var G__218346 = " ";
var G__218347 = (function (){var G__218377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218378 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218377,G__218378) : tailrecursion.hoplon.span.call(null,G__218377,G__218378));
})();
var G__218348 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__218318,G__218319,G__218320,G__218321,G__218322,G__218323,G__218324,G__218325,G__218326,G__218327,G__218328,G__218329,G__218330,G__218331,G__218332,G__218333,G__218334,G__218335,G__218336,G__218337,G__218338,G__218339,G__218340,G__218341,G__218342,G__218343,G__218344,G__218345,G__218346,G__218347,G__218348) : tailrecursion.hoplon.pre.call(null,G__218318,G__218319,G__218320,G__218321,G__218322,G__218323,G__218324,G__218325,G__218326,G__218327,G__218328,G__218329,G__218330,G__218331,G__218332,G__218333,G__218334,G__218335,G__218336,G__218337,G__218338,G__218339,G__218340,G__218341,G__218342,G__218343,G__218344,G__218345,G__218346,G__218347,G__218348));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__218316,G__218317) : tailrecursion.hoplon.div.call(null,G__218316,G__218317));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__218315) : tailrecursion.hoplon.div.call(null,G__218315));
})(),(function (){var G__218379 = cljs.core.PersistentArrayMap.EMPTY;
var G__218380 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa also works out the product of two intervals by finding the minimum and the maximum of the products of the bounds and using them as bounds of the resulting interval. (",(function (){var G__218381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"min"], null);
var G__218382 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__218381,G__218382) : tailrecursion.hoplon.markdown.code_node.call(null,G__218381,G__218382));
})()," and ",(function (){var G__218383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"max"], null);
var G__218384 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__218383,G__218384) : tailrecursion.hoplon.markdown.code_node.call(null,G__218383,G__218384));
})()," are primitives that find the minimum and maximum of any number of arguments.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218379,G__218380) : tailrecursion.hoplon.markdown.para_node.call(null,G__218379,G__218380));
})(),(function (){var G__218546 = (function (){var G__218547 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__218548 = (function (){var G__218549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__218550 = "(";
var G__218551 = (function (){var G__218628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218629 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218628,G__218629) : tailrecursion.hoplon.span.call(null,G__218628,G__218629));
})();
var G__218552 = (function (){var G__218630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218631 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218630,G__218631) : tailrecursion.hoplon.span.call(null,G__218630,G__218631));
})();
var G__218553 = " [";
var G__218554 = (function (){var G__218632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218633 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218632,G__218633) : tailrecursion.hoplon.span.call(null,G__218632,G__218633));
})();
var G__218555 = " ";
var G__218556 = (function (){var G__218634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218635 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218634,G__218635) : tailrecursion.hoplon.span.call(null,G__218634,G__218635));
})();
var G__218557 = "]\n  (";
var G__218558 = (function (){var G__218636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218637 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218636,G__218637) : tailrecursion.hoplon.span.call(null,G__218636,G__218637));
})();
var G__218559 = "[";
var G__218560 = (function (){var G__218638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218639 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218638,G__218639) : tailrecursion.hoplon.span.call(null,G__218638,G__218639));
})();
var G__218561 = " (";
var G__218562 = (function (){var G__218640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218641 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218640,G__218641) : tailrecursion.hoplon.span.call(null,G__218640,G__218641));
})();
var G__218563 = "(";
var G__218564 = (function (){var G__218642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218643 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218642,G__218643) : tailrecursion.hoplon.span.call(null,G__218642,G__218643));
})();
var G__218565 = " ";
var G__218566 = (function (){var G__218644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218645 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218644,G__218645) : tailrecursion.hoplon.span.call(null,G__218644,G__218645));
})();
var G__218567 = ") (";
var G__218568 = (function (){var G__218646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218647 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218646,G__218647) : tailrecursion.hoplon.span.call(null,G__218646,G__218647));
})();
var G__218569 = " ";
var G__218570 = (function (){var G__218648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218649 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218648,G__218649) : tailrecursion.hoplon.span.call(null,G__218648,G__218649));
})();
var G__218571 = "))\n        ";
var G__218572 = (function (){var G__218650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218651 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218650,G__218651) : tailrecursion.hoplon.span.call(null,G__218650,G__218651));
})();
var G__218573 = " (";
var G__218574 = (function (){var G__218652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218653 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218652,G__218653) : tailrecursion.hoplon.span.call(null,G__218652,G__218653));
})();
var G__218575 = "(";
var G__218576 = (function (){var G__218654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218655 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218654,G__218655) : tailrecursion.hoplon.span.call(null,G__218654,G__218655));
})();
var G__218577 = " ";
var G__218578 = (function (){var G__218656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218657 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218656,G__218657) : tailrecursion.hoplon.span.call(null,G__218656,G__218657));
})();
var G__218579 = ") (";
var G__218580 = (function (){var G__218658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218659 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218658,G__218659) : tailrecursion.hoplon.span.call(null,G__218658,G__218659));
})();
var G__218581 = " ";
var G__218582 = (function (){var G__218660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218661 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218660,G__218661) : tailrecursion.hoplon.span.call(null,G__218660,G__218661));
})();
var G__218583 = "))\n        ";
var G__218584 = (function (){var G__218662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218663 = "p3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218662,G__218663) : tailrecursion.hoplon.span.call(null,G__218662,G__218663));
})();
var G__218585 = " (";
var G__218586 = (function (){var G__218664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218665 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218664,G__218665) : tailrecursion.hoplon.span.call(null,G__218664,G__218665));
})();
var G__218587 = "(";
var G__218588 = (function (){var G__218666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218667 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218666,G__218667) : tailrecursion.hoplon.span.call(null,G__218666,G__218667));
})();
var G__218589 = " ";
var G__218590 = (function (){var G__218668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218669 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218668,G__218669) : tailrecursion.hoplon.span.call(null,G__218668,G__218669));
})();
var G__218591 = ") (";
var G__218592 = (function (){var G__218670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218671 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218670,G__218671) : tailrecursion.hoplon.span.call(null,G__218670,G__218671));
})();
var G__218593 = " ";
var G__218594 = (function (){var G__218672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218673 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218672,G__218673) : tailrecursion.hoplon.span.call(null,G__218672,G__218673));
})();
var G__218595 = "))\n        ";
var G__218596 = (function (){var G__218674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218675 = "p4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218674,G__218675) : tailrecursion.hoplon.span.call(null,G__218674,G__218675));
})();
var G__218597 = " (";
var G__218598 = (function (){var G__218676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218677 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218676,G__218677) : tailrecursion.hoplon.span.call(null,G__218676,G__218677));
})();
var G__218599 = "(";
var G__218600 = (function (){var G__218678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218679 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218678,G__218679) : tailrecursion.hoplon.span.call(null,G__218678,G__218679));
})();
var G__218601 = " ";
var G__218602 = (function (){var G__218680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218681 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218680,G__218681) : tailrecursion.hoplon.span.call(null,G__218680,G__218681));
})();
var G__218603 = ") (";
var G__218604 = (function (){var G__218682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218683 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218682,G__218683) : tailrecursion.hoplon.span.call(null,G__218682,G__218683));
})();
var G__218605 = " ";
var G__218606 = (function (){var G__218684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218685 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218684,G__218685) : tailrecursion.hoplon.span.call(null,G__218684,G__218685));
})();
var G__218607 = "))]\n    (";
var G__218608 = (function (){var G__218686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218687 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218686,G__218687) : tailrecursion.hoplon.span.call(null,G__218686,G__218687));
})();
var G__218609 = " (";
var G__218610 = (function (){var G__218688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218689 = "min ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218688,G__218689) : tailrecursion.hoplon.span.call(null,G__218688,G__218689));
})();
var G__218611 = (function (){var G__218690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218691 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218690,G__218691) : tailrecursion.hoplon.span.call(null,G__218690,G__218691));
})();
var G__218612 = " ";
var G__218613 = (function (){var G__218692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218693 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218692,G__218693) : tailrecursion.hoplon.span.call(null,G__218692,G__218693));
})();
var G__218614 = " ";
var G__218615 = (function (){var G__218694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218695 = "p3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218694,G__218695) : tailrecursion.hoplon.span.call(null,G__218694,G__218695));
})();
var G__218616 = " ";
var G__218617 = (function (){var G__218696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218697 = "p4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218696,G__218697) : tailrecursion.hoplon.span.call(null,G__218696,G__218697));
})();
var G__218618 = ")\n                   (";
var G__218619 = (function (){var G__218698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218699 = "max ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218698,G__218699) : tailrecursion.hoplon.span.call(null,G__218698,G__218699));
})();
var G__218620 = (function (){var G__218700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218701 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218700,G__218701) : tailrecursion.hoplon.span.call(null,G__218700,G__218701));
})();
var G__218621 = " ";
var G__218622 = (function (){var G__218702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218703 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218702,G__218703) : tailrecursion.hoplon.span.call(null,G__218702,G__218703));
})();
var G__218623 = " ";
var G__218624 = (function (){var G__218704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218705 = "p3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218704,G__218705) : tailrecursion.hoplon.span.call(null,G__218704,G__218705));
})();
var G__218625 = " ";
var G__218626 = (function (){var G__218706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218707 = "p4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218706,G__218707) : tailrecursion.hoplon.span.call(null,G__218706,G__218707));
})();
var G__218627 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$79 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$79(G__218549,G__218550,G__218551,G__218552,G__218553,G__218554,G__218555,G__218556,G__218557,G__218558,G__218559,G__218560,G__218561,G__218562,G__218563,G__218564,G__218565,G__218566,G__218567,G__218568,G__218569,G__218570,G__218571,G__218572,G__218573,G__218574,G__218575,G__218576,G__218577,G__218578,G__218579,G__218580,G__218581,G__218582,G__218583,G__218584,G__218585,G__218586,G__218587,G__218588,G__218589,G__218590,G__218591,G__218592,G__218593,G__218594,G__218595,G__218596,G__218597,G__218598,G__218599,G__218600,G__218601,G__218602,G__218603,G__218604,G__218605,G__218606,G__218607,G__218608,G__218609,G__218610,G__218611,G__218612,G__218613,G__218614,G__218615,G__218616,G__218617,G__218618,G__218619,G__218620,G__218621,G__218622,G__218623,G__218624,G__218625,G__218626,G__218627) : tailrecursion.hoplon.pre.call(null,G__218549,G__218550,G__218551,G__218552,G__218553,G__218554,G__218555,G__218556,G__218557,G__218558,G__218559,G__218560,G__218561,G__218562,G__218563,G__218564,G__218565,G__218566,G__218567,G__218568,G__218569,G__218570,G__218571,G__218572,G__218573,G__218574,G__218575,G__218576,G__218577,G__218578,G__218579,G__218580,G__218581,G__218582,G__218583,G__218584,G__218585,G__218586,G__218587,G__218588,G__218589,G__218590,G__218591,G__218592,G__218593,G__218594,G__218595,G__218596,G__218597,G__218598,G__218599,G__218600,G__218601,G__218602,G__218603,G__218604,G__218605,G__218606,G__218607,G__218608,G__218609,G__218610,G__218611,G__218612,G__218613,G__218614,G__218615,G__218616,G__218617,G__218618,G__218619,G__218620,G__218621,G__218622,G__218623,G__218624,G__218625,G__218626,G__218627));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__218547,G__218548) : tailrecursion.hoplon.div.call(null,G__218547,G__218548));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__218546) : tailrecursion.hoplon.div.call(null,G__218546));
})(),(function (){var G__218708 = cljs.core.PersistentArrayMap.EMPTY;
var G__218709 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To divide two intervals, Alyssa multiplies the first by the reciprocal of the second. Note that the bounds of the reciprocal interval are the reciprocal of the upper-bound and the reciprocal of the lower-bound, in that order."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218708,G__218709) : tailrecursion.hoplon.markdown.para_node.call(null,G__218708,G__218709));
})(),(function (){var G__218771 = (function (){var G__218772 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__218773 = (function (){var G__218774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__218775 = "(";
var G__218776 = (function (){var G__218803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218804 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218803,G__218804) : tailrecursion.hoplon.span.call(null,G__218803,G__218804));
})();
var G__218777 = (function (){var G__218805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218806 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218805,G__218806) : tailrecursion.hoplon.span.call(null,G__218805,G__218806));
})();
var G__218778 = " [";
var G__218779 = (function (){var G__218807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218808 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218807,G__218808) : tailrecursion.hoplon.span.call(null,G__218807,G__218808));
})();
var G__218780 = " ";
var G__218781 = (function (){var G__218809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218810 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218809,G__218810) : tailrecursion.hoplon.span.call(null,G__218809,G__218810));
})();
var G__218782 = "]\n  (";
var G__218783 = (function (){var G__218811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218812 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218811,G__218812) : tailrecursion.hoplon.span.call(null,G__218811,G__218812));
})();
var G__218784 = " ";
var G__218785 = (function (){var G__218813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218814 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218813,G__218814) : tailrecursion.hoplon.span.call(null,G__218813,G__218814));
})();
var G__218786 = "\n                (";
var G__218787 = (function (){var G__218815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218816 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218815,G__218816) : tailrecursion.hoplon.span.call(null,G__218815,G__218816));
})();
var G__218788 = " (";
var G__218789 = (function (){var G__218817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218818 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218817,G__218818) : tailrecursion.hoplon.span.call(null,G__218817,G__218818));
})();
var G__218790 = (function (){var G__218819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__218820 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218819,G__218820) : tailrecursion.hoplon.span.call(null,G__218819,G__218820));
})();
var G__218791 = " (";
var G__218792 = (function (){var G__218821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218822 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218821,G__218822) : tailrecursion.hoplon.span.call(null,G__218821,G__218822));
})();
var G__218793 = " ";
var G__218794 = (function (){var G__218823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218824 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218823,G__218824) : tailrecursion.hoplon.span.call(null,G__218823,G__218824));
})();
var G__218795 = "))\n                               (";
var G__218796 = (function (){var G__218825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218826 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218825,G__218826) : tailrecursion.hoplon.span.call(null,G__218825,G__218826));
})();
var G__218797 = (function (){var G__218827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__218828 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218827,G__218828) : tailrecursion.hoplon.span.call(null,G__218827,G__218828));
})();
var G__218798 = " (";
var G__218799 = (function (){var G__218829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__218830 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218829,G__218830) : tailrecursion.hoplon.span.call(null,G__218829,G__218830));
})();
var G__218800 = " ";
var G__218801 = (function (){var G__218831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218832 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218831,G__218832) : tailrecursion.hoplon.span.call(null,G__218831,G__218832));
})();
var G__218802 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29(G__218774,G__218775,G__218776,G__218777,G__218778,G__218779,G__218780,G__218781,G__218782,G__218783,G__218784,G__218785,G__218786,G__218787,G__218788,G__218789,G__218790,G__218791,G__218792,G__218793,G__218794,G__218795,G__218796,G__218797,G__218798,G__218799,G__218800,G__218801,G__218802) : tailrecursion.hoplon.pre.call(null,G__218774,G__218775,G__218776,G__218777,G__218778,G__218779,G__218780,G__218781,G__218782,G__218783,G__218784,G__218785,G__218786,G__218787,G__218788,G__218789,G__218790,G__218791,G__218792,G__218793,G__218794,G__218795,G__218796,G__218797,G__218798,G__218799,G__218800,G__218801,G__218802));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__218772,G__218773) : tailrecursion.hoplon.div.call(null,G__218772,G__218773));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__218771) : tailrecursion.hoplon.div.call(null,G__218771));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_218225;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_218224;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_218223;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_218222;
}})()], 0));
var G__212328 = "";
var G__212329 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_218833 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_218834 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_218835 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_218836 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__218837 = cljs.core.PersistentArrayMap.EMPTY;
var G__218838 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa",(function (){var G__218839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__218840 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__218839,G__218840) : tailrecursion.hoplon.markdown.simple_node.call(null,G__218839,G__218840));
})(),"s program is incomplete because she has not specified the implementation of the interval abstraction. Here is a definition of the interval constructor:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218837,G__218838) : tailrecursion.hoplon.markdown.para_node.call(null,G__218837,G__218838));
})(),(function (){var G__218871 = (function (){var G__218872 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__218873 = (function (){var G__218874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__218875 = "(";
var G__218876 = (function (){var G__218888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218889 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218888,G__218889) : tailrecursion.hoplon.span.call(null,G__218888,G__218889));
})();
var G__218877 = (function (){var G__218890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218891 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218890,G__218891) : tailrecursion.hoplon.span.call(null,G__218890,G__218891));
})();
var G__218878 = " [";
var G__218879 = (function (){var G__218892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218893 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218892,G__218893) : tailrecursion.hoplon.span.call(null,G__218892,G__218893));
})();
var G__218880 = " ";
var G__218881 = (function (){var G__218894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218895 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218894,G__218895) : tailrecursion.hoplon.span.call(null,G__218894,G__218895));
})();
var G__218882 = "]\n  (";
var G__218883 = (function (){var G__218896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218897 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218896,G__218897) : tailrecursion.hoplon.span.call(null,G__218896,G__218897));
})();
var G__218884 = (function (){var G__218898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218899 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218898,G__218899) : tailrecursion.hoplon.span.call(null,G__218898,G__218899));
})();
var G__218885 = " ";
var G__218886 = (function (){var G__218900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218901 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218900,G__218901) : tailrecursion.hoplon.span.call(null,G__218900,G__218901));
})();
var G__218887 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__218874,G__218875,G__218876,G__218877,G__218878,G__218879,G__218880,G__218881,G__218882,G__218883,G__218884,G__218885,G__218886,G__218887) : tailrecursion.hoplon.pre.call(null,G__218874,G__218875,G__218876,G__218877,G__218878,G__218879,G__218880,G__218881,G__218882,G__218883,G__218884,G__218885,G__218886,G__218887));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__218872,G__218873) : tailrecursion.hoplon.div.call(null,G__218872,G__218873));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__218871) : tailrecursion.hoplon.div.call(null,G__218871));
})(),(function (){var G__218902 = cljs.core.PersistentArrayMap.EMPTY;
var G__218903 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define selectors ",(function (){var G__218904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"upper-bound"], null);
var G__218905 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__218904,G__218905) : tailrecursion.hoplon.markdown.code_node.call(null,G__218904,G__218905));
})()," and ",(function (){var G__218906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"lower-bound"], null);
var G__218907 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__218906,G__218907) : tailrecursion.hoplon.markdown.code_node.call(null,G__218906,G__218907));
})()," to complete the implementation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218902,G__218903) : tailrecursion.hoplon.markdown.para_node.call(null,G__218902,G__218903));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_218836;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_218835;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_218834;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_218833;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_218908 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_218909 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_218910 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_218911 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__218952 = (function (){var G__218953 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__218954 = (function (){var G__218955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__218956 = "(";
var G__218957 = (function (){var G__218973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218974 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218973,G__218974) : tailrecursion.hoplon.span.call(null,G__218973,G__218974));
})();
var G__218958 = (function (){var G__218975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218976 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218975,G__218976) : tailrecursion.hoplon.span.call(null,G__218975,G__218976));
})();
var G__218959 = " [";
var G__218960 = (function (){var G__218977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218978 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218977,G__218978) : tailrecursion.hoplon.span.call(null,G__218977,G__218978));
})();
var G__218961 = "]\n  (";
var G__218962 = (function (){var G__218979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218980 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218979,G__218980) : tailrecursion.hoplon.span.call(null,G__218979,G__218980));
})();
var G__218963 = (function (){var G__218981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218982 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218981,G__218982) : tailrecursion.hoplon.span.call(null,G__218981,G__218982));
})();
var G__218964 = "))\n(";
var G__218965 = (function (){var G__218983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__218984 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218983,G__218984) : tailrecursion.hoplon.span.call(null,G__218983,G__218984));
})();
var G__218966 = (function (){var G__218985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218986 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218985,G__218986) : tailrecursion.hoplon.span.call(null,G__218985,G__218986));
})();
var G__218967 = " [";
var G__218968 = (function (){var G__218987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218988 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218987,G__218988) : tailrecursion.hoplon.span.call(null,G__218987,G__218988));
})();
var G__218969 = "]\n  (";
var G__218970 = (function (){var G__218989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__218990 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218989,G__218990) : tailrecursion.hoplon.span.call(null,G__218989,G__218990));
})();
var G__218971 = (function (){var G__218991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__218992 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__218991,G__218992) : tailrecursion.hoplon.span.call(null,G__218991,G__218992));
})();
var G__218972 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__218955,G__218956,G__218957,G__218958,G__218959,G__218960,G__218961,G__218962,G__218963,G__218964,G__218965,G__218966,G__218967,G__218968,G__218969,G__218970,G__218971,G__218972) : tailrecursion.hoplon.pre.call(null,G__218955,G__218956,G__218957,G__218958,G__218959,G__218960,G__218961,G__218962,G__218963,G__218964,G__218965,G__218966,G__218967,G__218968,G__218969,G__218970,G__218971,G__218972));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__218953,G__218954) : tailrecursion.hoplon.div.call(null,G__218953,G__218954));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__218952) : tailrecursion.hoplon.div.call(null,G__218952));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_218911;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_218910;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_218909;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_218908;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_218993 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_218994 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_218995 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_218996 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__218997 = cljs.core.PersistentArrayMap.EMPTY;
var G__218998 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using reasoning analogous to Alyssa",(function (){var G__218999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__219000 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__218999,G__219000) : tailrecursion.hoplon.markdown.simple_node.call(null,G__218999,G__219000));
})(),"s, describe how the difference of two intervals may be computed. Define a corresponding subtraction procedure, called ",(function (){var G__219001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-interval"], null);
var G__219002 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__219001,G__219002) : tailrecursion.hoplon.markdown.code_node.call(null,G__219001,G__219002));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__218997,G__218998) : tailrecursion.hoplon.markdown.para_node.call(null,G__218997,G__218998));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_218996;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_218995;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_218994;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_218993;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_219003 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219004 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_219005 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219006 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__219007 = cljs.core.PersistentArrayMap.EMPTY;
var G__219008 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using reasoning analogous to Alyssa",(function (){var G__219009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__219010 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__219009,G__219010) : tailrecursion.hoplon.markdown.simple_node.call(null,G__219009,G__219010));
})(),"s, we",(function (){var G__219011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__219012 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__219011,G__219012) : tailrecursion.hoplon.markdown.simple_node.call(null,G__219011,G__219012));
})(),"d define ",(function (){var G__219013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-interval"], null);
var G__219014 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__219013,G__219014) : tailrecursion.hoplon.markdown.code_node.call(null,G__219013,G__219014));
})()," as:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219007,G__219008) : tailrecursion.hoplon.markdown.para_node.call(null,G__219007,G__219008));
})(),(function (){var G__219078 = (function (){var G__219079 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__219080 = (function (){var G__219081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__219082 = "(";
var G__219083 = (function (){var G__219112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__219113 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219112,G__219113) : tailrecursion.hoplon.span.call(null,G__219112,G__219113));
})();
var G__219084 = (function (){var G__219114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219115 = "sub-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219114,G__219115) : tailrecursion.hoplon.span.call(null,G__219114,G__219115));
})();
var G__219085 = " [";
var G__219086 = (function (){var G__219116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219117 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219116,G__219117) : tailrecursion.hoplon.span.call(null,G__219116,G__219117));
})();
var G__219087 = " ";
var G__219088 = (function (){var G__219118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219119 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219118,G__219119) : tailrecursion.hoplon.span.call(null,G__219118,G__219119));
})();
var G__219089 = "]\n  (";
var G__219090 = (function (){var G__219120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219121 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219120,G__219121) : tailrecursion.hoplon.span.call(null,G__219120,G__219121));
})();
var G__219091 = " (";
var G__219092 = (function (){var G__219122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__219123 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219122,G__219123) : tailrecursion.hoplon.span.call(null,G__219122,G__219123));
})();
var G__219093 = "(";
var G__219094 = (function (){var G__219124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219125 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219124,G__219125) : tailrecursion.hoplon.span.call(null,G__219124,G__219125));
})();
var G__219095 = " ";
var G__219096 = (function (){var G__219126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219127 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219126,G__219127) : tailrecursion.hoplon.span.call(null,G__219126,G__219127));
})();
var G__219097 = ") (";
var G__219098 = (function (){var G__219128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219129 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219128,G__219129) : tailrecursion.hoplon.span.call(null,G__219128,G__219129));
})();
var G__219099 = " ";
var G__219100 = (function (){var G__219130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219131 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219130,G__219131) : tailrecursion.hoplon.span.call(null,G__219130,G__219131));
})();
var G__219101 = "))\n                 (";
var G__219102 = (function (){var G__219132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__219133 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219132,G__219133) : tailrecursion.hoplon.span.call(null,G__219132,G__219133));
})();
var G__219103 = "(";
var G__219104 = (function (){var G__219134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219135 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219134,G__219135) : tailrecursion.hoplon.span.call(null,G__219134,G__219135));
})();
var G__219105 = " ";
var G__219106 = (function (){var G__219136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219137 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219136,G__219137) : tailrecursion.hoplon.span.call(null,G__219136,G__219137));
})();
var G__219107 = ") (";
var G__219108 = (function (){var G__219138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219139 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219138,G__219139) : tailrecursion.hoplon.span.call(null,G__219138,G__219139));
})();
var G__219109 = " ";
var G__219110 = (function (){var G__219140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219141 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219140,G__219141) : tailrecursion.hoplon.span.call(null,G__219140,G__219141));
})();
var G__219111 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__219081,G__219082,G__219083,G__219084,G__219085,G__219086,G__219087,G__219088,G__219089,G__219090,G__219091,G__219092,G__219093,G__219094,G__219095,G__219096,G__219097,G__219098,G__219099,G__219100,G__219101,G__219102,G__219103,G__219104,G__219105,G__219106,G__219107,G__219108,G__219109,G__219110,G__219111) : tailrecursion.hoplon.pre.call(null,G__219081,G__219082,G__219083,G__219084,G__219085,G__219086,G__219087,G__219088,G__219089,G__219090,G__219091,G__219092,G__219093,G__219094,G__219095,G__219096,G__219097,G__219098,G__219099,G__219100,G__219101,G__219102,G__219103,G__219104,G__219105,G__219106,G__219107,G__219108,G__219109,G__219110,G__219111));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__219079,G__219080) : tailrecursion.hoplon.div.call(null,G__219079,G__219080));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__219078) : tailrecursion.hoplon.div.call(null,G__219078));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219006;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219005;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219004;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219003;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_219142 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219143 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_219144 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219145 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__219146 = cljs.core.PersistentArrayMap.EMPTY;
var G__219147 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["width"], null)], 0))," of an interval is half of the difference between its upper and lower bounds. The width is a measure of the uncertainty of the number specified by the interval. For some arithmetic operations the width of the result of combining two intervals is a function only of the widths of the argument intervals. Show that the width of the sum (or difference) of two intervals is a function only of the widths of the intervals being added (or subtracted). Give examples to show that this is not true for multiplication or division."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219146,G__219147) : tailrecursion.hoplon.markdown.para_node.call(null,G__219146,G__219147));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219145;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219144;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219143;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219142;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_219148 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219149 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_219150 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219151 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__219152 = cljs.core.PersistentArrayMap.EMPTY;
var G__219153 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__219154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__219155 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__219154,G__219155) : tailrecursion.hoplon.markdown.simple_node.call(null,G__219154,G__219155));
})(),"s define two intervals \\(x=(a-\\delta,a+\\delta)\\), and \\(y=(b-\\epsilon,b+\\epsilon)\\), where \\(\\delta,\\epsilon\\) are positive real numbers (and hence the width of their respective intervals). Then, the interval ",(function (){var G__219156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(add-interval x y)"], null);
var G__219157 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__219156,G__219157) : tailrecursion.hoplon.markdown.code_node.call(null,G__219156,G__219157));
})()," would be \\((a+b-(\\epsilon+delta),a+b+(\\epsilon+\\delta))\\), making the width of the sum equal to the sum of the widths."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219152,G__219153) : tailrecursion.hoplon.markdown.para_node.call(null,G__219152,G__219153));
})(),(function (){var G__219158 = cljs.core.PersistentArrayMap.EMPTY;
var G__219159 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Similarly, ",(function (){var G__219160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(sub-interval a b)"], null);
var G__219161 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__219160,G__219161) : tailrecursion.hoplon.markdown.code_node.call(null,G__219160,G__219161));
})()," would be,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219158,G__219159) : tailrecursion.hoplon.markdown.para_node.call(null,G__219158,G__219159));
})(),(function (){var G__219162 = cljs.core.PersistentArrayMap.EMPTY;
var G__219163 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$(a-\\delta - (b+\\epsilon),a+\\epsilon-(b-\\epsilon))=(a-b-(\\delta+\\epsilon),a-b+(\\delta-\\epsilon))$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219162,G__219163) : tailrecursion.hoplon.markdown.para_node.call(null,G__219162,G__219163));
})(),(function (){var G__219164 = cljs.core.PersistentArrayMap.EMPTY;
var G__219165 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["making the width of the difference of intervals equal to the  difference of the widths of the intervals."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219164,G__219165) : tailrecursion.hoplon.markdown.para_node.call(null,G__219164,G__219165));
})(),(function (){var G__219166 = cljs.core.PersistentArrayMap.EMPTY;
var G__219167 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For multiplication, however, things are not as simple. Let",(function (){var G__219168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__219169 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__219168,G__219169) : tailrecursion.hoplon.markdown.simple_node.call(null,G__219168,G__219169));
})(),"s consider two pairs of intervals, each pair with the same corresponding widths:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219166,G__219167) : tailrecursion.hoplon.markdown.para_node.call(null,G__219166,G__219167));
})(),(function (){var G__219170 = cljs.core.PersistentArrayMap.EMPTY;
var G__219171 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$a=(0,2), b=(0,2) c=(5,7) d=(5,7)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219170,G__219171) : tailrecursion.hoplon.markdown.para_node.call(null,G__219170,G__219171));
})(),(function (){var G__219172 = cljs.core.PersistentArrayMap.EMPTY;
var G__219173 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since these intervals all have the same width, if the width of the product is a function of the widths of the intervals, then the product of any two of these intervals should yield an interval with the same width. But this is clearly not this case because ",(function (){var G__219174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(width\n(mul-interval a b))"], null);
var G__219175 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__219174,G__219175) : tailrecursion.hoplon.markdown.code_node.call(null,G__219174,G__219175));
})()," is 2, but ",(function (){var G__219176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(width (mul-interval c d))"], null);
var G__219177 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__219176,G__219177) : tailrecursion.hoplon.markdown.code_node.call(null,G__219176,G__219177));
})()," is 12. So clearly the width of the product is not a function of the widths alone."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219172,G__219173) : tailrecursion.hoplon.markdown.para_node.call(null,G__219172,G__219173));
})(),(function (){var G__219178 = cljs.core.PersistentArrayMap.EMPTY;
var G__219179 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for division, we can define \\(a,b=(1,2)\\), and \\(c,d=\\((5,6)\\). Then, ",(function (){var G__219180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(div-interval a b)"], null);
var G__219181 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__219180,G__219181) : tailrecursion.hoplon.markdown.code_node.call(null,G__219180,G__219181));
})()," is \\((1/2, 2)\\), but ",(function (){var G__219182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(div-interval c d)"], null);
var G__219183 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__219182,G__219183) : tailrecursion.hoplon.markdown.code_node.call(null,G__219182,G__219183));
})()," is \\((5/6,6/5)\\). The width of the first is 0.75 or 3/4, but the width of the second is 11/60."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219178,G__219179) : tailrecursion.hoplon.markdown.para_node.call(null,G__219178,G__219179));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219151;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219150;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219149;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219148;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_219184 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219185 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_219186 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219187 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__219188 = cljs.core.PersistentArrayMap.EMPTY;
var G__219189 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Ben Bitdiddle, an expert systems programmer, looks over Alyssa",(function (){var G__219190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__219191 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__219190,G__219191) : tailrecursion.hoplon.markdown.simple_node.call(null,G__219190,G__219191));
})(),"s shoulder and comments that it is not clear what it means to divide by an interval that spans zero. Modify Alyssa",(function (){var G__219192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__219193 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__219192,G__219193) : tailrecursion.hoplon.markdown.simple_node.call(null,G__219192,G__219193));
})(),"s code to check for this condition and to signal an error if it occurs."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219188,G__219189) : tailrecursion.hoplon.markdown.para_node.call(null,G__219188,G__219189));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219187;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219186;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219185;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219184;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_219194 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219195 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_219196 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219197 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__219322 = (function (){var G__219323 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__219324 = (function (){var G__219325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__219326 = "(";
var G__219327 = (function (){var G__219385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__219386 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219385,G__219386) : tailrecursion.hoplon.span.call(null,G__219385,G__219386));
})();
var G__219328 = (function (){var G__219387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219388 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219387,G__219388) : tailrecursion.hoplon.span.call(null,G__219387,G__219388));
})();
var G__219329 = " [";
var G__219330 = (function (){var G__219389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219390 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219389,G__219390) : tailrecursion.hoplon.span.call(null,G__219389,G__219390));
})();
var G__219331 = " ";
var G__219332 = (function (){var G__219391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219392 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219391,G__219392) : tailrecursion.hoplon.span.call(null,G__219391,G__219392));
})();
var G__219333 = "]\n  (";
var G__219334 = (function (){var G__219393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__219394 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219393,G__219394) : tailrecursion.hoplon.span.call(null,G__219393,G__219394));
})();
var G__219335 = "[";
var G__219336 = (function (){var G__219395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219396 = "span-zero?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219395,G__219396) : tailrecursion.hoplon.span.call(null,G__219395,G__219396));
})();
var G__219337 = " ";
var G__219338 = (function (){var G__219397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__219398 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219397,G__219398) : tailrecursion.hoplon.span.call(null,G__219397,G__219398));
})();
var G__219339 = "(";
var G__219340 = (function (){var G__219399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__219400 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219399,G__219400) : tailrecursion.hoplon.span.call(null,G__219399,G__219400));
})();
var G__219341 = (function (){var G__219401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__219402 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219401,G__219402) : tailrecursion.hoplon.span.call(null,G__219401,G__219402));
})();
var G__219342 = "\n                       (";
var G__219343 = (function (){var G__219403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__219404 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219403,G__219404) : tailrecursion.hoplon.span.call(null,G__219403,G__219404));
})();
var G__219344 = "(";
var G__219345 = (function (){var G__219405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219406 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219405,G__219406) : tailrecursion.hoplon.span.call(null,G__219405,G__219406));
})();
var G__219346 = " ";
var G__219347 = (function (){var G__219407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219408 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219407,G__219408) : tailrecursion.hoplon.span.call(null,G__219407,G__219408));
})();
var G__219348 = ")\n                          (";
var G__219349 = (function (){var G__219409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219410 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219409,G__219410) : tailrecursion.hoplon.span.call(null,G__219409,G__219410));
})();
var G__219350 = " ";
var G__219351 = (function (){var G__219411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219412 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219411,G__219412) : tailrecursion.hoplon.span.call(null,G__219411,G__219412));
})();
var G__219352 = ")))]\n    (";
var G__219353 = (function (){var G__219413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__219414 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219413,G__219414) : tailrecursion.hoplon.span.call(null,G__219413,G__219414));
})();
var G__219354 = "(";
var G__219355 = (function (){var G__219415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219416 = "span-zero?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219415,G__219416) : tailrecursion.hoplon.span.call(null,G__219415,G__219416));
})();
var G__219356 = " ";
var G__219357 = (function (){var G__219417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219418 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219417,G__219418) : tailrecursion.hoplon.span.call(null,G__219417,G__219418));
})();
var G__219358 = ")\n        (";
var G__219359 = (function (){var G__219419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219420 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219419,G__219420) : tailrecursion.hoplon.span.call(null,G__219419,G__219420));
})();
var G__219360 = " (";
var G__219361 = (function (){var G__219421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219422 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219421,G__219422) : tailrecursion.hoplon.span.call(null,G__219421,G__219422));
})();
var G__219362 = " ";
var G__219363 = (function (){var G__219423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__219424 = "\"Can't divide by zero!\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219423,G__219424) : tailrecursion.hoplon.span.call(null,G__219423,G__219424));
})();
var G__219364 = "))\n        (";
var G__219365 = (function (){var G__219425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219426 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219425,G__219426) : tailrecursion.hoplon.span.call(null,G__219425,G__219426));
})();
var G__219366 = " ";
var G__219367 = (function (){var G__219427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219428 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219427,G__219428) : tailrecursion.hoplon.span.call(null,G__219427,G__219428));
})();
var G__219368 = "\n                      (";
var G__219369 = (function (){var G__219429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219430 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219429,G__219430) : tailrecursion.hoplon.span.call(null,G__219429,G__219430));
})();
var G__219370 = " (";
var G__219371 = (function (){var G__219431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__219432 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219431,G__219432) : tailrecursion.hoplon.span.call(null,G__219431,G__219432));
})();
var G__219372 = (function (){var G__219433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__219434 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219433,G__219434) : tailrecursion.hoplon.span.call(null,G__219433,G__219434));
})();
var G__219373 = " (";
var G__219374 = (function (){var G__219435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219436 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219435,G__219436) : tailrecursion.hoplon.span.call(null,G__219435,G__219436));
})();
var G__219375 = " ";
var G__219376 = (function (){var G__219437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219438 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219437,G__219438) : tailrecursion.hoplon.span.call(null,G__219437,G__219438));
})();
var G__219377 = "))\n                                     (";
var G__219378 = (function (){var G__219439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__219440 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219439,G__219440) : tailrecursion.hoplon.span.call(null,G__219439,G__219440));
})();
var G__219379 = (function (){var G__219441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__219442 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219441,G__219442) : tailrecursion.hoplon.span.call(null,G__219441,G__219442));
})();
var G__219380 = " (";
var G__219381 = (function (){var G__219443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__219444 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219443,G__219444) : tailrecursion.hoplon.span.call(null,G__219443,G__219444));
})();
var G__219382 = " ";
var G__219383 = (function (){var G__219445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__219446 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__219445,G__219446) : tailrecursion.hoplon.span.call(null,G__219445,G__219446));
})();
var G__219384 = ")))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60(G__219325,G__219326,G__219327,G__219328,G__219329,G__219330,G__219331,G__219332,G__219333,G__219334,G__219335,G__219336,G__219337,G__219338,G__219339,G__219340,G__219341,G__219342,G__219343,G__219344,G__219345,G__219346,G__219347,G__219348,G__219349,G__219350,G__219351,G__219352,G__219353,G__219354,G__219355,G__219356,G__219357,G__219358,G__219359,G__219360,G__219361,G__219362,G__219363,G__219364,G__219365,G__219366,G__219367,G__219368,G__219369,G__219370,G__219371,G__219372,G__219373,G__219374,G__219375,G__219376,G__219377,G__219378,G__219379,G__219380,G__219381,G__219382,G__219383,G__219384) : tailrecursion.hoplon.pre.call(null,G__219325,G__219326,G__219327,G__219328,G__219329,G__219330,G__219331,G__219332,G__219333,G__219334,G__219335,G__219336,G__219337,G__219338,G__219339,G__219340,G__219341,G__219342,G__219343,G__219344,G__219345,G__219346,G__219347,G__219348,G__219349,G__219350,G__219351,G__219352,G__219353,G__219354,G__219355,G__219356,G__219357,G__219358,G__219359,G__219360,G__219361,G__219362,G__219363,G__219364,G__219365,G__219366,G__219367,G__219368,G__219369,G__219370,G__219371,G__219372,G__219373,G__219374,G__219375,G__219376,G__219377,G__219378,G__219379,G__219380,G__219381,G__219382,G__219383,G__219384));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__219323,G__219324) : tailrecursion.hoplon.div.call(null,G__219323,G__219324));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__219322) : tailrecursion.hoplon.div.call(null,G__219322));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219197;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219196;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219195;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219194;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_219447 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219448 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_219449 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219450 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__219451 = cljs.core.PersistentArrayMap.EMPTY;
var G__219452 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In passing, Ben also cryptically comments: ",(function (){var G__219453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__219454 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["By testing the signs of the endpoints of the intervals, it is possible to break mul-interval into nine cases, only one of which requires more than two multiplications."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__219453,G__219454) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__219453,G__219454));
})()," Rewrite this procedure using Ben",(function (){var G__219455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__219456 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__219455,G__219456) : tailrecursion.hoplon.markdown.simple_node.call(null,G__219455,G__219456));
})(),"s suggestion."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__219451,G__219452) : tailrecursion.hoplon.markdown.para_node.call(null,G__219451,G__219452));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219450;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219449;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219448;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219447;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_219457 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219458 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_219459 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_219460 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__220130 = (function (){var G__220131 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__220132 = (function (){var G__220133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__220134 = "(";
var G__220135 = (function (){var G__220464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__220465 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220464,G__220465) : tailrecursion.hoplon.span.call(null,G__220464,G__220465));
})();
var G__220136 = (function (){var G__220466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220467 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220466,G__220467) : tailrecursion.hoplon.span.call(null,G__220466,G__220467));
})();
var G__220137 = " [";
var G__220138 = (function (){var G__220468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220469 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220468,G__220469) : tailrecursion.hoplon.span.call(null,G__220468,G__220469));
})();
var G__220139 = " ";
var G__220140 = (function (){var G__220470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220471 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220470,G__220471) : tailrecursion.hoplon.span.call(null,G__220470,G__220471));
})();
var G__220141 = "]\n  (";
var G__220142 = (function (){var G__220472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220473 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220472,G__220473) : tailrecursion.hoplon.span.call(null,G__220472,G__220473));
})();
var G__220143 = "(";
var G__220144 = (function (){var G__220474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220475 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220474,G__220475) : tailrecursion.hoplon.span.call(null,G__220474,G__220475));
})();
var G__220145 = "(";
var G__220146 = (function (){var G__220476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220477 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220476,G__220477) : tailrecursion.hoplon.span.call(null,G__220476,G__220477));
})();
var G__220147 = " ";
var G__220148 = (function (){var G__220478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220479 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220478,G__220479) : tailrecursion.hoplon.span.call(null,G__220478,G__220479));
})();
var G__220149 = ") ";
var G__220150 = (function (){var G__220480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__220481 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220480,G__220481) : tailrecursion.hoplon.span.call(null,G__220480,G__220481));
})();
var G__220151 = ")\n        (";
var G__220152 = (function (){var G__220482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220483 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220482,G__220483) : tailrecursion.hoplon.span.call(null,G__220482,G__220483));
})();
var G__220153 = "(";
var G__220154 = (function (){var G__220484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220485 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220484,G__220485) : tailrecursion.hoplon.span.call(null,G__220484,G__220485));
})();
var G__220155 = "(";
var G__220156 = (function (){var G__220486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220487 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220486,G__220487) : tailrecursion.hoplon.span.call(null,G__220486,G__220487));
})();
var G__220157 = " ";
var G__220158 = (function (){var G__220488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220489 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220488,G__220489) : tailrecursion.hoplon.span.call(null,G__220488,G__220489));
})();
var G__220159 = ") ";
var G__220160 = (function (){var G__220490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__220491 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220490,G__220491) : tailrecursion.hoplon.span.call(null,G__220490,G__220491));
})();
var G__220161 = ")\n              (";
var G__220162 = (function (){var G__220492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220493 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220492,G__220493) : tailrecursion.hoplon.span.call(null,G__220492,G__220493));
})();
var G__220163 = " (";
var G__220164 = (function (){var G__220494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220495 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220494,G__220495) : tailrecursion.hoplon.span.call(null,G__220494,G__220495));
})();
var G__220165 = "(";
var G__220166 = (function (){var G__220496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220497 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220496,G__220497) : tailrecursion.hoplon.span.call(null,G__220496,G__220497));
})();
var G__220167 = " ";
var G__220168 = (function (){var G__220498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220499 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220498,G__220499) : tailrecursion.hoplon.span.call(null,G__220498,G__220499));
})();
var G__220169 = ")\n                                (";
var G__220170 = (function (){var G__220500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220501 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220500,G__220501) : tailrecursion.hoplon.span.call(null,G__220500,G__220501));
})();
var G__220171 = " ";
var G__220172 = (function (){var G__220502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220503 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220502,G__220503) : tailrecursion.hoplon.span.call(null,G__220502,G__220503));
})();
var G__220173 = "))\n                             (";
var G__220174 = (function (){var G__220504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220505 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220504,G__220505) : tailrecursion.hoplon.span.call(null,G__220504,G__220505));
})();
var G__220175 = "(";
var G__220176 = (function (){var G__220506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220507 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220506,G__220507) : tailrecursion.hoplon.span.call(null,G__220506,G__220507));
})();
var G__220177 = " ";
var G__220178 = (function (){var G__220508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220509 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220508,G__220509) : tailrecursion.hoplon.span.call(null,G__220508,G__220509));
})();
var G__220179 = ")\n                                (";
var G__220180 = (function (){var G__220510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220511 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220510,G__220511) : tailrecursion.hoplon.span.call(null,G__220510,G__220511));
})();
var G__220181 = " ";
var G__220182 = (function (){var G__220512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220513 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220512,G__220513) : tailrecursion.hoplon.span.call(null,G__220512,G__220513));
})();
var G__220183 = ")))\n              (";
var G__220184 = (function (){var G__220514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220515 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220514,G__220515) : tailrecursion.hoplon.span.call(null,G__220514,G__220515));
})();
var G__220185 = (function (){var G__220516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__220517 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220516,G__220517) : tailrecursion.hoplon.span.call(null,G__220516,G__220517));
})();
var G__220186 = " (";
var G__220187 = (function (){var G__220518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220519 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220518,G__220519) : tailrecursion.hoplon.span.call(null,G__220518,G__220519));
})();
var G__220188 = " ";
var G__220189 = (function (){var G__220520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220521 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220520,G__220521) : tailrecursion.hoplon.span.call(null,G__220520,G__220521));
})();
var G__220190 = "))\n              (";
var G__220191 = (function (){var G__220522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220523 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220522,G__220523) : tailrecursion.hoplon.span.call(null,G__220522,G__220523));
})();
var G__220192 = " (";
var G__220193 = (function (){var G__220524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220525 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220524,G__220525) : tailrecursion.hoplon.span.call(null,G__220524,G__220525));
})();
var G__220194 = "(";
var G__220195 = (function (){var G__220526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220527 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220526,G__220527) : tailrecursion.hoplon.span.call(null,G__220526,G__220527));
})();
var G__220196 = " ";
var G__220197 = (function (){var G__220528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220529 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220528,G__220529) : tailrecursion.hoplon.span.call(null,G__220528,G__220529));
})();
var G__220198 = ")\n                                (";
var G__220199 = (function (){var G__220530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220531 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220530,G__220531) : tailrecursion.hoplon.span.call(null,G__220530,G__220531));
})();
var G__220200 = " ";
var G__220201 = (function (){var G__220532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220533 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220532,G__220533) : tailrecursion.hoplon.span.call(null,G__220532,G__220533));
})();
var G__220202 = "))\n                             (";
var G__220203 = (function (){var G__220534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220535 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220534,G__220535) : tailrecursion.hoplon.span.call(null,G__220534,G__220535));
})();
var G__220204 = "(";
var G__220205 = (function (){var G__220536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220537 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220536,G__220537) : tailrecursion.hoplon.span.call(null,G__220536,G__220537));
})();
var G__220206 = " ";
var G__220207 = (function (){var G__220538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220539 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220538,G__220539) : tailrecursion.hoplon.span.call(null,G__220538,G__220539));
})();
var G__220208 = ")\n                                (";
var G__220209 = (function (){var G__220540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220541 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220540,G__220541) : tailrecursion.hoplon.span.call(null,G__220540,G__220541));
})();
var G__220210 = " ";
var G__220211 = (function (){var G__220542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220543 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220542,G__220543) : tailrecursion.hoplon.span.call(null,G__220542,G__220543));
})();
var G__220212 = ")))\n              ";
var G__220213 = (function (){var G__220544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220545 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220544,G__220545) : tailrecursion.hoplon.span.call(null,G__220544,G__220545));
})();
var G__220214 = " \n              (";
var G__220215 = (function (){var G__220546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220547 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220546,G__220547) : tailrecursion.hoplon.span.call(null,G__220546,G__220547));
})();
var G__220216 = " (";
var G__220217 = (function (){var G__220548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220549 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220548,G__220549) : tailrecursion.hoplon.span.call(null,G__220548,G__220549));
})();
var G__220218 = "(";
var G__220219 = (function (){var G__220550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220551 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220550,G__220551) : tailrecursion.hoplon.span.call(null,G__220550,G__220551));
})();
var G__220220 = " ";
var G__220221 = (function (){var G__220552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220553 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220552,G__220553) : tailrecursion.hoplon.span.call(null,G__220552,G__220553));
})();
var G__220222 = ")\n                                (";
var G__220223 = (function (){var G__220554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220555 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220554,G__220555) : tailrecursion.hoplon.span.call(null,G__220554,G__220555));
})();
var G__220224 = " ";
var G__220225 = (function (){var G__220556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220557 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220556,G__220557) : tailrecursion.hoplon.span.call(null,G__220556,G__220557));
})();
var G__220226 = "))\n                             (";
var G__220227 = (function (){var G__220558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220559 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220558,G__220559) : tailrecursion.hoplon.span.call(null,G__220558,G__220559));
})();
var G__220228 = "(";
var G__220229 = (function (){var G__220560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220561 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220560,G__220561) : tailrecursion.hoplon.span.call(null,G__220560,G__220561));
})();
var G__220230 = " ";
var G__220231 = (function (){var G__220562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220563 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220562,G__220563) : tailrecursion.hoplon.span.call(null,G__220562,G__220563));
})();
var G__220232 = ")\n                                (";
var G__220233 = (function (){var G__220564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220565 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220564,G__220565) : tailrecursion.hoplon.span.call(null,G__220564,G__220565));
})();
var G__220234 = " ";
var G__220235 = (function (){var G__220566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220567 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220566,G__220567) : tailrecursion.hoplon.span.call(null,G__220566,G__220567));
})();
var G__220236 = "))))\n        (";
var G__220237 = (function (){var G__220568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220569 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220568,G__220569) : tailrecursion.hoplon.span.call(null,G__220568,G__220569));
})();
var G__220238 = (function (){var G__220570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__220571 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220570,G__220571) : tailrecursion.hoplon.span.call(null,G__220570,G__220571));
})();
var G__220239 = " (";
var G__220240 = (function (){var G__220572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220573 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220572,G__220573) : tailrecursion.hoplon.span.call(null,G__220572,G__220573));
})();
var G__220241 = " ";
var G__220242 = (function (){var G__220574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220575 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220574,G__220575) : tailrecursion.hoplon.span.call(null,G__220574,G__220575));
})();
var G__220243 = "))\n        (";
var G__220244 = (function (){var G__220576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220577 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220576,G__220577) : tailrecursion.hoplon.span.call(null,G__220576,G__220577));
})();
var G__220245 = "(";
var G__220246 = (function (){var G__220578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220579 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220578,G__220579) : tailrecursion.hoplon.span.call(null,G__220578,G__220579));
})();
var G__220247 = "(";
var G__220248 = (function (){var G__220580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220581 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220580,G__220581) : tailrecursion.hoplon.span.call(null,G__220580,G__220581));
})();
var G__220249 = " ";
var G__220250 = (function (){var G__220582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220583 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220582,G__220583) : tailrecursion.hoplon.span.call(null,G__220582,G__220583));
})();
var G__220251 = ") ";
var G__220252 = (function (){var G__220584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__220585 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220584,G__220585) : tailrecursion.hoplon.span.call(null,G__220584,G__220585));
})();
var G__220253 = ")\n              (";
var G__220254 = (function (){var G__220586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220587 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220586,G__220587) : tailrecursion.hoplon.span.call(null,G__220586,G__220587));
})();
var G__220255 = " (";
var G__220256 = (function (){var G__220588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220589 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220588,G__220589) : tailrecursion.hoplon.span.call(null,G__220588,G__220589));
})();
var G__220257 = "(";
var G__220258 = (function (){var G__220590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220591 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220590,G__220591) : tailrecursion.hoplon.span.call(null,G__220590,G__220591));
})();
var G__220259 = " ";
var G__220260 = (function (){var G__220592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220593 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220592,G__220593) : tailrecursion.hoplon.span.call(null,G__220592,G__220593));
})();
var G__220261 = ")\n                                (";
var G__220262 = (function (){var G__220594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220595 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220594,G__220595) : tailrecursion.hoplon.span.call(null,G__220594,G__220595));
})();
var G__220263 = " ";
var G__220264 = (function (){var G__220596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220597 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220596,G__220597) : tailrecursion.hoplon.span.call(null,G__220596,G__220597));
})();
var G__220265 = "))\n                             (";
var G__220266 = (function (){var G__220598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220599 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220598,G__220599) : tailrecursion.hoplon.span.call(null,G__220598,G__220599));
})();
var G__220267 = "(";
var G__220268 = (function (){var G__220600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220601 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220600,G__220601) : tailrecursion.hoplon.span.call(null,G__220600,G__220601));
})();
var G__220269 = " ";
var G__220270 = (function (){var G__220602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220603 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220602,G__220603) : tailrecursion.hoplon.span.call(null,G__220602,G__220603));
})();
var G__220271 = ")\n                                (";
var G__220272 = (function (){var G__220604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220605 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220604,G__220605) : tailrecursion.hoplon.span.call(null,G__220604,G__220605));
})();
var G__220273 = " ";
var G__220274 = (function (){var G__220606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220607 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220606,G__220607) : tailrecursion.hoplon.span.call(null,G__220606,G__220607));
})();
var G__220275 = ")))\n              (";
var G__220276 = (function (){var G__220608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220609 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220608,G__220609) : tailrecursion.hoplon.span.call(null,G__220608,G__220609));
})();
var G__220277 = (function (){var G__220610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__220611 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220610,G__220611) : tailrecursion.hoplon.span.call(null,G__220610,G__220611));
})();
var G__220278 = " (";
var G__220279 = (function (){var G__220612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220613 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220612,G__220613) : tailrecursion.hoplon.span.call(null,G__220612,G__220613));
})();
var G__220280 = " ";
var G__220281 = (function (){var G__220614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220615 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220614,G__220615) : tailrecursion.hoplon.span.call(null,G__220614,G__220615));
})();
var G__220282 = "))\n              (";
var G__220283 = (function (){var G__220616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220617 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220616,G__220617) : tailrecursion.hoplon.span.call(null,G__220616,G__220617));
})();
var G__220284 = " (";
var G__220285 = (function (){var G__220618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220619 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220618,G__220619) : tailrecursion.hoplon.span.call(null,G__220618,G__220619));
})();
var G__220286 = "(";
var G__220287 = (function (){var G__220620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220621 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220620,G__220621) : tailrecursion.hoplon.span.call(null,G__220620,G__220621));
})();
var G__220288 = " ";
var G__220289 = (function (){var G__220622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220623 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220622,G__220623) : tailrecursion.hoplon.span.call(null,G__220622,G__220623));
})();
var G__220290 = ")\n                                (";
var G__220291 = (function (){var G__220624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220625 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220624,G__220625) : tailrecursion.hoplon.span.call(null,G__220624,G__220625));
})();
var G__220292 = " ";
var G__220293 = (function (){var G__220626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220627 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220626,G__220627) : tailrecursion.hoplon.span.call(null,G__220626,G__220627));
})();
var G__220294 = "))\n                             (";
var G__220295 = (function (){var G__220628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220629 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220628,G__220629) : tailrecursion.hoplon.span.call(null,G__220628,G__220629));
})();
var G__220296 = "(";
var G__220297 = (function (){var G__220630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220631 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220630,G__220631) : tailrecursion.hoplon.span.call(null,G__220630,G__220631));
})();
var G__220298 = " ";
var G__220299 = (function (){var G__220632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220633 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220632,G__220633) : tailrecursion.hoplon.span.call(null,G__220632,G__220633));
})();
var G__220300 = ")\n                                (";
var G__220301 = (function (){var G__220634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220635 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220634,G__220635) : tailrecursion.hoplon.span.call(null,G__220634,G__220635));
})();
var G__220302 = " ";
var G__220303 = (function (){var G__220636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220637 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220636,G__220637) : tailrecursion.hoplon.span.call(null,G__220636,G__220637));
})();
var G__220304 = ")))\n              ";
var G__220305 = (function (){var G__220638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220639 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220638,G__220639) : tailrecursion.hoplon.span.call(null,G__220638,G__220639));
})();
var G__220306 = " \n              (";
var G__220307 = (function (){var G__220640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220641 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220640,G__220641) : tailrecursion.hoplon.span.call(null,G__220640,G__220641));
})();
var G__220308 = " (";
var G__220309 = (function (){var G__220642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220643 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220642,G__220643) : tailrecursion.hoplon.span.call(null,G__220642,G__220643));
})();
var G__220310 = "(";
var G__220311 = (function (){var G__220644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220645 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220644,G__220645) : tailrecursion.hoplon.span.call(null,G__220644,G__220645));
})();
var G__220312 = " ";
var G__220313 = (function (){var G__220646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220647 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220646,G__220647) : tailrecursion.hoplon.span.call(null,G__220646,G__220647));
})();
var G__220314 = ")\n                                (";
var G__220315 = (function (){var G__220648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220649 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220648,G__220649) : tailrecursion.hoplon.span.call(null,G__220648,G__220649));
})();
var G__220316 = " ";
var G__220317 = (function (){var G__220650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220651 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220650,G__220651) : tailrecursion.hoplon.span.call(null,G__220650,G__220651));
})();
var G__220318 = "))\n                             (";
var G__220319 = (function (){var G__220652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220653 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220652,G__220653) : tailrecursion.hoplon.span.call(null,G__220652,G__220653));
})();
var G__220320 = "(";
var G__220321 = (function (){var G__220654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220655 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220654,G__220655) : tailrecursion.hoplon.span.call(null,G__220654,G__220655));
})();
var G__220322 = " ";
var G__220323 = (function (){var G__220656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220657 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220656,G__220657) : tailrecursion.hoplon.span.call(null,G__220656,G__220657));
})();
var G__220324 = ")\n                                (";
var G__220325 = (function (){var G__220658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220659 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220658,G__220659) : tailrecursion.hoplon.span.call(null,G__220658,G__220659));
})();
var G__220326 = " ";
var G__220327 = (function (){var G__220660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220661 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220660,G__220661) : tailrecursion.hoplon.span.call(null,G__220660,G__220661));
})();
var G__220328 = "))))\n        ";
var G__220329 = (function (){var G__220662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220663 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220662,G__220663) : tailrecursion.hoplon.span.call(null,G__220662,G__220663));
})();
var G__220330 = "\n        (";
var G__220331 = (function (){var G__220664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220665 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220664,G__220665) : tailrecursion.hoplon.span.call(null,G__220664,G__220665));
})();
var G__220332 = "(";
var G__220333 = (function (){var G__220666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220667 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220666,G__220667) : tailrecursion.hoplon.span.call(null,G__220666,G__220667));
})();
var G__220334 = "(";
var G__220335 = (function (){var G__220668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220669 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220668,G__220669) : tailrecursion.hoplon.span.call(null,G__220668,G__220669));
})();
var G__220336 = " ";
var G__220337 = (function (){var G__220670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220671 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220670,G__220671) : tailrecursion.hoplon.span.call(null,G__220670,G__220671));
})();
var G__220338 = ") ";
var G__220339 = (function (){var G__220672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__220673 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220672,G__220673) : tailrecursion.hoplon.span.call(null,G__220672,G__220673));
})();
var G__220340 = ")\n              (";
var G__220341 = (function (){var G__220674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220675 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220674,G__220675) : tailrecursion.hoplon.span.call(null,G__220674,G__220675));
})();
var G__220342 = " (";
var G__220343 = (function (){var G__220676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220677 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220676,G__220677) : tailrecursion.hoplon.span.call(null,G__220676,G__220677));
})();
var G__220344 = "(";
var G__220345 = (function (){var G__220678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220679 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220678,G__220679) : tailrecursion.hoplon.span.call(null,G__220678,G__220679));
})();
var G__220346 = " ";
var G__220347 = (function (){var G__220680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220681 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220680,G__220681) : tailrecursion.hoplon.span.call(null,G__220680,G__220681));
})();
var G__220348 = ")\n                                (";
var G__220349 = (function (){var G__220682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220683 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220682,G__220683) : tailrecursion.hoplon.span.call(null,G__220682,G__220683));
})();
var G__220350 = " ";
var G__220351 = (function (){var G__220684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220685 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220684,G__220685) : tailrecursion.hoplon.span.call(null,G__220684,G__220685));
})();
var G__220352 = "))\n                             (";
var G__220353 = (function (){var G__220686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220687 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220686,G__220687) : tailrecursion.hoplon.span.call(null,G__220686,G__220687));
})();
var G__220354 = "(";
var G__220355 = (function (){var G__220688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220689 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220688,G__220689) : tailrecursion.hoplon.span.call(null,G__220688,G__220689));
})();
var G__220356 = " ";
var G__220357 = (function (){var G__220690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220691 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220690,G__220691) : tailrecursion.hoplon.span.call(null,G__220690,G__220691));
})();
var G__220358 = ")\n                                (";
var G__220359 = (function (){var G__220692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220693 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220692,G__220693) : tailrecursion.hoplon.span.call(null,G__220692,G__220693));
})();
var G__220360 = " ";
var G__220361 = (function (){var G__220694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220695 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220694,G__220695) : tailrecursion.hoplon.span.call(null,G__220694,G__220695));
})();
var G__220362 = ")))\n              (";
var G__220363 = (function (){var G__220696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220697 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220696,G__220697) : tailrecursion.hoplon.span.call(null,G__220696,G__220697));
})();
var G__220364 = (function (){var G__220698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__220699 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220698,G__220699) : tailrecursion.hoplon.span.call(null,G__220698,G__220699));
})();
var G__220365 = " (";
var G__220366 = (function (){var G__220700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220701 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220700,G__220701) : tailrecursion.hoplon.span.call(null,G__220700,G__220701));
})();
var G__220367 = " ";
var G__220368 = (function (){var G__220702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220703 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220702,G__220703) : tailrecursion.hoplon.span.call(null,G__220702,G__220703));
})();
var G__220369 = "))\n              (";
var G__220370 = (function (){var G__220704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220705 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220704,G__220705) : tailrecursion.hoplon.span.call(null,G__220704,G__220705));
})();
var G__220371 = " (";
var G__220372 = (function (){var G__220706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220707 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220706,G__220707) : tailrecursion.hoplon.span.call(null,G__220706,G__220707));
})();
var G__220373 = "(";
var G__220374 = (function (){var G__220708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220709 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220708,G__220709) : tailrecursion.hoplon.span.call(null,G__220708,G__220709));
})();
var G__220375 = " ";
var G__220376 = (function (){var G__220710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220711 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220710,G__220711) : tailrecursion.hoplon.span.call(null,G__220710,G__220711));
})();
var G__220377 = ")\n                                (";
var G__220378 = (function (){var G__220712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220713 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220712,G__220713) : tailrecursion.hoplon.span.call(null,G__220712,G__220713));
})();
var G__220379 = " ";
var G__220380 = (function (){var G__220714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220715 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220714,G__220715) : tailrecursion.hoplon.span.call(null,G__220714,G__220715));
})();
var G__220381 = "))\n                             (";
var G__220382 = (function (){var G__220716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220717 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220716,G__220717) : tailrecursion.hoplon.span.call(null,G__220716,G__220717));
})();
var G__220383 = "(";
var G__220384 = (function (){var G__220718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220719 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220718,G__220719) : tailrecursion.hoplon.span.call(null,G__220718,G__220719));
})();
var G__220385 = " ";
var G__220386 = (function (){var G__220720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220721 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220720,G__220721) : tailrecursion.hoplon.span.call(null,G__220720,G__220721));
})();
var G__220387 = ")\n                                (";
var G__220388 = (function (){var G__220722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220723 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220722,G__220723) : tailrecursion.hoplon.span.call(null,G__220722,G__220723));
})();
var G__220389 = " ";
var G__220390 = (function (){var G__220724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220725 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220724,G__220725) : tailrecursion.hoplon.span.call(null,G__220724,G__220725));
})();
var G__220391 = ")))\n              ";
var G__220392 = (function (){var G__220726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220727 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220726,G__220727) : tailrecursion.hoplon.span.call(null,G__220726,G__220727));
})();
var G__220393 = " \n              (";
var G__220394 = (function (){var G__220728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__220729 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220728,G__220729) : tailrecursion.hoplon.span.call(null,G__220728,G__220729));
})();
var G__220395 = "[";
var G__220396 = (function (){var G__220730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220731 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220730,G__220731) : tailrecursion.hoplon.span.call(null,G__220730,G__220731));
})();
var G__220397 = " (";
var G__220398 = (function (){var G__220732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220733 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220732,G__220733) : tailrecursion.hoplon.span.call(null,G__220732,G__220733));
})();
var G__220399 = "(";
var G__220400 = (function (){var G__220734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220735 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220734,G__220735) : tailrecursion.hoplon.span.call(null,G__220734,G__220735));
})();
var G__220401 = " ";
var G__220402 = (function (){var G__220736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220737 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220736,G__220737) : tailrecursion.hoplon.span.call(null,G__220736,G__220737));
})();
var G__220403 = ")\n                         (";
var G__220404 = (function (){var G__220738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220739 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220738,G__220739) : tailrecursion.hoplon.span.call(null,G__220738,G__220739));
})();
var G__220405 = " ";
var G__220406 = (function (){var G__220740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220741 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220740,G__220741) : tailrecursion.hoplon.span.call(null,G__220740,G__220741));
})();
var G__220407 = "))\n                    ";
var G__220408 = (function (){var G__220742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220743 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220742,G__220743) : tailrecursion.hoplon.span.call(null,G__220742,G__220743));
})();
var G__220409 = " (";
var G__220410 = (function (){var G__220744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220745 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220744,G__220745) : tailrecursion.hoplon.span.call(null,G__220744,G__220745));
})();
var G__220411 = "(";
var G__220412 = (function (){var G__220746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220747 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220746,G__220747) : tailrecursion.hoplon.span.call(null,G__220746,G__220747));
})();
var G__220413 = " ";
var G__220414 = (function (){var G__220748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220749 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220748,G__220749) : tailrecursion.hoplon.span.call(null,G__220748,G__220749));
})();
var G__220415 = ")\n                         (";
var G__220416 = (function (){var G__220750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220751 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220750,G__220751) : tailrecursion.hoplon.span.call(null,G__220750,G__220751));
})();
var G__220417 = " ";
var G__220418 = (function (){var G__220752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220753 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220752,G__220753) : tailrecursion.hoplon.span.call(null,G__220752,G__220753));
})();
var G__220419 = "))\n                    ";
var G__220420 = (function (){var G__220754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220755 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220754,G__220755) : tailrecursion.hoplon.span.call(null,G__220754,G__220755));
})();
var G__220421 = " (";
var G__220422 = (function (){var G__220756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220757 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220756,G__220757) : tailrecursion.hoplon.span.call(null,G__220756,G__220757));
})();
var G__220423 = "(";
var G__220424 = (function (){var G__220758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220759 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220758,G__220759) : tailrecursion.hoplon.span.call(null,G__220758,G__220759));
})();
var G__220425 = " ";
var G__220426 = (function (){var G__220760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220761 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220760,G__220761) : tailrecursion.hoplon.span.call(null,G__220760,G__220761));
})();
var G__220427 = ")\n                         (";
var G__220428 = (function (){var G__220762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220763 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220762,G__220763) : tailrecursion.hoplon.span.call(null,G__220762,G__220763));
})();
var G__220429 = " ";
var G__220430 = (function (){var G__220764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220765 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220764,G__220765) : tailrecursion.hoplon.span.call(null,G__220764,G__220765));
})();
var G__220431 = "))\n                    ";
var G__220432 = (function (){var G__220766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220767 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220766,G__220767) : tailrecursion.hoplon.span.call(null,G__220766,G__220767));
})();
var G__220433 = " (";
var G__220434 = (function (){var G__220768 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220769 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220768,G__220769) : tailrecursion.hoplon.span.call(null,G__220768,G__220769));
})();
var G__220435 = "(";
var G__220436 = (function (){var G__220770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220771 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220770,G__220771) : tailrecursion.hoplon.span.call(null,G__220770,G__220771));
})();
var G__220437 = " ";
var G__220438 = (function (){var G__220772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220773 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220772,G__220773) : tailrecursion.hoplon.span.call(null,G__220772,G__220773));
})();
var G__220439 = ")\n                         (";
var G__220440 = (function (){var G__220774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220775 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220774,G__220775) : tailrecursion.hoplon.span.call(null,G__220774,G__220775));
})();
var G__220441 = " ";
var G__220442 = (function (){var G__220776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220777 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220776,G__220777) : tailrecursion.hoplon.span.call(null,G__220776,G__220777));
})();
var G__220443 = "))]\n                (";
var G__220444 = (function (){var G__220778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__220779 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220778,G__220779) : tailrecursion.hoplon.span.call(null,G__220778,G__220779));
})();
var G__220445 = " (";
var G__220446 = (function (){var G__220780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220781 = "min ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220780,G__220781) : tailrecursion.hoplon.span.call(null,G__220780,G__220781));
})();
var G__220447 = (function (){var G__220782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220783 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220782,G__220783) : tailrecursion.hoplon.span.call(null,G__220782,G__220783));
})();
var G__220448 = " ";
var G__220449 = (function (){var G__220784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220785 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220784,G__220785) : tailrecursion.hoplon.span.call(null,G__220784,G__220785));
})();
var G__220450 = " ";
var G__220451 = (function (){var G__220786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220787 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220786,G__220787) : tailrecursion.hoplon.span.call(null,G__220786,G__220787));
})();
var G__220452 = " ";
var G__220453 = (function (){var G__220788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220789 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220788,G__220789) : tailrecursion.hoplon.span.call(null,G__220788,G__220789));
})();
var G__220454 = ")\n                               (";
var G__220455 = (function (){var G__220790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__220791 = "max ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220790,G__220791) : tailrecursion.hoplon.span.call(null,G__220790,G__220791));
})();
var G__220456 = (function (){var G__220792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220793 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220792,G__220793) : tailrecursion.hoplon.span.call(null,G__220792,G__220793));
})();
var G__220457 = " ";
var G__220458 = (function (){var G__220794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220795 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220794,G__220795) : tailrecursion.hoplon.span.call(null,G__220794,G__220795));
})();
var G__220459 = " ";
var G__220460 = (function (){var G__220796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220797 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220796,G__220797) : tailrecursion.hoplon.span.call(null,G__220796,G__220797));
})();
var G__220461 = " ";
var G__220462 = (function (){var G__220798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220799 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220798,G__220799) : tailrecursion.hoplon.span.call(null,G__220798,G__220799));
})();
var G__220463 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$331 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$331(G__220133,G__220134,G__220135,G__220136,G__220137,G__220138,G__220139,G__220140,G__220141,G__220142,G__220143,G__220144,G__220145,G__220146,G__220147,G__220148,G__220149,G__220150,G__220151,G__220152,G__220153,G__220154,G__220155,G__220156,G__220157,G__220158,G__220159,G__220160,G__220161,G__220162,G__220163,G__220164,G__220165,G__220166,G__220167,G__220168,G__220169,G__220170,G__220171,G__220172,G__220173,G__220174,G__220175,G__220176,G__220177,G__220178,G__220179,G__220180,G__220181,G__220182,G__220183,G__220184,G__220185,G__220186,G__220187,G__220188,G__220189,G__220190,G__220191,G__220192,G__220193,G__220194,G__220195,G__220196,G__220197,G__220198,G__220199,G__220200,G__220201,G__220202,G__220203,G__220204,G__220205,G__220206,G__220207,G__220208,G__220209,G__220210,G__220211,G__220212,G__220213,G__220214,G__220215,G__220216,G__220217,G__220218,G__220219,G__220220,G__220221,G__220222,G__220223,G__220224,G__220225,G__220226,G__220227,G__220228,G__220229,G__220230,G__220231,G__220232,G__220233,G__220234,G__220235,G__220236,G__220237,G__220238,G__220239,G__220240,G__220241,G__220242,G__220243,G__220244,G__220245,G__220246,G__220247,G__220248,G__220249,G__220250,G__220251,G__220252,G__220253,G__220254,G__220255,G__220256,G__220257,G__220258,G__220259,G__220260,G__220261,G__220262,G__220263,G__220264,G__220265,G__220266,G__220267,G__220268,G__220269,G__220270,G__220271,G__220272,G__220273,G__220274,G__220275,G__220276,G__220277,G__220278,G__220279,G__220280,G__220281,G__220282,G__220283,G__220284,G__220285,G__220286,G__220287,G__220288,G__220289,G__220290,G__220291,G__220292,G__220293,G__220294,G__220295,G__220296,G__220297,G__220298,G__220299,G__220300,G__220301,G__220302,G__220303,G__220304,G__220305,G__220306,G__220307,G__220308,G__220309,G__220310,G__220311,G__220312,G__220313,G__220314,G__220315,G__220316,G__220317,G__220318,G__220319,G__220320,G__220321,G__220322,G__220323,G__220324,G__220325,G__220326,G__220327,G__220328,G__220329,G__220330,G__220331,G__220332,G__220333,G__220334,G__220335,G__220336,G__220337,G__220338,G__220339,G__220340,G__220341,G__220342,G__220343,G__220344,G__220345,G__220346,G__220347,G__220348,G__220349,G__220350,G__220351,G__220352,G__220353,G__220354,G__220355,G__220356,G__220357,G__220358,G__220359,G__220360,G__220361,G__220362,G__220363,G__220364,G__220365,G__220366,G__220367,G__220368,G__220369,G__220370,G__220371,G__220372,G__220373,G__220374,G__220375,G__220376,G__220377,G__220378,G__220379,G__220380,G__220381,G__220382,G__220383,G__220384,G__220385,G__220386,G__220387,G__220388,G__220389,G__220390,G__220391,G__220392,G__220393,G__220394,G__220395,G__220396,G__220397,G__220398,G__220399,G__220400,G__220401,G__220402,G__220403,G__220404,G__220405,G__220406,G__220407,G__220408,G__220409,G__220410,G__220411,G__220412,G__220413,G__220414,G__220415,G__220416,G__220417,G__220418,G__220419,G__220420,G__220421,G__220422,G__220423,G__220424,G__220425,G__220426,G__220427,G__220428,G__220429,G__220430,G__220431,G__220432,G__220433,G__220434,G__220435,G__220436,G__220437,G__220438,G__220439,G__220440,G__220441,G__220442,G__220443,G__220444,G__220445,G__220446,G__220447,G__220448,G__220449,G__220450,G__220451,G__220452,G__220453,G__220454,G__220455,G__220456,G__220457,G__220458,G__220459,G__220460,G__220461,G__220462,G__220463) : tailrecursion.hoplon.pre.call(null,G__220133,G__220134,G__220135,G__220136,G__220137,G__220138,G__220139,G__220140,G__220141,G__220142,G__220143,G__220144,G__220145,G__220146,G__220147,G__220148,G__220149,G__220150,G__220151,G__220152,G__220153,G__220154,G__220155,G__220156,G__220157,G__220158,G__220159,G__220160,G__220161,G__220162,G__220163,G__220164,G__220165,G__220166,G__220167,G__220168,G__220169,G__220170,G__220171,G__220172,G__220173,G__220174,G__220175,G__220176,G__220177,G__220178,G__220179,G__220180,G__220181,G__220182,G__220183,G__220184,G__220185,G__220186,G__220187,G__220188,G__220189,G__220190,G__220191,G__220192,G__220193,G__220194,G__220195,G__220196,G__220197,G__220198,G__220199,G__220200,G__220201,G__220202,G__220203,G__220204,G__220205,G__220206,G__220207,G__220208,G__220209,G__220210,G__220211,G__220212,G__220213,G__220214,G__220215,G__220216,G__220217,G__220218,G__220219,G__220220,G__220221,G__220222,G__220223,G__220224,G__220225,G__220226,G__220227,G__220228,G__220229,G__220230,G__220231,G__220232,G__220233,G__220234,G__220235,G__220236,G__220237,G__220238,G__220239,G__220240,G__220241,G__220242,G__220243,G__220244,G__220245,G__220246,G__220247,G__220248,G__220249,G__220250,G__220251,G__220252,G__220253,G__220254,G__220255,G__220256,G__220257,G__220258,G__220259,G__220260,G__220261,G__220262,G__220263,G__220264,G__220265,G__220266,G__220267,G__220268,G__220269,G__220270,G__220271,G__220272,G__220273,G__220274,G__220275,G__220276,G__220277,G__220278,G__220279,G__220280,G__220281,G__220282,G__220283,G__220284,G__220285,G__220286,G__220287,G__220288,G__220289,G__220290,G__220291,G__220292,G__220293,G__220294,G__220295,G__220296,G__220297,G__220298,G__220299,G__220300,G__220301,G__220302,G__220303,G__220304,G__220305,G__220306,G__220307,G__220308,G__220309,G__220310,G__220311,G__220312,G__220313,G__220314,G__220315,G__220316,G__220317,G__220318,G__220319,G__220320,G__220321,G__220322,G__220323,G__220324,G__220325,G__220326,G__220327,G__220328,G__220329,G__220330,G__220331,G__220332,G__220333,G__220334,G__220335,G__220336,G__220337,G__220338,G__220339,G__220340,G__220341,G__220342,G__220343,G__220344,G__220345,G__220346,G__220347,G__220348,G__220349,G__220350,G__220351,G__220352,G__220353,G__220354,G__220355,G__220356,G__220357,G__220358,G__220359,G__220360,G__220361,G__220362,G__220363,G__220364,G__220365,G__220366,G__220367,G__220368,G__220369,G__220370,G__220371,G__220372,G__220373,G__220374,G__220375,G__220376,G__220377,G__220378,G__220379,G__220380,G__220381,G__220382,G__220383,G__220384,G__220385,G__220386,G__220387,G__220388,G__220389,G__220390,G__220391,G__220392,G__220393,G__220394,G__220395,G__220396,G__220397,G__220398,G__220399,G__220400,G__220401,G__220402,G__220403,G__220404,G__220405,G__220406,G__220407,G__220408,G__220409,G__220410,G__220411,G__220412,G__220413,G__220414,G__220415,G__220416,G__220417,G__220418,G__220419,G__220420,G__220421,G__220422,G__220423,G__220424,G__220425,G__220426,G__220427,G__220428,G__220429,G__220430,G__220431,G__220432,G__220433,G__220434,G__220435,G__220436,G__220437,G__220438,G__220439,G__220440,G__220441,G__220442,G__220443,G__220444,G__220445,G__220446,G__220447,G__220448,G__220449,G__220450,G__220451,G__220452,G__220453,G__220454,G__220455,G__220456,G__220457,G__220458,G__220459,G__220460,G__220461,G__220462,G__220463));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__220131,G__220132) : tailrecursion.hoplon.div.call(null,G__220131,G__220132));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__220130) : tailrecursion.hoplon.div.call(null,G__220130));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219460;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219459;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_219458;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_219457;
}})()], 0)),"",(function (){var _STAR_references_STAR_220800 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_220801 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_220802 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_220803 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__220804 = cljs.core.PersistentArrayMap.EMPTY;
var G__220805 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["After debugging her program, Alyssa shows it to a potential user, who complains that her program solves the wrong problem. He wants a program that can deal with numbers represented as a center value and an additive tolerance; for example, he wants to work with intervals such as 3.5\u00B1 0.15 rather than ",tailrecursion.hoplon.markdown.ref_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$separator_DASH_space,null,cljs.core.cst$kw$reference_DASH_key,null], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["3.35, 3.65"], null)], 0)),". Alyssa returns to her desk and fixes this problem by supplying an alternate constructor and alternate selectors:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__220804,G__220805) : tailrecursion.hoplon.markdown.para_node.call(null,G__220804,G__220805));
})(),(function (){var G__220929 = (function (){var G__220930 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__220931 = (function (){var G__220932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__220933 = "(";
var G__220934 = (function (){var G__220991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__220992 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220991,G__220992) : tailrecursion.hoplon.span.call(null,G__220991,G__220992));
})();
var G__220935 = (function (){var G__220993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220994 = "make-center-width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220993,G__220994) : tailrecursion.hoplon.span.call(null,G__220993,G__220994));
})();
var G__220936 = " [";
var G__220937 = (function (){var G__220995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220996 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220995,G__220996) : tailrecursion.hoplon.span.call(null,G__220995,G__220996));
})();
var G__220938 = " ";
var G__220939 = (function (){var G__220997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__220998 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220997,G__220998) : tailrecursion.hoplon.span.call(null,G__220997,G__220998));
})();
var G__220940 = "]\n  (";
var G__220941 = (function (){var G__220999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221000 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__220999,G__221000) : tailrecursion.hoplon.span.call(null,G__220999,G__221000));
})();
var G__220942 = " (";
var G__220943 = (function (){var G__221001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__221002 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221001,G__221002) : tailrecursion.hoplon.span.call(null,G__221001,G__221002));
})();
var G__220944 = (function (){var G__221003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221004 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221003,G__221004) : tailrecursion.hoplon.span.call(null,G__221003,G__221004));
})();
var G__220945 = " ";
var G__220946 = (function (){var G__221005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221006 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221005,G__221006) : tailrecursion.hoplon.span.call(null,G__221005,G__221006));
})();
var G__220947 = ") (";
var G__220948 = (function (){var G__221007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__221008 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221007,G__221008) : tailrecursion.hoplon.span.call(null,G__221007,G__221008));
})();
var G__220949 = (function (){var G__221009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221010 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221009,G__221010) : tailrecursion.hoplon.span.call(null,G__221009,G__221010));
})();
var G__220950 = " ";
var G__220951 = (function (){var G__221011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221012 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221011,G__221012) : tailrecursion.hoplon.span.call(null,G__221011,G__221012));
})();
var G__220952 = ")))\n(";
var G__220953 = (function (){var G__221013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__221014 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221013,G__221014) : tailrecursion.hoplon.span.call(null,G__221013,G__221014));
})();
var G__220954 = (function (){var G__221015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221016 = "center";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221015,G__221016) : tailrecursion.hoplon.span.call(null,G__221015,G__221016));
})();
var G__220955 = " [";
var G__220956 = (function (){var G__221017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221018 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221017,G__221018) : tailrecursion.hoplon.span.call(null,G__221017,G__221018));
})();
var G__220957 = "]\n  (";
var G__220958 = (function (){var G__221019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__221020 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221019,G__221020) : tailrecursion.hoplon.span.call(null,G__221019,G__221020));
})();
var G__220959 = "(";
var G__220960 = (function (){var G__221021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__221022 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221021,G__221022) : tailrecursion.hoplon.span.call(null,G__221021,G__221022));
})();
var G__220961 = "(";
var G__220962 = (function (){var G__221023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221024 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221023,G__221024) : tailrecursion.hoplon.span.call(null,G__221023,G__221024));
})();
var G__220963 = " ";
var G__220964 = (function (){var G__221025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221026 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221025,G__221026) : tailrecursion.hoplon.span.call(null,G__221025,G__221026));
})();
var G__220965 = ") (";
var G__220966 = (function (){var G__221027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221028 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221027,G__221028) : tailrecursion.hoplon.span.call(null,G__221027,G__221028));
})();
var G__220967 = " ";
var G__220968 = (function (){var G__221029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221030 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221029,G__221030) : tailrecursion.hoplon.span.call(null,G__221029,G__221030));
})();
var G__220969 = ")) ";
var G__220970 = (function (){var G__221031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__221032 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221031,G__221032) : tailrecursion.hoplon.span.call(null,G__221031,G__221032));
})();
var G__220971 = "))\n(";
var G__220972 = (function (){var G__221033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__221034 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221033,G__221034) : tailrecursion.hoplon.span.call(null,G__221033,G__221034));
})();
var G__220973 = (function (){var G__221035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221036 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221035,G__221036) : tailrecursion.hoplon.span.call(null,G__221035,G__221036));
})();
var G__220974 = " [";
var G__220975 = (function (){var G__221037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221038 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221037,G__221038) : tailrecursion.hoplon.span.call(null,G__221037,G__221038));
})();
var G__220976 = "]\n  (";
var G__220977 = (function (){var G__221039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__221040 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221039,G__221040) : tailrecursion.hoplon.span.call(null,G__221039,G__221040));
})();
var G__220978 = "(";
var G__220979 = (function (){var G__221041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__221042 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221041,G__221042) : tailrecursion.hoplon.span.call(null,G__221041,G__221042));
})();
var G__220980 = "(";
var G__220981 = (function (){var G__221043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221044 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221043,G__221044) : tailrecursion.hoplon.span.call(null,G__221043,G__221044));
})();
var G__220982 = " ";
var G__220983 = (function (){var G__221045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221046 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221045,G__221046) : tailrecursion.hoplon.span.call(null,G__221045,G__221046));
})();
var G__220984 = ") (";
var G__220985 = (function (){var G__221047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221048 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221047,G__221048) : tailrecursion.hoplon.span.call(null,G__221047,G__221048));
})();
var G__220986 = " ";
var G__220987 = (function (){var G__221049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221050 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221049,G__221050) : tailrecursion.hoplon.span.call(null,G__221049,G__221050));
})();
var G__220988 = ")) ";
var G__220989 = (function (){var G__221051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__221052 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221051,G__221052) : tailrecursion.hoplon.span.call(null,G__221051,G__221052));
})();
var G__220990 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59(G__220932,G__220933,G__220934,G__220935,G__220936,G__220937,G__220938,G__220939,G__220940,G__220941,G__220942,G__220943,G__220944,G__220945,G__220946,G__220947,G__220948,G__220949,G__220950,G__220951,G__220952,G__220953,G__220954,G__220955,G__220956,G__220957,G__220958,G__220959,G__220960,G__220961,G__220962,G__220963,G__220964,G__220965,G__220966,G__220967,G__220968,G__220969,G__220970,G__220971,G__220972,G__220973,G__220974,G__220975,G__220976,G__220977,G__220978,G__220979,G__220980,G__220981,G__220982,G__220983,G__220984,G__220985,G__220986,G__220987,G__220988,G__220989,G__220990) : tailrecursion.hoplon.pre.call(null,G__220932,G__220933,G__220934,G__220935,G__220936,G__220937,G__220938,G__220939,G__220940,G__220941,G__220942,G__220943,G__220944,G__220945,G__220946,G__220947,G__220948,G__220949,G__220950,G__220951,G__220952,G__220953,G__220954,G__220955,G__220956,G__220957,G__220958,G__220959,G__220960,G__220961,G__220962,G__220963,G__220964,G__220965,G__220966,G__220967,G__220968,G__220969,G__220970,G__220971,G__220972,G__220973,G__220974,G__220975,G__220976,G__220977,G__220978,G__220979,G__220980,G__220981,G__220982,G__220983,G__220984,G__220985,G__220986,G__220987,G__220988,G__220989,G__220990));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__220930,G__220931) : tailrecursion.hoplon.div.call(null,G__220930,G__220931));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__220929) : tailrecursion.hoplon.div.call(null,G__220929));
})(),(function (){var G__221053 = cljs.core.PersistentArrayMap.EMPTY;
var G__221054 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Unfortunately, most of Alyssa",(function (){var G__221055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__221056 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__221055,G__221056) : tailrecursion.hoplon.markdown.simple_node.call(null,G__221055,G__221056));
})(),"s users are engineers. Real engineering situations usually involve measurements with only a small uncertainty, measured as the ratio of the width of the interval to the midpoint of the interval. Engineers usually specify percentage tolerances on the parameters of devices, as in the resistor specifications given earlier."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221053,G__221054) : tailrecursion.hoplon.markdown.para_node.call(null,G__221053,G__221054));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_220803;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_220802;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_220801;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_220800;
}})()], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_221057 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221058 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221059 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221060 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221061 = cljs.core.PersistentArrayMap.EMPTY;
var G__221062 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a constructor ",(function (){var G__221063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-center-percent"], null);
var G__221064 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__221063,G__221064) : tailrecursion.hoplon.markdown.code_node.call(null,G__221063,G__221064));
})()," that takes a center and a percentage tolerance and produces the desired interval. You must also define a selector ",(function (){var G__221065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"percent"], null);
var G__221066 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__221065,G__221066) : tailrecursion.hoplon.markdown.code_node.call(null,G__221065,G__221066));
})()," that produces the percentage tolerance for a given interval. The ",(function (){var G__221067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"center"], null);
var G__221068 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__221067,G__221068) : tailrecursion.hoplon.markdown.code_node.call(null,G__221067,G__221068));
})()," selector is the same as the one above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221061,G__221062) : tailrecursion.hoplon.markdown.para_node.call(null,G__221061,G__221062));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221060;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221059;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221058;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221057;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_221069 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221070 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221071 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221072 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221168 = (function (){var G__221169 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__221170 = (function (){var G__221171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__221172 = "(";
var G__221173 = (function (){var G__221216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__221217 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221216,G__221217) : tailrecursion.hoplon.span.call(null,G__221216,G__221217));
})();
var G__221174 = (function (){var G__221218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221219 = "make-center-percent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221218,G__221219) : tailrecursion.hoplon.span.call(null,G__221218,G__221219));
})();
var G__221175 = " [";
var G__221176 = (function (){var G__221220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221221 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221220,G__221221) : tailrecursion.hoplon.span.call(null,G__221220,G__221221));
})();
var G__221177 = " ";
var G__221178 = (function (){var G__221222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221223 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221222,G__221223) : tailrecursion.hoplon.span.call(null,G__221222,G__221223));
})();
var G__221179 = "]\n  (";
var G__221180 = (function (){var G__221224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__221225 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221224,G__221225) : tailrecursion.hoplon.span.call(null,G__221224,G__221225));
})();
var G__221181 = "[";
var G__221182 = (function (){var G__221226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221227 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221226,G__221227) : tailrecursion.hoplon.span.call(null,G__221226,G__221227));
})();
var G__221183 = " (";
var G__221184 = (function (){var G__221228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__221229 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221228,G__221229) : tailrecursion.hoplon.span.call(null,G__221228,G__221229));
})();
var G__221185 = (function (){var G__221230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221231 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221230,G__221231) : tailrecursion.hoplon.span.call(null,G__221230,G__221231));
})();
var G__221186 = " ";
var G__221187 = (function (){var G__221232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221233 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221232,G__221233) : tailrecursion.hoplon.span.call(null,G__221232,G__221233));
})();
var G__221188 = ")]\n    (";
var G__221189 = (function (){var G__221234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221235 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221234,G__221235) : tailrecursion.hoplon.span.call(null,G__221234,G__221235));
})();
var G__221190 = " (";
var G__221191 = (function (){var G__221236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__221237 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221236,G__221237) : tailrecursion.hoplon.span.call(null,G__221236,G__221237));
})();
var G__221192 = (function (){var G__221238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221239 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221238,G__221239) : tailrecursion.hoplon.span.call(null,G__221238,G__221239));
})();
var G__221193 = " ";
var G__221194 = (function (){var G__221240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221241 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221240,G__221241) : tailrecursion.hoplon.span.call(null,G__221240,G__221241));
})();
var G__221195 = ") (";
var G__221196 = (function (){var G__221242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__221243 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221242,G__221243) : tailrecursion.hoplon.span.call(null,G__221242,G__221243));
})();
var G__221197 = (function (){var G__221244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221245 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221244,G__221245) : tailrecursion.hoplon.span.call(null,G__221244,G__221245));
})();
var G__221198 = " ";
var G__221199 = (function (){var G__221246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221247 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221246,G__221247) : tailrecursion.hoplon.span.call(null,G__221246,G__221247));
})();
var G__221200 = "))))\n(";
var G__221201 = (function (){var G__221248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__221249 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221248,G__221249) : tailrecursion.hoplon.span.call(null,G__221248,G__221249));
})();
var G__221202 = (function (){var G__221250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221251 = "percent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221250,G__221251) : tailrecursion.hoplon.span.call(null,G__221250,G__221251));
})();
var G__221203 = " [";
var G__221204 = (function (){var G__221252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221253 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221252,G__221253) : tailrecursion.hoplon.span.call(null,G__221252,G__221253));
})();
var G__221205 = "]\n  (";
var G__221206 = (function (){var G__221254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__221255 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221254,G__221255) : tailrecursion.hoplon.span.call(null,G__221254,G__221255));
})();
var G__221207 = "(";
var G__221208 = (function (){var G__221256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221257 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221256,G__221257) : tailrecursion.hoplon.span.call(null,G__221256,G__221257));
})();
var G__221209 = " ";
var G__221210 = (function (){var G__221258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221259 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221258,G__221259) : tailrecursion.hoplon.span.call(null,G__221258,G__221259));
})();
var G__221211 = ") (";
var G__221212 = (function (){var G__221260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221261 = "center";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221260,G__221261) : tailrecursion.hoplon.span.call(null,G__221260,G__221261));
})();
var G__221213 = " ";
var G__221214 = (function (){var G__221262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221263 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221262,G__221263) : tailrecursion.hoplon.span.call(null,G__221262,G__221263));
})();
var G__221215 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45(G__221171,G__221172,G__221173,G__221174,G__221175,G__221176,G__221177,G__221178,G__221179,G__221180,G__221181,G__221182,G__221183,G__221184,G__221185,G__221186,G__221187,G__221188,G__221189,G__221190,G__221191,G__221192,G__221193,G__221194,G__221195,G__221196,G__221197,G__221198,G__221199,G__221200,G__221201,G__221202,G__221203,G__221204,G__221205,G__221206,G__221207,G__221208,G__221209,G__221210,G__221211,G__221212,G__221213,G__221214,G__221215) : tailrecursion.hoplon.pre.call(null,G__221171,G__221172,G__221173,G__221174,G__221175,G__221176,G__221177,G__221178,G__221179,G__221180,G__221181,G__221182,G__221183,G__221184,G__221185,G__221186,G__221187,G__221188,G__221189,G__221190,G__221191,G__221192,G__221193,G__221194,G__221195,G__221196,G__221197,G__221198,G__221199,G__221200,G__221201,G__221202,G__221203,G__221204,G__221205,G__221206,G__221207,G__221208,G__221209,G__221210,G__221211,G__221212,G__221213,G__221214,G__221215));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__221169,G__221170) : tailrecursion.hoplon.div.call(null,G__221169,G__221170));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__221168) : tailrecursion.hoplon.div.call(null,G__221168));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221072;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221071;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221070;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221069;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_221264 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221265 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221266 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221267 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221268 = cljs.core.PersistentArrayMap.EMPTY;
var G__221269 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Show that under the assumption of small percentage tolerances there is a simple formula for the approximate percentage tolerance of the product of two intervals in terms of the tolerances of the factors. You may simplify the problem by assuming that all numbers are positive."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221268,G__221269) : tailrecursion.hoplon.markdown.para_node.call(null,G__221268,G__221269));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221267;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221266;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221265;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221264;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_221270 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221271 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221272 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221273 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221274 = cljs.core.PersistentArrayMap.EMPTY;
var G__221275 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__221276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__221277 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__221276,G__221277) : tailrecursion.hoplon.markdown.simple_node.call(null,G__221276,G__221277));
})(),"s take two intervals, \\((a-\\epsilon,a+\\epsilon)\\) and \\((b-\\delta,b+\\delta)\\), where \\(a,b\\) and \\(\\epsilon,\\delta\\) are positive numbers and \\(\\epsilon,\\delta\\) are small. Then, the product is given by,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221274,G__221275) : tailrecursion.hoplon.markdown.para_node.call(null,G__221274,G__221275));
})(),(function (){var G__221278 = cljs.core.PersistentArrayMap.EMPTY;
var G__221279 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}&\\left((a-\\epsilon)(b-\\delta),(a+\\epsilon)(b+\\delta)\\right) \\\\=&\\left(ab-a\\delta-b\\epsilon+\\epsilon\\delta,ab+a\\delta+b\\epsilon+\\epsilon\\delta\\right) \\\\=&\\left((ab+\\epsilon\\delta)-(a\\delta+b\\epsilon),(ab+\\epsilon\\delta)+(a\\delta+b\\epsilon)\\right)\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221278,G__221279) : tailrecursion.hoplon.markdown.para_node.call(null,G__221278,G__221279));
})(),(function (){var G__221280 = cljs.core.PersistentArrayMap.EMPTY;
var G__221281 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, we see that the width in question is, \\(a\\delta+b\\epsilon\\), and the center is \\(ab+\\epsilon\\delta\\). Hence, the percentage tolerance is,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221280,G__221281) : tailrecursion.hoplon.markdown.para_node.call(null,G__221280,G__221281));
})(),(function (){var G__221282 = cljs.core.PersistentArrayMap.EMPTY;
var G__221283 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{a\\delta+b\\epsilon}{ab+\\epsilon\\delta}\\approx& \\frac{a\\delta +b\\epsilon}{ab+0} \\\\=&\\frac{a\\delta+b\\epsilon}{ab} \\\\=&\\frac{\\delta}{b}+\\frac{\\epsilon}{a}\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221282,G__221283) : tailrecursion.hoplon.markdown.para_node.call(null,G__221282,G__221283));
})(),(function (){var G__221284 = cljs.core.PersistentArrayMap.EMPTY;
var G__221285 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Which is the sum of the respective percentages."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221284,G__221285) : tailrecursion.hoplon.markdown.para_node.call(null,G__221284,G__221285));
})(),(function (){var G__221286 = cljs.core.PersistentArrayMap.EMPTY;
var G__221287 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, as long as the percentages are small enough for their squares to become negligible, the percentage tolerance of a product of intervals is sum of the percentage tolerances of the two respective intervals."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221286,G__221287) : tailrecursion.hoplon.markdown.para_node.call(null,G__221286,G__221287));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221273;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221272;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221271;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221270;
}})()], 0)),"",(function (){var _STAR_references_STAR_221288 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221289 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221290 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221291 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221292 = cljs.core.PersistentArrayMap.EMPTY;
var G__221293 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["After considerable work, Alyssa P. Hacker delivers her finished system. Several years later, after she has forgotten all about it, she gets a frenzied call from an irate user, Lem E. Tweakit. It seems that Lem has noticed that the formula for parallel resistors can be written in two algebraically equivalent ways:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221292,G__221293) : tailrecursion.hoplon.markdown.para_node.call(null,G__221292,G__221293));
})(),(function (){var G__221294 = cljs.core.PersistentArrayMap.EMPTY;
var G__221295 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{R_1R_2}{R_1+R_2}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221294,G__221295) : tailrecursion.hoplon.markdown.para_node.call(null,G__221294,G__221295));
})(),(function (){var G__221296 = cljs.core.PersistentArrayMap.EMPTY;
var G__221297 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221296,G__221297) : tailrecursion.hoplon.markdown.para_node.call(null,G__221296,G__221297));
})(),(function (){var G__221298 = cljs.core.PersistentArrayMap.EMPTY;
var G__221299 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{1}{1/R_1+1/R_2}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221298,G__221299) : tailrecursion.hoplon.markdown.para_node.call(null,G__221298,G__221299));
})(),(function (){var G__221300 = cljs.core.PersistentArrayMap.EMPTY;
var G__221301 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["He has written the following two programs, each of which computes the parallel-resistors formula differently:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221300,G__221301) : tailrecursion.hoplon.markdown.para_node.call(null,G__221300,G__221301));
})(),(function (){var G__221420 = (function (){var G__221421 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__221422 = (function (){var G__221423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__221424 = "(";
var G__221425 = (function (){var G__221481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__221482 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221481,G__221482) : tailrecursion.hoplon.span.call(null,G__221481,G__221482));
})();
var G__221426 = (function (){var G__221483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221484 = "par1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221483,G__221484) : tailrecursion.hoplon.span.call(null,G__221483,G__221484));
})();
var G__221427 = " [";
var G__221428 = (function (){var G__221485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221486 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221485,G__221486) : tailrecursion.hoplon.span.call(null,G__221485,G__221486));
})();
var G__221429 = " ";
var G__221430 = (function (){var G__221487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221488 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221487,G__221488) : tailrecursion.hoplon.span.call(null,G__221487,G__221488));
})();
var G__221431 = "]\n  (";
var G__221432 = (function (){var G__221489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221490 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221489,G__221490) : tailrecursion.hoplon.span.call(null,G__221489,G__221490));
})();
var G__221433 = " (";
var G__221434 = (function (){var G__221491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221492 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221491,G__221492) : tailrecursion.hoplon.span.call(null,G__221491,G__221492));
})();
var G__221435 = " ";
var G__221436 = (function (){var G__221493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221494 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221493,G__221494) : tailrecursion.hoplon.span.call(null,G__221493,G__221494));
})();
var G__221437 = " ";
var G__221438 = (function (){var G__221495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221496 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221495,G__221496) : tailrecursion.hoplon.span.call(null,G__221495,G__221496));
})();
var G__221439 = ")\n                (";
var G__221440 = (function (){var G__221497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221498 = "add-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221497,G__221498) : tailrecursion.hoplon.span.call(null,G__221497,G__221498));
})();
var G__221441 = " ";
var G__221442 = (function (){var G__221499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221500 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221499,G__221500) : tailrecursion.hoplon.span.call(null,G__221499,G__221500));
})();
var G__221443 = " ";
var G__221444 = (function (){var G__221501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221502 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221501,G__221502) : tailrecursion.hoplon.span.call(null,G__221501,G__221502));
})();
var G__221445 = ")))\n(";
var G__221446 = (function (){var G__221503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__221504 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221503,G__221504) : tailrecursion.hoplon.span.call(null,G__221503,G__221504));
})();
var G__221447 = (function (){var G__221505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221506 = "par2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221505,G__221506) : tailrecursion.hoplon.span.call(null,G__221505,G__221506));
})();
var G__221448 = " [";
var G__221449 = (function (){var G__221507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221508 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221507,G__221508) : tailrecursion.hoplon.span.call(null,G__221507,G__221508));
})();
var G__221450 = " ";
var G__221451 = (function (){var G__221509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221510 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221509,G__221510) : tailrecursion.hoplon.span.call(null,G__221509,G__221510));
})();
var G__221452 = "]\n  (";
var G__221453 = (function (){var G__221511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__221512 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221511,G__221512) : tailrecursion.hoplon.span.call(null,G__221511,G__221512));
})();
var G__221454 = "[";
var G__221455 = (function (){var G__221513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221514 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221513,G__221514) : tailrecursion.hoplon.span.call(null,G__221513,G__221514));
})();
var G__221456 = " (";
var G__221457 = (function (){var G__221515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221516 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221515,G__221516) : tailrecursion.hoplon.span.call(null,G__221515,G__221516));
})();
var G__221458 = " ";
var G__221459 = (function (){var G__221517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__221518 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221517,G__221518) : tailrecursion.hoplon.span.call(null,G__221517,G__221518));
})();
var G__221460 = " ";
var G__221461 = (function (){var G__221519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__221520 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221519,G__221520) : tailrecursion.hoplon.span.call(null,G__221519,G__221520));
})();
var G__221462 = ")]\n    (";
var G__221463 = (function (){var G__221521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221522 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221521,G__221522) : tailrecursion.hoplon.span.call(null,G__221521,G__221522));
})();
var G__221464 = " ";
var G__221465 = (function (){var G__221523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221524 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221523,G__221524) : tailrecursion.hoplon.span.call(null,G__221523,G__221524));
})();
var G__221466 = "\n                  (";
var G__221467 = (function (){var G__221525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221526 = "add-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221525,G__221526) : tailrecursion.hoplon.span.call(null,G__221525,G__221526));
})();
var G__221468 = " (";
var G__221469 = (function (){var G__221527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221528 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221527,G__221528) : tailrecursion.hoplon.span.call(null,G__221527,G__221528));
})();
var G__221470 = " ";
var G__221471 = (function (){var G__221529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221530 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221529,G__221530) : tailrecursion.hoplon.span.call(null,G__221529,G__221530));
})();
var G__221472 = " ";
var G__221473 = (function (){var G__221531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221532 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221531,G__221532) : tailrecursion.hoplon.span.call(null,G__221531,G__221532));
})();
var G__221474 = ")\n                                (";
var G__221475 = (function (){var G__221533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__221534 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221533,G__221534) : tailrecursion.hoplon.span.call(null,G__221533,G__221534));
})();
var G__221476 = " ";
var G__221477 = (function (){var G__221535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221536 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221535,G__221536) : tailrecursion.hoplon.span.call(null,G__221535,G__221536));
})();
var G__221478 = " ";
var G__221479 = (function (){var G__221537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__221538 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__221537,G__221538) : tailrecursion.hoplon.span.call(null,G__221537,G__221538));
})();
var G__221480 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__221423,G__221424,G__221425,G__221426,G__221427,G__221428,G__221429,G__221430,G__221431,G__221432,G__221433,G__221434,G__221435,G__221436,G__221437,G__221438,G__221439,G__221440,G__221441,G__221442,G__221443,G__221444,G__221445,G__221446,G__221447,G__221448,G__221449,G__221450,G__221451,G__221452,G__221453,G__221454,G__221455,G__221456,G__221457,G__221458,G__221459,G__221460,G__221461,G__221462,G__221463,G__221464,G__221465,G__221466,G__221467,G__221468,G__221469,G__221470,G__221471,G__221472,G__221473,G__221474,G__221475,G__221476,G__221477,G__221478,G__221479,G__221480) : tailrecursion.hoplon.pre.call(null,G__221423,G__221424,G__221425,G__221426,G__221427,G__221428,G__221429,G__221430,G__221431,G__221432,G__221433,G__221434,G__221435,G__221436,G__221437,G__221438,G__221439,G__221440,G__221441,G__221442,G__221443,G__221444,G__221445,G__221446,G__221447,G__221448,G__221449,G__221450,G__221451,G__221452,G__221453,G__221454,G__221455,G__221456,G__221457,G__221458,G__221459,G__221460,G__221461,G__221462,G__221463,G__221464,G__221465,G__221466,G__221467,G__221468,G__221469,G__221470,G__221471,G__221472,G__221473,G__221474,G__221475,G__221476,G__221477,G__221478,G__221479,G__221480));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__221421,G__221422) : tailrecursion.hoplon.div.call(null,G__221421,G__221422));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__221420) : tailrecursion.hoplon.div.call(null,G__221420));
})(),(function (){var G__221539 = cljs.core.PersistentArrayMap.EMPTY;
var G__221540 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lem complains that Alyssa",(function (){var G__221541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__221542 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__221541,G__221542) : tailrecursion.hoplon.markdown.simple_node.call(null,G__221541,G__221542));
})(),"s program gives different answers for the two ways of computing. This is a serious complaint."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221539,G__221540) : tailrecursion.hoplon.markdown.para_node.call(null,G__221539,G__221540));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221291;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221290;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221289;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221288;
}})()], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_221543 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221544 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221545 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221546 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221547 = cljs.core.PersistentArrayMap.EMPTY;
var G__221548 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Demonstrate that Lem is right. Investigate the behavior of the system on a variety of arithmetic expressions. Make some intervals A and B, and use them in computing the expressions A/A and A/B. You will get the most insight by using intervals whose width is a small percentage of the center value. Examine the results of the computation in center-percent form (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/ex/12/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.12"], null)], 0)),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221547,G__221548) : tailrecursion.hoplon.markdown.para_node.call(null,G__221547,G__221548));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221546;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221545;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221544;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221543;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_221549 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221550 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221551 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221552 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221553 = cljs.core.PersistentArrayMap.EMPTY;
var G__221554 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If we define \\(A=(29.9,30.1)\\), and \\(B=(49.9,51.1)\\), what happens when we divide \\(A\\) by itself? \\(B\\) by itself? \\(A\\) by \\(B\\)? \\(B\\) by \\(A\\)?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221553,G__221554) : tailrecursion.hoplon.markdown.para_node.call(null,G__221553,G__221554));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221552;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221551;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221550;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221549;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_221555 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221556 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221557 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221558 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221559 = cljs.core.PersistentArrayMap.EMPTY;
var G__221560 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Eva Lu Ator, another user, has also noticed the different intervals computed by different but algebraically equivalent expressions. She says that a formula to compute with intervals using Alyssa",(function (){var G__221561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__221562 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__221561,G__221562) : tailrecursion.hoplon.markdown.simple_node.call(null,G__221561,G__221562));
})(),"s system will produce tighter error bounds if it can be written in such a form that no variable that represents an uncertain number is repeated. Thus, she says, ",(function (){var G__221563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"par2"], null);
var G__221564 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__221563,G__221564) : tailrecursion.hoplon.markdown.code_node.call(null,G__221563,G__221564));
})()," is a ",(function (){var G__221565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__221566 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["better"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__221565,G__221566) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__221565,G__221566));
})()," program for parallel resistances than ",(function (){var G__221567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"par1"], null);
var G__221568 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__221567,G__221568) : tailrecursion.hoplon.markdown.code_node.call(null,G__221567,G__221568));
})(),". Is she right? Why?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221559,G__221560) : tailrecursion.hoplon.markdown.para_node.call(null,G__221559,G__221560));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221558;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221557;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221556;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221555;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_221569 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221570 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221571 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221572 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221573 = cljs.core.PersistentArrayMap.EMPTY;
var G__221574 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["She is correct. The reason is, if we write an equation, \\(\\frac{x+1}{x}\\), for instance, the assumption is that both \\(x\\)s in the equation have the same value. If we do this with the interval arithmetic we",(function (){var G__221575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__221576 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__221575,G__221576) : tailrecursion.hoplon.markdown.simple_node.call(null,G__221575,G__221576));
})(),"ve defined here, that is not necessarily true. ie, if we define \\(A=(2,4)\\) then compute the above formula using our interval arithmetic assuming that \\(x\\) is in the interval \\(A\\), we get"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221573,G__221574) : tailrecursion.hoplon.markdown.para_node.call(null,G__221573,G__221574));
})(),(function (){var G__221577 = cljs.core.PersistentArrayMap.EMPTY;
var G__221578 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{A+1}{A}=&\\frac{(3,5)}{(2.4)} \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221577,G__221578) : tailrecursion.hoplon.markdown.para_node.call(null,G__221577,G__221578));
})(),(function (){var G__221579 = cljs.core.PersistentArrayMap.EMPTY;
var G__221580 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["which is another way of saying, ",(function (){var G__221581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__221582 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the interval obtained by taking any number between 3 and 5 and dividing it by another number between 2 and 4."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__221581,G__221582) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__221581,G__221582));
})()," But then, 3/4, for instance, would be in that interval by letting the numerator be 3 and the denominator be 4. But the problem is, if the numerator is to be 4, then \\(x=2\\), which means the denominator would be 2 as well."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221579,G__221580) : tailrecursion.hoplon.markdown.para_node.call(null,G__221579,G__221580));
})(),(function (){var G__221583 = cljs.core.PersistentArrayMap.EMPTY;
var G__221584 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The issue we",(function (){var G__221585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__221586 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__221585,G__221586) : tailrecursion.hoplon.markdown.simple_node.call(null,G__221585,G__221586));
})(),"re arriving at is that different instances of the same variable can have different values (if we use our current system of interval arithmetic)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221583,G__221584) : tailrecursion.hoplon.markdown.para_node.call(null,G__221583,G__221584));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221572;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221571;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221570;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221569;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_221587 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221588 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221589 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221590 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221591 = cljs.core.PersistentArrayMap.EMPTY;
var G__221592 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Explain, in general, why equivalent algebraic expressions may lead to different answers. Can you devise an interval-arithmetic package that does not have this shortcoming, or is this task impossible? (Warning: This problem is very difficult.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221591,G__221592) : tailrecursion.hoplon.markdown.para_node.call(null,G__221591,G__221592));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221590;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221589;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221588;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221587;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_221593 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221594 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_221595 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_221596 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__221597 = cljs.core.PersistentArrayMap.EMPTY;
var G__221598 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I guess this would depend on what we mean by ",(function (){var G__221599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__221600 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["equivalent"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__221599,G__221600) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__221599,G__221600));
})(),". Already due to what we",(function (){var G__221601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__221602 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__221601,G__221602) : tailrecursion.hoplon.markdown.simple_node.call(null,G__221601,G__221602));
})(),"ve seen in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/15/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.15"], null)], 0)),", very strange things happen algebraically. For instance, our interval arithmetic does not have the distributive property. To show this, just observe that the distributive property states, \\(A(B+C)=AB+AC\\), but since \\(A\\) appears twice on the right hand side and there are no repeated variables on the left, by the previous exercise we know that the left hand side must have ",(function (){var G__221603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__221604 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tighter error bounds"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__221603,G__221604) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__221603,G__221604));
})(),". Hence the two sides cannot be equal unless there is no error in \\(A\\) (in which case \\(A\\) is not an interval, but a number)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221597,G__221598) : tailrecursion.hoplon.markdown.para_node.call(null,G__221597,G__221598));
})(),(function (){var G__221605 = cljs.core.PersistentArrayMap.EMPTY;
var G__221606 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, I",(function (){var G__221607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__221608 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__221607,G__221608) : tailrecursion.hoplon.markdown.simple_node.call(null,G__221607,G__221608));
})(),"m not too sure if this is possible, but when would we use this? If it is an engineering (or scientific) concern, then we are not really interested in intervals, but rather statistical probabilities, in which case we can use some theorems about error propagation to achieve our goal."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__221605,G__221606) : tailrecursion.hoplon.markdown.para_node.call(null,G__221605,G__221606));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221596;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221595;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_221594;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_221593;
}})()], 0))], 0))], 0));
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$22(G__212308,G__212309,G__212310,G__212311,G__212312,G__212313,G__212314,G__212315,G__212316,G__212317,G__212318,G__212319,G__212320,G__212321,G__212322,G__212323,G__212324,G__212325,G__212326,G__212327,G__212328,G__212329) : tailrecursion.hoplon.div.call(null,G__212308,G__212309,G__212310,G__212311,G__212312,G__212313,G__212314,G__212315,G__212316,G__212317,G__212318,G__212319,G__212320,G__212321,G__212322,G__212323,G__212324,G__212325,G__212326,G__212327,G__212328,G__212329));
};
var book$sicp$texts$ch2sect1$content = function (var_args){
var args__8082__auto__ = null;
if (arguments.length > 0) {
var G__221609__i = 0, G__221609__a = new Array(arguments.length -  0);
while (G__221609__i < G__221609__a.length) {G__221609__a[G__221609__i] = arguments[G__221609__i + 0]; ++G__221609__i;}
  args__8082__auto__ = new cljs.core.IndexedSeq(G__221609__a,0);
} 
return book$sicp$texts$ch2sect1$content__delegate.call(this,args__8082__auto__);};
book$sicp$texts$ch2sect1$content.cljs$lang$maxFixedArity = 0;
book$sicp$texts$ch2sect1$content.cljs$lang$applyTo = (function (arglist__221610){
var args__8082__auto__ = cljs.core.seq(arglist__221610);
return book$sicp$texts$ch2sect1$content__delegate(args__8082__auto__);
});
book$sicp$texts$ch2sect1$content.cljs$core$IFn$_invoke$arity$variadic = book$sicp$texts$ch2sect1$content__delegate;
return book$sicp$texts$ch2sect1$content;
})()
;

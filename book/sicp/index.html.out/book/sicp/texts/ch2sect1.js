// Compiled by ClojureScript 1.7.48 {:static-fns true, :optimize-constants true}
goog.provide('book.sicp.texts.ch2sect1');
goog.require('cljs.core');
goog.require('tailrecursion.hoplon.markdown');
goog.require('book.sicp.book_data');
goog.require('tailrecursion.hoplon');
goog.require('tailrecursion.javelin');
/**
 * @param {...*} var_args
 */
book.sicp.texts.ch2sect1.content = (function() { 
var book$sicp$texts$ch2sect1$content__delegate = function (args__8262__auto__){
var vec__193973 = tailrecursion.hoplon.parse_args(args__8262__auto__);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__193973,(0),null);
var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__193973,(1),null);
var G__193974 = cljs.core.PersistentArrayMap.EMPTY;
var G__193975 = book.sicp.book_data.sect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Introduction to Data Abstraction"], null),(function (){var _STAR_references_STAR_193996 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_193997 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_193998 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_193999 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__194000 = cljs.core.PersistentArrayMap.EMPTY;
var G__194001 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/1/sub/8/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.1.8"], null)], 0)),", we noted that a procedure used as an element in creating a more complex procedure could be regarded not only as a collection of particular operations but also as a procedural abstraction. That is, the details of how the procedure was implemented could be suppressed, and the particular procedure itself could be replaced by any other procedure with the same overall behavior. In other words, we could make an abstraction that would separate the way the procedure would be used from the details of how the procedure would be implemented in terms of more primitive procedures. The analogous notion for compound data is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data abstraction"], null)], 0)),". Data abstraction is a methodology that enables us to isolate how a compound data object is used from the details of how it is constructed from more primitive data objects."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194000,G__194001) : tailrecursion.hoplon.markdown.para_node.call(null,G__194000,G__194001));
})(),(function (){var G__194002 = cljs.core.PersistentArrayMap.EMPTY;
var G__194003 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The basic idea of data abstraction is to structure the programs that are to use compound data objects so that they operate on ",(function (){var G__194004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__194005 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstract data."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__194004,G__194005) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__194004,G__194005));
})()," That is, our programs should use data in such a way as to make no assumptions about the data that are not strictly necessary for performing the task at hand. At the same time, a ",(function (){var G__194006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__194007 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["concrete"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__194006,G__194007) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__194006,G__194007));
})()," data representation is defined independent of the programs that use the data. The interface between these two parts of our system will be a set of procedures, called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selectors"], null)], 0))," and ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["constructors"], null)], 0)),", that implement the abstract data in terms of the concrete representation. To illustrate this technique, we will consider how to design a set of procedures for manipulating rational numbers."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194002,G__194003) : tailrecursion.hoplon.markdown.para_node.call(null,G__194002,G__194003));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_193999;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_193998;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_193997;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_193996;
}})()], 0));
var G__193976 = "";
var G__193977 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Example: Arithmetic Operations for Rational Numbers"], null),(function (){var _STAR_references_STAR_194008 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_194009 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_194010 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_194011 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__194012 = cljs.core.PersistentArrayMap.EMPTY;
var G__194013 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Suppose we want to do arithmetic with rational numbers. We want to be able to add, subtract, multiply, and divide them and to test whether two rational numbers are equal."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194012,G__194013) : tailrecursion.hoplon.markdown.para_node.call(null,G__194012,G__194013));
})(),(function (){var G__194014 = cljs.core.PersistentArrayMap.EMPTY;
var G__194015 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let us begin by assuming that we already have a way of constructing a rational number from a numerator and a denominator. We also assume that, given a rational number, we have a way of extracting (or selecting) its numerator and its denominator. Let us further assume that the constructor and selectors are available as procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194014,G__194015) : tailrecursion.hoplon.markdown.para_node.call(null,G__194014,G__194015));
})(),(function (){var G__194016 = cljs.core.PersistentArrayMap.EMPTY;
var G__194017 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__194018 = cljs.core.PersistentArrayMap.EMPTY;
var G__194019 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_194020 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_194021 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__194022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(make-rat <n> <d>)"], null);
var G__194023 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194022,G__194023) : tailrecursion.hoplon.markdown.code_node.call(null,G__194022,G__194023));
})()," returns the rational number whose numerator is the integer ",(function (){var G__194024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<n>"], null);
var G__194025 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194024,G__194025) : tailrecursion.hoplon.markdown.code_node.call(null,G__194024,G__194025));
})()," and whose denominator is the integer ",(function (){var G__194026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<d>"], null);
var G__194027 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194026,G__194027) : tailrecursion.hoplon.markdown.code_node.call(null,G__194026,G__194027));
})(),". - ",(function (){var G__194028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(numer <x>)"], null);
var G__194029 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194028,G__194029) : tailrecursion.hoplon.markdown.code_node.call(null,G__194028,G__194029));
})()," returns the numerator of the rational number ",(function (){var G__194030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<x>"], null);
var G__194031 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194030,G__194031) : tailrecursion.hoplon.markdown.code_node.call(null,G__194030,G__194031));
})(),"."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_194021;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_194020;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__194018,G__194019) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__194018,G__194019));
})(),(function (){var G__194032 = cljs.core.PersistentArrayMap.EMPTY;
var G__194033 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_194034 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_194035 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__194036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(denom <x>)"], null);
var G__194037 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194036,G__194037) : tailrecursion.hoplon.markdown.code_node.call(null,G__194036,G__194037));
})()," returns the denominator of the rational number ",(function (){var G__194038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<x>"], null);
var G__194039 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194038,G__194039) : tailrecursion.hoplon.markdown.code_node.call(null,G__194038,G__194039));
})(),"."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_194035;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_194034;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__194032,G__194033) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__194032,G__194033));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__194016,G__194017) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__194016,G__194017));
})(),(function (){var G__194040 = cljs.core.PersistentArrayMap.EMPTY;
var G__194041 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We are using here a powerful strategy of synthesis: ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["wishful thinking"], null)], 0)),". We haven",(function (){var G__194042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__194043 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__194042,G__194043) : tailrecursion.hoplon.markdown.simple_node.call(null,G__194042,G__194043));
})(),"t yet said how a rational number is represented, or how the procedures ",(function (){var G__194044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__194045 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194044,G__194045) : tailrecursion.hoplon.markdown.code_node.call(null,G__194044,G__194045));
})(),", ",(function (){var G__194046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__194047 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194046,G__194047) : tailrecursion.hoplon.markdown.code_node.call(null,G__194046,G__194047));
})(),", and ",(function (){var G__194048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__194049 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194048,G__194049) : tailrecursion.hoplon.markdown.code_node.call(null,G__194048,G__194049));
})()," should be implemented. Even so, if we did have these three procedures, we could then add, subtract, multiply, divide, and test equality by using the following relations:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194040,G__194041) : tailrecursion.hoplon.markdown.para_node.call(null,G__194040,G__194041));
})(),(function (){var G__194050 = cljs.core.PersistentArrayMap.EMPTY;
var G__194051 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{n_1}{d_1}+\\frac{n_2}{d_2}=&\\frac{n_1d_2+n_2d_1}{d_1d_2} \\\\\\frac{n_1}{d_1}-\\frac{n_2}{d_2}=&\\frac{n_1d_2-n_2d_1}{d_1d_2} \\\\\\frac{n_1}{d_1}\\cdot\\frac{n_2}{d_2}=&\\frac{n_1n_2}{d_1d_2} \\\\\\frac{n_1}{d_1}/\\frac{n_2}{d_2}=&\\frac{n_1d_2}{n_2d_1} \\\\\\frac{n_1}{d_1}=\\frac{n_2}{d_2}\\iff& n_1d_2=n_2d_1\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194050,G__194051) : tailrecursion.hoplon.markdown.para_node.call(null,G__194050,G__194051));
})(),(function (){var G__194052 = cljs.core.PersistentArrayMap.EMPTY;
var G__194053 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can express these rules as procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194052,G__194053) : tailrecursion.hoplon.markdown.para_node.call(null,G__194052,G__194053));
})(),(function (){var G__194413 = (function (){var G__194414 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__194415 = (function (){var G__194416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__194417 = "(";
var G__194418 = (function (){var G__194591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194592 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194591,G__194592) : tailrecursion.hoplon.span.call(null,G__194591,G__194592));
})();
var G__194419 = (function (){var G__194593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194594 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194593,G__194594) : tailrecursion.hoplon.span.call(null,G__194593,G__194594));
})();
var G__194420 = " [";
var G__194421 = (function (){var G__194595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194596 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194595,G__194596) : tailrecursion.hoplon.span.call(null,G__194595,G__194596));
})();
var G__194422 = " ";
var G__194423 = (function (){var G__194597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194598 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194597,G__194598) : tailrecursion.hoplon.span.call(null,G__194597,G__194598));
})();
var G__194424 = "]\n  (";
var G__194425 = (function (){var G__194599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194600 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194599,G__194600) : tailrecursion.hoplon.span.call(null,G__194599,G__194600));
})();
var G__194426 = " (";
var G__194427 = (function (){var G__194601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194602 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194601,G__194602) : tailrecursion.hoplon.span.call(null,G__194601,G__194602));
})();
var G__194428 = "(";
var G__194429 = (function (){var G__194603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194604 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194603,G__194604) : tailrecursion.hoplon.span.call(null,G__194603,G__194604));
})();
var G__194430 = "(";
var G__194431 = (function (){var G__194605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194606 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194605,G__194606) : tailrecursion.hoplon.span.call(null,G__194605,G__194606));
})();
var G__194432 = " ";
var G__194433 = (function (){var G__194607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194608 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194607,G__194608) : tailrecursion.hoplon.span.call(null,G__194607,G__194608));
})();
var G__194434 = ") (";
var G__194435 = (function (){var G__194609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194610 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194609,G__194610) : tailrecursion.hoplon.span.call(null,G__194609,G__194610));
})();
var G__194436 = (function (){var G__194611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194612 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194611,G__194612) : tailrecursion.hoplon.span.call(null,G__194611,G__194612));
})();
var G__194437 = " ";
var G__194438 = (function (){var G__194613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194614 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194613,G__194614) : tailrecursion.hoplon.span.call(null,G__194613,G__194614));
})();
var G__194439 = "))\n               (";
var G__194440 = (function (){var G__194615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194616 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194615,G__194616) : tailrecursion.hoplon.span.call(null,G__194615,G__194616));
})();
var G__194441 = "(";
var G__194442 = (function (){var G__194617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194618 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194617,G__194618) : tailrecursion.hoplon.span.call(null,G__194617,G__194618));
})();
var G__194443 = " ";
var G__194444 = (function (){var G__194619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194620 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194619,G__194620) : tailrecursion.hoplon.span.call(null,G__194619,G__194620));
})();
var G__194445 = ") (";
var G__194446 = (function (){var G__194621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194622 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194621,G__194622) : tailrecursion.hoplon.span.call(null,G__194621,G__194622));
})();
var G__194447 = (function (){var G__194623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194624 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194623,G__194624) : tailrecursion.hoplon.span.call(null,G__194623,G__194624));
})();
var G__194448 = " ";
var G__194449 = (function (){var G__194625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194626 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194625,G__194626) : tailrecursion.hoplon.span.call(null,G__194625,G__194626));
})();
var G__194450 = ")))\n            (";
var G__194451 = (function (){var G__194627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194628 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194627,G__194628) : tailrecursion.hoplon.span.call(null,G__194627,G__194628));
})();
var G__194452 = "(";
var G__194453 = (function (){var G__194629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194630 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194629,G__194630) : tailrecursion.hoplon.span.call(null,G__194629,G__194630));
})();
var G__194454 = " ";
var G__194455 = (function (){var G__194631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194632 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194631,G__194632) : tailrecursion.hoplon.span.call(null,G__194631,G__194632));
})();
var G__194456 = ") (";
var G__194457 = (function (){var G__194633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194634 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194633,G__194634) : tailrecursion.hoplon.span.call(null,G__194633,G__194634));
})();
var G__194458 = " ";
var G__194459 = (function (){var G__194635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194636 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194635,G__194636) : tailrecursion.hoplon.span.call(null,G__194635,G__194636));
})();
var G__194460 = "))))\n(";
var G__194461 = (function (){var G__194637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194638 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194637,G__194638) : tailrecursion.hoplon.span.call(null,G__194637,G__194638));
})();
var G__194462 = (function (){var G__194639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194640 = "sub-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194639,G__194640) : tailrecursion.hoplon.span.call(null,G__194639,G__194640));
})();
var G__194463 = " [";
var G__194464 = (function (){var G__194641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194642 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194641,G__194642) : tailrecursion.hoplon.span.call(null,G__194641,G__194642));
})();
var G__194465 = " ";
var G__194466 = (function (){var G__194643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194644 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194643,G__194644) : tailrecursion.hoplon.span.call(null,G__194643,G__194644));
})();
var G__194467 = "]\n  (";
var G__194468 = (function (){var G__194645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194646 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194645,G__194646) : tailrecursion.hoplon.span.call(null,G__194645,G__194646));
})();
var G__194469 = " (";
var G__194470 = (function (){var G__194647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194648 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194647,G__194648) : tailrecursion.hoplon.span.call(null,G__194647,G__194648));
})();
var G__194471 = "(";
var G__194472 = (function (){var G__194649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194650 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194649,G__194650) : tailrecursion.hoplon.span.call(null,G__194649,G__194650));
})();
var G__194473 = "(";
var G__194474 = (function (){var G__194651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194652 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194651,G__194652) : tailrecursion.hoplon.span.call(null,G__194651,G__194652));
})();
var G__194475 = " ";
var G__194476 = (function (){var G__194653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194654 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194653,G__194654) : tailrecursion.hoplon.span.call(null,G__194653,G__194654));
})();
var G__194477 = ") (";
var G__194478 = (function (){var G__194655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194656 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194655,G__194656) : tailrecursion.hoplon.span.call(null,G__194655,G__194656));
})();
var G__194479 = (function (){var G__194657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194658 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194657,G__194658) : tailrecursion.hoplon.span.call(null,G__194657,G__194658));
})();
var G__194480 = " ";
var G__194481 = (function (){var G__194659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194660 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194659,G__194660) : tailrecursion.hoplon.span.call(null,G__194659,G__194660));
})();
var G__194482 = "))\n               (";
var G__194483 = (function (){var G__194661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194662 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194661,G__194662) : tailrecursion.hoplon.span.call(null,G__194661,G__194662));
})();
var G__194484 = "(";
var G__194485 = (function (){var G__194663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194664 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194663,G__194664) : tailrecursion.hoplon.span.call(null,G__194663,G__194664));
})();
var G__194486 = " ";
var G__194487 = (function (){var G__194665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194666 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194665,G__194666) : tailrecursion.hoplon.span.call(null,G__194665,G__194666));
})();
var G__194488 = ") (";
var G__194489 = (function (){var G__194667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194668 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194667,G__194668) : tailrecursion.hoplon.span.call(null,G__194667,G__194668));
})();
var G__194490 = (function (){var G__194669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194670 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194669,G__194670) : tailrecursion.hoplon.span.call(null,G__194669,G__194670));
})();
var G__194491 = " ";
var G__194492 = (function (){var G__194671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194672 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194671,G__194672) : tailrecursion.hoplon.span.call(null,G__194671,G__194672));
})();
var G__194493 = ")))\n            (";
var G__194494 = (function (){var G__194673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194674 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194673,G__194674) : tailrecursion.hoplon.span.call(null,G__194673,G__194674));
})();
var G__194495 = "(";
var G__194496 = (function (){var G__194675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194676 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194675,G__194676) : tailrecursion.hoplon.span.call(null,G__194675,G__194676));
})();
var G__194497 = " ";
var G__194498 = (function (){var G__194677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194678 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194677,G__194678) : tailrecursion.hoplon.span.call(null,G__194677,G__194678));
})();
var G__194499 = ") (";
var G__194500 = (function (){var G__194679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194680 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194679,G__194680) : tailrecursion.hoplon.span.call(null,G__194679,G__194680));
})();
var G__194501 = " ";
var G__194502 = (function (){var G__194681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194682 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194681,G__194682) : tailrecursion.hoplon.span.call(null,G__194681,G__194682));
})();
var G__194503 = "))))\n(";
var G__194504 = (function (){var G__194683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194684 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194683,G__194684) : tailrecursion.hoplon.span.call(null,G__194683,G__194684));
})();
var G__194505 = (function (){var G__194685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194686 = "mul-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194685,G__194686) : tailrecursion.hoplon.span.call(null,G__194685,G__194686));
})();
var G__194506 = " [";
var G__194507 = (function (){var G__194687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194688 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194687,G__194688) : tailrecursion.hoplon.span.call(null,G__194687,G__194688));
})();
var G__194508 = " ";
var G__194509 = (function (){var G__194689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194690 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194689,G__194690) : tailrecursion.hoplon.span.call(null,G__194689,G__194690));
})();
var G__194510 = "]\n  (";
var G__194511 = (function (){var G__194691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194692 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194691,G__194692) : tailrecursion.hoplon.span.call(null,G__194691,G__194692));
})();
var G__194512 = " (";
var G__194513 = (function (){var G__194693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194694 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194693,G__194694) : tailrecursion.hoplon.span.call(null,G__194693,G__194694));
})();
var G__194514 = "(";
var G__194515 = (function (){var G__194695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194696 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194695,G__194696) : tailrecursion.hoplon.span.call(null,G__194695,G__194696));
})();
var G__194516 = " ";
var G__194517 = (function (){var G__194697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194698 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194697,G__194698) : tailrecursion.hoplon.span.call(null,G__194697,G__194698));
})();
var G__194518 = ") (";
var G__194519 = (function (){var G__194699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194700 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194699,G__194700) : tailrecursion.hoplon.span.call(null,G__194699,G__194700));
})();
var G__194520 = " ";
var G__194521 = (function (){var G__194701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194702 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194701,G__194702) : tailrecursion.hoplon.span.call(null,G__194701,G__194702));
})();
var G__194522 = "))\n            (";
var G__194523 = (function (){var G__194703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194704 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194703,G__194704) : tailrecursion.hoplon.span.call(null,G__194703,G__194704));
})();
var G__194524 = "(";
var G__194525 = (function (){var G__194705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194706 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194705,G__194706) : tailrecursion.hoplon.span.call(null,G__194705,G__194706));
})();
var G__194526 = " ";
var G__194527 = (function (){var G__194707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194708 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194707,G__194708) : tailrecursion.hoplon.span.call(null,G__194707,G__194708));
})();
var G__194528 = ") (";
var G__194529 = (function (){var G__194709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194710 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194709,G__194710) : tailrecursion.hoplon.span.call(null,G__194709,G__194710));
})();
var G__194530 = " ";
var G__194531 = (function (){var G__194711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194712 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194711,G__194712) : tailrecursion.hoplon.span.call(null,G__194711,G__194712));
})();
var G__194532 = "))))\n(";
var G__194533 = (function (){var G__194713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194714 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194713,G__194714) : tailrecursion.hoplon.span.call(null,G__194713,G__194714));
})();
var G__194534 = (function (){var G__194715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194716 = "div-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194715,G__194716) : tailrecursion.hoplon.span.call(null,G__194715,G__194716));
})();
var G__194535 = " [";
var G__194536 = (function (){var G__194717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194718 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194717,G__194718) : tailrecursion.hoplon.span.call(null,G__194717,G__194718));
})();
var G__194537 = " ";
var G__194538 = (function (){var G__194719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194720 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194719,G__194720) : tailrecursion.hoplon.span.call(null,G__194719,G__194720));
})();
var G__194539 = "]\n  (";
var G__194540 = (function (){var G__194721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194722 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194721,G__194722) : tailrecursion.hoplon.span.call(null,G__194721,G__194722));
})();
var G__194541 = " (";
var G__194542 = (function (){var G__194723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194724 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194723,G__194724) : tailrecursion.hoplon.span.call(null,G__194723,G__194724));
})();
var G__194543 = "(";
var G__194544 = (function (){var G__194725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194726 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194725,G__194726) : tailrecursion.hoplon.span.call(null,G__194725,G__194726));
})();
var G__194545 = " ";
var G__194546 = (function (){var G__194727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194728 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194727,G__194728) : tailrecursion.hoplon.span.call(null,G__194727,G__194728));
})();
var G__194547 = ") (";
var G__194548 = (function (){var G__194729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194730 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194729,G__194730) : tailrecursion.hoplon.span.call(null,G__194729,G__194730));
})();
var G__194549 = " ";
var G__194550 = (function (){var G__194731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194732 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194731,G__194732) : tailrecursion.hoplon.span.call(null,G__194731,G__194732));
})();
var G__194551 = "))\n            (";
var G__194552 = (function (){var G__194733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194734 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194733,G__194734) : tailrecursion.hoplon.span.call(null,G__194733,G__194734));
})();
var G__194553 = "(";
var G__194554 = (function (){var G__194735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194736 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194735,G__194736) : tailrecursion.hoplon.span.call(null,G__194735,G__194736));
})();
var G__194555 = " ";
var G__194556 = (function (){var G__194737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194738 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194737,G__194738) : tailrecursion.hoplon.span.call(null,G__194737,G__194738));
})();
var G__194557 = ") (";
var G__194558 = (function (){var G__194739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194740 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194739,G__194740) : tailrecursion.hoplon.span.call(null,G__194739,G__194740));
})();
var G__194559 = " ";
var G__194560 = (function (){var G__194741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194742 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194741,G__194742) : tailrecursion.hoplon.span.call(null,G__194741,G__194742));
})();
var G__194561 = "))))\n(";
var G__194562 = (function (){var G__194743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194744 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194743,G__194744) : tailrecursion.hoplon.span.call(null,G__194743,G__194744));
})();
var G__194563 = (function (){var G__194745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194746 = "equal-rat?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194745,G__194746) : tailrecursion.hoplon.span.call(null,G__194745,G__194746));
})();
var G__194564 = " [";
var G__194565 = (function (){var G__194747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194748 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194747,G__194748) : tailrecursion.hoplon.span.call(null,G__194747,G__194748));
})();
var G__194566 = " ";
var G__194567 = (function (){var G__194749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194750 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194749,G__194750) : tailrecursion.hoplon.span.call(null,G__194749,G__194750));
})();
var G__194568 = "]\n  (";
var G__194569 = (function (){var G__194751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194752 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194751,G__194752) : tailrecursion.hoplon.span.call(null,G__194751,G__194752));
})();
var G__194570 = "(";
var G__194571 = (function (){var G__194753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194754 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194753,G__194754) : tailrecursion.hoplon.span.call(null,G__194753,G__194754));
})();
var G__194572 = "(";
var G__194573 = (function (){var G__194755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194756 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194755,G__194756) : tailrecursion.hoplon.span.call(null,G__194755,G__194756));
})();
var G__194574 = " ";
var G__194575 = (function (){var G__194757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194758 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194757,G__194758) : tailrecursion.hoplon.span.call(null,G__194757,G__194758));
})();
var G__194576 = ") (";
var G__194577 = (function (){var G__194759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194760 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194759,G__194760) : tailrecursion.hoplon.span.call(null,G__194759,G__194760));
})();
var G__194578 = " ";
var G__194579 = (function (){var G__194761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194762 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194761,G__194762) : tailrecursion.hoplon.span.call(null,G__194761,G__194762));
})();
var G__194580 = "))\n     (";
var G__194581 = (function (){var G__194763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194764 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194763,G__194764) : tailrecursion.hoplon.span.call(null,G__194763,G__194764));
})();
var G__194582 = "(";
var G__194583 = (function (){var G__194765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194766 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194765,G__194766) : tailrecursion.hoplon.span.call(null,G__194765,G__194766));
})();
var G__194584 = " ";
var G__194585 = (function (){var G__194767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194768 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194767,G__194768) : tailrecursion.hoplon.span.call(null,G__194767,G__194768));
})();
var G__194586 = ") (";
var G__194587 = (function (){var G__194769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194770 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194769,G__194770) : tailrecursion.hoplon.span.call(null,G__194769,G__194770));
})();
var G__194588 = " ";
var G__194589 = (function (){var G__194771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194772 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194771,G__194772) : tailrecursion.hoplon.span.call(null,G__194771,G__194772));
})();
var G__194590 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$175 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$175(G__194416,G__194417,G__194418,G__194419,G__194420,G__194421,G__194422,G__194423,G__194424,G__194425,G__194426,G__194427,G__194428,G__194429,G__194430,G__194431,G__194432,G__194433,G__194434,G__194435,G__194436,G__194437,G__194438,G__194439,G__194440,G__194441,G__194442,G__194443,G__194444,G__194445,G__194446,G__194447,G__194448,G__194449,G__194450,G__194451,G__194452,G__194453,G__194454,G__194455,G__194456,G__194457,G__194458,G__194459,G__194460,G__194461,G__194462,G__194463,G__194464,G__194465,G__194466,G__194467,G__194468,G__194469,G__194470,G__194471,G__194472,G__194473,G__194474,G__194475,G__194476,G__194477,G__194478,G__194479,G__194480,G__194481,G__194482,G__194483,G__194484,G__194485,G__194486,G__194487,G__194488,G__194489,G__194490,G__194491,G__194492,G__194493,G__194494,G__194495,G__194496,G__194497,G__194498,G__194499,G__194500,G__194501,G__194502,G__194503,G__194504,G__194505,G__194506,G__194507,G__194508,G__194509,G__194510,G__194511,G__194512,G__194513,G__194514,G__194515,G__194516,G__194517,G__194518,G__194519,G__194520,G__194521,G__194522,G__194523,G__194524,G__194525,G__194526,G__194527,G__194528,G__194529,G__194530,G__194531,G__194532,G__194533,G__194534,G__194535,G__194536,G__194537,G__194538,G__194539,G__194540,G__194541,G__194542,G__194543,G__194544,G__194545,G__194546,G__194547,G__194548,G__194549,G__194550,G__194551,G__194552,G__194553,G__194554,G__194555,G__194556,G__194557,G__194558,G__194559,G__194560,G__194561,G__194562,G__194563,G__194564,G__194565,G__194566,G__194567,G__194568,G__194569,G__194570,G__194571,G__194572,G__194573,G__194574,G__194575,G__194576,G__194577,G__194578,G__194579,G__194580,G__194581,G__194582,G__194583,G__194584,G__194585,G__194586,G__194587,G__194588,G__194589,G__194590) : tailrecursion.hoplon.pre.call(null,G__194416,G__194417,G__194418,G__194419,G__194420,G__194421,G__194422,G__194423,G__194424,G__194425,G__194426,G__194427,G__194428,G__194429,G__194430,G__194431,G__194432,G__194433,G__194434,G__194435,G__194436,G__194437,G__194438,G__194439,G__194440,G__194441,G__194442,G__194443,G__194444,G__194445,G__194446,G__194447,G__194448,G__194449,G__194450,G__194451,G__194452,G__194453,G__194454,G__194455,G__194456,G__194457,G__194458,G__194459,G__194460,G__194461,G__194462,G__194463,G__194464,G__194465,G__194466,G__194467,G__194468,G__194469,G__194470,G__194471,G__194472,G__194473,G__194474,G__194475,G__194476,G__194477,G__194478,G__194479,G__194480,G__194481,G__194482,G__194483,G__194484,G__194485,G__194486,G__194487,G__194488,G__194489,G__194490,G__194491,G__194492,G__194493,G__194494,G__194495,G__194496,G__194497,G__194498,G__194499,G__194500,G__194501,G__194502,G__194503,G__194504,G__194505,G__194506,G__194507,G__194508,G__194509,G__194510,G__194511,G__194512,G__194513,G__194514,G__194515,G__194516,G__194517,G__194518,G__194519,G__194520,G__194521,G__194522,G__194523,G__194524,G__194525,G__194526,G__194527,G__194528,G__194529,G__194530,G__194531,G__194532,G__194533,G__194534,G__194535,G__194536,G__194537,G__194538,G__194539,G__194540,G__194541,G__194542,G__194543,G__194544,G__194545,G__194546,G__194547,G__194548,G__194549,G__194550,G__194551,G__194552,G__194553,G__194554,G__194555,G__194556,G__194557,G__194558,G__194559,G__194560,G__194561,G__194562,G__194563,G__194564,G__194565,G__194566,G__194567,G__194568,G__194569,G__194570,G__194571,G__194572,G__194573,G__194574,G__194575,G__194576,G__194577,G__194578,G__194579,G__194580,G__194581,G__194582,G__194583,G__194584,G__194585,G__194586,G__194587,G__194588,G__194589,G__194590));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__194414,G__194415) : tailrecursion.hoplon.div.call(null,G__194414,G__194415));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__194413) : tailrecursion.hoplon.div.call(null,G__194413));
})(),(function (){var G__194773 = cljs.core.PersistentArrayMap.EMPTY;
var G__194774 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we have the operations on rational numbers defined in terms of the selector and constructor procedures ",(function (){var G__194775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__194776 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194775,G__194776) : tailrecursion.hoplon.markdown.code_node.call(null,G__194775,G__194776));
})(),", ",(function (){var G__194777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__194778 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194777,G__194778) : tailrecursion.hoplon.markdown.code_node.call(null,G__194777,G__194778));
})(),", and ",(function (){var G__194779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__194780 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194779,G__194780) : tailrecursion.hoplon.markdown.code_node.call(null,G__194779,G__194780));
})(),". But we haven",(function (){var G__194781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__194782 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__194781,G__194782) : tailrecursion.hoplon.markdown.simple_node.call(null,G__194781,G__194782));
})(),"t yet defined these. What we need is some way to glue together a numerator and a denominator to form a rational number."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194773,G__194774) : tailrecursion.hoplon.markdown.para_node.call(null,G__194773,G__194774));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_194011;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_194010;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_194009;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_194008;
}})()], 0));
var G__193978 = "";
var G__193979 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Pairs (or Lists, for Us)"], null),(function (){var _STAR_references_STAR_194783 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_194784 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_194785 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_194786 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__194787 = cljs.core.PersistentArrayMap.EMPTY;
var G__194788 = cljs.core.PersistentVector.fromArray(["To enable us to implement the concrete level of our data abstraction, our language provides a compound structure abstraction called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sequential object"], null)], 0)),". These sequential objects are really just anything that has a concept of a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["first"], null)], 0))," item and a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["rest"], null)], 0))," of the items. Hence, a sequential object is any object which allows use of the ",(function (){var G__194789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__194790 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194789,G__194790) : tailrecursion.hoplon.markdown.code_node.call(null,G__194789,G__194790));
})()," and ",(function (){var G__194791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__194792 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194791,G__194792) : tailrecursion.hoplon.markdown.code_node.call(null,G__194791,G__194792));
})()," protocols (kind of like procedures, except their actual execution may be different from data type to data type). One example of a sequential object ",(function (){var G__194793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__194794 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__194793,G__194794) : tailrecursion.hoplon.markdown.simple_node.call(null,G__194793,G__194794));
})()," the one we will be using instead of the ",(function (){var G__194795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__194796 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pairs"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__194795,G__194796) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__194795,G__194796));
})()," they use for this section in Scheme ",(function (){var G__194797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__194798 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__194797,G__194798) : tailrecursion.hoplon.markdown.simple_node.call(null,G__194797,G__194798));
})()," is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["list"], null)], 0)),". Lists can be constructed via the procedure ",(function (){var G__194799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__194800 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194799,G__194800) : tailrecursion.hoplon.markdown.code_node.call(null,G__194799,G__194800));
})()," like so ",(function (){var G__194801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(list 1 2 3)"], null);
var G__194802 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194801,G__194802) : tailrecursion.hoplon.markdown.code_node.call(null,G__194801,G__194802));
})()," gives you a list containing 1, 2, and 3 as its elements. So ",(function (){var G__194803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first (list 1 2 3))"], null);
var G__194804 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194803,G__194804) : tailrecursion.hoplon.markdown.code_node.call(null,G__194803,G__194804));
})()," would return ",(function (){var G__194805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"1"], null);
var G__194806 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194805,G__194806) : tailrecursion.hoplon.markdown.code_node.call(null,G__194805,G__194806));
})(),", and ",(function (){var G__194807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(rest (list 1 2 3))"], null);
var G__194808 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194807,G__194808) : tailrecursion.hoplon.markdown.code_node.call(null,G__194807,G__194808));
})()," returns ",(function (){var G__194809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(2 3)"], null);
var G__194810 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194809,G__194810) : tailrecursion.hoplon.markdown.code_node.call(null,G__194809,G__194810));
})(),", which is to say the list containing 2 and 3 as its elements. To check if what we",(function (){var G__194811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__194812 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__194811,G__194812) : tailrecursion.hoplon.markdown.simple_node.call(null,G__194811,G__194812));
})(),"ve been given is indeed a list, we can use the procedure ",(function (){var G__194813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list?"], null);
var G__194814 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194813,G__194814) : tailrecursion.hoplon.markdown.code_node.call(null,G__194813,G__194814));
})()," like so: ",(function (){var G__194815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(list? (rest (list 1 2 3)))"], null);
var G__194816 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194815,G__194816) : tailrecursion.hoplon.markdown.code_node.call(null,G__194815,G__194816));
})(),". Lists are actually made via pairs (as will be described later in this section), but all of that is under the hood. Lists can also be constructed from old lists with the procedure ",(function (){var G__194817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__194818 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194817,G__194818) : tailrecursion.hoplon.markdown.code_node.call(null,G__194817,G__194818));
})(),".",(function (){var G__194819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__194820 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We should note that since these lists are immutable, the only way to ",(function (){var G__194821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__194822 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["edit"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__194821,G__194822) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__194821,G__194822));
})()," a list would be to create a new one with the desired changes and then destroy the old one. While this may seem unfortunate at first, it is actually quite a desireable feature when dealing with concurrency."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__194819,G__194820) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__194819,G__194820));
})()," This procedure takes two or more arguments, a sequential object and any number of values to append to the sequential object, then returns a sequential object of the same type with the values appended in whatever method appropriate to that sequential object in the order they appear. We will see later that lists are constructed in such a way that prepending is very cheap, so ",(function (){var G__194823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__194824 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194823,G__194824) : tailrecursion.hoplon.markdown.code_node.call(null,G__194823,G__194824));
})()," does exactly that. Hence, ",(function (){var G__194825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(conj (list 1 2 3) 4)"], null);
var G__194826 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194825,G__194826) : tailrecursion.hoplon.markdown.code_node.call(null,G__194825,G__194826));
})()," returns ",(function (){var G__194827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(4 1\n2 3)"], null);
var G__194828 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194827,G__194828) : tailrecursion.hoplon.markdown.code_node.call(null,G__194827,G__194828));
})(),", and ",(function (){var G__194829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(conj (list 1 2 3) 4 5)"], null);
var G__194830 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194829,G__194830) : tailrecursion.hoplon.markdown.code_node.call(null,G__194829,G__194830));
})()," returns ",(function (){var G__194831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(5 4 1 2 3)"], null);
var G__194832 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194831,G__194832) : tailrecursion.hoplon.markdown.code_node.call(null,G__194831,G__194832));
})()," (remember that they are prepended in the order they appear!)."], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194787,G__194788) : tailrecursion.hoplon.markdown.para_node.call(null,G__194787,G__194788));
})(),(function (){var G__194833 = cljs.core.PersistentArrayMap.EMPTY;
var G__194834 = new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In Scheme, however, their building block is the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pair"], null)], 0)),", wich can be constructed via the primitive procedure ",(function (){var G__194835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__194836 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194835,G__194836) : tailrecursion.hoplon.markdown.code_node.call(null,G__194835,G__194836));
})()," (which also works in Clojure",(function (){var G__194837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__194838 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__194837,G__194838) : tailrecursion.hoplon.markdown.simple_node.call(null,G__194837,G__194838));
})()," kinda) and has procedures ",(function (){var G__194839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__194840 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194839,G__194840) : tailrecursion.hoplon.markdown.code_node.call(null,G__194839,G__194840));
})()," and ",(function (){var G__194841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__194842 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194841,G__194842) : tailrecursion.hoplon.markdown.code_node.call(null,G__194841,G__194842));
})()," for obtaining the first and second values of the pair respectively.",(function (){var G__194843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__194844 = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The name ",(function (){var G__194845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__194846 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194845,G__194846) : tailrecursion.hoplon.markdown.code_node.call(null,G__194845,G__194846));
})()," stands for ",(function (){var G__194847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__194848 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["construct."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__194847,G__194848) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__194847,G__194848));
})()," The names ",(function (){var G__194849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__194850 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194849,G__194850) : tailrecursion.hoplon.markdown.code_node.call(null,G__194849,G__194850));
})()," and ",(function (){var G__194851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__194852 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194851,G__194852) : tailrecursion.hoplon.markdown.code_node.call(null,G__194851,G__194852));
})()," derive from the original implementation of Lisp on the IBM 704. That machine had an addressing scheme that allowed one to reference the ",(function (){var G__194853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__194854 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["address"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__194853,G__194854) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__194853,G__194854));
})()," and ",(function (){var G__194855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__194856 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["decrement"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__194855,G__194856) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__194855,G__194856));
})()," parts of a memory location. ",(function (){var G__194857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__194858 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194857,G__194858) : tailrecursion.hoplon.markdown.code_node.call(null,G__194857,G__194858));
})()," stands for ",(function (){var G__194859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__194860 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Contents of Address part of Register"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__194859,G__194860) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__194859,G__194860));
})()," and ",(function (){var G__194861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__194862 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194861,G__194862) : tailrecursion.hoplon.markdown.code_node.call(null,G__194861,G__194862));
})()," (pronounced ",(function (){var G__194863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__194864 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["could-er"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__194863,G__194864) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__194863,G__194864));
})(),") stands for ",(function (){var G__194865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__194866 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Contents of Decrement part of Register."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__194865,G__194866) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__194865,G__194866));
})()], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__194843,G__194844) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__194843,G__194844));
})()," Thus, we in Scheme, we would be able to use ",(function (){var G__194867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__194868 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194867,G__194868) : tailrecursion.hoplon.markdown.code_node.call(null,G__194867,G__194868));
})(),", ",(function (){var G__194869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__194870 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194869,G__194870) : tailrecursion.hoplon.markdown.code_node.call(null,G__194869,G__194870));
})(),", and ",(function (){var G__194871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__194872 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194871,G__194872) : tailrecursion.hoplon.markdown.code_node.call(null,G__194871,G__194872));
})()," as follows: "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194833,G__194834) : tailrecursion.hoplon.markdown.para_node.call(null,G__194833,G__194834));
})(),(function (){var G__194895 = (function (){var G__194896 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__194897 = (function (){var G__194898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__194899 = "(";
var G__194900 = (function (){var G__194908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194909 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194908,G__194909) : tailrecursion.hoplon.span.call(null,G__194908,G__194909));
})();
var G__194901 = (function (){var G__194910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194911 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194910,G__194911) : tailrecursion.hoplon.span.call(null,G__194910,G__194911));
})();
var G__194902 = " (";
var G__194903 = (function (){var G__194912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194913 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194912,G__194913) : tailrecursion.hoplon.span.call(null,G__194912,G__194913));
})();
var G__194904 = (function (){var G__194914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__194915 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194914,G__194915) : tailrecursion.hoplon.span.call(null,G__194914,G__194915));
})();
var G__194905 = " ";
var G__194906 = (function (){var G__194916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__194917 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194916,G__194917) : tailrecursion.hoplon.span.call(null,G__194916,G__194917));
})();
var G__194907 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10(G__194898,G__194899,G__194900,G__194901,G__194902,G__194903,G__194904,G__194905,G__194906,G__194907) : tailrecursion.hoplon.pre.call(null,G__194898,G__194899,G__194900,G__194901,G__194902,G__194903,G__194904,G__194905,G__194906,G__194907));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__194896,G__194897) : tailrecursion.hoplon.div.call(null,G__194896,G__194897));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__194895) : tailrecursion.hoplon.div.call(null,G__194895));
})(),(function (){var G__194918 = cljs.core.PersistentArrayMap.EMPTY;
var G__194919 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Go ahead and try this in Clojure (can you translate that?)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194918,G__194919) : tailrecursion.hoplon.markdown.para_node.call(null,G__194918,G__194919));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_194786;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_194785;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_194784;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_194783;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,"```clj\n(def x (cons 1 2))\n```"], 0)),"",(function (){var _STAR_references_STAR_194920 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_194921 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_194922 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_194923 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__194924 = cljs.core.PersistentArrayMap.EMPTY;
var G__194925 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If you tried the previous example. you probably got an error. That is because Clojure implements ",(function (){var G__194926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__194927 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194926,G__194927) : tailrecursion.hoplon.markdown.code_node.call(null,G__194926,G__194927));
})()," differently. If we try "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194924,G__194925) : tailrecursion.hoplon.markdown.para_node.call(null,G__194924,G__194925));
})(),(function (){var G__194957 = (function (){var G__194958 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__194959 = (function (){var G__194960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__194961 = "(";
var G__194962 = (function (){var G__194973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194974 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194973,G__194974) : tailrecursion.hoplon.span.call(null,G__194973,G__194974));
})();
var G__194963 = (function (){var G__194975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194976 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194975,G__194976) : tailrecursion.hoplon.span.call(null,G__194975,G__194976));
})();
var G__194964 = " (";
var G__194965 = (function (){var G__194977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194978 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194977,G__194978) : tailrecursion.hoplon.span.call(null,G__194977,G__194978));
})();
var G__194966 = (function (){var G__194979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__194980 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194979,G__194980) : tailrecursion.hoplon.span.call(null,G__194979,G__194980));
})();
var G__194967 = " (";
var G__194968 = (function (){var G__194981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194982 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194981,G__194982) : tailrecursion.hoplon.span.call(null,G__194981,G__194982));
})();
var G__194969 = (function (){var G__194983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__194984 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194983,G__194984) : tailrecursion.hoplon.span.call(null,G__194983,G__194984));
})();
var G__194970 = " ";
var G__194971 = (function (){var G__194985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194986 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194985,G__194986) : tailrecursion.hoplon.span.call(null,G__194985,G__194986));
})();
var G__194972 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__194960,G__194961,G__194962,G__194963,G__194964,G__194965,G__194966,G__194967,G__194968,G__194969,G__194970,G__194971,G__194972) : tailrecursion.hoplon.pre.call(null,G__194960,G__194961,G__194962,G__194963,G__194964,G__194965,G__194966,G__194967,G__194968,G__194969,G__194970,G__194971,G__194972));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__194958,G__194959) : tailrecursion.hoplon.div.call(null,G__194958,G__194959));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__194957) : tailrecursion.hoplon.div.call(null,G__194957));
})(),(function (){var G__194987 = cljs.core.PersistentArrayMap.EMPTY;
var G__194988 = new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then we shouldn",(function (){var G__194989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__194990 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__194989,G__194990) : tailrecursion.hoplon.markdown.simple_node.call(null,G__194989,G__194990));
})(),"t get any errors. The reason is that the second argument of ",(function (){var G__194991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__194992 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194991,G__194992) : tailrecursion.hoplon.markdown.code_node.call(null,G__194991,G__194992));
})()," must be sequential object (or ",(function (){var G__194993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nil"], null);
var G__194994 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194993,G__194994) : tailrecursion.hoplon.markdown.code_node.call(null,G__194993,G__194994));
})(),"). Either way, we will not be using ",(function (){var G__194995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__194996 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194995,G__194996) : tailrecursion.hoplon.markdown.code_node.call(null,G__194995,G__194996));
})()," for our discourse in this chapter, but rather the procedures ",(function (){var G__194997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__194998 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194997,G__194998) : tailrecursion.hoplon.markdown.code_node.call(null,G__194997,G__194998));
})()," and ",(function (){var G__194999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__195000 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194999,G__195000) : tailrecursion.hoplon.markdown.code_node.call(null,G__194999,G__195000));
})(),", which are more general anyway. Along with ",(function (){var G__195001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__195002 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195001,G__195002) : tailrecursion.hoplon.markdown.code_node.call(null,G__195001,G__195002));
})()," and ",(function (){var G__195003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__195004 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195003,G__195004) : tailrecursion.hoplon.markdown.code_node.call(null,G__195003,G__195004));
})(),", lists also have ",(function (){var G__195005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__195006 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195005,G__195006) : tailrecursion.hoplon.markdown.code_node.call(null,G__195005,G__195006));
})()," and ",(function (){var G__195007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nth"], null);
var G__195008 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195007,G__195008) : tailrecursion.hoplon.markdown.code_node.call(null,G__195007,G__195008));
})()," which give you exactly what you",(function (){var G__195009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__195010 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__195009,G__195010) : tailrecursion.hoplon.markdown.simple_node.call(null,G__195009,G__195010));
})(),"d expect, the second and the nth values in the list. So,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194987,G__194988) : tailrecursion.hoplon.markdown.para_node.call(null,G__194987,G__194988));
})(),(function (){var G__195055 = (function (){var G__195056 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__195057 = (function (){var G__195058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__195059 = "(";
var G__195060 = (function (){var G__195078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195079 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195078,G__195079) : tailrecursion.hoplon.span.call(null,G__195078,G__195079));
})();
var G__195061 = (function (){var G__195080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195081 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195080,G__195081) : tailrecursion.hoplon.span.call(null,G__195080,G__195081));
})();
var G__195062 = " (";
var G__195063 = (function (){var G__195082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195083 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195082,G__195083) : tailrecursion.hoplon.span.call(null,G__195082,G__195083));
})();
var G__195064 = (function (){var G__195084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195085 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195084,G__195085) : tailrecursion.hoplon.span.call(null,G__195084,G__195085));
})();
var G__195065 = " ";
var G__195066 = (function (){var G__195086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195087 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195086,G__195087) : tailrecursion.hoplon.span.call(null,G__195086,G__195087));
})();
var G__195067 = "))\n(";
var G__195068 = (function (){var G__195088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195089 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195088,G__195089) : tailrecursion.hoplon.span.call(null,G__195088,G__195089));
})();
var G__195069 = (function (){var G__195090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195091 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195090,G__195091) : tailrecursion.hoplon.span.call(null,G__195090,G__195091));
})();
var G__195070 = ")\n";
var G__195071 = (function (){var G__195092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195093 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195092,G__195093) : tailrecursion.hoplon.span.call(null,G__195092,G__195093));
})();
var G__195072 = "\n(";
var G__195073 = (function (){var G__195094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195095 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195094,G__195095) : tailrecursion.hoplon.span.call(null,G__195094,G__195095));
})();
var G__195074 = (function (){var G__195096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195097 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195096,G__195097) : tailrecursion.hoplon.span.call(null,G__195096,G__195097));
})();
var G__195075 = ")\n";
var G__195076 = (function (){var G__195098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195099 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195098,G__195099) : tailrecursion.hoplon.span.call(null,G__195098,G__195099));
})();
var G__195077 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20(G__195058,G__195059,G__195060,G__195061,G__195062,G__195063,G__195064,G__195065,G__195066,G__195067,G__195068,G__195069,G__195070,G__195071,G__195072,G__195073,G__195074,G__195075,G__195076,G__195077) : tailrecursion.hoplon.pre.call(null,G__195058,G__195059,G__195060,G__195061,G__195062,G__195063,G__195064,G__195065,G__195066,G__195067,G__195068,G__195069,G__195070,G__195071,G__195072,G__195073,G__195074,G__195075,G__195076,G__195077));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__195056,G__195057) : tailrecursion.hoplon.div.call(null,G__195056,G__195057));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__195055) : tailrecursion.hoplon.div.call(null,G__195055));
})(),(function (){var G__195100 = cljs.core.PersistentArrayMap.EMPTY;
var G__195101 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Notice that a list is a data object that can be given a name and manipulated, just like a primitive data object. Moreover, ",(function (){var G__195102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__195103 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195102,G__195103) : tailrecursion.hoplon.markdown.code_node.call(null,G__195102,G__195103));
})()," can be used to form pairs whose elements are pairs, and so on:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195100,G__195101) : tailrecursion.hoplon.markdown.para_node.call(null,G__195100,G__195101));
})(),(function (){var G__195206 = (function (){var G__195207 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__195208 = (function (){var G__195209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__195210 = "(";
var G__195211 = (function (){var G__195255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195256 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195255,G__195256) : tailrecursion.hoplon.span.call(null,G__195255,G__195256));
})();
var G__195212 = (function (){var G__195257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195258 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195257,G__195258) : tailrecursion.hoplon.span.call(null,G__195257,G__195258));
})();
var G__195213 = " (";
var G__195214 = (function (){var G__195259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195260 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195259,G__195260) : tailrecursion.hoplon.span.call(null,G__195259,G__195260));
})();
var G__195215 = (function (){var G__195261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195262 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195261,G__195262) : tailrecursion.hoplon.span.call(null,G__195261,G__195262));
})();
var G__195216 = " (";
var G__195217 = (function (){var G__195263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195264 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195263,G__195264) : tailrecursion.hoplon.span.call(null,G__195263,G__195264));
})();
var G__195218 = (function (){var G__195265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195266 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195265,G__195266) : tailrecursion.hoplon.span.call(null,G__195265,G__195266));
})();
var G__195219 = " ";
var G__195220 = (function (){var G__195267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195268 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195267,G__195268) : tailrecursion.hoplon.span.call(null,G__195267,G__195268));
})();
var G__195221 = ")))\n(";
var G__195222 = (function (){var G__195269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195270 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195269,G__195270) : tailrecursion.hoplon.span.call(null,G__195269,G__195270));
})();
var G__195223 = (function (){var G__195271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195272 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195271,G__195272) : tailrecursion.hoplon.span.call(null,G__195271,G__195272));
})();
var G__195224 = " (";
var G__195225 = (function (){var G__195273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195274 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195273,G__195274) : tailrecursion.hoplon.span.call(null,G__195273,G__195274));
})();
var G__195226 = (function (){var G__195275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195276 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195275,G__195276) : tailrecursion.hoplon.span.call(null,G__195275,G__195276));
})();
var G__195227 = " (";
var G__195228 = (function (){var G__195277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195278 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195277,G__195278) : tailrecursion.hoplon.span.call(null,G__195277,G__195278));
})();
var G__195229 = (function (){var G__195279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195280 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195279,G__195280) : tailrecursion.hoplon.span.call(null,G__195279,G__195280));
})();
var G__195230 = " ";
var G__195231 = (function (){var G__195281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195282 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195281,G__195282) : tailrecursion.hoplon.span.call(null,G__195281,G__195282));
})();
var G__195232 = ")))\n(";
var G__195233 = (function (){var G__195283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195284 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195283,G__195284) : tailrecursion.hoplon.span.call(null,G__195283,G__195284));
})();
var G__195234 = (function (){var G__195285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195286 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195285,G__195286) : tailrecursion.hoplon.span.call(null,G__195285,G__195286));
})();
var G__195235 = " (";
var G__195236 = (function (){var G__195287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195288 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195287,G__195288) : tailrecursion.hoplon.span.call(null,G__195287,G__195288));
})();
var G__195237 = (function (){var G__195289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195290 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195289,G__195290) : tailrecursion.hoplon.span.call(null,G__195289,G__195290));
})();
var G__195238 = " ";
var G__195239 = (function (){var G__195291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195292 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195291,G__195292) : tailrecursion.hoplon.span.call(null,G__195291,G__195292));
})();
var G__195240 = "))\n\n(";
var G__195241 = (function (){var G__195293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195294 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195293,G__195294) : tailrecursion.hoplon.span.call(null,G__195293,G__195294));
})();
var G__195242 = "(";
var G__195243 = (function (){var G__195295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195296 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195295,G__195296) : tailrecursion.hoplon.span.call(null,G__195295,G__195296));
})();
var G__195244 = (function (){var G__195297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195298 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195297,G__195298) : tailrecursion.hoplon.span.call(null,G__195297,G__195298));
})();
var G__195245 = "))\n";
var G__195246 = (function (){var G__195299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195300 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195299,G__195300) : tailrecursion.hoplon.span.call(null,G__195299,G__195300));
})();
var G__195247 = "\n(";
var G__195248 = (function (){var G__195301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195302 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195301,G__195302) : tailrecursion.hoplon.span.call(null,G__195301,G__195302));
})();
var G__195249 = "(";
var G__195250 = (function (){var G__195303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195304 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195303,G__195304) : tailrecursion.hoplon.span.call(null,G__195303,G__195304));
})();
var G__195251 = (function (){var G__195305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195306 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195305,G__195306) : tailrecursion.hoplon.span.call(null,G__195305,G__195306));
})();
var G__195252 = "))\n";
var G__195253 = (function (){var G__195307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195308 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195307,G__195308) : tailrecursion.hoplon.span.call(null,G__195307,G__195308));
})();
var G__195254 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__195209,G__195210,G__195211,G__195212,G__195213,G__195214,G__195215,G__195216,G__195217,G__195218,G__195219,G__195220,G__195221,G__195222,G__195223,G__195224,G__195225,G__195226,G__195227,G__195228,G__195229,G__195230,G__195231,G__195232,G__195233,G__195234,G__195235,G__195236,G__195237,G__195238,G__195239,G__195240,G__195241,G__195242,G__195243,G__195244,G__195245,G__195246,G__195247,G__195248,G__195249,G__195250,G__195251,G__195252,G__195253,G__195254) : tailrecursion.hoplon.pre.call(null,G__195209,G__195210,G__195211,G__195212,G__195213,G__195214,G__195215,G__195216,G__195217,G__195218,G__195219,G__195220,G__195221,G__195222,G__195223,G__195224,G__195225,G__195226,G__195227,G__195228,G__195229,G__195230,G__195231,G__195232,G__195233,G__195234,G__195235,G__195236,G__195237,G__195238,G__195239,G__195240,G__195241,G__195242,G__195243,G__195244,G__195245,G__195246,G__195247,G__195248,G__195249,G__195250,G__195251,G__195252,G__195253,G__195254));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__195207,G__195208) : tailrecursion.hoplon.div.call(null,G__195207,G__195208));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__195206) : tailrecursion.hoplon.div.call(null,G__195206));
})(),(function (){var G__195309 = cljs.core.PersistentArrayMap.EMPTY;
var G__195310 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/sect/2/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.2"], null)], 0))," we will see how this ability to combine pairs means that pairs can be used as general-purpose building blocks to create all sorts of complex data structures. The single compound-data primitive ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pair"], null)], 0)),", implemented in Scheme by the procedures ",(function (){var G__195311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__195312 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195311,G__195312) : tailrecursion.hoplon.markdown.code_node.call(null,G__195311,G__195312));
})(),", ",(function (){var G__195313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__195314 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195313,G__195314) : tailrecursion.hoplon.markdown.code_node.call(null,G__195313,G__195314));
})(),", and ",(function (){var G__195315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__195316 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195315,G__195316) : tailrecursion.hoplon.markdown.code_node.call(null,G__195315,G__195316));
})(),", is the only glue we need. Data objects constructed from pairs are called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["list-structured"], null)], 0))," data. In fact, we will explore how lists are acutally implemented in Clojure and we will see that it is very similar to Scheme in that respect. For now, let",(function (){var G__195317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__195318 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__195317,G__195318) : tailrecursion.hoplon.markdown.simple_node.call(null,G__195317,G__195318));
})(),"s pretend like our ",(function (){var G__195319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__195320 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195319,G__195320) : tailrecursion.hoplon.markdown.code_node.call(null,G__195319,G__195320));
})(),"s are really pairs (for the purposes of learning the lessons meant to be learned in the following sections)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195309,G__195310) : tailrecursion.hoplon.markdown.para_node.call(null,G__195309,G__195310));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_194923;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_194922;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_194921;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_194920;
}})()], 0));
var G__193980 = "";
var G__193981 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Representing Rational Numbers"], null),(function (){var _STAR_references_STAR_195321 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_195322 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_195323 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_195324 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__195325 = cljs.core.PersistentArrayMap.EMPTY;
var G__195326 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Pairs offer a natural way to complete the rational-number system. Simply represent a rational number as a pair of two integers: a numerator and a denominator. Then ",(function (){var G__195327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__195328 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195327,G__195328) : tailrecursion.hoplon.markdown.code_node.call(null,G__195327,G__195328));
})(),", ",(function (){var G__195329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__195330 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195329,G__195330) : tailrecursion.hoplon.markdown.code_node.call(null,G__195329,G__195330));
})(),", and ",(function (){var G__195331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__195332 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195331,G__195332) : tailrecursion.hoplon.markdown.code_node.call(null,G__195331,G__195332));
})()," are readily implemented as follows:",(function (){var G__195333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__195334 = cljs.core.PersistentVector.fromArray(["Another way to define the selectors and constructor is ",(function (){var G__195335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(define make-rat cons)"], null);
var G__195336 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195335,G__195336) : tailrecursion.hoplon.markdown.code_node.call(null,G__195335,G__195336));
})()," ",(function (){var G__195337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(define numer car)"], null);
var G__195338 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195337,G__195338) : tailrecursion.hoplon.markdown.code_node.call(null,G__195337,G__195338));
})()," ",(function (){var G__195339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(define denom cdr)"], null);
var G__195340 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195339,G__195340) : tailrecursion.hoplon.markdown.code_node.call(null,G__195339,G__195340));
})()," The first definition associates the name ",(function (){var G__195341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__195342 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195341,G__195342) : tailrecursion.hoplon.markdown.code_node.call(null,G__195341,G__195342));
})()," with the value of the expression ",(function (){var G__195343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__195344 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195343,G__195344) : tailrecursion.hoplon.markdown.code_node.call(null,G__195343,G__195344));
})(),", which is the primitive procedure that constructs pairs. Thus ",(function (){var G__195345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__195346 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195345,G__195346) : tailrecursion.hoplon.markdown.code_node.call(null,G__195345,G__195346));
})()," and ",(function (){var G__195347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__195348 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195347,G__195348) : tailrecursion.hoplon.markdown.code_node.call(null,G__195347,G__195348));
})()," are names for the same primitive constructor. Defining selectors and constructors this way is efficient: Instead of ",(function (){var G__195349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__195350 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195349,G__195350) : tailrecursion.hoplon.markdown.code_node.call(null,G__195349,G__195350));
})()," ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["calling"], null)], 0))," ",(function (){var G__195351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__195352 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195351,G__195352) : tailrecursion.hoplon.markdown.code_node.call(null,G__195351,G__195352));
})(),", ",(function (){var G__195353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__195354 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195353,G__195354) : tailrecursion.hoplon.markdown.code_node.call(null,G__195353,G__195354));
})()," ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["is"], null)], 0))," ",(function (){var G__195355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__195356 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195355,G__195356) : tailrecursion.hoplon.markdown.code_node.call(null,G__195355,G__195356));
})(),", so there is only one procedure called, not two, when ",(function (){var G__195357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__195358 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195357,G__195358) : tailrecursion.hoplon.markdown.code_node.call(null,G__195357,G__195358));
})()," is called. On the other hand, doing this defeats debugging aids that trace procedure calls or put breakpoints on procedure calls: You may want to watch ",(function (){var G__195359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__195360 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195359,G__195360) : tailrecursion.hoplon.markdown.code_node.call(null,G__195359,G__195360));
})()," being called, but you certainly don not want to watch every call to ",(function (){var G__195361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__195362 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195361,G__195362) : tailrecursion.hoplon.markdown.code_node.call(null,G__195361,G__195362));
})(),"."], true);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__195333,G__195334) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__195333,G__195334));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195325,G__195326) : tailrecursion.hoplon.markdown.para_node.call(null,G__195325,G__195326));
})(),(function (){var G__195434 = (function (){var G__195435 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__195436 = (function (){var G__195437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__195438 = "(";
var G__195439 = (function (){var G__195472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195473 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195472,G__195473) : tailrecursion.hoplon.span.call(null,G__195472,G__195473));
})();
var G__195440 = "(";
var G__195441 = (function (){var G__195474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195475 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195474,G__195475) : tailrecursion.hoplon.span.call(null,G__195474,G__195475));
})();
var G__195442 = " ";
var G__195443 = (function (){var G__195476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195477 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195476,G__195477) : tailrecursion.hoplon.span.call(null,G__195476,G__195477));
})();
var G__195444 = " ";
var G__195445 = (function (){var G__195478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195479 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195478,G__195479) : tailrecursion.hoplon.span.call(null,G__195478,G__195479));
})();
var G__195446 = ") (";
var G__195447 = (function (){var G__195480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195481 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195480,G__195481) : tailrecursion.hoplon.span.call(null,G__195480,G__195481));
})();
var G__195448 = (function (){var G__195482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195483 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195482,G__195483) : tailrecursion.hoplon.span.call(null,G__195482,G__195483));
})();
var G__195449 = " ";
var G__195450 = (function (){var G__195484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195485 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195484,G__195485) : tailrecursion.hoplon.span.call(null,G__195484,G__195485));
})();
var G__195451 = "))\n(";
var G__195452 = (function (){var G__195486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195487 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195486,G__195487) : tailrecursion.hoplon.span.call(null,G__195486,G__195487));
})();
var G__195453 = "(";
var G__195454 = (function (){var G__195488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195489 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195488,G__195489) : tailrecursion.hoplon.span.call(null,G__195488,G__195489));
})();
var G__195455 = " ";
var G__195456 = (function (){var G__195490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195491 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195490,G__195491) : tailrecursion.hoplon.span.call(null,G__195490,G__195491));
})();
var G__195457 = ") (";
var G__195458 = (function (){var G__195492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195493 = "first";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195492,G__195493) : tailrecursion.hoplon.span.call(null,G__195492,G__195493));
})();
var G__195459 = " ";
var G__195460 = (function (){var G__195494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195495 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195494,G__195495) : tailrecursion.hoplon.span.call(null,G__195494,G__195495));
})();
var G__195461 = "))\n(";
var G__195462 = (function (){var G__195496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195497 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195496,G__195497) : tailrecursion.hoplon.span.call(null,G__195496,G__195497));
})();
var G__195463 = "(";
var G__195464 = (function (){var G__195498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195499 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195498,G__195499) : tailrecursion.hoplon.span.call(null,G__195498,G__195499));
})();
var G__195465 = " ";
var G__195466 = (function (){var G__195500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195501 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195500,G__195501) : tailrecursion.hoplon.span.call(null,G__195500,G__195501));
})();
var G__195467 = ") (";
var G__195468 = (function (){var G__195502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195503 = "second";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195502,G__195503) : tailrecursion.hoplon.span.call(null,G__195502,G__195503));
})();
var G__195469 = " ";
var G__195470 = (function (){var G__195504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195505 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195504,G__195505) : tailrecursion.hoplon.span.call(null,G__195504,G__195505));
})();
var G__195471 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35(G__195437,G__195438,G__195439,G__195440,G__195441,G__195442,G__195443,G__195444,G__195445,G__195446,G__195447,G__195448,G__195449,G__195450,G__195451,G__195452,G__195453,G__195454,G__195455,G__195456,G__195457,G__195458,G__195459,G__195460,G__195461,G__195462,G__195463,G__195464,G__195465,G__195466,G__195467,G__195468,G__195469,G__195470,G__195471) : tailrecursion.hoplon.pre.call(null,G__195437,G__195438,G__195439,G__195440,G__195441,G__195442,G__195443,G__195444,G__195445,G__195446,G__195447,G__195448,G__195449,G__195450,G__195451,G__195452,G__195453,G__195454,G__195455,G__195456,G__195457,G__195458,G__195459,G__195460,G__195461,G__195462,G__195463,G__195464,G__195465,G__195466,G__195467,G__195468,G__195469,G__195470,G__195471));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__195435,G__195436) : tailrecursion.hoplon.div.call(null,G__195435,G__195436));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__195434) : tailrecursion.hoplon.div.call(null,G__195434));
})(),(function (){var G__195506 = cljs.core.PersistentArrayMap.EMPTY;
var G__195507 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Also, in order to display the results of our computations, we can print rational numbers by printing the numerator, a slash, and the denominator.",(function (){var G__195508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__195509 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note that ",(function (){var G__195510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"print"], null);
var G__195511 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195510,G__195511) : tailrecursion.hoplon.markdown.code_node.call(null,G__195510,G__195511));
})()," and ",(function (){var G__195512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"println"], null);
var G__195513 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195512,G__195513) : tailrecursion.hoplon.markdown.code_node.call(null,G__195512,G__195513));
})()," (there are others but we need not go into them right now) return values. Being as how the values are not currently of use to us, we show only what these functions print and not what the interpreter prints as the returned values."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__195508,G__195509) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__195508,G__195509));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195506,G__195507) : tailrecursion.hoplon.markdown.para_node.call(null,G__195506,G__195507));
})(),(function (){var G__195553 = (function (){var G__195554 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__195555 = (function (){var G__195556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__195557 = "(";
var G__195558 = (function (){var G__195575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195576 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195575,G__195576) : tailrecursion.hoplon.span.call(null,G__195575,G__195576));
})();
var G__195559 = (function (){var G__195577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195578 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195577,G__195578) : tailrecursion.hoplon.span.call(null,G__195577,G__195578));
})();
var G__195560 = " [";
var G__195561 = (function (){var G__195579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195580 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195579,G__195580) : tailrecursion.hoplon.span.call(null,G__195579,G__195580));
})();
var G__195562 = "]\n  (";
var G__195563 = (function (){var G__195581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195582 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195581,G__195582) : tailrecursion.hoplon.span.call(null,G__195581,G__195582));
})();
var G__195564 = "(";
var G__195565 = (function (){var G__195583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195584 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195583,G__195584) : tailrecursion.hoplon.span.call(null,G__195583,G__195584));
})();
var G__195566 = " ";
var G__195567 = (function (){var G__195585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195586 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195585,G__195586) : tailrecursion.hoplon.span.call(null,G__195585,G__195586));
})();
var G__195568 = ") ";
var G__195569 = (function (){var G__195587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__195588 = "\"/\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195587,G__195588) : tailrecursion.hoplon.span.call(null,G__195587,G__195588));
})();
var G__195570 = " (";
var G__195571 = (function (){var G__195589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195590 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195589,G__195590) : tailrecursion.hoplon.span.call(null,G__195589,G__195590));
})();
var G__195572 = " ";
var G__195573 = (function (){var G__195591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195592 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195591,G__195592) : tailrecursion.hoplon.span.call(null,G__195591,G__195592));
})();
var G__195574 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__195556,G__195557,G__195558,G__195559,G__195560,G__195561,G__195562,G__195563,G__195564,G__195565,G__195566,G__195567,G__195568,G__195569,G__195570,G__195571,G__195572,G__195573,G__195574) : tailrecursion.hoplon.pre.call(null,G__195556,G__195557,G__195558,G__195559,G__195560,G__195561,G__195562,G__195563,G__195564,G__195565,G__195566,G__195567,G__195568,G__195569,G__195570,G__195571,G__195572,G__195573,G__195574));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__195554,G__195555) : tailrecursion.hoplon.div.call(null,G__195554,G__195555));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__195553) : tailrecursion.hoplon.div.call(null,G__195553));
})(),(function (){var G__195593 = cljs.core.PersistentArrayMap.EMPTY;
var G__195594 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note that ",(function (){var G__195595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"println"], null);
var G__195596 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195595,G__195596) : tailrecursion.hoplon.markdown.code_node.call(null,G__195595,G__195596));
})()," is a function that takes any number of arguments, converts them to a string, prints them to the screen followed by a new line, then it returns the value ",(function (){var G__195597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nil"], null);
var G__195598 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195597,G__195598) : tailrecursion.hoplon.markdown.code_node.call(null,G__195597,G__195598));
})()," (remember, everything has a value in Lisp!)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195593,G__195594) : tailrecursion.hoplon.markdown.para_node.call(null,G__195593,G__195594));
})(),(function (){var G__195599 = cljs.core.PersistentArrayMap.EMPTY;
var G__195600 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we can try our rational-number procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195599,G__195600) : tailrecursion.hoplon.markdown.para_node.call(null,G__195599,G__195600));
})(),(function (){var G__195727 = (function (){var G__195728 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__195729 = (function (){var G__195730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__195731 = "(";
var G__195732 = (function (){var G__195790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195791 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195790,G__195791) : tailrecursion.hoplon.span.call(null,G__195790,G__195791));
})();
var G__195733 = (function (){var G__195792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195793 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195792,G__195793) : tailrecursion.hoplon.span.call(null,G__195792,G__195793));
})();
var G__195734 = " (";
var G__195735 = (function (){var G__195794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195795 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195794,G__195795) : tailrecursion.hoplon.span.call(null,G__195794,G__195795));
})();
var G__195736 = " ";
var G__195737 = (function (){var G__195796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195797 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195796,G__195797) : tailrecursion.hoplon.span.call(null,G__195796,G__195797));
})();
var G__195738 = " ";
var G__195739 = (function (){var G__195798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195799 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195798,G__195799) : tailrecursion.hoplon.span.call(null,G__195798,G__195799));
})();
var G__195740 = "))\n(";
var G__195741 = (function (){var G__195800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195801 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195800,G__195801) : tailrecursion.hoplon.span.call(null,G__195800,G__195801));
})();
var G__195742 = " ";
var G__195743 = (function (){var G__195802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195803 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195802,G__195803) : tailrecursion.hoplon.span.call(null,G__195802,G__195803));
})();
var G__195744 = ")\n";
var G__195745 = (function (){var G__195804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195805 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195804,G__195805) : tailrecursion.hoplon.span.call(null,G__195804,G__195805));
})();
var G__195746 = (function (){var G__195806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195807 = "/2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195806,G__195807) : tailrecursion.hoplon.span.call(null,G__195806,G__195807));
})();
var G__195747 = "\n\n(";
var G__195748 = (function (){var G__195808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195809 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195808,G__195809) : tailrecursion.hoplon.span.call(null,G__195808,G__195809));
})();
var G__195749 = (function (){var G__195810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195811 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195810,G__195811) : tailrecursion.hoplon.span.call(null,G__195810,G__195811));
})();
var G__195750 = " (";
var G__195751 = (function (){var G__195812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195813 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195812,G__195813) : tailrecursion.hoplon.span.call(null,G__195812,G__195813));
})();
var G__195752 = " ";
var G__195753 = (function (){var G__195814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195815 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195814,G__195815) : tailrecursion.hoplon.span.call(null,G__195814,G__195815));
})();
var G__195754 = " ";
var G__195755 = (function (){var G__195816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195817 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195816,G__195817) : tailrecursion.hoplon.span.call(null,G__195816,G__195817));
})();
var G__195756 = "))\n(";
var G__195757 = (function (){var G__195818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195819 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195818,G__195819) : tailrecursion.hoplon.span.call(null,G__195818,G__195819));
})();
var G__195758 = " (";
var G__195759 = (function (){var G__195820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195821 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195820,G__195821) : tailrecursion.hoplon.span.call(null,G__195820,G__195821));
})();
var G__195760 = " ";
var G__195761 = (function (){var G__195822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195823 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195822,G__195823) : tailrecursion.hoplon.span.call(null,G__195822,G__195823));
})();
var G__195762 = " ";
var G__195763 = (function (){var G__195824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195825 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195824,G__195825) : tailrecursion.hoplon.span.call(null,G__195824,G__195825));
})();
var G__195764 = "))\n";
var G__195765 = (function (){var G__195826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195827 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195826,G__195827) : tailrecursion.hoplon.span.call(null,G__195826,G__195827));
})();
var G__195766 = (function (){var G__195828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195829 = "/6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195828,G__195829) : tailrecursion.hoplon.span.call(null,G__195828,G__195829));
})();
var G__195767 = "\n\n(";
var G__195768 = (function (){var G__195830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195831 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195830,G__195831) : tailrecursion.hoplon.span.call(null,G__195830,G__195831));
})();
var G__195769 = " (";
var G__195770 = (function (){var G__195832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195833 = "mul-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195832,G__195833) : tailrecursion.hoplon.span.call(null,G__195832,G__195833));
})();
var G__195771 = " ";
var G__195772 = (function (){var G__195834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195835 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195834,G__195835) : tailrecursion.hoplon.span.call(null,G__195834,G__195835));
})();
var G__195773 = " ";
var G__195774 = (function (){var G__195836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195837 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195836,G__195837) : tailrecursion.hoplon.span.call(null,G__195836,G__195837));
})();
var G__195775 = "))\n";
var G__195776 = (function (){var G__195838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195839 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195838,G__195839) : tailrecursion.hoplon.span.call(null,G__195838,G__195839));
})();
var G__195777 = (function (){var G__195840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195841 = "/6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195840,G__195841) : tailrecursion.hoplon.span.call(null,G__195840,G__195841));
})();
var G__195778 = "\n\n(";
var G__195779 = (function (){var G__195842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195843 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195842,G__195843) : tailrecursion.hoplon.span.call(null,G__195842,G__195843));
})();
var G__195780 = " (";
var G__195781 = (function (){var G__195844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195845 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195844,G__195845) : tailrecursion.hoplon.span.call(null,G__195844,G__195845));
})();
var G__195782 = " ";
var G__195783 = (function (){var G__195846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195847 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195846,G__195847) : tailrecursion.hoplon.span.call(null,G__195846,G__195847));
})();
var G__195784 = " ";
var G__195785 = (function (){var G__195848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195849 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195848,G__195849) : tailrecursion.hoplon.span.call(null,G__195848,G__195849));
})();
var G__195786 = "))\n";
var G__195787 = (function (){var G__195850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195851 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195850,G__195851) : tailrecursion.hoplon.span.call(null,G__195850,G__195851));
})();
var G__195788 = (function (){var G__195852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195853 = "/9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195852,G__195853) : tailrecursion.hoplon.span.call(null,G__195852,G__195853));
})();
var G__195789 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60(G__195730,G__195731,G__195732,G__195733,G__195734,G__195735,G__195736,G__195737,G__195738,G__195739,G__195740,G__195741,G__195742,G__195743,G__195744,G__195745,G__195746,G__195747,G__195748,G__195749,G__195750,G__195751,G__195752,G__195753,G__195754,G__195755,G__195756,G__195757,G__195758,G__195759,G__195760,G__195761,G__195762,G__195763,G__195764,G__195765,G__195766,G__195767,G__195768,G__195769,G__195770,G__195771,G__195772,G__195773,G__195774,G__195775,G__195776,G__195777,G__195778,G__195779,G__195780,G__195781,G__195782,G__195783,G__195784,G__195785,G__195786,G__195787,G__195788,G__195789) : tailrecursion.hoplon.pre.call(null,G__195730,G__195731,G__195732,G__195733,G__195734,G__195735,G__195736,G__195737,G__195738,G__195739,G__195740,G__195741,G__195742,G__195743,G__195744,G__195745,G__195746,G__195747,G__195748,G__195749,G__195750,G__195751,G__195752,G__195753,G__195754,G__195755,G__195756,G__195757,G__195758,G__195759,G__195760,G__195761,G__195762,G__195763,G__195764,G__195765,G__195766,G__195767,G__195768,G__195769,G__195770,G__195771,G__195772,G__195773,G__195774,G__195775,G__195776,G__195777,G__195778,G__195779,G__195780,G__195781,G__195782,G__195783,G__195784,G__195785,G__195786,G__195787,G__195788,G__195789));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__195728,G__195729) : tailrecursion.hoplon.div.call(null,G__195728,G__195729));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__195727) : tailrecursion.hoplon.div.call(null,G__195727));
})(),(function (){var G__195854 = cljs.core.PersistentArrayMap.EMPTY;
var G__195855 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As the final example shows, our rational-number implementation does not reduce rational numbers to lowest terms. We can rememdy this by changing ",(function (){var G__195856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__195857 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195856,G__195857) : tailrecursion.hoplon.markdown.code_node.call(null,G__195856,G__195857));
})(),". If we have a ",(function (){var G__195858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__195859 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195858,G__195859) : tailrecursion.hoplon.markdown.code_node.call(null,G__195858,G__195859));
})()," procedure like the one used in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/2/sub/5/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.5"], null)], 0))," that produces the greatest common divisor of two integers, we can use ",(function (){var G__195860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__195861 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195860,G__195861) : tailrecursion.hoplon.markdown.code_node.call(null,G__195860,G__195861));
})()," to reduce the numerator and the denominator to lowest terms before constructing the pair:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195854,G__195855) : tailrecursion.hoplon.markdown.para_node.call(null,G__195854,G__195855));
})(),(function (){var G__195927 = (function (){var G__195928 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__195929 = (function (){var G__195930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__195931 = "(";
var G__195932 = (function (){var G__195961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195962 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195961,G__195962) : tailrecursion.hoplon.span.call(null,G__195961,G__195962));
})();
var G__195933 = (function (){var G__195963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195964 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195963,G__195964) : tailrecursion.hoplon.span.call(null,G__195963,G__195964));
})();
var G__195934 = " [";
var G__195935 = (function (){var G__195965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195966 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195965,G__195966) : tailrecursion.hoplon.span.call(null,G__195965,G__195966));
})();
var G__195936 = " ";
var G__195937 = (function (){var G__195967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195968 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195967,G__195968) : tailrecursion.hoplon.span.call(null,G__195967,G__195968));
})();
var G__195938 = "]\n  (";
var G__195939 = (function (){var G__195969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195970 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195969,G__195970) : tailrecursion.hoplon.span.call(null,G__195969,G__195970));
})();
var G__195940 = "[";
var G__195941 = (function (){var G__195971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195972 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195971,G__195972) : tailrecursion.hoplon.span.call(null,G__195971,G__195972));
})();
var G__195942 = " (";
var G__195943 = (function (){var G__195973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195974 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195973,G__195974) : tailrecursion.hoplon.span.call(null,G__195973,G__195974));
})();
var G__195944 = " ";
var G__195945 = (function (){var G__195975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195976 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195975,G__195976) : tailrecursion.hoplon.span.call(null,G__195975,G__195976));
})();
var G__195946 = " ";
var G__195947 = (function (){var G__195977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195978 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195977,G__195978) : tailrecursion.hoplon.span.call(null,G__195977,G__195978));
})();
var G__195948 = ")]\n    (";
var G__195949 = (function (){var G__195979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195980 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195979,G__195980) : tailrecursion.hoplon.span.call(null,G__195979,G__195980));
})();
var G__195950 = "(";
var G__195951 = (function (){var G__195981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195982 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195981,G__195982) : tailrecursion.hoplon.span.call(null,G__195981,G__195982));
})();
var G__195952 = (function (){var G__195983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195984 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195983,G__195984) : tailrecursion.hoplon.span.call(null,G__195983,G__195984));
})();
var G__195953 = " ";
var G__195954 = (function (){var G__195985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195986 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195985,G__195986) : tailrecursion.hoplon.span.call(null,G__195985,G__195986));
})();
var G__195955 = ") (";
var G__195956 = (function (){var G__195987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195988 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195987,G__195988) : tailrecursion.hoplon.span.call(null,G__195987,G__195988));
})();
var G__195957 = (function (){var G__195989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195990 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195989,G__195990) : tailrecursion.hoplon.span.call(null,G__195989,G__195990));
})();
var G__195958 = " ";
var G__195959 = (function (){var G__195991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195992 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195991,G__195992) : tailrecursion.hoplon.span.call(null,G__195991,G__195992));
})();
var G__195960 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__195930,G__195931,G__195932,G__195933,G__195934,G__195935,G__195936,G__195937,G__195938,G__195939,G__195940,G__195941,G__195942,G__195943,G__195944,G__195945,G__195946,G__195947,G__195948,G__195949,G__195950,G__195951,G__195952,G__195953,G__195954,G__195955,G__195956,G__195957,G__195958,G__195959,G__195960) : tailrecursion.hoplon.pre.call(null,G__195930,G__195931,G__195932,G__195933,G__195934,G__195935,G__195936,G__195937,G__195938,G__195939,G__195940,G__195941,G__195942,G__195943,G__195944,G__195945,G__195946,G__195947,G__195948,G__195949,G__195950,G__195951,G__195952,G__195953,G__195954,G__195955,G__195956,G__195957,G__195958,G__195959,G__195960));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__195928,G__195929) : tailrecursion.hoplon.div.call(null,G__195928,G__195929));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__195927) : tailrecursion.hoplon.div.call(null,G__195927));
})(),(function (){var G__195993 = cljs.core.PersistentArrayMap.EMPTY;
var G__195994 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we have,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195993,G__195994) : tailrecursion.hoplon.markdown.para_node.call(null,G__195993,G__195994));
})(),(function (){var G__196022 = (function (){var G__196023 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__196024 = (function (){var G__196025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__196026 = "(";
var G__196027 = (function (){var G__196038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196039 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196038,G__196039) : tailrecursion.hoplon.span.call(null,G__196038,G__196039));
})();
var G__196028 = " (";
var G__196029 = (function (){var G__196040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196041 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196040,G__196041) : tailrecursion.hoplon.span.call(null,G__196040,G__196041));
})();
var G__196030 = " ";
var G__196031 = (function (){var G__196042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196043 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196042,G__196043) : tailrecursion.hoplon.span.call(null,G__196042,G__196043));
})();
var G__196032 = " ";
var G__196033 = (function (){var G__196044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196045 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196044,G__196045) : tailrecursion.hoplon.span.call(null,G__196044,G__196045));
})();
var G__196034 = "))\n";
var G__196035 = (function (){var G__196046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196047 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196046,G__196047) : tailrecursion.hoplon.span.call(null,G__196046,G__196047));
})();
var G__196036 = (function (){var G__196048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196049 = "/3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196048,G__196049) : tailrecursion.hoplon.span.call(null,G__196048,G__196049));
})();
var G__196037 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__196025,G__196026,G__196027,G__196028,G__196029,G__196030,G__196031,G__196032,G__196033,G__196034,G__196035,G__196036,G__196037) : tailrecursion.hoplon.pre.call(null,G__196025,G__196026,G__196027,G__196028,G__196029,G__196030,G__196031,G__196032,G__196033,G__196034,G__196035,G__196036,G__196037));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__196023,G__196024) : tailrecursion.hoplon.div.call(null,G__196023,G__196024));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__196022) : tailrecursion.hoplon.div.call(null,G__196022));
})(),(function (){var G__196050 = cljs.core.PersistentArrayMap.EMPTY;
var G__196051 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["as desired. This modification was accomplished by changing the constructor ",(function (){var G__196052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__196053 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196052,G__196053) : tailrecursion.hoplon.markdown.code_node.call(null,G__196052,G__196053));
})()," without changing any of the procedures (such as ",(function (){var G__196054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__196055 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196054,G__196055) : tailrecursion.hoplon.markdown.code_node.call(null,G__196054,G__196055));
})()," and ",(function (){var G__196056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mul-rat"], null);
var G__196057 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196056,G__196057) : tailrecursion.hoplon.markdown.code_node.call(null,G__196056,G__196057));
})(),") that implement the actual operations."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196050,G__196051) : tailrecursion.hoplon.markdown.para_node.call(null,G__196050,G__196051));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_195324;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_195323;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_195322;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_195321;
}})()], 0));
var G__193982 = "";
var G__193983 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_196058 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196059 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_196060 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196061 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__196062 = cljs.core.PersistentArrayMap.EMPTY;
var G__196063 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a better version of ",(function (){var G__196064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__196065 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196064,G__196065) : tailrecursion.hoplon.markdown.code_node.call(null,G__196064,G__196065));
})()," that handles both positive and negative arguments. ",(function (){var G__196066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__196067 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196066,G__196067) : tailrecursion.hoplon.markdown.code_node.call(null,G__196066,G__196067));
})()," should normalize the sign so that if the rational number is positive, both the numerator and denominator are positive, and if the rational number is negative, only the numerator is negative."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196062,G__196063) : tailrecursion.hoplon.markdown.para_node.call(null,G__196062,G__196063));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196061;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196060;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196059;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196058;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_196068 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196069 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_196070 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196071 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__196216 = (function (){var G__196217 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__196218 = (function (){var G__196219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__196220 = "(";
var G__196221 = (function (){var G__196289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196290 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196289,G__196290) : tailrecursion.hoplon.span.call(null,G__196289,G__196290));
})();
var G__196222 = (function (){var G__196291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196292 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196291,G__196292) : tailrecursion.hoplon.span.call(null,G__196291,G__196292));
})();
var G__196223 = " [";
var G__196224 = (function (){var G__196293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196294 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196293,G__196294) : tailrecursion.hoplon.span.call(null,G__196293,G__196294));
})();
var G__196225 = " ";
var G__196226 = (function (){var G__196295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196296 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196295,G__196296) : tailrecursion.hoplon.span.call(null,G__196295,G__196296));
})();
var G__196227 = "]\n  (";
var G__196228 = (function (){var G__196297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196298 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196297,G__196298) : tailrecursion.hoplon.span.call(null,G__196297,G__196298));
})();
var G__196229 = "[";
var G__196230 = (function (){var G__196299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196300 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196299,G__196300) : tailrecursion.hoplon.span.call(null,G__196299,G__196300));
})();
var G__196231 = " ";
var G__196232 = (function (){var G__196301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196302 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196301,G__196302) : tailrecursion.hoplon.span.call(null,G__196301,G__196302));
})();
var G__196233 = "(";
var G__196234 = (function (){var G__196303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196304 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196303,G__196304) : tailrecursion.hoplon.span.call(null,G__196303,G__196304));
})();
var G__196235 = "[";
var G__196236 = (function (){var G__196305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196306 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196305,G__196306) : tailrecursion.hoplon.span.call(null,G__196305,G__196306));
})();
var G__196237 = " (";
var G__196238 = (function (){var G__196307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196308 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196307,G__196308) : tailrecursion.hoplon.span.call(null,G__196307,G__196308));
})();
var G__196239 = " ";
var G__196240 = (function (){var G__196309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196310 = "%1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196309,G__196310) : tailrecursion.hoplon.span.call(null,G__196309,G__196310));
})();
var G__196241 = " ";
var G__196242 = (function (){var G__196311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196312 = "%2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196311,G__196312) : tailrecursion.hoplon.span.call(null,G__196311,G__196312));
})();
var G__196243 = ")]\n                (";
var G__196244 = (function (){var G__196313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196314 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196313,G__196314) : tailrecursion.hoplon.span.call(null,G__196313,G__196314));
})();
var G__196245 = "(";
var G__196246 = (function (){var G__196315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196316 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196315,G__196316) : tailrecursion.hoplon.span.call(null,G__196315,G__196316));
})();
var G__196247 = (function (){var G__196317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196318 = "%1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196317,G__196318) : tailrecursion.hoplon.span.call(null,G__196317,G__196318));
})();
var G__196248 = " ";
var G__196249 = (function (){var G__196319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196320 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196319,G__196320) : tailrecursion.hoplon.span.call(null,G__196319,G__196320));
})();
var G__196250 = ") (";
var G__196251 = (function (){var G__196321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196322 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196321,G__196322) : tailrecursion.hoplon.span.call(null,G__196321,G__196322));
})();
var G__196252 = (function (){var G__196323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196324 = "%2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196323,G__196324) : tailrecursion.hoplon.span.call(null,G__196323,G__196324));
})();
var G__196253 = " ";
var G__196254 = (function (){var G__196325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196326 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196325,G__196326) : tailrecursion.hoplon.span.call(null,G__196325,G__196326));
})();
var G__196255 = ")))]\n    (";
var G__196256 = (function (){var G__196327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196328 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196327,G__196328) : tailrecursion.hoplon.span.call(null,G__196327,G__196328));
})();
var G__196257 = "(";
var G__196258 = (function (){var G__196329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196330 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196329,G__196330) : tailrecursion.hoplon.span.call(null,G__196329,G__196330));
})();
var G__196259 = "(";
var G__196260 = (function (){var G__196331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196332 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196331,G__196332) : tailrecursion.hoplon.span.call(null,G__196331,G__196332));
})();
var G__196261 = (function (){var G__196333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196334 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196333,G__196334) : tailrecursion.hoplon.span.call(null,G__196333,G__196334));
})();
var G__196262 = " ";
var G__196263 = (function (){var G__196335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196336 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196335,G__196336) : tailrecursion.hoplon.span.call(null,G__196335,G__196336));
})();
var G__196264 = ") ";
var G__196265 = (function (){var G__196337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196338 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196337,G__196338) : tailrecursion.hoplon.span.call(null,G__196337,G__196338));
})();
var G__196266 = ")\n        (";
var G__196267 = (function (){var G__196339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196340 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196339,G__196340) : tailrecursion.hoplon.span.call(null,G__196339,G__196340));
})();
var G__196268 = " (";
var G__196269 = (function (){var G__196341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196342 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196341,G__196342) : tailrecursion.hoplon.span.call(null,G__196341,G__196342));
})();
var G__196270 = " ";
var G__196271 = (function (){var G__196343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196344 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196343,G__196344) : tailrecursion.hoplon.span.call(null,G__196343,G__196344));
})();
var G__196272 = ") (";
var G__196273 = (function (){var G__196345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196346 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196345,G__196346) : tailrecursion.hoplon.span.call(null,G__196345,G__196346));
})();
var G__196274 = " ";
var G__196275 = (function (){var G__196347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196348 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196347,G__196348) : tailrecursion.hoplon.span.call(null,G__196347,G__196348));
})();
var G__196276 = "))\n        (";
var G__196277 = (function (){var G__196349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196350 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196349,G__196350) : tailrecursion.hoplon.span.call(null,G__196349,G__196350));
})();
var G__196278 = " (";
var G__196279 = (function (){var G__196351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196352 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196351,G__196352) : tailrecursion.hoplon.span.call(null,G__196351,G__196352));
})();
var G__196280 = "(";
var G__196281 = (function (){var G__196353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196354 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196353,G__196354) : tailrecursion.hoplon.span.call(null,G__196353,G__196354));
})();
var G__196282 = " ";
var G__196283 = (function (){var G__196355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196356 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196355,G__196356) : tailrecursion.hoplon.span.call(null,G__196355,G__196356));
})();
var G__196284 = ")) (";
var G__196285 = (function (){var G__196357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196358 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196357,G__196358) : tailrecursion.hoplon.span.call(null,G__196357,G__196358));
})();
var G__196286 = " ";
var G__196287 = (function (){var G__196359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196360 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196359,G__196360) : tailrecursion.hoplon.span.call(null,G__196359,G__196360));
})();
var G__196288 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$70 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$70(G__196219,G__196220,G__196221,G__196222,G__196223,G__196224,G__196225,G__196226,G__196227,G__196228,G__196229,G__196230,G__196231,G__196232,G__196233,G__196234,G__196235,G__196236,G__196237,G__196238,G__196239,G__196240,G__196241,G__196242,G__196243,G__196244,G__196245,G__196246,G__196247,G__196248,G__196249,G__196250,G__196251,G__196252,G__196253,G__196254,G__196255,G__196256,G__196257,G__196258,G__196259,G__196260,G__196261,G__196262,G__196263,G__196264,G__196265,G__196266,G__196267,G__196268,G__196269,G__196270,G__196271,G__196272,G__196273,G__196274,G__196275,G__196276,G__196277,G__196278,G__196279,G__196280,G__196281,G__196282,G__196283,G__196284,G__196285,G__196286,G__196287,G__196288) : tailrecursion.hoplon.pre.call(null,G__196219,G__196220,G__196221,G__196222,G__196223,G__196224,G__196225,G__196226,G__196227,G__196228,G__196229,G__196230,G__196231,G__196232,G__196233,G__196234,G__196235,G__196236,G__196237,G__196238,G__196239,G__196240,G__196241,G__196242,G__196243,G__196244,G__196245,G__196246,G__196247,G__196248,G__196249,G__196250,G__196251,G__196252,G__196253,G__196254,G__196255,G__196256,G__196257,G__196258,G__196259,G__196260,G__196261,G__196262,G__196263,G__196264,G__196265,G__196266,G__196267,G__196268,G__196269,G__196270,G__196271,G__196272,G__196273,G__196274,G__196275,G__196276,G__196277,G__196278,G__196279,G__196280,G__196281,G__196282,G__196283,G__196284,G__196285,G__196286,G__196287,G__196288));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__196217,G__196218) : tailrecursion.hoplon.div.call(null,G__196217,G__196218));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__196216) : tailrecursion.hoplon.div.call(null,G__196216));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196071;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196070;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196069;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196068;
}})()], 0))], 0))], 0));
var G__193984 = "";
var G__193985 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Abstraction Barriers"], null),(function (){var _STAR_references_STAR_196361 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196362 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_196363 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196364 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__196365 = cljs.core.PersistentArrayMap.EMPTY;
var G__196366 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Before continuing with more examples of compound data and data abstraction, let us consider some of the issues raised by the rational-number example. We defined the rational-number operations in terms of a constructor ",(function (){var G__196367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__196368 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196367,G__196368) : tailrecursion.hoplon.markdown.code_node.call(null,G__196367,G__196368));
})()," and selectors ",(function (){var G__196369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__196370 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196369,G__196370) : tailrecursion.hoplon.markdown.code_node.call(null,G__196369,G__196370));
})()," and ",(function (){var G__196371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__196372 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196371,G__196372) : tailrecursion.hoplon.markdown.code_node.call(null,G__196371,G__196372));
})(),". In general, the underlying idea of data abstraction is to identify for each type of data object the basic set of operations in terms of which all manipulations op data objects of that type will be expressed, and then to use only those operations in manipulating the data."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196365,G__196366) : tailrecursion.hoplon.markdown.para_node.call(null,G__196365,G__196366));
})(),(function (){var G__196373 = cljs.core.PersistentArrayMap.EMPTY;
var G__196374 = new cljs.core.PersistentVector(null, 27, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can envision the structure of the rational-number system as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/fig/1/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 2.1"], null)], 0)),". The horizontal lines represent ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstraction barriers"], null)], 0))," that isolate different ",(function (){var G__196375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__196376 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["levels"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__196375,G__196376) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__196375,G__196376));
})()," of the system. At each level, the barrier separates the programs (above) that use th edata abstraction from the programs (below) that implement the data abstraction. Programs that use rational numbers manipulate them solely in terms of the procedures supplied ",(function (){var G__196377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__196378 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["for public use"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__196377,G__196378) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__196377,G__196378));
})()," by the rational-number package: ",(function (){var G__196379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__196380 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196379,G__196380) : tailrecursion.hoplon.markdown.code_node.call(null,G__196379,G__196380));
})(),", ",(function (){var G__196381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-rat"], null);
var G__196382 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196381,G__196382) : tailrecursion.hoplon.markdown.code_node.call(null,G__196381,G__196382));
})(),", ",(function (){var G__196383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mul-rat"], null);
var G__196384 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196383,G__196384) : tailrecursion.hoplon.markdown.code_node.call(null,G__196383,G__196384));
})(),", ",(function (){var G__196385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"div-rat"], null);
var G__196386 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196385,G__196386) : tailrecursion.hoplon.markdown.code_node.call(null,G__196385,G__196386));
})(),", ",(function (){var G__196387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__196388 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196387,G__196388) : tailrecursion.hoplon.markdown.code_node.call(null,G__196387,G__196388));
})(),", and ",(function (){var G__196389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__196390 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196389,G__196390) : tailrecursion.hoplon.markdown.code_node.call(null,G__196389,G__196390));
})(),", which themselves are implemented in terms of lists. The details of how lists are implemented are irrelevant to the rest of the rational-number package so long as lists can be manipulated by the use of ",(function (){var G__196391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__196392 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196391,G__196392) : tailrecursion.hoplon.markdown.code_node.call(null,G__196391,G__196392));
})(),", ",(function (){var G__196393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__196394 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196393,G__196394) : tailrecursion.hoplon.markdown.code_node.call(null,G__196393,G__196394));
})(),", and ",(function (){var G__196395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__196396 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196395,G__196396) : tailrecursion.hoplon.markdown.code_node.call(null,G__196395,G__196396));
})(),". In effect, procedures at each level are the interfaces that define the abstraction barriers and connect the different levels."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196373,G__196374) : tailrecursion.hoplon.markdown.para_node.call(null,G__196373,G__196374));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196364;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196363;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196362;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196361;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"Data-abstraction barriers in the rational-number package."], null)], 0)),"",(function (){var _STAR_references_STAR_196397 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196398 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_196399 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196400 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__196401 = cljs.core.PersistentArrayMap.EMPTY;
var G__196402 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This simple idea has many advantages. One advantage is that it makes programs much easier to maintain and modify. Any complex data structure can be represented in a variety of ways within primitive data structures provided by a programming language. Of course, the choice of representation influences the programs that operate on it; thus, if the representation were to be changed at some later time, all such programs might have to be modified accordingly. This task could be time-consuming and expensive in the vase of large programs unless the dependence on the representation were to be confined by design to a very few program modules."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196401,G__196402) : tailrecursion.hoplon.markdown.para_node.call(null,G__196401,G__196402));
})(),(function (){var G__196403 = cljs.core.PersistentArrayMap.EMPTY;
var G__196404 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For example, an alternate way to address the problem of reducing rational numbers to lowest terms is to perform the reduction whenever we acces the parts of a rational number, rather than when we construct it. This leads to different constructor and selector procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196403,G__196404) : tailrecursion.hoplon.markdown.para_node.call(null,G__196403,G__196404));
})(),(function (){var G__196539 = (function (){var G__196540 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__196541 = (function (){var G__196542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__196543 = "(";
var G__196544 = (function (){var G__196604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196605 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196604,G__196605) : tailrecursion.hoplon.span.call(null,G__196604,G__196605));
})();
var G__196545 = (function (){var G__196606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196607 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196606,G__196607) : tailrecursion.hoplon.span.call(null,G__196606,G__196607));
})();
var G__196546 = " [";
var G__196547 = (function (){var G__196608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196609 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196608,G__196609) : tailrecursion.hoplon.span.call(null,G__196608,G__196609));
})();
var G__196548 = " ";
var G__196549 = (function (){var G__196610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196611 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196610,G__196611) : tailrecursion.hoplon.span.call(null,G__196610,G__196611));
})();
var G__196550 = "]\n  (";
var G__196551 = (function (){var G__196612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196613 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196612,G__196613) : tailrecursion.hoplon.span.call(null,G__196612,G__196613));
})();
var G__196552 = (function (){var G__196614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196615 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196614,G__196615) : tailrecursion.hoplon.span.call(null,G__196614,G__196615));
})();
var G__196553 = " ";
var G__196554 = (function (){var G__196616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196617 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196616,G__196617) : tailrecursion.hoplon.span.call(null,G__196616,G__196617));
})();
var G__196555 = "))\n(";
var G__196556 = (function (){var G__196618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196619 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196618,G__196619) : tailrecursion.hoplon.span.call(null,G__196618,G__196619));
})();
var G__196557 = (function (){var G__196620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196621 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196620,G__196621) : tailrecursion.hoplon.span.call(null,G__196620,G__196621));
})();
var G__196558 = " [";
var G__196559 = (function (){var G__196622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196623 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196622,G__196623) : tailrecursion.hoplon.span.call(null,G__196622,G__196623));
})();
var G__196560 = "]\n  (";
var G__196561 = (function (){var G__196624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196625 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196624,G__196625) : tailrecursion.hoplon.span.call(null,G__196624,G__196625));
})();
var G__196562 = "[";
var G__196563 = (function (){var G__196626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196627 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196626,G__196627) : tailrecursion.hoplon.span.call(null,G__196626,G__196627));
})();
var G__196564 = " (";
var G__196565 = (function (){var G__196628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196629 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196628,G__196629) : tailrecursion.hoplon.span.call(null,G__196628,G__196629));
})();
var G__196566 = " (";
var G__196567 = (function (){var G__196630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196631 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196630,G__196631) : tailrecursion.hoplon.span.call(null,G__196630,G__196631));
})();
var G__196568 = (function (){var G__196632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196633 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196632,G__196633) : tailrecursion.hoplon.span.call(null,G__196632,G__196633));
})();
var G__196569 = ") (";
var G__196570 = (function (){var G__196634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196635 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196634,G__196635) : tailrecursion.hoplon.span.call(null,G__196634,G__196635));
})();
var G__196571 = (function (){var G__196636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196637 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196636,G__196637) : tailrecursion.hoplon.span.call(null,G__196636,G__196637));
})();
var G__196572 = "))]\n    (";
var G__196573 = (function (){var G__196638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196639 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196638,G__196639) : tailrecursion.hoplon.span.call(null,G__196638,G__196639));
})();
var G__196574 = "(";
var G__196575 = (function (){var G__196640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196641 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196640,G__196641) : tailrecursion.hoplon.span.call(null,G__196640,G__196641));
})();
var G__196576 = (function (){var G__196642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196643 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196642,G__196643) : tailrecursion.hoplon.span.call(null,G__196642,G__196643));
})();
var G__196577 = ") ";
var G__196578 = (function (){var G__196644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196645 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196644,G__196645) : tailrecursion.hoplon.span.call(null,G__196644,G__196645));
})();
var G__196579 = ")))\n(";
var G__196580 = (function (){var G__196646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196647 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196646,G__196647) : tailrecursion.hoplon.span.call(null,G__196646,G__196647));
})();
var G__196581 = (function (){var G__196648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196649 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196648,G__196649) : tailrecursion.hoplon.span.call(null,G__196648,G__196649));
})();
var G__196582 = " [";
var G__196583 = (function (){var G__196650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196651 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196650,G__196651) : tailrecursion.hoplon.span.call(null,G__196650,G__196651));
})();
var G__196584 = "]\n  (";
var G__196585 = (function (){var G__196652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196653 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196652,G__196653) : tailrecursion.hoplon.span.call(null,G__196652,G__196653));
})();
var G__196586 = "[";
var G__196587 = (function (){var G__196654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196655 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196654,G__196655) : tailrecursion.hoplon.span.call(null,G__196654,G__196655));
})();
var G__196588 = " (";
var G__196589 = (function (){var G__196656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196657 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196656,G__196657) : tailrecursion.hoplon.span.call(null,G__196656,G__196657));
})();
var G__196590 = " (";
var G__196591 = (function (){var G__196658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196659 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196658,G__196659) : tailrecursion.hoplon.span.call(null,G__196658,G__196659));
})();
var G__196592 = (function (){var G__196660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196661 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196660,G__196661) : tailrecursion.hoplon.span.call(null,G__196660,G__196661));
})();
var G__196593 = ") (";
var G__196594 = (function (){var G__196662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196663 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196662,G__196663) : tailrecursion.hoplon.span.call(null,G__196662,G__196663));
})();
var G__196595 = (function (){var G__196664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196665 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196664,G__196665) : tailrecursion.hoplon.span.call(null,G__196664,G__196665));
})();
var G__196596 = "))]\n    (";
var G__196597 = (function (){var G__196666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196667 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196666,G__196667) : tailrecursion.hoplon.span.call(null,G__196666,G__196667));
})();
var G__196598 = "(";
var G__196599 = (function (){var G__196668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196669 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196668,G__196669) : tailrecursion.hoplon.span.call(null,G__196668,G__196669));
})();
var G__196600 = (function (){var G__196670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196671 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196670,G__196671) : tailrecursion.hoplon.span.call(null,G__196670,G__196671));
})();
var G__196601 = ") ";
var G__196602 = (function (){var G__196672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196673 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196672,G__196673) : tailrecursion.hoplon.span.call(null,G__196672,G__196673));
})();
var G__196603 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$62 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$62(G__196542,G__196543,G__196544,G__196545,G__196546,G__196547,G__196548,G__196549,G__196550,G__196551,G__196552,G__196553,G__196554,G__196555,G__196556,G__196557,G__196558,G__196559,G__196560,G__196561,G__196562,G__196563,G__196564,G__196565,G__196566,G__196567,G__196568,G__196569,G__196570,G__196571,G__196572,G__196573,G__196574,G__196575,G__196576,G__196577,G__196578,G__196579,G__196580,G__196581,G__196582,G__196583,G__196584,G__196585,G__196586,G__196587,G__196588,G__196589,G__196590,G__196591,G__196592,G__196593,G__196594,G__196595,G__196596,G__196597,G__196598,G__196599,G__196600,G__196601,G__196602,G__196603) : tailrecursion.hoplon.pre.call(null,G__196542,G__196543,G__196544,G__196545,G__196546,G__196547,G__196548,G__196549,G__196550,G__196551,G__196552,G__196553,G__196554,G__196555,G__196556,G__196557,G__196558,G__196559,G__196560,G__196561,G__196562,G__196563,G__196564,G__196565,G__196566,G__196567,G__196568,G__196569,G__196570,G__196571,G__196572,G__196573,G__196574,G__196575,G__196576,G__196577,G__196578,G__196579,G__196580,G__196581,G__196582,G__196583,G__196584,G__196585,G__196586,G__196587,G__196588,G__196589,G__196590,G__196591,G__196592,G__196593,G__196594,G__196595,G__196596,G__196597,G__196598,G__196599,G__196600,G__196601,G__196602,G__196603));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__196540,G__196541) : tailrecursion.hoplon.div.call(null,G__196540,G__196541));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__196539) : tailrecursion.hoplon.div.call(null,G__196539));
})(),(function (){var G__196674 = cljs.core.PersistentArrayMap.EMPTY;
var G__196675 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The difference between this implementation and the previous one lies in when we compute the ",(function (){var G__196676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__196677 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196676,G__196677) : tailrecursion.hoplon.markdown.code_node.call(null,G__196676,G__196677));
})(),". If in our typical use of rational numbers we access the numerators and denominators of the same rational numbers many times, it would be preferable to compute the ",(function (){var G__196678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__196679 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196678,G__196679) : tailrecursion.hoplon.markdown.code_node.call(null,G__196678,G__196679));
})()," when the rational numbers are constructed. If not, we may be better off waiting until access time to compute the ",(function (){var G__196680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__196681 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196680,G__196681) : tailrecursion.hoplon.markdown.code_node.call(null,G__196680,G__196681));
})(),". In any case, when we change from one representation to the other, the procedures ",(function (){var G__196682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__196683 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196682,G__196683) : tailrecursion.hoplon.markdown.code_node.call(null,G__196682,G__196683));
})(),", ",(function (){var G__196684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-rat"], null);
var G__196685 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196684,G__196685) : tailrecursion.hoplon.markdown.code_node.call(null,G__196684,G__196685));
})()," and so on do not have to be modified at all."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196674,G__196675) : tailrecursion.hoplon.markdown.para_node.call(null,G__196674,G__196675));
})(),(function (){var G__196686 = cljs.core.PersistentArrayMap.EMPTY;
var G__196687 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Constraining the dependence on the representation to a few interface procedures helps us design programs as well as modify them, because it allows us to maintain the flexibility to consider alternate implementations. To continue with our simple example, suppose we are designing a rational-number package and we can",(function (){var G__196688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__196689 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__196688,G__196689) : tailrecursion.hoplon.markdown.simple_node.call(null,G__196688,G__196689));
})(),"t decide initially whether to perform the ",(function (){var G__196690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__196691 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196690,G__196691) : tailrecursion.hoplon.markdown.code_node.call(null,G__196690,G__196691));
})()," at construction time or at selection time. The data-abstraction methodology gives us a way to defer that decision without losing the ability to make progress on the rest of the system."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196686,G__196687) : tailrecursion.hoplon.markdown.para_node.call(null,G__196686,G__196687));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196400;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196399;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196398;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196397;
}})()], 0));
var G__193986 = "";
var G__193987 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_196692 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196693 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_196694 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196695 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__196696 = cljs.core.PersistentArrayMap.EMPTY;
var G__196697 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the problem of representing line segments in a plane. Each segment is represented as a pair of points: a starting point and an ending point. Define a constructor ",(function (){var G__196698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-segment"], null);
var G__196699 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196698,G__196699) : tailrecursion.hoplon.markdown.code_node.call(null,G__196698,G__196699));
})()," and selectors ",(function (){var G__196700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"start-segment"], null);
var G__196701 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196700,G__196701) : tailrecursion.hoplon.markdown.code_node.call(null,G__196700,G__196701));
})()," and ",(function (){var G__196702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"end-segment"], null);
var G__196703 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196702,G__196703) : tailrecursion.hoplon.markdown.code_node.call(null,G__196702,G__196703));
})()," that define the representation of segments in terms of points. Furthermore, a point can be represented as a pair of numbers: the \\(x\\) coordinate and the \\(y\\) coordinate. Accordingly, specify a constructor ",(function (){var G__196704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-point"], null);
var G__196705 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196704,G__196705) : tailrecursion.hoplon.markdown.code_node.call(null,G__196704,G__196705));
})()," and selectors ",(function (){var G__196706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x-point"], null);
var G__196707 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196706,G__196707) : tailrecursion.hoplon.markdown.code_node.call(null,G__196706,G__196707));
})()," and ",(function (){var G__196708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y-point"], null);
var G__196709 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196708,G__196709) : tailrecursion.hoplon.markdown.code_node.call(null,G__196708,G__196709));
})()," that define this representation. Finally, using your selectors and constructors, define a procedure ",(function (){var G__196710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"midpoint-segment"], null);
var G__196711 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196710,G__196711) : tailrecursion.hoplon.markdown.code_node.call(null,G__196710,G__196711));
})()," that takes a line segment as argument and returns its midpoint (the point whose coordinates are the average of the coordinates of the endpoints). To try your procedures, you",(function (){var G__196712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__196713 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__196712,G__196713) : tailrecursion.hoplon.markdown.simple_node.call(null,G__196712,G__196713));
})(),"ll need a way to print points:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196696,G__196697) : tailrecursion.hoplon.markdown.para_node.call(null,G__196696,G__196697));
})(),(function (){var G__196760 = (function (){var G__196761 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__196762 = (function (){var G__196763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__196764 = "(";
var G__196765 = (function (){var G__196785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196786 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196785,G__196786) : tailrecursion.hoplon.span.call(null,G__196785,G__196786));
})();
var G__196766 = (function (){var G__196787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196788 = "print-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196787,G__196788) : tailrecursion.hoplon.span.call(null,G__196787,G__196788));
})();
var G__196767 = " [";
var G__196768 = (function (){var G__196789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196790 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196789,G__196790) : tailrecursion.hoplon.span.call(null,G__196789,G__196790));
})();
var G__196769 = "]\n  (";
var G__196770 = (function (){var G__196791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196792 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196791,G__196792) : tailrecursion.hoplon.span.call(null,G__196791,G__196792));
})();
var G__196771 = (function (){var G__196793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__196794 = "\"(\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196793,G__196794) : tailrecursion.hoplon.span.call(null,G__196793,G__196794));
})();
var G__196772 = " (";
var G__196773 = (function (){var G__196795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196796 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196795,G__196796) : tailrecursion.hoplon.span.call(null,G__196795,G__196796));
})();
var G__196774 = " ";
var G__196775 = (function (){var G__196797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196798 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196797,G__196798) : tailrecursion.hoplon.span.call(null,G__196797,G__196798));
})();
var G__196776 = ") ";
var G__196777 = (function (){var G__196799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__196800 = "\",\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196799,G__196800) : tailrecursion.hoplon.span.call(null,G__196799,G__196800));
})();
var G__196778 = " (";
var G__196779 = (function (){var G__196801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196802 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196801,G__196802) : tailrecursion.hoplon.span.call(null,G__196801,G__196802));
})();
var G__196780 = " ";
var G__196781 = (function (){var G__196803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196804 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196803,G__196804) : tailrecursion.hoplon.span.call(null,G__196803,G__196804));
})();
var G__196782 = ") ";
var G__196783 = (function (){var G__196805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__196806 = "\")\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196805,G__196806) : tailrecursion.hoplon.span.call(null,G__196805,G__196806));
})();
var G__196784 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__196763,G__196764,G__196765,G__196766,G__196767,G__196768,G__196769,G__196770,G__196771,G__196772,G__196773,G__196774,G__196775,G__196776,G__196777,G__196778,G__196779,G__196780,G__196781,G__196782,G__196783,G__196784) : tailrecursion.hoplon.pre.call(null,G__196763,G__196764,G__196765,G__196766,G__196767,G__196768,G__196769,G__196770,G__196771,G__196772,G__196773,G__196774,G__196775,G__196776,G__196777,G__196778,G__196779,G__196780,G__196781,G__196782,G__196783,G__196784));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__196761,G__196762) : tailrecursion.hoplon.div.call(null,G__196761,G__196762));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__196760) : tailrecursion.hoplon.div.call(null,G__196760));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196695;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196694;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196693;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196692;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_196807 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196808 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_196809 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196810 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__196939 = (function (){var G__196940 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__196941 = (function (){var G__196942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__196943 = "(";
var G__196944 = (function (){var G__197000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197001 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197000,G__197001) : tailrecursion.hoplon.span.call(null,G__197000,G__197001));
})();
var G__196945 = (function (){var G__197002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197003 = "make-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197002,G__197003) : tailrecursion.hoplon.span.call(null,G__197002,G__197003));
})();
var G__196946 = " [";
var G__196947 = (function (){var G__197004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197005 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197004,G__197005) : tailrecursion.hoplon.span.call(null,G__197004,G__197005));
})();
var G__196948 = " ";
var G__196949 = (function (){var G__197006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197007 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197006,G__197007) : tailrecursion.hoplon.span.call(null,G__197006,G__197007));
})();
var G__196950 = "]\n  (";
var G__196951 = (function (){var G__197008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197009 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197008,G__197009) : tailrecursion.hoplon.span.call(null,G__197008,G__197009));
})();
var G__196952 = (function (){var G__197010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197011 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197010,G__197011) : tailrecursion.hoplon.span.call(null,G__197010,G__197011));
})();
var G__196953 = " ";
var G__196954 = (function (){var G__197012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197013 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197012,G__197013) : tailrecursion.hoplon.span.call(null,G__197012,G__197013));
})();
var G__196955 = "))\n(";
var G__196956 = (function (){var G__197014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197015 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197014,G__197015) : tailrecursion.hoplon.span.call(null,G__197014,G__197015));
})();
var G__196957 = (function (){var G__197016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197017 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197016,G__197017) : tailrecursion.hoplon.span.call(null,G__197016,G__197017));
})();
var G__196958 = " [";
var G__196959 = (function (){var G__197018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197019 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197018,G__197019) : tailrecursion.hoplon.span.call(null,G__197018,G__197019));
})();
var G__196960 = "]\n  (";
var G__196961 = (function (){var G__197020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197021 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197020,G__197021) : tailrecursion.hoplon.span.call(null,G__197020,G__197021));
})();
var G__196962 = (function (){var G__197022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197023 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197022,G__197023) : tailrecursion.hoplon.span.call(null,G__197022,G__197023));
})();
var G__196963 = "))\n(";
var G__196964 = (function (){var G__197024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197025 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197024,G__197025) : tailrecursion.hoplon.span.call(null,G__197024,G__197025));
})();
var G__196965 = (function (){var G__197026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197027 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197026,G__197027) : tailrecursion.hoplon.span.call(null,G__197026,G__197027));
})();
var G__196966 = " [";
var G__196967 = (function (){var G__197028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197029 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197028,G__197029) : tailrecursion.hoplon.span.call(null,G__197028,G__197029));
})();
var G__196968 = "]\n  (";
var G__196969 = (function (){var G__197030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197031 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197030,G__197031) : tailrecursion.hoplon.span.call(null,G__197030,G__197031));
})();
var G__196970 = (function (){var G__197032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197033 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197032,G__197033) : tailrecursion.hoplon.span.call(null,G__197032,G__197033));
})();
var G__196971 = "))\n(";
var G__196972 = (function (){var G__197034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197035 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197034,G__197035) : tailrecursion.hoplon.span.call(null,G__197034,G__197035));
})();
var G__196973 = (function (){var G__197036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197037 = "make-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197036,G__197037) : tailrecursion.hoplon.span.call(null,G__197036,G__197037));
})();
var G__196974 = " [";
var G__196975 = (function (){var G__197038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197039 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197038,G__197039) : tailrecursion.hoplon.span.call(null,G__197038,G__197039));
})();
var G__196976 = " ";
var G__196977 = (function (){var G__197040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197041 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197040,G__197041) : tailrecursion.hoplon.span.call(null,G__197040,G__197041));
})();
var G__196978 = "]\n  (";
var G__196979 = (function (){var G__197042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197043 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197042,G__197043) : tailrecursion.hoplon.span.call(null,G__197042,G__197043));
})();
var G__196980 = (function (){var G__197044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197045 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197044,G__197045) : tailrecursion.hoplon.span.call(null,G__197044,G__197045));
})();
var G__196981 = " ";
var G__196982 = (function (){var G__197046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197047 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197046,G__197047) : tailrecursion.hoplon.span.call(null,G__197046,G__197047));
})();
var G__196983 = "))\n(";
var G__196984 = (function (){var G__197048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197049 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197048,G__197049) : tailrecursion.hoplon.span.call(null,G__197048,G__197049));
})();
var G__196985 = (function (){var G__197050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197051 = "start-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197050,G__197051) : tailrecursion.hoplon.span.call(null,G__197050,G__197051));
})();
var G__196986 = " [";
var G__196987 = (function (){var G__197052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197053 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197052,G__197053) : tailrecursion.hoplon.span.call(null,G__197052,G__197053));
})();
var G__196988 = "]\n  (";
var G__196989 = (function (){var G__197054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197055 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197054,G__197055) : tailrecursion.hoplon.span.call(null,G__197054,G__197055));
})();
var G__196990 = (function (){var G__197056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197057 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197056,G__197057) : tailrecursion.hoplon.span.call(null,G__197056,G__197057));
})();
var G__196991 = "))\n(";
var G__196992 = (function (){var G__197058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197059 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197058,G__197059) : tailrecursion.hoplon.span.call(null,G__197058,G__197059));
})();
var G__196993 = (function (){var G__197060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197061 = "end-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197060,G__197061) : tailrecursion.hoplon.span.call(null,G__197060,G__197061));
})();
var G__196994 = " [";
var G__196995 = (function (){var G__197062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197063 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197062,G__197063) : tailrecursion.hoplon.span.call(null,G__197062,G__197063));
})();
var G__196996 = "]\n  (";
var G__196997 = (function (){var G__197064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197065 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197064,G__197065) : tailrecursion.hoplon.span.call(null,G__197064,G__197065));
})();
var G__196998 = (function (){var G__197066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197067 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197066,G__197067) : tailrecursion.hoplon.span.call(null,G__197066,G__197067));
})();
var G__196999 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__196942,G__196943,G__196944,G__196945,G__196946,G__196947,G__196948,G__196949,G__196950,G__196951,G__196952,G__196953,G__196954,G__196955,G__196956,G__196957,G__196958,G__196959,G__196960,G__196961,G__196962,G__196963,G__196964,G__196965,G__196966,G__196967,G__196968,G__196969,G__196970,G__196971,G__196972,G__196973,G__196974,G__196975,G__196976,G__196977,G__196978,G__196979,G__196980,G__196981,G__196982,G__196983,G__196984,G__196985,G__196986,G__196987,G__196988,G__196989,G__196990,G__196991,G__196992,G__196993,G__196994,G__196995,G__196996,G__196997,G__196998,G__196999) : tailrecursion.hoplon.pre.call(null,G__196942,G__196943,G__196944,G__196945,G__196946,G__196947,G__196948,G__196949,G__196950,G__196951,G__196952,G__196953,G__196954,G__196955,G__196956,G__196957,G__196958,G__196959,G__196960,G__196961,G__196962,G__196963,G__196964,G__196965,G__196966,G__196967,G__196968,G__196969,G__196970,G__196971,G__196972,G__196973,G__196974,G__196975,G__196976,G__196977,G__196978,G__196979,G__196980,G__196981,G__196982,G__196983,G__196984,G__196985,G__196986,G__196987,G__196988,G__196989,G__196990,G__196991,G__196992,G__196993,G__196994,G__196995,G__196996,G__196997,G__196998,G__196999));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__196940,G__196941) : tailrecursion.hoplon.div.call(null,G__196940,G__196941));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__196939) : tailrecursion.hoplon.div.call(null,G__196939));
})(),(function (){var G__197068 = cljs.core.PersistentArrayMap.EMPTY;
var G__197069 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Once we have those,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197068,G__197069) : tailrecursion.hoplon.markdown.para_node.call(null,G__197068,G__197069));
})(),(function (){var G__197189 = (function (){var G__197190 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__197191 = (function (){var G__197192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__197193 = "(";
var G__197194 = (function (){var G__197251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197252 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197251,G__197252) : tailrecursion.hoplon.span.call(null,G__197251,G__197252));
})();
var G__197195 = (function (){var G__197253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197254 = "midpoint-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197253,G__197254) : tailrecursion.hoplon.span.call(null,G__197253,G__197254));
})();
var G__197196 = " [";
var G__197197 = (function (){var G__197255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197256 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197255,G__197256) : tailrecursion.hoplon.span.call(null,G__197255,G__197256));
})();
var G__197198 = "]\n  (";
var G__197199 = (function (){var G__197257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197258 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197257,G__197258) : tailrecursion.hoplon.span.call(null,G__197257,G__197258));
})();
var G__197200 = "[";
var G__197201 = (function (){var G__197259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197260 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197259,G__197260) : tailrecursion.hoplon.span.call(null,G__197259,G__197260));
})();
var G__197202 = "  (";
var G__197203 = (function (){var G__197261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197262 = "start-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197261,G__197262) : tailrecursion.hoplon.span.call(null,G__197261,G__197262));
})();
var G__197204 = " ";
var G__197205 = (function (){var G__197263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197264 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197263,G__197264) : tailrecursion.hoplon.span.call(null,G__197263,G__197264));
})();
var G__197206 = ")\n        ";
var G__197207 = (function (){var G__197265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197266 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197265,G__197266) : tailrecursion.hoplon.span.call(null,G__197265,G__197266));
})();
var G__197208 = "  (";
var G__197209 = (function (){var G__197267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197268 = "end-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197267,G__197268) : tailrecursion.hoplon.span.call(null,G__197267,G__197268));
})();
var G__197210 = " ";
var G__197211 = (function (){var G__197269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197270 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197269,G__197270) : tailrecursion.hoplon.span.call(null,G__197269,G__197270));
})();
var G__197212 = ")\n        ";
var G__197213 = (function (){var G__197271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197272 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197271,G__197272) : tailrecursion.hoplon.span.call(null,G__197271,G__197272));
})();
var G__197214 = " (";
var G__197215 = (function (){var G__197273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197274 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197273,G__197274) : tailrecursion.hoplon.span.call(null,G__197273,G__197274));
})();
var G__197216 = " ";
var G__197217 = (function (){var G__197275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197276 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197275,G__197276) : tailrecursion.hoplon.span.call(null,G__197275,G__197276));
})();
var G__197218 = ")\n        ";
var G__197219 = (function (){var G__197277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197278 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197277,G__197278) : tailrecursion.hoplon.span.call(null,G__197277,G__197278));
})();
var G__197220 = " (";
var G__197221 = (function (){var G__197279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197280 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197279,G__197280) : tailrecursion.hoplon.span.call(null,G__197279,G__197280));
})();
var G__197222 = " ";
var G__197223 = (function (){var G__197281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197282 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197281,G__197282) : tailrecursion.hoplon.span.call(null,G__197281,G__197282));
})();
var G__197224 = ")\n        ";
var G__197225 = (function (){var G__197283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197284 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197283,G__197284) : tailrecursion.hoplon.span.call(null,G__197283,G__197284));
})();
var G__197226 = " (";
var G__197227 = (function (){var G__197285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197286 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197285,G__197286) : tailrecursion.hoplon.span.call(null,G__197285,G__197286));
})();
var G__197228 = " ";
var G__197229 = (function (){var G__197287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197288 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197287,G__197288) : tailrecursion.hoplon.span.call(null,G__197287,G__197288));
})();
var G__197230 = ")\n        ";
var G__197231 = (function (){var G__197289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197290 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197289,G__197290) : tailrecursion.hoplon.span.call(null,G__197289,G__197290));
})();
var G__197232 = " (";
var G__197233 = (function (){var G__197291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197292 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197291,G__197292) : tailrecursion.hoplon.span.call(null,G__197291,G__197292));
})();
var G__197234 = " ";
var G__197235 = (function (){var G__197293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197294 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197293,G__197294) : tailrecursion.hoplon.span.call(null,G__197293,G__197294));
})();
var G__197236 = ")]\n    (";
var G__197237 = (function (){var G__197295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197296 = "make-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197295,G__197296) : tailrecursion.hoplon.span.call(null,G__197295,G__197296));
})();
var G__197238 = " (";
var G__197239 = (function (){var G__197297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197298 = "average";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197297,G__197298) : tailrecursion.hoplon.span.call(null,G__197297,G__197298));
})();
var G__197240 = " ";
var G__197241 = (function (){var G__197299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197300 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197299,G__197300) : tailrecursion.hoplon.span.call(null,G__197299,G__197300));
})();
var G__197242 = " ";
var G__197243 = (function (){var G__197301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197302 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197301,G__197302) : tailrecursion.hoplon.span.call(null,G__197301,G__197302));
})();
var G__197244 = ") (";
var G__197245 = (function (){var G__197303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197304 = "average";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197303,G__197304) : tailrecursion.hoplon.span.call(null,G__197303,G__197304));
})();
var G__197246 = " ";
var G__197247 = (function (){var G__197305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197306 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197305,G__197306) : tailrecursion.hoplon.span.call(null,G__197305,G__197306));
})();
var G__197248 = " ";
var G__197249 = (function (){var G__197307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197308 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197307,G__197308) : tailrecursion.hoplon.span.call(null,G__197307,G__197308));
})();
var G__197250 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59(G__197192,G__197193,G__197194,G__197195,G__197196,G__197197,G__197198,G__197199,G__197200,G__197201,G__197202,G__197203,G__197204,G__197205,G__197206,G__197207,G__197208,G__197209,G__197210,G__197211,G__197212,G__197213,G__197214,G__197215,G__197216,G__197217,G__197218,G__197219,G__197220,G__197221,G__197222,G__197223,G__197224,G__197225,G__197226,G__197227,G__197228,G__197229,G__197230,G__197231,G__197232,G__197233,G__197234,G__197235,G__197236,G__197237,G__197238,G__197239,G__197240,G__197241,G__197242,G__197243,G__197244,G__197245,G__197246,G__197247,G__197248,G__197249,G__197250) : tailrecursion.hoplon.pre.call(null,G__197192,G__197193,G__197194,G__197195,G__197196,G__197197,G__197198,G__197199,G__197200,G__197201,G__197202,G__197203,G__197204,G__197205,G__197206,G__197207,G__197208,G__197209,G__197210,G__197211,G__197212,G__197213,G__197214,G__197215,G__197216,G__197217,G__197218,G__197219,G__197220,G__197221,G__197222,G__197223,G__197224,G__197225,G__197226,G__197227,G__197228,G__197229,G__197230,G__197231,G__197232,G__197233,G__197234,G__197235,G__197236,G__197237,G__197238,G__197239,G__197240,G__197241,G__197242,G__197243,G__197244,G__197245,G__197246,G__197247,G__197248,G__197249,G__197250));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__197190,G__197191) : tailrecursion.hoplon.div.call(null,G__197190,G__197191));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__197189) : tailrecursion.hoplon.div.call(null,G__197189));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196810;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196809;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196808;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196807;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_197309 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197310 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_197311 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197312 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__197313 = cljs.core.PersistentArrayMap.EMPTY;
var G__197314 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Implement a representation for rectangles in a plane. (Hint: you may want to make use of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/ex/2/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.2"], null)], 0))," In terms of your constructors and selectors, create procedures that compute the perimeter and the area of a given rectangle. Now implement a different representation for rectangles. Can you design your system with suitable abstraction barriers, so that the same perimeter and area procedures will work using either representation?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197313,G__197314) : tailrecursion.hoplon.markdown.para_node.call(null,G__197313,G__197314));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197312;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197311;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197310;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197309;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_197315 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197316 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_197317 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197318 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__197319 = cljs.core.PersistentArrayMap.EMPTY;
var G__197320 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Assuming we are given coordinates of an actual rectangle (so that we don",(function (){var G__197321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__197322 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__197321,G__197322) : tailrecursion.hoplon.markdown.simple_node.call(null,G__197321,G__197322));
})(),"t have to use the Pythagorean theorem or some other method to confirm that the points are what they claim to be), will simplify our lives considerably. Since any rectangle is determined by three of its vertices, we can assume that we are given three sequentially adjacent vertices."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197319,G__197320) : tailrecursion.hoplon.markdown.para_node.call(null,G__197319,G__197320));
})(),(function (){var G__197361 = (function (){var G__197362 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__197363 = (function (){var G__197364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__197365 = "(";
var G__197366 = (function (){var G__197382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197383 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197382,G__197383) : tailrecursion.hoplon.span.call(null,G__197382,G__197383));
})();
var G__197367 = (function (){var G__197384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197385 = "make-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197384,G__197385) : tailrecursion.hoplon.span.call(null,G__197384,G__197385));
})();
var G__197368 = " [";
var G__197369 = (function (){var G__197386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197387 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197386,G__197387) : tailrecursion.hoplon.span.call(null,G__197386,G__197387));
})();
var G__197370 = " ";
var G__197371 = (function (){var G__197388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197389 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197388,G__197389) : tailrecursion.hoplon.span.call(null,G__197388,G__197389));
})();
var G__197372 = " ";
var G__197373 = (function (){var G__197390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197391 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197390,G__197391) : tailrecursion.hoplon.span.call(null,G__197390,G__197391));
})();
var G__197374 = "]\n  (";
var G__197375 = (function (){var G__197392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197393 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197392,G__197393) : tailrecursion.hoplon.span.call(null,G__197392,G__197393));
})();
var G__197376 = (function (){var G__197394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197395 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197394,G__197395) : tailrecursion.hoplon.span.call(null,G__197394,G__197395));
})();
var G__197377 = " ";
var G__197378 = (function (){var G__197396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197397 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197396,G__197397) : tailrecursion.hoplon.span.call(null,G__197396,G__197397));
})();
var G__197379 = " ";
var G__197380 = (function (){var G__197398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197399 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197398,G__197399) : tailrecursion.hoplon.span.call(null,G__197398,G__197399));
})();
var G__197381 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__197364,G__197365,G__197366,G__197367,G__197368,G__197369,G__197370,G__197371,G__197372,G__197373,G__197374,G__197375,G__197376,G__197377,G__197378,G__197379,G__197380,G__197381) : tailrecursion.hoplon.pre.call(null,G__197364,G__197365,G__197366,G__197367,G__197368,G__197369,G__197370,G__197371,G__197372,G__197373,G__197374,G__197375,G__197376,G__197377,G__197378,G__197379,G__197380,G__197381));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__197362,G__197363) : tailrecursion.hoplon.div.call(null,G__197362,G__197363));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__197361) : tailrecursion.hoplon.div.call(null,G__197361));
})(),(function (){var G__197400 = cljs.core.PersistentArrayMap.EMPTY;
var G__197401 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then, we realize that in order to compute the area and perimeter, we need to know the length and width of the rectangle. So, let",(function (){var G__197402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__197403 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__197402,G__197403) : tailrecursion.hoplon.markdown.simple_node.call(null,G__197402,G__197403));
})(),"s write a separate procedure to do that. But before we do that, it might be a good idea to have a procedure that can find the length of a segment (we could do without this procedure, but it seems like a useful procedure to have if we are to be working with segments, so why not allow ourselves this tool?)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197400,G__197401) : tailrecursion.hoplon.markdown.para_node.call(null,G__197400,G__197401));
})(),(function (){var G__197533 = (function (){var G__197534 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__197535 = (function (){var G__197536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__197537 = "(";
var G__197538 = (function (){var G__197599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197600 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197599,G__197600) : tailrecursion.hoplon.span.call(null,G__197599,G__197600));
})();
var G__197539 = (function (){var G__197601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197602 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197601,G__197602) : tailrecursion.hoplon.span.call(null,G__197601,G__197602));
})();
var G__197540 = " [";
var G__197541 = (function (){var G__197603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197604 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197603,G__197604) : tailrecursion.hoplon.span.call(null,G__197603,G__197604));
})();
var G__197542 = "]\n  (";
var G__197543 = (function (){var G__197605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197606 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197605,G__197606) : tailrecursion.hoplon.span.call(null,G__197605,G__197606));
})();
var G__197544 = "[";
var G__197545 = (function (){var G__197607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197608 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197607,G__197608) : tailrecursion.hoplon.span.call(null,G__197607,G__197608));
})();
var G__197546 = "  (";
var G__197547 = (function (){var G__197609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197610 = "start-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197609,G__197610) : tailrecursion.hoplon.span.call(null,G__197609,G__197610));
})();
var G__197548 = " ";
var G__197549 = (function (){var G__197611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197612 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197611,G__197612) : tailrecursion.hoplon.span.call(null,G__197611,G__197612));
})();
var G__197550 = ")\n        ";
var G__197551 = (function (){var G__197613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197614 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197613,G__197614) : tailrecursion.hoplon.span.call(null,G__197613,G__197614));
})();
var G__197552 = "  (";
var G__197553 = (function (){var G__197615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197616 = "end-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197615,G__197616) : tailrecursion.hoplon.span.call(null,G__197615,G__197616));
})();
var G__197554 = " ";
var G__197555 = (function (){var G__197617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197618 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197617,G__197618) : tailrecursion.hoplon.span.call(null,G__197617,G__197618));
})();
var G__197556 = ")\n        ";
var G__197557 = (function (){var G__197619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197620 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197619,G__197620) : tailrecursion.hoplon.span.call(null,G__197619,G__197620));
})();
var G__197558 = " (";
var G__197559 = (function (){var G__197621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197622 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197621,G__197622) : tailrecursion.hoplon.span.call(null,G__197621,G__197622));
})();
var G__197560 = " ";
var G__197561 = (function (){var G__197623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197624 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197623,G__197624) : tailrecursion.hoplon.span.call(null,G__197623,G__197624));
})();
var G__197562 = ")\n        ";
var G__197563 = (function (){var G__197625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197626 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197625,G__197626) : tailrecursion.hoplon.span.call(null,G__197625,G__197626));
})();
var G__197564 = " (";
var G__197565 = (function (){var G__197627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197628 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197627,G__197628) : tailrecursion.hoplon.span.call(null,G__197627,G__197628));
})();
var G__197566 = " ";
var G__197567 = (function (){var G__197629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197630 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197629,G__197630) : tailrecursion.hoplon.span.call(null,G__197629,G__197630));
})();
var G__197568 = ")\n        ";
var G__197569 = (function (){var G__197631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197632 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197631,G__197632) : tailrecursion.hoplon.span.call(null,G__197631,G__197632));
})();
var G__197570 = " (";
var G__197571 = (function (){var G__197633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197634 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197633,G__197634) : tailrecursion.hoplon.span.call(null,G__197633,G__197634));
})();
var G__197572 = " ";
var G__197573 = (function (){var G__197635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197636 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197635,G__197636) : tailrecursion.hoplon.span.call(null,G__197635,G__197636));
})();
var G__197574 = ")\n        ";
var G__197575 = (function (){var G__197637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197638 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197637,G__197638) : tailrecursion.hoplon.span.call(null,G__197637,G__197638));
})();
var G__197576 = " (";
var G__197577 = (function (){var G__197639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197640 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197639,G__197640) : tailrecursion.hoplon.span.call(null,G__197639,G__197640));
})();
var G__197578 = " ";
var G__197579 = (function (){var G__197641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197642 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197641,G__197642) : tailrecursion.hoplon.span.call(null,G__197641,G__197642));
})();
var G__197580 = ")]\n    (";
var G__197581 = (function (){var G__197643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197644 = "Math/sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197643,G__197644) : tailrecursion.hoplon.span.call(null,G__197643,G__197644));
})();
var G__197582 = " (";
var G__197583 = (function (){var G__197645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197646 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197645,G__197646) : tailrecursion.hoplon.span.call(null,G__197645,G__197646));
})();
var G__197584 = "(";
var G__197585 = (function (){var G__197647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197648 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197647,G__197648) : tailrecursion.hoplon.span.call(null,G__197647,G__197648));
})();
var G__197586 = " (";
var G__197587 = (function (){var G__197649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197650 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197649,G__197650) : tailrecursion.hoplon.span.call(null,G__197649,G__197650));
})();
var G__197588 = (function (){var G__197651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197652 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197651,G__197652) : tailrecursion.hoplon.span.call(null,G__197651,G__197652));
})();
var G__197589 = " ";
var G__197590 = (function (){var G__197653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197654 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197653,G__197654) : tailrecursion.hoplon.span.call(null,G__197653,G__197654));
})();
var G__197591 = "))\n                  (";
var G__197592 = (function (){var G__197655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197656 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197655,G__197656) : tailrecursion.hoplon.span.call(null,G__197655,G__197656));
})();
var G__197593 = " (";
var G__197594 = (function (){var G__197657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197658 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197657,G__197658) : tailrecursion.hoplon.span.call(null,G__197657,G__197658));
})();
var G__197595 = (function (){var G__197659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197660 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197659,G__197660) : tailrecursion.hoplon.span.call(null,G__197659,G__197660));
})();
var G__197596 = " ";
var G__197597 = (function (){var G__197661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197662 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197661,G__197662) : tailrecursion.hoplon.span.call(null,G__197661,G__197662));
})();
var G__197598 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63(G__197536,G__197537,G__197538,G__197539,G__197540,G__197541,G__197542,G__197543,G__197544,G__197545,G__197546,G__197547,G__197548,G__197549,G__197550,G__197551,G__197552,G__197553,G__197554,G__197555,G__197556,G__197557,G__197558,G__197559,G__197560,G__197561,G__197562,G__197563,G__197564,G__197565,G__197566,G__197567,G__197568,G__197569,G__197570,G__197571,G__197572,G__197573,G__197574,G__197575,G__197576,G__197577,G__197578,G__197579,G__197580,G__197581,G__197582,G__197583,G__197584,G__197585,G__197586,G__197587,G__197588,G__197589,G__197590,G__197591,G__197592,G__197593,G__197594,G__197595,G__197596,G__197597,G__197598) : tailrecursion.hoplon.pre.call(null,G__197536,G__197537,G__197538,G__197539,G__197540,G__197541,G__197542,G__197543,G__197544,G__197545,G__197546,G__197547,G__197548,G__197549,G__197550,G__197551,G__197552,G__197553,G__197554,G__197555,G__197556,G__197557,G__197558,G__197559,G__197560,G__197561,G__197562,G__197563,G__197564,G__197565,G__197566,G__197567,G__197568,G__197569,G__197570,G__197571,G__197572,G__197573,G__197574,G__197575,G__197576,G__197577,G__197578,G__197579,G__197580,G__197581,G__197582,G__197583,G__197584,G__197585,G__197586,G__197587,G__197588,G__197589,G__197590,G__197591,G__197592,G__197593,G__197594,G__197595,G__197596,G__197597,G__197598));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__197534,G__197535) : tailrecursion.hoplon.div.call(null,G__197534,G__197535));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__197533) : tailrecursion.hoplon.div.call(null,G__197533));
})(),(function (){var G__197663 = cljs.core.PersistentArrayMap.EMPTY;
var G__197664 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Good, now we can move on. I",(function (){var G__197665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__197666 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__197665,G__197666) : tailrecursion.hoplon.markdown.simple_node.call(null,G__197665,G__197666));
})(),"m not sure if it would be useful to define a global procedure to get the sides of a rectangle as line-segments, but if it gets in the way, we can use a ",(function (){var G__197667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__197668 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__197667,G__197668) : tailrecursion.hoplon.markdown.code_node.call(null,G__197667,G__197668));
})()," binding instead. For now, let",(function (){var G__197669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__197670 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__197669,G__197670) : tailrecursion.hoplon.markdown.simple_node.call(null,G__197669,G__197670));
})(),"s define it globally."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197663,G__197664) : tailrecursion.hoplon.markdown.para_node.call(null,G__197663,G__197664));
})(),(function (){var G__197737 = (function (){var G__197738 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__197739 = (function (){var G__197740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__197741 = "(";
var G__197742 = (function (){var G__197770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197771 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197770,G__197771) : tailrecursion.hoplon.span.call(null,G__197770,G__197771));
})();
var G__197743 = (function (){var G__197772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197773 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197772,G__197773) : tailrecursion.hoplon.span.call(null,G__197772,G__197773));
})();
var G__197744 = " [";
var G__197745 = (function (){var G__197774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197775 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197774,G__197775) : tailrecursion.hoplon.span.call(null,G__197774,G__197775));
})();
var G__197746 = "]\n  (";
var G__197747 = (function (){var G__197776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197777 = "make-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197776,G__197777) : tailrecursion.hoplon.span.call(null,G__197776,G__197777));
})();
var G__197748 = " (";
var G__197749 = (function (){var G__197778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197779 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197778,G__197779) : tailrecursion.hoplon.span.call(null,G__197778,G__197779));
})();
var G__197750 = (function (){var G__197780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197781 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197780,G__197781) : tailrecursion.hoplon.span.call(null,G__197780,G__197781));
})();
var G__197751 = ") (";
var G__197752 = (function (){var G__197782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197783 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197782,G__197783) : tailrecursion.hoplon.span.call(null,G__197782,G__197783));
})();
var G__197753 = (function (){var G__197784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197785 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197784,G__197785) : tailrecursion.hoplon.span.call(null,G__197784,G__197785));
})();
var G__197754 = ")))\n(";
var G__197755 = (function (){var G__197786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197787 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197786,G__197787) : tailrecursion.hoplon.span.call(null,G__197786,G__197787));
})();
var G__197756 = (function (){var G__197788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197789 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197788,G__197789) : tailrecursion.hoplon.span.call(null,G__197788,G__197789));
})();
var G__197757 = " [";
var G__197758 = (function (){var G__197790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197791 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197790,G__197791) : tailrecursion.hoplon.span.call(null,G__197790,G__197791));
})();
var G__197759 = "]\n  (";
var G__197760 = (function (){var G__197792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197793 = "make-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197792,G__197793) : tailrecursion.hoplon.span.call(null,G__197792,G__197793));
})();
var G__197761 = " (";
var G__197762 = (function (){var G__197794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197795 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197794,G__197795) : tailrecursion.hoplon.span.call(null,G__197794,G__197795));
})();
var G__197763 = (function (){var G__197796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197797 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197796,G__197797) : tailrecursion.hoplon.span.call(null,G__197796,G__197797));
})();
var G__197764 = ") (";
var G__197765 = (function (){var G__197798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197799 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197798,G__197799) : tailrecursion.hoplon.span.call(null,G__197798,G__197799));
})();
var G__197766 = (function (){var G__197800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197801 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197800,G__197801) : tailrecursion.hoplon.span.call(null,G__197800,G__197801));
})();
var G__197767 = " ";
var G__197768 = (function (){var G__197802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__197803 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197802,G__197803) : tailrecursion.hoplon.span.call(null,G__197802,G__197803));
})();
var G__197769 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30(G__197740,G__197741,G__197742,G__197743,G__197744,G__197745,G__197746,G__197747,G__197748,G__197749,G__197750,G__197751,G__197752,G__197753,G__197754,G__197755,G__197756,G__197757,G__197758,G__197759,G__197760,G__197761,G__197762,G__197763,G__197764,G__197765,G__197766,G__197767,G__197768,G__197769) : tailrecursion.hoplon.pre.call(null,G__197740,G__197741,G__197742,G__197743,G__197744,G__197745,G__197746,G__197747,G__197748,G__197749,G__197750,G__197751,G__197752,G__197753,G__197754,G__197755,G__197756,G__197757,G__197758,G__197759,G__197760,G__197761,G__197762,G__197763,G__197764,G__197765,G__197766,G__197767,G__197768,G__197769));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__197738,G__197739) : tailrecursion.hoplon.div.call(null,G__197738,G__197739));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__197737) : tailrecursion.hoplon.div.call(null,G__197737));
})(),(function (){var G__197804 = cljs.core.PersistentArrayMap.EMPTY;
var G__197805 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we",(function (){var G__197806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__197807 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__197806,G__197807) : tailrecursion.hoplon.markdown.simple_node.call(null,G__197806,G__197807));
})(),"re ready to make our area and perimeter procedures."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197804,G__197805) : tailrecursion.hoplon.markdown.para_node.call(null,G__197804,G__197805));
})(),(function (){var G__197897 = (function (){var G__197898 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__197899 = (function (){var G__197900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__197901 = "(";
var G__197902 = (function (){var G__197943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197944 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197943,G__197944) : tailrecursion.hoplon.span.call(null,G__197943,G__197944));
})();
var G__197903 = (function (){var G__197945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197946 = "area-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197945,G__197946) : tailrecursion.hoplon.span.call(null,G__197945,G__197946));
})();
var G__197904 = " [";
var G__197905 = (function (){var G__197947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197948 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197947,G__197948) : tailrecursion.hoplon.span.call(null,G__197947,G__197948));
})();
var G__197906 = "]\n  (";
var G__197907 = (function (){var G__197949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197950 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197949,G__197950) : tailrecursion.hoplon.span.call(null,G__197949,G__197950));
})();
var G__197908 = "(";
var G__197909 = (function (){var G__197951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197952 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197951,G__197952) : tailrecursion.hoplon.span.call(null,G__197951,G__197952));
})();
var G__197910 = " (";
var G__197911 = (function (){var G__197953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197954 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197953,G__197954) : tailrecursion.hoplon.span.call(null,G__197953,G__197954));
})();
var G__197912 = " ";
var G__197913 = (function (){var G__197955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197956 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197955,G__197956) : tailrecursion.hoplon.span.call(null,G__197955,G__197956));
})();
var G__197914 = "))\n     (";
var G__197915 = (function (){var G__197957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197958 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197957,G__197958) : tailrecursion.hoplon.span.call(null,G__197957,G__197958));
})();
var G__197916 = " (";
var G__197917 = (function (){var G__197959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197960 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197959,G__197960) : tailrecursion.hoplon.span.call(null,G__197959,G__197960));
})();
var G__197918 = " ";
var G__197919 = (function (){var G__197961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197962 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197961,G__197962) : tailrecursion.hoplon.span.call(null,G__197961,G__197962));
})();
var G__197920 = "))))\n(";
var G__197921 = (function (){var G__197963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197964 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197963,G__197964) : tailrecursion.hoplon.span.call(null,G__197963,G__197964));
})();
var G__197922 = (function (){var G__197965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197966 = "perimeter-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197965,G__197966) : tailrecursion.hoplon.span.call(null,G__197965,G__197966));
})();
var G__197923 = " [";
var G__197924 = (function (){var G__197967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197968 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197967,G__197968) : tailrecursion.hoplon.span.call(null,G__197967,G__197968));
})();
var G__197925 = "]\n  (";
var G__197926 = (function (){var G__197969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197970 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197969,G__197970) : tailrecursion.hoplon.span.call(null,G__197969,G__197970));
})();
var G__197927 = (function (){var G__197971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__197972 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197971,G__197972) : tailrecursion.hoplon.span.call(null,G__197971,G__197972));
})();
var G__197928 = " (";
var G__197929 = (function (){var G__197973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197974 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197973,G__197974) : tailrecursion.hoplon.span.call(null,G__197973,G__197974));
})();
var G__197930 = "(";
var G__197931 = (function (){var G__197975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197976 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197975,G__197976) : tailrecursion.hoplon.span.call(null,G__197975,G__197976));
})();
var G__197932 = " (";
var G__197933 = (function (){var G__197977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197978 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197977,G__197978) : tailrecursion.hoplon.span.call(null,G__197977,G__197978));
})();
var G__197934 = " ";
var G__197935 = (function (){var G__197979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197980 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197979,G__197980) : tailrecursion.hoplon.span.call(null,G__197979,G__197980));
})();
var G__197936 = "))\n          (";
var G__197937 = (function (){var G__197981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197982 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197981,G__197982) : tailrecursion.hoplon.span.call(null,G__197981,G__197982));
})();
var G__197938 = " (";
var G__197939 = (function (){var G__197983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197984 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197983,G__197984) : tailrecursion.hoplon.span.call(null,G__197983,G__197984));
})();
var G__197940 = " ";
var G__197941 = (function (){var G__197985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197986 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197985,G__197986) : tailrecursion.hoplon.span.call(null,G__197985,G__197986));
})();
var G__197942 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43(G__197900,G__197901,G__197902,G__197903,G__197904,G__197905,G__197906,G__197907,G__197908,G__197909,G__197910,G__197911,G__197912,G__197913,G__197914,G__197915,G__197916,G__197917,G__197918,G__197919,G__197920,G__197921,G__197922,G__197923,G__197924,G__197925,G__197926,G__197927,G__197928,G__197929,G__197930,G__197931,G__197932,G__197933,G__197934,G__197935,G__197936,G__197937,G__197938,G__197939,G__197940,G__197941,G__197942) : tailrecursion.hoplon.pre.call(null,G__197900,G__197901,G__197902,G__197903,G__197904,G__197905,G__197906,G__197907,G__197908,G__197909,G__197910,G__197911,G__197912,G__197913,G__197914,G__197915,G__197916,G__197917,G__197918,G__197919,G__197920,G__197921,G__197922,G__197923,G__197924,G__197925,G__197926,G__197927,G__197928,G__197929,G__197930,G__197931,G__197932,G__197933,G__197934,G__197935,G__197936,G__197937,G__197938,G__197939,G__197940,G__197941,G__197942));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__197898,G__197899) : tailrecursion.hoplon.div.call(null,G__197898,G__197899));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__197897) : tailrecursion.hoplon.div.call(null,G__197897));
})(),(function (){var G__197987 = cljs.core.PersistentArrayMap.EMPTY;
var G__197988 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now, if our implementation for rectangles were something different, like:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197987,G__197988) : tailrecursion.hoplon.markdown.para_node.call(null,G__197987,G__197988));
})(),(function (){var G__198038 = (function (){var G__198039 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__198040 = (function (){var G__198041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__198042 = "(";
var G__198043 = (function (){var G__198064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198065 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198064,G__198065) : tailrecursion.hoplon.span.call(null,G__198064,G__198065));
})();
var G__198044 = (function (){var G__198066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198067 = "make-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198066,G__198067) : tailrecursion.hoplon.span.call(null,G__198066,G__198067));
})();
var G__198045 = " [";
var G__198046 = (function (){var G__198068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198069 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198068,G__198069) : tailrecursion.hoplon.span.call(null,G__198068,G__198069));
})();
var G__198047 = " ";
var G__198048 = (function (){var G__198070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198071 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198070,G__198071) : tailrecursion.hoplon.span.call(null,G__198070,G__198071));
})();
var G__198049 = " ";
var G__198050 = (function (){var G__198072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198073 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198072,G__198073) : tailrecursion.hoplon.span.call(null,G__198072,G__198073));
})();
var G__198051 = "]\n  (";
var G__198052 = (function (){var G__198074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198075 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198074,G__198075) : tailrecursion.hoplon.span.call(null,G__198074,G__198075));
})();
var G__198053 = "(";
var G__198054 = (function (){var G__198076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198077 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198076,G__198077) : tailrecursion.hoplon.span.call(null,G__198076,G__198077));
})();
var G__198055 = (function (){var G__198078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198079 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198078,G__198079) : tailrecursion.hoplon.span.call(null,G__198078,G__198079));
})();
var G__198056 = " ";
var G__198057 = (function (){var G__198080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198081 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198080,G__198081) : tailrecursion.hoplon.span.call(null,G__198080,G__198081));
})();
var G__198058 = ") (";
var G__198059 = (function (){var G__198082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198083 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198082,G__198083) : tailrecursion.hoplon.span.call(null,G__198082,G__198083));
})();
var G__198060 = (function (){var G__198084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198085 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198084,G__198085) : tailrecursion.hoplon.span.call(null,G__198084,G__198085));
})();
var G__198061 = " ";
var G__198062 = (function (){var G__198086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198087 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198086,G__198087) : tailrecursion.hoplon.span.call(null,G__198086,G__198087));
})();
var G__198063 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__198041,G__198042,G__198043,G__198044,G__198045,G__198046,G__198047,G__198048,G__198049,G__198050,G__198051,G__198052,G__198053,G__198054,G__198055,G__198056,G__198057,G__198058,G__198059,G__198060,G__198061,G__198062,G__198063) : tailrecursion.hoplon.pre.call(null,G__198041,G__198042,G__198043,G__198044,G__198045,G__198046,G__198047,G__198048,G__198049,G__198050,G__198051,G__198052,G__198053,G__198054,G__198055,G__198056,G__198057,G__198058,G__198059,G__198060,G__198061,G__198062,G__198063));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__198039,G__198040) : tailrecursion.hoplon.div.call(null,G__198039,G__198040));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__198038) : tailrecursion.hoplon.div.call(null,G__198038));
})(),(function (){var G__198088 = cljs.core.PersistentArrayMap.EMPTY;
var G__198089 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In this representation, we",(function (){var G__198090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__198091 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__198090,G__198091) : tailrecursion.hoplon.markdown.simple_node.call(null,G__198090,G__198091));
})(),"re defining rectangles by their sides rather than by their vertices. Let",(function (){var G__198092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__198093 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__198092,G__198093) : tailrecursion.hoplon.markdown.simple_node.call(null,G__198092,G__198093));
})(),"s see how things must change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198088,G__198089) : tailrecursion.hoplon.markdown.para_node.call(null,G__198088,G__198089));
})(),(function (){var G__198134 = (function (){var G__198135 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__198136 = (function (){var G__198137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__198138 = "(";
var G__198139 = (function (){var G__198155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198156 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198155,G__198156) : tailrecursion.hoplon.span.call(null,G__198155,G__198156));
})();
var G__198140 = (function (){var G__198157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198158 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198157,G__198158) : tailrecursion.hoplon.span.call(null,G__198157,G__198158));
})();
var G__198141 = " [";
var G__198142 = (function (){var G__198159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198160 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198159,G__198160) : tailrecursion.hoplon.span.call(null,G__198159,G__198160));
})();
var G__198143 = "]\n  (";
var G__198144 = (function (){var G__198161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198162 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198161,G__198162) : tailrecursion.hoplon.span.call(null,G__198161,G__198162));
})();
var G__198145 = (function (){var G__198163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198164 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198163,G__198164) : tailrecursion.hoplon.span.call(null,G__198163,G__198164));
})();
var G__198146 = "))\n(";
var G__198147 = (function (){var G__198165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198166 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198165,G__198166) : tailrecursion.hoplon.span.call(null,G__198165,G__198166));
})();
var G__198148 = (function (){var G__198167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198168 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198167,G__198168) : tailrecursion.hoplon.span.call(null,G__198167,G__198168));
})();
var G__198149 = " [";
var G__198150 = (function (){var G__198169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198170 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198169,G__198170) : tailrecursion.hoplon.span.call(null,G__198169,G__198170));
})();
var G__198151 = "]\n  (";
var G__198152 = (function (){var G__198171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198172 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198171,G__198172) : tailrecursion.hoplon.span.call(null,G__198171,G__198172));
})();
var G__198153 = (function (){var G__198173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198174 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198173,G__198174) : tailrecursion.hoplon.span.call(null,G__198173,G__198174));
})();
var G__198154 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__198137,G__198138,G__198139,G__198140,G__198141,G__198142,G__198143,G__198144,G__198145,G__198146,G__198147,G__198148,G__198149,G__198150,G__198151,G__198152,G__198153,G__198154) : tailrecursion.hoplon.pre.call(null,G__198137,G__198138,G__198139,G__198140,G__198141,G__198142,G__198143,G__198144,G__198145,G__198146,G__198147,G__198148,G__198149,G__198150,G__198151,G__198152,G__198153,G__198154));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__198135,G__198136) : tailrecursion.hoplon.div.call(null,G__198135,G__198136));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__198134) : tailrecursion.hoplon.div.call(null,G__198134));
})(),(function (){var G__198175 = cljs.core.PersistentArrayMap.EMPTY;
var G__198176 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then everything else works just fine."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198175,G__198176) : tailrecursion.hoplon.markdown.para_node.call(null,G__198175,G__198176));
})(),(function (){var G__198177 = cljs.core.PersistentArrayMap.EMPTY;
var G__198178 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: if we wanted to check to make sure that the points were in fact vertices of a rectangle, we could just add an ",(function (){var G__198179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"if"], null);
var G__198180 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198179,G__198180) : tailrecursion.hoplon.markdown.code_node.call(null,G__198179,G__198180));
})()," statement to our definition of ",(function (){var G__198181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rectangle"], null);
var G__198182 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198181,G__198182) : tailrecursion.hoplon.markdown.code_node.call(null,G__198181,G__198182));
})()," such that if it passes the Pythagorean test "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198177,G__198178) : tailrecursion.hoplon.markdown.para_node.call(null,G__198177,G__198178));
})(),(function (){var G__198231 = (function (){var G__198232 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__198233 = (function (){var G__198234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__198235 = "(";
var G__198236 = (function (){var G__198258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198259 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198258,G__198259) : tailrecursion.hoplon.span.call(null,G__198258,G__198259));
})();
var G__198237 = "(";
var G__198238 = (function (){var G__198260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198261 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198260,G__198261) : tailrecursion.hoplon.span.call(null,G__198260,G__198261));
})();
var G__198239 = " (";
var G__198240 = (function (){var G__198262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198263 = "diagonal-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198262,G__198263) : tailrecursion.hoplon.span.call(null,G__198262,G__198263));
})();
var G__198241 = " ";
var G__198242 = (function (){var G__198264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198265 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198264,G__198265) : tailrecursion.hoplon.span.call(null,G__198264,G__198265));
})();
var G__198243 = ")) \n   (";
var G__198244 = (function (){var G__198266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198267 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198266,G__198267) : tailrecursion.hoplon.span.call(null,G__198266,G__198267));
})();
var G__198245 = "(";
var G__198246 = (function (){var G__198268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198269 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198268,G__198269) : tailrecursion.hoplon.span.call(null,G__198268,G__198269));
})();
var G__198247 = " (";
var G__198248 = (function (){var G__198270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198271 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198270,G__198271) : tailrecursion.hoplon.span.call(null,G__198270,G__198271));
})();
var G__198249 = " ";
var G__198250 = (function (){var G__198272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198273 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198272,G__198273) : tailrecursion.hoplon.span.call(null,G__198272,G__198273));
})();
var G__198251 = ")) \n      (";
var G__198252 = (function (){var G__198274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198275 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198274,G__198275) : tailrecursion.hoplon.span.call(null,G__198274,G__198275));
})();
var G__198253 = " (";
var G__198254 = (function (){var G__198276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198277 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198276,G__198277) : tailrecursion.hoplon.span.call(null,G__198276,G__198277));
})();
var G__198255 = " ";
var G__198256 = (function (){var G__198278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198279 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198278,G__198279) : tailrecursion.hoplon.span.call(null,G__198278,G__198279));
})();
var G__198257 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24(G__198234,G__198235,G__198236,G__198237,G__198238,G__198239,G__198240,G__198241,G__198242,G__198243,G__198244,G__198245,G__198246,G__198247,G__198248,G__198249,G__198250,G__198251,G__198252,G__198253,G__198254,G__198255,G__198256,G__198257) : tailrecursion.hoplon.pre.call(null,G__198234,G__198235,G__198236,G__198237,G__198238,G__198239,G__198240,G__198241,G__198242,G__198243,G__198244,G__198245,G__198246,G__198247,G__198248,G__198249,G__198250,G__198251,G__198252,G__198253,G__198254,G__198255,G__198256,G__198257));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__198232,G__198233) : tailrecursion.hoplon.div.call(null,G__198232,G__198233));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__198231) : tailrecursion.hoplon.div.call(null,G__198231));
})(),(function (){var G__198280 = cljs.core.PersistentArrayMap.EMPTY;
var G__198281 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Where ",(function (){var G__198282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"diagonal-rectangle"], null);
var G__198283 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198282,G__198283) : tailrecursion.hoplon.markdown.code_node.call(null,G__198282,G__198283));
})()," would be defined in the necessary way to get what should be the diagonal of the rectangle."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198280,G__198281) : tailrecursion.hoplon.markdown.para_node.call(null,G__198280,G__198281));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197318;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197317;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197316;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197315;
}})()], 0))], 0))], 0));
var G__193988 = "";
var G__193989 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"What is Meant by Data?"], null),(function (){var _STAR_references_STAR_198284 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_198285 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_198286 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_198287 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__198288 = cljs.core.PersistentArrayMap.EMPTY;
var G__198289 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We began the rational-number implementation in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/sect/1/sub/1/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.1.1"], null)], 0))," by implementing the rational-number operations ",(function (){var G__198290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__198291 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198290,G__198291) : tailrecursion.hoplon.markdown.code_node.call(null,G__198290,G__198291));
})(),", ",(function (){var G__198292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-rat"], null);
var G__198293 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198292,G__198293) : tailrecursion.hoplon.markdown.code_node.call(null,G__198292,G__198293));
})(),", and so on in terms of three unspecified procedures: ",(function (){var G__198294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__198295 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198294,G__198295) : tailrecursion.hoplon.markdown.code_node.call(null,G__198294,G__198295));
})(),", ",(function (){var G__198296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__198297 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198296,G__198297) : tailrecursion.hoplon.markdown.code_node.call(null,G__198296,G__198297));
})(),", and ",(function (){var G__198298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__198299 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198298,G__198299) : tailrecursion.hoplon.markdown.code_node.call(null,G__198298,G__198299));
})(),". At that point, we could think of the operations as being defined in terms of data objects ",(function (){var G__198300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__198301 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__198300,G__198301) : tailrecursion.hoplon.markdown.simple_node.call(null,G__198300,G__198301));
})()," numerators, denominators, and rational numbers ",(function (){var G__198302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__198303 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__198302,G__198303) : tailrecursion.hoplon.markdown.simple_node.call(null,G__198302,G__198303));
})()," whose behavior was specified by the latter three procedures."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198288,G__198289) : tailrecursion.hoplon.markdown.para_node.call(null,G__198288,G__198289));
})(),(function (){var G__198304 = cljs.core.PersistentArrayMap.EMPTY;
var G__198305 = cljs.core.PersistentVector.fromArray(["But exactly what is meant by ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null)], 0)),"? It is not enough to say ",(function (){var G__198306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__198307 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["whatever is implemented by the given selectors and constructors."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__198306,G__198307) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__198306,G__198307));
})()," Clearly, not every arbitrary set of three procedures can serve as an appropriate basis for the rational-number implementation. We need to guarantee that, if we construct a rational number ",(function (){var G__198308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__198309 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198308,G__198309) : tailrecursion.hoplon.markdown.code_node.call(null,G__198308,G__198309));
})()," from a pair of integers ",(function (){var G__198310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__198311 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198310,G__198311) : tailrecursion.hoplon.markdown.code_node.call(null,G__198310,G__198311));
})()," and ",(function (){var G__198312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"d"], null);
var G__198313 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198312,G__198313) : tailrecursion.hoplon.markdown.code_node.call(null,G__198312,G__198313));
})(),", then extracting the ",(function (){var G__198314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__198315 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198314,G__198315) : tailrecursion.hoplon.markdown.code_node.call(null,G__198314,G__198315));
})()," and the ",(function (){var G__198316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__198317 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198316,G__198317) : tailrecursion.hoplon.markdown.code_node.call(null,G__198316,G__198317));
})()," of ",(function (){var G__198318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__198319 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198318,G__198319) : tailrecursion.hoplon.markdown.code_node.call(null,G__198318,G__198319));
})()," and dividing them should yield the same result as dividing ",(function (){var G__198320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__198321 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198320,G__198321) : tailrecursion.hoplon.markdown.code_node.call(null,G__198320,G__198321));
})()," by ",(function (){var G__198322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"d"], null);
var G__198323 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198322,G__198323) : tailrecursion.hoplon.markdown.code_node.call(null,G__198322,G__198323));
})(),". In other words, ",(function (){var G__198324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__198325 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198324,G__198325) : tailrecursion.hoplon.markdown.code_node.call(null,G__198324,G__198325));
})(),", ",(function (){var G__198326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__198327 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198326,G__198327) : tailrecursion.hoplon.markdown.code_node.call(null,G__198326,G__198327));
})(),", and ",(function (){var G__198328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__198329 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198328,G__198329) : tailrecursion.hoplon.markdown.code_node.call(null,G__198328,G__198329));
})()," must satisfy the condition that, for any integer ",(function (){var G__198330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__198331 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198330,G__198331) : tailrecursion.hoplon.markdown.code_node.call(null,G__198330,G__198331));
})()," and any non-zero integer ",(function (){var G__198332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"d"], null);
var G__198333 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198332,G__198333) : tailrecursion.hoplon.markdown.code_node.call(null,G__198332,G__198333));
})(),", if ",(function (){var G__198334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__198335 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198334,G__198335) : tailrecursion.hoplon.markdown.code_node.call(null,G__198334,G__198335));
})()," is ",(function (){var G__198336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(make-rat n d)"], null);
var G__198337 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198336,G__198337) : tailrecursion.hoplon.markdown.code_node.call(null,G__198336,G__198337));
})(),", then"], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198304,G__198305) : tailrecursion.hoplon.markdown.para_node.call(null,G__198304,G__198305));
})(),(function (){var G__198338 = cljs.core.PersistentArrayMap.EMPTY;
var G__198339 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{\\text{(numer x)}}{\\text{(denom x)}}=\\frac{\\text{n}}{\\text{d}}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198338,G__198339) : tailrecursion.hoplon.markdown.para_node.call(null,G__198338,G__198339));
})(),(function (){var G__198340 = cljs.core.PersistentArrayMap.EMPTY;
var G__198341 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In fact, this is the only condition ",(function (){var G__198342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__198343 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198342,G__198343) : tailrecursion.hoplon.markdown.code_node.call(null,G__198342,G__198343));
})(),", ",(function (){var G__198344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__198345 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198344,G__198345) : tailrecursion.hoplon.markdown.code_node.call(null,G__198344,G__198345));
})()," and ",(function (){var G__198346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__198347 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198346,G__198347) : tailrecursion.hoplon.markdown.code_node.call(null,G__198346,G__198347));
})()," must fulfill in order to form a suitable basis for a rational-number representation. In general, we can think of data as defined by some collection of selectors and constructors, together with specified conditions that these procedures must fulfill in order to be a valid representation.",(function (){var G__198348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__198349 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Surprisingly, this idea is very difficult to formulate rigorously. There are two approaches to giving such a formulation. One, pioneered by C. A. R. Hoare (1972), is known as the method of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstract models"], null)], 0)),". It formalizes the ",(function (){var G__198350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__198351 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["procedures plus conditions"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__198350,G__198351) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__198350,G__198351));
})()," specification as outlined in the rational-number example above. Note that the condition on the rational-number representation was stated in terms of facts about integers (equality and division). In general, abstract models define new kinds of data objects in terms of previously defined types of data objects. Assertions about data objects can therefore be checked by reducing them to assertions about previously defined data objects. Another approach, introduced by Zilles at MIT, by Goguen, Thatcher, Wagner, and Wright at IBM (see Thatcher, Wagner, and Wright 1978), and by Guttag at Toronto (see Guttag 1977), is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["algebraic specification"], null)], 0)),". It regards the ",(function (){var G__198352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__198353 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["procedures"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__198352,G__198353) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__198352,G__198353));
})()," as elements of an abstract algebraic system whose behavior is specified by axioms that correspond to our ",(function (){var G__198354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__198355 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["conditions,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__198354,G__198355) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__198354,G__198355));
})()," and uses the techniques of abstract algebra to check assertions about data objects. Both methods are surveyed in the paper by Liskov and Zilles (1975)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__198348,G__198349) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__198348,G__198349));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198340,G__198341) : tailrecursion.hoplon.markdown.para_node.call(null,G__198340,G__198341));
})(),(function (){var G__198356 = cljs.core.PersistentArrayMap.EMPTY;
var G__198357 = cljs.core.PersistentVector.fromArray(["This point of view can serve to define not only ",(function (){var G__198358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__198359 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["high-level"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__198358,G__198359) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__198358,G__198359));
})()," data objects, such as rational numbers, but lower-level objects as well. Consider the notion of a list or a pair (a list of two elements), which we used in order to define our rational numbers. We never actually said what these were, only that the language supplied procedures ",(function (){var G__198360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__198361 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198360,G__198361) : tailrecursion.hoplon.markdown.code_node.call(null,G__198360,G__198361));
})(),", ",(function (){var G__198362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__198363 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198362,G__198363) : tailrecursion.hoplon.markdown.code_node.call(null,G__198362,G__198363));
})(),", and ",(function (){var G__198364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__198365 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198364,G__198365) : tailrecursion.hoplon.markdown.code_node.call(null,G__198364,G__198365));
})()," for operating on them. But the only thing we need to know about these three operations is that if we glue two objects together using ",(function (){var G__198366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__198367 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198366,G__198367) : tailrecursion.hoplon.markdown.code_node.call(null,G__198366,G__198367));
})()," or ",(function (){var G__198368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__198369 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198368,G__198369) : tailrecursion.hoplon.markdown.code_node.call(null,G__198368,G__198369));
})(),", we can retrieve the objects using ",(function (){var G__198370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__198371 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198370,G__198371) : tailrecursion.hoplon.markdown.code_node.call(null,G__198370,G__198371));
})(),", ",(function (){var G__198372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__198373 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198372,G__198373) : tailrecursion.hoplon.markdown.code_node.call(null,G__198372,G__198373));
})(),", ",(function (){var G__198374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__198375 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198374,G__198375) : tailrecursion.hoplon.markdown.code_node.call(null,G__198374,G__198375));
})()," and ",(function (){var G__198376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nth"], null);
var G__198377 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198376,G__198377) : tailrecursion.hoplon.markdown.code_node.call(null,G__198376,G__198377));
})(),". That is, the operations satisfy the condition that, for any objects ",(function (){var G__198378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__198379 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198378,G__198379) : tailrecursion.hoplon.markdown.code_node.call(null,G__198378,G__198379));
})()," and ",(function (){var G__198380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y"], null);
var G__198381 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198380,G__198381) : tailrecursion.hoplon.markdown.code_node.call(null,G__198380,G__198381));
})(),", if ",(function (){var G__198382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"z"], null);
var G__198383 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198382,G__198383) : tailrecursion.hoplon.markdown.code_node.call(null,G__198382,G__198383));
})()," is ",(function (){var G__198384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(list x y)"], null);
var G__198385 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198384,G__198385) : tailrecursion.hoplon.markdown.code_node.call(null,G__198384,G__198385));
})()," then ",(function (){var G__198386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first z)"], null);
var G__198387 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198386,G__198387) : tailrecursion.hoplon.markdown.code_node.call(null,G__198386,G__198387));
})()," is ",(function (){var G__198388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__198389 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198388,G__198389) : tailrecursion.hoplon.markdown.code_node.call(null,G__198388,G__198389));
})()," and ",(function (){var G__198390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(second z)"], null);
var G__198391 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198390,G__198391) : tailrecursion.hoplon.markdown.code_node.call(null,G__198390,G__198391));
})()," is ",(function (){var G__198392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y"], null);
var G__198393 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198392,G__198393) : tailrecursion.hoplon.markdown.code_node.call(null,G__198392,G__198393));
})(),". Indeed, we mentioned that these three procedures are included as primitives in our language. However, any triple of procedures that satisfies the above condition can be used as the basis for implementing pairs. This point is illustrated strikingly by the fact that we could implement ",(function (){var G__198394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__198395 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198394,G__198395) : tailrecursion.hoplon.markdown.code_node.call(null,G__198394,G__198395));
})(),", ",(function (){var G__198396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__198397 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198396,G__198397) : tailrecursion.hoplon.markdown.code_node.call(null,G__198396,G__198397));
})(),", and ",(function (){var G__198398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__198399 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198398,G__198399) : tailrecursion.hoplon.markdown.code_node.call(null,G__198398,G__198399));
})()," for lists without using any data structures at all but only using procedures. Here are the definitions:"], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198356,G__198357) : tailrecursion.hoplon.markdown.para_node.call(null,G__198356,G__198357));
})(),(function (){var G__198531 = (function (){var G__198532 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__198533 = (function (){var G__198534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__198535 = "(";
var G__198536 = (function (){var G__198597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198598 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198597,G__198598) : tailrecursion.hoplon.span.call(null,G__198597,G__198598));
})();
var G__198537 = (function (){var G__198599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198600 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198599,G__198600) : tailrecursion.hoplon.span.call(null,G__198599,G__198600));
})();
var G__198538 = "[";
var G__198539 = (function (){var G__198601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198602 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198601,G__198602) : tailrecursion.hoplon.span.call(null,G__198601,G__198602));
})();
var G__198540 = " ";
var G__198541 = (function (){var G__198603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198604 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198603,G__198604) : tailrecursion.hoplon.span.call(null,G__198603,G__198604));
})();
var G__198542 = "]\n  (";
var G__198543 = (function (){var G__198605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198606 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198605,G__198606) : tailrecursion.hoplon.span.call(null,G__198605,G__198606));
})();
var G__198544 = "[";
var G__198545 = (function (){var G__198607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198608 = "dispatch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198607,G__198608) : tailrecursion.hoplon.span.call(null,G__198607,G__198608));
})();
var G__198546 = " (";
var G__198547 = (function (){var G__198609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198610 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198609,G__198610) : tailrecursion.hoplon.span.call(null,G__198609,G__198610));
})();
var G__198548 = "[";
var G__198549 = (function (){var G__198611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198612 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198611,G__198612) : tailrecursion.hoplon.span.call(null,G__198611,G__198612));
})();
var G__198550 = "] (";
var G__198551 = (function (){var G__198613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198614 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198613,G__198614) : tailrecursion.hoplon.span.call(null,G__198613,G__198614));
})();
var G__198552 = "(";
var G__198553 = (function (){var G__198615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198616 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198615,G__198616) : tailrecursion.hoplon.span.call(null,G__198615,G__198616));
})();
var G__198554 = (function (){var G__198617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198618 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198617,G__198618) : tailrecursion.hoplon.span.call(null,G__198617,G__198618));
})();
var G__198555 = " ";
var G__198556 = (function (){var G__198619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__198620 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198619,G__198620) : tailrecursion.hoplon.span.call(null,G__198619,G__198620));
})();
var G__198557 = ") ";
var G__198558 = (function (){var G__198621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198622 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198621,G__198622) : tailrecursion.hoplon.span.call(null,G__198621,G__198622));
})();
var G__198559 = "\n                               (";
var G__198560 = (function (){var G__198623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198624 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198623,G__198624) : tailrecursion.hoplon.span.call(null,G__198623,G__198624));
})();
var G__198561 = (function (){var G__198625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198626 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198625,G__198626) : tailrecursion.hoplon.span.call(null,G__198625,G__198626));
})();
var G__198562 = " ";
var G__198563 = (function (){var G__198627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__198628 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198627,G__198628) : tailrecursion.hoplon.span.call(null,G__198627,G__198628));
})();
var G__198564 = ") ";
var G__198565 = (function (){var G__198629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198630 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198629,G__198630) : tailrecursion.hoplon.span.call(null,G__198629,G__198630));
})();
var G__198566 = "\n                               ";
var G__198567 = (function (){var G__198631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198632 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198631,G__198632) : tailrecursion.hoplon.span.call(null,G__198631,G__198632));
})();
var G__198568 = " (";
var G__198569 = (function (){var G__198633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198634 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198633,G__198634) : tailrecursion.hoplon.span.call(null,G__198633,G__198634));
})();
var G__198570 = " (";
var G__198571 = (function (){var G__198635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198636 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198635,G__198636) : tailrecursion.hoplon.span.call(null,G__198635,G__198636));
})();
var G__198572 = " ";
var G__198573 = (function (){var G__198637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__198638 = "\"Argument not 0 or 1 -- CONS\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198637,G__198638) : tailrecursion.hoplon.span.call(null,G__198637,G__198638));
})();
var G__198574 = " ";
var G__198575 = (function (){var G__198639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198640 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198639,G__198640) : tailrecursion.hoplon.span.call(null,G__198639,G__198640));
})();
var G__198576 = "))))]\n    ";
var G__198577 = (function (){var G__198641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198642 = "dispatch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198641,G__198642) : tailrecursion.hoplon.span.call(null,G__198641,G__198642));
})();
var G__198578 = "))\n\n(";
var G__198579 = (function (){var G__198643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198644 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198643,G__198644) : tailrecursion.hoplon.span.call(null,G__198643,G__198644));
})();
var G__198580 = (function (){var G__198645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198646 = "car";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198645,G__198646) : tailrecursion.hoplon.span.call(null,G__198645,G__198646));
})();
var G__198581 = " [";
var G__198582 = (function (){var G__198647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198648 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198647,G__198648) : tailrecursion.hoplon.span.call(null,G__198647,G__198648));
})();
var G__198583 = "] (";
var G__198584 = (function (){var G__198649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198650 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198649,G__198650) : tailrecursion.hoplon.span.call(null,G__198649,G__198650));
})();
var G__198585 = " ";
var G__198586 = (function (){var G__198651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__198652 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198651,G__198652) : tailrecursion.hoplon.span.call(null,G__198651,G__198652));
})();
var G__198587 = "))\n\n(";
var G__198588 = (function (){var G__198653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198654 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198653,G__198654) : tailrecursion.hoplon.span.call(null,G__198653,G__198654));
})();
var G__198589 = (function (){var G__198655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198656 = "cdr";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198655,G__198656) : tailrecursion.hoplon.span.call(null,G__198655,G__198656));
})();
var G__198590 = " [";
var G__198591 = (function (){var G__198657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198658 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198657,G__198658) : tailrecursion.hoplon.span.call(null,G__198657,G__198658));
})();
var G__198592 = "] (";
var G__198593 = (function (){var G__198659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198660 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198659,G__198660) : tailrecursion.hoplon.span.call(null,G__198659,G__198660));
})();
var G__198594 = " ";
var G__198595 = (function (){var G__198661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__198662 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198661,G__198662) : tailrecursion.hoplon.span.call(null,G__198661,G__198662));
})();
var G__198596 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63(G__198534,G__198535,G__198536,G__198537,G__198538,G__198539,G__198540,G__198541,G__198542,G__198543,G__198544,G__198545,G__198546,G__198547,G__198548,G__198549,G__198550,G__198551,G__198552,G__198553,G__198554,G__198555,G__198556,G__198557,G__198558,G__198559,G__198560,G__198561,G__198562,G__198563,G__198564,G__198565,G__198566,G__198567,G__198568,G__198569,G__198570,G__198571,G__198572,G__198573,G__198574,G__198575,G__198576,G__198577,G__198578,G__198579,G__198580,G__198581,G__198582,G__198583,G__198584,G__198585,G__198586,G__198587,G__198588,G__198589,G__198590,G__198591,G__198592,G__198593,G__198594,G__198595,G__198596) : tailrecursion.hoplon.pre.call(null,G__198534,G__198535,G__198536,G__198537,G__198538,G__198539,G__198540,G__198541,G__198542,G__198543,G__198544,G__198545,G__198546,G__198547,G__198548,G__198549,G__198550,G__198551,G__198552,G__198553,G__198554,G__198555,G__198556,G__198557,G__198558,G__198559,G__198560,G__198561,G__198562,G__198563,G__198564,G__198565,G__198566,G__198567,G__198568,G__198569,G__198570,G__198571,G__198572,G__198573,G__198574,G__198575,G__198576,G__198577,G__198578,G__198579,G__198580,G__198581,G__198582,G__198583,G__198584,G__198585,G__198586,G__198587,G__198588,G__198589,G__198590,G__198591,G__198592,G__198593,G__198594,G__198595,G__198596));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__198532,G__198533) : tailrecursion.hoplon.div.call(null,G__198532,G__198533));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__198531) : tailrecursion.hoplon.div.call(null,G__198531));
})(),(function (){var G__198663 = cljs.core.PersistentArrayMap.EMPTY;
var G__198664 = new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In the above definitions I used ",(function (){var G__198665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__198666 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198665,G__198666) : tailrecursion.hoplon.markdown.code_node.call(null,G__198665,G__198666));
})(),", ",(function (){var G__198667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__198668 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198667,G__198668) : tailrecursion.hoplon.markdown.code_node.call(null,G__198667,G__198668));
})(),", and ",(function (){var G__198669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__198670 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198669,G__198670) : tailrecursion.hoplon.markdown.code_node.call(null,G__198669,G__198670));
})()," instead of ",(function (){var G__198671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__198672 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198671,G__198672) : tailrecursion.hoplon.markdown.code_node.call(null,G__198671,G__198672));
})(),", ",(function (){var G__198673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__198674 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198673,G__198674) : tailrecursion.hoplon.markdown.code_node.call(null,G__198673,G__198674));
})(),", and ",(function (){var G__198675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__198676 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198675,G__198676) : tailrecursion.hoplon.markdown.code_node.call(null,G__198675,G__198676));
})()," simply because I like to not deviate from the book whenever possible and it doesn",(function (){var G__198677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__198678 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__198677,G__198678) : tailrecursion.hoplon.markdown.simple_node.call(null,G__198677,G__198678));
})(),"t necessarily add anything to deviate. On the down side (of deviating from the text), this construction would not work if we used lists because lists can have any number of elements so we",(function (){var G__198679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__198680 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__198679,G__198680) : tailrecursion.hoplon.markdown.simple_node.call(null,G__198679,G__198680));
})(),"d have to use other methods to make it work. We digress",(function (){var G__198681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__198682 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__198681,G__198682) : tailrecursion.hoplon.markdown.simple_node.call(null,G__198681,G__198682));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198663,G__198664) : tailrecursion.hoplon.markdown.para_node.call(null,G__198663,G__198664));
})(),(function (){var G__198683 = cljs.core.PersistentArrayMap.EMPTY;
var G__198684 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This use of procedures corresponds to nothing like our intuitive notion of what data should be. Nevertheless, all we need to do to show that this is a valid way to represent pairs is to verify that these procedures satisfy the condition given above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198683,G__198684) : tailrecursion.hoplon.markdown.para_node.call(null,G__198683,G__198684));
})(),(function (){var G__198685 = cljs.core.PersistentArrayMap.EMPTY;
var G__198686 = cljs.core.PersistentVector.fromArray(["The subtle point to notice is that the value returned by ",(function (){var G__198687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(cons x y)"], null);
var G__198688 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198687,G__198688) : tailrecursion.hoplon.markdown.code_node.call(null,G__198687,G__198688));
})()," is a procedure ",(function (){var G__198689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__198690 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__198689,G__198690) : tailrecursion.hoplon.markdown.simple_node.call(null,G__198689,G__198690));
})()," namely the internally defined procedure ",(function (){var G__198691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"dispatch"], null);
var G__198692 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198691,G__198692) : tailrecursion.hoplon.markdown.code_node.call(null,G__198691,G__198692));
})(),", which takes one argument and returns either ",(function (){var G__198693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__198694 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198693,G__198694) : tailrecursion.hoplon.markdown.code_node.call(null,G__198693,G__198694));
})()," or ",(function (){var G__198695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y"], null);
var G__198696 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198695,G__198696) : tailrecursion.hoplon.markdown.code_node.call(null,G__198695,G__198696));
})()," depending on whether the argument is 0 or 1. Correspondingly, ",(function (){var G__198697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(car z)"], null);
var G__198698 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198697,G__198698) : tailrecursion.hoplon.markdown.code_node.call(null,G__198697,G__198698));
})()," is defined to apply ",(function (){var G__198699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"z"], null);
var G__198700 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198699,G__198700) : tailrecursion.hoplon.markdown.code_node.call(null,G__198699,G__198700));
})()," to 0. Hence, if ",(function (){var G__198701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"z"], null);
var G__198702 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198701,G__198702) : tailrecursion.hoplon.markdown.code_node.call(null,G__198701,G__198702));
})()," is the procedure formed by ",(function (){var G__198703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(cons x\ny)"], null);
var G__198704 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198703,G__198704) : tailrecursion.hoplon.markdown.code_node.call(null,G__198703,G__198704));
})(),", then ",(function (){var G__198705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"z"], null);
var G__198706 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198705,G__198706) : tailrecursion.hoplon.markdown.code_node.call(null,G__198705,G__198706));
})()," applied to 0 will yield ",(function (){var G__198707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__198708 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198707,G__198708) : tailrecursion.hoplon.markdown.code_node.call(null,G__198707,G__198708));
})(),". Thus, we have shown that ",(function (){var G__198709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(car (cons x y))"], null);
var G__198710 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198709,G__198710) : tailrecursion.hoplon.markdown.code_node.call(null,G__198709,G__198710));
})()," yields ",(function (){var G__198711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__198712 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198711,G__198712) : tailrecursion.hoplon.markdown.code_node.call(null,G__198711,G__198712));
})(),", as desired. Similarly, ",(function (){var G__198713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(cdr (cons x\ny))"], null);
var G__198714 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198713,G__198714) : tailrecursion.hoplon.markdown.code_node.call(null,G__198713,G__198714));
})()," applies the procedure returned by ",(function (){var G__198715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(cons x y)"], null);
var G__198716 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198715,G__198716) : tailrecursion.hoplon.markdown.code_node.call(null,G__198715,G__198716));
})()," to 1, which returns ",(function (){var G__198717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y"], null);
var G__198718 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198717,G__198718) : tailrecursion.hoplon.markdown.code_node.call(null,G__198717,G__198718));
})(),". Therefore, this procedural implementation of pairs is a valid implementation, and if we access pairs using only ",(function (){var G__198719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__198720 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198719,G__198720) : tailrecursion.hoplon.markdown.code_node.call(null,G__198719,G__198720));
})(),", ",(function (){var G__198721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__198722 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198721,G__198722) : tailrecursion.hoplon.markdown.code_node.call(null,G__198721,G__198722));
})(),", and ",(function (){var G__198723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__198724 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198723,G__198724) : tailrecursion.hoplon.markdown.code_node.call(null,G__198723,G__198724));
})()," we cannot distinguish this implementation from one that uses ",(function (){var G__198725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__198726 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["real"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__198725,G__198726) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__198725,G__198726));
})()," data structures."], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198685,G__198686) : tailrecursion.hoplon.markdown.para_node.call(null,G__198685,G__198686));
})(),(function (){var G__198727 = cljs.core.PersistentArrayMap.EMPTY;
var G__198728 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The point of exhibiting the procedural representation of pairs is not that our language works this way (Scheme, and Lisp systems in general, implement pairs directly, and Clojure implements lists directly as Java objects, for efficiency reasons) but that it could work this way. The procedural representation, although obscure, is a perfectly adequate way to represent pairs, since it fulfills the only conditions that pairs need to fulfill. This example also demonstrates that the ability to manipulate procedures as objects automatically provides the ability to represent compound data. This may seem a curiosity now, but procedural representations of data will play a central role in our programming repertoire. This style of programming is often called message passing, and we will be using it as a basic tool in chapter 3 when we address the issues of modeling and simulation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198727,G__198728) : tailrecursion.hoplon.markdown.para_node.call(null,G__198727,G__198728));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_198287;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_198286;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_198285;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_198284;
}})()], 0));
var G__193990 = "";
var G__193991 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_198729 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_198730 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_198731 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_198732 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__198733 = cljs.core.PersistentArrayMap.EMPTY;
var G__198734 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Here is an alternative procedural representation of pairs. For this representation, verify that (car (cons x y)) yields x for any objects x and y."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198733,G__198734) : tailrecursion.hoplon.markdown.para_node.call(null,G__198733,G__198734));
})(),(function (){var G__198805 = (function (){var G__198806 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__198807 = (function (){var G__198808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__198809 = "(";
var G__198810 = (function (){var G__198842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198843 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198842,G__198843) : tailrecursion.hoplon.span.call(null,G__198842,G__198843));
})();
var G__198811 = (function (){var G__198844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198845 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198844,G__198845) : tailrecursion.hoplon.span.call(null,G__198844,G__198845));
})();
var G__198812 = "[";
var G__198813 = (function (){var G__198846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198847 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198846,G__198847) : tailrecursion.hoplon.span.call(null,G__198846,G__198847));
})();
var G__198814 = " ";
var G__198815 = (function (){var G__198848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198849 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198848,G__198849) : tailrecursion.hoplon.span.call(null,G__198848,G__198849));
})();
var G__198816 = "]\n  (";
var G__198817 = (function (){var G__198850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198851 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198850,G__198851) : tailrecursion.hoplon.span.call(null,G__198850,G__198851));
})();
var G__198818 = "[";
var G__198819 = (function (){var G__198852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198853 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198852,G__198853) : tailrecursion.hoplon.span.call(null,G__198852,G__198853));
})();
var G__198820 = "] (";
var G__198821 = (function (){var G__198854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198855 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198854,G__198855) : tailrecursion.hoplon.span.call(null,G__198854,G__198855));
})();
var G__198822 = " ";
var G__198823 = (function (){var G__198856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198857 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198856,G__198857) : tailrecursion.hoplon.span.call(null,G__198856,G__198857));
})();
var G__198824 = " ";
var G__198825 = (function (){var G__198858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198859 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198858,G__198859) : tailrecursion.hoplon.span.call(null,G__198858,G__198859));
})();
var G__198826 = ")))\n(";
var G__198827 = (function (){var G__198860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198861 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198860,G__198861) : tailrecursion.hoplon.span.call(null,G__198860,G__198861));
})();
var G__198828 = (function (){var G__198862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198863 = "car";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198862,G__198863) : tailrecursion.hoplon.span.call(null,G__198862,G__198863));
})();
var G__198829 = " [";
var G__198830 = (function (){var G__198864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198865 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198864,G__198865) : tailrecursion.hoplon.span.call(null,G__198864,G__198865));
})();
var G__198831 = "]\n  (";
var G__198832 = (function (){var G__198866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198867 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198866,G__198867) : tailrecursion.hoplon.span.call(null,G__198866,G__198867));
})();
var G__198833 = " (";
var G__198834 = (function (){var G__198868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198869 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198868,G__198869) : tailrecursion.hoplon.span.call(null,G__198868,G__198869));
})();
var G__198835 = "[";
var G__198836 = (function (){var G__198870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198871 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198870,G__198871) : tailrecursion.hoplon.span.call(null,G__198870,G__198871));
})();
var G__198837 = " ";
var G__198838 = (function (){var G__198872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198873 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198872,G__198873) : tailrecursion.hoplon.span.call(null,G__198872,G__198873));
})();
var G__198839 = "] ";
var G__198840 = (function (){var G__198874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198875 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198874,G__198875) : tailrecursion.hoplon.span.call(null,G__198874,G__198875));
})();
var G__198841 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34(G__198808,G__198809,G__198810,G__198811,G__198812,G__198813,G__198814,G__198815,G__198816,G__198817,G__198818,G__198819,G__198820,G__198821,G__198822,G__198823,G__198824,G__198825,G__198826,G__198827,G__198828,G__198829,G__198830,G__198831,G__198832,G__198833,G__198834,G__198835,G__198836,G__198837,G__198838,G__198839,G__198840,G__198841) : tailrecursion.hoplon.pre.call(null,G__198808,G__198809,G__198810,G__198811,G__198812,G__198813,G__198814,G__198815,G__198816,G__198817,G__198818,G__198819,G__198820,G__198821,G__198822,G__198823,G__198824,G__198825,G__198826,G__198827,G__198828,G__198829,G__198830,G__198831,G__198832,G__198833,G__198834,G__198835,G__198836,G__198837,G__198838,G__198839,G__198840,G__198841));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__198806,G__198807) : tailrecursion.hoplon.div.call(null,G__198806,G__198807));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__198805) : tailrecursion.hoplon.div.call(null,G__198805));
})(),(function (){var G__198876 = cljs.core.PersistentArrayMap.EMPTY;
var G__198877 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What is the corresponding definition of ",(function (){var G__198878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__198879 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198878,G__198879) : tailrecursion.hoplon.markdown.code_node.call(null,G__198878,G__198879));
})(),"? (Hint: To verify that ths works, make use of the substitution model of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/1/sub/5/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.1.5"], null)], 0)),".)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198876,G__198877) : tailrecursion.hoplon.markdown.para_node.call(null,G__198876,G__198877));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_198732;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_198731;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_198730;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_198729;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_198880 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_198881 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_198882 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_198883 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__198919 = (function (){var G__198920 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__198921 = (function (){var G__198922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__198923 = "(";
var G__198924 = (function (){var G__198939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198940 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198939,G__198940) : tailrecursion.hoplon.span.call(null,G__198939,G__198940));
})();
var G__198925 = (function (){var G__198941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198942 = "cdr";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198941,G__198942) : tailrecursion.hoplon.span.call(null,G__198941,G__198942));
})();
var G__198926 = " [";
var G__198927 = (function (){var G__198943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198944 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198943,G__198944) : tailrecursion.hoplon.span.call(null,G__198943,G__198944));
})();
var G__198928 = "]\n  (";
var G__198929 = (function (){var G__198945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198946 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198945,G__198946) : tailrecursion.hoplon.span.call(null,G__198945,G__198946));
})();
var G__198930 = " (";
var G__198931 = (function (){var G__198947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198948 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198947,G__198948) : tailrecursion.hoplon.span.call(null,G__198947,G__198948));
})();
var G__198932 = "[";
var G__198933 = (function (){var G__198949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198950 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198949,G__198950) : tailrecursion.hoplon.span.call(null,G__198949,G__198950));
})();
var G__198934 = " ";
var G__198935 = (function (){var G__198951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198952 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198951,G__198952) : tailrecursion.hoplon.span.call(null,G__198951,G__198952));
})();
var G__198936 = "] ";
var G__198937 = (function (){var G__198953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198954 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198953,G__198954) : tailrecursion.hoplon.span.call(null,G__198953,G__198954));
})();
var G__198938 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__198922,G__198923,G__198924,G__198925,G__198926,G__198927,G__198928,G__198929,G__198930,G__198931,G__198932,G__198933,G__198934,G__198935,G__198936,G__198937,G__198938) : tailrecursion.hoplon.pre.call(null,G__198922,G__198923,G__198924,G__198925,G__198926,G__198927,G__198928,G__198929,G__198930,G__198931,G__198932,G__198933,G__198934,G__198935,G__198936,G__198937,G__198938));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__198920,G__198921) : tailrecursion.hoplon.div.call(null,G__198920,G__198921));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__198919) : tailrecursion.hoplon.div.call(null,G__198919));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_198883;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_198882;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_198881;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_198880;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_198955 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_198956 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_198957 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_198958 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__198959 = cljs.core.PersistentArrayMap.EMPTY;
var G__198960 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Show that we can represent pairs of nonnegative integers using only numbers and arithmetic operations if we represent the pair \\(a\\) and \\(b\\) as the integer that is the product \\(2^a3^b\\). Give the corresponding definitions of the procedures ",(function (){var G__198961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__198962 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198961,G__198962) : tailrecursion.hoplon.markdown.code_node.call(null,G__198961,G__198962));
})(),", ",(function (){var G__198963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__198964 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198963,G__198964) : tailrecursion.hoplon.markdown.code_node.call(null,G__198963,G__198964));
})(),", and ",(function (){var G__198965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__198966 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198965,G__198966) : tailrecursion.hoplon.markdown.code_node.call(null,G__198965,G__198966));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198959,G__198960) : tailrecursion.hoplon.markdown.para_node.call(null,G__198959,G__198960));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_198958;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_198957;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_198956;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_198955;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_198967 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_198968 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_198969 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_198970 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__199180 = (function (){var G__199181 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__199182 = (function (){var G__199183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__199184 = "(";
var G__199185 = (function (){var G__199284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199285 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199284,G__199285) : tailrecursion.hoplon.span.call(null,G__199284,G__199285));
})();
var G__199186 = (function (){var G__199286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199287 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199286,G__199287) : tailrecursion.hoplon.span.call(null,G__199286,G__199287));
})();
var G__199187 = "[";
var G__199188 = (function (){var G__199288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199289 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199288,G__199289) : tailrecursion.hoplon.span.call(null,G__199288,G__199289));
})();
var G__199189 = " ";
var G__199190 = (function (){var G__199290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199291 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199290,G__199291) : tailrecursion.hoplon.span.call(null,G__199290,G__199291));
})();
var G__199191 = "]\n  (";
var G__199192 = (function (){var G__199292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199293 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199292,G__199293) : tailrecursion.hoplon.span.call(null,G__199292,G__199293));
})();
var G__199193 = "(";
var G__199194 = (function (){var G__199294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199295 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199294,G__199295) : tailrecursion.hoplon.span.call(null,G__199294,G__199295));
})();
var G__199195 = " ";
var G__199196 = (function (){var G__199296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199297 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199296,G__199297) : tailrecursion.hoplon.span.call(null,G__199296,G__199297));
})();
var G__199197 = " ";
var G__199198 = (function (){var G__199298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199299 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199298,G__199299) : tailrecursion.hoplon.span.call(null,G__199298,G__199299));
})();
var G__199199 = ") (";
var G__199200 = (function (){var G__199300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199301 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199300,G__199301) : tailrecursion.hoplon.span.call(null,G__199300,G__199301));
})();
var G__199201 = " ";
var G__199202 = (function (){var G__199302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199303 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199302,G__199303) : tailrecursion.hoplon.span.call(null,G__199302,G__199303));
})();
var G__199203 = " ";
var G__199204 = (function (){var G__199304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199305 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199304,G__199305) : tailrecursion.hoplon.span.call(null,G__199304,G__199305));
})();
var G__199205 = ")))\n(";
var G__199206 = (function (){var G__199306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199307 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199306,G__199307) : tailrecursion.hoplon.span.call(null,G__199306,G__199307));
})();
var G__199207 = (function (){var G__199308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199309 = "car";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199308,G__199309) : tailrecursion.hoplon.span.call(null,G__199308,G__199309));
})();
var G__199208 = " [";
var G__199209 = (function (){var G__199310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199311 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199310,G__199311) : tailrecursion.hoplon.span.call(null,G__199310,G__199311));
})();
var G__199210 = "]\n  (";
var G__199211 = (function (){var G__199312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199313 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199312,G__199313) : tailrecursion.hoplon.span.call(null,G__199312,G__199313));
})();
var G__199212 = "[";
var G__199213 = (function (){var G__199314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199315 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199314,G__199315) : tailrecursion.hoplon.span.call(null,G__199314,G__199315));
})();
var G__199214 = "    ";
var G__199215 = (function (){var G__199316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199317 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199316,G__199317) : tailrecursion.hoplon.span.call(null,G__199316,G__199317));
})();
var G__199216 = "\n         ";
var G__199217 = (function (){var G__199318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199319 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199318,G__199319) : tailrecursion.hoplon.span.call(null,G__199318,G__199319));
})();
var G__199218 = " ";
var G__199219 = (function (){var G__199320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199321 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199320,G__199321) : tailrecursion.hoplon.span.call(null,G__199320,G__199321));
})();
var G__199220 = "]\n    (";
var G__199221 = (function (){var G__199322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199323 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199322,G__199323) : tailrecursion.hoplon.span.call(null,G__199322,G__199323));
})();
var G__199222 = "(";
var G__199223 = (function (){var G__199324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199325 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199324,G__199325) : tailrecursion.hoplon.span.call(null,G__199324,G__199325));
})();
var G__199224 = "(";
var G__199225 = (function (){var G__199326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199327 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199326,G__199327) : tailrecursion.hoplon.span.call(null,G__199326,G__199327));
})();
var G__199226 = " ";
var G__199227 = (function (){var G__199328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199329 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199328,G__199329) : tailrecursion.hoplon.span.call(null,G__199328,G__199329));
})();
var G__199228 = " ";
var G__199229 = (function (){var G__199330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199331 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199330,G__199331) : tailrecursion.hoplon.span.call(null,G__199330,G__199331));
})();
var G__199230 = ") ";
var G__199231 = (function (){var G__199332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199333 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199332,G__199333) : tailrecursion.hoplon.span.call(null,G__199332,G__199333));
})();
var G__199232 = ")\n        (";
var G__199233 = (function (){var G__199334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199335 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199334,G__199335) : tailrecursion.hoplon.span.call(null,G__199334,G__199335));
})();
var G__199234 = " (";
var G__199235 = (function (){var G__199336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199337 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199336,G__199337) : tailrecursion.hoplon.span.call(null,G__199336,G__199337));
})();
var G__199236 = (function (){var G__199338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199339 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199338,G__199339) : tailrecursion.hoplon.span.call(null,G__199338,G__199339));
})();
var G__199237 = " ";
var G__199238 = (function (){var G__199340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199341 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199340,G__199341) : tailrecursion.hoplon.span.call(null,G__199340,G__199341));
})();
var G__199239 = ") (";
var G__199240 = (function (){var G__199342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199343 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199342,G__199343) : tailrecursion.hoplon.span.call(null,G__199342,G__199343));
})();
var G__199241 = (function (){var G__199344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199345 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199344,G__199345) : tailrecursion.hoplon.span.call(null,G__199344,G__199345));
})();
var G__199242 = "))\n        ";
var G__199243 = (function (){var G__199346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199347 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199346,G__199347) : tailrecursion.hoplon.span.call(null,G__199346,G__199347));
})();
var G__199244 = ")))\n(";
var G__199245 = (function (){var G__199348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199349 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199348,G__199349) : tailrecursion.hoplon.span.call(null,G__199348,G__199349));
})();
var G__199246 = (function (){var G__199350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199351 = "cdr";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199350,G__199351) : tailrecursion.hoplon.span.call(null,G__199350,G__199351));
})();
var G__199247 = " [";
var G__199248 = (function (){var G__199352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199353 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199352,G__199353) : tailrecursion.hoplon.span.call(null,G__199352,G__199353));
})();
var G__199249 = "]\n  (";
var G__199250 = (function (){var G__199354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199355 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199354,G__199355) : tailrecursion.hoplon.span.call(null,G__199354,G__199355));
})();
var G__199251 = "[";
var G__199252 = (function (){var G__199356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199357 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199356,G__199357) : tailrecursion.hoplon.span.call(null,G__199356,G__199357));
})();
var G__199253 = "    ";
var G__199254 = (function (){var G__199358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199359 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199358,G__199359) : tailrecursion.hoplon.span.call(null,G__199358,G__199359));
})();
var G__199255 = "\n         ";
var G__199256 = (function (){var G__199360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199361 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199360,G__199361) : tailrecursion.hoplon.span.call(null,G__199360,G__199361));
})();
var G__199257 = " ";
var G__199258 = (function (){var G__199362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199363 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199362,G__199363) : tailrecursion.hoplon.span.call(null,G__199362,G__199363));
})();
var G__199259 = "]\n    (";
var G__199260 = (function (){var G__199364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199365 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199364,G__199365) : tailrecursion.hoplon.span.call(null,G__199364,G__199365));
})();
var G__199261 = "(";
var G__199262 = (function (){var G__199366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199367 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199366,G__199367) : tailrecursion.hoplon.span.call(null,G__199366,G__199367));
})();
var G__199263 = "(";
var G__199264 = (function (){var G__199368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199369 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199368,G__199369) : tailrecursion.hoplon.span.call(null,G__199368,G__199369));
})();
var G__199265 = " ";
var G__199266 = (function (){var G__199370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199371 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199370,G__199371) : tailrecursion.hoplon.span.call(null,G__199370,G__199371));
})();
var G__199267 = " ";
var G__199268 = (function (){var G__199372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199373 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199372,G__199373) : tailrecursion.hoplon.span.call(null,G__199372,G__199373));
})();
var G__199269 = ") ";
var G__199270 = (function (){var G__199374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199375 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199374,G__199375) : tailrecursion.hoplon.span.call(null,G__199374,G__199375));
})();
var G__199271 = ")\n        (";
var G__199272 = (function (){var G__199376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199377 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199376,G__199377) : tailrecursion.hoplon.span.call(null,G__199376,G__199377));
})();
var G__199273 = " (";
var G__199274 = (function (){var G__199378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199379 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199378,G__199379) : tailrecursion.hoplon.span.call(null,G__199378,G__199379));
})();
var G__199275 = (function (){var G__199380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199381 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199380,G__199381) : tailrecursion.hoplon.span.call(null,G__199380,G__199381));
})();
var G__199276 = " ";
var G__199277 = (function (){var G__199382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199383 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199382,G__199383) : tailrecursion.hoplon.span.call(null,G__199382,G__199383));
})();
var G__199278 = ") (";
var G__199279 = (function (){var G__199384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199385 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199384,G__199385) : tailrecursion.hoplon.span.call(null,G__199384,G__199385));
})();
var G__199280 = (function (){var G__199386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199387 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199386,G__199387) : tailrecursion.hoplon.span.call(null,G__199386,G__199387));
})();
var G__199281 = "))\n        ";
var G__199282 = (function (){var G__199388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199389 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199388,G__199389) : tailrecursion.hoplon.span.call(null,G__199388,G__199389));
})();
var G__199283 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$101 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$101(G__199183,G__199184,G__199185,G__199186,G__199187,G__199188,G__199189,G__199190,G__199191,G__199192,G__199193,G__199194,G__199195,G__199196,G__199197,G__199198,G__199199,G__199200,G__199201,G__199202,G__199203,G__199204,G__199205,G__199206,G__199207,G__199208,G__199209,G__199210,G__199211,G__199212,G__199213,G__199214,G__199215,G__199216,G__199217,G__199218,G__199219,G__199220,G__199221,G__199222,G__199223,G__199224,G__199225,G__199226,G__199227,G__199228,G__199229,G__199230,G__199231,G__199232,G__199233,G__199234,G__199235,G__199236,G__199237,G__199238,G__199239,G__199240,G__199241,G__199242,G__199243,G__199244,G__199245,G__199246,G__199247,G__199248,G__199249,G__199250,G__199251,G__199252,G__199253,G__199254,G__199255,G__199256,G__199257,G__199258,G__199259,G__199260,G__199261,G__199262,G__199263,G__199264,G__199265,G__199266,G__199267,G__199268,G__199269,G__199270,G__199271,G__199272,G__199273,G__199274,G__199275,G__199276,G__199277,G__199278,G__199279,G__199280,G__199281,G__199282,G__199283) : tailrecursion.hoplon.pre.call(null,G__199183,G__199184,G__199185,G__199186,G__199187,G__199188,G__199189,G__199190,G__199191,G__199192,G__199193,G__199194,G__199195,G__199196,G__199197,G__199198,G__199199,G__199200,G__199201,G__199202,G__199203,G__199204,G__199205,G__199206,G__199207,G__199208,G__199209,G__199210,G__199211,G__199212,G__199213,G__199214,G__199215,G__199216,G__199217,G__199218,G__199219,G__199220,G__199221,G__199222,G__199223,G__199224,G__199225,G__199226,G__199227,G__199228,G__199229,G__199230,G__199231,G__199232,G__199233,G__199234,G__199235,G__199236,G__199237,G__199238,G__199239,G__199240,G__199241,G__199242,G__199243,G__199244,G__199245,G__199246,G__199247,G__199248,G__199249,G__199250,G__199251,G__199252,G__199253,G__199254,G__199255,G__199256,G__199257,G__199258,G__199259,G__199260,G__199261,G__199262,G__199263,G__199264,G__199265,G__199266,G__199267,G__199268,G__199269,G__199270,G__199271,G__199272,G__199273,G__199274,G__199275,G__199276,G__199277,G__199278,G__199279,G__199280,G__199281,G__199282,G__199283));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__199181,G__199182) : tailrecursion.hoplon.div.call(null,G__199181,G__199182));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__199180) : tailrecursion.hoplon.div.call(null,G__199180));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_198970;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_198969;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_198968;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_198967;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_199390 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_199391 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_199392 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_199393 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__199394 = cljs.core.PersistentArrayMap.EMPTY;
var G__199395 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In case representing pairs as procedures wasn",(function (){var G__199396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__199397 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__199396,G__199397) : tailrecursion.hoplon.markdown.simple_node.call(null,G__199396,G__199397));
})(),"t mind-boggling enough, consider that, in a language that can manipulate procedures, we can get by without numbers (at least insofar as nonnegative integers are concerned) by implementing 0 and the operation of adding 1 as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__199394,G__199395) : tailrecursion.hoplon.markdown.para_node.call(null,G__199394,G__199395));
})(),(function (){var G__199472 = (function (){var G__199473 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__199474 = (function (){var G__199475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__199476 = "(";
var G__199477 = (function (){var G__199511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199512 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199511,G__199512) : tailrecursion.hoplon.span.call(null,G__199511,G__199512));
})();
var G__199478 = (function (){var G__199513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199514 = "zero";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199513,G__199514) : tailrecursion.hoplon.span.call(null,G__199513,G__199514));
})();
var G__199479 = " (";
var G__199480 = (function (){var G__199515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199516 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199515,G__199516) : tailrecursion.hoplon.span.call(null,G__199515,G__199516));
})();
var G__199481 = "[";
var G__199482 = (function (){var G__199517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199518 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199517,G__199518) : tailrecursion.hoplon.span.call(null,G__199517,G__199518));
})();
var G__199483 = "] (";
var G__199484 = (function (){var G__199519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199520 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199519,G__199520) : tailrecursion.hoplon.span.call(null,G__199519,G__199520));
})();
var G__199485 = "[";
var G__199486 = (function (){var G__199521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199522 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199521,G__199522) : tailrecursion.hoplon.span.call(null,G__199521,G__199522));
})();
var G__199487 = "] ";
var G__199488 = (function (){var G__199523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199524 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199523,G__199524) : tailrecursion.hoplon.span.call(null,G__199523,G__199524));
})();
var G__199489 = ")))\n(";
var G__199490 = (function (){var G__199525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199526 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199525,G__199526) : tailrecursion.hoplon.span.call(null,G__199525,G__199526));
})();
var G__199491 = (function (){var G__199527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199528 = "add-1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199527,G__199528) : tailrecursion.hoplon.span.call(null,G__199527,G__199528));
})();
var G__199492 = " [";
var G__199493 = (function (){var G__199529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199530 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199529,G__199530) : tailrecursion.hoplon.span.call(null,G__199529,G__199530));
})();
var G__199494 = "]\n  (";
var G__199495 = (function (){var G__199531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199532 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199531,G__199532) : tailrecursion.hoplon.span.call(null,G__199531,G__199532));
})();
var G__199496 = "[";
var G__199497 = (function (){var G__199533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199534 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199533,G__199534) : tailrecursion.hoplon.span.call(null,G__199533,G__199534));
})();
var G__199498 = "] (";
var G__199499 = (function (){var G__199535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199536 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199535,G__199536) : tailrecursion.hoplon.span.call(null,G__199535,G__199536));
})();
var G__199500 = "[";
var G__199501 = (function (){var G__199537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199538 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199537,G__199538) : tailrecursion.hoplon.span.call(null,G__199537,G__199538));
})();
var G__199502 = "] (";
var G__199503 = (function (){var G__199539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199540 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199539,G__199540) : tailrecursion.hoplon.span.call(null,G__199539,G__199540));
})();
var G__199504 = " ((";
var G__199505 = (function (){var G__199541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199542 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199541,G__199542) : tailrecursion.hoplon.span.call(null,G__199541,G__199542));
})();
var G__199506 = " ";
var G__199507 = (function (){var G__199543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199544 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199543,G__199544) : tailrecursion.hoplon.span.call(null,G__199543,G__199544));
})();
var G__199508 = ") ";
var G__199509 = (function (){var G__199545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199546 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199545,G__199546) : tailrecursion.hoplon.span.call(null,G__199545,G__199546));
})();
var G__199510 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__199475,G__199476,G__199477,G__199478,G__199479,G__199480,G__199481,G__199482,G__199483,G__199484,G__199485,G__199486,G__199487,G__199488,G__199489,G__199490,G__199491,G__199492,G__199493,G__199494,G__199495,G__199496,G__199497,G__199498,G__199499,G__199500,G__199501,G__199502,G__199503,G__199504,G__199505,G__199506,G__199507,G__199508,G__199509,G__199510) : tailrecursion.hoplon.pre.call(null,G__199475,G__199476,G__199477,G__199478,G__199479,G__199480,G__199481,G__199482,G__199483,G__199484,G__199485,G__199486,G__199487,G__199488,G__199489,G__199490,G__199491,G__199492,G__199493,G__199494,G__199495,G__199496,G__199497,G__199498,G__199499,G__199500,G__199501,G__199502,G__199503,G__199504,G__199505,G__199506,G__199507,G__199508,G__199509,G__199510));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__199473,G__199474) : tailrecursion.hoplon.div.call(null,G__199473,G__199474));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__199472) : tailrecursion.hoplon.div.call(null,G__199472));
})(),(function (){var G__199547 = cljs.core.PersistentArrayMap.EMPTY;
var G__199548 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This representation is known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Church numerals"], null)], 0)),", after its inventor, Alanzo Church, the logician who invented the \u03BB calculus."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__199547,G__199548) : tailrecursion.hoplon.markdown.para_node.call(null,G__199547,G__199548));
})(),(function (){var G__199549 = cljs.core.PersistentArrayMap.EMPTY;
var G__199550 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define ",(function (){var G__199551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"one"], null);
var G__199552 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199551,G__199552) : tailrecursion.hoplon.markdown.code_node.call(null,G__199551,G__199552));
})()," and ",(function (){var G__199553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"two"], null);
var G__199554 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199553,G__199554) : tailrecursion.hoplon.markdown.code_node.call(null,G__199553,G__199554));
})()," directly (not in terms of ",(function (){var G__199555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"zero"], null);
var G__199556 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199555,G__199556) : tailrecursion.hoplon.markdown.code_node.call(null,G__199555,G__199556));
})()," and ",(function (){var G__199557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-1"], null);
var G__199558 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199557,G__199558) : tailrecursion.hoplon.markdown.code_node.call(null,G__199557,G__199558));
})(),"). (Hint: Use substitution to evaluate ",(function (){var G__199559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(add-1 zero)"], null);
var G__199560 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199559,G__199560) : tailrecursion.hoplon.markdown.code_node.call(null,G__199559,G__199560));
})(),"). Give a direct definition of the addition procedure + (not in terms of repeated application of ",(function (){var G__199561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-1"], null);
var G__199562 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199561,G__199562) : tailrecursion.hoplon.markdown.code_node.call(null,G__199561,G__199562));
})(),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__199549,G__199550) : tailrecursion.hoplon.markdown.para_node.call(null,G__199549,G__199550));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_199393;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_199392;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_199391;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_199390;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_199563 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_199564 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_199565 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_199566 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__199637 = (function (){var G__199638 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__199639 = (function (){var G__199640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__199641 = "(";
var G__199642 = (function (){var G__199674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199675 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199674,G__199675) : tailrecursion.hoplon.span.call(null,G__199674,G__199675));
})();
var G__199643 = (function (){var G__199676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199677 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199676,G__199677) : tailrecursion.hoplon.span.call(null,G__199676,G__199677));
})();
var G__199644 = "\n  (";
var G__199645 = (function (){var G__199678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199679 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199678,G__199679) : tailrecursion.hoplon.span.call(null,G__199678,G__199679));
})();
var G__199646 = "[";
var G__199647 = (function (){var G__199680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199681 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199680,G__199681) : tailrecursion.hoplon.span.call(null,G__199680,G__199681));
})();
var G__199648 = "] (";
var G__199649 = (function (){var G__199682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199683 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199682,G__199683) : tailrecursion.hoplon.span.call(null,G__199682,G__199683));
})();
var G__199650 = "[";
var G__199651 = (function (){var G__199684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199685 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199684,G__199685) : tailrecursion.hoplon.span.call(null,G__199684,G__199685));
})();
var G__199652 = "] (";
var G__199653 = (function (){var G__199686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199687 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199686,G__199687) : tailrecursion.hoplon.span.call(null,G__199686,G__199687));
})();
var G__199654 = " ";
var G__199655 = (function (){var G__199688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199689 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199688,G__199689) : tailrecursion.hoplon.span.call(null,G__199688,G__199689));
})();
var G__199656 = "))))\n(";
var G__199657 = (function (){var G__199690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199691 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199690,G__199691) : tailrecursion.hoplon.span.call(null,G__199690,G__199691));
})();
var G__199658 = (function (){var G__199692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199693 = "two";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199692,G__199693) : tailrecursion.hoplon.span.call(null,G__199692,G__199693));
})();
var G__199659 = "\n  (";
var G__199660 = (function (){var G__199694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199695 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199694,G__199695) : tailrecursion.hoplon.span.call(null,G__199694,G__199695));
})();
var G__199661 = "[";
var G__199662 = (function (){var G__199696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199697 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199696,G__199697) : tailrecursion.hoplon.span.call(null,G__199696,G__199697));
})();
var G__199663 = "] (";
var G__199664 = (function (){var G__199698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199699 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199698,G__199699) : tailrecursion.hoplon.span.call(null,G__199698,G__199699));
})();
var G__199665 = "[";
var G__199666 = (function (){var G__199700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199701 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199700,G__199701) : tailrecursion.hoplon.span.call(null,G__199700,G__199701));
})();
var G__199667 = "] (";
var G__199668 = (function (){var G__199702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199703 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199702,G__199703) : tailrecursion.hoplon.span.call(null,G__199702,G__199703));
})();
var G__199669 = " (";
var G__199670 = (function (){var G__199704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199705 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199704,G__199705) : tailrecursion.hoplon.span.call(null,G__199704,G__199705));
})();
var G__199671 = " ";
var G__199672 = (function (){var G__199706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199707 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199706,G__199707) : tailrecursion.hoplon.span.call(null,G__199706,G__199707));
})();
var G__199673 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34(G__199640,G__199641,G__199642,G__199643,G__199644,G__199645,G__199646,G__199647,G__199648,G__199649,G__199650,G__199651,G__199652,G__199653,G__199654,G__199655,G__199656,G__199657,G__199658,G__199659,G__199660,G__199661,G__199662,G__199663,G__199664,G__199665,G__199666,G__199667,G__199668,G__199669,G__199670,G__199671,G__199672,G__199673) : tailrecursion.hoplon.pre.call(null,G__199640,G__199641,G__199642,G__199643,G__199644,G__199645,G__199646,G__199647,G__199648,G__199649,G__199650,G__199651,G__199652,G__199653,G__199654,G__199655,G__199656,G__199657,G__199658,G__199659,G__199660,G__199661,G__199662,G__199663,G__199664,G__199665,G__199666,G__199667,G__199668,G__199669,G__199670,G__199671,G__199672,G__199673));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__199638,G__199639) : tailrecursion.hoplon.div.call(null,G__199638,G__199639));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__199637) : tailrecursion.hoplon.div.call(null,G__199637));
})(),(function (){var G__199708 = cljs.core.PersistentArrayMap.EMPTY;
var G__199709 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for addition, first let",(function (){var G__199710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__199711 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__199710,G__199711) : tailrecursion.hoplon.markdown.simple_node.call(null,G__199710,G__199711));
})(),"s build up a some functions to make this easier to reason about."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__199708,G__199709) : tailrecursion.hoplon.markdown.para_node.call(null,G__199708,G__199709));
})(),(function (){var G__199751 = (function (){var G__199752 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__199753 = (function (){var G__199754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__199755 = "(";
var G__199756 = (function (){var G__199773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199774 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199773,G__199774) : tailrecursion.hoplon.span.call(null,G__199773,G__199774));
})();
var G__199757 = (function (){var G__199775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199776 = "compose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199775,G__199776) : tailrecursion.hoplon.span.call(null,G__199775,G__199776));
})();
var G__199758 = " [";
var G__199759 = (function (){var G__199777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199778 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199777,G__199778) : tailrecursion.hoplon.span.call(null,G__199777,G__199778));
})();
var G__199760 = " ";
var G__199761 = (function (){var G__199779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199780 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199779,G__199780) : tailrecursion.hoplon.span.call(null,G__199779,G__199780));
})();
var G__199762 = "]\n  (";
var G__199763 = (function (){var G__199781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199782 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199781,G__199782) : tailrecursion.hoplon.span.call(null,G__199781,G__199782));
})();
var G__199764 = "[";
var G__199765 = (function (){var G__199783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199784 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199783,G__199784) : tailrecursion.hoplon.span.call(null,G__199783,G__199784));
})();
var G__199766 = "] (";
var G__199767 = (function (){var G__199785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199786 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199785,G__199786) : tailrecursion.hoplon.span.call(null,G__199785,G__199786));
})();
var G__199768 = " (";
var G__199769 = (function (){var G__199787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199788 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199787,G__199788) : tailrecursion.hoplon.span.call(null,G__199787,G__199788));
})();
var G__199770 = " ";
var G__199771 = (function (){var G__199789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199790 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199789,G__199790) : tailrecursion.hoplon.span.call(null,G__199789,G__199790));
})();
var G__199772 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__199754,G__199755,G__199756,G__199757,G__199758,G__199759,G__199760,G__199761,G__199762,G__199763,G__199764,G__199765,G__199766,G__199767,G__199768,G__199769,G__199770,G__199771,G__199772) : tailrecursion.hoplon.pre.call(null,G__199754,G__199755,G__199756,G__199757,G__199758,G__199759,G__199760,G__199761,G__199762,G__199763,G__199764,G__199765,G__199766,G__199767,G__199768,G__199769,G__199770,G__199771,G__199772));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__199752,G__199753) : tailrecursion.hoplon.div.call(null,G__199752,G__199753));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__199751) : tailrecursion.hoplon.div.call(null,G__199751));
})(),(function (){var G__199791 = cljs.core.PersistentArrayMap.EMPTY;
var G__199792 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With that, we can now define"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__199791,G__199792) : tailrecursion.hoplon.markdown.para_node.call(null,G__199791,G__199792));
})(),(function (){var G__199840 = (function (){var G__199841 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__199842 = (function (){var G__199843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__199844 = "(";
var G__199845 = (function (){var G__199866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199867 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199866,G__199867) : tailrecursion.hoplon.span.call(null,G__199866,G__199867));
})();
var G__199846 = (function (){var G__199868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199869 = "add";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199868,G__199869) : tailrecursion.hoplon.span.call(null,G__199868,G__199869));
})();
var G__199847 = " [";
var G__199848 = (function (){var G__199870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199871 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199870,G__199871) : tailrecursion.hoplon.span.call(null,G__199870,G__199871));
})();
var G__199849 = " ";
var G__199850 = (function (){var G__199872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199873 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199872,G__199873) : tailrecursion.hoplon.span.call(null,G__199872,G__199873));
})();
var G__199851 = "]\n  (";
var G__199852 = (function (){var G__199874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199875 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199874,G__199875) : tailrecursion.hoplon.span.call(null,G__199874,G__199875));
})();
var G__199853 = "[";
var G__199854 = (function (){var G__199876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199877 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199876,G__199877) : tailrecursion.hoplon.span.call(null,G__199876,G__199877));
})();
var G__199855 = "]\n    (";
var G__199856 = (function (){var G__199878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199879 = "compose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199878,G__199879) : tailrecursion.hoplon.span.call(null,G__199878,G__199879));
})();
var G__199857 = " (";
var G__199858 = (function (){var G__199880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199881 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199880,G__199881) : tailrecursion.hoplon.span.call(null,G__199880,G__199881));
})();
var G__199859 = " ";
var G__199860 = (function (){var G__199882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199883 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199882,G__199883) : tailrecursion.hoplon.span.call(null,G__199882,G__199883));
})();
var G__199861 = ") (";
var G__199862 = (function (){var G__199884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199885 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199884,G__199885) : tailrecursion.hoplon.span.call(null,G__199884,G__199885));
})();
var G__199863 = " ";
var G__199864 = (function (){var G__199886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199887 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199886,G__199887) : tailrecursion.hoplon.span.call(null,G__199886,G__199887));
})();
var G__199865 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__199843,G__199844,G__199845,G__199846,G__199847,G__199848,G__199849,G__199850,G__199851,G__199852,G__199853,G__199854,G__199855,G__199856,G__199857,G__199858,G__199859,G__199860,G__199861,G__199862,G__199863,G__199864,G__199865) : tailrecursion.hoplon.pre.call(null,G__199843,G__199844,G__199845,G__199846,G__199847,G__199848,G__199849,G__199850,G__199851,G__199852,G__199853,G__199854,G__199855,G__199856,G__199857,G__199858,G__199859,G__199860,G__199861,G__199862,G__199863,G__199864,G__199865));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__199841,G__199842) : tailrecursion.hoplon.div.call(null,G__199841,G__199842));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__199840) : tailrecursion.hoplon.div.call(null,G__199840));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_199566;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_199565;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_199564;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_199563;
}})()], 0))], 0))], 0));
var G__193992 = "";
var G__193993 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Extended Exercise: Interval Arithmetic"], null),(function (){var _STAR_references_STAR_199888 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_199889 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_199890 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_199891 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__199892 = cljs.core.PersistentArrayMap.EMPTY;
var G__199893 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa P. Hacker is designing a system to help people solve engineering problems. One feature she wants to provide in her system is the ability to manipulate inexact quantities (such as measured parameters of physical devices) with known precision, so that when computations are done with such approximate quantities the results will be numbers of known precision."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__199892,G__199893) : tailrecursion.hoplon.markdown.para_node.call(null,G__199892,G__199893));
})(),(function (){var G__199894 = cljs.core.PersistentArrayMap.EMPTY;
var G__199895 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Electrical engineers will be using Alyssa",(function (){var G__199896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__199897 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__199896,G__199897) : tailrecursion.hoplon.markdown.simple_node.call(null,G__199896,G__199897));
})(),"s system to compute electrical quantities. It is sometimes necessary for them to compute the value of a parallel equivalent resistance \\(R_p\\) of two resistors \\(R_1\\) and \\(R_2\\) using the formula"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__199894,G__199895) : tailrecursion.hoplon.markdown.para_node.call(null,G__199894,G__199895));
})(),(function (){var G__199898 = cljs.core.PersistentArrayMap.EMPTY;
var G__199899 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$R_p=\\frac{1}{1/R_1+1/R_2}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__199898,G__199899) : tailrecursion.hoplon.markdown.para_node.call(null,G__199898,G__199899));
})(),(function (){var G__199900 = cljs.core.PersistentArrayMap.EMPTY;
var G__199901 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Resistance values are usually known only up to some tolerance guaranteed by the manufacturer of the resistor. For example, if you buy a resistor labeled ",(function (){var G__199902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__199903 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["6.8 ohms with 10% tolerance"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__199902,G__199903) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__199902,G__199903));
})()," you can only be sure that the resistor has a resistance between 6.8 - 0.68 = 6.12 and 6.8 + 0.68 = 7.48 ohms. Thus, if you have a 6.8-ohm 10% resistor in parallel with a 4.7-ohm 5% resistor, the resistance of the combination can range from about 2.58 ohms (if the two resistors are at the lower bounds) to about 2.97 ohms (if the two resistors are at the upper bounds)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__199900,G__199901) : tailrecursion.hoplon.markdown.para_node.call(null,G__199900,G__199901));
})(),(function (){var G__199904 = cljs.core.PersistentArrayMap.EMPTY;
var G__199905 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa",(function (){var G__199906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__199907 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__199906,G__199907) : tailrecursion.hoplon.markdown.simple_node.call(null,G__199906,G__199907));
})(),"s idea is to implement ",(function (){var G__199908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__199909 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["interval arithmetic"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__199908,G__199909) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__199908,G__199909));
})()," as a set of arithmetic operations for combining ",(function (){var G__199910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__199911 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["intervals"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__199910,G__199911) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__199910,G__199911));
})()," (objects that represent the range of possible values of an inexact quantity). The result of adding, subtracting, multiplying, or dividing two intervals is itself an interval, representing the range of the result."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__199904,G__199905) : tailrecursion.hoplon.markdown.para_node.call(null,G__199904,G__199905));
})(),(function (){var G__199912 = cljs.core.PersistentArrayMap.EMPTY;
var G__199913 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa postulates the existence of an abstract object called an ",(function (){var G__199914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__199915 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["interval"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__199914,G__199915) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__199914,G__199915));
})()," that has two endpoints: a lower bound and an upper bound. She also presumes that, given the endpoints of an interval, she can construct the interval using the data constructor ",(function (){var G__199916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-interval"], null);
var G__199917 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199916,G__199917) : tailrecursion.hoplon.markdown.code_node.call(null,G__199916,G__199917));
})(),". Alyssa first writes a procedure for adding two intervals. She reasons that the minimum value the sum could be is the sum of the two lower bounds and the maximum value it could be is the sum of the two upper bounds:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__199912,G__199913) : tailrecursion.hoplon.markdown.para_node.call(null,G__199912,G__199913));
})(),(function (){var G__199981 = (function (){var G__199982 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__199983 = (function (){var G__199984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__199985 = "(";
var G__199986 = (function (){var G__200015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200016 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200015,G__200016) : tailrecursion.hoplon.span.call(null,G__200015,G__200016));
})();
var G__199987 = (function (){var G__200017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200018 = "add-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200017,G__200018) : tailrecursion.hoplon.span.call(null,G__200017,G__200018));
})();
var G__199988 = " [";
var G__199989 = (function (){var G__200019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200020 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200019,G__200020) : tailrecursion.hoplon.span.call(null,G__200019,G__200020));
})();
var G__199990 = " ";
var G__199991 = (function (){var G__200021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200022 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200021,G__200022) : tailrecursion.hoplon.span.call(null,G__200021,G__200022));
})();
var G__199992 = "]\n  (";
var G__199993 = (function (){var G__200023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200024 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200023,G__200024) : tailrecursion.hoplon.span.call(null,G__200023,G__200024));
})();
var G__199994 = " (";
var G__199995 = (function (){var G__200025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200026 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200025,G__200026) : tailrecursion.hoplon.span.call(null,G__200025,G__200026));
})();
var G__199996 = "(";
var G__199997 = (function (){var G__200027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200028 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200027,G__200028) : tailrecursion.hoplon.span.call(null,G__200027,G__200028));
})();
var G__199998 = " ";
var G__199999 = (function (){var G__200029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200030 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200029,G__200030) : tailrecursion.hoplon.span.call(null,G__200029,G__200030));
})();
var G__200000 = ") (";
var G__200001 = (function (){var G__200031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200032 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200031,G__200032) : tailrecursion.hoplon.span.call(null,G__200031,G__200032));
})();
var G__200002 = " ";
var G__200003 = (function (){var G__200033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200034 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200033,G__200034) : tailrecursion.hoplon.span.call(null,G__200033,G__200034));
})();
var G__200004 = "))\n                 (";
var G__200005 = (function (){var G__200035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200036 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200035,G__200036) : tailrecursion.hoplon.span.call(null,G__200035,G__200036));
})();
var G__200006 = "(";
var G__200007 = (function (){var G__200037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200038 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200037,G__200038) : tailrecursion.hoplon.span.call(null,G__200037,G__200038));
})();
var G__200008 = " ";
var G__200009 = (function (){var G__200039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200040 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200039,G__200040) : tailrecursion.hoplon.span.call(null,G__200039,G__200040));
})();
var G__200010 = ") (";
var G__200011 = (function (){var G__200041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200042 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200041,G__200042) : tailrecursion.hoplon.span.call(null,G__200041,G__200042));
})();
var G__200012 = " ";
var G__200013 = (function (){var G__200043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200044 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200043,G__200044) : tailrecursion.hoplon.span.call(null,G__200043,G__200044));
})();
var G__200014 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__199984,G__199985,G__199986,G__199987,G__199988,G__199989,G__199990,G__199991,G__199992,G__199993,G__199994,G__199995,G__199996,G__199997,G__199998,G__199999,G__200000,G__200001,G__200002,G__200003,G__200004,G__200005,G__200006,G__200007,G__200008,G__200009,G__200010,G__200011,G__200012,G__200013,G__200014) : tailrecursion.hoplon.pre.call(null,G__199984,G__199985,G__199986,G__199987,G__199988,G__199989,G__199990,G__199991,G__199992,G__199993,G__199994,G__199995,G__199996,G__199997,G__199998,G__199999,G__200000,G__200001,G__200002,G__200003,G__200004,G__200005,G__200006,G__200007,G__200008,G__200009,G__200010,G__200011,G__200012,G__200013,G__200014));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__199982,G__199983) : tailrecursion.hoplon.div.call(null,G__199982,G__199983));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__199981) : tailrecursion.hoplon.div.call(null,G__199981));
})(),(function (){var G__200045 = cljs.core.PersistentArrayMap.EMPTY;
var G__200046 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa also works out the product of two intervals by finding the minimum and the maximum of the products of the bounds and using them as bounds of the resulting interval. (",(function (){var G__200047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"min"], null);
var G__200048 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200047,G__200048) : tailrecursion.hoplon.markdown.code_node.call(null,G__200047,G__200048));
})()," and ",(function (){var G__200049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"max"], null);
var G__200050 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200049,G__200050) : tailrecursion.hoplon.markdown.code_node.call(null,G__200049,G__200050));
})()," are primitives that find the minimum and maximum of any number of arguments.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200045,G__200046) : tailrecursion.hoplon.markdown.para_node.call(null,G__200045,G__200046));
})(),(function (){var G__200212 = (function (){var G__200213 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__200214 = (function (){var G__200215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__200216 = "(";
var G__200217 = (function (){var G__200294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200295 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200294,G__200295) : tailrecursion.hoplon.span.call(null,G__200294,G__200295));
})();
var G__200218 = (function (){var G__200296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200297 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200296,G__200297) : tailrecursion.hoplon.span.call(null,G__200296,G__200297));
})();
var G__200219 = " [";
var G__200220 = (function (){var G__200298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200299 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200298,G__200299) : tailrecursion.hoplon.span.call(null,G__200298,G__200299));
})();
var G__200221 = " ";
var G__200222 = (function (){var G__200300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200301 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200300,G__200301) : tailrecursion.hoplon.span.call(null,G__200300,G__200301));
})();
var G__200223 = "]\n  (";
var G__200224 = (function (){var G__200302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200303 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200302,G__200303) : tailrecursion.hoplon.span.call(null,G__200302,G__200303));
})();
var G__200225 = "[";
var G__200226 = (function (){var G__200304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200305 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200304,G__200305) : tailrecursion.hoplon.span.call(null,G__200304,G__200305));
})();
var G__200227 = " (";
var G__200228 = (function (){var G__200306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200307 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200306,G__200307) : tailrecursion.hoplon.span.call(null,G__200306,G__200307));
})();
var G__200229 = "(";
var G__200230 = (function (){var G__200308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200309 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200308,G__200309) : tailrecursion.hoplon.span.call(null,G__200308,G__200309));
})();
var G__200231 = " ";
var G__200232 = (function (){var G__200310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200311 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200310,G__200311) : tailrecursion.hoplon.span.call(null,G__200310,G__200311));
})();
var G__200233 = ") (";
var G__200234 = (function (){var G__200312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200313 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200312,G__200313) : tailrecursion.hoplon.span.call(null,G__200312,G__200313));
})();
var G__200235 = " ";
var G__200236 = (function (){var G__200314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200315 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200314,G__200315) : tailrecursion.hoplon.span.call(null,G__200314,G__200315));
})();
var G__200237 = "))\n        ";
var G__200238 = (function (){var G__200316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200317 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200316,G__200317) : tailrecursion.hoplon.span.call(null,G__200316,G__200317));
})();
var G__200239 = " (";
var G__200240 = (function (){var G__200318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200319 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200318,G__200319) : tailrecursion.hoplon.span.call(null,G__200318,G__200319));
})();
var G__200241 = "(";
var G__200242 = (function (){var G__200320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200321 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200320,G__200321) : tailrecursion.hoplon.span.call(null,G__200320,G__200321));
})();
var G__200243 = " ";
var G__200244 = (function (){var G__200322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200323 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200322,G__200323) : tailrecursion.hoplon.span.call(null,G__200322,G__200323));
})();
var G__200245 = ") (";
var G__200246 = (function (){var G__200324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200325 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200324,G__200325) : tailrecursion.hoplon.span.call(null,G__200324,G__200325));
})();
var G__200247 = " ";
var G__200248 = (function (){var G__200326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200327 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200326,G__200327) : tailrecursion.hoplon.span.call(null,G__200326,G__200327));
})();
var G__200249 = "))\n        ";
var G__200250 = (function (){var G__200328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200329 = "p3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200328,G__200329) : tailrecursion.hoplon.span.call(null,G__200328,G__200329));
})();
var G__200251 = " (";
var G__200252 = (function (){var G__200330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200331 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200330,G__200331) : tailrecursion.hoplon.span.call(null,G__200330,G__200331));
})();
var G__200253 = "(";
var G__200254 = (function (){var G__200332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200333 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200332,G__200333) : tailrecursion.hoplon.span.call(null,G__200332,G__200333));
})();
var G__200255 = " ";
var G__200256 = (function (){var G__200334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200335 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200334,G__200335) : tailrecursion.hoplon.span.call(null,G__200334,G__200335));
})();
var G__200257 = ") (";
var G__200258 = (function (){var G__200336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200337 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200336,G__200337) : tailrecursion.hoplon.span.call(null,G__200336,G__200337));
})();
var G__200259 = " ";
var G__200260 = (function (){var G__200338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200339 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200338,G__200339) : tailrecursion.hoplon.span.call(null,G__200338,G__200339));
})();
var G__200261 = "))\n        ";
var G__200262 = (function (){var G__200340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200341 = "p4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200340,G__200341) : tailrecursion.hoplon.span.call(null,G__200340,G__200341));
})();
var G__200263 = " (";
var G__200264 = (function (){var G__200342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200343 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200342,G__200343) : tailrecursion.hoplon.span.call(null,G__200342,G__200343));
})();
var G__200265 = "(";
var G__200266 = (function (){var G__200344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200345 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200344,G__200345) : tailrecursion.hoplon.span.call(null,G__200344,G__200345));
})();
var G__200267 = " ";
var G__200268 = (function (){var G__200346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200347 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200346,G__200347) : tailrecursion.hoplon.span.call(null,G__200346,G__200347));
})();
var G__200269 = ") (";
var G__200270 = (function (){var G__200348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200349 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200348,G__200349) : tailrecursion.hoplon.span.call(null,G__200348,G__200349));
})();
var G__200271 = " ";
var G__200272 = (function (){var G__200350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200351 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200350,G__200351) : tailrecursion.hoplon.span.call(null,G__200350,G__200351));
})();
var G__200273 = "))]\n    (";
var G__200274 = (function (){var G__200352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200353 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200352,G__200353) : tailrecursion.hoplon.span.call(null,G__200352,G__200353));
})();
var G__200275 = " (";
var G__200276 = (function (){var G__200354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200355 = "min ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200354,G__200355) : tailrecursion.hoplon.span.call(null,G__200354,G__200355));
})();
var G__200277 = (function (){var G__200356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200357 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200356,G__200357) : tailrecursion.hoplon.span.call(null,G__200356,G__200357));
})();
var G__200278 = " ";
var G__200279 = (function (){var G__200358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200359 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200358,G__200359) : tailrecursion.hoplon.span.call(null,G__200358,G__200359));
})();
var G__200280 = " ";
var G__200281 = (function (){var G__200360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200361 = "p3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200360,G__200361) : tailrecursion.hoplon.span.call(null,G__200360,G__200361));
})();
var G__200282 = " ";
var G__200283 = (function (){var G__200362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200363 = "p4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200362,G__200363) : tailrecursion.hoplon.span.call(null,G__200362,G__200363));
})();
var G__200284 = ")\n                   (";
var G__200285 = (function (){var G__200364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200365 = "max ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200364,G__200365) : tailrecursion.hoplon.span.call(null,G__200364,G__200365));
})();
var G__200286 = (function (){var G__200366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200367 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200366,G__200367) : tailrecursion.hoplon.span.call(null,G__200366,G__200367));
})();
var G__200287 = " ";
var G__200288 = (function (){var G__200368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200369 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200368,G__200369) : tailrecursion.hoplon.span.call(null,G__200368,G__200369));
})();
var G__200289 = " ";
var G__200290 = (function (){var G__200370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200371 = "p3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200370,G__200371) : tailrecursion.hoplon.span.call(null,G__200370,G__200371));
})();
var G__200291 = " ";
var G__200292 = (function (){var G__200372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200373 = "p4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200372,G__200373) : tailrecursion.hoplon.span.call(null,G__200372,G__200373));
})();
var G__200293 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$79 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$79(G__200215,G__200216,G__200217,G__200218,G__200219,G__200220,G__200221,G__200222,G__200223,G__200224,G__200225,G__200226,G__200227,G__200228,G__200229,G__200230,G__200231,G__200232,G__200233,G__200234,G__200235,G__200236,G__200237,G__200238,G__200239,G__200240,G__200241,G__200242,G__200243,G__200244,G__200245,G__200246,G__200247,G__200248,G__200249,G__200250,G__200251,G__200252,G__200253,G__200254,G__200255,G__200256,G__200257,G__200258,G__200259,G__200260,G__200261,G__200262,G__200263,G__200264,G__200265,G__200266,G__200267,G__200268,G__200269,G__200270,G__200271,G__200272,G__200273,G__200274,G__200275,G__200276,G__200277,G__200278,G__200279,G__200280,G__200281,G__200282,G__200283,G__200284,G__200285,G__200286,G__200287,G__200288,G__200289,G__200290,G__200291,G__200292,G__200293) : tailrecursion.hoplon.pre.call(null,G__200215,G__200216,G__200217,G__200218,G__200219,G__200220,G__200221,G__200222,G__200223,G__200224,G__200225,G__200226,G__200227,G__200228,G__200229,G__200230,G__200231,G__200232,G__200233,G__200234,G__200235,G__200236,G__200237,G__200238,G__200239,G__200240,G__200241,G__200242,G__200243,G__200244,G__200245,G__200246,G__200247,G__200248,G__200249,G__200250,G__200251,G__200252,G__200253,G__200254,G__200255,G__200256,G__200257,G__200258,G__200259,G__200260,G__200261,G__200262,G__200263,G__200264,G__200265,G__200266,G__200267,G__200268,G__200269,G__200270,G__200271,G__200272,G__200273,G__200274,G__200275,G__200276,G__200277,G__200278,G__200279,G__200280,G__200281,G__200282,G__200283,G__200284,G__200285,G__200286,G__200287,G__200288,G__200289,G__200290,G__200291,G__200292,G__200293));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__200213,G__200214) : tailrecursion.hoplon.div.call(null,G__200213,G__200214));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__200212) : tailrecursion.hoplon.div.call(null,G__200212));
})(),(function (){var G__200374 = cljs.core.PersistentArrayMap.EMPTY;
var G__200375 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To divide two intervals, Alyssa multiplies the first by the reciprocal of the second. Note that the bounds of the reciprocal interval are the reciprocal of the upper-bound and the reciprocal of the lower-bound, in that order."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200374,G__200375) : tailrecursion.hoplon.markdown.para_node.call(null,G__200374,G__200375));
})(),(function (){var G__200437 = (function (){var G__200438 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__200439 = (function (){var G__200440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__200441 = "(";
var G__200442 = (function (){var G__200469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200470 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200469,G__200470) : tailrecursion.hoplon.span.call(null,G__200469,G__200470));
})();
var G__200443 = (function (){var G__200471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200472 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200471,G__200472) : tailrecursion.hoplon.span.call(null,G__200471,G__200472));
})();
var G__200444 = " [";
var G__200445 = (function (){var G__200473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200474 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200473,G__200474) : tailrecursion.hoplon.span.call(null,G__200473,G__200474));
})();
var G__200446 = " ";
var G__200447 = (function (){var G__200475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200476 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200475,G__200476) : tailrecursion.hoplon.span.call(null,G__200475,G__200476));
})();
var G__200448 = "]\n  (";
var G__200449 = (function (){var G__200477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200478 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200477,G__200478) : tailrecursion.hoplon.span.call(null,G__200477,G__200478));
})();
var G__200450 = " ";
var G__200451 = (function (){var G__200479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200480 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200479,G__200480) : tailrecursion.hoplon.span.call(null,G__200479,G__200480));
})();
var G__200452 = "\n                (";
var G__200453 = (function (){var G__200481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200482 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200481,G__200482) : tailrecursion.hoplon.span.call(null,G__200481,G__200482));
})();
var G__200454 = " (";
var G__200455 = (function (){var G__200483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200484 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200483,G__200484) : tailrecursion.hoplon.span.call(null,G__200483,G__200484));
})();
var G__200456 = (function (){var G__200485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__200486 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200485,G__200486) : tailrecursion.hoplon.span.call(null,G__200485,G__200486));
})();
var G__200457 = " (";
var G__200458 = (function (){var G__200487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200488 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200487,G__200488) : tailrecursion.hoplon.span.call(null,G__200487,G__200488));
})();
var G__200459 = " ";
var G__200460 = (function (){var G__200489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200490 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200489,G__200490) : tailrecursion.hoplon.span.call(null,G__200489,G__200490));
})();
var G__200461 = "))\n                               (";
var G__200462 = (function (){var G__200491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200492 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200491,G__200492) : tailrecursion.hoplon.span.call(null,G__200491,G__200492));
})();
var G__200463 = (function (){var G__200493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__200494 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200493,G__200494) : tailrecursion.hoplon.span.call(null,G__200493,G__200494));
})();
var G__200464 = " (";
var G__200465 = (function (){var G__200495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200496 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200495,G__200496) : tailrecursion.hoplon.span.call(null,G__200495,G__200496));
})();
var G__200466 = " ";
var G__200467 = (function (){var G__200497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200498 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200497,G__200498) : tailrecursion.hoplon.span.call(null,G__200497,G__200498));
})();
var G__200468 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29(G__200440,G__200441,G__200442,G__200443,G__200444,G__200445,G__200446,G__200447,G__200448,G__200449,G__200450,G__200451,G__200452,G__200453,G__200454,G__200455,G__200456,G__200457,G__200458,G__200459,G__200460,G__200461,G__200462,G__200463,G__200464,G__200465,G__200466,G__200467,G__200468) : tailrecursion.hoplon.pre.call(null,G__200440,G__200441,G__200442,G__200443,G__200444,G__200445,G__200446,G__200447,G__200448,G__200449,G__200450,G__200451,G__200452,G__200453,G__200454,G__200455,G__200456,G__200457,G__200458,G__200459,G__200460,G__200461,G__200462,G__200463,G__200464,G__200465,G__200466,G__200467,G__200468));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__200438,G__200439) : tailrecursion.hoplon.div.call(null,G__200438,G__200439));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__200437) : tailrecursion.hoplon.div.call(null,G__200437));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_199891;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_199890;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_199889;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_199888;
}})()], 0));
var G__193994 = "";
var G__193995 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_200499 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200500 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_200501 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200502 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__200503 = cljs.core.PersistentArrayMap.EMPTY;
var G__200504 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa",(function (){var G__200505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__200506 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__200505,G__200506) : tailrecursion.hoplon.markdown.simple_node.call(null,G__200505,G__200506));
})(),"s program is incomplete because she has not specified the implementation of the interval abstraction. Here is a definition of the interval constructor:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200503,G__200504) : tailrecursion.hoplon.markdown.para_node.call(null,G__200503,G__200504));
})(),(function (){var G__200537 = (function (){var G__200538 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__200539 = (function (){var G__200540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__200541 = "(";
var G__200542 = (function (){var G__200554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200555 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200554,G__200555) : tailrecursion.hoplon.span.call(null,G__200554,G__200555));
})();
var G__200543 = (function (){var G__200556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200557 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200556,G__200557) : tailrecursion.hoplon.span.call(null,G__200556,G__200557));
})();
var G__200544 = " [";
var G__200545 = (function (){var G__200558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200559 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200558,G__200559) : tailrecursion.hoplon.span.call(null,G__200558,G__200559));
})();
var G__200546 = " ";
var G__200547 = (function (){var G__200560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200561 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200560,G__200561) : tailrecursion.hoplon.span.call(null,G__200560,G__200561));
})();
var G__200548 = "]\n  (";
var G__200549 = (function (){var G__200562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200563 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200562,G__200563) : tailrecursion.hoplon.span.call(null,G__200562,G__200563));
})();
var G__200550 = (function (){var G__200564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200565 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200564,G__200565) : tailrecursion.hoplon.span.call(null,G__200564,G__200565));
})();
var G__200551 = " ";
var G__200552 = (function (){var G__200566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200567 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200566,G__200567) : tailrecursion.hoplon.span.call(null,G__200566,G__200567));
})();
var G__200553 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__200540,G__200541,G__200542,G__200543,G__200544,G__200545,G__200546,G__200547,G__200548,G__200549,G__200550,G__200551,G__200552,G__200553) : tailrecursion.hoplon.pre.call(null,G__200540,G__200541,G__200542,G__200543,G__200544,G__200545,G__200546,G__200547,G__200548,G__200549,G__200550,G__200551,G__200552,G__200553));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__200538,G__200539) : tailrecursion.hoplon.div.call(null,G__200538,G__200539));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__200537) : tailrecursion.hoplon.div.call(null,G__200537));
})(),(function (){var G__200568 = cljs.core.PersistentArrayMap.EMPTY;
var G__200569 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define selectors ",(function (){var G__200570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"upper-bound"], null);
var G__200571 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200570,G__200571) : tailrecursion.hoplon.markdown.code_node.call(null,G__200570,G__200571));
})()," and ",(function (){var G__200572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"lower-bound"], null);
var G__200573 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200572,G__200573) : tailrecursion.hoplon.markdown.code_node.call(null,G__200572,G__200573));
})()," to complete the implementation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200568,G__200569) : tailrecursion.hoplon.markdown.para_node.call(null,G__200568,G__200569));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200502;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200501;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200500;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200499;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_200574 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200575 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_200576 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200577 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__200618 = (function (){var G__200619 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__200620 = (function (){var G__200621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__200622 = "(";
var G__200623 = (function (){var G__200639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200640 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200639,G__200640) : tailrecursion.hoplon.span.call(null,G__200639,G__200640));
})();
var G__200624 = (function (){var G__200641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200642 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200641,G__200642) : tailrecursion.hoplon.span.call(null,G__200641,G__200642));
})();
var G__200625 = " [";
var G__200626 = (function (){var G__200643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200644 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200643,G__200644) : tailrecursion.hoplon.span.call(null,G__200643,G__200644));
})();
var G__200627 = "]\n  (";
var G__200628 = (function (){var G__200645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200646 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200645,G__200646) : tailrecursion.hoplon.span.call(null,G__200645,G__200646));
})();
var G__200629 = (function (){var G__200647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200648 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200647,G__200648) : tailrecursion.hoplon.span.call(null,G__200647,G__200648));
})();
var G__200630 = "))\n(";
var G__200631 = (function (){var G__200649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200650 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200649,G__200650) : tailrecursion.hoplon.span.call(null,G__200649,G__200650));
})();
var G__200632 = (function (){var G__200651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200652 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200651,G__200652) : tailrecursion.hoplon.span.call(null,G__200651,G__200652));
})();
var G__200633 = " [";
var G__200634 = (function (){var G__200653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200654 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200653,G__200654) : tailrecursion.hoplon.span.call(null,G__200653,G__200654));
})();
var G__200635 = "]\n  (";
var G__200636 = (function (){var G__200655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200656 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200655,G__200656) : tailrecursion.hoplon.span.call(null,G__200655,G__200656));
})();
var G__200637 = (function (){var G__200657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200658 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200657,G__200658) : tailrecursion.hoplon.span.call(null,G__200657,G__200658));
})();
var G__200638 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__200621,G__200622,G__200623,G__200624,G__200625,G__200626,G__200627,G__200628,G__200629,G__200630,G__200631,G__200632,G__200633,G__200634,G__200635,G__200636,G__200637,G__200638) : tailrecursion.hoplon.pre.call(null,G__200621,G__200622,G__200623,G__200624,G__200625,G__200626,G__200627,G__200628,G__200629,G__200630,G__200631,G__200632,G__200633,G__200634,G__200635,G__200636,G__200637,G__200638));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__200619,G__200620) : tailrecursion.hoplon.div.call(null,G__200619,G__200620));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__200618) : tailrecursion.hoplon.div.call(null,G__200618));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200577;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200576;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200575;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200574;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_200659 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200660 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_200661 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200662 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__200663 = cljs.core.PersistentArrayMap.EMPTY;
var G__200664 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using reasoning analogous to Alyssa",(function (){var G__200665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__200666 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__200665,G__200666) : tailrecursion.hoplon.markdown.simple_node.call(null,G__200665,G__200666));
})(),"s, describe how the difference of two intervals may be computed. Define a corresponding subtraction procedure, called ",(function (){var G__200667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-interval"], null);
var G__200668 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200667,G__200668) : tailrecursion.hoplon.markdown.code_node.call(null,G__200667,G__200668));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200663,G__200664) : tailrecursion.hoplon.markdown.para_node.call(null,G__200663,G__200664));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200662;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200661;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200660;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200659;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_200669 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200670 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_200671 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200672 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__200673 = cljs.core.PersistentArrayMap.EMPTY;
var G__200674 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using reasoning analogous to Alyssa",(function (){var G__200675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__200676 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__200675,G__200676) : tailrecursion.hoplon.markdown.simple_node.call(null,G__200675,G__200676));
})(),"s, we",(function (){var G__200677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__200678 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__200677,G__200678) : tailrecursion.hoplon.markdown.simple_node.call(null,G__200677,G__200678));
})(),"d define ",(function (){var G__200679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-interval"], null);
var G__200680 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200679,G__200680) : tailrecursion.hoplon.markdown.code_node.call(null,G__200679,G__200680));
})()," as:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200673,G__200674) : tailrecursion.hoplon.markdown.para_node.call(null,G__200673,G__200674));
})(),(function (){var G__200744 = (function (){var G__200745 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__200746 = (function (){var G__200747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__200748 = "(";
var G__200749 = (function (){var G__200778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200779 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200778,G__200779) : tailrecursion.hoplon.span.call(null,G__200778,G__200779));
})();
var G__200750 = (function (){var G__200780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200781 = "sub-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200780,G__200781) : tailrecursion.hoplon.span.call(null,G__200780,G__200781));
})();
var G__200751 = " [";
var G__200752 = (function (){var G__200782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200783 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200782,G__200783) : tailrecursion.hoplon.span.call(null,G__200782,G__200783));
})();
var G__200753 = " ";
var G__200754 = (function (){var G__200784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200785 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200784,G__200785) : tailrecursion.hoplon.span.call(null,G__200784,G__200785));
})();
var G__200755 = "]\n  (";
var G__200756 = (function (){var G__200786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200787 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200786,G__200787) : tailrecursion.hoplon.span.call(null,G__200786,G__200787));
})();
var G__200757 = " (";
var G__200758 = (function (){var G__200788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200789 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200788,G__200789) : tailrecursion.hoplon.span.call(null,G__200788,G__200789));
})();
var G__200759 = "(";
var G__200760 = (function (){var G__200790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200791 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200790,G__200791) : tailrecursion.hoplon.span.call(null,G__200790,G__200791));
})();
var G__200761 = " ";
var G__200762 = (function (){var G__200792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200793 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200792,G__200793) : tailrecursion.hoplon.span.call(null,G__200792,G__200793));
})();
var G__200763 = ") (";
var G__200764 = (function (){var G__200794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200795 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200794,G__200795) : tailrecursion.hoplon.span.call(null,G__200794,G__200795));
})();
var G__200765 = " ";
var G__200766 = (function (){var G__200796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200797 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200796,G__200797) : tailrecursion.hoplon.span.call(null,G__200796,G__200797));
})();
var G__200767 = "))\n                 (";
var G__200768 = (function (){var G__200798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200799 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200798,G__200799) : tailrecursion.hoplon.span.call(null,G__200798,G__200799));
})();
var G__200769 = "(";
var G__200770 = (function (){var G__200800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200801 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200800,G__200801) : tailrecursion.hoplon.span.call(null,G__200800,G__200801));
})();
var G__200771 = " ";
var G__200772 = (function (){var G__200802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200803 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200802,G__200803) : tailrecursion.hoplon.span.call(null,G__200802,G__200803));
})();
var G__200773 = ") (";
var G__200774 = (function (){var G__200804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200805 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200804,G__200805) : tailrecursion.hoplon.span.call(null,G__200804,G__200805));
})();
var G__200775 = " ";
var G__200776 = (function (){var G__200806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200807 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200806,G__200807) : tailrecursion.hoplon.span.call(null,G__200806,G__200807));
})();
var G__200777 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__200747,G__200748,G__200749,G__200750,G__200751,G__200752,G__200753,G__200754,G__200755,G__200756,G__200757,G__200758,G__200759,G__200760,G__200761,G__200762,G__200763,G__200764,G__200765,G__200766,G__200767,G__200768,G__200769,G__200770,G__200771,G__200772,G__200773,G__200774,G__200775,G__200776,G__200777) : tailrecursion.hoplon.pre.call(null,G__200747,G__200748,G__200749,G__200750,G__200751,G__200752,G__200753,G__200754,G__200755,G__200756,G__200757,G__200758,G__200759,G__200760,G__200761,G__200762,G__200763,G__200764,G__200765,G__200766,G__200767,G__200768,G__200769,G__200770,G__200771,G__200772,G__200773,G__200774,G__200775,G__200776,G__200777));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__200745,G__200746) : tailrecursion.hoplon.div.call(null,G__200745,G__200746));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__200744) : tailrecursion.hoplon.div.call(null,G__200744));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200672;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200671;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200670;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200669;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_200808 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200809 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_200810 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200811 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__200812 = cljs.core.PersistentArrayMap.EMPTY;
var G__200813 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["width"], null)], 0))," of an interval is half of the difference between its upper and lower bounds. The width is a measure of the uncertainty of the number specified by the interval. For some arithmetic operations the width of the result of combining two intervals is a function only of the widths of the argument intervals. Show that the width of the sum (or difference) of two intervals is a function only of the widths of the intervals being added (or subtracted). Give examples to show that this is not true for multiplication or division."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200812,G__200813) : tailrecursion.hoplon.markdown.para_node.call(null,G__200812,G__200813));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200811;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200810;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200809;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200808;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_200814 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200815 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_200816 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200817 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__200818 = cljs.core.PersistentArrayMap.EMPTY;
var G__200819 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__200820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__200821 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__200820,G__200821) : tailrecursion.hoplon.markdown.simple_node.call(null,G__200820,G__200821));
})(),"s define two intervals \\(x=(a-\\delta,a+\\delta)\\), and \\(y=(b-\\epsilon,b+\\epsilon)\\), where \\(\\delta,\\epsilon\\) are positive real numbers (and hence the width of their respective intervals). Then, the interval ",(function (){var G__200822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(add-interval x y)"], null);
var G__200823 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200822,G__200823) : tailrecursion.hoplon.markdown.code_node.call(null,G__200822,G__200823));
})()," would be \\((a+b-(\\epsilon+delta),a+b+(\\epsilon+\\delta))\\), making the width of the sum equal to the sum of the widths."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200818,G__200819) : tailrecursion.hoplon.markdown.para_node.call(null,G__200818,G__200819));
})(),(function (){var G__200824 = cljs.core.PersistentArrayMap.EMPTY;
var G__200825 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Similarly, ",(function (){var G__200826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(sub-interval a b)"], null);
var G__200827 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200826,G__200827) : tailrecursion.hoplon.markdown.code_node.call(null,G__200826,G__200827));
})()," would be,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200824,G__200825) : tailrecursion.hoplon.markdown.para_node.call(null,G__200824,G__200825));
})(),(function (){var G__200828 = cljs.core.PersistentArrayMap.EMPTY;
var G__200829 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$(a-\\delta - (b+\\epsilon),a+\\epsilon-(b-\\epsilon))=(a-b-(\\delta+\\epsilon),a-b+(\\delta-\\epsilon))$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200828,G__200829) : tailrecursion.hoplon.markdown.para_node.call(null,G__200828,G__200829));
})(),(function (){var G__200830 = cljs.core.PersistentArrayMap.EMPTY;
var G__200831 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["making the width of the difference of intervals equal to the  difference of the widths of the intervals."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200830,G__200831) : tailrecursion.hoplon.markdown.para_node.call(null,G__200830,G__200831));
})(),(function (){var G__200832 = cljs.core.PersistentArrayMap.EMPTY;
var G__200833 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For multiplication, however, things are not as simple. Let",(function (){var G__200834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__200835 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__200834,G__200835) : tailrecursion.hoplon.markdown.simple_node.call(null,G__200834,G__200835));
})(),"s consider two pairs of intervals, each pair with the same corresponding widths:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200832,G__200833) : tailrecursion.hoplon.markdown.para_node.call(null,G__200832,G__200833));
})(),(function (){var G__200836 = cljs.core.PersistentArrayMap.EMPTY;
var G__200837 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$a=(0,2), b=(0,2) c=(5,7) d=(5,7)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200836,G__200837) : tailrecursion.hoplon.markdown.para_node.call(null,G__200836,G__200837));
})(),(function (){var G__200838 = cljs.core.PersistentArrayMap.EMPTY;
var G__200839 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since these intervals all have the same width, if the width of the product is a function of the widths of the intervals, then the product of any two of these intervals should yield an interval with the same width. But this is clearly not this case because ",(function (){var G__200840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(width\n(mul-interval a b))"], null);
var G__200841 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200840,G__200841) : tailrecursion.hoplon.markdown.code_node.call(null,G__200840,G__200841));
})()," is 2, but ",(function (){var G__200842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(width (mul-interval c d))"], null);
var G__200843 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200842,G__200843) : tailrecursion.hoplon.markdown.code_node.call(null,G__200842,G__200843));
})()," is 12. So clearly the width of the product is not a function of the widths alone."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200838,G__200839) : tailrecursion.hoplon.markdown.para_node.call(null,G__200838,G__200839));
})(),(function (){var G__200844 = cljs.core.PersistentArrayMap.EMPTY;
var G__200845 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for division, we can define \\(a,b=(1,2)\\), and \\(c,d=\\((5,6)\\). Then, ",(function (){var G__200846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(div-interval a b)"], null);
var G__200847 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200846,G__200847) : tailrecursion.hoplon.markdown.code_node.call(null,G__200846,G__200847));
})()," is \\((1/2, 2)\\), but ",(function (){var G__200848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(div-interval c d)"], null);
var G__200849 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200848,G__200849) : tailrecursion.hoplon.markdown.code_node.call(null,G__200848,G__200849));
})()," is \\((5/6,6/5)\\). The width of the first is 0.75 or 3/4, but the width of the second is 11/60."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200844,G__200845) : tailrecursion.hoplon.markdown.para_node.call(null,G__200844,G__200845));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200817;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200816;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200815;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200814;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_200850 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200851 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_200852 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200853 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__200854 = cljs.core.PersistentArrayMap.EMPTY;
var G__200855 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Ben Bitdiddle, an expert systems programmer, looks over Alyssa",(function (){var G__200856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__200857 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__200856,G__200857) : tailrecursion.hoplon.markdown.simple_node.call(null,G__200856,G__200857));
})(),"s shoulder and comments that it is not clear what it means to divide by an interval that spans zero. Modify Alyssa",(function (){var G__200858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__200859 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__200858,G__200859) : tailrecursion.hoplon.markdown.simple_node.call(null,G__200858,G__200859));
})(),"s code to check for this condition and to signal an error if it occurs."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200854,G__200855) : tailrecursion.hoplon.markdown.para_node.call(null,G__200854,G__200855));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200853;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200852;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200851;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200850;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_200860 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200861 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_200862 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200863 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__200988 = (function (){var G__200989 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__200990 = (function (){var G__200991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__200992 = "(";
var G__200993 = (function (){var G__201051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__201052 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201051,G__201052) : tailrecursion.hoplon.span.call(null,G__201051,G__201052));
})();
var G__200994 = (function (){var G__201053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201054 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201053,G__201054) : tailrecursion.hoplon.span.call(null,G__201053,G__201054));
})();
var G__200995 = " [";
var G__200996 = (function (){var G__201055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201056 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201055,G__201056) : tailrecursion.hoplon.span.call(null,G__201055,G__201056));
})();
var G__200997 = " ";
var G__200998 = (function (){var G__201057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201058 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201057,G__201058) : tailrecursion.hoplon.span.call(null,G__201057,G__201058));
})();
var G__200999 = "]\n  (";
var G__201000 = (function (){var G__201059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__201060 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201059,G__201060) : tailrecursion.hoplon.span.call(null,G__201059,G__201060));
})();
var G__201001 = "[";
var G__201002 = (function (){var G__201061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201062 = "span-zero?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201061,G__201062) : tailrecursion.hoplon.span.call(null,G__201061,G__201062));
})();
var G__201003 = " ";
var G__201004 = (function (){var G__201063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__201064 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201063,G__201064) : tailrecursion.hoplon.span.call(null,G__201063,G__201064));
})();
var G__201005 = "(";
var G__201006 = (function (){var G__201065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201066 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201065,G__201066) : tailrecursion.hoplon.span.call(null,G__201065,G__201066));
})();
var G__201007 = (function (){var G__201067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__201068 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201067,G__201068) : tailrecursion.hoplon.span.call(null,G__201067,G__201068));
})();
var G__201008 = "\n                       (";
var G__201009 = (function (){var G__201069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201070 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201069,G__201070) : tailrecursion.hoplon.span.call(null,G__201069,G__201070));
})();
var G__201010 = "(";
var G__201011 = (function (){var G__201071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__201072 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201071,G__201072) : tailrecursion.hoplon.span.call(null,G__201071,G__201072));
})();
var G__201012 = " ";
var G__201013 = (function (){var G__201073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201074 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201073,G__201074) : tailrecursion.hoplon.span.call(null,G__201073,G__201074));
})();
var G__201014 = ")\n                          (";
var G__201015 = (function (){var G__201075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__201076 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201075,G__201076) : tailrecursion.hoplon.span.call(null,G__201075,G__201076));
})();
var G__201016 = " ";
var G__201017 = (function (){var G__201077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201078 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201077,G__201078) : tailrecursion.hoplon.span.call(null,G__201077,G__201078));
})();
var G__201018 = ")))]\n    (";
var G__201019 = (function (){var G__201079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__201080 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201079,G__201080) : tailrecursion.hoplon.span.call(null,G__201079,G__201080));
})();
var G__201020 = "(";
var G__201021 = (function (){var G__201081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__201082 = "span-zero?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201081,G__201082) : tailrecursion.hoplon.span.call(null,G__201081,G__201082));
})();
var G__201022 = " ";
var G__201023 = (function (){var G__201083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201084 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201083,G__201084) : tailrecursion.hoplon.span.call(null,G__201083,G__201084));
})();
var G__201024 = ")\n        (";
var G__201025 = (function (){var G__201085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__201086 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201085,G__201086) : tailrecursion.hoplon.span.call(null,G__201085,G__201086));
})();
var G__201026 = " (";
var G__201027 = (function (){var G__201087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__201088 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201087,G__201088) : tailrecursion.hoplon.span.call(null,G__201087,G__201088));
})();
var G__201028 = " ";
var G__201029 = (function (){var G__201089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__201090 = "\"Can't divide by zero!\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201089,G__201090) : tailrecursion.hoplon.span.call(null,G__201089,G__201090));
})();
var G__201030 = "))\n        (";
var G__201031 = (function (){var G__201091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__201092 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201091,G__201092) : tailrecursion.hoplon.span.call(null,G__201091,G__201092));
})();
var G__201032 = " ";
var G__201033 = (function (){var G__201093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201094 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201093,G__201094) : tailrecursion.hoplon.span.call(null,G__201093,G__201094));
})();
var G__201034 = "\n                      (";
var G__201035 = (function (){var G__201095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__201096 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201095,G__201096) : tailrecursion.hoplon.span.call(null,G__201095,G__201096));
})();
var G__201036 = " (";
var G__201037 = (function (){var G__201097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201098 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201097,G__201098) : tailrecursion.hoplon.span.call(null,G__201097,G__201098));
})();
var G__201038 = (function (){var G__201099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__201100 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201099,G__201100) : tailrecursion.hoplon.span.call(null,G__201099,G__201100));
})();
var G__201039 = " (";
var G__201040 = (function (){var G__201101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__201102 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201101,G__201102) : tailrecursion.hoplon.span.call(null,G__201101,G__201102));
})();
var G__201041 = " ";
var G__201042 = (function (){var G__201103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201104 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201103,G__201104) : tailrecursion.hoplon.span.call(null,G__201103,G__201104));
})();
var G__201043 = "))\n                                     (";
var G__201044 = (function (){var G__201105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201106 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201105,G__201106) : tailrecursion.hoplon.span.call(null,G__201105,G__201106));
})();
var G__201045 = (function (){var G__201107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__201108 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201107,G__201108) : tailrecursion.hoplon.span.call(null,G__201107,G__201108));
})();
var G__201046 = " (";
var G__201047 = (function (){var G__201109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__201110 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201109,G__201110) : tailrecursion.hoplon.span.call(null,G__201109,G__201110));
})();
var G__201048 = " ";
var G__201049 = (function (){var G__201111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201112 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201111,G__201112) : tailrecursion.hoplon.span.call(null,G__201111,G__201112));
})();
var G__201050 = ")))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60(G__200991,G__200992,G__200993,G__200994,G__200995,G__200996,G__200997,G__200998,G__200999,G__201000,G__201001,G__201002,G__201003,G__201004,G__201005,G__201006,G__201007,G__201008,G__201009,G__201010,G__201011,G__201012,G__201013,G__201014,G__201015,G__201016,G__201017,G__201018,G__201019,G__201020,G__201021,G__201022,G__201023,G__201024,G__201025,G__201026,G__201027,G__201028,G__201029,G__201030,G__201031,G__201032,G__201033,G__201034,G__201035,G__201036,G__201037,G__201038,G__201039,G__201040,G__201041,G__201042,G__201043,G__201044,G__201045,G__201046,G__201047,G__201048,G__201049,G__201050) : tailrecursion.hoplon.pre.call(null,G__200991,G__200992,G__200993,G__200994,G__200995,G__200996,G__200997,G__200998,G__200999,G__201000,G__201001,G__201002,G__201003,G__201004,G__201005,G__201006,G__201007,G__201008,G__201009,G__201010,G__201011,G__201012,G__201013,G__201014,G__201015,G__201016,G__201017,G__201018,G__201019,G__201020,G__201021,G__201022,G__201023,G__201024,G__201025,G__201026,G__201027,G__201028,G__201029,G__201030,G__201031,G__201032,G__201033,G__201034,G__201035,G__201036,G__201037,G__201038,G__201039,G__201040,G__201041,G__201042,G__201043,G__201044,G__201045,G__201046,G__201047,G__201048,G__201049,G__201050));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__200989,G__200990) : tailrecursion.hoplon.div.call(null,G__200989,G__200990));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__200988) : tailrecursion.hoplon.div.call(null,G__200988));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200863;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200862;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200861;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200860;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_201113 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_201114 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_201115 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_201116 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__201117 = cljs.core.PersistentArrayMap.EMPTY;
var G__201118 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In passing, Ben also cryptically comments: ",(function (){var G__201119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__201120 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["By testing the signs of the endpoints of the intervals, it is possible to break mul-interval into nine cases, only one of which requires more than two multiplications."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__201119,G__201120) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__201119,G__201120));
})()," Rewrite this procedure using Ben",(function (){var G__201121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__201122 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__201121,G__201122) : tailrecursion.hoplon.markdown.simple_node.call(null,G__201121,G__201122));
})(),"s suggestion."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__201117,G__201118) : tailrecursion.hoplon.markdown.para_node.call(null,G__201117,G__201118));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_201116;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_201115;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_201114;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_201113;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_201123 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_201124 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_201125 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_201126 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__201796 = (function (){var G__201797 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__201798 = (function (){var G__201799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__201800 = "(";
var G__201801 = (function (){var G__202130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202131 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202130,G__202131) : tailrecursion.hoplon.span.call(null,G__202130,G__202131));
})();
var G__201802 = (function (){var G__202132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202133 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202132,G__202133) : tailrecursion.hoplon.span.call(null,G__202132,G__202133));
})();
var G__201803 = " [";
var G__201804 = (function (){var G__202134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202135 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202134,G__202135) : tailrecursion.hoplon.span.call(null,G__202134,G__202135));
})();
var G__201805 = " ";
var G__201806 = (function (){var G__202136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202137 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202136,G__202137) : tailrecursion.hoplon.span.call(null,G__202136,G__202137));
})();
var G__201807 = "]\n  (";
var G__201808 = (function (){var G__202138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202139 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202138,G__202139) : tailrecursion.hoplon.span.call(null,G__202138,G__202139));
})();
var G__201809 = "(";
var G__201810 = (function (){var G__202140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202141 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202140,G__202141) : tailrecursion.hoplon.span.call(null,G__202140,G__202141));
})();
var G__201811 = "(";
var G__201812 = (function (){var G__202142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202143 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202142,G__202143) : tailrecursion.hoplon.span.call(null,G__202142,G__202143));
})();
var G__201813 = " ";
var G__201814 = (function (){var G__202144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202145 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202144,G__202145) : tailrecursion.hoplon.span.call(null,G__202144,G__202145));
})();
var G__201815 = ") ";
var G__201816 = (function (){var G__202146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202147 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202146,G__202147) : tailrecursion.hoplon.span.call(null,G__202146,G__202147));
})();
var G__201817 = ")\n        (";
var G__201818 = (function (){var G__202148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202149 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202148,G__202149) : tailrecursion.hoplon.span.call(null,G__202148,G__202149));
})();
var G__201819 = "(";
var G__201820 = (function (){var G__202150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202151 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202150,G__202151) : tailrecursion.hoplon.span.call(null,G__202150,G__202151));
})();
var G__201821 = "(";
var G__201822 = (function (){var G__202152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202153 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202152,G__202153) : tailrecursion.hoplon.span.call(null,G__202152,G__202153));
})();
var G__201823 = " ";
var G__201824 = (function (){var G__202154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202155 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202154,G__202155) : tailrecursion.hoplon.span.call(null,G__202154,G__202155));
})();
var G__201825 = ") ";
var G__201826 = (function (){var G__202156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202157 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202156,G__202157) : tailrecursion.hoplon.span.call(null,G__202156,G__202157));
})();
var G__201827 = ")\n              (";
var G__201828 = (function (){var G__202158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202159 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202158,G__202159) : tailrecursion.hoplon.span.call(null,G__202158,G__202159));
})();
var G__201829 = " (";
var G__201830 = (function (){var G__202160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202161 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202160,G__202161) : tailrecursion.hoplon.span.call(null,G__202160,G__202161));
})();
var G__201831 = "(";
var G__201832 = (function (){var G__202162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202163 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202162,G__202163) : tailrecursion.hoplon.span.call(null,G__202162,G__202163));
})();
var G__201833 = " ";
var G__201834 = (function (){var G__202164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202165 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202164,G__202165) : tailrecursion.hoplon.span.call(null,G__202164,G__202165));
})();
var G__201835 = ")\n                                (";
var G__201836 = (function (){var G__202166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202167 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202166,G__202167) : tailrecursion.hoplon.span.call(null,G__202166,G__202167));
})();
var G__201837 = " ";
var G__201838 = (function (){var G__202168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202169 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202168,G__202169) : tailrecursion.hoplon.span.call(null,G__202168,G__202169));
})();
var G__201839 = "))\n                             (";
var G__201840 = (function (){var G__202170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202171 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202170,G__202171) : tailrecursion.hoplon.span.call(null,G__202170,G__202171));
})();
var G__201841 = "(";
var G__201842 = (function (){var G__202172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202173 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202172,G__202173) : tailrecursion.hoplon.span.call(null,G__202172,G__202173));
})();
var G__201843 = " ";
var G__201844 = (function (){var G__202174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202175 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202174,G__202175) : tailrecursion.hoplon.span.call(null,G__202174,G__202175));
})();
var G__201845 = ")\n                                (";
var G__201846 = (function (){var G__202176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202177 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202176,G__202177) : tailrecursion.hoplon.span.call(null,G__202176,G__202177));
})();
var G__201847 = " ";
var G__201848 = (function (){var G__202178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202179 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202178,G__202179) : tailrecursion.hoplon.span.call(null,G__202178,G__202179));
})();
var G__201849 = ")))\n              (";
var G__201850 = (function (){var G__202180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202181 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202180,G__202181) : tailrecursion.hoplon.span.call(null,G__202180,G__202181));
})();
var G__201851 = (function (){var G__202182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202183 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202182,G__202183) : tailrecursion.hoplon.span.call(null,G__202182,G__202183));
})();
var G__201852 = " (";
var G__201853 = (function (){var G__202184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202185 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202184,G__202185) : tailrecursion.hoplon.span.call(null,G__202184,G__202185));
})();
var G__201854 = " ";
var G__201855 = (function (){var G__202186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202187 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202186,G__202187) : tailrecursion.hoplon.span.call(null,G__202186,G__202187));
})();
var G__201856 = "))\n              (";
var G__201857 = (function (){var G__202188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202189 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202188,G__202189) : tailrecursion.hoplon.span.call(null,G__202188,G__202189));
})();
var G__201858 = " (";
var G__201859 = (function (){var G__202190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202191 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202190,G__202191) : tailrecursion.hoplon.span.call(null,G__202190,G__202191));
})();
var G__201860 = "(";
var G__201861 = (function (){var G__202192 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202193 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202192,G__202193) : tailrecursion.hoplon.span.call(null,G__202192,G__202193));
})();
var G__201862 = " ";
var G__201863 = (function (){var G__202194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202195 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202194,G__202195) : tailrecursion.hoplon.span.call(null,G__202194,G__202195));
})();
var G__201864 = ")\n                                (";
var G__201865 = (function (){var G__202196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202197 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202196,G__202197) : tailrecursion.hoplon.span.call(null,G__202196,G__202197));
})();
var G__201866 = " ";
var G__201867 = (function (){var G__202198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202199 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202198,G__202199) : tailrecursion.hoplon.span.call(null,G__202198,G__202199));
})();
var G__201868 = "))\n                             (";
var G__201869 = (function (){var G__202200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202201 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202200,G__202201) : tailrecursion.hoplon.span.call(null,G__202200,G__202201));
})();
var G__201870 = "(";
var G__201871 = (function (){var G__202202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202203 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202202,G__202203) : tailrecursion.hoplon.span.call(null,G__202202,G__202203));
})();
var G__201872 = " ";
var G__201873 = (function (){var G__202204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202205 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202204,G__202205) : tailrecursion.hoplon.span.call(null,G__202204,G__202205));
})();
var G__201874 = ")\n                                (";
var G__201875 = (function (){var G__202206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202207 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202206,G__202207) : tailrecursion.hoplon.span.call(null,G__202206,G__202207));
})();
var G__201876 = " ";
var G__201877 = (function (){var G__202208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202209 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202208,G__202209) : tailrecursion.hoplon.span.call(null,G__202208,G__202209));
})();
var G__201878 = ")))\n              ";
var G__201879 = (function (){var G__202210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202211 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202210,G__202211) : tailrecursion.hoplon.span.call(null,G__202210,G__202211));
})();
var G__201880 = " \n              (";
var G__201881 = (function (){var G__202212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202213 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202212,G__202213) : tailrecursion.hoplon.span.call(null,G__202212,G__202213));
})();
var G__201882 = " (";
var G__201883 = (function (){var G__202214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202215 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202214,G__202215) : tailrecursion.hoplon.span.call(null,G__202214,G__202215));
})();
var G__201884 = "(";
var G__201885 = (function (){var G__202216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202217 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202216,G__202217) : tailrecursion.hoplon.span.call(null,G__202216,G__202217));
})();
var G__201886 = " ";
var G__201887 = (function (){var G__202218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202219 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202218,G__202219) : tailrecursion.hoplon.span.call(null,G__202218,G__202219));
})();
var G__201888 = ")\n                                (";
var G__201889 = (function (){var G__202220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202221 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202220,G__202221) : tailrecursion.hoplon.span.call(null,G__202220,G__202221));
})();
var G__201890 = " ";
var G__201891 = (function (){var G__202222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202223 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202222,G__202223) : tailrecursion.hoplon.span.call(null,G__202222,G__202223));
})();
var G__201892 = "))\n                             (";
var G__201893 = (function (){var G__202224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202225 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202224,G__202225) : tailrecursion.hoplon.span.call(null,G__202224,G__202225));
})();
var G__201894 = "(";
var G__201895 = (function (){var G__202226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202227 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202226,G__202227) : tailrecursion.hoplon.span.call(null,G__202226,G__202227));
})();
var G__201896 = " ";
var G__201897 = (function (){var G__202228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202229 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202228,G__202229) : tailrecursion.hoplon.span.call(null,G__202228,G__202229));
})();
var G__201898 = ")\n                                (";
var G__201899 = (function (){var G__202230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202231 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202230,G__202231) : tailrecursion.hoplon.span.call(null,G__202230,G__202231));
})();
var G__201900 = " ";
var G__201901 = (function (){var G__202232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202233 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202232,G__202233) : tailrecursion.hoplon.span.call(null,G__202232,G__202233));
})();
var G__201902 = "))))\n        (";
var G__201903 = (function (){var G__202234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202235 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202234,G__202235) : tailrecursion.hoplon.span.call(null,G__202234,G__202235));
})();
var G__201904 = (function (){var G__202236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202237 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202236,G__202237) : tailrecursion.hoplon.span.call(null,G__202236,G__202237));
})();
var G__201905 = " (";
var G__201906 = (function (){var G__202238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202239 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202238,G__202239) : tailrecursion.hoplon.span.call(null,G__202238,G__202239));
})();
var G__201907 = " ";
var G__201908 = (function (){var G__202240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202241 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202240,G__202241) : tailrecursion.hoplon.span.call(null,G__202240,G__202241));
})();
var G__201909 = "))\n        (";
var G__201910 = (function (){var G__202242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202243 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202242,G__202243) : tailrecursion.hoplon.span.call(null,G__202242,G__202243));
})();
var G__201911 = "(";
var G__201912 = (function (){var G__202244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202245 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202244,G__202245) : tailrecursion.hoplon.span.call(null,G__202244,G__202245));
})();
var G__201913 = "(";
var G__201914 = (function (){var G__202246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202247 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202246,G__202247) : tailrecursion.hoplon.span.call(null,G__202246,G__202247));
})();
var G__201915 = " ";
var G__201916 = (function (){var G__202248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202249 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202248,G__202249) : tailrecursion.hoplon.span.call(null,G__202248,G__202249));
})();
var G__201917 = ") ";
var G__201918 = (function (){var G__202250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202251 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202250,G__202251) : tailrecursion.hoplon.span.call(null,G__202250,G__202251));
})();
var G__201919 = ")\n              (";
var G__201920 = (function (){var G__202252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202253 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202252,G__202253) : tailrecursion.hoplon.span.call(null,G__202252,G__202253));
})();
var G__201921 = " (";
var G__201922 = (function (){var G__202254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202255 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202254,G__202255) : tailrecursion.hoplon.span.call(null,G__202254,G__202255));
})();
var G__201923 = "(";
var G__201924 = (function (){var G__202256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202257 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202256,G__202257) : tailrecursion.hoplon.span.call(null,G__202256,G__202257));
})();
var G__201925 = " ";
var G__201926 = (function (){var G__202258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202259 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202258,G__202259) : tailrecursion.hoplon.span.call(null,G__202258,G__202259));
})();
var G__201927 = ")\n                                (";
var G__201928 = (function (){var G__202260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202261 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202260,G__202261) : tailrecursion.hoplon.span.call(null,G__202260,G__202261));
})();
var G__201929 = " ";
var G__201930 = (function (){var G__202262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202263 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202262,G__202263) : tailrecursion.hoplon.span.call(null,G__202262,G__202263));
})();
var G__201931 = "))\n                             (";
var G__201932 = (function (){var G__202264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202265 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202264,G__202265) : tailrecursion.hoplon.span.call(null,G__202264,G__202265));
})();
var G__201933 = "(";
var G__201934 = (function (){var G__202266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202267 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202266,G__202267) : tailrecursion.hoplon.span.call(null,G__202266,G__202267));
})();
var G__201935 = " ";
var G__201936 = (function (){var G__202268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202269 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202268,G__202269) : tailrecursion.hoplon.span.call(null,G__202268,G__202269));
})();
var G__201937 = ")\n                                (";
var G__201938 = (function (){var G__202270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202271 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202270,G__202271) : tailrecursion.hoplon.span.call(null,G__202270,G__202271));
})();
var G__201939 = " ";
var G__201940 = (function (){var G__202272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202273 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202272,G__202273) : tailrecursion.hoplon.span.call(null,G__202272,G__202273));
})();
var G__201941 = ")))\n              (";
var G__201942 = (function (){var G__202274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202275 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202274,G__202275) : tailrecursion.hoplon.span.call(null,G__202274,G__202275));
})();
var G__201943 = (function (){var G__202276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202277 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202276,G__202277) : tailrecursion.hoplon.span.call(null,G__202276,G__202277));
})();
var G__201944 = " (";
var G__201945 = (function (){var G__202278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202279 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202278,G__202279) : tailrecursion.hoplon.span.call(null,G__202278,G__202279));
})();
var G__201946 = " ";
var G__201947 = (function (){var G__202280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202281 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202280,G__202281) : tailrecursion.hoplon.span.call(null,G__202280,G__202281));
})();
var G__201948 = "))\n              (";
var G__201949 = (function (){var G__202282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202283 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202282,G__202283) : tailrecursion.hoplon.span.call(null,G__202282,G__202283));
})();
var G__201950 = " (";
var G__201951 = (function (){var G__202284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202285 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202284,G__202285) : tailrecursion.hoplon.span.call(null,G__202284,G__202285));
})();
var G__201952 = "(";
var G__201953 = (function (){var G__202286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202287 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202286,G__202287) : tailrecursion.hoplon.span.call(null,G__202286,G__202287));
})();
var G__201954 = " ";
var G__201955 = (function (){var G__202288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202289 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202288,G__202289) : tailrecursion.hoplon.span.call(null,G__202288,G__202289));
})();
var G__201956 = ")\n                                (";
var G__201957 = (function (){var G__202290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202291 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202290,G__202291) : tailrecursion.hoplon.span.call(null,G__202290,G__202291));
})();
var G__201958 = " ";
var G__201959 = (function (){var G__202292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202293 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202292,G__202293) : tailrecursion.hoplon.span.call(null,G__202292,G__202293));
})();
var G__201960 = "))\n                             (";
var G__201961 = (function (){var G__202294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202295 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202294,G__202295) : tailrecursion.hoplon.span.call(null,G__202294,G__202295));
})();
var G__201962 = "(";
var G__201963 = (function (){var G__202296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202297 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202296,G__202297) : tailrecursion.hoplon.span.call(null,G__202296,G__202297));
})();
var G__201964 = " ";
var G__201965 = (function (){var G__202298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202299 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202298,G__202299) : tailrecursion.hoplon.span.call(null,G__202298,G__202299));
})();
var G__201966 = ")\n                                (";
var G__201967 = (function (){var G__202300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202301 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202300,G__202301) : tailrecursion.hoplon.span.call(null,G__202300,G__202301));
})();
var G__201968 = " ";
var G__201969 = (function (){var G__202302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202303 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202302,G__202303) : tailrecursion.hoplon.span.call(null,G__202302,G__202303));
})();
var G__201970 = ")))\n              ";
var G__201971 = (function (){var G__202304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202305 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202304,G__202305) : tailrecursion.hoplon.span.call(null,G__202304,G__202305));
})();
var G__201972 = " \n              (";
var G__201973 = (function (){var G__202306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202307 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202306,G__202307) : tailrecursion.hoplon.span.call(null,G__202306,G__202307));
})();
var G__201974 = " (";
var G__201975 = (function (){var G__202308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202309 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202308,G__202309) : tailrecursion.hoplon.span.call(null,G__202308,G__202309));
})();
var G__201976 = "(";
var G__201977 = (function (){var G__202310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202311 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202310,G__202311) : tailrecursion.hoplon.span.call(null,G__202310,G__202311));
})();
var G__201978 = " ";
var G__201979 = (function (){var G__202312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202313 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202312,G__202313) : tailrecursion.hoplon.span.call(null,G__202312,G__202313));
})();
var G__201980 = ")\n                                (";
var G__201981 = (function (){var G__202314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202315 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202314,G__202315) : tailrecursion.hoplon.span.call(null,G__202314,G__202315));
})();
var G__201982 = " ";
var G__201983 = (function (){var G__202316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202317 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202316,G__202317) : tailrecursion.hoplon.span.call(null,G__202316,G__202317));
})();
var G__201984 = "))\n                             (";
var G__201985 = (function (){var G__202318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202319 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202318,G__202319) : tailrecursion.hoplon.span.call(null,G__202318,G__202319));
})();
var G__201986 = "(";
var G__201987 = (function (){var G__202320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202321 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202320,G__202321) : tailrecursion.hoplon.span.call(null,G__202320,G__202321));
})();
var G__201988 = " ";
var G__201989 = (function (){var G__202322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202323 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202322,G__202323) : tailrecursion.hoplon.span.call(null,G__202322,G__202323));
})();
var G__201990 = ")\n                                (";
var G__201991 = (function (){var G__202324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202325 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202324,G__202325) : tailrecursion.hoplon.span.call(null,G__202324,G__202325));
})();
var G__201992 = " ";
var G__201993 = (function (){var G__202326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202327 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202326,G__202327) : tailrecursion.hoplon.span.call(null,G__202326,G__202327));
})();
var G__201994 = "))))\n        ";
var G__201995 = (function (){var G__202328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202329 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202328,G__202329) : tailrecursion.hoplon.span.call(null,G__202328,G__202329));
})();
var G__201996 = "\n        (";
var G__201997 = (function (){var G__202330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202331 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202330,G__202331) : tailrecursion.hoplon.span.call(null,G__202330,G__202331));
})();
var G__201998 = "(";
var G__201999 = (function (){var G__202332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202333 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202332,G__202333) : tailrecursion.hoplon.span.call(null,G__202332,G__202333));
})();
var G__202000 = "(";
var G__202001 = (function (){var G__202334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202335 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202334,G__202335) : tailrecursion.hoplon.span.call(null,G__202334,G__202335));
})();
var G__202002 = " ";
var G__202003 = (function (){var G__202336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202337 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202336,G__202337) : tailrecursion.hoplon.span.call(null,G__202336,G__202337));
})();
var G__202004 = ") ";
var G__202005 = (function (){var G__202338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202339 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202338,G__202339) : tailrecursion.hoplon.span.call(null,G__202338,G__202339));
})();
var G__202006 = ")\n              (";
var G__202007 = (function (){var G__202340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202341 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202340,G__202341) : tailrecursion.hoplon.span.call(null,G__202340,G__202341));
})();
var G__202008 = " (";
var G__202009 = (function (){var G__202342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202343 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202342,G__202343) : tailrecursion.hoplon.span.call(null,G__202342,G__202343));
})();
var G__202010 = "(";
var G__202011 = (function (){var G__202344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202345 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202344,G__202345) : tailrecursion.hoplon.span.call(null,G__202344,G__202345));
})();
var G__202012 = " ";
var G__202013 = (function (){var G__202346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202347 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202346,G__202347) : tailrecursion.hoplon.span.call(null,G__202346,G__202347));
})();
var G__202014 = ")\n                                (";
var G__202015 = (function (){var G__202348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202349 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202348,G__202349) : tailrecursion.hoplon.span.call(null,G__202348,G__202349));
})();
var G__202016 = " ";
var G__202017 = (function (){var G__202350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202351 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202350,G__202351) : tailrecursion.hoplon.span.call(null,G__202350,G__202351));
})();
var G__202018 = "))\n                             (";
var G__202019 = (function (){var G__202352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202353 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202352,G__202353) : tailrecursion.hoplon.span.call(null,G__202352,G__202353));
})();
var G__202020 = "(";
var G__202021 = (function (){var G__202354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202355 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202354,G__202355) : tailrecursion.hoplon.span.call(null,G__202354,G__202355));
})();
var G__202022 = " ";
var G__202023 = (function (){var G__202356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202357 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202356,G__202357) : tailrecursion.hoplon.span.call(null,G__202356,G__202357));
})();
var G__202024 = ")\n                                (";
var G__202025 = (function (){var G__202358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202359 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202358,G__202359) : tailrecursion.hoplon.span.call(null,G__202358,G__202359));
})();
var G__202026 = " ";
var G__202027 = (function (){var G__202360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202361 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202360,G__202361) : tailrecursion.hoplon.span.call(null,G__202360,G__202361));
})();
var G__202028 = ")))\n              (";
var G__202029 = (function (){var G__202362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202363 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202362,G__202363) : tailrecursion.hoplon.span.call(null,G__202362,G__202363));
})();
var G__202030 = (function (){var G__202364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202365 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202364,G__202365) : tailrecursion.hoplon.span.call(null,G__202364,G__202365));
})();
var G__202031 = " (";
var G__202032 = (function (){var G__202366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202367 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202366,G__202367) : tailrecursion.hoplon.span.call(null,G__202366,G__202367));
})();
var G__202033 = " ";
var G__202034 = (function (){var G__202368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202369 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202368,G__202369) : tailrecursion.hoplon.span.call(null,G__202368,G__202369));
})();
var G__202035 = "))\n              (";
var G__202036 = (function (){var G__202370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202371 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202370,G__202371) : tailrecursion.hoplon.span.call(null,G__202370,G__202371));
})();
var G__202037 = " (";
var G__202038 = (function (){var G__202372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202373 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202372,G__202373) : tailrecursion.hoplon.span.call(null,G__202372,G__202373));
})();
var G__202039 = "(";
var G__202040 = (function (){var G__202374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202375 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202374,G__202375) : tailrecursion.hoplon.span.call(null,G__202374,G__202375));
})();
var G__202041 = " ";
var G__202042 = (function (){var G__202376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202377 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202376,G__202377) : tailrecursion.hoplon.span.call(null,G__202376,G__202377));
})();
var G__202043 = ")\n                                (";
var G__202044 = (function (){var G__202378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202379 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202378,G__202379) : tailrecursion.hoplon.span.call(null,G__202378,G__202379));
})();
var G__202045 = " ";
var G__202046 = (function (){var G__202380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202381 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202380,G__202381) : tailrecursion.hoplon.span.call(null,G__202380,G__202381));
})();
var G__202047 = "))\n                             (";
var G__202048 = (function (){var G__202382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202383 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202382,G__202383) : tailrecursion.hoplon.span.call(null,G__202382,G__202383));
})();
var G__202049 = "(";
var G__202050 = (function (){var G__202384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202385 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202384,G__202385) : tailrecursion.hoplon.span.call(null,G__202384,G__202385));
})();
var G__202051 = " ";
var G__202052 = (function (){var G__202386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202387 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202386,G__202387) : tailrecursion.hoplon.span.call(null,G__202386,G__202387));
})();
var G__202053 = ")\n                                (";
var G__202054 = (function (){var G__202388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202389 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202388,G__202389) : tailrecursion.hoplon.span.call(null,G__202388,G__202389));
})();
var G__202055 = " ";
var G__202056 = (function (){var G__202390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202391 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202390,G__202391) : tailrecursion.hoplon.span.call(null,G__202390,G__202391));
})();
var G__202057 = ")))\n              ";
var G__202058 = (function (){var G__202392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202393 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202392,G__202393) : tailrecursion.hoplon.span.call(null,G__202392,G__202393));
})();
var G__202059 = " \n              (";
var G__202060 = (function (){var G__202394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202395 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202394,G__202395) : tailrecursion.hoplon.span.call(null,G__202394,G__202395));
})();
var G__202061 = "[";
var G__202062 = (function (){var G__202396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202397 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202396,G__202397) : tailrecursion.hoplon.span.call(null,G__202396,G__202397));
})();
var G__202063 = " (";
var G__202064 = (function (){var G__202398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202399 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202398,G__202399) : tailrecursion.hoplon.span.call(null,G__202398,G__202399));
})();
var G__202065 = "(";
var G__202066 = (function (){var G__202400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202401 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202400,G__202401) : tailrecursion.hoplon.span.call(null,G__202400,G__202401));
})();
var G__202067 = " ";
var G__202068 = (function (){var G__202402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202403 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202402,G__202403) : tailrecursion.hoplon.span.call(null,G__202402,G__202403));
})();
var G__202069 = ")\n                         (";
var G__202070 = (function (){var G__202404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202405 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202404,G__202405) : tailrecursion.hoplon.span.call(null,G__202404,G__202405));
})();
var G__202071 = " ";
var G__202072 = (function (){var G__202406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202407 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202406,G__202407) : tailrecursion.hoplon.span.call(null,G__202406,G__202407));
})();
var G__202073 = "))\n                    ";
var G__202074 = (function (){var G__202408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202409 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202408,G__202409) : tailrecursion.hoplon.span.call(null,G__202408,G__202409));
})();
var G__202075 = " (";
var G__202076 = (function (){var G__202410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202411 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202410,G__202411) : tailrecursion.hoplon.span.call(null,G__202410,G__202411));
})();
var G__202077 = "(";
var G__202078 = (function (){var G__202412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202413 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202412,G__202413) : tailrecursion.hoplon.span.call(null,G__202412,G__202413));
})();
var G__202079 = " ";
var G__202080 = (function (){var G__202414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202415 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202414,G__202415) : tailrecursion.hoplon.span.call(null,G__202414,G__202415));
})();
var G__202081 = ")\n                         (";
var G__202082 = (function (){var G__202416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202417 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202416,G__202417) : tailrecursion.hoplon.span.call(null,G__202416,G__202417));
})();
var G__202083 = " ";
var G__202084 = (function (){var G__202418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202419 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202418,G__202419) : tailrecursion.hoplon.span.call(null,G__202418,G__202419));
})();
var G__202085 = "))\n                    ";
var G__202086 = (function (){var G__202420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202421 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202420,G__202421) : tailrecursion.hoplon.span.call(null,G__202420,G__202421));
})();
var G__202087 = " (";
var G__202088 = (function (){var G__202422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202423 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202422,G__202423) : tailrecursion.hoplon.span.call(null,G__202422,G__202423));
})();
var G__202089 = "(";
var G__202090 = (function (){var G__202424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202425 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202424,G__202425) : tailrecursion.hoplon.span.call(null,G__202424,G__202425));
})();
var G__202091 = " ";
var G__202092 = (function (){var G__202426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202427 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202426,G__202427) : tailrecursion.hoplon.span.call(null,G__202426,G__202427));
})();
var G__202093 = ")\n                         (";
var G__202094 = (function (){var G__202428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202429 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202428,G__202429) : tailrecursion.hoplon.span.call(null,G__202428,G__202429));
})();
var G__202095 = " ";
var G__202096 = (function (){var G__202430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202431 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202430,G__202431) : tailrecursion.hoplon.span.call(null,G__202430,G__202431));
})();
var G__202097 = "))\n                    ";
var G__202098 = (function (){var G__202432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202433 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202432,G__202433) : tailrecursion.hoplon.span.call(null,G__202432,G__202433));
})();
var G__202099 = " (";
var G__202100 = (function (){var G__202434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202435 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202434,G__202435) : tailrecursion.hoplon.span.call(null,G__202434,G__202435));
})();
var G__202101 = "(";
var G__202102 = (function (){var G__202436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202437 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202436,G__202437) : tailrecursion.hoplon.span.call(null,G__202436,G__202437));
})();
var G__202103 = " ";
var G__202104 = (function (){var G__202438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202439 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202438,G__202439) : tailrecursion.hoplon.span.call(null,G__202438,G__202439));
})();
var G__202105 = ")\n                         (";
var G__202106 = (function (){var G__202440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202441 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202440,G__202441) : tailrecursion.hoplon.span.call(null,G__202440,G__202441));
})();
var G__202107 = " ";
var G__202108 = (function (){var G__202442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202443 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202442,G__202443) : tailrecursion.hoplon.span.call(null,G__202442,G__202443));
})();
var G__202109 = "))]\n                (";
var G__202110 = (function (){var G__202444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202445 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202444,G__202445) : tailrecursion.hoplon.span.call(null,G__202444,G__202445));
})();
var G__202111 = " (";
var G__202112 = (function (){var G__202446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202447 = "min ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202446,G__202447) : tailrecursion.hoplon.span.call(null,G__202446,G__202447));
})();
var G__202113 = (function (){var G__202448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202449 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202448,G__202449) : tailrecursion.hoplon.span.call(null,G__202448,G__202449));
})();
var G__202114 = " ";
var G__202115 = (function (){var G__202450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202451 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202450,G__202451) : tailrecursion.hoplon.span.call(null,G__202450,G__202451));
})();
var G__202116 = " ";
var G__202117 = (function (){var G__202452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202453 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202452,G__202453) : tailrecursion.hoplon.span.call(null,G__202452,G__202453));
})();
var G__202118 = " ";
var G__202119 = (function (){var G__202454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202455 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202454,G__202455) : tailrecursion.hoplon.span.call(null,G__202454,G__202455));
})();
var G__202120 = ")\n                               (";
var G__202121 = (function (){var G__202456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202457 = "max ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202456,G__202457) : tailrecursion.hoplon.span.call(null,G__202456,G__202457));
})();
var G__202122 = (function (){var G__202458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202459 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202458,G__202459) : tailrecursion.hoplon.span.call(null,G__202458,G__202459));
})();
var G__202123 = " ";
var G__202124 = (function (){var G__202460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202461 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202460,G__202461) : tailrecursion.hoplon.span.call(null,G__202460,G__202461));
})();
var G__202125 = " ";
var G__202126 = (function (){var G__202462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202463 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202462,G__202463) : tailrecursion.hoplon.span.call(null,G__202462,G__202463));
})();
var G__202127 = " ";
var G__202128 = (function (){var G__202464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202465 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202464,G__202465) : tailrecursion.hoplon.span.call(null,G__202464,G__202465));
})();
var G__202129 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$331 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$331(G__201799,G__201800,G__201801,G__201802,G__201803,G__201804,G__201805,G__201806,G__201807,G__201808,G__201809,G__201810,G__201811,G__201812,G__201813,G__201814,G__201815,G__201816,G__201817,G__201818,G__201819,G__201820,G__201821,G__201822,G__201823,G__201824,G__201825,G__201826,G__201827,G__201828,G__201829,G__201830,G__201831,G__201832,G__201833,G__201834,G__201835,G__201836,G__201837,G__201838,G__201839,G__201840,G__201841,G__201842,G__201843,G__201844,G__201845,G__201846,G__201847,G__201848,G__201849,G__201850,G__201851,G__201852,G__201853,G__201854,G__201855,G__201856,G__201857,G__201858,G__201859,G__201860,G__201861,G__201862,G__201863,G__201864,G__201865,G__201866,G__201867,G__201868,G__201869,G__201870,G__201871,G__201872,G__201873,G__201874,G__201875,G__201876,G__201877,G__201878,G__201879,G__201880,G__201881,G__201882,G__201883,G__201884,G__201885,G__201886,G__201887,G__201888,G__201889,G__201890,G__201891,G__201892,G__201893,G__201894,G__201895,G__201896,G__201897,G__201898,G__201899,G__201900,G__201901,G__201902,G__201903,G__201904,G__201905,G__201906,G__201907,G__201908,G__201909,G__201910,G__201911,G__201912,G__201913,G__201914,G__201915,G__201916,G__201917,G__201918,G__201919,G__201920,G__201921,G__201922,G__201923,G__201924,G__201925,G__201926,G__201927,G__201928,G__201929,G__201930,G__201931,G__201932,G__201933,G__201934,G__201935,G__201936,G__201937,G__201938,G__201939,G__201940,G__201941,G__201942,G__201943,G__201944,G__201945,G__201946,G__201947,G__201948,G__201949,G__201950,G__201951,G__201952,G__201953,G__201954,G__201955,G__201956,G__201957,G__201958,G__201959,G__201960,G__201961,G__201962,G__201963,G__201964,G__201965,G__201966,G__201967,G__201968,G__201969,G__201970,G__201971,G__201972,G__201973,G__201974,G__201975,G__201976,G__201977,G__201978,G__201979,G__201980,G__201981,G__201982,G__201983,G__201984,G__201985,G__201986,G__201987,G__201988,G__201989,G__201990,G__201991,G__201992,G__201993,G__201994,G__201995,G__201996,G__201997,G__201998,G__201999,G__202000,G__202001,G__202002,G__202003,G__202004,G__202005,G__202006,G__202007,G__202008,G__202009,G__202010,G__202011,G__202012,G__202013,G__202014,G__202015,G__202016,G__202017,G__202018,G__202019,G__202020,G__202021,G__202022,G__202023,G__202024,G__202025,G__202026,G__202027,G__202028,G__202029,G__202030,G__202031,G__202032,G__202033,G__202034,G__202035,G__202036,G__202037,G__202038,G__202039,G__202040,G__202041,G__202042,G__202043,G__202044,G__202045,G__202046,G__202047,G__202048,G__202049,G__202050,G__202051,G__202052,G__202053,G__202054,G__202055,G__202056,G__202057,G__202058,G__202059,G__202060,G__202061,G__202062,G__202063,G__202064,G__202065,G__202066,G__202067,G__202068,G__202069,G__202070,G__202071,G__202072,G__202073,G__202074,G__202075,G__202076,G__202077,G__202078,G__202079,G__202080,G__202081,G__202082,G__202083,G__202084,G__202085,G__202086,G__202087,G__202088,G__202089,G__202090,G__202091,G__202092,G__202093,G__202094,G__202095,G__202096,G__202097,G__202098,G__202099,G__202100,G__202101,G__202102,G__202103,G__202104,G__202105,G__202106,G__202107,G__202108,G__202109,G__202110,G__202111,G__202112,G__202113,G__202114,G__202115,G__202116,G__202117,G__202118,G__202119,G__202120,G__202121,G__202122,G__202123,G__202124,G__202125,G__202126,G__202127,G__202128,G__202129) : tailrecursion.hoplon.pre.call(null,G__201799,G__201800,G__201801,G__201802,G__201803,G__201804,G__201805,G__201806,G__201807,G__201808,G__201809,G__201810,G__201811,G__201812,G__201813,G__201814,G__201815,G__201816,G__201817,G__201818,G__201819,G__201820,G__201821,G__201822,G__201823,G__201824,G__201825,G__201826,G__201827,G__201828,G__201829,G__201830,G__201831,G__201832,G__201833,G__201834,G__201835,G__201836,G__201837,G__201838,G__201839,G__201840,G__201841,G__201842,G__201843,G__201844,G__201845,G__201846,G__201847,G__201848,G__201849,G__201850,G__201851,G__201852,G__201853,G__201854,G__201855,G__201856,G__201857,G__201858,G__201859,G__201860,G__201861,G__201862,G__201863,G__201864,G__201865,G__201866,G__201867,G__201868,G__201869,G__201870,G__201871,G__201872,G__201873,G__201874,G__201875,G__201876,G__201877,G__201878,G__201879,G__201880,G__201881,G__201882,G__201883,G__201884,G__201885,G__201886,G__201887,G__201888,G__201889,G__201890,G__201891,G__201892,G__201893,G__201894,G__201895,G__201896,G__201897,G__201898,G__201899,G__201900,G__201901,G__201902,G__201903,G__201904,G__201905,G__201906,G__201907,G__201908,G__201909,G__201910,G__201911,G__201912,G__201913,G__201914,G__201915,G__201916,G__201917,G__201918,G__201919,G__201920,G__201921,G__201922,G__201923,G__201924,G__201925,G__201926,G__201927,G__201928,G__201929,G__201930,G__201931,G__201932,G__201933,G__201934,G__201935,G__201936,G__201937,G__201938,G__201939,G__201940,G__201941,G__201942,G__201943,G__201944,G__201945,G__201946,G__201947,G__201948,G__201949,G__201950,G__201951,G__201952,G__201953,G__201954,G__201955,G__201956,G__201957,G__201958,G__201959,G__201960,G__201961,G__201962,G__201963,G__201964,G__201965,G__201966,G__201967,G__201968,G__201969,G__201970,G__201971,G__201972,G__201973,G__201974,G__201975,G__201976,G__201977,G__201978,G__201979,G__201980,G__201981,G__201982,G__201983,G__201984,G__201985,G__201986,G__201987,G__201988,G__201989,G__201990,G__201991,G__201992,G__201993,G__201994,G__201995,G__201996,G__201997,G__201998,G__201999,G__202000,G__202001,G__202002,G__202003,G__202004,G__202005,G__202006,G__202007,G__202008,G__202009,G__202010,G__202011,G__202012,G__202013,G__202014,G__202015,G__202016,G__202017,G__202018,G__202019,G__202020,G__202021,G__202022,G__202023,G__202024,G__202025,G__202026,G__202027,G__202028,G__202029,G__202030,G__202031,G__202032,G__202033,G__202034,G__202035,G__202036,G__202037,G__202038,G__202039,G__202040,G__202041,G__202042,G__202043,G__202044,G__202045,G__202046,G__202047,G__202048,G__202049,G__202050,G__202051,G__202052,G__202053,G__202054,G__202055,G__202056,G__202057,G__202058,G__202059,G__202060,G__202061,G__202062,G__202063,G__202064,G__202065,G__202066,G__202067,G__202068,G__202069,G__202070,G__202071,G__202072,G__202073,G__202074,G__202075,G__202076,G__202077,G__202078,G__202079,G__202080,G__202081,G__202082,G__202083,G__202084,G__202085,G__202086,G__202087,G__202088,G__202089,G__202090,G__202091,G__202092,G__202093,G__202094,G__202095,G__202096,G__202097,G__202098,G__202099,G__202100,G__202101,G__202102,G__202103,G__202104,G__202105,G__202106,G__202107,G__202108,G__202109,G__202110,G__202111,G__202112,G__202113,G__202114,G__202115,G__202116,G__202117,G__202118,G__202119,G__202120,G__202121,G__202122,G__202123,G__202124,G__202125,G__202126,G__202127,G__202128,G__202129));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__201797,G__201798) : tailrecursion.hoplon.div.call(null,G__201797,G__201798));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__201796) : tailrecursion.hoplon.div.call(null,G__201796));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_201126;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_201125;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_201124;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_201123;
}})()], 0)),"",(function (){var _STAR_references_STAR_202466 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_202467 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_202468 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_202469 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__202470 = cljs.core.PersistentArrayMap.EMPTY;
var G__202471 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["After debugging her program, Alyssa shows it to a potential user, who complains that her program solves the wrong problem. He wants a program that can deal with numbers represented as a center value and an additive tolerance; for example, he wants to work with intervals such as 3.5\u00B1 0.15 rather than ",tailrecursion.hoplon.markdown.ref_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$separator_DASH_space,null,cljs.core.cst$kw$reference_DASH_key,null], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["3.35, 3.65"], null)], 0)),". Alyssa returns to her desk and fixes this problem by supplying an alternate constructor and alternate selectors:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202470,G__202471) : tailrecursion.hoplon.markdown.para_node.call(null,G__202470,G__202471));
})(),(function (){var G__202595 = (function (){var G__202596 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__202597 = (function (){var G__202598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__202599 = "(";
var G__202600 = (function (){var G__202657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202658 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202657,G__202658) : tailrecursion.hoplon.span.call(null,G__202657,G__202658));
})();
var G__202601 = (function (){var G__202659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202660 = "make-center-width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202659,G__202660) : tailrecursion.hoplon.span.call(null,G__202659,G__202660));
})();
var G__202602 = " [";
var G__202603 = (function (){var G__202661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202662 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202661,G__202662) : tailrecursion.hoplon.span.call(null,G__202661,G__202662));
})();
var G__202604 = " ";
var G__202605 = (function (){var G__202663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202664 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202663,G__202664) : tailrecursion.hoplon.span.call(null,G__202663,G__202664));
})();
var G__202606 = "]\n  (";
var G__202607 = (function (){var G__202665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202666 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202665,G__202666) : tailrecursion.hoplon.span.call(null,G__202665,G__202666));
})();
var G__202608 = " (";
var G__202609 = (function (){var G__202667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202668 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202667,G__202668) : tailrecursion.hoplon.span.call(null,G__202667,G__202668));
})();
var G__202610 = (function (){var G__202669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202670 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202669,G__202670) : tailrecursion.hoplon.span.call(null,G__202669,G__202670));
})();
var G__202611 = " ";
var G__202612 = (function (){var G__202671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202672 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202671,G__202672) : tailrecursion.hoplon.span.call(null,G__202671,G__202672));
})();
var G__202613 = ") (";
var G__202614 = (function (){var G__202673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202674 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202673,G__202674) : tailrecursion.hoplon.span.call(null,G__202673,G__202674));
})();
var G__202615 = (function (){var G__202675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202676 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202675,G__202676) : tailrecursion.hoplon.span.call(null,G__202675,G__202676));
})();
var G__202616 = " ";
var G__202617 = (function (){var G__202677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202678 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202677,G__202678) : tailrecursion.hoplon.span.call(null,G__202677,G__202678));
})();
var G__202618 = ")))\n(";
var G__202619 = (function (){var G__202679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202680 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202679,G__202680) : tailrecursion.hoplon.span.call(null,G__202679,G__202680));
})();
var G__202620 = (function (){var G__202681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202682 = "center";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202681,G__202682) : tailrecursion.hoplon.span.call(null,G__202681,G__202682));
})();
var G__202621 = " [";
var G__202622 = (function (){var G__202683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202684 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202683,G__202684) : tailrecursion.hoplon.span.call(null,G__202683,G__202684));
})();
var G__202623 = "]\n  (";
var G__202624 = (function (){var G__202685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202686 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202685,G__202686) : tailrecursion.hoplon.span.call(null,G__202685,G__202686));
})();
var G__202625 = "(";
var G__202626 = (function (){var G__202687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202688 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202687,G__202688) : tailrecursion.hoplon.span.call(null,G__202687,G__202688));
})();
var G__202627 = "(";
var G__202628 = (function (){var G__202689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202690 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202689,G__202690) : tailrecursion.hoplon.span.call(null,G__202689,G__202690));
})();
var G__202629 = " ";
var G__202630 = (function (){var G__202691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202692 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202691,G__202692) : tailrecursion.hoplon.span.call(null,G__202691,G__202692));
})();
var G__202631 = ") (";
var G__202632 = (function (){var G__202693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202694 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202693,G__202694) : tailrecursion.hoplon.span.call(null,G__202693,G__202694));
})();
var G__202633 = " ";
var G__202634 = (function (){var G__202695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202696 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202695,G__202696) : tailrecursion.hoplon.span.call(null,G__202695,G__202696));
})();
var G__202635 = ")) ";
var G__202636 = (function (){var G__202697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202698 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202697,G__202698) : tailrecursion.hoplon.span.call(null,G__202697,G__202698));
})();
var G__202637 = "))\n(";
var G__202638 = (function (){var G__202699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202700 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202699,G__202700) : tailrecursion.hoplon.span.call(null,G__202699,G__202700));
})();
var G__202639 = (function (){var G__202701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202702 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202701,G__202702) : tailrecursion.hoplon.span.call(null,G__202701,G__202702));
})();
var G__202640 = " [";
var G__202641 = (function (){var G__202703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202704 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202703,G__202704) : tailrecursion.hoplon.span.call(null,G__202703,G__202704));
})();
var G__202642 = "]\n  (";
var G__202643 = (function (){var G__202705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202706 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202705,G__202706) : tailrecursion.hoplon.span.call(null,G__202705,G__202706));
})();
var G__202644 = "(";
var G__202645 = (function (){var G__202707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202708 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202707,G__202708) : tailrecursion.hoplon.span.call(null,G__202707,G__202708));
})();
var G__202646 = "(";
var G__202647 = (function (){var G__202709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202710 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202709,G__202710) : tailrecursion.hoplon.span.call(null,G__202709,G__202710));
})();
var G__202648 = " ";
var G__202649 = (function (){var G__202711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202712 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202711,G__202712) : tailrecursion.hoplon.span.call(null,G__202711,G__202712));
})();
var G__202650 = ") (";
var G__202651 = (function (){var G__202713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202714 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202713,G__202714) : tailrecursion.hoplon.span.call(null,G__202713,G__202714));
})();
var G__202652 = " ";
var G__202653 = (function (){var G__202715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202716 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202715,G__202716) : tailrecursion.hoplon.span.call(null,G__202715,G__202716));
})();
var G__202654 = ")) ";
var G__202655 = (function (){var G__202717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202718 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202717,G__202718) : tailrecursion.hoplon.span.call(null,G__202717,G__202718));
})();
var G__202656 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59(G__202598,G__202599,G__202600,G__202601,G__202602,G__202603,G__202604,G__202605,G__202606,G__202607,G__202608,G__202609,G__202610,G__202611,G__202612,G__202613,G__202614,G__202615,G__202616,G__202617,G__202618,G__202619,G__202620,G__202621,G__202622,G__202623,G__202624,G__202625,G__202626,G__202627,G__202628,G__202629,G__202630,G__202631,G__202632,G__202633,G__202634,G__202635,G__202636,G__202637,G__202638,G__202639,G__202640,G__202641,G__202642,G__202643,G__202644,G__202645,G__202646,G__202647,G__202648,G__202649,G__202650,G__202651,G__202652,G__202653,G__202654,G__202655,G__202656) : tailrecursion.hoplon.pre.call(null,G__202598,G__202599,G__202600,G__202601,G__202602,G__202603,G__202604,G__202605,G__202606,G__202607,G__202608,G__202609,G__202610,G__202611,G__202612,G__202613,G__202614,G__202615,G__202616,G__202617,G__202618,G__202619,G__202620,G__202621,G__202622,G__202623,G__202624,G__202625,G__202626,G__202627,G__202628,G__202629,G__202630,G__202631,G__202632,G__202633,G__202634,G__202635,G__202636,G__202637,G__202638,G__202639,G__202640,G__202641,G__202642,G__202643,G__202644,G__202645,G__202646,G__202647,G__202648,G__202649,G__202650,G__202651,G__202652,G__202653,G__202654,G__202655,G__202656));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__202596,G__202597) : tailrecursion.hoplon.div.call(null,G__202596,G__202597));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__202595) : tailrecursion.hoplon.div.call(null,G__202595));
})(),(function (){var G__202719 = cljs.core.PersistentArrayMap.EMPTY;
var G__202720 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Unfortunately, most of Alyssa",(function (){var G__202721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__202722 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__202721,G__202722) : tailrecursion.hoplon.markdown.simple_node.call(null,G__202721,G__202722));
})(),"s users are engineers. Real engineering situations usually involve measurements with only a small uncertainty, measured as the ratio of the width of the interval to the midpoint of the interval. Engineers usually specify percentage tolerances on the parameters of devices, as in the resistor specifications given earlier."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202719,G__202720) : tailrecursion.hoplon.markdown.para_node.call(null,G__202719,G__202720));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_202469;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_202468;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_202467;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_202466;
}})()], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_202723 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_202724 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_202725 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_202726 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__202727 = cljs.core.PersistentArrayMap.EMPTY;
var G__202728 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a constructor ",(function (){var G__202729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-center-percent"], null);
var G__202730 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__202729,G__202730) : tailrecursion.hoplon.markdown.code_node.call(null,G__202729,G__202730));
})()," that takes a center and a percentage tolerance and produces the desired interval. You must also define a selector ",(function (){var G__202731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"percent"], null);
var G__202732 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__202731,G__202732) : tailrecursion.hoplon.markdown.code_node.call(null,G__202731,G__202732));
})()," that produces the percentage tolerance for a given interval. The ",(function (){var G__202733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"center"], null);
var G__202734 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__202733,G__202734) : tailrecursion.hoplon.markdown.code_node.call(null,G__202733,G__202734));
})()," selector is the same as the one above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202727,G__202728) : tailrecursion.hoplon.markdown.para_node.call(null,G__202727,G__202728));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_202726;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_202725;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_202724;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_202723;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_202735 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_202736 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_202737 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_202738 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__202834 = (function (){var G__202835 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__202836 = (function (){var G__202837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__202838 = "(";
var G__202839 = (function (){var G__202882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202883 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202882,G__202883) : tailrecursion.hoplon.span.call(null,G__202882,G__202883));
})();
var G__202840 = (function (){var G__202884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202885 = "make-center-percent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202884,G__202885) : tailrecursion.hoplon.span.call(null,G__202884,G__202885));
})();
var G__202841 = " [";
var G__202842 = (function (){var G__202886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202887 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202886,G__202887) : tailrecursion.hoplon.span.call(null,G__202886,G__202887));
})();
var G__202843 = " ";
var G__202844 = (function (){var G__202888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202889 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202888,G__202889) : tailrecursion.hoplon.span.call(null,G__202888,G__202889));
})();
var G__202845 = "]\n  (";
var G__202846 = (function (){var G__202890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202891 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202890,G__202891) : tailrecursion.hoplon.span.call(null,G__202890,G__202891));
})();
var G__202847 = "[";
var G__202848 = (function (){var G__202892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202893 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202892,G__202893) : tailrecursion.hoplon.span.call(null,G__202892,G__202893));
})();
var G__202849 = " (";
var G__202850 = (function (){var G__202894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202895 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202894,G__202895) : tailrecursion.hoplon.span.call(null,G__202894,G__202895));
})();
var G__202851 = (function (){var G__202896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202897 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202896,G__202897) : tailrecursion.hoplon.span.call(null,G__202896,G__202897));
})();
var G__202852 = " ";
var G__202853 = (function (){var G__202898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202899 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202898,G__202899) : tailrecursion.hoplon.span.call(null,G__202898,G__202899));
})();
var G__202854 = ")]\n    (";
var G__202855 = (function (){var G__202900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202901 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202900,G__202901) : tailrecursion.hoplon.span.call(null,G__202900,G__202901));
})();
var G__202856 = " (";
var G__202857 = (function (){var G__202902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202903 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202902,G__202903) : tailrecursion.hoplon.span.call(null,G__202902,G__202903));
})();
var G__202858 = (function (){var G__202904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202905 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202904,G__202905) : tailrecursion.hoplon.span.call(null,G__202904,G__202905));
})();
var G__202859 = " ";
var G__202860 = (function (){var G__202906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202907 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202906,G__202907) : tailrecursion.hoplon.span.call(null,G__202906,G__202907));
})();
var G__202861 = ") (";
var G__202862 = (function (){var G__202908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202909 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202908,G__202909) : tailrecursion.hoplon.span.call(null,G__202908,G__202909));
})();
var G__202863 = (function (){var G__202910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202911 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202910,G__202911) : tailrecursion.hoplon.span.call(null,G__202910,G__202911));
})();
var G__202864 = " ";
var G__202865 = (function (){var G__202912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202913 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202912,G__202913) : tailrecursion.hoplon.span.call(null,G__202912,G__202913));
})();
var G__202866 = "))))\n(";
var G__202867 = (function (){var G__202914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202915 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202914,G__202915) : tailrecursion.hoplon.span.call(null,G__202914,G__202915));
})();
var G__202868 = (function (){var G__202916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202917 = "percent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202916,G__202917) : tailrecursion.hoplon.span.call(null,G__202916,G__202917));
})();
var G__202869 = " [";
var G__202870 = (function (){var G__202918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202919 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202918,G__202919) : tailrecursion.hoplon.span.call(null,G__202918,G__202919));
})();
var G__202871 = "]\n  (";
var G__202872 = (function (){var G__202920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202921 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202920,G__202921) : tailrecursion.hoplon.span.call(null,G__202920,G__202921));
})();
var G__202873 = "(";
var G__202874 = (function (){var G__202922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202923 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202922,G__202923) : tailrecursion.hoplon.span.call(null,G__202922,G__202923));
})();
var G__202875 = " ";
var G__202876 = (function (){var G__202924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202925 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202924,G__202925) : tailrecursion.hoplon.span.call(null,G__202924,G__202925));
})();
var G__202877 = ") (";
var G__202878 = (function (){var G__202926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202927 = "center";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202926,G__202927) : tailrecursion.hoplon.span.call(null,G__202926,G__202927));
})();
var G__202879 = " ";
var G__202880 = (function (){var G__202928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202929 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202928,G__202929) : tailrecursion.hoplon.span.call(null,G__202928,G__202929));
})();
var G__202881 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45(G__202837,G__202838,G__202839,G__202840,G__202841,G__202842,G__202843,G__202844,G__202845,G__202846,G__202847,G__202848,G__202849,G__202850,G__202851,G__202852,G__202853,G__202854,G__202855,G__202856,G__202857,G__202858,G__202859,G__202860,G__202861,G__202862,G__202863,G__202864,G__202865,G__202866,G__202867,G__202868,G__202869,G__202870,G__202871,G__202872,G__202873,G__202874,G__202875,G__202876,G__202877,G__202878,G__202879,G__202880,G__202881) : tailrecursion.hoplon.pre.call(null,G__202837,G__202838,G__202839,G__202840,G__202841,G__202842,G__202843,G__202844,G__202845,G__202846,G__202847,G__202848,G__202849,G__202850,G__202851,G__202852,G__202853,G__202854,G__202855,G__202856,G__202857,G__202858,G__202859,G__202860,G__202861,G__202862,G__202863,G__202864,G__202865,G__202866,G__202867,G__202868,G__202869,G__202870,G__202871,G__202872,G__202873,G__202874,G__202875,G__202876,G__202877,G__202878,G__202879,G__202880,G__202881));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__202835,G__202836) : tailrecursion.hoplon.div.call(null,G__202835,G__202836));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__202834) : tailrecursion.hoplon.div.call(null,G__202834));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_202738;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_202737;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_202736;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_202735;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_202930 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_202931 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_202932 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_202933 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__202934 = cljs.core.PersistentArrayMap.EMPTY;
var G__202935 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Show that under the assumption of small percentage tolerances there is a simple formula for the approximate percentage tolerance of the product of two intervals in terms of the tolerances of the factors. You may simplify the problem by assuming that all numbers are positive."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202934,G__202935) : tailrecursion.hoplon.markdown.para_node.call(null,G__202934,G__202935));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_202933;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_202932;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_202931;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_202930;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_202936 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_202937 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_202938 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_202939 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__202940 = cljs.core.PersistentArrayMap.EMPTY;
var G__202941 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__202942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__202943 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__202942,G__202943) : tailrecursion.hoplon.markdown.simple_node.call(null,G__202942,G__202943));
})(),"s take two intervals, \\((a-\\epsilon,a+\\epsilon)\\) and \\((b-\\delta,b+\\delta)\\), where \\(a,b\\) and \\(\\epsilon,\\delta\\) are positive numbers and \\(\\epsilon,\\delta\\) are small. Then, the product is given by,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202940,G__202941) : tailrecursion.hoplon.markdown.para_node.call(null,G__202940,G__202941));
})(),(function (){var G__202944 = cljs.core.PersistentArrayMap.EMPTY;
var G__202945 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}&\\left((a-\\epsilon)(b-\\delta),(a+\\epsilon)(b+\\delta)\\right) \\\\=&\\left(ab-a\\delta-b\\epsilon+\\epsilon\\delta,ab+a\\delta+b\\epsilon+\\epsilon\\delta\\right) \\\\=&\\left((ab+\\epsilon\\delta)-(a\\delta+b\\epsilon),(ab+\\epsilon\\delta)+(a\\delta+b\\epsilon)\\right)\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202944,G__202945) : tailrecursion.hoplon.markdown.para_node.call(null,G__202944,G__202945));
})(),(function (){var G__202946 = cljs.core.PersistentArrayMap.EMPTY;
var G__202947 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, we see that the width in question is, \\(a\\delta+b\\epsilon\\), and the center is \\(ab+\\epsilon\\delta\\). Hence, the percentage tolerance is,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202946,G__202947) : tailrecursion.hoplon.markdown.para_node.call(null,G__202946,G__202947));
})(),(function (){var G__202948 = cljs.core.PersistentArrayMap.EMPTY;
var G__202949 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{a\\delta+b\\epsilon}{ab+\\epsilon\\delta}\\approx& \\frac{a\\delta +b\\epsilon}{ab+0} \\\\=&\\frac{a\\delta+b\\epsilon}{ab} \\\\=&\\frac{\\delta}{b}+\\frac{\\epsilon}{a}\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202948,G__202949) : tailrecursion.hoplon.markdown.para_node.call(null,G__202948,G__202949));
})(),(function (){var G__202950 = cljs.core.PersistentArrayMap.EMPTY;
var G__202951 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Which is the sum of the respective percentages."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202950,G__202951) : tailrecursion.hoplon.markdown.para_node.call(null,G__202950,G__202951));
})(),(function (){var G__202952 = cljs.core.PersistentArrayMap.EMPTY;
var G__202953 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, as long as the percentages are small enough for their squares to become negligible, the percentage tolerance of a product of intervals is sum of the percentage tolerances of the two respective intervals."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202952,G__202953) : tailrecursion.hoplon.markdown.para_node.call(null,G__202952,G__202953));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_202939;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_202938;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_202937;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_202936;
}})()], 0)),"",(function (){var _STAR_references_STAR_202954 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_202955 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_202956 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_202957 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__202958 = cljs.core.PersistentArrayMap.EMPTY;
var G__202959 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["After considerable work, Alyssa P. Hacker delivers her finished system. Several years later, after she has forgotten all about it, she gets a frenzied call from an irate user, Lem E. Tweakit. It seems that Lem has noticed that the formula for parallel resistors can be written in two algebraically equivalent ways:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202958,G__202959) : tailrecursion.hoplon.markdown.para_node.call(null,G__202958,G__202959));
})(),(function (){var G__202960 = cljs.core.PersistentArrayMap.EMPTY;
var G__202961 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{R_1R_2}{R_1+R_2}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202960,G__202961) : tailrecursion.hoplon.markdown.para_node.call(null,G__202960,G__202961));
})(),(function (){var G__202962 = cljs.core.PersistentArrayMap.EMPTY;
var G__202963 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202962,G__202963) : tailrecursion.hoplon.markdown.para_node.call(null,G__202962,G__202963));
})(),(function (){var G__202964 = cljs.core.PersistentArrayMap.EMPTY;
var G__202965 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{1}{1/R_1+1/R_2}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202964,G__202965) : tailrecursion.hoplon.markdown.para_node.call(null,G__202964,G__202965));
})(),(function (){var G__202966 = cljs.core.PersistentArrayMap.EMPTY;
var G__202967 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["He has written the following two programs, each of which computes the parallel-resistors formula differently:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202966,G__202967) : tailrecursion.hoplon.markdown.para_node.call(null,G__202966,G__202967));
})(),(function (){var G__203086 = (function (){var G__203087 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__203088 = (function (){var G__203089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__203090 = "(";
var G__203091 = (function (){var G__203147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__203148 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203147,G__203148) : tailrecursion.hoplon.span.call(null,G__203147,G__203148));
})();
var G__203092 = (function (){var G__203149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203150 = "par1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203149,G__203150) : tailrecursion.hoplon.span.call(null,G__203149,G__203150));
})();
var G__203093 = " [";
var G__203094 = (function (){var G__203151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203152 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203151,G__203152) : tailrecursion.hoplon.span.call(null,G__203151,G__203152));
})();
var G__203095 = " ";
var G__203096 = (function (){var G__203153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203154 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203153,G__203154) : tailrecursion.hoplon.span.call(null,G__203153,G__203154));
})();
var G__203097 = "]\n  (";
var G__203098 = (function (){var G__203155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203156 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203155,G__203156) : tailrecursion.hoplon.span.call(null,G__203155,G__203156));
})();
var G__203099 = " (";
var G__203100 = (function (){var G__203157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203158 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203157,G__203158) : tailrecursion.hoplon.span.call(null,G__203157,G__203158));
})();
var G__203101 = " ";
var G__203102 = (function (){var G__203159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203160 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203159,G__203160) : tailrecursion.hoplon.span.call(null,G__203159,G__203160));
})();
var G__203103 = " ";
var G__203104 = (function (){var G__203161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203162 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203161,G__203162) : tailrecursion.hoplon.span.call(null,G__203161,G__203162));
})();
var G__203105 = ")\n                (";
var G__203106 = (function (){var G__203163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203164 = "add-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203163,G__203164) : tailrecursion.hoplon.span.call(null,G__203163,G__203164));
})();
var G__203107 = " ";
var G__203108 = (function (){var G__203165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203166 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203165,G__203166) : tailrecursion.hoplon.span.call(null,G__203165,G__203166));
})();
var G__203109 = " ";
var G__203110 = (function (){var G__203167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203168 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203167,G__203168) : tailrecursion.hoplon.span.call(null,G__203167,G__203168));
})();
var G__203111 = ")))\n(";
var G__203112 = (function (){var G__203169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__203170 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203169,G__203170) : tailrecursion.hoplon.span.call(null,G__203169,G__203170));
})();
var G__203113 = (function (){var G__203171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203172 = "par2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203171,G__203172) : tailrecursion.hoplon.span.call(null,G__203171,G__203172));
})();
var G__203114 = " [";
var G__203115 = (function (){var G__203173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203174 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203173,G__203174) : tailrecursion.hoplon.span.call(null,G__203173,G__203174));
})();
var G__203116 = " ";
var G__203117 = (function (){var G__203175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203176 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203175,G__203176) : tailrecursion.hoplon.span.call(null,G__203175,G__203176));
})();
var G__203118 = "]\n  (";
var G__203119 = (function (){var G__203177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__203178 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203177,G__203178) : tailrecursion.hoplon.span.call(null,G__203177,G__203178));
})();
var G__203120 = "[";
var G__203121 = (function (){var G__203179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203180 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203179,G__203180) : tailrecursion.hoplon.span.call(null,G__203179,G__203180));
})();
var G__203122 = " (";
var G__203123 = (function (){var G__203181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203182 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203181,G__203182) : tailrecursion.hoplon.span.call(null,G__203181,G__203182));
})();
var G__203124 = " ";
var G__203125 = (function (){var G__203183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__203184 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203183,G__203184) : tailrecursion.hoplon.span.call(null,G__203183,G__203184));
})();
var G__203126 = " ";
var G__203127 = (function (){var G__203185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__203186 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203185,G__203186) : tailrecursion.hoplon.span.call(null,G__203185,G__203186));
})();
var G__203128 = ")]\n    (";
var G__203129 = (function (){var G__203187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203188 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203187,G__203188) : tailrecursion.hoplon.span.call(null,G__203187,G__203188));
})();
var G__203130 = " ";
var G__203131 = (function (){var G__203189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203190 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203189,G__203190) : tailrecursion.hoplon.span.call(null,G__203189,G__203190));
})();
var G__203132 = "\n                  (";
var G__203133 = (function (){var G__203191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203192 = "add-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203191,G__203192) : tailrecursion.hoplon.span.call(null,G__203191,G__203192));
})();
var G__203134 = " (";
var G__203135 = (function (){var G__203193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203194 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203193,G__203194) : tailrecursion.hoplon.span.call(null,G__203193,G__203194));
})();
var G__203136 = " ";
var G__203137 = (function (){var G__203195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203196 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203195,G__203196) : tailrecursion.hoplon.span.call(null,G__203195,G__203196));
})();
var G__203138 = " ";
var G__203139 = (function (){var G__203197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203198 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203197,G__203198) : tailrecursion.hoplon.span.call(null,G__203197,G__203198));
})();
var G__203140 = ")\n                                (";
var G__203141 = (function (){var G__203199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203200 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203199,G__203200) : tailrecursion.hoplon.span.call(null,G__203199,G__203200));
})();
var G__203142 = " ";
var G__203143 = (function (){var G__203201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203202 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203201,G__203202) : tailrecursion.hoplon.span.call(null,G__203201,G__203202));
})();
var G__203144 = " ";
var G__203145 = (function (){var G__203203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203204 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203203,G__203204) : tailrecursion.hoplon.span.call(null,G__203203,G__203204));
})();
var G__203146 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__203089,G__203090,G__203091,G__203092,G__203093,G__203094,G__203095,G__203096,G__203097,G__203098,G__203099,G__203100,G__203101,G__203102,G__203103,G__203104,G__203105,G__203106,G__203107,G__203108,G__203109,G__203110,G__203111,G__203112,G__203113,G__203114,G__203115,G__203116,G__203117,G__203118,G__203119,G__203120,G__203121,G__203122,G__203123,G__203124,G__203125,G__203126,G__203127,G__203128,G__203129,G__203130,G__203131,G__203132,G__203133,G__203134,G__203135,G__203136,G__203137,G__203138,G__203139,G__203140,G__203141,G__203142,G__203143,G__203144,G__203145,G__203146) : tailrecursion.hoplon.pre.call(null,G__203089,G__203090,G__203091,G__203092,G__203093,G__203094,G__203095,G__203096,G__203097,G__203098,G__203099,G__203100,G__203101,G__203102,G__203103,G__203104,G__203105,G__203106,G__203107,G__203108,G__203109,G__203110,G__203111,G__203112,G__203113,G__203114,G__203115,G__203116,G__203117,G__203118,G__203119,G__203120,G__203121,G__203122,G__203123,G__203124,G__203125,G__203126,G__203127,G__203128,G__203129,G__203130,G__203131,G__203132,G__203133,G__203134,G__203135,G__203136,G__203137,G__203138,G__203139,G__203140,G__203141,G__203142,G__203143,G__203144,G__203145,G__203146));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__203087,G__203088) : tailrecursion.hoplon.div.call(null,G__203087,G__203088));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__203086) : tailrecursion.hoplon.div.call(null,G__203086));
})(),(function (){var G__203205 = cljs.core.PersistentArrayMap.EMPTY;
var G__203206 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lem complains that Alyssa",(function (){var G__203207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__203208 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__203207,G__203208) : tailrecursion.hoplon.markdown.simple_node.call(null,G__203207,G__203208));
})(),"s program gives different answers for the two ways of computing. This is a serious complaint."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__203205,G__203206) : tailrecursion.hoplon.markdown.para_node.call(null,G__203205,G__203206));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_202957;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_202956;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_202955;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_202954;
}})()], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_203209 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_203210 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_203211 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_203212 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__203213 = cljs.core.PersistentArrayMap.EMPTY;
var G__203214 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Demonstrate that Lem is right. Investigate the behavior of the system on a variety of arithmetic expressions. Make some intervals A and B, and use them in computing the expressions A/A and A/B. You will get the most insight by using intervals whose width is a small percentage of the center value. Examine the results of the computation in center-percent form (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/ex/12/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.12"], null)], 0)),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__203213,G__203214) : tailrecursion.hoplon.markdown.para_node.call(null,G__203213,G__203214));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_203212;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_203211;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_203210;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_203209;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_203215 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_203216 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_203217 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_203218 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__203219 = cljs.core.PersistentArrayMap.EMPTY;
var G__203220 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If we define \\(A=(29.9,30.1)\\), and \\(B=(49.9,51.1)\\), what happens when we divide \\(A\\) by itself? \\(B\\) by itself? \\(A\\) by \\(B\\)? \\(B\\) by \\(A\\)?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__203219,G__203220) : tailrecursion.hoplon.markdown.para_node.call(null,G__203219,G__203220));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_203218;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_203217;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_203216;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_203215;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_203221 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_203222 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_203223 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_203224 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__203225 = cljs.core.PersistentArrayMap.EMPTY;
var G__203226 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Eva Lu Ator, another user, has also noticed the different intervals computed by different but algebraically equivalent expressions. She says that a formula to compute with intervals using Alyssa",(function (){var G__203227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__203228 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__203227,G__203228) : tailrecursion.hoplon.markdown.simple_node.call(null,G__203227,G__203228));
})(),"s system will produce tighter error bounds if it can be written in such a form that no variable that represents an uncertain number is repeated. Thus, she says, ",(function (){var G__203229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"par2"], null);
var G__203230 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__203229,G__203230) : tailrecursion.hoplon.markdown.code_node.call(null,G__203229,G__203230));
})()," is a ",(function (){var G__203231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__203232 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["better"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__203231,G__203232) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__203231,G__203232));
})()," program for parallel resistances than ",(function (){var G__203233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"par1"], null);
var G__203234 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__203233,G__203234) : tailrecursion.hoplon.markdown.code_node.call(null,G__203233,G__203234));
})(),". Is she right? Why?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__203225,G__203226) : tailrecursion.hoplon.markdown.para_node.call(null,G__203225,G__203226));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_203224;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_203223;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_203222;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_203221;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_203235 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_203236 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_203237 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_203238 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__203239 = cljs.core.PersistentArrayMap.EMPTY;
var G__203240 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["She is correct. The reason is, if we write an equation, \\(\\frac{x+1}{x}\\), for instance, the assumption is that both \\(x\\)s in the equation have the same value. If we do this with the interval arithmetic we",(function (){var G__203241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__203242 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__203241,G__203242) : tailrecursion.hoplon.markdown.simple_node.call(null,G__203241,G__203242));
})(),"ve defined here, that is not necessarily true. ie, if we define \\(A=(2,4)\\) then compute the above formula using our interval arithmetic assuming that \\(x\\) is in the interval \\(A\\), we get"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__203239,G__203240) : tailrecursion.hoplon.markdown.para_node.call(null,G__203239,G__203240));
})(),(function (){var G__203243 = cljs.core.PersistentArrayMap.EMPTY;
var G__203244 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{A+1}{A}=&\\frac{(3,5)}{(2.4)} \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__203243,G__203244) : tailrecursion.hoplon.markdown.para_node.call(null,G__203243,G__203244));
})(),(function (){var G__203245 = cljs.core.PersistentArrayMap.EMPTY;
var G__203246 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["which is another way of saying, ",(function (){var G__203247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__203248 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the interval obtained by taking any number between 3 and 5 and dividing it by another number between 2 and 4."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__203247,G__203248) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__203247,G__203248));
})()," But then, 3/4, for instance, would be in that interval by letting the numerator be 3 and the denominator be 4. But the problem is, if the numerator is to be 4, then \\(x=2\\), which means the denominator would be 2 as well."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__203245,G__203246) : tailrecursion.hoplon.markdown.para_node.call(null,G__203245,G__203246));
})(),(function (){var G__203249 = cljs.core.PersistentArrayMap.EMPTY;
var G__203250 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The issue we",(function (){var G__203251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__203252 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__203251,G__203252) : tailrecursion.hoplon.markdown.simple_node.call(null,G__203251,G__203252));
})(),"re arriving at is that different instances of the same variable can have different values (if we use our current system of interval arithmetic)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__203249,G__203250) : tailrecursion.hoplon.markdown.para_node.call(null,G__203249,G__203250));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_203238;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_203237;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_203236;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_203235;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_203253 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_203254 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_203255 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_203256 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__203257 = cljs.core.PersistentArrayMap.EMPTY;
var G__203258 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Explain, in general, why equivalent algebraic expressions may lead to different answers. Can you devise an interval-arithmetic package that does not have this shortcoming, or is this task impossible? (Warning: This problem is very difficult.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__203257,G__203258) : tailrecursion.hoplon.markdown.para_node.call(null,G__203257,G__203258));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_203256;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_203255;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_203254;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_203253;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_203259 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_203260 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_203261 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_203262 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__203263 = cljs.core.PersistentArrayMap.EMPTY;
var G__203264 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I guess this would depend on what we mean by ",(function (){var G__203265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__203266 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["equivalent"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__203265,G__203266) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__203265,G__203266));
})(),". Already due to what we",(function (){var G__203267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__203268 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__203267,G__203268) : tailrecursion.hoplon.markdown.simple_node.call(null,G__203267,G__203268));
})(),"ve seen in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/15/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.15"], null)], 0)),", very strange things happen algebraically. For instance, our interval arithmetic does not have the distributive property. To show this, just observe that the distributive property states, \\(A(B+C)=AB+AC\\), but since \\(A\\) appears twice on the right hand side and there are no repeated variables on the left, by the previous exercise we know that the left hand side must have ",(function (){var G__203269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__203270 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tighter error bounds"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__203269,G__203270) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__203269,G__203270));
})(),". Hence the two sides cannot be equal unless there is no error in \\(A\\) (in which case \\(A\\) is not an interval, but a number)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__203263,G__203264) : tailrecursion.hoplon.markdown.para_node.call(null,G__203263,G__203264));
})(),(function (){var G__203271 = cljs.core.PersistentArrayMap.EMPTY;
var G__203272 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, I",(function (){var G__203273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__203274 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__203273,G__203274) : tailrecursion.hoplon.markdown.simple_node.call(null,G__203273,G__203274));
})(),"m not too sure if this is possible, but when would we use this? If it is an engineering (or scientific) concern, then we are not really interested in intervals, but rather statistical probabilities, in which case we can use some theorems about error propagation to achieve our goal."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__203271,G__203272) : tailrecursion.hoplon.markdown.para_node.call(null,G__203271,G__203272));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_203262;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_203261;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_203260;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_203259;
}})()], 0))], 0))], 0));
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$22(G__193974,G__193975,G__193976,G__193977,G__193978,G__193979,G__193980,G__193981,G__193982,G__193983,G__193984,G__193985,G__193986,G__193987,G__193988,G__193989,G__193990,G__193991,G__193992,G__193993,G__193994,G__193995) : tailrecursion.hoplon.div.call(null,G__193974,G__193975,G__193976,G__193977,G__193978,G__193979,G__193980,G__193981,G__193982,G__193983,G__193984,G__193985,G__193986,G__193987,G__193988,G__193989,G__193990,G__193991,G__193992,G__193993,G__193994,G__193995));
};
var book$sicp$texts$ch2sect1$content = function (var_args){
var args__8262__auto__ = null;
if (arguments.length > 0) {
var G__203275__i = 0, G__203275__a = new Array(arguments.length -  0);
while (G__203275__i < G__203275__a.length) {G__203275__a[G__203275__i] = arguments[G__203275__i + 0]; ++G__203275__i;}
  args__8262__auto__ = new cljs.core.IndexedSeq(G__203275__a,0);
} 
return book$sicp$texts$ch2sect1$content__delegate.call(this,args__8262__auto__);};
book$sicp$texts$ch2sect1$content.cljs$lang$maxFixedArity = 0;
book$sicp$texts$ch2sect1$content.cljs$lang$applyTo = (function (arglist__203276){
var args__8262__auto__ = cljs.core.seq(arglist__203276);
return book$sicp$texts$ch2sect1$content__delegate(args__8262__auto__);
});
book$sicp$texts$ch2sect1$content.cljs$core$IFn$_invoke$arity$variadic = book$sicp$texts$ch2sect1$content__delegate;
return book$sicp$texts$ch2sect1$content;
})()
;

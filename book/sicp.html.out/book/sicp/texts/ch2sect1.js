// Compiled by ClojureScript 1.7.48 {:static-fns true, :optimize-constants true}
goog.provide('book.sicp.texts.ch2sect1');
goog.require('cljs.core');
goog.require('tailrecursion.hoplon.markdown');
goog.require('book.sicp.book_data');
goog.require('tailrecursion.hoplon');
goog.require('tailrecursion.javelin');
/**
 * @param {...*} var_args
 */
book.sicp.texts.ch2sect1.content = (function() { 
var book$sicp$texts$ch2sect1$content__delegate = function (args__8262__auto__){
var vec__170649 = tailrecursion.hoplon.parse_args(args__8262__auto__);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__170649,(0),null);
var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__170649,(1),null);
var G__170650 = cljs.core.PersistentArrayMap.EMPTY;
var G__170651 = book.sicp.book_data.sect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Introduction to Data Abstraction"], null),(function (){var _STAR_references_STAR_170672 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_170673 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_170674 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_170675 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__170676 = cljs.core.PersistentArrayMap.EMPTY;
var G__170677 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/1/sub/8/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.1.8"], null)], 0)),", we noted that a procedure used as an element in creating a more complex procedure could be regarded not only as a collection of particular operations but also as a procedural abstraction. That is, the details of how the procedure was implemented could be suppressed, and the particular procedure itself could be replaced by any other procedure with the same overall behavior. In other words, we could make an abstraction that would separate the way the procedure would be used from the details of how the procedure would be implemented in terms of more primitive procedures. The analogous notion for compound data is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data abstraction"], null)], 0)),". Data abstraction is a methodology that enables us to isolate how a compound data object is used from the details of how it is constructed from more primitive data objects."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__170676,G__170677) : tailrecursion.hoplon.markdown.para_node.call(null,G__170676,G__170677));
})(),(function (){var G__170678 = cljs.core.PersistentArrayMap.EMPTY;
var G__170679 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The basic idea of data abstraction is to structure the programs that are to use compound data objects so that they operate on ",(function (){var G__170680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__170681 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstract data."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__170680,G__170681) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__170680,G__170681));
})()," That is, our programs should use data in such a way as to make no assumptions about the data that are not strictly necessary for performing the task at hand. At the same time, a ",(function (){var G__170682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__170683 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["concrete"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__170682,G__170683) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__170682,G__170683));
})()," data representation is defined independent of the programs that use the data. The interface between these two parts of our system will be a set of procedures, called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selectors"], null)], 0))," and ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["constructors"], null)], 0)),", that implement the abstract data in terms of the concrete representation. To illustrate this technique, we will consider how to design a set of procedures for manipulating rational numbers."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__170678,G__170679) : tailrecursion.hoplon.markdown.para_node.call(null,G__170678,G__170679));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_170675;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_170674;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_170673;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_170672;
}})()], 0));
var G__170652 = "";
var G__170653 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Example: Arithmetic Operations for Rational Numbers"], null),(function (){var _STAR_references_STAR_170684 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_170685 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_170686 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_170687 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__170688 = cljs.core.PersistentArrayMap.EMPTY;
var G__170689 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Suppose we want to do arithmetic with rational numbers. We want to be able to add, subtract, multiply, and divide them and to test whether two rational numbers are equal."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__170688,G__170689) : tailrecursion.hoplon.markdown.para_node.call(null,G__170688,G__170689));
})(),(function (){var G__170690 = cljs.core.PersistentArrayMap.EMPTY;
var G__170691 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let us begin by assuming that we already have a way of constructing a rational number from a numerator and a denominator. We also assume that, given a rational number, we have a way of extracting (or selecting) its numerator and its denominator. Let us further assume that the constructor and selectors are available as procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__170690,G__170691) : tailrecursion.hoplon.markdown.para_node.call(null,G__170690,G__170691));
})(),(function (){var G__170692 = cljs.core.PersistentArrayMap.EMPTY;
var G__170693 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__170694 = cljs.core.PersistentArrayMap.EMPTY;
var G__170695 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_170696 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_170697 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__170698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(make-rat <n> <d>)"], null);
var G__170699 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__170698,G__170699) : tailrecursion.hoplon.markdown.code_node.call(null,G__170698,G__170699));
})()," returns the rational number whose numerator is the integer ",(function (){var G__170700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<n>"], null);
var G__170701 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__170700,G__170701) : tailrecursion.hoplon.markdown.code_node.call(null,G__170700,G__170701));
})()," and whose denominator is the integer ",(function (){var G__170702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<d>"], null);
var G__170703 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__170702,G__170703) : tailrecursion.hoplon.markdown.code_node.call(null,G__170702,G__170703));
})(),". - ",(function (){var G__170704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(numer <x>)"], null);
var G__170705 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__170704,G__170705) : tailrecursion.hoplon.markdown.code_node.call(null,G__170704,G__170705));
})()," returns the numerator of the rational number ",(function (){var G__170706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<x>"], null);
var G__170707 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__170706,G__170707) : tailrecursion.hoplon.markdown.code_node.call(null,G__170706,G__170707));
})(),"."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_170697;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_170696;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__170694,G__170695) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__170694,G__170695));
})(),(function (){var G__170708 = cljs.core.PersistentArrayMap.EMPTY;
var G__170709 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_170710 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_170711 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__170712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(denom <x>)"], null);
var G__170713 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__170712,G__170713) : tailrecursion.hoplon.markdown.code_node.call(null,G__170712,G__170713));
})()," returns the denominator of the rational number ",(function (){var G__170714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<x>"], null);
var G__170715 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__170714,G__170715) : tailrecursion.hoplon.markdown.code_node.call(null,G__170714,G__170715));
})(),"."], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_170711;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_170710;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__170708,G__170709) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__170708,G__170709));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__170692,G__170693) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__170692,G__170693));
})(),(function (){var G__170716 = cljs.core.PersistentArrayMap.EMPTY;
var G__170717 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We are using here a powerful strategy of synthesis: ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["wishful thinking"], null)], 0)),". We haven",(function (){var G__170718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__170719 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__170718,G__170719) : tailrecursion.hoplon.markdown.simple_node.call(null,G__170718,G__170719));
})(),"t yet said how a rational number is represented, or how the procedures ",(function (){var G__170720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__170721 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__170720,G__170721) : tailrecursion.hoplon.markdown.code_node.call(null,G__170720,G__170721));
})(),", ",(function (){var G__170722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__170723 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__170722,G__170723) : tailrecursion.hoplon.markdown.code_node.call(null,G__170722,G__170723));
})(),", and ",(function (){var G__170724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__170725 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__170724,G__170725) : tailrecursion.hoplon.markdown.code_node.call(null,G__170724,G__170725));
})()," should be implemented. Even so, if we did have these three procedures, we could then add, subtract, multiply, divide, and test equality by using the following relations:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__170716,G__170717) : tailrecursion.hoplon.markdown.para_node.call(null,G__170716,G__170717));
})(),(function (){var G__170726 = cljs.core.PersistentArrayMap.EMPTY;
var G__170727 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{n_1}{d_1}+\\frac{n_2}{d_2}=&\\frac{n_1d_2+n_2d_1}{d_1d_2} \\\\\\frac{n_1}{d_1}-\\frac{n_2}{d_2}=&\\frac{n_1d_2-n_2d_1}{d_1d_2} \\\\\\frac{n_1}{d_1}\\cdot\\frac{n_2}{d_2}=&\\frac{n_1n_2}{d_1d_2} \\\\\\frac{n_1}{d_1}/\\frac{n_2}{d_2}=&\\frac{n_1d_2}{n_2d_1} \\\\\\frac{n_1}{d_1}=\\frac{n_2}{d_2}\\iff& n_1d_2=n_2d_1\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__170726,G__170727) : tailrecursion.hoplon.markdown.para_node.call(null,G__170726,G__170727));
})(),(function (){var G__170728 = cljs.core.PersistentArrayMap.EMPTY;
var G__170729 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can express these rules as procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__170728,G__170729) : tailrecursion.hoplon.markdown.para_node.call(null,G__170728,G__170729));
})(),(function (){var G__171089 = (function (){var G__171090 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__171091 = (function (){var G__171092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__171093 = "(";
var G__171094 = (function (){var G__171267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__171268 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171267,G__171268) : tailrecursion.hoplon.span.call(null,G__171267,G__171268));
})();
var G__171095 = (function (){var G__171269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171270 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171269,G__171270) : tailrecursion.hoplon.span.call(null,G__171269,G__171270));
})();
var G__171096 = " [";
var G__171097 = (function (){var G__171271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171272 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171271,G__171272) : tailrecursion.hoplon.span.call(null,G__171271,G__171272));
})();
var G__171098 = " ";
var G__171099 = (function (){var G__171273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171274 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171273,G__171274) : tailrecursion.hoplon.span.call(null,G__171273,G__171274));
})();
var G__171100 = "]\n  (";
var G__171101 = (function (){var G__171275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171276 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171275,G__171276) : tailrecursion.hoplon.span.call(null,G__171275,G__171276));
})();
var G__171102 = " (";
var G__171103 = (function (){var G__171277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171278 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171277,G__171278) : tailrecursion.hoplon.span.call(null,G__171277,G__171278));
})();
var G__171104 = "(";
var G__171105 = (function (){var G__171279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171280 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171279,G__171280) : tailrecursion.hoplon.span.call(null,G__171279,G__171280));
})();
var G__171106 = "(";
var G__171107 = (function (){var G__171281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171282 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171281,G__171282) : tailrecursion.hoplon.span.call(null,G__171281,G__171282));
})();
var G__171108 = " ";
var G__171109 = (function (){var G__171283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171284 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171283,G__171284) : tailrecursion.hoplon.span.call(null,G__171283,G__171284));
})();
var G__171110 = ") (";
var G__171111 = (function (){var G__171285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171286 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171285,G__171286) : tailrecursion.hoplon.span.call(null,G__171285,G__171286));
})();
var G__171112 = (function (){var G__171287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171288 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171287,G__171288) : tailrecursion.hoplon.span.call(null,G__171287,G__171288));
})();
var G__171113 = " ";
var G__171114 = (function (){var G__171289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171290 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171289,G__171290) : tailrecursion.hoplon.span.call(null,G__171289,G__171290));
})();
var G__171115 = "))\n               (";
var G__171116 = (function (){var G__171291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171292 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171291,G__171292) : tailrecursion.hoplon.span.call(null,G__171291,G__171292));
})();
var G__171117 = "(";
var G__171118 = (function (){var G__171293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171294 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171293,G__171294) : tailrecursion.hoplon.span.call(null,G__171293,G__171294));
})();
var G__171119 = " ";
var G__171120 = (function (){var G__171295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171296 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171295,G__171296) : tailrecursion.hoplon.span.call(null,G__171295,G__171296));
})();
var G__171121 = ") (";
var G__171122 = (function (){var G__171297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171298 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171297,G__171298) : tailrecursion.hoplon.span.call(null,G__171297,G__171298));
})();
var G__171123 = (function (){var G__171299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171300 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171299,G__171300) : tailrecursion.hoplon.span.call(null,G__171299,G__171300));
})();
var G__171124 = " ";
var G__171125 = (function (){var G__171301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171302 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171301,G__171302) : tailrecursion.hoplon.span.call(null,G__171301,G__171302));
})();
var G__171126 = ")))\n            (";
var G__171127 = (function (){var G__171303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171304 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171303,G__171304) : tailrecursion.hoplon.span.call(null,G__171303,G__171304));
})();
var G__171128 = "(";
var G__171129 = (function (){var G__171305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171306 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171305,G__171306) : tailrecursion.hoplon.span.call(null,G__171305,G__171306));
})();
var G__171130 = " ";
var G__171131 = (function (){var G__171307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171308 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171307,G__171308) : tailrecursion.hoplon.span.call(null,G__171307,G__171308));
})();
var G__171132 = ") (";
var G__171133 = (function (){var G__171309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171310 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171309,G__171310) : tailrecursion.hoplon.span.call(null,G__171309,G__171310));
})();
var G__171134 = " ";
var G__171135 = (function (){var G__171311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171312 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171311,G__171312) : tailrecursion.hoplon.span.call(null,G__171311,G__171312));
})();
var G__171136 = "))))\n(";
var G__171137 = (function (){var G__171313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__171314 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171313,G__171314) : tailrecursion.hoplon.span.call(null,G__171313,G__171314));
})();
var G__171138 = (function (){var G__171315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171316 = "sub-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171315,G__171316) : tailrecursion.hoplon.span.call(null,G__171315,G__171316));
})();
var G__171139 = " [";
var G__171140 = (function (){var G__171317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171318 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171317,G__171318) : tailrecursion.hoplon.span.call(null,G__171317,G__171318));
})();
var G__171141 = " ";
var G__171142 = (function (){var G__171319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171320 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171319,G__171320) : tailrecursion.hoplon.span.call(null,G__171319,G__171320));
})();
var G__171143 = "]\n  (";
var G__171144 = (function (){var G__171321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171322 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171321,G__171322) : tailrecursion.hoplon.span.call(null,G__171321,G__171322));
})();
var G__171145 = " (";
var G__171146 = (function (){var G__171323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171324 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171323,G__171324) : tailrecursion.hoplon.span.call(null,G__171323,G__171324));
})();
var G__171147 = "(";
var G__171148 = (function (){var G__171325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171326 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171325,G__171326) : tailrecursion.hoplon.span.call(null,G__171325,G__171326));
})();
var G__171149 = "(";
var G__171150 = (function (){var G__171327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171328 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171327,G__171328) : tailrecursion.hoplon.span.call(null,G__171327,G__171328));
})();
var G__171151 = " ";
var G__171152 = (function (){var G__171329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171330 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171329,G__171330) : tailrecursion.hoplon.span.call(null,G__171329,G__171330));
})();
var G__171153 = ") (";
var G__171154 = (function (){var G__171331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171332 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171331,G__171332) : tailrecursion.hoplon.span.call(null,G__171331,G__171332));
})();
var G__171155 = (function (){var G__171333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171334 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171333,G__171334) : tailrecursion.hoplon.span.call(null,G__171333,G__171334));
})();
var G__171156 = " ";
var G__171157 = (function (){var G__171335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171336 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171335,G__171336) : tailrecursion.hoplon.span.call(null,G__171335,G__171336));
})();
var G__171158 = "))\n               (";
var G__171159 = (function (){var G__171337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171338 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171337,G__171338) : tailrecursion.hoplon.span.call(null,G__171337,G__171338));
})();
var G__171160 = "(";
var G__171161 = (function (){var G__171339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171340 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171339,G__171340) : tailrecursion.hoplon.span.call(null,G__171339,G__171340));
})();
var G__171162 = " ";
var G__171163 = (function (){var G__171341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171342 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171341,G__171342) : tailrecursion.hoplon.span.call(null,G__171341,G__171342));
})();
var G__171164 = ") (";
var G__171165 = (function (){var G__171343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171344 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171343,G__171344) : tailrecursion.hoplon.span.call(null,G__171343,G__171344));
})();
var G__171166 = (function (){var G__171345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171346 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171345,G__171346) : tailrecursion.hoplon.span.call(null,G__171345,G__171346));
})();
var G__171167 = " ";
var G__171168 = (function (){var G__171347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171348 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171347,G__171348) : tailrecursion.hoplon.span.call(null,G__171347,G__171348));
})();
var G__171169 = ")))\n            (";
var G__171170 = (function (){var G__171349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171350 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171349,G__171350) : tailrecursion.hoplon.span.call(null,G__171349,G__171350));
})();
var G__171171 = "(";
var G__171172 = (function (){var G__171351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171352 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171351,G__171352) : tailrecursion.hoplon.span.call(null,G__171351,G__171352));
})();
var G__171173 = " ";
var G__171174 = (function (){var G__171353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171354 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171353,G__171354) : tailrecursion.hoplon.span.call(null,G__171353,G__171354));
})();
var G__171175 = ") (";
var G__171176 = (function (){var G__171355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171356 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171355,G__171356) : tailrecursion.hoplon.span.call(null,G__171355,G__171356));
})();
var G__171177 = " ";
var G__171178 = (function (){var G__171357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171358 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171357,G__171358) : tailrecursion.hoplon.span.call(null,G__171357,G__171358));
})();
var G__171179 = "))))\n(";
var G__171180 = (function (){var G__171359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__171360 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171359,G__171360) : tailrecursion.hoplon.span.call(null,G__171359,G__171360));
})();
var G__171181 = (function (){var G__171361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171362 = "mul-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171361,G__171362) : tailrecursion.hoplon.span.call(null,G__171361,G__171362));
})();
var G__171182 = " [";
var G__171183 = (function (){var G__171363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171364 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171363,G__171364) : tailrecursion.hoplon.span.call(null,G__171363,G__171364));
})();
var G__171184 = " ";
var G__171185 = (function (){var G__171365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171366 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171365,G__171366) : tailrecursion.hoplon.span.call(null,G__171365,G__171366));
})();
var G__171186 = "]\n  (";
var G__171187 = (function (){var G__171367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171368 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171367,G__171368) : tailrecursion.hoplon.span.call(null,G__171367,G__171368));
})();
var G__171188 = " (";
var G__171189 = (function (){var G__171369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171370 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171369,G__171370) : tailrecursion.hoplon.span.call(null,G__171369,G__171370));
})();
var G__171190 = "(";
var G__171191 = (function (){var G__171371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171372 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171371,G__171372) : tailrecursion.hoplon.span.call(null,G__171371,G__171372));
})();
var G__171192 = " ";
var G__171193 = (function (){var G__171373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171374 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171373,G__171374) : tailrecursion.hoplon.span.call(null,G__171373,G__171374));
})();
var G__171194 = ") (";
var G__171195 = (function (){var G__171375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171376 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171375,G__171376) : tailrecursion.hoplon.span.call(null,G__171375,G__171376));
})();
var G__171196 = " ";
var G__171197 = (function (){var G__171377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171378 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171377,G__171378) : tailrecursion.hoplon.span.call(null,G__171377,G__171378));
})();
var G__171198 = "))\n            (";
var G__171199 = (function (){var G__171379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171380 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171379,G__171380) : tailrecursion.hoplon.span.call(null,G__171379,G__171380));
})();
var G__171200 = "(";
var G__171201 = (function (){var G__171381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171382 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171381,G__171382) : tailrecursion.hoplon.span.call(null,G__171381,G__171382));
})();
var G__171202 = " ";
var G__171203 = (function (){var G__171383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171384 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171383,G__171384) : tailrecursion.hoplon.span.call(null,G__171383,G__171384));
})();
var G__171204 = ") (";
var G__171205 = (function (){var G__171385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171386 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171385,G__171386) : tailrecursion.hoplon.span.call(null,G__171385,G__171386));
})();
var G__171206 = " ";
var G__171207 = (function (){var G__171387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171388 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171387,G__171388) : tailrecursion.hoplon.span.call(null,G__171387,G__171388));
})();
var G__171208 = "))))\n(";
var G__171209 = (function (){var G__171389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__171390 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171389,G__171390) : tailrecursion.hoplon.span.call(null,G__171389,G__171390));
})();
var G__171210 = (function (){var G__171391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171392 = "div-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171391,G__171392) : tailrecursion.hoplon.span.call(null,G__171391,G__171392));
})();
var G__171211 = " [";
var G__171212 = (function (){var G__171393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171394 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171393,G__171394) : tailrecursion.hoplon.span.call(null,G__171393,G__171394));
})();
var G__171213 = " ";
var G__171214 = (function (){var G__171395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171396 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171395,G__171396) : tailrecursion.hoplon.span.call(null,G__171395,G__171396));
})();
var G__171215 = "]\n  (";
var G__171216 = (function (){var G__171397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171398 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171397,G__171398) : tailrecursion.hoplon.span.call(null,G__171397,G__171398));
})();
var G__171217 = " (";
var G__171218 = (function (){var G__171399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171400 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171399,G__171400) : tailrecursion.hoplon.span.call(null,G__171399,G__171400));
})();
var G__171219 = "(";
var G__171220 = (function (){var G__171401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171402 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171401,G__171402) : tailrecursion.hoplon.span.call(null,G__171401,G__171402));
})();
var G__171221 = " ";
var G__171222 = (function (){var G__171403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171404 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171403,G__171404) : tailrecursion.hoplon.span.call(null,G__171403,G__171404));
})();
var G__171223 = ") (";
var G__171224 = (function (){var G__171405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171406 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171405,G__171406) : tailrecursion.hoplon.span.call(null,G__171405,G__171406));
})();
var G__171225 = " ";
var G__171226 = (function (){var G__171407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171408 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171407,G__171408) : tailrecursion.hoplon.span.call(null,G__171407,G__171408));
})();
var G__171227 = "))\n            (";
var G__171228 = (function (){var G__171409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171410 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171409,G__171410) : tailrecursion.hoplon.span.call(null,G__171409,G__171410));
})();
var G__171229 = "(";
var G__171230 = (function (){var G__171411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171412 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171411,G__171412) : tailrecursion.hoplon.span.call(null,G__171411,G__171412));
})();
var G__171231 = " ";
var G__171232 = (function (){var G__171413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171414 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171413,G__171414) : tailrecursion.hoplon.span.call(null,G__171413,G__171414));
})();
var G__171233 = ") (";
var G__171234 = (function (){var G__171415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171416 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171415,G__171416) : tailrecursion.hoplon.span.call(null,G__171415,G__171416));
})();
var G__171235 = " ";
var G__171236 = (function (){var G__171417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171418 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171417,G__171418) : tailrecursion.hoplon.span.call(null,G__171417,G__171418));
})();
var G__171237 = "))))\n(";
var G__171238 = (function (){var G__171419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__171420 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171419,G__171420) : tailrecursion.hoplon.span.call(null,G__171419,G__171420));
})();
var G__171239 = (function (){var G__171421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171422 = "equal-rat?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171421,G__171422) : tailrecursion.hoplon.span.call(null,G__171421,G__171422));
})();
var G__171240 = " [";
var G__171241 = (function (){var G__171423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171424 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171423,G__171424) : tailrecursion.hoplon.span.call(null,G__171423,G__171424));
})();
var G__171242 = " ";
var G__171243 = (function (){var G__171425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171426 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171425,G__171426) : tailrecursion.hoplon.span.call(null,G__171425,G__171426));
})();
var G__171244 = "]\n  (";
var G__171245 = (function (){var G__171427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171428 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171427,G__171428) : tailrecursion.hoplon.span.call(null,G__171427,G__171428));
})();
var G__171246 = "(";
var G__171247 = (function (){var G__171429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171430 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171429,G__171430) : tailrecursion.hoplon.span.call(null,G__171429,G__171430));
})();
var G__171248 = "(";
var G__171249 = (function (){var G__171431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171432 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171431,G__171432) : tailrecursion.hoplon.span.call(null,G__171431,G__171432));
})();
var G__171250 = " ";
var G__171251 = (function (){var G__171433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171434 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171433,G__171434) : tailrecursion.hoplon.span.call(null,G__171433,G__171434));
})();
var G__171252 = ") (";
var G__171253 = (function (){var G__171435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171436 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171435,G__171436) : tailrecursion.hoplon.span.call(null,G__171435,G__171436));
})();
var G__171254 = " ";
var G__171255 = (function (){var G__171437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171438 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171437,G__171438) : tailrecursion.hoplon.span.call(null,G__171437,G__171438));
})();
var G__171256 = "))\n     (";
var G__171257 = (function (){var G__171439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171440 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171439,G__171440) : tailrecursion.hoplon.span.call(null,G__171439,G__171440));
})();
var G__171258 = "(";
var G__171259 = (function (){var G__171441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171442 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171441,G__171442) : tailrecursion.hoplon.span.call(null,G__171441,G__171442));
})();
var G__171260 = " ";
var G__171261 = (function (){var G__171443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171444 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171443,G__171444) : tailrecursion.hoplon.span.call(null,G__171443,G__171444));
})();
var G__171262 = ") (";
var G__171263 = (function (){var G__171445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__171446 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171445,G__171446) : tailrecursion.hoplon.span.call(null,G__171445,G__171446));
})();
var G__171264 = " ";
var G__171265 = (function (){var G__171447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171448 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171447,G__171448) : tailrecursion.hoplon.span.call(null,G__171447,G__171448));
})();
var G__171266 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$175 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$175(G__171092,G__171093,G__171094,G__171095,G__171096,G__171097,G__171098,G__171099,G__171100,G__171101,G__171102,G__171103,G__171104,G__171105,G__171106,G__171107,G__171108,G__171109,G__171110,G__171111,G__171112,G__171113,G__171114,G__171115,G__171116,G__171117,G__171118,G__171119,G__171120,G__171121,G__171122,G__171123,G__171124,G__171125,G__171126,G__171127,G__171128,G__171129,G__171130,G__171131,G__171132,G__171133,G__171134,G__171135,G__171136,G__171137,G__171138,G__171139,G__171140,G__171141,G__171142,G__171143,G__171144,G__171145,G__171146,G__171147,G__171148,G__171149,G__171150,G__171151,G__171152,G__171153,G__171154,G__171155,G__171156,G__171157,G__171158,G__171159,G__171160,G__171161,G__171162,G__171163,G__171164,G__171165,G__171166,G__171167,G__171168,G__171169,G__171170,G__171171,G__171172,G__171173,G__171174,G__171175,G__171176,G__171177,G__171178,G__171179,G__171180,G__171181,G__171182,G__171183,G__171184,G__171185,G__171186,G__171187,G__171188,G__171189,G__171190,G__171191,G__171192,G__171193,G__171194,G__171195,G__171196,G__171197,G__171198,G__171199,G__171200,G__171201,G__171202,G__171203,G__171204,G__171205,G__171206,G__171207,G__171208,G__171209,G__171210,G__171211,G__171212,G__171213,G__171214,G__171215,G__171216,G__171217,G__171218,G__171219,G__171220,G__171221,G__171222,G__171223,G__171224,G__171225,G__171226,G__171227,G__171228,G__171229,G__171230,G__171231,G__171232,G__171233,G__171234,G__171235,G__171236,G__171237,G__171238,G__171239,G__171240,G__171241,G__171242,G__171243,G__171244,G__171245,G__171246,G__171247,G__171248,G__171249,G__171250,G__171251,G__171252,G__171253,G__171254,G__171255,G__171256,G__171257,G__171258,G__171259,G__171260,G__171261,G__171262,G__171263,G__171264,G__171265,G__171266) : tailrecursion.hoplon.pre.call(null,G__171092,G__171093,G__171094,G__171095,G__171096,G__171097,G__171098,G__171099,G__171100,G__171101,G__171102,G__171103,G__171104,G__171105,G__171106,G__171107,G__171108,G__171109,G__171110,G__171111,G__171112,G__171113,G__171114,G__171115,G__171116,G__171117,G__171118,G__171119,G__171120,G__171121,G__171122,G__171123,G__171124,G__171125,G__171126,G__171127,G__171128,G__171129,G__171130,G__171131,G__171132,G__171133,G__171134,G__171135,G__171136,G__171137,G__171138,G__171139,G__171140,G__171141,G__171142,G__171143,G__171144,G__171145,G__171146,G__171147,G__171148,G__171149,G__171150,G__171151,G__171152,G__171153,G__171154,G__171155,G__171156,G__171157,G__171158,G__171159,G__171160,G__171161,G__171162,G__171163,G__171164,G__171165,G__171166,G__171167,G__171168,G__171169,G__171170,G__171171,G__171172,G__171173,G__171174,G__171175,G__171176,G__171177,G__171178,G__171179,G__171180,G__171181,G__171182,G__171183,G__171184,G__171185,G__171186,G__171187,G__171188,G__171189,G__171190,G__171191,G__171192,G__171193,G__171194,G__171195,G__171196,G__171197,G__171198,G__171199,G__171200,G__171201,G__171202,G__171203,G__171204,G__171205,G__171206,G__171207,G__171208,G__171209,G__171210,G__171211,G__171212,G__171213,G__171214,G__171215,G__171216,G__171217,G__171218,G__171219,G__171220,G__171221,G__171222,G__171223,G__171224,G__171225,G__171226,G__171227,G__171228,G__171229,G__171230,G__171231,G__171232,G__171233,G__171234,G__171235,G__171236,G__171237,G__171238,G__171239,G__171240,G__171241,G__171242,G__171243,G__171244,G__171245,G__171246,G__171247,G__171248,G__171249,G__171250,G__171251,G__171252,G__171253,G__171254,G__171255,G__171256,G__171257,G__171258,G__171259,G__171260,G__171261,G__171262,G__171263,G__171264,G__171265,G__171266));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__171090,G__171091) : tailrecursion.hoplon.div.call(null,G__171090,G__171091));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__171089) : tailrecursion.hoplon.div.call(null,G__171089));
})(),(function (){var G__171449 = cljs.core.PersistentArrayMap.EMPTY;
var G__171450 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we have the operations on rational numbers defined in terms of the selector and constructor procedures ",(function (){var G__171451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__171452 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171451,G__171452) : tailrecursion.hoplon.markdown.code_node.call(null,G__171451,G__171452));
})(),", ",(function (){var G__171453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__171454 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171453,G__171454) : tailrecursion.hoplon.markdown.code_node.call(null,G__171453,G__171454));
})(),", and ",(function (){var G__171455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__171456 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171455,G__171456) : tailrecursion.hoplon.markdown.code_node.call(null,G__171455,G__171456));
})(),". But we haven",(function (){var G__171457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__171458 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__171457,G__171458) : tailrecursion.hoplon.markdown.simple_node.call(null,G__171457,G__171458));
})(),"t yet defined these. What we need is some way to glue together a numerator and a denominator to form a rational number."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__171449,G__171450) : tailrecursion.hoplon.markdown.para_node.call(null,G__171449,G__171450));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_170687;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_170686;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_170685;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_170684;
}})()], 0));
var G__170654 = "";
var G__170655 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Pairs (or Lists, for Us)"], null),(function (){var _STAR_references_STAR_171459 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_171460 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_171461 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_171462 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__171463 = cljs.core.PersistentArrayMap.EMPTY;
var G__171464 = cljs.core.PersistentVector.fromArray(["To enable us to implement the concrete level of our data abstraction, our language provides a compound structure abstraction called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sequential object"], null)], 0)),". These sequential objects are really just anything that has a concept of a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["first"], null)], 0))," item and a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["rest"], null)], 0))," of the items. Hence, a sequential object is any object which allows use of the ",(function (){var G__171465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__171466 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171465,G__171466) : tailrecursion.hoplon.markdown.code_node.call(null,G__171465,G__171466));
})()," and ",(function (){var G__171467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__171468 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171467,G__171468) : tailrecursion.hoplon.markdown.code_node.call(null,G__171467,G__171468));
})()," protocols (kind of like procedures, except their actual execution may be different from data type to data type). One example of a sequential object ",(function (){var G__171469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__171470 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__171469,G__171470) : tailrecursion.hoplon.markdown.simple_node.call(null,G__171469,G__171470));
})()," the one we will be using instead of the ",(function (){var G__171471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__171472 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pairs"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__171471,G__171472) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__171471,G__171472));
})()," they use for this section in Scheme ",(function (){var G__171473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__171474 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__171473,G__171474) : tailrecursion.hoplon.markdown.simple_node.call(null,G__171473,G__171474));
})()," is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["list"], null)], 0)),". Lists can be constructed via the procedure ",(function (){var G__171475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__171476 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171475,G__171476) : tailrecursion.hoplon.markdown.code_node.call(null,G__171475,G__171476));
})()," like so ",(function (){var G__171477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(list 1 2 3)"], null);
var G__171478 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171477,G__171478) : tailrecursion.hoplon.markdown.code_node.call(null,G__171477,G__171478));
})()," gives you a list containing 1, 2, and 3 as its elements. So ",(function (){var G__171479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first (list 1 2 3))"], null);
var G__171480 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171479,G__171480) : tailrecursion.hoplon.markdown.code_node.call(null,G__171479,G__171480));
})()," would return ",(function (){var G__171481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"1"], null);
var G__171482 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171481,G__171482) : tailrecursion.hoplon.markdown.code_node.call(null,G__171481,G__171482));
})(),", and ",(function (){var G__171483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(rest (list 1 2 3))"], null);
var G__171484 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171483,G__171484) : tailrecursion.hoplon.markdown.code_node.call(null,G__171483,G__171484));
})()," returns ",(function (){var G__171485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(2 3)"], null);
var G__171486 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171485,G__171486) : tailrecursion.hoplon.markdown.code_node.call(null,G__171485,G__171486));
})(),", which is to say the list containing 2 and 3 as its elements. To check if what we",(function (){var G__171487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__171488 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__171487,G__171488) : tailrecursion.hoplon.markdown.simple_node.call(null,G__171487,G__171488));
})(),"ve been given is indeed a list, we can use the procedure ",(function (){var G__171489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list?"], null);
var G__171490 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171489,G__171490) : tailrecursion.hoplon.markdown.code_node.call(null,G__171489,G__171490));
})()," like so: ",(function (){var G__171491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(list? (rest (list 1 2 3)))"], null);
var G__171492 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171491,G__171492) : tailrecursion.hoplon.markdown.code_node.call(null,G__171491,G__171492));
})(),". Lists are actually made via pairs (as will be described later in this section), but all of that is under the hood. Lists can also be constructed from old lists with the procedure ",(function (){var G__171493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__171494 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171493,G__171494) : tailrecursion.hoplon.markdown.code_node.call(null,G__171493,G__171494));
})(),".",(function (){var G__171495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__171496 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We should note that since these lists are immutable, the only way to ",(function (){var G__171497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__171498 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["edit"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__171497,G__171498) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__171497,G__171498));
})()," a list would be to create a new one with the desired changes and then destroy the old one. While this may seem unfortunate at first, it is actually quite a desireable feature when dealing with concurrency."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__171495,G__171496) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__171495,G__171496));
})()," This procedure takes two or more arguments, a sequential object and any number of values to append to the sequential object, then returns a sequential object of the same type with the values appended in whatever method appropriate to that sequential object in the order they appear. We will see later that lists are constructed in such a way that prepending is very cheap, so ",(function (){var G__171499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__171500 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171499,G__171500) : tailrecursion.hoplon.markdown.code_node.call(null,G__171499,G__171500));
})()," does exactly that. Hence, ",(function (){var G__171501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(conj (list 1 2 3) 4)"], null);
var G__171502 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171501,G__171502) : tailrecursion.hoplon.markdown.code_node.call(null,G__171501,G__171502));
})()," returns ",(function (){var G__171503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(4 1\n2 3)"], null);
var G__171504 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171503,G__171504) : tailrecursion.hoplon.markdown.code_node.call(null,G__171503,G__171504));
})(),", and ",(function (){var G__171505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(conj (list 1 2 3) 4 5)"], null);
var G__171506 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171505,G__171506) : tailrecursion.hoplon.markdown.code_node.call(null,G__171505,G__171506));
})()," returns ",(function (){var G__171507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(5 4 1 2 3)"], null);
var G__171508 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171507,G__171508) : tailrecursion.hoplon.markdown.code_node.call(null,G__171507,G__171508));
})()," (remember that they are prepended in the order they appear!)."], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__171463,G__171464) : tailrecursion.hoplon.markdown.para_node.call(null,G__171463,G__171464));
})(),(function (){var G__171509 = cljs.core.PersistentArrayMap.EMPTY;
var G__171510 = new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In Scheme, however, their building block is the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pair"], null)], 0)),", wich can be constructed via the primitive procedure ",(function (){var G__171511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__171512 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171511,G__171512) : tailrecursion.hoplon.markdown.code_node.call(null,G__171511,G__171512));
})()," (which also works in Clojure",(function (){var G__171513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__171514 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__171513,G__171514) : tailrecursion.hoplon.markdown.simple_node.call(null,G__171513,G__171514));
})()," kinda) and has procedures ",(function (){var G__171515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__171516 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171515,G__171516) : tailrecursion.hoplon.markdown.code_node.call(null,G__171515,G__171516));
})()," and ",(function (){var G__171517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__171518 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171517,G__171518) : tailrecursion.hoplon.markdown.code_node.call(null,G__171517,G__171518));
})()," for obtaining the first and second values of the pair respectively.",(function (){var G__171519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__171520 = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The name ",(function (){var G__171521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__171522 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171521,G__171522) : tailrecursion.hoplon.markdown.code_node.call(null,G__171521,G__171522));
})()," stands for ",(function (){var G__171523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__171524 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["construct."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__171523,G__171524) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__171523,G__171524));
})()," The names ",(function (){var G__171525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__171526 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171525,G__171526) : tailrecursion.hoplon.markdown.code_node.call(null,G__171525,G__171526));
})()," and ",(function (){var G__171527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__171528 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171527,G__171528) : tailrecursion.hoplon.markdown.code_node.call(null,G__171527,G__171528));
})()," derive from the original implementation of Lisp on the IBM 704. That machine had an addressing scheme that allowed one to reference the ",(function (){var G__171529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__171530 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["address"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__171529,G__171530) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__171529,G__171530));
})()," and ",(function (){var G__171531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__171532 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["decrement"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__171531,G__171532) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__171531,G__171532));
})()," parts of a memory location. ",(function (){var G__171533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__171534 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171533,G__171534) : tailrecursion.hoplon.markdown.code_node.call(null,G__171533,G__171534));
})()," stands for ",(function (){var G__171535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__171536 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Contents of Address part of Register"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__171535,G__171536) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__171535,G__171536));
})()," and ",(function (){var G__171537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__171538 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171537,G__171538) : tailrecursion.hoplon.markdown.code_node.call(null,G__171537,G__171538));
})()," (pronounced ",(function (){var G__171539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__171540 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["could-er"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__171539,G__171540) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__171539,G__171540));
})(),") stands for ",(function (){var G__171541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__171542 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Contents of Decrement part of Register."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__171541,G__171542) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__171541,G__171542));
})()], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__171519,G__171520) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__171519,G__171520));
})()," Thus, we in Scheme, we would be able to use ",(function (){var G__171543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__171544 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171543,G__171544) : tailrecursion.hoplon.markdown.code_node.call(null,G__171543,G__171544));
})(),", ",(function (){var G__171545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__171546 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171545,G__171546) : tailrecursion.hoplon.markdown.code_node.call(null,G__171545,G__171546));
})(),", and ",(function (){var G__171547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__171548 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171547,G__171548) : tailrecursion.hoplon.markdown.code_node.call(null,G__171547,G__171548));
})()," as follows: "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__171509,G__171510) : tailrecursion.hoplon.markdown.para_node.call(null,G__171509,G__171510));
})(),(function (){var G__171571 = (function (){var G__171572 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__171573 = (function (){var G__171574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__171575 = "(";
var G__171576 = (function (){var G__171584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__171585 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171584,G__171585) : tailrecursion.hoplon.span.call(null,G__171584,G__171585));
})();
var G__171577 = (function (){var G__171586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171587 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171586,G__171587) : tailrecursion.hoplon.span.call(null,G__171586,G__171587));
})();
var G__171578 = " (";
var G__171579 = (function (){var G__171588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171589 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171588,G__171589) : tailrecursion.hoplon.span.call(null,G__171588,G__171589));
})();
var G__171580 = (function (){var G__171590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__171591 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171590,G__171591) : tailrecursion.hoplon.span.call(null,G__171590,G__171591));
})();
var G__171581 = " ";
var G__171582 = (function (){var G__171592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__171593 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171592,G__171593) : tailrecursion.hoplon.span.call(null,G__171592,G__171593));
})();
var G__171583 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10(G__171574,G__171575,G__171576,G__171577,G__171578,G__171579,G__171580,G__171581,G__171582,G__171583) : tailrecursion.hoplon.pre.call(null,G__171574,G__171575,G__171576,G__171577,G__171578,G__171579,G__171580,G__171581,G__171582,G__171583));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__171572,G__171573) : tailrecursion.hoplon.div.call(null,G__171572,G__171573));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__171571) : tailrecursion.hoplon.div.call(null,G__171571));
})(),(function (){var G__171594 = cljs.core.PersistentArrayMap.EMPTY;
var G__171595 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Go ahead and try this in Clojure (can you translate that?)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__171594,G__171595) : tailrecursion.hoplon.markdown.para_node.call(null,G__171594,G__171595));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_171462;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_171461;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_171460;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_171459;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,"```clj\n(def x (cons 1 2))\n```"], 0)),"",(function (){var _STAR_references_STAR_171596 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_171597 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_171598 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_171599 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__171600 = cljs.core.PersistentArrayMap.EMPTY;
var G__171601 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If you tried the previous example. you probably got an error. That is because Clojure implements ",(function (){var G__171602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__171603 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171602,G__171603) : tailrecursion.hoplon.markdown.code_node.call(null,G__171602,G__171603));
})()," differently. If we try "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__171600,G__171601) : tailrecursion.hoplon.markdown.para_node.call(null,G__171600,G__171601));
})(),(function (){var G__171633 = (function (){var G__171634 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__171635 = (function (){var G__171636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__171637 = "(";
var G__171638 = (function (){var G__171649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__171650 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171649,G__171650) : tailrecursion.hoplon.span.call(null,G__171649,G__171650));
})();
var G__171639 = (function (){var G__171651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171652 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171651,G__171652) : tailrecursion.hoplon.span.call(null,G__171651,G__171652));
})();
var G__171640 = " (";
var G__171641 = (function (){var G__171653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171654 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171653,G__171654) : tailrecursion.hoplon.span.call(null,G__171653,G__171654));
})();
var G__171642 = (function (){var G__171655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__171656 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171655,G__171656) : tailrecursion.hoplon.span.call(null,G__171655,G__171656));
})();
var G__171643 = " (";
var G__171644 = (function (){var G__171657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171658 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171657,G__171658) : tailrecursion.hoplon.span.call(null,G__171657,G__171658));
})();
var G__171645 = (function (){var G__171659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__171660 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171659,G__171660) : tailrecursion.hoplon.span.call(null,G__171659,G__171660));
})();
var G__171646 = " ";
var G__171647 = (function (){var G__171661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171662 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171661,G__171662) : tailrecursion.hoplon.span.call(null,G__171661,G__171662));
})();
var G__171648 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__171636,G__171637,G__171638,G__171639,G__171640,G__171641,G__171642,G__171643,G__171644,G__171645,G__171646,G__171647,G__171648) : tailrecursion.hoplon.pre.call(null,G__171636,G__171637,G__171638,G__171639,G__171640,G__171641,G__171642,G__171643,G__171644,G__171645,G__171646,G__171647,G__171648));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__171634,G__171635) : tailrecursion.hoplon.div.call(null,G__171634,G__171635));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__171633) : tailrecursion.hoplon.div.call(null,G__171633));
})(),(function (){var G__171663 = cljs.core.PersistentArrayMap.EMPTY;
var G__171664 = new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then we shouldn",(function (){var G__171665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__171666 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__171665,G__171666) : tailrecursion.hoplon.markdown.simple_node.call(null,G__171665,G__171666));
})(),"t get any errors. The reason is that the second argument of ",(function (){var G__171667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__171668 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171667,G__171668) : tailrecursion.hoplon.markdown.code_node.call(null,G__171667,G__171668));
})()," must be sequential object (or ",(function (){var G__171669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nil"], null);
var G__171670 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171669,G__171670) : tailrecursion.hoplon.markdown.code_node.call(null,G__171669,G__171670));
})(),"). Either way, we will not be using ",(function (){var G__171671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__171672 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171671,G__171672) : tailrecursion.hoplon.markdown.code_node.call(null,G__171671,G__171672));
})()," for our discourse in this chapter, but rather the procedures ",(function (){var G__171673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__171674 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171673,G__171674) : tailrecursion.hoplon.markdown.code_node.call(null,G__171673,G__171674));
})()," and ",(function (){var G__171675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"conj"], null);
var G__171676 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171675,G__171676) : tailrecursion.hoplon.markdown.code_node.call(null,G__171675,G__171676));
})(),", which are more general anyway. Along with ",(function (){var G__171677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__171678 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171677,G__171678) : tailrecursion.hoplon.markdown.code_node.call(null,G__171677,G__171678));
})()," and ",(function (){var G__171679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__171680 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171679,G__171680) : tailrecursion.hoplon.markdown.code_node.call(null,G__171679,G__171680));
})(),", lists also have ",(function (){var G__171681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__171682 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171681,G__171682) : tailrecursion.hoplon.markdown.code_node.call(null,G__171681,G__171682));
})()," and ",(function (){var G__171683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nth"], null);
var G__171684 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171683,G__171684) : tailrecursion.hoplon.markdown.code_node.call(null,G__171683,G__171684));
})()," which give you exactly what you",(function (){var G__171685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__171686 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__171685,G__171686) : tailrecursion.hoplon.markdown.simple_node.call(null,G__171685,G__171686));
})(),"d expect, the second and the nth values in the list. So,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__171663,G__171664) : tailrecursion.hoplon.markdown.para_node.call(null,G__171663,G__171664));
})(),(function (){var G__171731 = (function (){var G__171732 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__171733 = (function (){var G__171734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__171735 = "(";
var G__171736 = (function (){var G__171754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__171755 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171754,G__171755) : tailrecursion.hoplon.span.call(null,G__171754,G__171755));
})();
var G__171737 = (function (){var G__171756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171757 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171756,G__171757) : tailrecursion.hoplon.span.call(null,G__171756,G__171757));
})();
var G__171738 = " (";
var G__171739 = (function (){var G__171758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171759 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171758,G__171759) : tailrecursion.hoplon.span.call(null,G__171758,G__171759));
})();
var G__171740 = (function (){var G__171760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__171761 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171760,G__171761) : tailrecursion.hoplon.span.call(null,G__171760,G__171761));
})();
var G__171741 = " ";
var G__171742 = (function (){var G__171762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__171763 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171762,G__171763) : tailrecursion.hoplon.span.call(null,G__171762,G__171763));
})();
var G__171743 = "))\n(";
var G__171744 = (function (){var G__171764 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171765 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171764,G__171765) : tailrecursion.hoplon.span.call(null,G__171764,G__171765));
})();
var G__171745 = (function (){var G__171766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171767 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171766,G__171767) : tailrecursion.hoplon.span.call(null,G__171766,G__171767));
})();
var G__171746 = ")\n";
var G__171747 = (function (){var G__171768 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__171769 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171768,G__171769) : tailrecursion.hoplon.span.call(null,G__171768,G__171769));
})();
var G__171748 = "\n(";
var G__171749 = (function (){var G__171770 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171771 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171770,G__171771) : tailrecursion.hoplon.span.call(null,G__171770,G__171771));
})();
var G__171750 = (function (){var G__171772 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171773 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171772,G__171773) : tailrecursion.hoplon.span.call(null,G__171772,G__171773));
})();
var G__171751 = ")\n";
var G__171752 = (function (){var G__171774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__171775 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171774,G__171775) : tailrecursion.hoplon.span.call(null,G__171774,G__171775));
})();
var G__171753 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20(G__171734,G__171735,G__171736,G__171737,G__171738,G__171739,G__171740,G__171741,G__171742,G__171743,G__171744,G__171745,G__171746,G__171747,G__171748,G__171749,G__171750,G__171751,G__171752,G__171753) : tailrecursion.hoplon.pre.call(null,G__171734,G__171735,G__171736,G__171737,G__171738,G__171739,G__171740,G__171741,G__171742,G__171743,G__171744,G__171745,G__171746,G__171747,G__171748,G__171749,G__171750,G__171751,G__171752,G__171753));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__171732,G__171733) : tailrecursion.hoplon.div.call(null,G__171732,G__171733));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__171731) : tailrecursion.hoplon.div.call(null,G__171731));
})(),(function (){var G__171776 = cljs.core.PersistentArrayMap.EMPTY;
var G__171777 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Notice that a list is a data object that can be given a name and manipulated, just like a primitive data object. Moreover, ",(function (){var G__171778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__171779 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171778,G__171779) : tailrecursion.hoplon.markdown.code_node.call(null,G__171778,G__171779));
})()," can be used to form pairs whose elements are pairs, and so on:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__171776,G__171777) : tailrecursion.hoplon.markdown.para_node.call(null,G__171776,G__171777));
})(),(function (){var G__171882 = (function (){var G__171883 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__171884 = (function (){var G__171885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__171886 = "(";
var G__171887 = (function (){var G__171931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__171932 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171931,G__171932) : tailrecursion.hoplon.span.call(null,G__171931,G__171932));
})();
var G__171888 = (function (){var G__171933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171934 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171933,G__171934) : tailrecursion.hoplon.span.call(null,G__171933,G__171934));
})();
var G__171889 = " (";
var G__171890 = (function (){var G__171935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171936 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171935,G__171936) : tailrecursion.hoplon.span.call(null,G__171935,G__171936));
})();
var G__171891 = (function (){var G__171937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__171938 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171937,G__171938) : tailrecursion.hoplon.span.call(null,G__171937,G__171938));
})();
var G__171892 = " (";
var G__171893 = (function (){var G__171939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171940 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171939,G__171940) : tailrecursion.hoplon.span.call(null,G__171939,G__171940));
})();
var G__171894 = (function (){var G__171941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__171942 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171941,G__171942) : tailrecursion.hoplon.span.call(null,G__171941,G__171942));
})();
var G__171895 = " ";
var G__171896 = (function (){var G__171943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171944 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171943,G__171944) : tailrecursion.hoplon.span.call(null,G__171943,G__171944));
})();
var G__171897 = ")))\n(";
var G__171898 = (function (){var G__171945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__171946 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171945,G__171946) : tailrecursion.hoplon.span.call(null,G__171945,G__171946));
})();
var G__171899 = (function (){var G__171947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171948 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171947,G__171948) : tailrecursion.hoplon.span.call(null,G__171947,G__171948));
})();
var G__171900 = " (";
var G__171901 = (function (){var G__171949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171950 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171949,G__171950) : tailrecursion.hoplon.span.call(null,G__171949,G__171950));
})();
var G__171902 = (function (){var G__171951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__171952 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171951,G__171952) : tailrecursion.hoplon.span.call(null,G__171951,G__171952));
})();
var G__171903 = " (";
var G__171904 = (function (){var G__171953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171954 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171953,G__171954) : tailrecursion.hoplon.span.call(null,G__171953,G__171954));
})();
var G__171905 = (function (){var G__171955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__171956 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171955,G__171956) : tailrecursion.hoplon.span.call(null,G__171955,G__171956));
})();
var G__171906 = " ";
var G__171907 = (function (){var G__171957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171958 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171957,G__171958) : tailrecursion.hoplon.span.call(null,G__171957,G__171958));
})();
var G__171908 = ")))\n(";
var G__171909 = (function (){var G__171959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__171960 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171959,G__171960) : tailrecursion.hoplon.span.call(null,G__171959,G__171960));
})();
var G__171910 = (function (){var G__171961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171962 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171961,G__171962) : tailrecursion.hoplon.span.call(null,G__171961,G__171962));
})();
var G__171911 = " (";
var G__171912 = (function (){var G__171963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171964 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171963,G__171964) : tailrecursion.hoplon.span.call(null,G__171963,G__171964));
})();
var G__171913 = (function (){var G__171965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171966 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171965,G__171966) : tailrecursion.hoplon.span.call(null,G__171965,G__171966));
})();
var G__171914 = " ";
var G__171915 = (function (){var G__171967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171968 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171967,G__171968) : tailrecursion.hoplon.span.call(null,G__171967,G__171968));
})();
var G__171916 = "))\n\n(";
var G__171917 = (function (){var G__171969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171970 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171969,G__171970) : tailrecursion.hoplon.span.call(null,G__171969,G__171970));
})();
var G__171918 = "(";
var G__171919 = (function (){var G__171971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171972 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171971,G__171972) : tailrecursion.hoplon.span.call(null,G__171971,G__171972));
})();
var G__171920 = (function (){var G__171973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171974 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171973,G__171974) : tailrecursion.hoplon.span.call(null,G__171973,G__171974));
})();
var G__171921 = "))\n";
var G__171922 = (function (){var G__171975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__171976 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171975,G__171976) : tailrecursion.hoplon.span.call(null,G__171975,G__171976));
})();
var G__171923 = "\n(";
var G__171924 = (function (){var G__171977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171978 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171977,G__171978) : tailrecursion.hoplon.span.call(null,G__171977,G__171978));
})();
var G__171925 = "(";
var G__171926 = (function (){var G__171979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__171980 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171979,G__171980) : tailrecursion.hoplon.span.call(null,G__171979,G__171980));
})();
var G__171927 = (function (){var G__171981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__171982 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171981,G__171982) : tailrecursion.hoplon.span.call(null,G__171981,G__171982));
})();
var G__171928 = "))\n";
var G__171929 = (function (){var G__171983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__171984 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__171983,G__171984) : tailrecursion.hoplon.span.call(null,G__171983,G__171984));
})();
var G__171930 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__171885,G__171886,G__171887,G__171888,G__171889,G__171890,G__171891,G__171892,G__171893,G__171894,G__171895,G__171896,G__171897,G__171898,G__171899,G__171900,G__171901,G__171902,G__171903,G__171904,G__171905,G__171906,G__171907,G__171908,G__171909,G__171910,G__171911,G__171912,G__171913,G__171914,G__171915,G__171916,G__171917,G__171918,G__171919,G__171920,G__171921,G__171922,G__171923,G__171924,G__171925,G__171926,G__171927,G__171928,G__171929,G__171930) : tailrecursion.hoplon.pre.call(null,G__171885,G__171886,G__171887,G__171888,G__171889,G__171890,G__171891,G__171892,G__171893,G__171894,G__171895,G__171896,G__171897,G__171898,G__171899,G__171900,G__171901,G__171902,G__171903,G__171904,G__171905,G__171906,G__171907,G__171908,G__171909,G__171910,G__171911,G__171912,G__171913,G__171914,G__171915,G__171916,G__171917,G__171918,G__171919,G__171920,G__171921,G__171922,G__171923,G__171924,G__171925,G__171926,G__171927,G__171928,G__171929,G__171930));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__171883,G__171884) : tailrecursion.hoplon.div.call(null,G__171883,G__171884));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__171882) : tailrecursion.hoplon.div.call(null,G__171882));
})(),(function (){var G__171985 = cljs.core.PersistentArrayMap.EMPTY;
var G__171986 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/sect/2/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.2"], null)], 0))," we will see how this ability to combine pairs means that pairs can be used as general-purpose building blocks to create all sorts of complex data structures. The single compound-data primitive ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pair"], null)], 0)),", implemented in Scheme by the procedures ",(function (){var G__171987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__171988 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171987,G__171988) : tailrecursion.hoplon.markdown.code_node.call(null,G__171987,G__171988));
})(),", ",(function (){var G__171989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__171990 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171989,G__171990) : tailrecursion.hoplon.markdown.code_node.call(null,G__171989,G__171990));
})(),", and ",(function (){var G__171991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__171992 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171991,G__171992) : tailrecursion.hoplon.markdown.code_node.call(null,G__171991,G__171992));
})(),", is the only glue we need. Data objects constructed from pairs are called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["list-structured"], null)], 0))," data. In fact, we will explore how lists are acutally implemented in Clojure and we will see that it is very similar to Scheme in that respect. For now, let",(function (){var G__171993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__171994 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__171993,G__171994) : tailrecursion.hoplon.markdown.simple_node.call(null,G__171993,G__171994));
})(),"s pretend like our ",(function (){var G__171995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__171996 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__171995,G__171996) : tailrecursion.hoplon.markdown.code_node.call(null,G__171995,G__171996));
})(),"s are really pairs (for the purposes of learning the lessons meant to be learned in the following sections)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__171985,G__171986) : tailrecursion.hoplon.markdown.para_node.call(null,G__171985,G__171986));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_171599;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_171598;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_171597;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_171596;
}})()], 0));
var G__170656 = "";
var G__170657 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Representing Rational Numbers"], null),(function (){var _STAR_references_STAR_171997 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_171998 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_171999 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_172000 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__172001 = cljs.core.PersistentArrayMap.EMPTY;
var G__172002 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Pairs offer a natural way to complete the rational-number system. Simply represent a rational number as a pair of two integers: a numerator and a denominator. Then ",(function (){var G__172003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__172004 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172003,G__172004) : tailrecursion.hoplon.markdown.code_node.call(null,G__172003,G__172004));
})(),", ",(function (){var G__172005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__172006 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172005,G__172006) : tailrecursion.hoplon.markdown.code_node.call(null,G__172005,G__172006));
})(),", and ",(function (){var G__172007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__172008 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172007,G__172008) : tailrecursion.hoplon.markdown.code_node.call(null,G__172007,G__172008));
})()," are readily implemented as follows:",(function (){var G__172009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__172010 = cljs.core.PersistentVector.fromArray(["Another way to define the selectors and constructor is ",(function (){var G__172011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(define make-rat cons)"], null);
var G__172012 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172011,G__172012) : tailrecursion.hoplon.markdown.code_node.call(null,G__172011,G__172012));
})()," ",(function (){var G__172013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(define numer car)"], null);
var G__172014 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172013,G__172014) : tailrecursion.hoplon.markdown.code_node.call(null,G__172013,G__172014));
})()," ",(function (){var G__172015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(define denom cdr)"], null);
var G__172016 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172015,G__172016) : tailrecursion.hoplon.markdown.code_node.call(null,G__172015,G__172016));
})()," The first definition associates the name ",(function (){var G__172017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__172018 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172017,G__172018) : tailrecursion.hoplon.markdown.code_node.call(null,G__172017,G__172018));
})()," with the value of the expression ",(function (){var G__172019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__172020 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172019,G__172020) : tailrecursion.hoplon.markdown.code_node.call(null,G__172019,G__172020));
})(),", which is the primitive procedure that constructs pairs. Thus ",(function (){var G__172021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__172022 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172021,G__172022) : tailrecursion.hoplon.markdown.code_node.call(null,G__172021,G__172022));
})()," and ",(function (){var G__172023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__172024 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172023,G__172024) : tailrecursion.hoplon.markdown.code_node.call(null,G__172023,G__172024));
})()," are names for the same primitive constructor. Defining selectors and constructors this way is efficient: Instead of ",(function (){var G__172025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__172026 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172025,G__172026) : tailrecursion.hoplon.markdown.code_node.call(null,G__172025,G__172026));
})()," ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["calling"], null)], 0))," ",(function (){var G__172027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__172028 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172027,G__172028) : tailrecursion.hoplon.markdown.code_node.call(null,G__172027,G__172028));
})(),", ",(function (){var G__172029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__172030 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172029,G__172030) : tailrecursion.hoplon.markdown.code_node.call(null,G__172029,G__172030));
})()," ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["is"], null)], 0))," ",(function (){var G__172031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__172032 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172031,G__172032) : tailrecursion.hoplon.markdown.code_node.call(null,G__172031,G__172032));
})(),", so there is only one procedure called, not two, when ",(function (){var G__172033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__172034 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172033,G__172034) : tailrecursion.hoplon.markdown.code_node.call(null,G__172033,G__172034));
})()," is called. On the other hand, doing this defeats debugging aids that trace procedure calls or put breakpoints on procedure calls: You may want to watch ",(function (){var G__172035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__172036 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172035,G__172036) : tailrecursion.hoplon.markdown.code_node.call(null,G__172035,G__172036));
})()," being called, but you certainly don not want to watch every call to ",(function (){var G__172037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__172038 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172037,G__172038) : tailrecursion.hoplon.markdown.code_node.call(null,G__172037,G__172038));
})(),"."], true);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__172009,G__172010) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__172009,G__172010));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__172001,G__172002) : tailrecursion.hoplon.markdown.para_node.call(null,G__172001,G__172002));
})(),(function (){var G__172110 = (function (){var G__172111 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__172112 = (function (){var G__172113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__172114 = "(";
var G__172115 = (function (){var G__172148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__172149 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172148,G__172149) : tailrecursion.hoplon.span.call(null,G__172148,G__172149));
})();
var G__172116 = "(";
var G__172117 = (function (){var G__172150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__172151 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172150,G__172151) : tailrecursion.hoplon.span.call(null,G__172150,G__172151));
})();
var G__172118 = " ";
var G__172119 = (function (){var G__172152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172153 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172152,G__172153) : tailrecursion.hoplon.span.call(null,G__172152,G__172153));
})();
var G__172120 = " ";
var G__172121 = (function (){var G__172154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172155 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172154,G__172155) : tailrecursion.hoplon.span.call(null,G__172154,G__172155));
})();
var G__172122 = ") (";
var G__172123 = (function (){var G__172156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__172157 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172156,G__172157) : tailrecursion.hoplon.span.call(null,G__172156,G__172157));
})();
var G__172124 = (function (){var G__172158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172159 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172158,G__172159) : tailrecursion.hoplon.span.call(null,G__172158,G__172159));
})();
var G__172125 = " ";
var G__172126 = (function (){var G__172160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172161 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172160,G__172161) : tailrecursion.hoplon.span.call(null,G__172160,G__172161));
})();
var G__172127 = "))\n(";
var G__172128 = (function (){var G__172162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__172163 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172162,G__172163) : tailrecursion.hoplon.span.call(null,G__172162,G__172163));
})();
var G__172129 = "(";
var G__172130 = (function (){var G__172164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__172165 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172164,G__172165) : tailrecursion.hoplon.span.call(null,G__172164,G__172165));
})();
var G__172131 = " ";
var G__172132 = (function (){var G__172166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172167 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172166,G__172167) : tailrecursion.hoplon.span.call(null,G__172166,G__172167));
})();
var G__172133 = ") (";
var G__172134 = (function (){var G__172168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__172169 = "first";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172168,G__172169) : tailrecursion.hoplon.span.call(null,G__172168,G__172169));
})();
var G__172135 = " ";
var G__172136 = (function (){var G__172170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172171 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172170,G__172171) : tailrecursion.hoplon.span.call(null,G__172170,G__172171));
})();
var G__172137 = "))\n(";
var G__172138 = (function (){var G__172172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__172173 = "define ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172172,G__172173) : tailrecursion.hoplon.span.call(null,G__172172,G__172173));
})();
var G__172139 = "(";
var G__172140 = (function (){var G__172174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__172175 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172174,G__172175) : tailrecursion.hoplon.span.call(null,G__172174,G__172175));
})();
var G__172141 = " ";
var G__172142 = (function (){var G__172176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172177 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172176,G__172177) : tailrecursion.hoplon.span.call(null,G__172176,G__172177));
})();
var G__172143 = ") (";
var G__172144 = (function (){var G__172178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__172179 = "second";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172178,G__172179) : tailrecursion.hoplon.span.call(null,G__172178,G__172179));
})();
var G__172145 = " ";
var G__172146 = (function (){var G__172180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172181 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172180,G__172181) : tailrecursion.hoplon.span.call(null,G__172180,G__172181));
})();
var G__172147 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35(G__172113,G__172114,G__172115,G__172116,G__172117,G__172118,G__172119,G__172120,G__172121,G__172122,G__172123,G__172124,G__172125,G__172126,G__172127,G__172128,G__172129,G__172130,G__172131,G__172132,G__172133,G__172134,G__172135,G__172136,G__172137,G__172138,G__172139,G__172140,G__172141,G__172142,G__172143,G__172144,G__172145,G__172146,G__172147) : tailrecursion.hoplon.pre.call(null,G__172113,G__172114,G__172115,G__172116,G__172117,G__172118,G__172119,G__172120,G__172121,G__172122,G__172123,G__172124,G__172125,G__172126,G__172127,G__172128,G__172129,G__172130,G__172131,G__172132,G__172133,G__172134,G__172135,G__172136,G__172137,G__172138,G__172139,G__172140,G__172141,G__172142,G__172143,G__172144,G__172145,G__172146,G__172147));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__172111,G__172112) : tailrecursion.hoplon.div.call(null,G__172111,G__172112));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__172110) : tailrecursion.hoplon.div.call(null,G__172110));
})(),(function (){var G__172182 = cljs.core.PersistentArrayMap.EMPTY;
var G__172183 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Also, in order to display the results of our computations, we can print rational numbers by printing the numerator, a slash, and the denominator.",(function (){var G__172184 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__172185 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note that ",(function (){var G__172186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"print"], null);
var G__172187 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172186,G__172187) : tailrecursion.hoplon.markdown.code_node.call(null,G__172186,G__172187));
})()," and ",(function (){var G__172188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"println"], null);
var G__172189 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172188,G__172189) : tailrecursion.hoplon.markdown.code_node.call(null,G__172188,G__172189));
})()," (there are others but we need not go into them right now) return values. Being as how the values are not currently of use to us, we show only what these functions print and not what the interpreter prints as the returned values."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__172184,G__172185) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__172184,G__172185));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__172182,G__172183) : tailrecursion.hoplon.markdown.para_node.call(null,G__172182,G__172183));
})(),(function (){var G__172229 = (function (){var G__172230 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__172231 = (function (){var G__172232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__172233 = "(";
var G__172234 = (function (){var G__172251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__172252 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172251,G__172252) : tailrecursion.hoplon.span.call(null,G__172251,G__172252));
})();
var G__172235 = (function (){var G__172253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172254 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172253,G__172254) : tailrecursion.hoplon.span.call(null,G__172253,G__172254));
})();
var G__172236 = " [";
var G__172237 = (function (){var G__172255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172256 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172255,G__172256) : tailrecursion.hoplon.span.call(null,G__172255,G__172256));
})();
var G__172238 = "]\n  (";
var G__172239 = (function (){var G__172257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__172258 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172257,G__172258) : tailrecursion.hoplon.span.call(null,G__172257,G__172258));
})();
var G__172240 = "(";
var G__172241 = (function (){var G__172259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__172260 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172259,G__172260) : tailrecursion.hoplon.span.call(null,G__172259,G__172260));
})();
var G__172242 = " ";
var G__172243 = (function (){var G__172261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172262 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172261,G__172262) : tailrecursion.hoplon.span.call(null,G__172261,G__172262));
})();
var G__172244 = ") ";
var G__172245 = (function (){var G__172263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__172264 = "\"/\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172263,G__172264) : tailrecursion.hoplon.span.call(null,G__172263,G__172264));
})();
var G__172246 = " (";
var G__172247 = (function (){var G__172265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__172266 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172265,G__172266) : tailrecursion.hoplon.span.call(null,G__172265,G__172266));
})();
var G__172248 = " ";
var G__172249 = (function (){var G__172267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172268 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172267,G__172268) : tailrecursion.hoplon.span.call(null,G__172267,G__172268));
})();
var G__172250 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__172232,G__172233,G__172234,G__172235,G__172236,G__172237,G__172238,G__172239,G__172240,G__172241,G__172242,G__172243,G__172244,G__172245,G__172246,G__172247,G__172248,G__172249,G__172250) : tailrecursion.hoplon.pre.call(null,G__172232,G__172233,G__172234,G__172235,G__172236,G__172237,G__172238,G__172239,G__172240,G__172241,G__172242,G__172243,G__172244,G__172245,G__172246,G__172247,G__172248,G__172249,G__172250));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__172230,G__172231) : tailrecursion.hoplon.div.call(null,G__172230,G__172231));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__172229) : tailrecursion.hoplon.div.call(null,G__172229));
})(),(function (){var G__172269 = cljs.core.PersistentArrayMap.EMPTY;
var G__172270 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note that ",(function (){var G__172271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"println"], null);
var G__172272 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172271,G__172272) : tailrecursion.hoplon.markdown.code_node.call(null,G__172271,G__172272));
})()," is a function that takes any number of arguments, converts them to a string, prints them to the screen followed by a new line, then it returns the value ",(function (){var G__172273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nil"], null);
var G__172274 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172273,G__172274) : tailrecursion.hoplon.markdown.code_node.call(null,G__172273,G__172274));
})()," (remember, everything has a value in Lisp!)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__172269,G__172270) : tailrecursion.hoplon.markdown.para_node.call(null,G__172269,G__172270));
})(),(function (){var G__172275 = cljs.core.PersistentArrayMap.EMPTY;
var G__172276 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we can try our rational-number procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__172275,G__172276) : tailrecursion.hoplon.markdown.para_node.call(null,G__172275,G__172276));
})(),(function (){var G__172403 = (function (){var G__172404 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__172405 = (function (){var G__172406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__172407 = "(";
var G__172408 = (function (){var G__172466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__172467 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172466,G__172467) : tailrecursion.hoplon.span.call(null,G__172466,G__172467));
})();
var G__172409 = (function (){var G__172468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172469 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172468,G__172469) : tailrecursion.hoplon.span.call(null,G__172468,G__172469));
})();
var G__172410 = " (";
var G__172411 = (function (){var G__172470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__172471 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172470,G__172471) : tailrecursion.hoplon.span.call(null,G__172470,G__172471));
})();
var G__172412 = " ";
var G__172413 = (function (){var G__172472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__172473 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172472,G__172473) : tailrecursion.hoplon.span.call(null,G__172472,G__172473));
})();
var G__172414 = " ";
var G__172415 = (function (){var G__172474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__172475 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172474,G__172475) : tailrecursion.hoplon.span.call(null,G__172474,G__172475));
})();
var G__172416 = "))\n(";
var G__172417 = (function (){var G__172476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__172477 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172476,G__172477) : tailrecursion.hoplon.span.call(null,G__172476,G__172477));
})();
var G__172418 = " ";
var G__172419 = (function (){var G__172478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172479 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172478,G__172479) : tailrecursion.hoplon.span.call(null,G__172478,G__172479));
})();
var G__172420 = ")\n";
var G__172421 = (function (){var G__172480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__172481 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172480,G__172481) : tailrecursion.hoplon.span.call(null,G__172480,G__172481));
})();
var G__172422 = (function (){var G__172482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172483 = "/2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172482,G__172483) : tailrecursion.hoplon.span.call(null,G__172482,G__172483));
})();
var G__172423 = "\n\n(";
var G__172424 = (function (){var G__172484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__172485 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172484,G__172485) : tailrecursion.hoplon.span.call(null,G__172484,G__172485));
})();
var G__172425 = (function (){var G__172486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172487 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172486,G__172487) : tailrecursion.hoplon.span.call(null,G__172486,G__172487));
})();
var G__172426 = " (";
var G__172427 = (function (){var G__172488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__172489 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172488,G__172489) : tailrecursion.hoplon.span.call(null,G__172488,G__172489));
})();
var G__172428 = " ";
var G__172429 = (function (){var G__172490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__172491 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172490,G__172491) : tailrecursion.hoplon.span.call(null,G__172490,G__172491));
})();
var G__172430 = " ";
var G__172431 = (function (){var G__172492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__172493 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172492,G__172493) : tailrecursion.hoplon.span.call(null,G__172492,G__172493));
})();
var G__172432 = "))\n(";
var G__172433 = (function (){var G__172494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__172495 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172494,G__172495) : tailrecursion.hoplon.span.call(null,G__172494,G__172495));
})();
var G__172434 = " (";
var G__172435 = (function (){var G__172496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__172497 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172496,G__172497) : tailrecursion.hoplon.span.call(null,G__172496,G__172497));
})();
var G__172436 = " ";
var G__172437 = (function (){var G__172498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172499 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172498,G__172499) : tailrecursion.hoplon.span.call(null,G__172498,G__172499));
})();
var G__172438 = " ";
var G__172439 = (function (){var G__172500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172501 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172500,G__172501) : tailrecursion.hoplon.span.call(null,G__172500,G__172501));
})();
var G__172440 = "))\n";
var G__172441 = (function (){var G__172502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__172503 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172502,G__172503) : tailrecursion.hoplon.span.call(null,G__172502,G__172503));
})();
var G__172442 = (function (){var G__172504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172505 = "/6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172504,G__172505) : tailrecursion.hoplon.span.call(null,G__172504,G__172505));
})();
var G__172443 = "\n\n(";
var G__172444 = (function (){var G__172506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__172507 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172506,G__172507) : tailrecursion.hoplon.span.call(null,G__172506,G__172507));
})();
var G__172445 = " (";
var G__172446 = (function (){var G__172508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__172509 = "mul-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172508,G__172509) : tailrecursion.hoplon.span.call(null,G__172508,G__172509));
})();
var G__172447 = " ";
var G__172448 = (function (){var G__172510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172511 = "one-half";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172510,G__172511) : tailrecursion.hoplon.span.call(null,G__172510,G__172511));
})();
var G__172449 = " ";
var G__172450 = (function (){var G__172512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172513 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172512,G__172513) : tailrecursion.hoplon.span.call(null,G__172512,G__172513));
})();
var G__172451 = "))\n";
var G__172452 = (function (){var G__172514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__172515 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172514,G__172515) : tailrecursion.hoplon.span.call(null,G__172514,G__172515));
})();
var G__172453 = (function (){var G__172516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172517 = "/6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172516,G__172517) : tailrecursion.hoplon.span.call(null,G__172516,G__172517));
})();
var G__172454 = "\n\n(";
var G__172455 = (function (){var G__172518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__172519 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172518,G__172519) : tailrecursion.hoplon.span.call(null,G__172518,G__172519));
})();
var G__172456 = " (";
var G__172457 = (function (){var G__172520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__172521 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172520,G__172521) : tailrecursion.hoplon.span.call(null,G__172520,G__172521));
})();
var G__172458 = " ";
var G__172459 = (function (){var G__172522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172523 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172522,G__172523) : tailrecursion.hoplon.span.call(null,G__172522,G__172523));
})();
var G__172460 = " ";
var G__172461 = (function (){var G__172524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172525 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172524,G__172525) : tailrecursion.hoplon.span.call(null,G__172524,G__172525));
})();
var G__172462 = "))\n";
var G__172463 = (function (){var G__172526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__172527 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172526,G__172527) : tailrecursion.hoplon.span.call(null,G__172526,G__172527));
})();
var G__172464 = (function (){var G__172528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172529 = "/9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172528,G__172529) : tailrecursion.hoplon.span.call(null,G__172528,G__172529));
})();
var G__172465 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60(G__172406,G__172407,G__172408,G__172409,G__172410,G__172411,G__172412,G__172413,G__172414,G__172415,G__172416,G__172417,G__172418,G__172419,G__172420,G__172421,G__172422,G__172423,G__172424,G__172425,G__172426,G__172427,G__172428,G__172429,G__172430,G__172431,G__172432,G__172433,G__172434,G__172435,G__172436,G__172437,G__172438,G__172439,G__172440,G__172441,G__172442,G__172443,G__172444,G__172445,G__172446,G__172447,G__172448,G__172449,G__172450,G__172451,G__172452,G__172453,G__172454,G__172455,G__172456,G__172457,G__172458,G__172459,G__172460,G__172461,G__172462,G__172463,G__172464,G__172465) : tailrecursion.hoplon.pre.call(null,G__172406,G__172407,G__172408,G__172409,G__172410,G__172411,G__172412,G__172413,G__172414,G__172415,G__172416,G__172417,G__172418,G__172419,G__172420,G__172421,G__172422,G__172423,G__172424,G__172425,G__172426,G__172427,G__172428,G__172429,G__172430,G__172431,G__172432,G__172433,G__172434,G__172435,G__172436,G__172437,G__172438,G__172439,G__172440,G__172441,G__172442,G__172443,G__172444,G__172445,G__172446,G__172447,G__172448,G__172449,G__172450,G__172451,G__172452,G__172453,G__172454,G__172455,G__172456,G__172457,G__172458,G__172459,G__172460,G__172461,G__172462,G__172463,G__172464,G__172465));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__172404,G__172405) : tailrecursion.hoplon.div.call(null,G__172404,G__172405));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__172403) : tailrecursion.hoplon.div.call(null,G__172403));
})(),(function (){var G__172530 = cljs.core.PersistentArrayMap.EMPTY;
var G__172531 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As the final example shows, our rational-number implementation does not reduce rational numbers to lowest terms. We can rememdy this by changing ",(function (){var G__172532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__172533 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172532,G__172533) : tailrecursion.hoplon.markdown.code_node.call(null,G__172532,G__172533));
})(),". If we have a ",(function (){var G__172534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__172535 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172534,G__172535) : tailrecursion.hoplon.markdown.code_node.call(null,G__172534,G__172535));
})()," procedure like the one used in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/2/sub/5/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.5"], null)], 0))," that produces the greatest common divisor of two integers, we can use ",(function (){var G__172536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__172537 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172536,G__172537) : tailrecursion.hoplon.markdown.code_node.call(null,G__172536,G__172537));
})()," to reduce the numerator and the denominator to lowest terms before constructing the pair:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__172530,G__172531) : tailrecursion.hoplon.markdown.para_node.call(null,G__172530,G__172531));
})(),(function (){var G__172603 = (function (){var G__172604 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__172605 = (function (){var G__172606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__172607 = "(";
var G__172608 = (function (){var G__172637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__172638 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172637,G__172638) : tailrecursion.hoplon.span.call(null,G__172637,G__172638));
})();
var G__172609 = (function (){var G__172639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172640 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172639,G__172640) : tailrecursion.hoplon.span.call(null,G__172639,G__172640));
})();
var G__172610 = " [";
var G__172611 = (function (){var G__172641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172642 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172641,G__172642) : tailrecursion.hoplon.span.call(null,G__172641,G__172642));
})();
var G__172612 = " ";
var G__172613 = (function (){var G__172643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172644 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172643,G__172644) : tailrecursion.hoplon.span.call(null,G__172643,G__172644));
})();
var G__172614 = "]\n  (";
var G__172615 = (function (){var G__172645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__172646 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172645,G__172646) : tailrecursion.hoplon.span.call(null,G__172645,G__172646));
})();
var G__172616 = "[";
var G__172617 = (function (){var G__172647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172648 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172647,G__172648) : tailrecursion.hoplon.span.call(null,G__172647,G__172648));
})();
var G__172618 = " (";
var G__172619 = (function (){var G__172649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__172650 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172649,G__172650) : tailrecursion.hoplon.span.call(null,G__172649,G__172650));
})();
var G__172620 = " ";
var G__172621 = (function (){var G__172651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172652 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172651,G__172652) : tailrecursion.hoplon.span.call(null,G__172651,G__172652));
})();
var G__172622 = " ";
var G__172623 = (function (){var G__172653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172654 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172653,G__172654) : tailrecursion.hoplon.span.call(null,G__172653,G__172654));
})();
var G__172624 = ")]\n    (";
var G__172625 = (function (){var G__172655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__172656 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172655,G__172656) : tailrecursion.hoplon.span.call(null,G__172655,G__172656));
})();
var G__172626 = "(";
var G__172627 = (function (){var G__172657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__172658 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172657,G__172658) : tailrecursion.hoplon.span.call(null,G__172657,G__172658));
})();
var G__172628 = (function (){var G__172659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172660 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172659,G__172660) : tailrecursion.hoplon.span.call(null,G__172659,G__172660));
})();
var G__172629 = " ";
var G__172630 = (function (){var G__172661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172662 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172661,G__172662) : tailrecursion.hoplon.span.call(null,G__172661,G__172662));
})();
var G__172631 = ") (";
var G__172632 = (function (){var G__172663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__172664 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172663,G__172664) : tailrecursion.hoplon.span.call(null,G__172663,G__172664));
})();
var G__172633 = (function (){var G__172665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172666 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172665,G__172666) : tailrecursion.hoplon.span.call(null,G__172665,G__172666));
})();
var G__172634 = " ";
var G__172635 = (function (){var G__172667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172668 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172667,G__172668) : tailrecursion.hoplon.span.call(null,G__172667,G__172668));
})();
var G__172636 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__172606,G__172607,G__172608,G__172609,G__172610,G__172611,G__172612,G__172613,G__172614,G__172615,G__172616,G__172617,G__172618,G__172619,G__172620,G__172621,G__172622,G__172623,G__172624,G__172625,G__172626,G__172627,G__172628,G__172629,G__172630,G__172631,G__172632,G__172633,G__172634,G__172635,G__172636) : tailrecursion.hoplon.pre.call(null,G__172606,G__172607,G__172608,G__172609,G__172610,G__172611,G__172612,G__172613,G__172614,G__172615,G__172616,G__172617,G__172618,G__172619,G__172620,G__172621,G__172622,G__172623,G__172624,G__172625,G__172626,G__172627,G__172628,G__172629,G__172630,G__172631,G__172632,G__172633,G__172634,G__172635,G__172636));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__172604,G__172605) : tailrecursion.hoplon.div.call(null,G__172604,G__172605));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__172603) : tailrecursion.hoplon.div.call(null,G__172603));
})(),(function (){var G__172669 = cljs.core.PersistentArrayMap.EMPTY;
var G__172670 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we have,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__172669,G__172670) : tailrecursion.hoplon.markdown.para_node.call(null,G__172669,G__172670));
})(),(function (){var G__172698 = (function (){var G__172699 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__172700 = (function (){var G__172701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__172702 = "(";
var G__172703 = (function (){var G__172714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__172715 = "print-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172714,G__172715) : tailrecursion.hoplon.span.call(null,G__172714,G__172715));
})();
var G__172704 = " (";
var G__172705 = (function (){var G__172716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__172717 = "add-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172716,G__172717) : tailrecursion.hoplon.span.call(null,G__172716,G__172717));
})();
var G__172706 = " ";
var G__172707 = (function (){var G__172718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172719 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172718,G__172719) : tailrecursion.hoplon.span.call(null,G__172718,G__172719));
})();
var G__172708 = " ";
var G__172709 = (function (){var G__172720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172721 = "one-third";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172720,G__172721) : tailrecursion.hoplon.span.call(null,G__172720,G__172721));
})();
var G__172710 = "))\n";
var G__172711 = (function (){var G__172722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__172723 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172722,G__172723) : tailrecursion.hoplon.span.call(null,G__172722,G__172723));
})();
var G__172712 = (function (){var G__172724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172725 = "/3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172724,G__172725) : tailrecursion.hoplon.span.call(null,G__172724,G__172725));
})();
var G__172713 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__172701,G__172702,G__172703,G__172704,G__172705,G__172706,G__172707,G__172708,G__172709,G__172710,G__172711,G__172712,G__172713) : tailrecursion.hoplon.pre.call(null,G__172701,G__172702,G__172703,G__172704,G__172705,G__172706,G__172707,G__172708,G__172709,G__172710,G__172711,G__172712,G__172713));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__172699,G__172700) : tailrecursion.hoplon.div.call(null,G__172699,G__172700));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__172698) : tailrecursion.hoplon.div.call(null,G__172698));
})(),(function (){var G__172726 = cljs.core.PersistentArrayMap.EMPTY;
var G__172727 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["as desired. This modification was accomplished by changing the constructor ",(function (){var G__172728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__172729 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172728,G__172729) : tailrecursion.hoplon.markdown.code_node.call(null,G__172728,G__172729));
})()," without changing any of the procedures (such as ",(function (){var G__172730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__172731 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172730,G__172731) : tailrecursion.hoplon.markdown.code_node.call(null,G__172730,G__172731));
})()," and ",(function (){var G__172732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mul-rat"], null);
var G__172733 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172732,G__172733) : tailrecursion.hoplon.markdown.code_node.call(null,G__172732,G__172733));
})(),") that implement the actual operations."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__172726,G__172727) : tailrecursion.hoplon.markdown.para_node.call(null,G__172726,G__172727));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_172000;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_171999;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_171998;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_171997;
}})()], 0));
var G__170658 = "";
var G__170659 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_172734 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_172735 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_172736 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_172737 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__172738 = cljs.core.PersistentArrayMap.EMPTY;
var G__172739 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a better version of ",(function (){var G__172740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__172741 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172740,G__172741) : tailrecursion.hoplon.markdown.code_node.call(null,G__172740,G__172741));
})()," that handles both positive and negative arguments. ",(function (){var G__172742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__172743 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__172742,G__172743) : tailrecursion.hoplon.markdown.code_node.call(null,G__172742,G__172743));
})()," should normalize the sign so that if the rational number is positive, both the numerator and denominator are positive, and if the rational number is negative, only the numerator is negative."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__172738,G__172739) : tailrecursion.hoplon.markdown.para_node.call(null,G__172738,G__172739));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_172737;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_172736;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_172735;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_172734;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_172744 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_172745 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_172746 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_172747 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__172892 = (function (){var G__172893 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__172894 = (function (){var G__172895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__172896 = "(";
var G__172897 = (function (){var G__172965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__172966 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172965,G__172966) : tailrecursion.hoplon.span.call(null,G__172965,G__172966));
})();
var G__172898 = (function (){var G__172967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172968 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172967,G__172968) : tailrecursion.hoplon.span.call(null,G__172967,G__172968));
})();
var G__172899 = " [";
var G__172900 = (function (){var G__172969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172970 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172969,G__172970) : tailrecursion.hoplon.span.call(null,G__172969,G__172970));
})();
var G__172901 = " ";
var G__172902 = (function (){var G__172971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172972 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172971,G__172972) : tailrecursion.hoplon.span.call(null,G__172971,G__172972));
})();
var G__172903 = "]\n  (";
var G__172904 = (function (){var G__172973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__172974 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172973,G__172974) : tailrecursion.hoplon.span.call(null,G__172973,G__172974));
})();
var G__172905 = "[";
var G__172906 = (function (){var G__172975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172976 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172975,G__172976) : tailrecursion.hoplon.span.call(null,G__172975,G__172976));
})();
var G__172907 = " ";
var G__172908 = (function (){var G__172977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__172978 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172977,G__172978) : tailrecursion.hoplon.span.call(null,G__172977,G__172978));
})();
var G__172909 = "(";
var G__172910 = (function (){var G__172979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__172980 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172979,G__172980) : tailrecursion.hoplon.span.call(null,G__172979,G__172980));
})();
var G__172911 = "[";
var G__172912 = (function (){var G__172981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172982 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172981,G__172982) : tailrecursion.hoplon.span.call(null,G__172981,G__172982));
})();
var G__172913 = " (";
var G__172914 = (function (){var G__172983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__172984 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172983,G__172984) : tailrecursion.hoplon.span.call(null,G__172983,G__172984));
})();
var G__172915 = " ";
var G__172916 = (function (){var G__172985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172986 = "%1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172985,G__172986) : tailrecursion.hoplon.span.call(null,G__172985,G__172986));
})();
var G__172917 = " ";
var G__172918 = (function (){var G__172987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172988 = "%2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172987,G__172988) : tailrecursion.hoplon.span.call(null,G__172987,G__172988));
})();
var G__172919 = ")]\n                (";
var G__172920 = (function (){var G__172989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__172990 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172989,G__172990) : tailrecursion.hoplon.span.call(null,G__172989,G__172990));
})();
var G__172921 = "(";
var G__172922 = (function (){var G__172991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__172992 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172991,G__172992) : tailrecursion.hoplon.span.call(null,G__172991,G__172992));
})();
var G__172923 = (function (){var G__172993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172994 = "%1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172993,G__172994) : tailrecursion.hoplon.span.call(null,G__172993,G__172994));
})();
var G__172924 = " ";
var G__172925 = (function (){var G__172995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__172996 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172995,G__172996) : tailrecursion.hoplon.span.call(null,G__172995,G__172996));
})();
var G__172926 = ") (";
var G__172927 = (function (){var G__172997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__172998 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172997,G__172998) : tailrecursion.hoplon.span.call(null,G__172997,G__172998));
})();
var G__172928 = (function (){var G__172999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173000 = "%2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__172999,G__173000) : tailrecursion.hoplon.span.call(null,G__172999,G__173000));
})();
var G__172929 = " ";
var G__172930 = (function (){var G__173001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173002 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173001,G__173002) : tailrecursion.hoplon.span.call(null,G__173001,G__173002));
})();
var G__172931 = ")))]\n    (";
var G__172932 = (function (){var G__173003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__173004 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173003,G__173004) : tailrecursion.hoplon.span.call(null,G__173003,G__173004));
})();
var G__172933 = "(";
var G__172934 = (function (){var G__173005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__173006 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173005,G__173006) : tailrecursion.hoplon.span.call(null,G__173005,G__173006));
})();
var G__172935 = "(";
var G__172936 = (function (){var G__173007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__173008 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173007,G__173008) : tailrecursion.hoplon.span.call(null,G__173007,G__173008));
})();
var G__172937 = (function (){var G__173009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173010 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173009,G__173010) : tailrecursion.hoplon.span.call(null,G__173009,G__173010));
})();
var G__172938 = " ";
var G__172939 = (function (){var G__173011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173012 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173011,G__173012) : tailrecursion.hoplon.span.call(null,G__173011,G__173012));
})();
var G__172940 = ") ";
var G__172941 = (function (){var G__173013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__173014 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173013,G__173014) : tailrecursion.hoplon.span.call(null,G__173013,G__173014));
})();
var G__172942 = ")\n        (";
var G__172943 = (function (){var G__173015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__173016 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173015,G__173016) : tailrecursion.hoplon.span.call(null,G__173015,G__173016));
})();
var G__172944 = " (";
var G__172945 = (function (){var G__173017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__173018 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173017,G__173018) : tailrecursion.hoplon.span.call(null,G__173017,G__173018));
})();
var G__172946 = " ";
var G__172947 = (function (){var G__173019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173020 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173019,G__173020) : tailrecursion.hoplon.span.call(null,G__173019,G__173020));
})();
var G__172948 = ") (";
var G__172949 = (function (){var G__173021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__173022 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173021,G__173022) : tailrecursion.hoplon.span.call(null,G__173021,G__173022));
})();
var G__172950 = " ";
var G__172951 = (function (){var G__173023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173024 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173023,G__173024) : tailrecursion.hoplon.span.call(null,G__173023,G__173024));
})();
var G__172952 = "))\n        (";
var G__172953 = (function (){var G__173025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__173026 = "doit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173025,G__173026) : tailrecursion.hoplon.span.call(null,G__173025,G__173026));
})();
var G__172954 = " (";
var G__172955 = (function (){var G__173027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__173028 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173027,G__173028) : tailrecursion.hoplon.span.call(null,G__173027,G__173028));
})();
var G__172956 = "(";
var G__172957 = (function (){var G__173029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__173030 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173029,G__173030) : tailrecursion.hoplon.span.call(null,G__173029,G__173030));
})();
var G__172958 = " ";
var G__172959 = (function (){var G__173031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173032 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173031,G__173032) : tailrecursion.hoplon.span.call(null,G__173031,G__173032));
})();
var G__172960 = ")) (";
var G__172961 = (function (){var G__173033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__173034 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173033,G__173034) : tailrecursion.hoplon.span.call(null,G__173033,G__173034));
})();
var G__172962 = " ";
var G__172963 = (function (){var G__173035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173036 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173035,G__173036) : tailrecursion.hoplon.span.call(null,G__173035,G__173036));
})();
var G__172964 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$70 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$70(G__172895,G__172896,G__172897,G__172898,G__172899,G__172900,G__172901,G__172902,G__172903,G__172904,G__172905,G__172906,G__172907,G__172908,G__172909,G__172910,G__172911,G__172912,G__172913,G__172914,G__172915,G__172916,G__172917,G__172918,G__172919,G__172920,G__172921,G__172922,G__172923,G__172924,G__172925,G__172926,G__172927,G__172928,G__172929,G__172930,G__172931,G__172932,G__172933,G__172934,G__172935,G__172936,G__172937,G__172938,G__172939,G__172940,G__172941,G__172942,G__172943,G__172944,G__172945,G__172946,G__172947,G__172948,G__172949,G__172950,G__172951,G__172952,G__172953,G__172954,G__172955,G__172956,G__172957,G__172958,G__172959,G__172960,G__172961,G__172962,G__172963,G__172964) : tailrecursion.hoplon.pre.call(null,G__172895,G__172896,G__172897,G__172898,G__172899,G__172900,G__172901,G__172902,G__172903,G__172904,G__172905,G__172906,G__172907,G__172908,G__172909,G__172910,G__172911,G__172912,G__172913,G__172914,G__172915,G__172916,G__172917,G__172918,G__172919,G__172920,G__172921,G__172922,G__172923,G__172924,G__172925,G__172926,G__172927,G__172928,G__172929,G__172930,G__172931,G__172932,G__172933,G__172934,G__172935,G__172936,G__172937,G__172938,G__172939,G__172940,G__172941,G__172942,G__172943,G__172944,G__172945,G__172946,G__172947,G__172948,G__172949,G__172950,G__172951,G__172952,G__172953,G__172954,G__172955,G__172956,G__172957,G__172958,G__172959,G__172960,G__172961,G__172962,G__172963,G__172964));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__172893,G__172894) : tailrecursion.hoplon.div.call(null,G__172893,G__172894));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__172892) : tailrecursion.hoplon.div.call(null,G__172892));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_172747;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_172746;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_172745;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_172744;
}})()], 0))], 0))], 0));
var G__170660 = "";
var G__170661 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Abstraction Barriers"], null),(function (){var _STAR_references_STAR_173037 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_173038 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_173039 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_173040 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__173041 = cljs.core.PersistentArrayMap.EMPTY;
var G__173042 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Before continuing with more examples of compound data and data abstraction, let us consider some of the issues raised by the rational-number example. We defined the rational-number operations in terms of a constructor ",(function (){var G__173043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__173044 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173043,G__173044) : tailrecursion.hoplon.markdown.code_node.call(null,G__173043,G__173044));
})()," and selectors ",(function (){var G__173045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__173046 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173045,G__173046) : tailrecursion.hoplon.markdown.code_node.call(null,G__173045,G__173046));
})()," and ",(function (){var G__173047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__173048 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173047,G__173048) : tailrecursion.hoplon.markdown.code_node.call(null,G__173047,G__173048));
})(),". In general, the underlying idea of data abstraction is to identify for each type of data object the basic set of operations in terms of which all manipulations op data objects of that type will be expressed, and then to use only those operations in manipulating the data."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__173041,G__173042) : tailrecursion.hoplon.markdown.para_node.call(null,G__173041,G__173042));
})(),(function (){var G__173049 = cljs.core.PersistentArrayMap.EMPTY;
var G__173050 = new cljs.core.PersistentVector(null, 27, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can envision the structure of the rational-number system as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/fig/1/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 2.1"], null)], 0)),". The horizontal lines represent ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstraction barriers"], null)], 0))," that isolate different ",(function (){var G__173051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__173052 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["levels"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__173051,G__173052) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__173051,G__173052));
})()," of the system. At each level, the barrier separates the programs (above) that use th edata abstraction from the programs (below) that implement the data abstraction. Programs that use rational numbers manipulate them solely in terms of the procedures supplied ",(function (){var G__173053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__173054 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["for public use"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__173053,G__173054) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__173053,G__173054));
})()," by the rational-number package: ",(function (){var G__173055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__173056 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173055,G__173056) : tailrecursion.hoplon.markdown.code_node.call(null,G__173055,G__173056));
})(),", ",(function (){var G__173057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-rat"], null);
var G__173058 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173057,G__173058) : tailrecursion.hoplon.markdown.code_node.call(null,G__173057,G__173058));
})(),", ",(function (){var G__173059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mul-rat"], null);
var G__173060 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173059,G__173060) : tailrecursion.hoplon.markdown.code_node.call(null,G__173059,G__173060));
})(),", ",(function (){var G__173061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"div-rat"], null);
var G__173062 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173061,G__173062) : tailrecursion.hoplon.markdown.code_node.call(null,G__173061,G__173062));
})(),", ",(function (){var G__173063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__173064 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173063,G__173064) : tailrecursion.hoplon.markdown.code_node.call(null,G__173063,G__173064));
})(),", and ",(function (){var G__173065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__173066 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173065,G__173066) : tailrecursion.hoplon.markdown.code_node.call(null,G__173065,G__173066));
})(),", which themselves are implemented in terms of lists. The details of how lists are implemented are irrelevant to the rest of the rational-number package so long as lists can be manipulated by the use of ",(function (){var G__173067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__173068 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173067,G__173068) : tailrecursion.hoplon.markdown.code_node.call(null,G__173067,G__173068));
})(),", ",(function (){var G__173069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__173070 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173069,G__173070) : tailrecursion.hoplon.markdown.code_node.call(null,G__173069,G__173070));
})(),", and ",(function (){var G__173071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__173072 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173071,G__173072) : tailrecursion.hoplon.markdown.code_node.call(null,G__173071,G__173072));
})(),". In effect, procedures at each level are the interfaces that define the abstraction barriers and connect the different levels."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__173049,G__173050) : tailrecursion.hoplon.markdown.para_node.call(null,G__173049,G__173050));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_173040;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_173039;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_173038;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_173037;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"Data-abstraction barriers in the rational-number package."], null)], 0)),"",(function (){var _STAR_references_STAR_173073 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_173074 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_173075 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_173076 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__173077 = cljs.core.PersistentArrayMap.EMPTY;
var G__173078 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This simple idea has many advantages. One advantage is that it makes programs much easier to maintain and modify. Any complex data structure can be represented in a variety of ways within primitive data structures provided by a programming language. Of course, the choice of representation influences the programs that operate on it; thus, if the representation were to be changed at some later time, all such programs might have to be modified accordingly. This task could be time-consuming and expensive in the vase of large programs unless the dependence on the representation were to be confined by design to a very few program modules."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__173077,G__173078) : tailrecursion.hoplon.markdown.para_node.call(null,G__173077,G__173078));
})(),(function (){var G__173079 = cljs.core.PersistentArrayMap.EMPTY;
var G__173080 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For example, an alternate way to address the problem of reducing rational numbers to lowest terms is to perform the reduction whenever we acces the parts of a rational number, rather than when we construct it. This leads to different constructor and selector procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__173079,G__173080) : tailrecursion.hoplon.markdown.para_node.call(null,G__173079,G__173080));
})(),(function (){var G__173215 = (function (){var G__173216 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__173217 = (function (){var G__173218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__173219 = "(";
var G__173220 = (function (){var G__173280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__173281 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173280,G__173281) : tailrecursion.hoplon.span.call(null,G__173280,G__173281));
})();
var G__173221 = (function (){var G__173282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173283 = "make-rat";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173282,G__173283) : tailrecursion.hoplon.span.call(null,G__173282,G__173283));
})();
var G__173222 = " [";
var G__173223 = (function (){var G__173284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173285 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173284,G__173285) : tailrecursion.hoplon.span.call(null,G__173284,G__173285));
})();
var G__173224 = " ";
var G__173225 = (function (){var G__173286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173287 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173286,G__173287) : tailrecursion.hoplon.span.call(null,G__173286,G__173287));
})();
var G__173226 = "]\n  (";
var G__173227 = (function (){var G__173288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__173289 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173288,G__173289) : tailrecursion.hoplon.span.call(null,G__173288,G__173289));
})();
var G__173228 = (function (){var G__173290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173291 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173290,G__173291) : tailrecursion.hoplon.span.call(null,G__173290,G__173291));
})();
var G__173229 = " ";
var G__173230 = (function (){var G__173292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173293 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173292,G__173293) : tailrecursion.hoplon.span.call(null,G__173292,G__173293));
})();
var G__173231 = "))\n(";
var G__173232 = (function (){var G__173294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__173295 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173294,G__173295) : tailrecursion.hoplon.span.call(null,G__173294,G__173295));
})();
var G__173233 = (function (){var G__173296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173297 = "numer";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173296,G__173297) : tailrecursion.hoplon.span.call(null,G__173296,G__173297));
})();
var G__173234 = " [";
var G__173235 = (function (){var G__173298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173299 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173298,G__173299) : tailrecursion.hoplon.span.call(null,G__173298,G__173299));
})();
var G__173236 = "]\n  (";
var G__173237 = (function (){var G__173300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__173301 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173300,G__173301) : tailrecursion.hoplon.span.call(null,G__173300,G__173301));
})();
var G__173238 = "[";
var G__173239 = (function (){var G__173302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173303 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173302,G__173303) : tailrecursion.hoplon.span.call(null,G__173302,G__173303));
})();
var G__173240 = " (";
var G__173241 = (function (){var G__173304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__173305 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173304,G__173305) : tailrecursion.hoplon.span.call(null,G__173304,G__173305));
})();
var G__173242 = " (";
var G__173243 = (function (){var G__173306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__173307 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173306,G__173307) : tailrecursion.hoplon.span.call(null,G__173306,G__173307));
})();
var G__173244 = (function (){var G__173308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173309 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173308,G__173309) : tailrecursion.hoplon.span.call(null,G__173308,G__173309));
})();
var G__173245 = ") (";
var G__173246 = (function (){var G__173310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__173311 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173310,G__173311) : tailrecursion.hoplon.span.call(null,G__173310,G__173311));
})();
var G__173247 = (function (){var G__173312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173313 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173312,G__173313) : tailrecursion.hoplon.span.call(null,G__173312,G__173313));
})();
var G__173248 = "))]\n    (";
var G__173249 = (function (){var G__173314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__173315 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173314,G__173315) : tailrecursion.hoplon.span.call(null,G__173314,G__173315));
})();
var G__173250 = "(";
var G__173251 = (function (){var G__173316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__173317 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173316,G__173317) : tailrecursion.hoplon.span.call(null,G__173316,G__173317));
})();
var G__173252 = (function (){var G__173318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173319 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173318,G__173319) : tailrecursion.hoplon.span.call(null,G__173318,G__173319));
})();
var G__173253 = ") ";
var G__173254 = (function (){var G__173320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173321 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173320,G__173321) : tailrecursion.hoplon.span.call(null,G__173320,G__173321));
})();
var G__173255 = ")))\n(";
var G__173256 = (function (){var G__173322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__173323 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173322,G__173323) : tailrecursion.hoplon.span.call(null,G__173322,G__173323));
})();
var G__173257 = (function (){var G__173324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173325 = "denom";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173324,G__173325) : tailrecursion.hoplon.span.call(null,G__173324,G__173325));
})();
var G__173258 = " [";
var G__173259 = (function (){var G__173326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173327 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173326,G__173327) : tailrecursion.hoplon.span.call(null,G__173326,G__173327));
})();
var G__173260 = "]\n  (";
var G__173261 = (function (){var G__173328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__173329 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173328,G__173329) : tailrecursion.hoplon.span.call(null,G__173328,G__173329));
})();
var G__173262 = "[";
var G__173263 = (function (){var G__173330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173331 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173330,G__173331) : tailrecursion.hoplon.span.call(null,G__173330,G__173331));
})();
var G__173264 = " (";
var G__173265 = (function (){var G__173332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__173333 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173332,G__173333) : tailrecursion.hoplon.span.call(null,G__173332,G__173333));
})();
var G__173266 = " (";
var G__173267 = (function (){var G__173334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__173335 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173334,G__173335) : tailrecursion.hoplon.span.call(null,G__173334,G__173335));
})();
var G__173268 = (function (){var G__173336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173337 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173336,G__173337) : tailrecursion.hoplon.span.call(null,G__173336,G__173337));
})();
var G__173269 = ") (";
var G__173270 = (function (){var G__173338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__173339 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173338,G__173339) : tailrecursion.hoplon.span.call(null,G__173338,G__173339));
})();
var G__173271 = (function (){var G__173340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173341 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173340,G__173341) : tailrecursion.hoplon.span.call(null,G__173340,G__173341));
})();
var G__173272 = "))]\n    (";
var G__173273 = (function (){var G__173342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__173343 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173342,G__173343) : tailrecursion.hoplon.span.call(null,G__173342,G__173343));
})();
var G__173274 = "(";
var G__173275 = (function (){var G__173344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__173345 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173344,G__173345) : tailrecursion.hoplon.span.call(null,G__173344,G__173345));
})();
var G__173276 = (function (){var G__173346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173347 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173346,G__173347) : tailrecursion.hoplon.span.call(null,G__173346,G__173347));
})();
var G__173277 = ") ";
var G__173278 = (function (){var G__173348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173349 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173348,G__173349) : tailrecursion.hoplon.span.call(null,G__173348,G__173349));
})();
var G__173279 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$62 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$62(G__173218,G__173219,G__173220,G__173221,G__173222,G__173223,G__173224,G__173225,G__173226,G__173227,G__173228,G__173229,G__173230,G__173231,G__173232,G__173233,G__173234,G__173235,G__173236,G__173237,G__173238,G__173239,G__173240,G__173241,G__173242,G__173243,G__173244,G__173245,G__173246,G__173247,G__173248,G__173249,G__173250,G__173251,G__173252,G__173253,G__173254,G__173255,G__173256,G__173257,G__173258,G__173259,G__173260,G__173261,G__173262,G__173263,G__173264,G__173265,G__173266,G__173267,G__173268,G__173269,G__173270,G__173271,G__173272,G__173273,G__173274,G__173275,G__173276,G__173277,G__173278,G__173279) : tailrecursion.hoplon.pre.call(null,G__173218,G__173219,G__173220,G__173221,G__173222,G__173223,G__173224,G__173225,G__173226,G__173227,G__173228,G__173229,G__173230,G__173231,G__173232,G__173233,G__173234,G__173235,G__173236,G__173237,G__173238,G__173239,G__173240,G__173241,G__173242,G__173243,G__173244,G__173245,G__173246,G__173247,G__173248,G__173249,G__173250,G__173251,G__173252,G__173253,G__173254,G__173255,G__173256,G__173257,G__173258,G__173259,G__173260,G__173261,G__173262,G__173263,G__173264,G__173265,G__173266,G__173267,G__173268,G__173269,G__173270,G__173271,G__173272,G__173273,G__173274,G__173275,G__173276,G__173277,G__173278,G__173279));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__173216,G__173217) : tailrecursion.hoplon.div.call(null,G__173216,G__173217));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__173215) : tailrecursion.hoplon.div.call(null,G__173215));
})(),(function (){var G__173350 = cljs.core.PersistentArrayMap.EMPTY;
var G__173351 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The difference between this implementation and the previous one lies in when we compute the ",(function (){var G__173352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__173353 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173352,G__173353) : tailrecursion.hoplon.markdown.code_node.call(null,G__173352,G__173353));
})(),". If in our typical use of rational numbers we access the numerators and denominators of the same rational numbers many times, it would be preferable to compute the ",(function (){var G__173354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__173355 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173354,G__173355) : tailrecursion.hoplon.markdown.code_node.call(null,G__173354,G__173355));
})()," when the rational numbers are constructed. If not, we may be better off waiting until access time to compute the ",(function (){var G__173356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__173357 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173356,G__173357) : tailrecursion.hoplon.markdown.code_node.call(null,G__173356,G__173357));
})(),". In any case, when we change from one representation to the other, the procedures ",(function (){var G__173358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__173359 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173358,G__173359) : tailrecursion.hoplon.markdown.code_node.call(null,G__173358,G__173359));
})(),", ",(function (){var G__173360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-rat"], null);
var G__173361 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173360,G__173361) : tailrecursion.hoplon.markdown.code_node.call(null,G__173360,G__173361));
})()," and so on do not have to be modified at all."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__173350,G__173351) : tailrecursion.hoplon.markdown.para_node.call(null,G__173350,G__173351));
})(),(function (){var G__173362 = cljs.core.PersistentArrayMap.EMPTY;
var G__173363 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Constraining the dependence on the representation to a few interface procedures helps us design programs as well as modify them, because it allows us to maintain the flexibility to consider alternate implementations. To continue with our simple example, suppose we are designing a rational-number package and we can",(function (){var G__173364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__173365 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__173364,G__173365) : tailrecursion.hoplon.markdown.simple_node.call(null,G__173364,G__173365));
})(),"t decide initially whether to perform the ",(function (){var G__173366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__173367 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173366,G__173367) : tailrecursion.hoplon.markdown.code_node.call(null,G__173366,G__173367));
})()," at construction time or at selection time. The data-abstraction methodology gives us a way to defer that decision without losing the ability to make progress on the rest of the system."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__173362,G__173363) : tailrecursion.hoplon.markdown.para_node.call(null,G__173362,G__173363));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_173076;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_173075;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_173074;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_173073;
}})()], 0));
var G__170662 = "";
var G__170663 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_173368 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_173369 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_173370 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_173371 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__173372 = cljs.core.PersistentArrayMap.EMPTY;
var G__173373 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the problem of representing line segments in a plane. Each segment is represented as a pair of points: a starting point and an ending point. Define a constructor ",(function (){var G__173374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-segment"], null);
var G__173375 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173374,G__173375) : tailrecursion.hoplon.markdown.code_node.call(null,G__173374,G__173375));
})()," and selectors ",(function (){var G__173376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"start-segment"], null);
var G__173377 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173376,G__173377) : tailrecursion.hoplon.markdown.code_node.call(null,G__173376,G__173377));
})()," and ",(function (){var G__173378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"end-segment"], null);
var G__173379 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173378,G__173379) : tailrecursion.hoplon.markdown.code_node.call(null,G__173378,G__173379));
})()," that define the representation of segments in terms of points. Furthermore, a point can be represented as a pair of numbers: the \\(x\\) coordinate and the \\(y\\) coordinate. Accordingly, specify a constructor ",(function (){var G__173380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-point"], null);
var G__173381 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173380,G__173381) : tailrecursion.hoplon.markdown.code_node.call(null,G__173380,G__173381));
})()," and selectors ",(function (){var G__173382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x-point"], null);
var G__173383 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173382,G__173383) : tailrecursion.hoplon.markdown.code_node.call(null,G__173382,G__173383));
})()," and ",(function (){var G__173384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y-point"], null);
var G__173385 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173384,G__173385) : tailrecursion.hoplon.markdown.code_node.call(null,G__173384,G__173385));
})()," that define this representation. Finally, using your selectors and constructors, define a procedure ",(function (){var G__173386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"midpoint-segment"], null);
var G__173387 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__173386,G__173387) : tailrecursion.hoplon.markdown.code_node.call(null,G__173386,G__173387));
})()," that takes a line segment as argument and returns its midpoint (the point whose coordinates are the average of the coordinates of the endpoints). To try your procedures, you",(function (){var G__173388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__173389 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__173388,G__173389) : tailrecursion.hoplon.markdown.simple_node.call(null,G__173388,G__173389));
})(),"ll need a way to print points:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__173372,G__173373) : tailrecursion.hoplon.markdown.para_node.call(null,G__173372,G__173373));
})(),(function (){var G__173436 = (function (){var G__173437 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__173438 = (function (){var G__173439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__173440 = "(";
var G__173441 = (function (){var G__173461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__173462 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173461,G__173462) : tailrecursion.hoplon.span.call(null,G__173461,G__173462));
})();
var G__173442 = (function (){var G__173463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173464 = "print-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173463,G__173464) : tailrecursion.hoplon.span.call(null,G__173463,G__173464));
})();
var G__173443 = " [";
var G__173444 = (function (){var G__173465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173466 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173465,G__173466) : tailrecursion.hoplon.span.call(null,G__173465,G__173466));
})();
var G__173445 = "]\n  (";
var G__173446 = (function (){var G__173467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__173468 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173467,G__173468) : tailrecursion.hoplon.span.call(null,G__173467,G__173468));
})();
var G__173447 = (function (){var G__173469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__173470 = "\"(\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173469,G__173470) : tailrecursion.hoplon.span.call(null,G__173469,G__173470));
})();
var G__173448 = " (";
var G__173449 = (function (){var G__173471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__173472 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173471,G__173472) : tailrecursion.hoplon.span.call(null,G__173471,G__173472));
})();
var G__173450 = " ";
var G__173451 = (function (){var G__173473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173474 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173473,G__173474) : tailrecursion.hoplon.span.call(null,G__173473,G__173474));
})();
var G__173452 = ") ";
var G__173453 = (function (){var G__173475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__173476 = "\",\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173475,G__173476) : tailrecursion.hoplon.span.call(null,G__173475,G__173476));
})();
var G__173454 = " (";
var G__173455 = (function (){var G__173477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__173478 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173477,G__173478) : tailrecursion.hoplon.span.call(null,G__173477,G__173478));
})();
var G__173456 = " ";
var G__173457 = (function (){var G__173479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173480 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173479,G__173480) : tailrecursion.hoplon.span.call(null,G__173479,G__173480));
})();
var G__173458 = ") ";
var G__173459 = (function (){var G__173481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__173482 = "\")\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173481,G__173482) : tailrecursion.hoplon.span.call(null,G__173481,G__173482));
})();
var G__173460 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__173439,G__173440,G__173441,G__173442,G__173443,G__173444,G__173445,G__173446,G__173447,G__173448,G__173449,G__173450,G__173451,G__173452,G__173453,G__173454,G__173455,G__173456,G__173457,G__173458,G__173459,G__173460) : tailrecursion.hoplon.pre.call(null,G__173439,G__173440,G__173441,G__173442,G__173443,G__173444,G__173445,G__173446,G__173447,G__173448,G__173449,G__173450,G__173451,G__173452,G__173453,G__173454,G__173455,G__173456,G__173457,G__173458,G__173459,G__173460));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__173437,G__173438) : tailrecursion.hoplon.div.call(null,G__173437,G__173438));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__173436) : tailrecursion.hoplon.div.call(null,G__173436));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_173371;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_173370;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_173369;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_173368;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_173483 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_173484 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_173485 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_173486 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__173615 = (function (){var G__173616 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__173617 = (function (){var G__173618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__173619 = "(";
var G__173620 = (function (){var G__173676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__173677 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173676,G__173677) : tailrecursion.hoplon.span.call(null,G__173676,G__173677));
})();
var G__173621 = (function (){var G__173678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173679 = "make-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173678,G__173679) : tailrecursion.hoplon.span.call(null,G__173678,G__173679));
})();
var G__173622 = " [";
var G__173623 = (function (){var G__173680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173681 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173680,G__173681) : tailrecursion.hoplon.span.call(null,G__173680,G__173681));
})();
var G__173624 = " ";
var G__173625 = (function (){var G__173682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173683 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173682,G__173683) : tailrecursion.hoplon.span.call(null,G__173682,G__173683));
})();
var G__173626 = "]\n  (";
var G__173627 = (function (){var G__173684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__173685 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173684,G__173685) : tailrecursion.hoplon.span.call(null,G__173684,G__173685));
})();
var G__173628 = (function (){var G__173686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173687 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173686,G__173687) : tailrecursion.hoplon.span.call(null,G__173686,G__173687));
})();
var G__173629 = " ";
var G__173630 = (function (){var G__173688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173689 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173688,G__173689) : tailrecursion.hoplon.span.call(null,G__173688,G__173689));
})();
var G__173631 = "))\n(";
var G__173632 = (function (){var G__173690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__173691 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173690,G__173691) : tailrecursion.hoplon.span.call(null,G__173690,G__173691));
})();
var G__173633 = (function (){var G__173692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173693 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173692,G__173693) : tailrecursion.hoplon.span.call(null,G__173692,G__173693));
})();
var G__173634 = " [";
var G__173635 = (function (){var G__173694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173695 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173694,G__173695) : tailrecursion.hoplon.span.call(null,G__173694,G__173695));
})();
var G__173636 = "]\n  (";
var G__173637 = (function (){var G__173696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__173697 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173696,G__173697) : tailrecursion.hoplon.span.call(null,G__173696,G__173697));
})();
var G__173638 = (function (){var G__173698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173699 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173698,G__173699) : tailrecursion.hoplon.span.call(null,G__173698,G__173699));
})();
var G__173639 = "))\n(";
var G__173640 = (function (){var G__173700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__173701 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173700,G__173701) : tailrecursion.hoplon.span.call(null,G__173700,G__173701));
})();
var G__173641 = (function (){var G__173702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173703 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173702,G__173703) : tailrecursion.hoplon.span.call(null,G__173702,G__173703));
})();
var G__173642 = " [";
var G__173643 = (function (){var G__173704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173705 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173704,G__173705) : tailrecursion.hoplon.span.call(null,G__173704,G__173705));
})();
var G__173644 = "]\n  (";
var G__173645 = (function (){var G__173706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__173707 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173706,G__173707) : tailrecursion.hoplon.span.call(null,G__173706,G__173707));
})();
var G__173646 = (function (){var G__173708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173709 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173708,G__173709) : tailrecursion.hoplon.span.call(null,G__173708,G__173709));
})();
var G__173647 = "))\n(";
var G__173648 = (function (){var G__173710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__173711 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173710,G__173711) : tailrecursion.hoplon.span.call(null,G__173710,G__173711));
})();
var G__173649 = (function (){var G__173712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173713 = "make-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173712,G__173713) : tailrecursion.hoplon.span.call(null,G__173712,G__173713));
})();
var G__173650 = " [";
var G__173651 = (function (){var G__173714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173715 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173714,G__173715) : tailrecursion.hoplon.span.call(null,G__173714,G__173715));
})();
var G__173652 = " ";
var G__173653 = (function (){var G__173716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173717 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173716,G__173717) : tailrecursion.hoplon.span.call(null,G__173716,G__173717));
})();
var G__173654 = "]\n  (";
var G__173655 = (function (){var G__173718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__173719 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173718,G__173719) : tailrecursion.hoplon.span.call(null,G__173718,G__173719));
})();
var G__173656 = (function (){var G__173720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173721 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173720,G__173721) : tailrecursion.hoplon.span.call(null,G__173720,G__173721));
})();
var G__173657 = " ";
var G__173658 = (function (){var G__173722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173723 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173722,G__173723) : tailrecursion.hoplon.span.call(null,G__173722,G__173723));
})();
var G__173659 = "))\n(";
var G__173660 = (function (){var G__173724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__173725 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173724,G__173725) : tailrecursion.hoplon.span.call(null,G__173724,G__173725));
})();
var G__173661 = (function (){var G__173726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173727 = "start-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173726,G__173727) : tailrecursion.hoplon.span.call(null,G__173726,G__173727));
})();
var G__173662 = " [";
var G__173663 = (function (){var G__173728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173729 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173728,G__173729) : tailrecursion.hoplon.span.call(null,G__173728,G__173729));
})();
var G__173664 = "]\n  (";
var G__173665 = (function (){var G__173730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__173731 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173730,G__173731) : tailrecursion.hoplon.span.call(null,G__173730,G__173731));
})();
var G__173666 = (function (){var G__173732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173733 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173732,G__173733) : tailrecursion.hoplon.span.call(null,G__173732,G__173733));
})();
var G__173667 = "))\n(";
var G__173668 = (function (){var G__173734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__173735 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173734,G__173735) : tailrecursion.hoplon.span.call(null,G__173734,G__173735));
})();
var G__173669 = (function (){var G__173736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173737 = "end-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173736,G__173737) : tailrecursion.hoplon.span.call(null,G__173736,G__173737));
})();
var G__173670 = " [";
var G__173671 = (function (){var G__173738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173739 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173738,G__173739) : tailrecursion.hoplon.span.call(null,G__173738,G__173739));
})();
var G__173672 = "]\n  (";
var G__173673 = (function (){var G__173740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__173741 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173740,G__173741) : tailrecursion.hoplon.span.call(null,G__173740,G__173741));
})();
var G__173674 = (function (){var G__173742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173743 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173742,G__173743) : tailrecursion.hoplon.span.call(null,G__173742,G__173743));
})();
var G__173675 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__173618,G__173619,G__173620,G__173621,G__173622,G__173623,G__173624,G__173625,G__173626,G__173627,G__173628,G__173629,G__173630,G__173631,G__173632,G__173633,G__173634,G__173635,G__173636,G__173637,G__173638,G__173639,G__173640,G__173641,G__173642,G__173643,G__173644,G__173645,G__173646,G__173647,G__173648,G__173649,G__173650,G__173651,G__173652,G__173653,G__173654,G__173655,G__173656,G__173657,G__173658,G__173659,G__173660,G__173661,G__173662,G__173663,G__173664,G__173665,G__173666,G__173667,G__173668,G__173669,G__173670,G__173671,G__173672,G__173673,G__173674,G__173675) : tailrecursion.hoplon.pre.call(null,G__173618,G__173619,G__173620,G__173621,G__173622,G__173623,G__173624,G__173625,G__173626,G__173627,G__173628,G__173629,G__173630,G__173631,G__173632,G__173633,G__173634,G__173635,G__173636,G__173637,G__173638,G__173639,G__173640,G__173641,G__173642,G__173643,G__173644,G__173645,G__173646,G__173647,G__173648,G__173649,G__173650,G__173651,G__173652,G__173653,G__173654,G__173655,G__173656,G__173657,G__173658,G__173659,G__173660,G__173661,G__173662,G__173663,G__173664,G__173665,G__173666,G__173667,G__173668,G__173669,G__173670,G__173671,G__173672,G__173673,G__173674,G__173675));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__173616,G__173617) : tailrecursion.hoplon.div.call(null,G__173616,G__173617));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__173615) : tailrecursion.hoplon.div.call(null,G__173615));
})(),(function (){var G__173744 = cljs.core.PersistentArrayMap.EMPTY;
var G__173745 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Once we have those,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__173744,G__173745) : tailrecursion.hoplon.markdown.para_node.call(null,G__173744,G__173745));
})(),(function (){var G__173865 = (function (){var G__173866 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__173867 = (function (){var G__173868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__173869 = "(";
var G__173870 = (function (){var G__173927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__173928 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173927,G__173928) : tailrecursion.hoplon.span.call(null,G__173927,G__173928));
})();
var G__173871 = (function (){var G__173929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173930 = "midpoint-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173929,G__173930) : tailrecursion.hoplon.span.call(null,G__173929,G__173930));
})();
var G__173872 = " [";
var G__173873 = (function (){var G__173931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173932 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173931,G__173932) : tailrecursion.hoplon.span.call(null,G__173931,G__173932));
})();
var G__173874 = "]\n  (";
var G__173875 = (function (){var G__173933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__173934 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173933,G__173934) : tailrecursion.hoplon.span.call(null,G__173933,G__173934));
})();
var G__173876 = "[";
var G__173877 = (function (){var G__173935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173936 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173935,G__173936) : tailrecursion.hoplon.span.call(null,G__173935,G__173936));
})();
var G__173878 = "  (";
var G__173879 = (function (){var G__173937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__173938 = "start-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173937,G__173938) : tailrecursion.hoplon.span.call(null,G__173937,G__173938));
})();
var G__173880 = " ";
var G__173881 = (function (){var G__173939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173940 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173939,G__173940) : tailrecursion.hoplon.span.call(null,G__173939,G__173940));
})();
var G__173882 = ")\n        ";
var G__173883 = (function (){var G__173941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173942 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173941,G__173942) : tailrecursion.hoplon.span.call(null,G__173941,G__173942));
})();
var G__173884 = "  (";
var G__173885 = (function (){var G__173943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__173944 = "end-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173943,G__173944) : tailrecursion.hoplon.span.call(null,G__173943,G__173944));
})();
var G__173886 = " ";
var G__173887 = (function (){var G__173945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173946 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173945,G__173946) : tailrecursion.hoplon.span.call(null,G__173945,G__173946));
})();
var G__173888 = ")\n        ";
var G__173889 = (function (){var G__173947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173948 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173947,G__173948) : tailrecursion.hoplon.span.call(null,G__173947,G__173948));
})();
var G__173890 = " (";
var G__173891 = (function (){var G__173949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__173950 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173949,G__173950) : tailrecursion.hoplon.span.call(null,G__173949,G__173950));
})();
var G__173892 = " ";
var G__173893 = (function (){var G__173951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173952 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173951,G__173952) : tailrecursion.hoplon.span.call(null,G__173951,G__173952));
})();
var G__173894 = ")\n        ";
var G__173895 = (function (){var G__173953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173954 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173953,G__173954) : tailrecursion.hoplon.span.call(null,G__173953,G__173954));
})();
var G__173896 = " (";
var G__173897 = (function (){var G__173955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__173956 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173955,G__173956) : tailrecursion.hoplon.span.call(null,G__173955,G__173956));
})();
var G__173898 = " ";
var G__173899 = (function (){var G__173957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173958 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173957,G__173958) : tailrecursion.hoplon.span.call(null,G__173957,G__173958));
})();
var G__173900 = ")\n        ";
var G__173901 = (function (){var G__173959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173960 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173959,G__173960) : tailrecursion.hoplon.span.call(null,G__173959,G__173960));
})();
var G__173902 = " (";
var G__173903 = (function (){var G__173961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__173962 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173961,G__173962) : tailrecursion.hoplon.span.call(null,G__173961,G__173962));
})();
var G__173904 = " ";
var G__173905 = (function (){var G__173963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173964 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173963,G__173964) : tailrecursion.hoplon.span.call(null,G__173963,G__173964));
})();
var G__173906 = ")\n        ";
var G__173907 = (function (){var G__173965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173966 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173965,G__173966) : tailrecursion.hoplon.span.call(null,G__173965,G__173966));
})();
var G__173908 = " (";
var G__173909 = (function (){var G__173967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__173968 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173967,G__173968) : tailrecursion.hoplon.span.call(null,G__173967,G__173968));
})();
var G__173910 = " ";
var G__173911 = (function (){var G__173969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173970 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173969,G__173970) : tailrecursion.hoplon.span.call(null,G__173969,G__173970));
})();
var G__173912 = ")]\n    (";
var G__173913 = (function (){var G__173971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__173972 = "make-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173971,G__173972) : tailrecursion.hoplon.span.call(null,G__173971,G__173972));
})();
var G__173914 = " (";
var G__173915 = (function (){var G__173973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__173974 = "average";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173973,G__173974) : tailrecursion.hoplon.span.call(null,G__173973,G__173974));
})();
var G__173916 = " ";
var G__173917 = (function (){var G__173975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173976 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173975,G__173976) : tailrecursion.hoplon.span.call(null,G__173975,G__173976));
})();
var G__173918 = " ";
var G__173919 = (function (){var G__173977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173978 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173977,G__173978) : tailrecursion.hoplon.span.call(null,G__173977,G__173978));
})();
var G__173920 = ") (";
var G__173921 = (function (){var G__173979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__173980 = "average";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173979,G__173980) : tailrecursion.hoplon.span.call(null,G__173979,G__173980));
})();
var G__173922 = " ";
var G__173923 = (function (){var G__173981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173982 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173981,G__173982) : tailrecursion.hoplon.span.call(null,G__173981,G__173982));
})();
var G__173924 = " ";
var G__173925 = (function (){var G__173983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__173984 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__173983,G__173984) : tailrecursion.hoplon.span.call(null,G__173983,G__173984));
})();
var G__173926 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59(G__173868,G__173869,G__173870,G__173871,G__173872,G__173873,G__173874,G__173875,G__173876,G__173877,G__173878,G__173879,G__173880,G__173881,G__173882,G__173883,G__173884,G__173885,G__173886,G__173887,G__173888,G__173889,G__173890,G__173891,G__173892,G__173893,G__173894,G__173895,G__173896,G__173897,G__173898,G__173899,G__173900,G__173901,G__173902,G__173903,G__173904,G__173905,G__173906,G__173907,G__173908,G__173909,G__173910,G__173911,G__173912,G__173913,G__173914,G__173915,G__173916,G__173917,G__173918,G__173919,G__173920,G__173921,G__173922,G__173923,G__173924,G__173925,G__173926) : tailrecursion.hoplon.pre.call(null,G__173868,G__173869,G__173870,G__173871,G__173872,G__173873,G__173874,G__173875,G__173876,G__173877,G__173878,G__173879,G__173880,G__173881,G__173882,G__173883,G__173884,G__173885,G__173886,G__173887,G__173888,G__173889,G__173890,G__173891,G__173892,G__173893,G__173894,G__173895,G__173896,G__173897,G__173898,G__173899,G__173900,G__173901,G__173902,G__173903,G__173904,G__173905,G__173906,G__173907,G__173908,G__173909,G__173910,G__173911,G__173912,G__173913,G__173914,G__173915,G__173916,G__173917,G__173918,G__173919,G__173920,G__173921,G__173922,G__173923,G__173924,G__173925,G__173926));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__173866,G__173867) : tailrecursion.hoplon.div.call(null,G__173866,G__173867));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__173865) : tailrecursion.hoplon.div.call(null,G__173865));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_173486;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_173485;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_173484;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_173483;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_173985 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_173986 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_173987 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_173988 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__173989 = cljs.core.PersistentArrayMap.EMPTY;
var G__173990 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Implement a representation for rectangles in a plane. (Hint: you may want to make use of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/ex/2/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.2"], null)], 0))," In terms of your constructors and selectors, create procedures that compute the perimeter and the area of a given rectangle. Now implement a different representation for rectangles. Can you design your system with suitable abstraction barriers, so that the same perimeter and area procedures will work using either representation?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__173989,G__173990) : tailrecursion.hoplon.markdown.para_node.call(null,G__173989,G__173990));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_173988;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_173987;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_173986;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_173985;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_173991 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_173992 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_173993 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_173994 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__173995 = cljs.core.PersistentArrayMap.EMPTY;
var G__173996 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Assuming we are given coordinates of an actual rectangle (so that we don",(function (){var G__173997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__173998 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__173997,G__173998) : tailrecursion.hoplon.markdown.simple_node.call(null,G__173997,G__173998));
})(),"t have to use the Pythagorean theorem or some other method to confirm that the points are what they claim to be), will simplify our lives considerably. Since any rectangle is determined by three of its vertices, we can assume that we are given three sequentially adjacent vertices."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__173995,G__173996) : tailrecursion.hoplon.markdown.para_node.call(null,G__173995,G__173996));
})(),(function (){var G__174037 = (function (){var G__174038 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__174039 = (function (){var G__174040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__174041 = "(";
var G__174042 = (function (){var G__174058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__174059 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174058,G__174059) : tailrecursion.hoplon.span.call(null,G__174058,G__174059));
})();
var G__174043 = (function (){var G__174060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174061 = "make-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174060,G__174061) : tailrecursion.hoplon.span.call(null,G__174060,G__174061));
})();
var G__174044 = " [";
var G__174045 = (function (){var G__174062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174063 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174062,G__174063) : tailrecursion.hoplon.span.call(null,G__174062,G__174063));
})();
var G__174046 = " ";
var G__174047 = (function (){var G__174064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174065 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174064,G__174065) : tailrecursion.hoplon.span.call(null,G__174064,G__174065));
})();
var G__174048 = " ";
var G__174049 = (function (){var G__174066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174067 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174066,G__174067) : tailrecursion.hoplon.span.call(null,G__174066,G__174067));
})();
var G__174050 = "]\n  (";
var G__174051 = (function (){var G__174068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__174069 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174068,G__174069) : tailrecursion.hoplon.span.call(null,G__174068,G__174069));
})();
var G__174052 = (function (){var G__174070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174071 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174070,G__174071) : tailrecursion.hoplon.span.call(null,G__174070,G__174071));
})();
var G__174053 = " ";
var G__174054 = (function (){var G__174072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174073 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174072,G__174073) : tailrecursion.hoplon.span.call(null,G__174072,G__174073));
})();
var G__174055 = " ";
var G__174056 = (function (){var G__174074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174075 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174074,G__174075) : tailrecursion.hoplon.span.call(null,G__174074,G__174075));
})();
var G__174057 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__174040,G__174041,G__174042,G__174043,G__174044,G__174045,G__174046,G__174047,G__174048,G__174049,G__174050,G__174051,G__174052,G__174053,G__174054,G__174055,G__174056,G__174057) : tailrecursion.hoplon.pre.call(null,G__174040,G__174041,G__174042,G__174043,G__174044,G__174045,G__174046,G__174047,G__174048,G__174049,G__174050,G__174051,G__174052,G__174053,G__174054,G__174055,G__174056,G__174057));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__174038,G__174039) : tailrecursion.hoplon.div.call(null,G__174038,G__174039));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__174037) : tailrecursion.hoplon.div.call(null,G__174037));
})(),(function (){var G__174076 = cljs.core.PersistentArrayMap.EMPTY;
var G__174077 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then, we realize that in order to compute the area and perimeter, we need to know the length and width of the rectangle. So, let",(function (){var G__174078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__174079 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__174078,G__174079) : tailrecursion.hoplon.markdown.simple_node.call(null,G__174078,G__174079));
})(),"s write a separate procedure to do that. But before we do that, it might be a good idea to have a procedure that can find the length of a segment (we could do without this procedure, but it seems like a useful procedure to have if we are to be working with segments, so why not allow ourselves this tool?)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__174076,G__174077) : tailrecursion.hoplon.markdown.para_node.call(null,G__174076,G__174077));
})(),(function (){var G__174209 = (function (){var G__174210 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__174211 = (function (){var G__174212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__174213 = "(";
var G__174214 = (function (){var G__174275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__174276 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174275,G__174276) : tailrecursion.hoplon.span.call(null,G__174275,G__174276));
})();
var G__174215 = (function (){var G__174277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174278 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174277,G__174278) : tailrecursion.hoplon.span.call(null,G__174277,G__174278));
})();
var G__174216 = " [";
var G__174217 = (function (){var G__174279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174280 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174279,G__174280) : tailrecursion.hoplon.span.call(null,G__174279,G__174280));
})();
var G__174218 = "]\n  (";
var G__174219 = (function (){var G__174281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__174282 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174281,G__174282) : tailrecursion.hoplon.span.call(null,G__174281,G__174282));
})();
var G__174220 = "[";
var G__174221 = (function (){var G__174283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174284 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174283,G__174284) : tailrecursion.hoplon.span.call(null,G__174283,G__174284));
})();
var G__174222 = "  (";
var G__174223 = (function (){var G__174285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174286 = "start-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174285,G__174286) : tailrecursion.hoplon.span.call(null,G__174285,G__174286));
})();
var G__174224 = " ";
var G__174225 = (function (){var G__174287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174288 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174287,G__174288) : tailrecursion.hoplon.span.call(null,G__174287,G__174288));
})();
var G__174226 = ")\n        ";
var G__174227 = (function (){var G__174289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174290 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174289,G__174290) : tailrecursion.hoplon.span.call(null,G__174289,G__174290));
})();
var G__174228 = "  (";
var G__174229 = (function (){var G__174291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174292 = "end-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174291,G__174292) : tailrecursion.hoplon.span.call(null,G__174291,G__174292));
})();
var G__174230 = " ";
var G__174231 = (function (){var G__174293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174294 = "l";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174293,G__174294) : tailrecursion.hoplon.span.call(null,G__174293,G__174294));
})();
var G__174232 = ")\n        ";
var G__174233 = (function (){var G__174295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174296 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174295,G__174296) : tailrecursion.hoplon.span.call(null,G__174295,G__174296));
})();
var G__174234 = " (";
var G__174235 = (function (){var G__174297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174298 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174297,G__174298) : tailrecursion.hoplon.span.call(null,G__174297,G__174298));
})();
var G__174236 = " ";
var G__174237 = (function (){var G__174299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174300 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174299,G__174300) : tailrecursion.hoplon.span.call(null,G__174299,G__174300));
})();
var G__174238 = ")\n        ";
var G__174239 = (function (){var G__174301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174302 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174301,G__174302) : tailrecursion.hoplon.span.call(null,G__174301,G__174302));
})();
var G__174240 = " (";
var G__174241 = (function (){var G__174303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174304 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174303,G__174304) : tailrecursion.hoplon.span.call(null,G__174303,G__174304));
})();
var G__174242 = " ";
var G__174243 = (function (){var G__174305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174306 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174305,G__174306) : tailrecursion.hoplon.span.call(null,G__174305,G__174306));
})();
var G__174244 = ")\n        ";
var G__174245 = (function (){var G__174307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174308 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174307,G__174308) : tailrecursion.hoplon.span.call(null,G__174307,G__174308));
})();
var G__174246 = " (";
var G__174247 = (function (){var G__174309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174310 = "x-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174309,G__174310) : tailrecursion.hoplon.span.call(null,G__174309,G__174310));
})();
var G__174248 = " ";
var G__174249 = (function (){var G__174311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174312 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174311,G__174312) : tailrecursion.hoplon.span.call(null,G__174311,G__174312));
})();
var G__174250 = ")\n        ";
var G__174251 = (function (){var G__174313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174314 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174313,G__174314) : tailrecursion.hoplon.span.call(null,G__174313,G__174314));
})();
var G__174252 = " (";
var G__174253 = (function (){var G__174315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174316 = "y-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174315,G__174316) : tailrecursion.hoplon.span.call(null,G__174315,G__174316));
})();
var G__174254 = " ";
var G__174255 = (function (){var G__174317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174318 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174317,G__174318) : tailrecursion.hoplon.span.call(null,G__174317,G__174318));
})();
var G__174256 = ")]\n    (";
var G__174257 = (function (){var G__174319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174320 = "Math/sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174319,G__174320) : tailrecursion.hoplon.span.call(null,G__174319,G__174320));
})();
var G__174258 = " (";
var G__174259 = (function (){var G__174321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__174322 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174321,G__174322) : tailrecursion.hoplon.span.call(null,G__174321,G__174322));
})();
var G__174260 = "(";
var G__174261 = (function (){var G__174323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174324 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174323,G__174324) : tailrecursion.hoplon.span.call(null,G__174323,G__174324));
})();
var G__174262 = " (";
var G__174263 = (function (){var G__174325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__174326 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174325,G__174326) : tailrecursion.hoplon.span.call(null,G__174325,G__174326));
})();
var G__174264 = (function (){var G__174327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174328 = "x1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174327,G__174328) : tailrecursion.hoplon.span.call(null,G__174327,G__174328));
})();
var G__174265 = " ";
var G__174266 = (function (){var G__174329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174330 = "x2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174329,G__174330) : tailrecursion.hoplon.span.call(null,G__174329,G__174330));
})();
var G__174267 = "))\n                  (";
var G__174268 = (function (){var G__174331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174332 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174331,G__174332) : tailrecursion.hoplon.span.call(null,G__174331,G__174332));
})();
var G__174269 = " (";
var G__174270 = (function (){var G__174333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__174334 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174333,G__174334) : tailrecursion.hoplon.span.call(null,G__174333,G__174334));
})();
var G__174271 = (function (){var G__174335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174336 = "y1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174335,G__174336) : tailrecursion.hoplon.span.call(null,G__174335,G__174336));
})();
var G__174272 = " ";
var G__174273 = (function (){var G__174337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174338 = "y2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174337,G__174338) : tailrecursion.hoplon.span.call(null,G__174337,G__174338));
})();
var G__174274 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63(G__174212,G__174213,G__174214,G__174215,G__174216,G__174217,G__174218,G__174219,G__174220,G__174221,G__174222,G__174223,G__174224,G__174225,G__174226,G__174227,G__174228,G__174229,G__174230,G__174231,G__174232,G__174233,G__174234,G__174235,G__174236,G__174237,G__174238,G__174239,G__174240,G__174241,G__174242,G__174243,G__174244,G__174245,G__174246,G__174247,G__174248,G__174249,G__174250,G__174251,G__174252,G__174253,G__174254,G__174255,G__174256,G__174257,G__174258,G__174259,G__174260,G__174261,G__174262,G__174263,G__174264,G__174265,G__174266,G__174267,G__174268,G__174269,G__174270,G__174271,G__174272,G__174273,G__174274) : tailrecursion.hoplon.pre.call(null,G__174212,G__174213,G__174214,G__174215,G__174216,G__174217,G__174218,G__174219,G__174220,G__174221,G__174222,G__174223,G__174224,G__174225,G__174226,G__174227,G__174228,G__174229,G__174230,G__174231,G__174232,G__174233,G__174234,G__174235,G__174236,G__174237,G__174238,G__174239,G__174240,G__174241,G__174242,G__174243,G__174244,G__174245,G__174246,G__174247,G__174248,G__174249,G__174250,G__174251,G__174252,G__174253,G__174254,G__174255,G__174256,G__174257,G__174258,G__174259,G__174260,G__174261,G__174262,G__174263,G__174264,G__174265,G__174266,G__174267,G__174268,G__174269,G__174270,G__174271,G__174272,G__174273,G__174274));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__174210,G__174211) : tailrecursion.hoplon.div.call(null,G__174210,G__174211));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__174209) : tailrecursion.hoplon.div.call(null,G__174209));
})(),(function (){var G__174339 = cljs.core.PersistentArrayMap.EMPTY;
var G__174340 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Good, now we can move on. I",(function (){var G__174341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__174342 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__174341,G__174342) : tailrecursion.hoplon.markdown.simple_node.call(null,G__174341,G__174342));
})(),"m not sure if it would be useful to define a global procedure to get the sides of a rectangle as line-segments, but if it gets in the way, we can use a ",(function (){var G__174343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__174344 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__174343,G__174344) : tailrecursion.hoplon.markdown.code_node.call(null,G__174343,G__174344));
})()," binding instead. For now, let",(function (){var G__174345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__174346 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__174345,G__174346) : tailrecursion.hoplon.markdown.simple_node.call(null,G__174345,G__174346));
})(),"s define it globally."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__174339,G__174340) : tailrecursion.hoplon.markdown.para_node.call(null,G__174339,G__174340));
})(),(function (){var G__174413 = (function (){var G__174414 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__174415 = (function (){var G__174416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__174417 = "(";
var G__174418 = (function (){var G__174446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__174447 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174446,G__174447) : tailrecursion.hoplon.span.call(null,G__174446,G__174447));
})();
var G__174419 = (function (){var G__174448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174449 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174448,G__174449) : tailrecursion.hoplon.span.call(null,G__174448,G__174449));
})();
var G__174420 = " [";
var G__174421 = (function (){var G__174450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174451 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174450,G__174451) : tailrecursion.hoplon.span.call(null,G__174450,G__174451));
})();
var G__174422 = "]\n  (";
var G__174423 = (function (){var G__174452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174453 = "make-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174452,G__174453) : tailrecursion.hoplon.span.call(null,G__174452,G__174453));
})();
var G__174424 = " (";
var G__174425 = (function (){var G__174454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__174455 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174454,G__174455) : tailrecursion.hoplon.span.call(null,G__174454,G__174455));
})();
var G__174426 = (function (){var G__174456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174457 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174456,G__174457) : tailrecursion.hoplon.span.call(null,G__174456,G__174457));
})();
var G__174427 = ") (";
var G__174428 = (function (){var G__174458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__174459 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174458,G__174459) : tailrecursion.hoplon.span.call(null,G__174458,G__174459));
})();
var G__174429 = (function (){var G__174460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174461 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174460,G__174461) : tailrecursion.hoplon.span.call(null,G__174460,G__174461));
})();
var G__174430 = ")))\n(";
var G__174431 = (function (){var G__174462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__174463 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174462,G__174463) : tailrecursion.hoplon.span.call(null,G__174462,G__174463));
})();
var G__174432 = (function (){var G__174464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174465 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174464,G__174465) : tailrecursion.hoplon.span.call(null,G__174464,G__174465));
})();
var G__174433 = " [";
var G__174434 = (function (){var G__174466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174467 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174466,G__174467) : tailrecursion.hoplon.span.call(null,G__174466,G__174467));
})();
var G__174435 = "]\n  (";
var G__174436 = (function (){var G__174468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174469 = "make-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174468,G__174469) : tailrecursion.hoplon.span.call(null,G__174468,G__174469));
})();
var G__174437 = " (";
var G__174438 = (function (){var G__174470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__174471 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174470,G__174471) : tailrecursion.hoplon.span.call(null,G__174470,G__174471));
})();
var G__174439 = (function (){var G__174472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174473 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174472,G__174473) : tailrecursion.hoplon.span.call(null,G__174472,G__174473));
})();
var G__174440 = ") (";
var G__174441 = (function (){var G__174474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__174475 = "nth ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174474,G__174475) : tailrecursion.hoplon.span.call(null,G__174474,G__174475));
})();
var G__174442 = (function (){var G__174476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174477 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174476,G__174477) : tailrecursion.hoplon.span.call(null,G__174476,G__174477));
})();
var G__174443 = " ";
var G__174444 = (function (){var G__174478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__174479 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174478,G__174479) : tailrecursion.hoplon.span.call(null,G__174478,G__174479));
})();
var G__174445 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30(G__174416,G__174417,G__174418,G__174419,G__174420,G__174421,G__174422,G__174423,G__174424,G__174425,G__174426,G__174427,G__174428,G__174429,G__174430,G__174431,G__174432,G__174433,G__174434,G__174435,G__174436,G__174437,G__174438,G__174439,G__174440,G__174441,G__174442,G__174443,G__174444,G__174445) : tailrecursion.hoplon.pre.call(null,G__174416,G__174417,G__174418,G__174419,G__174420,G__174421,G__174422,G__174423,G__174424,G__174425,G__174426,G__174427,G__174428,G__174429,G__174430,G__174431,G__174432,G__174433,G__174434,G__174435,G__174436,G__174437,G__174438,G__174439,G__174440,G__174441,G__174442,G__174443,G__174444,G__174445));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__174414,G__174415) : tailrecursion.hoplon.div.call(null,G__174414,G__174415));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__174413) : tailrecursion.hoplon.div.call(null,G__174413));
})(),(function (){var G__174480 = cljs.core.PersistentArrayMap.EMPTY;
var G__174481 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now we",(function (){var G__174482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__174483 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__174482,G__174483) : tailrecursion.hoplon.markdown.simple_node.call(null,G__174482,G__174483));
})(),"re ready to make our area and perimeter procedures."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__174480,G__174481) : tailrecursion.hoplon.markdown.para_node.call(null,G__174480,G__174481));
})(),(function (){var G__174573 = (function (){var G__174574 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__174575 = (function (){var G__174576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__174577 = "(";
var G__174578 = (function (){var G__174619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__174620 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174619,G__174620) : tailrecursion.hoplon.span.call(null,G__174619,G__174620));
})();
var G__174579 = (function (){var G__174621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174622 = "area-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174621,G__174622) : tailrecursion.hoplon.span.call(null,G__174621,G__174622));
})();
var G__174580 = " [";
var G__174581 = (function (){var G__174623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174624 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174623,G__174624) : tailrecursion.hoplon.span.call(null,G__174623,G__174624));
})();
var G__174582 = "]\n  (";
var G__174583 = (function (){var G__174625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__174626 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174625,G__174626) : tailrecursion.hoplon.span.call(null,G__174625,G__174626));
})();
var G__174584 = "(";
var G__174585 = (function (){var G__174627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174628 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174627,G__174628) : tailrecursion.hoplon.span.call(null,G__174627,G__174628));
})();
var G__174586 = " (";
var G__174587 = (function (){var G__174629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174630 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174629,G__174630) : tailrecursion.hoplon.span.call(null,G__174629,G__174630));
})();
var G__174588 = " ";
var G__174589 = (function (){var G__174631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174632 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174631,G__174632) : tailrecursion.hoplon.span.call(null,G__174631,G__174632));
})();
var G__174590 = "))\n     (";
var G__174591 = (function (){var G__174633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174634 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174633,G__174634) : tailrecursion.hoplon.span.call(null,G__174633,G__174634));
})();
var G__174592 = " (";
var G__174593 = (function (){var G__174635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174636 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174635,G__174636) : tailrecursion.hoplon.span.call(null,G__174635,G__174636));
})();
var G__174594 = " ";
var G__174595 = (function (){var G__174637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174638 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174637,G__174638) : tailrecursion.hoplon.span.call(null,G__174637,G__174638));
})();
var G__174596 = "))))\n(";
var G__174597 = (function (){var G__174639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__174640 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174639,G__174640) : tailrecursion.hoplon.span.call(null,G__174639,G__174640));
})();
var G__174598 = (function (){var G__174641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174642 = "perimeter-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174641,G__174642) : tailrecursion.hoplon.span.call(null,G__174641,G__174642));
})();
var G__174599 = " [";
var G__174600 = (function (){var G__174643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174644 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174643,G__174644) : tailrecursion.hoplon.span.call(null,G__174643,G__174644));
})();
var G__174601 = "]\n  (";
var G__174602 = (function (){var G__174645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__174646 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174645,G__174646) : tailrecursion.hoplon.span.call(null,G__174645,G__174646));
})();
var G__174603 = (function (){var G__174647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__174648 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174647,G__174648) : tailrecursion.hoplon.span.call(null,G__174647,G__174648));
})();
var G__174604 = " (";
var G__174605 = (function (){var G__174649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__174650 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174649,G__174650) : tailrecursion.hoplon.span.call(null,G__174649,G__174650));
})();
var G__174606 = "(";
var G__174607 = (function (){var G__174651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174652 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174651,G__174652) : tailrecursion.hoplon.span.call(null,G__174651,G__174652));
})();
var G__174608 = " (";
var G__174609 = (function (){var G__174653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174654 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174653,G__174654) : tailrecursion.hoplon.span.call(null,G__174653,G__174654));
})();
var G__174610 = " ";
var G__174611 = (function (){var G__174655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174656 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174655,G__174656) : tailrecursion.hoplon.span.call(null,G__174655,G__174656));
})();
var G__174612 = "))\n          (";
var G__174613 = (function (){var G__174657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174658 = "length-segment";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174657,G__174658) : tailrecursion.hoplon.span.call(null,G__174657,G__174658));
})();
var G__174614 = " (";
var G__174615 = (function (){var G__174659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174660 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174659,G__174660) : tailrecursion.hoplon.span.call(null,G__174659,G__174660));
})();
var G__174616 = " ";
var G__174617 = (function (){var G__174661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174662 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174661,G__174662) : tailrecursion.hoplon.span.call(null,G__174661,G__174662));
})();
var G__174618 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43(G__174576,G__174577,G__174578,G__174579,G__174580,G__174581,G__174582,G__174583,G__174584,G__174585,G__174586,G__174587,G__174588,G__174589,G__174590,G__174591,G__174592,G__174593,G__174594,G__174595,G__174596,G__174597,G__174598,G__174599,G__174600,G__174601,G__174602,G__174603,G__174604,G__174605,G__174606,G__174607,G__174608,G__174609,G__174610,G__174611,G__174612,G__174613,G__174614,G__174615,G__174616,G__174617,G__174618) : tailrecursion.hoplon.pre.call(null,G__174576,G__174577,G__174578,G__174579,G__174580,G__174581,G__174582,G__174583,G__174584,G__174585,G__174586,G__174587,G__174588,G__174589,G__174590,G__174591,G__174592,G__174593,G__174594,G__174595,G__174596,G__174597,G__174598,G__174599,G__174600,G__174601,G__174602,G__174603,G__174604,G__174605,G__174606,G__174607,G__174608,G__174609,G__174610,G__174611,G__174612,G__174613,G__174614,G__174615,G__174616,G__174617,G__174618));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__174574,G__174575) : tailrecursion.hoplon.div.call(null,G__174574,G__174575));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__174573) : tailrecursion.hoplon.div.call(null,G__174573));
})(),(function (){var G__174663 = cljs.core.PersistentArrayMap.EMPTY;
var G__174664 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now, if our implementation for rectangles were something different, like:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__174663,G__174664) : tailrecursion.hoplon.markdown.para_node.call(null,G__174663,G__174664));
})(),(function (){var G__174714 = (function (){var G__174715 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__174716 = (function (){var G__174717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__174718 = "(";
var G__174719 = (function (){var G__174740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__174741 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174740,G__174741) : tailrecursion.hoplon.span.call(null,G__174740,G__174741));
})();
var G__174720 = (function (){var G__174742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174743 = "make-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174742,G__174743) : tailrecursion.hoplon.span.call(null,G__174742,G__174743));
})();
var G__174721 = " [";
var G__174722 = (function (){var G__174744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174745 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174744,G__174745) : tailrecursion.hoplon.span.call(null,G__174744,G__174745));
})();
var G__174723 = " ";
var G__174724 = (function (){var G__174746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174747 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174746,G__174747) : tailrecursion.hoplon.span.call(null,G__174746,G__174747));
})();
var G__174725 = " ";
var G__174726 = (function (){var G__174748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174749 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174748,G__174749) : tailrecursion.hoplon.span.call(null,G__174748,G__174749));
})();
var G__174727 = "]\n  (";
var G__174728 = (function (){var G__174750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__174751 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174750,G__174751) : tailrecursion.hoplon.span.call(null,G__174750,G__174751));
})();
var G__174729 = "(";
var G__174730 = (function (){var G__174752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__174753 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174752,G__174753) : tailrecursion.hoplon.span.call(null,G__174752,G__174753));
})();
var G__174731 = (function (){var G__174754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174755 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174754,G__174755) : tailrecursion.hoplon.span.call(null,G__174754,G__174755));
})();
var G__174732 = " ";
var G__174733 = (function (){var G__174756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174757 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174756,G__174757) : tailrecursion.hoplon.span.call(null,G__174756,G__174757));
})();
var G__174734 = ") (";
var G__174735 = (function (){var G__174758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__174759 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174758,G__174759) : tailrecursion.hoplon.span.call(null,G__174758,G__174759));
})();
var G__174736 = (function (){var G__174760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174761 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174760,G__174761) : tailrecursion.hoplon.span.call(null,G__174760,G__174761));
})();
var G__174737 = " ";
var G__174738 = (function (){var G__174762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174763 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174762,G__174763) : tailrecursion.hoplon.span.call(null,G__174762,G__174763));
})();
var G__174739 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__174717,G__174718,G__174719,G__174720,G__174721,G__174722,G__174723,G__174724,G__174725,G__174726,G__174727,G__174728,G__174729,G__174730,G__174731,G__174732,G__174733,G__174734,G__174735,G__174736,G__174737,G__174738,G__174739) : tailrecursion.hoplon.pre.call(null,G__174717,G__174718,G__174719,G__174720,G__174721,G__174722,G__174723,G__174724,G__174725,G__174726,G__174727,G__174728,G__174729,G__174730,G__174731,G__174732,G__174733,G__174734,G__174735,G__174736,G__174737,G__174738,G__174739));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__174715,G__174716) : tailrecursion.hoplon.div.call(null,G__174715,G__174716));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__174714) : tailrecursion.hoplon.div.call(null,G__174714));
})(),(function (){var G__174764 = cljs.core.PersistentArrayMap.EMPTY;
var G__174765 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In this representation, we",(function (){var G__174766 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__174767 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__174766,G__174767) : tailrecursion.hoplon.markdown.simple_node.call(null,G__174766,G__174767));
})(),"re defining rectangles by their sides rather than by their vertices. Let",(function (){var G__174768 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__174769 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__174768,G__174769) : tailrecursion.hoplon.markdown.simple_node.call(null,G__174768,G__174769));
})(),"s see how things must change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__174764,G__174765) : tailrecursion.hoplon.markdown.para_node.call(null,G__174764,G__174765));
})(),(function (){var G__174810 = (function (){var G__174811 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__174812 = (function (){var G__174813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__174814 = "(";
var G__174815 = (function (){var G__174831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__174832 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174831,G__174832) : tailrecursion.hoplon.span.call(null,G__174831,G__174832));
})();
var G__174816 = (function (){var G__174833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174834 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174833,G__174834) : tailrecursion.hoplon.span.call(null,G__174833,G__174834));
})();
var G__174817 = " [";
var G__174818 = (function (){var G__174835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174836 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174835,G__174836) : tailrecursion.hoplon.span.call(null,G__174835,G__174836));
})();
var G__174819 = "]\n  (";
var G__174820 = (function (){var G__174837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__174838 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174837,G__174838) : tailrecursion.hoplon.span.call(null,G__174837,G__174838));
})();
var G__174821 = (function (){var G__174839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174840 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174839,G__174840) : tailrecursion.hoplon.span.call(null,G__174839,G__174840));
})();
var G__174822 = "))\n(";
var G__174823 = (function (){var G__174841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__174842 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174841,G__174842) : tailrecursion.hoplon.span.call(null,G__174841,G__174842));
})();
var G__174824 = (function (){var G__174843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174844 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174843,G__174844) : tailrecursion.hoplon.span.call(null,G__174843,G__174844));
})();
var G__174825 = " [";
var G__174826 = (function (){var G__174845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174846 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174845,G__174846) : tailrecursion.hoplon.span.call(null,G__174845,G__174846));
})();
var G__174827 = "]\n  (";
var G__174828 = (function (){var G__174847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__174848 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174847,G__174848) : tailrecursion.hoplon.span.call(null,G__174847,G__174848));
})();
var G__174829 = (function (){var G__174849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174850 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174849,G__174850) : tailrecursion.hoplon.span.call(null,G__174849,G__174850));
})();
var G__174830 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__174813,G__174814,G__174815,G__174816,G__174817,G__174818,G__174819,G__174820,G__174821,G__174822,G__174823,G__174824,G__174825,G__174826,G__174827,G__174828,G__174829,G__174830) : tailrecursion.hoplon.pre.call(null,G__174813,G__174814,G__174815,G__174816,G__174817,G__174818,G__174819,G__174820,G__174821,G__174822,G__174823,G__174824,G__174825,G__174826,G__174827,G__174828,G__174829,G__174830));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__174811,G__174812) : tailrecursion.hoplon.div.call(null,G__174811,G__174812));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__174810) : tailrecursion.hoplon.div.call(null,G__174810));
})(),(function (){var G__174851 = cljs.core.PersistentArrayMap.EMPTY;
var G__174852 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then everything else works just fine."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__174851,G__174852) : tailrecursion.hoplon.markdown.para_node.call(null,G__174851,G__174852));
})(),(function (){var G__174853 = cljs.core.PersistentArrayMap.EMPTY;
var G__174854 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: if we wanted to check to make sure that the points were in fact vertices of a rectangle, we could just add an ",(function (){var G__174855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"if"], null);
var G__174856 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__174855,G__174856) : tailrecursion.hoplon.markdown.code_node.call(null,G__174855,G__174856));
})()," statement to our definition of ",(function (){var G__174857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rectangle"], null);
var G__174858 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__174857,G__174858) : tailrecursion.hoplon.markdown.code_node.call(null,G__174857,G__174858));
})()," such that if it passes the Pythagorean test "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__174853,G__174854) : tailrecursion.hoplon.markdown.para_node.call(null,G__174853,G__174854));
})(),(function (){var G__174907 = (function (){var G__174908 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__174909 = (function (){var G__174910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__174911 = "(";
var G__174912 = (function (){var G__174934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__174935 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174934,G__174935) : tailrecursion.hoplon.span.call(null,G__174934,G__174935));
})();
var G__174913 = "(";
var G__174914 = (function (){var G__174936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174937 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174936,G__174937) : tailrecursion.hoplon.span.call(null,G__174936,G__174937));
})();
var G__174915 = " (";
var G__174916 = (function (){var G__174938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174939 = "diagonal-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174938,G__174939) : tailrecursion.hoplon.span.call(null,G__174938,G__174939));
})();
var G__174917 = " ";
var G__174918 = (function (){var G__174940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174941 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174940,G__174941) : tailrecursion.hoplon.span.call(null,G__174940,G__174941));
})();
var G__174919 = ")) \n   (";
var G__174920 = (function (){var G__174942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__174943 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174942,G__174943) : tailrecursion.hoplon.span.call(null,G__174942,G__174943));
})();
var G__174921 = "(";
var G__174922 = (function (){var G__174944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174945 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174944,G__174945) : tailrecursion.hoplon.span.call(null,G__174944,G__174945));
})();
var G__174923 = " (";
var G__174924 = (function (){var G__174946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174947 = "side1-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174946,G__174947) : tailrecursion.hoplon.span.call(null,G__174946,G__174947));
})();
var G__174925 = " ";
var G__174926 = (function (){var G__174948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174949 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174948,G__174949) : tailrecursion.hoplon.span.call(null,G__174948,G__174949));
})();
var G__174927 = ")) \n      (";
var G__174928 = (function (){var G__174950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174951 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174950,G__174951) : tailrecursion.hoplon.span.call(null,G__174950,G__174951));
})();
var G__174929 = " (";
var G__174930 = (function (){var G__174952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__174953 = "side2-rectangle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174952,G__174953) : tailrecursion.hoplon.span.call(null,G__174952,G__174953));
})();
var G__174931 = " ";
var G__174932 = (function (){var G__174954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__174955 = "r";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__174954,G__174955) : tailrecursion.hoplon.span.call(null,G__174954,G__174955));
})();
var G__174933 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24(G__174910,G__174911,G__174912,G__174913,G__174914,G__174915,G__174916,G__174917,G__174918,G__174919,G__174920,G__174921,G__174922,G__174923,G__174924,G__174925,G__174926,G__174927,G__174928,G__174929,G__174930,G__174931,G__174932,G__174933) : tailrecursion.hoplon.pre.call(null,G__174910,G__174911,G__174912,G__174913,G__174914,G__174915,G__174916,G__174917,G__174918,G__174919,G__174920,G__174921,G__174922,G__174923,G__174924,G__174925,G__174926,G__174927,G__174928,G__174929,G__174930,G__174931,G__174932,G__174933));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__174908,G__174909) : tailrecursion.hoplon.div.call(null,G__174908,G__174909));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__174907) : tailrecursion.hoplon.div.call(null,G__174907));
})(),(function (){var G__174956 = cljs.core.PersistentArrayMap.EMPTY;
var G__174957 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Where ",(function (){var G__174958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"diagonal-rectangle"], null);
var G__174959 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__174958,G__174959) : tailrecursion.hoplon.markdown.code_node.call(null,G__174958,G__174959));
})()," would be defined in the necessary way to get what should be the diagonal of the rectangle."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__174956,G__174957) : tailrecursion.hoplon.markdown.para_node.call(null,G__174956,G__174957));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_173994;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_173993;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_173992;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_173991;
}})()], 0))], 0))], 0));
var G__170664 = "";
var G__170665 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"What is Meant by Data?"], null),(function (){var _STAR_references_STAR_174960 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_174961 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_174962 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_174963 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__174964 = cljs.core.PersistentArrayMap.EMPTY;
var G__174965 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We began the rational-number implementation in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/sect/1/sub/1/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 2.1.1"], null)], 0))," by implementing the rational-number operations ",(function (){var G__174966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-rat"], null);
var G__174967 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__174966,G__174967) : tailrecursion.hoplon.markdown.code_node.call(null,G__174966,G__174967));
})(),", ",(function (){var G__174968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-rat"], null);
var G__174969 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__174968,G__174969) : tailrecursion.hoplon.markdown.code_node.call(null,G__174968,G__174969));
})(),", and so on in terms of three unspecified procedures: ",(function (){var G__174970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__174971 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__174970,G__174971) : tailrecursion.hoplon.markdown.code_node.call(null,G__174970,G__174971));
})(),", ",(function (){var G__174972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__174973 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__174972,G__174973) : tailrecursion.hoplon.markdown.code_node.call(null,G__174972,G__174973));
})(),", and ",(function (){var G__174974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__174975 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__174974,G__174975) : tailrecursion.hoplon.markdown.code_node.call(null,G__174974,G__174975));
})(),". At that point, we could think of the operations as being defined in terms of data objects ",(function (){var G__174976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__174977 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__174976,G__174977) : tailrecursion.hoplon.markdown.simple_node.call(null,G__174976,G__174977));
})()," numerators, denominators, and rational numbers ",(function (){var G__174978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__174979 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__174978,G__174979) : tailrecursion.hoplon.markdown.simple_node.call(null,G__174978,G__174979));
})()," whose behavior was specified by the latter three procedures."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__174964,G__174965) : tailrecursion.hoplon.markdown.para_node.call(null,G__174964,G__174965));
})(),(function (){var G__174980 = cljs.core.PersistentArrayMap.EMPTY;
var G__174981 = cljs.core.PersistentVector.fromArray(["But exactly what is meant by ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["data"], null)], 0)),"? It is not enough to say ",(function (){var G__174982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__174983 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["whatever is implemented by the given selectors and constructors."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__174982,G__174983) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__174982,G__174983));
})()," Clearly, not every arbitrary set of three procedures can serve as an appropriate basis for the rational-number implementation. We need to guarantee that, if we construct a rational number ",(function (){var G__174984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__174985 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__174984,G__174985) : tailrecursion.hoplon.markdown.code_node.call(null,G__174984,G__174985));
})()," from a pair of integers ",(function (){var G__174986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__174987 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__174986,G__174987) : tailrecursion.hoplon.markdown.code_node.call(null,G__174986,G__174987));
})()," and ",(function (){var G__174988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"d"], null);
var G__174989 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__174988,G__174989) : tailrecursion.hoplon.markdown.code_node.call(null,G__174988,G__174989));
})(),", then extracting the ",(function (){var G__174990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__174991 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__174990,G__174991) : tailrecursion.hoplon.markdown.code_node.call(null,G__174990,G__174991));
})()," and the ",(function (){var G__174992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__174993 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__174992,G__174993) : tailrecursion.hoplon.markdown.code_node.call(null,G__174992,G__174993));
})()," of ",(function (){var G__174994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__174995 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__174994,G__174995) : tailrecursion.hoplon.markdown.code_node.call(null,G__174994,G__174995));
})()," and dividing them should yield the same result as dividing ",(function (){var G__174996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__174997 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__174996,G__174997) : tailrecursion.hoplon.markdown.code_node.call(null,G__174996,G__174997));
})()," by ",(function (){var G__174998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"d"], null);
var G__174999 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__174998,G__174999) : tailrecursion.hoplon.markdown.code_node.call(null,G__174998,G__174999));
})(),". In other words, ",(function (){var G__175000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__175001 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175000,G__175001) : tailrecursion.hoplon.markdown.code_node.call(null,G__175000,G__175001));
})(),", ",(function (){var G__175002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__175003 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175002,G__175003) : tailrecursion.hoplon.markdown.code_node.call(null,G__175002,G__175003));
})(),", and ",(function (){var G__175004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__175005 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175004,G__175005) : tailrecursion.hoplon.markdown.code_node.call(null,G__175004,G__175005));
})()," must satisfy the condition that, for any integer ",(function (){var G__175006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__175007 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175006,G__175007) : tailrecursion.hoplon.markdown.code_node.call(null,G__175006,G__175007));
})()," and any non-zero integer ",(function (){var G__175008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"d"], null);
var G__175009 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175008,G__175009) : tailrecursion.hoplon.markdown.code_node.call(null,G__175008,G__175009));
})(),", if ",(function (){var G__175010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__175011 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175010,G__175011) : tailrecursion.hoplon.markdown.code_node.call(null,G__175010,G__175011));
})()," is ",(function (){var G__175012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(make-rat n d)"], null);
var G__175013 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175012,G__175013) : tailrecursion.hoplon.markdown.code_node.call(null,G__175012,G__175013));
})(),", then"], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__174980,G__174981) : tailrecursion.hoplon.markdown.para_node.call(null,G__174980,G__174981));
})(),(function (){var G__175014 = cljs.core.PersistentArrayMap.EMPTY;
var G__175015 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{\\text{(numer x)}}{\\text{(denom x)}}=\\frac{\\text{n}}{\\text{d}}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__175014,G__175015) : tailrecursion.hoplon.markdown.para_node.call(null,G__175014,G__175015));
})(),(function (){var G__175016 = cljs.core.PersistentArrayMap.EMPTY;
var G__175017 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In fact, this is the only condition ",(function (){var G__175018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-rat"], null);
var G__175019 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175018,G__175019) : tailrecursion.hoplon.markdown.code_node.call(null,G__175018,G__175019));
})(),", ",(function (){var G__175020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"numer"], null);
var G__175021 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175020,G__175021) : tailrecursion.hoplon.markdown.code_node.call(null,G__175020,G__175021));
})()," and ",(function (){var G__175022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"denom"], null);
var G__175023 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175022,G__175023) : tailrecursion.hoplon.markdown.code_node.call(null,G__175022,G__175023));
})()," must fulfill in order to form a suitable basis for a rational-number representation. In general, we can think of data as defined by some collection of selectors and constructors, together with specified conditions that these procedures must fulfill in order to be a valid representation.",(function (){var G__175024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__175025 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Surprisingly, this idea is very difficult to formulate rigorously. There are two approaches to giving such a formulation. One, pioneered by C. A. R. Hoare (1972), is known as the method of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["abstract models"], null)], 0)),". It formalizes the ",(function (){var G__175026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__175027 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["procedures plus conditions"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__175026,G__175027) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__175026,G__175027));
})()," specification as outlined in the rational-number example above. Note that the condition on the rational-number representation was stated in terms of facts about integers (equality and division). In general, abstract models define new kinds of data objects in terms of previously defined types of data objects. Assertions about data objects can therefore be checked by reducing them to assertions about previously defined data objects. Another approach, introduced by Zilles at MIT, by Goguen, Thatcher, Wagner, and Wright at IBM (see Thatcher, Wagner, and Wright 1978), and by Guttag at Toronto (see Guttag 1977), is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["algebraic specification"], null)], 0)),". It regards the ",(function (){var G__175028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__175029 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["procedures"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__175028,G__175029) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__175028,G__175029));
})()," as elements of an abstract algebraic system whose behavior is specified by axioms that correspond to our ",(function (){var G__175030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__175031 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["conditions,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__175030,G__175031) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__175030,G__175031));
})()," and uses the techniques of abstract algebra to check assertions about data objects. Both methods are surveyed in the paper by Liskov and Zilles (1975)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__175024,G__175025) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__175024,G__175025));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__175016,G__175017) : tailrecursion.hoplon.markdown.para_node.call(null,G__175016,G__175017));
})(),(function (){var G__175032 = cljs.core.PersistentArrayMap.EMPTY;
var G__175033 = cljs.core.PersistentVector.fromArray(["This point of view can serve to define not only ",(function (){var G__175034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__175035 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["high-level"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__175034,G__175035) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__175034,G__175035));
})()," data objects, such as rational numbers, but lower-level objects as well. Consider the notion of a list or a pair (a list of two elements), which we used in order to define our rational numbers. We never actually said what these were, only that the language supplied procedures ",(function (){var G__175036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__175037 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175036,G__175037) : tailrecursion.hoplon.markdown.code_node.call(null,G__175036,G__175037));
})(),", ",(function (){var G__175038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__175039 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175038,G__175039) : tailrecursion.hoplon.markdown.code_node.call(null,G__175038,G__175039));
})(),", and ",(function (){var G__175040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__175041 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175040,G__175041) : tailrecursion.hoplon.markdown.code_node.call(null,G__175040,G__175041));
})()," for operating on them. But the only thing we need to know about these three operations is that if we glue two objects together using ",(function (){var G__175042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__175043 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175042,G__175043) : tailrecursion.hoplon.markdown.code_node.call(null,G__175042,G__175043));
})()," or ",(function (){var G__175044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__175045 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175044,G__175045) : tailrecursion.hoplon.markdown.code_node.call(null,G__175044,G__175045));
})(),", we can retrieve the objects using ",(function (){var G__175046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__175047 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175046,G__175047) : tailrecursion.hoplon.markdown.code_node.call(null,G__175046,G__175047));
})(),", ",(function (){var G__175048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rest"], null);
var G__175049 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175048,G__175049) : tailrecursion.hoplon.markdown.code_node.call(null,G__175048,G__175049));
})(),", ",(function (){var G__175050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__175051 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175050,G__175051) : tailrecursion.hoplon.markdown.code_node.call(null,G__175050,G__175051));
})()," and ",(function (){var G__175052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"nth"], null);
var G__175053 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175052,G__175053) : tailrecursion.hoplon.markdown.code_node.call(null,G__175052,G__175053));
})(),". That is, the operations satisfy the condition that, for any objects ",(function (){var G__175054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__175055 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175054,G__175055) : tailrecursion.hoplon.markdown.code_node.call(null,G__175054,G__175055));
})()," and ",(function (){var G__175056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y"], null);
var G__175057 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175056,G__175057) : tailrecursion.hoplon.markdown.code_node.call(null,G__175056,G__175057));
})(),", if ",(function (){var G__175058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"z"], null);
var G__175059 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175058,G__175059) : tailrecursion.hoplon.markdown.code_node.call(null,G__175058,G__175059));
})()," is ",(function (){var G__175060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(list x y)"], null);
var G__175061 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175060,G__175061) : tailrecursion.hoplon.markdown.code_node.call(null,G__175060,G__175061));
})()," then ",(function (){var G__175062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(first z)"], null);
var G__175063 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175062,G__175063) : tailrecursion.hoplon.markdown.code_node.call(null,G__175062,G__175063));
})()," is ",(function (){var G__175064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__175065 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175064,G__175065) : tailrecursion.hoplon.markdown.code_node.call(null,G__175064,G__175065));
})()," and ",(function (){var G__175066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(second z)"], null);
var G__175067 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175066,G__175067) : tailrecursion.hoplon.markdown.code_node.call(null,G__175066,G__175067));
})()," is ",(function (){var G__175068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y"], null);
var G__175069 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175068,G__175069) : tailrecursion.hoplon.markdown.code_node.call(null,G__175068,G__175069));
})(),". Indeed, we mentioned that these three procedures are included as primitives in our language. However, any triple of procedures that satisfies the above condition can be used as the basis for implementing pairs. This point is illustrated strikingly by the fact that we could implement ",(function (){var G__175070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__175071 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175070,G__175071) : tailrecursion.hoplon.markdown.code_node.call(null,G__175070,G__175071));
})(),", ",(function (){var G__175072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__175073 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175072,G__175073) : tailrecursion.hoplon.markdown.code_node.call(null,G__175072,G__175073));
})(),", and ",(function (){var G__175074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__175075 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175074,G__175075) : tailrecursion.hoplon.markdown.code_node.call(null,G__175074,G__175075));
})()," for lists without using any data structures at all but only using procedures. Here are the definitions:"], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__175032,G__175033) : tailrecursion.hoplon.markdown.para_node.call(null,G__175032,G__175033));
})(),(function (){var G__175207 = (function (){var G__175208 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__175209 = (function (){var G__175210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__175211 = "(";
var G__175212 = (function (){var G__175273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__175274 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175273,G__175274) : tailrecursion.hoplon.span.call(null,G__175273,G__175274));
})();
var G__175213 = (function (){var G__175275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__175276 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175275,G__175276) : tailrecursion.hoplon.span.call(null,G__175275,G__175276));
})();
var G__175214 = "[";
var G__175215 = (function (){var G__175277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175278 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175277,G__175278) : tailrecursion.hoplon.span.call(null,G__175277,G__175278));
})();
var G__175216 = " ";
var G__175217 = (function (){var G__175279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175280 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175279,G__175280) : tailrecursion.hoplon.span.call(null,G__175279,G__175280));
})();
var G__175218 = "]\n  (";
var G__175219 = (function (){var G__175281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__175282 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175281,G__175282) : tailrecursion.hoplon.span.call(null,G__175281,G__175282));
})();
var G__175220 = "[";
var G__175221 = (function (){var G__175283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175284 = "dispatch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175283,G__175284) : tailrecursion.hoplon.span.call(null,G__175283,G__175284));
})();
var G__175222 = " (";
var G__175223 = (function (){var G__175285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__175286 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175285,G__175286) : tailrecursion.hoplon.span.call(null,G__175285,G__175286));
})();
var G__175224 = "[";
var G__175225 = (function (){var G__175287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175288 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175287,G__175288) : tailrecursion.hoplon.span.call(null,G__175287,G__175288));
})();
var G__175226 = "] (";
var G__175227 = (function (){var G__175289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__175290 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175289,G__175290) : tailrecursion.hoplon.span.call(null,G__175289,G__175290));
})();
var G__175228 = "(";
var G__175229 = (function (){var G__175291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__175292 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175291,G__175292) : tailrecursion.hoplon.span.call(null,G__175291,G__175292));
})();
var G__175230 = (function (){var G__175293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175294 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175293,G__175294) : tailrecursion.hoplon.span.call(null,G__175293,G__175294));
})();
var G__175231 = " ";
var G__175232 = (function (){var G__175295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__175296 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175295,G__175296) : tailrecursion.hoplon.span.call(null,G__175295,G__175296));
})();
var G__175233 = ") ";
var G__175234 = (function (){var G__175297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175298 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175297,G__175298) : tailrecursion.hoplon.span.call(null,G__175297,G__175298));
})();
var G__175235 = "\n                               (";
var G__175236 = (function (){var G__175299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__175300 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175299,G__175300) : tailrecursion.hoplon.span.call(null,G__175299,G__175300));
})();
var G__175237 = (function (){var G__175301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175302 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175301,G__175302) : tailrecursion.hoplon.span.call(null,G__175301,G__175302));
})();
var G__175238 = " ";
var G__175239 = (function (){var G__175303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__175304 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175303,G__175304) : tailrecursion.hoplon.span.call(null,G__175303,G__175304));
})();
var G__175240 = ") ";
var G__175241 = (function (){var G__175305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175306 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175305,G__175306) : tailrecursion.hoplon.span.call(null,G__175305,G__175306));
})();
var G__175242 = "\n                               ";
var G__175243 = (function (){var G__175307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175308 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175307,G__175308) : tailrecursion.hoplon.span.call(null,G__175307,G__175308));
})();
var G__175244 = " (";
var G__175245 = (function (){var G__175309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__175310 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175309,G__175310) : tailrecursion.hoplon.span.call(null,G__175309,G__175310));
})();
var G__175246 = " (";
var G__175247 = (function (){var G__175311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__175312 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175311,G__175312) : tailrecursion.hoplon.span.call(null,G__175311,G__175312));
})();
var G__175248 = " ";
var G__175249 = (function (){var G__175313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__175314 = "\"Argument not 0 or 1 -- CONS\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175313,G__175314) : tailrecursion.hoplon.span.call(null,G__175313,G__175314));
})();
var G__175250 = " ";
var G__175251 = (function (){var G__175315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175316 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175315,G__175316) : tailrecursion.hoplon.span.call(null,G__175315,G__175316));
})();
var G__175252 = "))))]\n    ";
var G__175253 = (function (){var G__175317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175318 = "dispatch";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175317,G__175318) : tailrecursion.hoplon.span.call(null,G__175317,G__175318));
})();
var G__175254 = "))\n\n(";
var G__175255 = (function (){var G__175319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__175320 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175319,G__175320) : tailrecursion.hoplon.span.call(null,G__175319,G__175320));
})();
var G__175256 = (function (){var G__175321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175322 = "car";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175321,G__175322) : tailrecursion.hoplon.span.call(null,G__175321,G__175322));
})();
var G__175257 = " [";
var G__175258 = (function (){var G__175323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175324 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175323,G__175324) : tailrecursion.hoplon.span.call(null,G__175323,G__175324));
})();
var G__175259 = "] (";
var G__175260 = (function (){var G__175325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__175326 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175325,G__175326) : tailrecursion.hoplon.span.call(null,G__175325,G__175326));
})();
var G__175261 = " ";
var G__175262 = (function (){var G__175327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__175328 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175327,G__175328) : tailrecursion.hoplon.span.call(null,G__175327,G__175328));
})();
var G__175263 = "))\n\n(";
var G__175264 = (function (){var G__175329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__175330 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175329,G__175330) : tailrecursion.hoplon.span.call(null,G__175329,G__175330));
})();
var G__175265 = (function (){var G__175331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175332 = "cdr";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175331,G__175332) : tailrecursion.hoplon.span.call(null,G__175331,G__175332));
})();
var G__175266 = " [";
var G__175267 = (function (){var G__175333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175334 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175333,G__175334) : tailrecursion.hoplon.span.call(null,G__175333,G__175334));
})();
var G__175268 = "] (";
var G__175269 = (function (){var G__175335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__175336 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175335,G__175336) : tailrecursion.hoplon.span.call(null,G__175335,G__175336));
})();
var G__175270 = " ";
var G__175271 = (function (){var G__175337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__175338 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175337,G__175338) : tailrecursion.hoplon.span.call(null,G__175337,G__175338));
})();
var G__175272 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63(G__175210,G__175211,G__175212,G__175213,G__175214,G__175215,G__175216,G__175217,G__175218,G__175219,G__175220,G__175221,G__175222,G__175223,G__175224,G__175225,G__175226,G__175227,G__175228,G__175229,G__175230,G__175231,G__175232,G__175233,G__175234,G__175235,G__175236,G__175237,G__175238,G__175239,G__175240,G__175241,G__175242,G__175243,G__175244,G__175245,G__175246,G__175247,G__175248,G__175249,G__175250,G__175251,G__175252,G__175253,G__175254,G__175255,G__175256,G__175257,G__175258,G__175259,G__175260,G__175261,G__175262,G__175263,G__175264,G__175265,G__175266,G__175267,G__175268,G__175269,G__175270,G__175271,G__175272) : tailrecursion.hoplon.pre.call(null,G__175210,G__175211,G__175212,G__175213,G__175214,G__175215,G__175216,G__175217,G__175218,G__175219,G__175220,G__175221,G__175222,G__175223,G__175224,G__175225,G__175226,G__175227,G__175228,G__175229,G__175230,G__175231,G__175232,G__175233,G__175234,G__175235,G__175236,G__175237,G__175238,G__175239,G__175240,G__175241,G__175242,G__175243,G__175244,G__175245,G__175246,G__175247,G__175248,G__175249,G__175250,G__175251,G__175252,G__175253,G__175254,G__175255,G__175256,G__175257,G__175258,G__175259,G__175260,G__175261,G__175262,G__175263,G__175264,G__175265,G__175266,G__175267,G__175268,G__175269,G__175270,G__175271,G__175272));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__175208,G__175209) : tailrecursion.hoplon.div.call(null,G__175208,G__175209));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__175207) : tailrecursion.hoplon.div.call(null,G__175207));
})(),(function (){var G__175339 = cljs.core.PersistentArrayMap.EMPTY;
var G__175340 = new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In the above definitions I used ",(function (){var G__175341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__175342 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175341,G__175342) : tailrecursion.hoplon.markdown.code_node.call(null,G__175341,G__175342));
})(),", ",(function (){var G__175343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__175344 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175343,G__175344) : tailrecursion.hoplon.markdown.code_node.call(null,G__175343,G__175344));
})(),", and ",(function (){var G__175345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__175346 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175345,G__175346) : tailrecursion.hoplon.markdown.code_node.call(null,G__175345,G__175346));
})()," instead of ",(function (){var G__175347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"list"], null);
var G__175348 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175347,G__175348) : tailrecursion.hoplon.markdown.code_node.call(null,G__175347,G__175348));
})(),", ",(function (){var G__175349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first"], null);
var G__175350 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175349,G__175350) : tailrecursion.hoplon.markdown.code_node.call(null,G__175349,G__175350));
})(),", and ",(function (){var G__175351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"second"], null);
var G__175352 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175351,G__175352) : tailrecursion.hoplon.markdown.code_node.call(null,G__175351,G__175352));
})()," simply because I like to not deviate from the book whenever possible and it doesn",(function (){var G__175353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__175354 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__175353,G__175354) : tailrecursion.hoplon.markdown.simple_node.call(null,G__175353,G__175354));
})(),"t necessarily add anything to deviate. On the down side (of deviating from the text), this construction would not work if we used lists because lists can have any number of elements so we",(function (){var G__175355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__175356 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__175355,G__175356) : tailrecursion.hoplon.markdown.simple_node.call(null,G__175355,G__175356));
})(),"d have to use other methods to make it work. We digress",(function (){var G__175357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__175358 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__175357,G__175358) : tailrecursion.hoplon.markdown.simple_node.call(null,G__175357,G__175358));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__175339,G__175340) : tailrecursion.hoplon.markdown.para_node.call(null,G__175339,G__175340));
})(),(function (){var G__175359 = cljs.core.PersistentArrayMap.EMPTY;
var G__175360 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This use of procedures corresponds to nothing like our intuitive notion of what data should be. Nevertheless, all we need to do to show that this is a valid way to represent pairs is to verify that these procedures satisfy the condition given above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__175359,G__175360) : tailrecursion.hoplon.markdown.para_node.call(null,G__175359,G__175360));
})(),(function (){var G__175361 = cljs.core.PersistentArrayMap.EMPTY;
var G__175362 = cljs.core.PersistentVector.fromArray(["The subtle point to notice is that the value returned by ",(function (){var G__175363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(cons x y)"], null);
var G__175364 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175363,G__175364) : tailrecursion.hoplon.markdown.code_node.call(null,G__175363,G__175364));
})()," is a procedure ",(function (){var G__175365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__175366 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__175365,G__175366) : tailrecursion.hoplon.markdown.simple_node.call(null,G__175365,G__175366));
})()," namely the internally defined procedure ",(function (){var G__175367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"dispatch"], null);
var G__175368 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175367,G__175368) : tailrecursion.hoplon.markdown.code_node.call(null,G__175367,G__175368));
})(),", which takes one argument and returns either ",(function (){var G__175369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__175370 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175369,G__175370) : tailrecursion.hoplon.markdown.code_node.call(null,G__175369,G__175370));
})()," or ",(function (){var G__175371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y"], null);
var G__175372 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175371,G__175372) : tailrecursion.hoplon.markdown.code_node.call(null,G__175371,G__175372));
})()," depending on whether the argument is 0 or 1. Correspondingly, ",(function (){var G__175373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(car z)"], null);
var G__175374 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175373,G__175374) : tailrecursion.hoplon.markdown.code_node.call(null,G__175373,G__175374));
})()," is defined to apply ",(function (){var G__175375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"z"], null);
var G__175376 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175375,G__175376) : tailrecursion.hoplon.markdown.code_node.call(null,G__175375,G__175376));
})()," to 0. Hence, if ",(function (){var G__175377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"z"], null);
var G__175378 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175377,G__175378) : tailrecursion.hoplon.markdown.code_node.call(null,G__175377,G__175378));
})()," is the procedure formed by ",(function (){var G__175379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(cons x\ny)"], null);
var G__175380 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175379,G__175380) : tailrecursion.hoplon.markdown.code_node.call(null,G__175379,G__175380));
})(),", then ",(function (){var G__175381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"z"], null);
var G__175382 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175381,G__175382) : tailrecursion.hoplon.markdown.code_node.call(null,G__175381,G__175382));
})()," applied to 0 will yield ",(function (){var G__175383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__175384 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175383,G__175384) : tailrecursion.hoplon.markdown.code_node.call(null,G__175383,G__175384));
})(),". Thus, we have shown that ",(function (){var G__175385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(car (cons x y))"], null);
var G__175386 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175385,G__175386) : tailrecursion.hoplon.markdown.code_node.call(null,G__175385,G__175386));
})()," yields ",(function (){var G__175387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__175388 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175387,G__175388) : tailrecursion.hoplon.markdown.code_node.call(null,G__175387,G__175388));
})(),", as desired. Similarly, ",(function (){var G__175389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(cdr (cons x\ny))"], null);
var G__175390 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175389,G__175390) : tailrecursion.hoplon.markdown.code_node.call(null,G__175389,G__175390));
})()," applies the procedure returned by ",(function (){var G__175391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(cons x y)"], null);
var G__175392 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175391,G__175392) : tailrecursion.hoplon.markdown.code_node.call(null,G__175391,G__175392));
})()," to 1, which returns ",(function (){var G__175393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"y"], null);
var G__175394 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175393,G__175394) : tailrecursion.hoplon.markdown.code_node.call(null,G__175393,G__175394));
})(),". Therefore, this procedural implementation of pairs is a valid implementation, and if we access pairs using only ",(function (){var G__175395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__175396 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175395,G__175396) : tailrecursion.hoplon.markdown.code_node.call(null,G__175395,G__175396));
})(),", ",(function (){var G__175397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__175398 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175397,G__175398) : tailrecursion.hoplon.markdown.code_node.call(null,G__175397,G__175398));
})(),", and ",(function (){var G__175399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__175400 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175399,G__175400) : tailrecursion.hoplon.markdown.code_node.call(null,G__175399,G__175400));
})()," we cannot distinguish this implementation from one that uses ",(function (){var G__175401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__175402 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["real"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__175401,G__175402) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__175401,G__175402));
})()," data structures."], true);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__175361,G__175362) : tailrecursion.hoplon.markdown.para_node.call(null,G__175361,G__175362));
})(),(function (){var G__175403 = cljs.core.PersistentArrayMap.EMPTY;
var G__175404 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The point of exhibiting the procedural representation of pairs is not that our language works this way (Scheme, and Lisp systems in general, implement pairs directly, and Clojure implements lists directly as Java objects, for efficiency reasons) but that it could work this way. The procedural representation, although obscure, is a perfectly adequate way to represent pairs, since it fulfills the only conditions that pairs need to fulfill. This example also demonstrates that the ability to manipulate procedures as objects automatically provides the ability to represent compound data. This may seem a curiosity now, but procedural representations of data will play a central role in our programming repertoire. This style of programming is often called message passing, and we will be using it as a basic tool in chapter 3 when we address the issues of modeling and simulation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__175403,G__175404) : tailrecursion.hoplon.markdown.para_node.call(null,G__175403,G__175404));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_174963;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_174962;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_174961;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_174960;
}})()], 0));
var G__170666 = "";
var G__170667 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_175405 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_175406 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_175407 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_175408 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__175409 = cljs.core.PersistentArrayMap.EMPTY;
var G__175410 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Here is an alternative procedural representation of pairs. For this representation, verify that (car (cons x y)) yields x for any objects x and y."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__175409,G__175410) : tailrecursion.hoplon.markdown.para_node.call(null,G__175409,G__175410));
})(),(function (){var G__175481 = (function (){var G__175482 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__175483 = (function (){var G__175484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__175485 = "(";
var G__175486 = (function (){var G__175518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__175519 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175518,G__175519) : tailrecursion.hoplon.span.call(null,G__175518,G__175519));
})();
var G__175487 = (function (){var G__175520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__175521 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175520,G__175521) : tailrecursion.hoplon.span.call(null,G__175520,G__175521));
})();
var G__175488 = "[";
var G__175489 = (function (){var G__175522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175523 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175522,G__175523) : tailrecursion.hoplon.span.call(null,G__175522,G__175523));
})();
var G__175490 = " ";
var G__175491 = (function (){var G__175524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175525 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175524,G__175525) : tailrecursion.hoplon.span.call(null,G__175524,G__175525));
})();
var G__175492 = "]\n  (";
var G__175493 = (function (){var G__175526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__175527 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175526,G__175527) : tailrecursion.hoplon.span.call(null,G__175526,G__175527));
})();
var G__175494 = "[";
var G__175495 = (function (){var G__175528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175529 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175528,G__175529) : tailrecursion.hoplon.span.call(null,G__175528,G__175529));
})();
var G__175496 = "] (";
var G__175497 = (function (){var G__175530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__175531 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175530,G__175531) : tailrecursion.hoplon.span.call(null,G__175530,G__175531));
})();
var G__175498 = " ";
var G__175499 = (function (){var G__175532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175533 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175532,G__175533) : tailrecursion.hoplon.span.call(null,G__175532,G__175533));
})();
var G__175500 = " ";
var G__175501 = (function (){var G__175534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175535 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175534,G__175535) : tailrecursion.hoplon.span.call(null,G__175534,G__175535));
})();
var G__175502 = ")))\n(";
var G__175503 = (function (){var G__175536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__175537 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175536,G__175537) : tailrecursion.hoplon.span.call(null,G__175536,G__175537));
})();
var G__175504 = (function (){var G__175538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175539 = "car";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175538,G__175539) : tailrecursion.hoplon.span.call(null,G__175538,G__175539));
})();
var G__175505 = " [";
var G__175506 = (function (){var G__175540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175541 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175540,G__175541) : tailrecursion.hoplon.span.call(null,G__175540,G__175541));
})();
var G__175507 = "]\n  (";
var G__175508 = (function (){var G__175542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__175543 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175542,G__175543) : tailrecursion.hoplon.span.call(null,G__175542,G__175543));
})();
var G__175509 = " (";
var G__175510 = (function (){var G__175544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__175545 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175544,G__175545) : tailrecursion.hoplon.span.call(null,G__175544,G__175545));
})();
var G__175511 = "[";
var G__175512 = (function (){var G__175546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175547 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175546,G__175547) : tailrecursion.hoplon.span.call(null,G__175546,G__175547));
})();
var G__175513 = " ";
var G__175514 = (function (){var G__175548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175549 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175548,G__175549) : tailrecursion.hoplon.span.call(null,G__175548,G__175549));
})();
var G__175515 = "] ";
var G__175516 = (function (){var G__175550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175551 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175550,G__175551) : tailrecursion.hoplon.span.call(null,G__175550,G__175551));
})();
var G__175517 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34(G__175484,G__175485,G__175486,G__175487,G__175488,G__175489,G__175490,G__175491,G__175492,G__175493,G__175494,G__175495,G__175496,G__175497,G__175498,G__175499,G__175500,G__175501,G__175502,G__175503,G__175504,G__175505,G__175506,G__175507,G__175508,G__175509,G__175510,G__175511,G__175512,G__175513,G__175514,G__175515,G__175516,G__175517) : tailrecursion.hoplon.pre.call(null,G__175484,G__175485,G__175486,G__175487,G__175488,G__175489,G__175490,G__175491,G__175492,G__175493,G__175494,G__175495,G__175496,G__175497,G__175498,G__175499,G__175500,G__175501,G__175502,G__175503,G__175504,G__175505,G__175506,G__175507,G__175508,G__175509,G__175510,G__175511,G__175512,G__175513,G__175514,G__175515,G__175516,G__175517));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__175482,G__175483) : tailrecursion.hoplon.div.call(null,G__175482,G__175483));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__175481) : tailrecursion.hoplon.div.call(null,G__175481));
})(),(function (){var G__175552 = cljs.core.PersistentArrayMap.EMPTY;
var G__175553 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What is the corresponding definition of ",(function (){var G__175554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__175555 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175554,G__175555) : tailrecursion.hoplon.markdown.code_node.call(null,G__175554,G__175555));
})(),"? (Hint: To verify that ths works, make use of the substitution model of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/1/sub/5/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.1.5"], null)], 0)),".)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__175552,G__175553) : tailrecursion.hoplon.markdown.para_node.call(null,G__175552,G__175553));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_175408;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_175407;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_175406;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_175405;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_175556 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_175557 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_175558 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_175559 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__175595 = (function (){var G__175596 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__175597 = (function (){var G__175598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__175599 = "(";
var G__175600 = (function (){var G__175615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__175616 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175615,G__175616) : tailrecursion.hoplon.span.call(null,G__175615,G__175616));
})();
var G__175601 = (function (){var G__175617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175618 = "cdr";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175617,G__175618) : tailrecursion.hoplon.span.call(null,G__175617,G__175618));
})();
var G__175602 = " [";
var G__175603 = (function (){var G__175619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175620 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175619,G__175620) : tailrecursion.hoplon.span.call(null,G__175619,G__175620));
})();
var G__175604 = "]\n  (";
var G__175605 = (function (){var G__175621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__175622 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175621,G__175622) : tailrecursion.hoplon.span.call(null,G__175621,G__175622));
})();
var G__175606 = " (";
var G__175607 = (function (){var G__175623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__175624 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175623,G__175624) : tailrecursion.hoplon.span.call(null,G__175623,G__175624));
})();
var G__175608 = "[";
var G__175609 = (function (){var G__175625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175626 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175625,G__175626) : tailrecursion.hoplon.span.call(null,G__175625,G__175626));
})();
var G__175610 = " ";
var G__175611 = (function (){var G__175627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175628 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175627,G__175628) : tailrecursion.hoplon.span.call(null,G__175627,G__175628));
})();
var G__175612 = "] ";
var G__175613 = (function (){var G__175629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175630 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175629,G__175630) : tailrecursion.hoplon.span.call(null,G__175629,G__175630));
})();
var G__175614 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__175598,G__175599,G__175600,G__175601,G__175602,G__175603,G__175604,G__175605,G__175606,G__175607,G__175608,G__175609,G__175610,G__175611,G__175612,G__175613,G__175614) : tailrecursion.hoplon.pre.call(null,G__175598,G__175599,G__175600,G__175601,G__175602,G__175603,G__175604,G__175605,G__175606,G__175607,G__175608,G__175609,G__175610,G__175611,G__175612,G__175613,G__175614));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__175596,G__175597) : tailrecursion.hoplon.div.call(null,G__175596,G__175597));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__175595) : tailrecursion.hoplon.div.call(null,G__175595));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_175559;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_175558;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_175557;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_175556;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_175631 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_175632 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_175633 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_175634 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__175635 = cljs.core.PersistentArrayMap.EMPTY;
var G__175636 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Show that we can represent pairs of nonnegative integers using only numbers and arithmetic operations if we represent the pair \\(a\\) and \\(b\\) as the integer that is the product \\(2^a3^b\\). Give the corresponding definitions of the procedures ",(function (){var G__175637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cons"], null);
var G__175638 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175637,G__175638) : tailrecursion.hoplon.markdown.code_node.call(null,G__175637,G__175638));
})(),", ",(function (){var G__175639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"car"], null);
var G__175640 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175639,G__175640) : tailrecursion.hoplon.markdown.code_node.call(null,G__175639,G__175640));
})(),", and ",(function (){var G__175641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cdr"], null);
var G__175642 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__175641,G__175642) : tailrecursion.hoplon.markdown.code_node.call(null,G__175641,G__175642));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__175635,G__175636) : tailrecursion.hoplon.markdown.para_node.call(null,G__175635,G__175636));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_175634;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_175633;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_175632;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_175631;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_175643 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_175644 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_175645 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_175646 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__175856 = (function (){var G__175857 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__175858 = (function (){var G__175859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__175860 = "(";
var G__175861 = (function (){var G__175960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__175961 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175960,G__175961) : tailrecursion.hoplon.span.call(null,G__175960,G__175961));
})();
var G__175862 = (function (){var G__175962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__175963 = "cons ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175962,G__175963) : tailrecursion.hoplon.span.call(null,G__175962,G__175963));
})();
var G__175863 = "[";
var G__175864 = (function (){var G__175964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175965 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175964,G__175965) : tailrecursion.hoplon.span.call(null,G__175964,G__175965));
})();
var G__175865 = " ";
var G__175866 = (function (){var G__175966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175967 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175966,G__175967) : tailrecursion.hoplon.span.call(null,G__175966,G__175967));
})();
var G__175867 = "]\n  (";
var G__175868 = (function (){var G__175968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__175969 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175968,G__175969) : tailrecursion.hoplon.span.call(null,G__175968,G__175969));
})();
var G__175869 = "(";
var G__175870 = (function (){var G__175970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__175971 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175970,G__175971) : tailrecursion.hoplon.span.call(null,G__175970,G__175971));
})();
var G__175871 = " ";
var G__175872 = (function (){var G__175972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__175973 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175972,G__175973) : tailrecursion.hoplon.span.call(null,G__175972,G__175973));
})();
var G__175873 = " ";
var G__175874 = (function (){var G__175974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175975 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175974,G__175975) : tailrecursion.hoplon.span.call(null,G__175974,G__175975));
})();
var G__175875 = ") (";
var G__175876 = (function (){var G__175976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__175977 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175976,G__175977) : tailrecursion.hoplon.span.call(null,G__175976,G__175977));
})();
var G__175877 = " ";
var G__175878 = (function (){var G__175978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__175979 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175978,G__175979) : tailrecursion.hoplon.span.call(null,G__175978,G__175979));
})();
var G__175879 = " ";
var G__175880 = (function (){var G__175980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175981 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175980,G__175981) : tailrecursion.hoplon.span.call(null,G__175980,G__175981));
})();
var G__175881 = ")))\n(";
var G__175882 = (function (){var G__175982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__175983 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175982,G__175983) : tailrecursion.hoplon.span.call(null,G__175982,G__175983));
})();
var G__175883 = (function (){var G__175984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175985 = "car";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175984,G__175985) : tailrecursion.hoplon.span.call(null,G__175984,G__175985));
})();
var G__175884 = " [";
var G__175885 = (function (){var G__175986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175987 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175986,G__175987) : tailrecursion.hoplon.span.call(null,G__175986,G__175987));
})();
var G__175886 = "]\n  (";
var G__175887 = (function (){var G__175988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__175989 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175988,G__175989) : tailrecursion.hoplon.span.call(null,G__175988,G__175989));
})();
var G__175888 = "[";
var G__175889 = (function (){var G__175990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175991 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175990,G__175991) : tailrecursion.hoplon.span.call(null,G__175990,G__175991));
})();
var G__175890 = "    ";
var G__175891 = (function (){var G__175992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175993 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175992,G__175993) : tailrecursion.hoplon.span.call(null,G__175992,G__175993));
})();
var G__175892 = "\n         ";
var G__175893 = (function (){var G__175994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__175995 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175994,G__175995) : tailrecursion.hoplon.span.call(null,G__175994,G__175995));
})();
var G__175894 = " ";
var G__175895 = (function (){var G__175996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__175997 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175996,G__175997) : tailrecursion.hoplon.span.call(null,G__175996,G__175997));
})();
var G__175896 = "]\n    (";
var G__175897 = (function (){var G__175998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__175999 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__175998,G__175999) : tailrecursion.hoplon.span.call(null,G__175998,G__175999));
})();
var G__175898 = "(";
var G__175899 = (function (){var G__176000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__176001 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176000,G__176001) : tailrecursion.hoplon.span.call(null,G__176000,G__176001));
})();
var G__175900 = "(";
var G__175901 = (function (){var G__176002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176003 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176002,G__176003) : tailrecursion.hoplon.span.call(null,G__176002,G__176003));
})();
var G__175902 = " ";
var G__175903 = (function (){var G__176004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176005 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176004,G__176005) : tailrecursion.hoplon.span.call(null,G__176004,G__176005));
})();
var G__175904 = " ";
var G__175905 = (function (){var G__176006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__176007 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176006,G__176007) : tailrecursion.hoplon.span.call(null,G__176006,G__176007));
})();
var G__175906 = ") ";
var G__175907 = (function (){var G__176008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__176009 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176008,G__176009) : tailrecursion.hoplon.span.call(null,G__176008,G__176009));
})();
var G__175908 = ")\n        (";
var G__175909 = (function (){var G__176010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176011 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176010,G__176011) : tailrecursion.hoplon.span.call(null,G__176010,G__176011));
})();
var G__175910 = " (";
var G__175911 = (function (){var G__176012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__176013 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176012,G__176013) : tailrecursion.hoplon.span.call(null,G__176012,G__176013));
})();
var G__175912 = (function (){var G__176014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176015 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176014,G__176015) : tailrecursion.hoplon.span.call(null,G__176014,G__176015));
})();
var G__175913 = " ";
var G__175914 = (function (){var G__176016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__176017 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176016,G__176017) : tailrecursion.hoplon.span.call(null,G__176016,G__176017));
})();
var G__175915 = ") (";
var G__175916 = (function (){var G__176018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__176019 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176018,G__176019) : tailrecursion.hoplon.span.call(null,G__176018,G__176019));
})();
var G__175917 = (function (){var G__176020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176021 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176020,G__176021) : tailrecursion.hoplon.span.call(null,G__176020,G__176021));
})();
var G__175918 = "))\n        ";
var G__175919 = (function (){var G__176022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176023 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176022,G__176023) : tailrecursion.hoplon.span.call(null,G__176022,G__176023));
})();
var G__175920 = ")))\n(";
var G__175921 = (function (){var G__176024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176025 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176024,G__176025) : tailrecursion.hoplon.span.call(null,G__176024,G__176025));
})();
var G__175922 = (function (){var G__176026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176027 = "cdr";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176026,G__176027) : tailrecursion.hoplon.span.call(null,G__176026,G__176027));
})();
var G__175923 = " [";
var G__175924 = (function (){var G__176028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176029 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176028,G__176029) : tailrecursion.hoplon.span.call(null,G__176028,G__176029));
})();
var G__175925 = "]\n  (";
var G__175926 = (function (){var G__176030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176031 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176030,G__176031) : tailrecursion.hoplon.span.call(null,G__176030,G__176031));
})();
var G__175927 = "[";
var G__175928 = (function (){var G__176032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176033 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176032,G__176033) : tailrecursion.hoplon.span.call(null,G__176032,G__176033));
})();
var G__175929 = "    ";
var G__175930 = (function (){var G__176034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176035 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176034,G__176035) : tailrecursion.hoplon.span.call(null,G__176034,G__176035));
})();
var G__175931 = "\n         ";
var G__175932 = (function (){var G__176036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176037 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176036,G__176037) : tailrecursion.hoplon.span.call(null,G__176036,G__176037));
})();
var G__175933 = " ";
var G__175934 = (function (){var G__176038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__176039 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176038,G__176039) : tailrecursion.hoplon.span.call(null,G__176038,G__176039));
})();
var G__175935 = "]\n    (";
var G__175936 = (function (){var G__176040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176041 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176040,G__176041) : tailrecursion.hoplon.span.call(null,G__176040,G__176041));
})();
var G__175937 = "(";
var G__175938 = (function (){var G__176042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__176043 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176042,G__176043) : tailrecursion.hoplon.span.call(null,G__176042,G__176043));
})();
var G__175939 = "(";
var G__175940 = (function (){var G__176044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176045 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176044,G__176045) : tailrecursion.hoplon.span.call(null,G__176044,G__176045));
})();
var G__175941 = " ";
var G__175942 = (function (){var G__176046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176047 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176046,G__176047) : tailrecursion.hoplon.span.call(null,G__176046,G__176047));
})();
var G__175943 = " ";
var G__175944 = (function (){var G__176048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__176049 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176048,G__176049) : tailrecursion.hoplon.span.call(null,G__176048,G__176049));
})();
var G__175945 = ") ";
var G__175946 = (function (){var G__176050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__176051 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176050,G__176051) : tailrecursion.hoplon.span.call(null,G__176050,G__176051));
})();
var G__175947 = ")\n        (";
var G__175948 = (function (){var G__176052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176053 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176052,G__176053) : tailrecursion.hoplon.span.call(null,G__176052,G__176053));
})();
var G__175949 = " (";
var G__175950 = (function (){var G__176054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__176055 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176054,G__176055) : tailrecursion.hoplon.span.call(null,G__176054,G__176055));
})();
var G__175951 = (function (){var G__176056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176057 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176056,G__176057) : tailrecursion.hoplon.span.call(null,G__176056,G__176057));
})();
var G__175952 = " ";
var G__175953 = (function (){var G__176058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__176059 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176058,G__176059) : tailrecursion.hoplon.span.call(null,G__176058,G__176059));
})();
var G__175954 = ") (";
var G__175955 = (function (){var G__176060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__176061 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176060,G__176061) : tailrecursion.hoplon.span.call(null,G__176060,G__176061));
})();
var G__175956 = (function (){var G__176062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176063 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176062,G__176063) : tailrecursion.hoplon.span.call(null,G__176062,G__176063));
})();
var G__175957 = "))\n        ";
var G__175958 = (function (){var G__176064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176065 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176064,G__176065) : tailrecursion.hoplon.span.call(null,G__176064,G__176065));
})();
var G__175959 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$101 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$101(G__175859,G__175860,G__175861,G__175862,G__175863,G__175864,G__175865,G__175866,G__175867,G__175868,G__175869,G__175870,G__175871,G__175872,G__175873,G__175874,G__175875,G__175876,G__175877,G__175878,G__175879,G__175880,G__175881,G__175882,G__175883,G__175884,G__175885,G__175886,G__175887,G__175888,G__175889,G__175890,G__175891,G__175892,G__175893,G__175894,G__175895,G__175896,G__175897,G__175898,G__175899,G__175900,G__175901,G__175902,G__175903,G__175904,G__175905,G__175906,G__175907,G__175908,G__175909,G__175910,G__175911,G__175912,G__175913,G__175914,G__175915,G__175916,G__175917,G__175918,G__175919,G__175920,G__175921,G__175922,G__175923,G__175924,G__175925,G__175926,G__175927,G__175928,G__175929,G__175930,G__175931,G__175932,G__175933,G__175934,G__175935,G__175936,G__175937,G__175938,G__175939,G__175940,G__175941,G__175942,G__175943,G__175944,G__175945,G__175946,G__175947,G__175948,G__175949,G__175950,G__175951,G__175952,G__175953,G__175954,G__175955,G__175956,G__175957,G__175958,G__175959) : tailrecursion.hoplon.pre.call(null,G__175859,G__175860,G__175861,G__175862,G__175863,G__175864,G__175865,G__175866,G__175867,G__175868,G__175869,G__175870,G__175871,G__175872,G__175873,G__175874,G__175875,G__175876,G__175877,G__175878,G__175879,G__175880,G__175881,G__175882,G__175883,G__175884,G__175885,G__175886,G__175887,G__175888,G__175889,G__175890,G__175891,G__175892,G__175893,G__175894,G__175895,G__175896,G__175897,G__175898,G__175899,G__175900,G__175901,G__175902,G__175903,G__175904,G__175905,G__175906,G__175907,G__175908,G__175909,G__175910,G__175911,G__175912,G__175913,G__175914,G__175915,G__175916,G__175917,G__175918,G__175919,G__175920,G__175921,G__175922,G__175923,G__175924,G__175925,G__175926,G__175927,G__175928,G__175929,G__175930,G__175931,G__175932,G__175933,G__175934,G__175935,G__175936,G__175937,G__175938,G__175939,G__175940,G__175941,G__175942,G__175943,G__175944,G__175945,G__175946,G__175947,G__175948,G__175949,G__175950,G__175951,G__175952,G__175953,G__175954,G__175955,G__175956,G__175957,G__175958,G__175959));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__175857,G__175858) : tailrecursion.hoplon.div.call(null,G__175857,G__175858));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__175856) : tailrecursion.hoplon.div.call(null,G__175856));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_175646;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_175645;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_175644;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_175643;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_176066 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_176067 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_176068 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_176069 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__176070 = cljs.core.PersistentArrayMap.EMPTY;
var G__176071 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In case representing pairs as procedures wasn",(function (){var G__176072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__176073 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__176072,G__176073) : tailrecursion.hoplon.markdown.simple_node.call(null,G__176072,G__176073));
})(),"t mind-boggling enough, consider that, in a language that can manipulate procedures, we can get by without numbers (at least insofar as nonnegative integers are concerned) by implementing 0 and the operation of adding 1 as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__176070,G__176071) : tailrecursion.hoplon.markdown.para_node.call(null,G__176070,G__176071));
})(),(function (){var G__176148 = (function (){var G__176149 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__176150 = (function (){var G__176151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__176152 = "(";
var G__176153 = (function (){var G__176187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176188 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176187,G__176188) : tailrecursion.hoplon.span.call(null,G__176187,G__176188));
})();
var G__176154 = (function (){var G__176189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176190 = "zero";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176189,G__176190) : tailrecursion.hoplon.span.call(null,G__176189,G__176190));
})();
var G__176155 = " (";
var G__176156 = (function (){var G__176191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176192 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176191,G__176192) : tailrecursion.hoplon.span.call(null,G__176191,G__176192));
})();
var G__176157 = "[";
var G__176158 = (function (){var G__176193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176194 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176193,G__176194) : tailrecursion.hoplon.span.call(null,G__176193,G__176194));
})();
var G__176159 = "] (";
var G__176160 = (function (){var G__176195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176196 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176195,G__176196) : tailrecursion.hoplon.span.call(null,G__176195,G__176196));
})();
var G__176161 = "[";
var G__176162 = (function (){var G__176197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176198 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176197,G__176198) : tailrecursion.hoplon.span.call(null,G__176197,G__176198));
})();
var G__176163 = "] ";
var G__176164 = (function (){var G__176199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176200 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176199,G__176200) : tailrecursion.hoplon.span.call(null,G__176199,G__176200));
})();
var G__176165 = ")))\n(";
var G__176166 = (function (){var G__176201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176202 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176201,G__176202) : tailrecursion.hoplon.span.call(null,G__176201,G__176202));
})();
var G__176167 = (function (){var G__176203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176204 = "add-1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176203,G__176204) : tailrecursion.hoplon.span.call(null,G__176203,G__176204));
})();
var G__176168 = " [";
var G__176169 = (function (){var G__176205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176206 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176205,G__176206) : tailrecursion.hoplon.span.call(null,G__176205,G__176206));
})();
var G__176170 = "]\n  (";
var G__176171 = (function (){var G__176207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176208 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176207,G__176208) : tailrecursion.hoplon.span.call(null,G__176207,G__176208));
})();
var G__176172 = "[";
var G__176173 = (function (){var G__176209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176210 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176209,G__176210) : tailrecursion.hoplon.span.call(null,G__176209,G__176210));
})();
var G__176174 = "] (";
var G__176175 = (function (){var G__176211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176212 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176211,G__176212) : tailrecursion.hoplon.span.call(null,G__176211,G__176212));
})();
var G__176176 = "[";
var G__176177 = (function (){var G__176213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176214 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176213,G__176214) : tailrecursion.hoplon.span.call(null,G__176213,G__176214));
})();
var G__176178 = "] (";
var G__176179 = (function (){var G__176215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176216 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176215,G__176216) : tailrecursion.hoplon.span.call(null,G__176215,G__176216));
})();
var G__176180 = " ((";
var G__176181 = (function (){var G__176217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176218 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176217,G__176218) : tailrecursion.hoplon.span.call(null,G__176217,G__176218));
})();
var G__176182 = " ";
var G__176183 = (function (){var G__176219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176220 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176219,G__176220) : tailrecursion.hoplon.span.call(null,G__176219,G__176220));
})();
var G__176184 = ") ";
var G__176185 = (function (){var G__176221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176222 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176221,G__176222) : tailrecursion.hoplon.span.call(null,G__176221,G__176222));
})();
var G__176186 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__176151,G__176152,G__176153,G__176154,G__176155,G__176156,G__176157,G__176158,G__176159,G__176160,G__176161,G__176162,G__176163,G__176164,G__176165,G__176166,G__176167,G__176168,G__176169,G__176170,G__176171,G__176172,G__176173,G__176174,G__176175,G__176176,G__176177,G__176178,G__176179,G__176180,G__176181,G__176182,G__176183,G__176184,G__176185,G__176186) : tailrecursion.hoplon.pre.call(null,G__176151,G__176152,G__176153,G__176154,G__176155,G__176156,G__176157,G__176158,G__176159,G__176160,G__176161,G__176162,G__176163,G__176164,G__176165,G__176166,G__176167,G__176168,G__176169,G__176170,G__176171,G__176172,G__176173,G__176174,G__176175,G__176176,G__176177,G__176178,G__176179,G__176180,G__176181,G__176182,G__176183,G__176184,G__176185,G__176186));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__176149,G__176150) : tailrecursion.hoplon.div.call(null,G__176149,G__176150));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__176148) : tailrecursion.hoplon.div.call(null,G__176148));
})(),(function (){var G__176223 = cljs.core.PersistentArrayMap.EMPTY;
var G__176224 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This representation is known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Church numerals"], null)], 0)),", after its inventor, Alanzo Church, the logician who invented the \u03BB calculus."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__176223,G__176224) : tailrecursion.hoplon.markdown.para_node.call(null,G__176223,G__176224));
})(),(function (){var G__176225 = cljs.core.PersistentArrayMap.EMPTY;
var G__176226 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define ",(function (){var G__176227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"one"], null);
var G__176228 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__176227,G__176228) : tailrecursion.hoplon.markdown.code_node.call(null,G__176227,G__176228));
})()," and ",(function (){var G__176229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"two"], null);
var G__176230 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__176229,G__176230) : tailrecursion.hoplon.markdown.code_node.call(null,G__176229,G__176230));
})()," directly (not in terms of ",(function (){var G__176231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"zero"], null);
var G__176232 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__176231,G__176232) : tailrecursion.hoplon.markdown.code_node.call(null,G__176231,G__176232));
})()," and ",(function (){var G__176233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-1"], null);
var G__176234 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__176233,G__176234) : tailrecursion.hoplon.markdown.code_node.call(null,G__176233,G__176234));
})(),"). (Hint: Use substitution to evaluate ",(function (){var G__176235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(add-1 zero)"], null);
var G__176236 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__176235,G__176236) : tailrecursion.hoplon.markdown.code_node.call(null,G__176235,G__176236));
})(),"). Give a direct definition of the addition procedure + (not in terms of repeated application of ",(function (){var G__176237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-1"], null);
var G__176238 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__176237,G__176238) : tailrecursion.hoplon.markdown.code_node.call(null,G__176237,G__176238));
})(),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__176225,G__176226) : tailrecursion.hoplon.markdown.para_node.call(null,G__176225,G__176226));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_176069;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_176068;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_176067;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_176066;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_176239 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_176240 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_176241 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_176242 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__176313 = (function (){var G__176314 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__176315 = (function (){var G__176316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__176317 = "(";
var G__176318 = (function (){var G__176350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176351 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176350,G__176351) : tailrecursion.hoplon.span.call(null,G__176350,G__176351));
})();
var G__176319 = (function (){var G__176352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176353 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176352,G__176353) : tailrecursion.hoplon.span.call(null,G__176352,G__176353));
})();
var G__176320 = "\n  (";
var G__176321 = (function (){var G__176354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176355 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176354,G__176355) : tailrecursion.hoplon.span.call(null,G__176354,G__176355));
})();
var G__176322 = "[";
var G__176323 = (function (){var G__176356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176357 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176356,G__176357) : tailrecursion.hoplon.span.call(null,G__176356,G__176357));
})();
var G__176324 = "] (";
var G__176325 = (function (){var G__176358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176359 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176358,G__176359) : tailrecursion.hoplon.span.call(null,G__176358,G__176359));
})();
var G__176326 = "[";
var G__176327 = (function (){var G__176360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176361 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176360,G__176361) : tailrecursion.hoplon.span.call(null,G__176360,G__176361));
})();
var G__176328 = "] (";
var G__176329 = (function (){var G__176362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176363 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176362,G__176363) : tailrecursion.hoplon.span.call(null,G__176362,G__176363));
})();
var G__176330 = " ";
var G__176331 = (function (){var G__176364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176365 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176364,G__176365) : tailrecursion.hoplon.span.call(null,G__176364,G__176365));
})();
var G__176332 = "))))\n(";
var G__176333 = (function (){var G__176366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176367 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176366,G__176367) : tailrecursion.hoplon.span.call(null,G__176366,G__176367));
})();
var G__176334 = (function (){var G__176368 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176369 = "two";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176368,G__176369) : tailrecursion.hoplon.span.call(null,G__176368,G__176369));
})();
var G__176335 = "\n  (";
var G__176336 = (function (){var G__176370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176371 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176370,G__176371) : tailrecursion.hoplon.span.call(null,G__176370,G__176371));
})();
var G__176337 = "[";
var G__176338 = (function (){var G__176372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176373 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176372,G__176373) : tailrecursion.hoplon.span.call(null,G__176372,G__176373));
})();
var G__176339 = "] (";
var G__176340 = (function (){var G__176374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176375 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176374,G__176375) : tailrecursion.hoplon.span.call(null,G__176374,G__176375));
})();
var G__176341 = "[";
var G__176342 = (function (){var G__176376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176377 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176376,G__176377) : tailrecursion.hoplon.span.call(null,G__176376,G__176377));
})();
var G__176343 = "] (";
var G__176344 = (function (){var G__176378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176379 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176378,G__176379) : tailrecursion.hoplon.span.call(null,G__176378,G__176379));
})();
var G__176345 = " (";
var G__176346 = (function (){var G__176380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176381 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176380,G__176381) : tailrecursion.hoplon.span.call(null,G__176380,G__176381));
})();
var G__176347 = " ";
var G__176348 = (function (){var G__176382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176383 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176382,G__176383) : tailrecursion.hoplon.span.call(null,G__176382,G__176383));
})();
var G__176349 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34(G__176316,G__176317,G__176318,G__176319,G__176320,G__176321,G__176322,G__176323,G__176324,G__176325,G__176326,G__176327,G__176328,G__176329,G__176330,G__176331,G__176332,G__176333,G__176334,G__176335,G__176336,G__176337,G__176338,G__176339,G__176340,G__176341,G__176342,G__176343,G__176344,G__176345,G__176346,G__176347,G__176348,G__176349) : tailrecursion.hoplon.pre.call(null,G__176316,G__176317,G__176318,G__176319,G__176320,G__176321,G__176322,G__176323,G__176324,G__176325,G__176326,G__176327,G__176328,G__176329,G__176330,G__176331,G__176332,G__176333,G__176334,G__176335,G__176336,G__176337,G__176338,G__176339,G__176340,G__176341,G__176342,G__176343,G__176344,G__176345,G__176346,G__176347,G__176348,G__176349));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__176314,G__176315) : tailrecursion.hoplon.div.call(null,G__176314,G__176315));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__176313) : tailrecursion.hoplon.div.call(null,G__176313));
})(),(function (){var G__176384 = cljs.core.PersistentArrayMap.EMPTY;
var G__176385 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for addition, first let",(function (){var G__176386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__176387 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__176386,G__176387) : tailrecursion.hoplon.markdown.simple_node.call(null,G__176386,G__176387));
})(),"s build up a some functions to make this easier to reason about."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__176384,G__176385) : tailrecursion.hoplon.markdown.para_node.call(null,G__176384,G__176385));
})(),(function (){var G__176427 = (function (){var G__176428 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__176429 = (function (){var G__176430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__176431 = "(";
var G__176432 = (function (){var G__176449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176450 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176449,G__176450) : tailrecursion.hoplon.span.call(null,G__176449,G__176450));
})();
var G__176433 = (function (){var G__176451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176452 = "compose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176451,G__176452) : tailrecursion.hoplon.span.call(null,G__176451,G__176452));
})();
var G__176434 = " [";
var G__176435 = (function (){var G__176453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176454 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176453,G__176454) : tailrecursion.hoplon.span.call(null,G__176453,G__176454));
})();
var G__176436 = " ";
var G__176437 = (function (){var G__176455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176456 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176455,G__176456) : tailrecursion.hoplon.span.call(null,G__176455,G__176456));
})();
var G__176438 = "]\n  (";
var G__176439 = (function (){var G__176457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176458 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176457,G__176458) : tailrecursion.hoplon.span.call(null,G__176457,G__176458));
})();
var G__176440 = "[";
var G__176441 = (function (){var G__176459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176460 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176459,G__176460) : tailrecursion.hoplon.span.call(null,G__176459,G__176460));
})();
var G__176442 = "] (";
var G__176443 = (function (){var G__176461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176462 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176461,G__176462) : tailrecursion.hoplon.span.call(null,G__176461,G__176462));
})();
var G__176444 = " (";
var G__176445 = (function (){var G__176463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176464 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176463,G__176464) : tailrecursion.hoplon.span.call(null,G__176463,G__176464));
})();
var G__176446 = " ";
var G__176447 = (function (){var G__176465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176466 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176465,G__176466) : tailrecursion.hoplon.span.call(null,G__176465,G__176466));
})();
var G__176448 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__176430,G__176431,G__176432,G__176433,G__176434,G__176435,G__176436,G__176437,G__176438,G__176439,G__176440,G__176441,G__176442,G__176443,G__176444,G__176445,G__176446,G__176447,G__176448) : tailrecursion.hoplon.pre.call(null,G__176430,G__176431,G__176432,G__176433,G__176434,G__176435,G__176436,G__176437,G__176438,G__176439,G__176440,G__176441,G__176442,G__176443,G__176444,G__176445,G__176446,G__176447,G__176448));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__176428,G__176429) : tailrecursion.hoplon.div.call(null,G__176428,G__176429));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__176427) : tailrecursion.hoplon.div.call(null,G__176427));
})(),(function (){var G__176467 = cljs.core.PersistentArrayMap.EMPTY;
var G__176468 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With that, we can now define"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__176467,G__176468) : tailrecursion.hoplon.markdown.para_node.call(null,G__176467,G__176468));
})(),(function (){var G__176516 = (function (){var G__176517 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__176518 = (function (){var G__176519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__176520 = "(";
var G__176521 = (function (){var G__176542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176543 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176542,G__176543) : tailrecursion.hoplon.span.call(null,G__176542,G__176543));
})();
var G__176522 = (function (){var G__176544 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176545 = "add";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176544,G__176545) : tailrecursion.hoplon.span.call(null,G__176544,G__176545));
})();
var G__176523 = " [";
var G__176524 = (function (){var G__176546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176547 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176546,G__176547) : tailrecursion.hoplon.span.call(null,G__176546,G__176547));
})();
var G__176525 = " ";
var G__176526 = (function (){var G__176548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176549 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176548,G__176549) : tailrecursion.hoplon.span.call(null,G__176548,G__176549));
})();
var G__176527 = "]\n  (";
var G__176528 = (function (){var G__176550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176551 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176550,G__176551) : tailrecursion.hoplon.span.call(null,G__176550,G__176551));
})();
var G__176529 = "[";
var G__176530 = (function (){var G__176552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176553 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176552,G__176553) : tailrecursion.hoplon.span.call(null,G__176552,G__176553));
})();
var G__176531 = "]\n    (";
var G__176532 = (function (){var G__176554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176555 = "compose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176554,G__176555) : tailrecursion.hoplon.span.call(null,G__176554,G__176555));
})();
var G__176533 = " (";
var G__176534 = (function (){var G__176556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176557 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176556,G__176557) : tailrecursion.hoplon.span.call(null,G__176556,G__176557));
})();
var G__176535 = " ";
var G__176536 = (function (){var G__176558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176559 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176558,G__176559) : tailrecursion.hoplon.span.call(null,G__176558,G__176559));
})();
var G__176537 = ") (";
var G__176538 = (function (){var G__176560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176561 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176560,G__176561) : tailrecursion.hoplon.span.call(null,G__176560,G__176561));
})();
var G__176539 = " ";
var G__176540 = (function (){var G__176562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176563 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176562,G__176563) : tailrecursion.hoplon.span.call(null,G__176562,G__176563));
})();
var G__176541 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__176519,G__176520,G__176521,G__176522,G__176523,G__176524,G__176525,G__176526,G__176527,G__176528,G__176529,G__176530,G__176531,G__176532,G__176533,G__176534,G__176535,G__176536,G__176537,G__176538,G__176539,G__176540,G__176541) : tailrecursion.hoplon.pre.call(null,G__176519,G__176520,G__176521,G__176522,G__176523,G__176524,G__176525,G__176526,G__176527,G__176528,G__176529,G__176530,G__176531,G__176532,G__176533,G__176534,G__176535,G__176536,G__176537,G__176538,G__176539,G__176540,G__176541));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__176517,G__176518) : tailrecursion.hoplon.div.call(null,G__176517,G__176518));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__176516) : tailrecursion.hoplon.div.call(null,G__176516));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_176242;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_176241;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_176240;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_176239;
}})()], 0))], 0))], 0));
var G__170668 = "";
var G__170669 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Extended Exercise: Interval Arithmetic"], null),(function (){var _STAR_references_STAR_176564 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_176565 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_176566 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_176567 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__176568 = cljs.core.PersistentArrayMap.EMPTY;
var G__176569 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa P. Hacker is designing a system to help people solve engineering problems. One feature she wants to provide in her system is the ability to manipulate inexact quantities (such as measured parameters of physical devices) with known precision, so that when computations are done with such approximate quantities the results will be numbers of known precision."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__176568,G__176569) : tailrecursion.hoplon.markdown.para_node.call(null,G__176568,G__176569));
})(),(function (){var G__176570 = cljs.core.PersistentArrayMap.EMPTY;
var G__176571 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Electrical engineers will be using Alyssa",(function (){var G__176572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__176573 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__176572,G__176573) : tailrecursion.hoplon.markdown.simple_node.call(null,G__176572,G__176573));
})(),"s system to compute electrical quantities. It is sometimes necessary for them to compute the value of a parallel equivalent resistance \\(R_p\\) of two resistors \\(R_1\\) and \\(R_2\\) using the formula"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__176570,G__176571) : tailrecursion.hoplon.markdown.para_node.call(null,G__176570,G__176571));
})(),(function (){var G__176574 = cljs.core.PersistentArrayMap.EMPTY;
var G__176575 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$R_p=\\frac{1}{1/R_1+1/R_2}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__176574,G__176575) : tailrecursion.hoplon.markdown.para_node.call(null,G__176574,G__176575));
})(),(function (){var G__176576 = cljs.core.PersistentArrayMap.EMPTY;
var G__176577 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Resistance values are usually known only up to some tolerance guaranteed by the manufacturer of the resistor. For example, if you buy a resistor labeled ",(function (){var G__176578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__176579 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["6.8 ohms with 10% tolerance"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__176578,G__176579) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__176578,G__176579));
})()," you can only be sure that the resistor has a resistance between 6.8 - 0.68 = 6.12 and 6.8 + 0.68 = 7.48 ohms. Thus, if you have a 6.8-ohm 10% resistor in parallel with a 4.7-ohm 5% resistor, the resistance of the combination can range from about 2.58 ohms (if the two resistors are at the lower bounds) to about 2.97 ohms (if the two resistors are at the upper bounds)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__176576,G__176577) : tailrecursion.hoplon.markdown.para_node.call(null,G__176576,G__176577));
})(),(function (){var G__176580 = cljs.core.PersistentArrayMap.EMPTY;
var G__176581 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa",(function (){var G__176582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__176583 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__176582,G__176583) : tailrecursion.hoplon.markdown.simple_node.call(null,G__176582,G__176583));
})(),"s idea is to implement ",(function (){var G__176584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__176585 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["interval arithmetic"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__176584,G__176585) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__176584,G__176585));
})()," as a set of arithmetic operations for combining ",(function (){var G__176586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__176587 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["intervals"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__176586,G__176587) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__176586,G__176587));
})()," (objects that represent the range of possible values of an inexact quantity). The result of adding, subtracting, multiplying, or dividing two intervals is itself an interval, representing the range of the result."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__176580,G__176581) : tailrecursion.hoplon.markdown.para_node.call(null,G__176580,G__176581));
})(),(function (){var G__176588 = cljs.core.PersistentArrayMap.EMPTY;
var G__176589 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa postulates the existence of an abstract object called an ",(function (){var G__176590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__176591 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["interval"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__176590,G__176591) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__176590,G__176591));
})()," that has two endpoints: a lower bound and an upper bound. She also presumes that, given the endpoints of an interval, she can construct the interval using the data constructor ",(function (){var G__176592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-interval"], null);
var G__176593 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__176592,G__176593) : tailrecursion.hoplon.markdown.code_node.call(null,G__176592,G__176593));
})(),". Alyssa first writes a procedure for adding two intervals. She reasons that the minimum value the sum could be is the sum of the two lower bounds and the maximum value it could be is the sum of the two upper bounds:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__176588,G__176589) : tailrecursion.hoplon.markdown.para_node.call(null,G__176588,G__176589));
})(),(function (){var G__176657 = (function (){var G__176658 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__176659 = (function (){var G__176660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__176661 = "(";
var G__176662 = (function (){var G__176691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176692 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176691,G__176692) : tailrecursion.hoplon.span.call(null,G__176691,G__176692));
})();
var G__176663 = (function (){var G__176693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176694 = "add-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176693,G__176694) : tailrecursion.hoplon.span.call(null,G__176693,G__176694));
})();
var G__176664 = " [";
var G__176665 = (function (){var G__176695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176696 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176695,G__176696) : tailrecursion.hoplon.span.call(null,G__176695,G__176696));
})();
var G__176666 = " ";
var G__176667 = (function (){var G__176697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176698 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176697,G__176698) : tailrecursion.hoplon.span.call(null,G__176697,G__176698));
})();
var G__176668 = "]\n  (";
var G__176669 = (function (){var G__176699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176700 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176699,G__176700) : tailrecursion.hoplon.span.call(null,G__176699,G__176700));
})();
var G__176670 = " (";
var G__176671 = (function (){var G__176701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__176702 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176701,G__176702) : tailrecursion.hoplon.span.call(null,G__176701,G__176702));
})();
var G__176672 = "(";
var G__176673 = (function (){var G__176703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176704 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176703,G__176704) : tailrecursion.hoplon.span.call(null,G__176703,G__176704));
})();
var G__176674 = " ";
var G__176675 = (function (){var G__176705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176706 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176705,G__176706) : tailrecursion.hoplon.span.call(null,G__176705,G__176706));
})();
var G__176676 = ") (";
var G__176677 = (function (){var G__176707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176708 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176707,G__176708) : tailrecursion.hoplon.span.call(null,G__176707,G__176708));
})();
var G__176678 = " ";
var G__176679 = (function (){var G__176709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176710 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176709,G__176710) : tailrecursion.hoplon.span.call(null,G__176709,G__176710));
})();
var G__176680 = "))\n                 (";
var G__176681 = (function (){var G__176711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__176712 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176711,G__176712) : tailrecursion.hoplon.span.call(null,G__176711,G__176712));
})();
var G__176682 = "(";
var G__176683 = (function (){var G__176713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176714 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176713,G__176714) : tailrecursion.hoplon.span.call(null,G__176713,G__176714));
})();
var G__176684 = " ";
var G__176685 = (function (){var G__176715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176716 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176715,G__176716) : tailrecursion.hoplon.span.call(null,G__176715,G__176716));
})();
var G__176686 = ") (";
var G__176687 = (function (){var G__176717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176718 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176717,G__176718) : tailrecursion.hoplon.span.call(null,G__176717,G__176718));
})();
var G__176688 = " ";
var G__176689 = (function (){var G__176719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176720 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176719,G__176720) : tailrecursion.hoplon.span.call(null,G__176719,G__176720));
})();
var G__176690 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__176660,G__176661,G__176662,G__176663,G__176664,G__176665,G__176666,G__176667,G__176668,G__176669,G__176670,G__176671,G__176672,G__176673,G__176674,G__176675,G__176676,G__176677,G__176678,G__176679,G__176680,G__176681,G__176682,G__176683,G__176684,G__176685,G__176686,G__176687,G__176688,G__176689,G__176690) : tailrecursion.hoplon.pre.call(null,G__176660,G__176661,G__176662,G__176663,G__176664,G__176665,G__176666,G__176667,G__176668,G__176669,G__176670,G__176671,G__176672,G__176673,G__176674,G__176675,G__176676,G__176677,G__176678,G__176679,G__176680,G__176681,G__176682,G__176683,G__176684,G__176685,G__176686,G__176687,G__176688,G__176689,G__176690));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__176658,G__176659) : tailrecursion.hoplon.div.call(null,G__176658,G__176659));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__176657) : tailrecursion.hoplon.div.call(null,G__176657));
})(),(function (){var G__176721 = cljs.core.PersistentArrayMap.EMPTY;
var G__176722 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa also works out the product of two intervals by finding the minimum and the maximum of the products of the bounds and using them as bounds of the resulting interval. (",(function (){var G__176723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"min"], null);
var G__176724 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__176723,G__176724) : tailrecursion.hoplon.markdown.code_node.call(null,G__176723,G__176724));
})()," and ",(function (){var G__176725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"max"], null);
var G__176726 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__176725,G__176726) : tailrecursion.hoplon.markdown.code_node.call(null,G__176725,G__176726));
})()," are primitives that find the minimum and maximum of any number of arguments.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__176721,G__176722) : tailrecursion.hoplon.markdown.para_node.call(null,G__176721,G__176722));
})(),(function (){var G__176888 = (function (){var G__176889 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__176890 = (function (){var G__176891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__176892 = "(";
var G__176893 = (function (){var G__176970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176971 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176970,G__176971) : tailrecursion.hoplon.span.call(null,G__176970,G__176971));
})();
var G__176894 = (function (){var G__176972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176973 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176972,G__176973) : tailrecursion.hoplon.span.call(null,G__176972,G__176973));
})();
var G__176895 = " [";
var G__176896 = (function (){var G__176974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176975 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176974,G__176975) : tailrecursion.hoplon.span.call(null,G__176974,G__176975));
})();
var G__176897 = " ";
var G__176898 = (function (){var G__176976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176977 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176976,G__176977) : tailrecursion.hoplon.span.call(null,G__176976,G__176977));
})();
var G__176899 = "]\n  (";
var G__176900 = (function (){var G__176978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__176979 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176978,G__176979) : tailrecursion.hoplon.span.call(null,G__176978,G__176979));
})();
var G__176901 = "[";
var G__176902 = (function (){var G__176980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176981 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176980,G__176981) : tailrecursion.hoplon.span.call(null,G__176980,G__176981));
})();
var G__176903 = " (";
var G__176904 = (function (){var G__176982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__176983 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176982,G__176983) : tailrecursion.hoplon.span.call(null,G__176982,G__176983));
})();
var G__176905 = "(";
var G__176906 = (function (){var G__176984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176985 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176984,G__176985) : tailrecursion.hoplon.span.call(null,G__176984,G__176985));
})();
var G__176907 = " ";
var G__176908 = (function (){var G__176986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176987 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176986,G__176987) : tailrecursion.hoplon.span.call(null,G__176986,G__176987));
})();
var G__176909 = ") (";
var G__176910 = (function (){var G__176988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176989 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176988,G__176989) : tailrecursion.hoplon.span.call(null,G__176988,G__176989));
})();
var G__176911 = " ";
var G__176912 = (function (){var G__176990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176991 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176990,G__176991) : tailrecursion.hoplon.span.call(null,G__176990,G__176991));
})();
var G__176913 = "))\n        ";
var G__176914 = (function (){var G__176992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176993 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176992,G__176993) : tailrecursion.hoplon.span.call(null,G__176992,G__176993));
})();
var G__176915 = " (";
var G__176916 = (function (){var G__176994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__176995 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176994,G__176995) : tailrecursion.hoplon.span.call(null,G__176994,G__176995));
})();
var G__176917 = "(";
var G__176918 = (function (){var G__176996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__176997 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176996,G__176997) : tailrecursion.hoplon.span.call(null,G__176996,G__176997));
})();
var G__176919 = " ";
var G__176920 = (function (){var G__176998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__176999 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__176998,G__176999) : tailrecursion.hoplon.span.call(null,G__176998,G__176999));
})();
var G__176921 = ") (";
var G__176922 = (function (){var G__177000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177001 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177000,G__177001) : tailrecursion.hoplon.span.call(null,G__177000,G__177001));
})();
var G__176923 = " ";
var G__176924 = (function (){var G__177002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177003 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177002,G__177003) : tailrecursion.hoplon.span.call(null,G__177002,G__177003));
})();
var G__176925 = "))\n        ";
var G__176926 = (function (){var G__177004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177005 = "p3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177004,G__177005) : tailrecursion.hoplon.span.call(null,G__177004,G__177005));
})();
var G__176927 = " (";
var G__176928 = (function (){var G__177006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__177007 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177006,G__177007) : tailrecursion.hoplon.span.call(null,G__177006,G__177007));
})();
var G__176929 = "(";
var G__176930 = (function (){var G__177008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177009 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177008,G__177009) : tailrecursion.hoplon.span.call(null,G__177008,G__177009));
})();
var G__176931 = " ";
var G__176932 = (function (){var G__177010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177011 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177010,G__177011) : tailrecursion.hoplon.span.call(null,G__177010,G__177011));
})();
var G__176933 = ") (";
var G__176934 = (function (){var G__177012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177013 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177012,G__177013) : tailrecursion.hoplon.span.call(null,G__177012,G__177013));
})();
var G__176935 = " ";
var G__176936 = (function (){var G__177014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177015 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177014,G__177015) : tailrecursion.hoplon.span.call(null,G__177014,G__177015));
})();
var G__176937 = "))\n        ";
var G__176938 = (function (){var G__177016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177017 = "p4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177016,G__177017) : tailrecursion.hoplon.span.call(null,G__177016,G__177017));
})();
var G__176939 = " (";
var G__176940 = (function (){var G__177018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__177019 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177018,G__177019) : tailrecursion.hoplon.span.call(null,G__177018,G__177019));
})();
var G__176941 = "(";
var G__176942 = (function (){var G__177020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177021 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177020,G__177021) : tailrecursion.hoplon.span.call(null,G__177020,G__177021));
})();
var G__176943 = " ";
var G__176944 = (function (){var G__177022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177023 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177022,G__177023) : tailrecursion.hoplon.span.call(null,G__177022,G__177023));
})();
var G__176945 = ") (";
var G__176946 = (function (){var G__177024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177025 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177024,G__177025) : tailrecursion.hoplon.span.call(null,G__177024,G__177025));
})();
var G__176947 = " ";
var G__176948 = (function (){var G__177026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177027 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177026,G__177027) : tailrecursion.hoplon.span.call(null,G__177026,G__177027));
})();
var G__176949 = "))]\n    (";
var G__176950 = (function (){var G__177028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177029 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177028,G__177029) : tailrecursion.hoplon.span.call(null,G__177028,G__177029));
})();
var G__176951 = " (";
var G__176952 = (function (){var G__177030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__177031 = "min ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177030,G__177031) : tailrecursion.hoplon.span.call(null,G__177030,G__177031));
})();
var G__176953 = (function (){var G__177032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177033 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177032,G__177033) : tailrecursion.hoplon.span.call(null,G__177032,G__177033));
})();
var G__176954 = " ";
var G__176955 = (function (){var G__177034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177035 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177034,G__177035) : tailrecursion.hoplon.span.call(null,G__177034,G__177035));
})();
var G__176956 = " ";
var G__176957 = (function (){var G__177036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177037 = "p3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177036,G__177037) : tailrecursion.hoplon.span.call(null,G__177036,G__177037));
})();
var G__176958 = " ";
var G__176959 = (function (){var G__177038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177039 = "p4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177038,G__177039) : tailrecursion.hoplon.span.call(null,G__177038,G__177039));
})();
var G__176960 = ")\n                   (";
var G__176961 = (function (){var G__177040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__177041 = "max ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177040,G__177041) : tailrecursion.hoplon.span.call(null,G__177040,G__177041));
})();
var G__176962 = (function (){var G__177042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177043 = "p1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177042,G__177043) : tailrecursion.hoplon.span.call(null,G__177042,G__177043));
})();
var G__176963 = " ";
var G__176964 = (function (){var G__177044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177045 = "p2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177044,G__177045) : tailrecursion.hoplon.span.call(null,G__177044,G__177045));
})();
var G__176965 = " ";
var G__176966 = (function (){var G__177046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177047 = "p3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177046,G__177047) : tailrecursion.hoplon.span.call(null,G__177046,G__177047));
})();
var G__176967 = " ";
var G__176968 = (function (){var G__177048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177049 = "p4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177048,G__177049) : tailrecursion.hoplon.span.call(null,G__177048,G__177049));
})();
var G__176969 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$79 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$79(G__176891,G__176892,G__176893,G__176894,G__176895,G__176896,G__176897,G__176898,G__176899,G__176900,G__176901,G__176902,G__176903,G__176904,G__176905,G__176906,G__176907,G__176908,G__176909,G__176910,G__176911,G__176912,G__176913,G__176914,G__176915,G__176916,G__176917,G__176918,G__176919,G__176920,G__176921,G__176922,G__176923,G__176924,G__176925,G__176926,G__176927,G__176928,G__176929,G__176930,G__176931,G__176932,G__176933,G__176934,G__176935,G__176936,G__176937,G__176938,G__176939,G__176940,G__176941,G__176942,G__176943,G__176944,G__176945,G__176946,G__176947,G__176948,G__176949,G__176950,G__176951,G__176952,G__176953,G__176954,G__176955,G__176956,G__176957,G__176958,G__176959,G__176960,G__176961,G__176962,G__176963,G__176964,G__176965,G__176966,G__176967,G__176968,G__176969) : tailrecursion.hoplon.pre.call(null,G__176891,G__176892,G__176893,G__176894,G__176895,G__176896,G__176897,G__176898,G__176899,G__176900,G__176901,G__176902,G__176903,G__176904,G__176905,G__176906,G__176907,G__176908,G__176909,G__176910,G__176911,G__176912,G__176913,G__176914,G__176915,G__176916,G__176917,G__176918,G__176919,G__176920,G__176921,G__176922,G__176923,G__176924,G__176925,G__176926,G__176927,G__176928,G__176929,G__176930,G__176931,G__176932,G__176933,G__176934,G__176935,G__176936,G__176937,G__176938,G__176939,G__176940,G__176941,G__176942,G__176943,G__176944,G__176945,G__176946,G__176947,G__176948,G__176949,G__176950,G__176951,G__176952,G__176953,G__176954,G__176955,G__176956,G__176957,G__176958,G__176959,G__176960,G__176961,G__176962,G__176963,G__176964,G__176965,G__176966,G__176967,G__176968,G__176969));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__176889,G__176890) : tailrecursion.hoplon.div.call(null,G__176889,G__176890));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__176888) : tailrecursion.hoplon.div.call(null,G__176888));
})(),(function (){var G__177050 = cljs.core.PersistentArrayMap.EMPTY;
var G__177051 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To divide two intervals, Alyssa multiplies the first by the reciprocal of the second. Note that the bounds of the reciprocal interval are the reciprocal of the upper-bound and the reciprocal of the lower-bound, in that order."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__177050,G__177051) : tailrecursion.hoplon.markdown.para_node.call(null,G__177050,G__177051));
})(),(function (){var G__177113 = (function (){var G__177114 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__177115 = (function (){var G__177116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__177117 = "(";
var G__177118 = (function (){var G__177145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__177146 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177145,G__177146) : tailrecursion.hoplon.span.call(null,G__177145,G__177146));
})();
var G__177119 = (function (){var G__177147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177148 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177147,G__177148) : tailrecursion.hoplon.span.call(null,G__177147,G__177148));
})();
var G__177120 = " [";
var G__177121 = (function (){var G__177149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177150 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177149,G__177150) : tailrecursion.hoplon.span.call(null,G__177149,G__177150));
})();
var G__177122 = " ";
var G__177123 = (function (){var G__177151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177152 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177151,G__177152) : tailrecursion.hoplon.span.call(null,G__177151,G__177152));
})();
var G__177124 = "]\n  (";
var G__177125 = (function (){var G__177153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177154 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177153,G__177154) : tailrecursion.hoplon.span.call(null,G__177153,G__177154));
})();
var G__177126 = " ";
var G__177127 = (function (){var G__177155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177156 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177155,G__177156) : tailrecursion.hoplon.span.call(null,G__177155,G__177156));
})();
var G__177128 = "\n                (";
var G__177129 = (function (){var G__177157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177158 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177157,G__177158) : tailrecursion.hoplon.span.call(null,G__177157,G__177158));
})();
var G__177130 = " (";
var G__177131 = (function (){var G__177159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__177160 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177159,G__177160) : tailrecursion.hoplon.span.call(null,G__177159,G__177160));
})();
var G__177132 = (function (){var G__177161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__177162 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177161,G__177162) : tailrecursion.hoplon.span.call(null,G__177161,G__177162));
})();
var G__177133 = " (";
var G__177134 = (function (){var G__177163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177164 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177163,G__177164) : tailrecursion.hoplon.span.call(null,G__177163,G__177164));
})();
var G__177135 = " ";
var G__177136 = (function (){var G__177165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177166 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177165,G__177166) : tailrecursion.hoplon.span.call(null,G__177165,G__177166));
})();
var G__177137 = "))\n                               (";
var G__177138 = (function (){var G__177167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__177168 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177167,G__177168) : tailrecursion.hoplon.span.call(null,G__177167,G__177168));
})();
var G__177139 = (function (){var G__177169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__177170 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177169,G__177170) : tailrecursion.hoplon.span.call(null,G__177169,G__177170));
})();
var G__177140 = " (";
var G__177141 = (function (){var G__177171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177172 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177171,G__177172) : tailrecursion.hoplon.span.call(null,G__177171,G__177172));
})();
var G__177142 = " ";
var G__177143 = (function (){var G__177173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177174 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177173,G__177174) : tailrecursion.hoplon.span.call(null,G__177173,G__177174));
})();
var G__177144 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29(G__177116,G__177117,G__177118,G__177119,G__177120,G__177121,G__177122,G__177123,G__177124,G__177125,G__177126,G__177127,G__177128,G__177129,G__177130,G__177131,G__177132,G__177133,G__177134,G__177135,G__177136,G__177137,G__177138,G__177139,G__177140,G__177141,G__177142,G__177143,G__177144) : tailrecursion.hoplon.pre.call(null,G__177116,G__177117,G__177118,G__177119,G__177120,G__177121,G__177122,G__177123,G__177124,G__177125,G__177126,G__177127,G__177128,G__177129,G__177130,G__177131,G__177132,G__177133,G__177134,G__177135,G__177136,G__177137,G__177138,G__177139,G__177140,G__177141,G__177142,G__177143,G__177144));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__177114,G__177115) : tailrecursion.hoplon.div.call(null,G__177114,G__177115));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__177113) : tailrecursion.hoplon.div.call(null,G__177113));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_176567;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_176566;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_176565;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_176564;
}})()], 0));
var G__170670 = "";
var G__170671 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_177175 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_177176 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_177177 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_177178 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__177179 = cljs.core.PersistentArrayMap.EMPTY;
var G__177180 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa",(function (){var G__177181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__177182 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__177181,G__177182) : tailrecursion.hoplon.markdown.simple_node.call(null,G__177181,G__177182));
})(),"s program is incomplete because she has not specified the implementation of the interval abstraction. Here is a definition of the interval constructor:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__177179,G__177180) : tailrecursion.hoplon.markdown.para_node.call(null,G__177179,G__177180));
})(),(function (){var G__177213 = (function (){var G__177214 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__177215 = (function (){var G__177216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__177217 = "(";
var G__177218 = (function (){var G__177230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__177231 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177230,G__177231) : tailrecursion.hoplon.span.call(null,G__177230,G__177231));
})();
var G__177219 = (function (){var G__177232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177233 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177232,G__177233) : tailrecursion.hoplon.span.call(null,G__177232,G__177233));
})();
var G__177220 = " [";
var G__177221 = (function (){var G__177234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177235 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177234,G__177235) : tailrecursion.hoplon.span.call(null,G__177234,G__177235));
})();
var G__177222 = " ";
var G__177223 = (function (){var G__177236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177237 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177236,G__177237) : tailrecursion.hoplon.span.call(null,G__177236,G__177237));
})();
var G__177224 = "]\n  (";
var G__177225 = (function (){var G__177238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__177239 = "list ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177238,G__177239) : tailrecursion.hoplon.span.call(null,G__177238,G__177239));
})();
var G__177226 = (function (){var G__177240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177241 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177240,G__177241) : tailrecursion.hoplon.span.call(null,G__177240,G__177241));
})();
var G__177227 = " ";
var G__177228 = (function (){var G__177242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177243 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177242,G__177243) : tailrecursion.hoplon.span.call(null,G__177242,G__177243));
})();
var G__177229 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__177216,G__177217,G__177218,G__177219,G__177220,G__177221,G__177222,G__177223,G__177224,G__177225,G__177226,G__177227,G__177228,G__177229) : tailrecursion.hoplon.pre.call(null,G__177216,G__177217,G__177218,G__177219,G__177220,G__177221,G__177222,G__177223,G__177224,G__177225,G__177226,G__177227,G__177228,G__177229));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__177214,G__177215) : tailrecursion.hoplon.div.call(null,G__177214,G__177215));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__177213) : tailrecursion.hoplon.div.call(null,G__177213));
})(),(function (){var G__177244 = cljs.core.PersistentArrayMap.EMPTY;
var G__177245 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define selectors ",(function (){var G__177246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"upper-bound"], null);
var G__177247 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__177246,G__177247) : tailrecursion.hoplon.markdown.code_node.call(null,G__177246,G__177247));
})()," and ",(function (){var G__177248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"lower-bound"], null);
var G__177249 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__177248,G__177249) : tailrecursion.hoplon.markdown.code_node.call(null,G__177248,G__177249));
})()," to complete the implementation."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__177244,G__177245) : tailrecursion.hoplon.markdown.para_node.call(null,G__177244,G__177245));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_177178;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_177177;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_177176;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_177175;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_177250 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_177251 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_177252 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_177253 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__177294 = (function (){var G__177295 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__177296 = (function (){var G__177297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__177298 = "(";
var G__177299 = (function (){var G__177315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__177316 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177315,G__177316) : tailrecursion.hoplon.span.call(null,G__177315,G__177316));
})();
var G__177300 = (function (){var G__177317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177318 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177317,G__177318) : tailrecursion.hoplon.span.call(null,G__177317,G__177318));
})();
var G__177301 = " [";
var G__177302 = (function (){var G__177319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177320 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177319,G__177320) : tailrecursion.hoplon.span.call(null,G__177319,G__177320));
})();
var G__177303 = "]\n  (";
var G__177304 = (function (){var G__177321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__177322 = "second ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177321,G__177322) : tailrecursion.hoplon.span.call(null,G__177321,G__177322));
})();
var G__177305 = (function (){var G__177323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177324 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177323,G__177324) : tailrecursion.hoplon.span.call(null,G__177323,G__177324));
})();
var G__177306 = "))\n(";
var G__177307 = (function (){var G__177325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__177326 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177325,G__177326) : tailrecursion.hoplon.span.call(null,G__177325,G__177326));
})();
var G__177308 = (function (){var G__177327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177328 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177327,G__177328) : tailrecursion.hoplon.span.call(null,G__177327,G__177328));
})();
var G__177309 = " [";
var G__177310 = (function (){var G__177329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177330 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177329,G__177330) : tailrecursion.hoplon.span.call(null,G__177329,G__177330));
})();
var G__177311 = "]\n  (";
var G__177312 = (function (){var G__177331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__177332 = "first ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177331,G__177332) : tailrecursion.hoplon.span.call(null,G__177331,G__177332));
})();
var G__177313 = (function (){var G__177333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177334 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177333,G__177334) : tailrecursion.hoplon.span.call(null,G__177333,G__177334));
})();
var G__177314 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__177297,G__177298,G__177299,G__177300,G__177301,G__177302,G__177303,G__177304,G__177305,G__177306,G__177307,G__177308,G__177309,G__177310,G__177311,G__177312,G__177313,G__177314) : tailrecursion.hoplon.pre.call(null,G__177297,G__177298,G__177299,G__177300,G__177301,G__177302,G__177303,G__177304,G__177305,G__177306,G__177307,G__177308,G__177309,G__177310,G__177311,G__177312,G__177313,G__177314));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__177295,G__177296) : tailrecursion.hoplon.div.call(null,G__177295,G__177296));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__177294) : tailrecursion.hoplon.div.call(null,G__177294));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_177253;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_177252;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_177251;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_177250;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_177335 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_177336 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_177337 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_177338 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__177339 = cljs.core.PersistentArrayMap.EMPTY;
var G__177340 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using reasoning analogous to Alyssa",(function (){var G__177341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__177342 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__177341,G__177342) : tailrecursion.hoplon.markdown.simple_node.call(null,G__177341,G__177342));
})(),"s, describe how the difference of two intervals may be computed. Define a corresponding subtraction procedure, called ",(function (){var G__177343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-interval"], null);
var G__177344 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__177343,G__177344) : tailrecursion.hoplon.markdown.code_node.call(null,G__177343,G__177344));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__177339,G__177340) : tailrecursion.hoplon.markdown.para_node.call(null,G__177339,G__177340));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_177338;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_177337;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_177336;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_177335;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_177345 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_177346 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_177347 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_177348 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__177349 = cljs.core.PersistentArrayMap.EMPTY;
var G__177350 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using reasoning analogous to Alyssa",(function (){var G__177351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__177352 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__177351,G__177352) : tailrecursion.hoplon.markdown.simple_node.call(null,G__177351,G__177352));
})(),"s, we",(function (){var G__177353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__177354 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__177353,G__177354) : tailrecursion.hoplon.markdown.simple_node.call(null,G__177353,G__177354));
})(),"d define ",(function (){var G__177355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sub-interval"], null);
var G__177356 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__177355,G__177356) : tailrecursion.hoplon.markdown.code_node.call(null,G__177355,G__177356));
})()," as:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__177349,G__177350) : tailrecursion.hoplon.markdown.para_node.call(null,G__177349,G__177350));
})(),(function (){var G__177420 = (function (){var G__177421 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__177422 = (function (){var G__177423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__177424 = "(";
var G__177425 = (function (){var G__177454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__177455 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177454,G__177455) : tailrecursion.hoplon.span.call(null,G__177454,G__177455));
})();
var G__177426 = (function (){var G__177456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177457 = "sub-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177456,G__177457) : tailrecursion.hoplon.span.call(null,G__177456,G__177457));
})();
var G__177427 = " [";
var G__177428 = (function (){var G__177458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177459 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177458,G__177459) : tailrecursion.hoplon.span.call(null,G__177458,G__177459));
})();
var G__177429 = " ";
var G__177430 = (function (){var G__177460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177461 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177460,G__177461) : tailrecursion.hoplon.span.call(null,G__177460,G__177461));
})();
var G__177431 = "]\n  (";
var G__177432 = (function (){var G__177462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177463 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177462,G__177463) : tailrecursion.hoplon.span.call(null,G__177462,G__177463));
})();
var G__177433 = " (";
var G__177434 = (function (){var G__177464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__177465 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177464,G__177465) : tailrecursion.hoplon.span.call(null,G__177464,G__177465));
})();
var G__177435 = "(";
var G__177436 = (function (){var G__177466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177467 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177466,G__177467) : tailrecursion.hoplon.span.call(null,G__177466,G__177467));
})();
var G__177437 = " ";
var G__177438 = (function (){var G__177468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177469 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177468,G__177469) : tailrecursion.hoplon.span.call(null,G__177468,G__177469));
})();
var G__177439 = ") (";
var G__177440 = (function (){var G__177470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177471 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177470,G__177471) : tailrecursion.hoplon.span.call(null,G__177470,G__177471));
})();
var G__177441 = " ";
var G__177442 = (function (){var G__177472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177473 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177472,G__177473) : tailrecursion.hoplon.span.call(null,G__177472,G__177473));
})();
var G__177443 = "))\n                 (";
var G__177444 = (function (){var G__177474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__177475 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177474,G__177475) : tailrecursion.hoplon.span.call(null,G__177474,G__177475));
})();
var G__177445 = "(";
var G__177446 = (function (){var G__177476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177477 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177476,G__177477) : tailrecursion.hoplon.span.call(null,G__177476,G__177477));
})();
var G__177447 = " ";
var G__177448 = (function (){var G__177478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177479 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177478,G__177479) : tailrecursion.hoplon.span.call(null,G__177478,G__177479));
})();
var G__177449 = ") (";
var G__177450 = (function (){var G__177480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177481 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177480,G__177481) : tailrecursion.hoplon.span.call(null,G__177480,G__177481));
})();
var G__177451 = " ";
var G__177452 = (function (){var G__177482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177483 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177482,G__177483) : tailrecursion.hoplon.span.call(null,G__177482,G__177483));
})();
var G__177453 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__177423,G__177424,G__177425,G__177426,G__177427,G__177428,G__177429,G__177430,G__177431,G__177432,G__177433,G__177434,G__177435,G__177436,G__177437,G__177438,G__177439,G__177440,G__177441,G__177442,G__177443,G__177444,G__177445,G__177446,G__177447,G__177448,G__177449,G__177450,G__177451,G__177452,G__177453) : tailrecursion.hoplon.pre.call(null,G__177423,G__177424,G__177425,G__177426,G__177427,G__177428,G__177429,G__177430,G__177431,G__177432,G__177433,G__177434,G__177435,G__177436,G__177437,G__177438,G__177439,G__177440,G__177441,G__177442,G__177443,G__177444,G__177445,G__177446,G__177447,G__177448,G__177449,G__177450,G__177451,G__177452,G__177453));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__177421,G__177422) : tailrecursion.hoplon.div.call(null,G__177421,G__177422));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__177420) : tailrecursion.hoplon.div.call(null,G__177420));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_177348;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_177347;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_177346;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_177345;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_177484 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_177485 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_177486 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_177487 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__177488 = cljs.core.PersistentArrayMap.EMPTY;
var G__177489 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["width"], null)], 0))," of an interval is half of the difference between its upper and lower bounds. The width is a measure of the uncertainty of the number specified by the interval. For some arithmetic operations the width of the result of combining two intervals is a function only of the widths of the argument intervals. Show that the width of the sum (or difference) of two intervals is a function only of the widths of the intervals being added (or subtracted). Give examples to show that this is not true for multiplication or division."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__177488,G__177489) : tailrecursion.hoplon.markdown.para_node.call(null,G__177488,G__177489));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_177487;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_177486;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_177485;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_177484;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_177490 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_177491 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_177492 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_177493 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__177494 = cljs.core.PersistentArrayMap.EMPTY;
var G__177495 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__177496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__177497 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__177496,G__177497) : tailrecursion.hoplon.markdown.simple_node.call(null,G__177496,G__177497));
})(),"s define two intervals \\(x=(a-\\delta,a+\\delta)\\), and \\(y=(b-\\epsilon,b+\\epsilon)\\), where \\(\\delta,\\epsilon\\) are positive real numbers (and hence the width of their respective intervals). Then, the interval ",(function (){var G__177498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(add-interval x y)"], null);
var G__177499 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__177498,G__177499) : tailrecursion.hoplon.markdown.code_node.call(null,G__177498,G__177499));
})()," would be \\((a+b-(\\epsilon+delta),a+b+(\\epsilon+\\delta))\\), making the width of the sum equal to the sum of the widths."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__177494,G__177495) : tailrecursion.hoplon.markdown.para_node.call(null,G__177494,G__177495));
})(),(function (){var G__177500 = cljs.core.PersistentArrayMap.EMPTY;
var G__177501 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Similarly, ",(function (){var G__177502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(sub-interval a b)"], null);
var G__177503 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__177502,G__177503) : tailrecursion.hoplon.markdown.code_node.call(null,G__177502,G__177503));
})()," would be,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__177500,G__177501) : tailrecursion.hoplon.markdown.para_node.call(null,G__177500,G__177501));
})(),(function (){var G__177504 = cljs.core.PersistentArrayMap.EMPTY;
var G__177505 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$(a-\\delta - (b+\\epsilon),a+\\epsilon-(b-\\epsilon))=(a-b-(\\delta+\\epsilon),a-b+(\\delta-\\epsilon))$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__177504,G__177505) : tailrecursion.hoplon.markdown.para_node.call(null,G__177504,G__177505));
})(),(function (){var G__177506 = cljs.core.PersistentArrayMap.EMPTY;
var G__177507 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["making the width of the difference of intervals equal to the  difference of the widths of the intervals."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__177506,G__177507) : tailrecursion.hoplon.markdown.para_node.call(null,G__177506,G__177507));
})(),(function (){var G__177508 = cljs.core.PersistentArrayMap.EMPTY;
var G__177509 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For multiplication, however, things are not as simple. Let",(function (){var G__177510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__177511 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__177510,G__177511) : tailrecursion.hoplon.markdown.simple_node.call(null,G__177510,G__177511));
})(),"s consider two pairs of intervals, each pair with the same corresponding widths:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__177508,G__177509) : tailrecursion.hoplon.markdown.para_node.call(null,G__177508,G__177509));
})(),(function (){var G__177512 = cljs.core.PersistentArrayMap.EMPTY;
var G__177513 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$a=(0,2), b=(0,2) c=(5,7) d=(5,7)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__177512,G__177513) : tailrecursion.hoplon.markdown.para_node.call(null,G__177512,G__177513));
})(),(function (){var G__177514 = cljs.core.PersistentArrayMap.EMPTY;
var G__177515 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since these intervals all have the same width, if the width of the product is a function of the widths of the intervals, then the product of any two of these intervals should yield an interval with the same width. But this is clearly not this case because ",(function (){var G__177516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(width\n(mul-interval a b))"], null);
var G__177517 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__177516,G__177517) : tailrecursion.hoplon.markdown.code_node.call(null,G__177516,G__177517));
})()," is 2, but ",(function (){var G__177518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(width (mul-interval c d))"], null);
var G__177519 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__177518,G__177519) : tailrecursion.hoplon.markdown.code_node.call(null,G__177518,G__177519));
})()," is 12. So clearly the width of the product is not a function of the widths alone."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__177514,G__177515) : tailrecursion.hoplon.markdown.para_node.call(null,G__177514,G__177515));
})(),(function (){var G__177520 = cljs.core.PersistentArrayMap.EMPTY;
var G__177521 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for division, we can define \\(a,b=(1,2)\\), and \\(c,d=\\((5,6)\\). Then, ",(function (){var G__177522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(div-interval a b)"], null);
var G__177523 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__177522,G__177523) : tailrecursion.hoplon.markdown.code_node.call(null,G__177522,G__177523));
})()," is \\((1/2, 2)\\), but ",(function (){var G__177524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(div-interval c d)"], null);
var G__177525 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__177524,G__177525) : tailrecursion.hoplon.markdown.code_node.call(null,G__177524,G__177525));
})()," is \\((5/6,6/5)\\). The width of the first is 0.75 or 3/4, but the width of the second is 11/60."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__177520,G__177521) : tailrecursion.hoplon.markdown.para_node.call(null,G__177520,G__177521));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_177493;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_177492;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_177491;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_177490;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_177526 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_177527 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_177528 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_177529 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__177530 = cljs.core.PersistentArrayMap.EMPTY;
var G__177531 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Ben Bitdiddle, an expert systems programmer, looks over Alyssa",(function (){var G__177532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__177533 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__177532,G__177533) : tailrecursion.hoplon.markdown.simple_node.call(null,G__177532,G__177533));
})(),"s shoulder and comments that it is not clear what it means to divide by an interval that spans zero. Modify Alyssa",(function (){var G__177534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__177535 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__177534,G__177535) : tailrecursion.hoplon.markdown.simple_node.call(null,G__177534,G__177535));
})(),"s code to check for this condition and to signal an error if it occurs."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__177530,G__177531) : tailrecursion.hoplon.markdown.para_node.call(null,G__177530,G__177531));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_177529;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_177528;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_177527;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_177526;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_177536 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_177537 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_177538 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_177539 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__177664 = (function (){var G__177665 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__177666 = (function (){var G__177667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__177668 = "(";
var G__177669 = (function (){var G__177727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__177728 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177727,G__177728) : tailrecursion.hoplon.span.call(null,G__177727,G__177728));
})();
var G__177670 = (function (){var G__177729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177730 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177729,G__177730) : tailrecursion.hoplon.span.call(null,G__177729,G__177730));
})();
var G__177671 = " [";
var G__177672 = (function (){var G__177731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177732 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177731,G__177732) : tailrecursion.hoplon.span.call(null,G__177731,G__177732));
})();
var G__177673 = " ";
var G__177674 = (function (){var G__177733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177734 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177733,G__177734) : tailrecursion.hoplon.span.call(null,G__177733,G__177734));
})();
var G__177675 = "]\n  (";
var G__177676 = (function (){var G__177735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__177736 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177735,G__177736) : tailrecursion.hoplon.span.call(null,G__177735,G__177736));
})();
var G__177677 = "[";
var G__177678 = (function (){var G__177737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177738 = "span-zero?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177737,G__177738) : tailrecursion.hoplon.span.call(null,G__177737,G__177738));
})();
var G__177679 = " ";
var G__177680 = (function (){var G__177739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__177740 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177739,G__177740) : tailrecursion.hoplon.span.call(null,G__177739,G__177740));
})();
var G__177681 = "(";
var G__177682 = (function (){var G__177741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__177742 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177741,G__177742) : tailrecursion.hoplon.span.call(null,G__177741,G__177742));
})();
var G__177683 = (function (){var G__177743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__177744 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177743,G__177744) : tailrecursion.hoplon.span.call(null,G__177743,G__177744));
})();
var G__177684 = "\n                       (";
var G__177685 = (function (){var G__177745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__177746 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177745,G__177746) : tailrecursion.hoplon.span.call(null,G__177745,G__177746));
})();
var G__177686 = "(";
var G__177687 = (function (){var G__177747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177748 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177747,G__177748) : tailrecursion.hoplon.span.call(null,G__177747,G__177748));
})();
var G__177688 = " ";
var G__177689 = (function (){var G__177749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177750 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177749,G__177750) : tailrecursion.hoplon.span.call(null,G__177749,G__177750));
})();
var G__177690 = ")\n                          (";
var G__177691 = (function (){var G__177751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177752 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177751,G__177752) : tailrecursion.hoplon.span.call(null,G__177751,G__177752));
})();
var G__177692 = " ";
var G__177693 = (function (){var G__177753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177754 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177753,G__177754) : tailrecursion.hoplon.span.call(null,G__177753,G__177754));
})();
var G__177694 = ")))]\n    (";
var G__177695 = (function (){var G__177755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__177756 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177755,G__177756) : tailrecursion.hoplon.span.call(null,G__177755,G__177756));
})();
var G__177696 = "(";
var G__177697 = (function (){var G__177757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177758 = "span-zero?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177757,G__177758) : tailrecursion.hoplon.span.call(null,G__177757,G__177758));
})();
var G__177698 = " ";
var G__177699 = (function (){var G__177759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177760 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177759,G__177760) : tailrecursion.hoplon.span.call(null,G__177759,G__177760));
})();
var G__177700 = ")\n        (";
var G__177701 = (function (){var G__177761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177762 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177761,G__177762) : tailrecursion.hoplon.span.call(null,G__177761,G__177762));
})();
var G__177702 = " (";
var G__177703 = (function (){var G__177763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177764 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177763,G__177764) : tailrecursion.hoplon.span.call(null,G__177763,G__177764));
})();
var G__177704 = " ";
var G__177705 = (function (){var G__177765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__177766 = "\"Can't divide by zero!\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177765,G__177766) : tailrecursion.hoplon.span.call(null,G__177765,G__177766));
})();
var G__177706 = "))\n        (";
var G__177707 = (function (){var G__177767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177768 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177767,G__177768) : tailrecursion.hoplon.span.call(null,G__177767,G__177768));
})();
var G__177708 = " ";
var G__177709 = (function (){var G__177769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177770 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177769,G__177770) : tailrecursion.hoplon.span.call(null,G__177769,G__177770));
})();
var G__177710 = "\n                      (";
var G__177711 = (function (){var G__177771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177772 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177771,G__177772) : tailrecursion.hoplon.span.call(null,G__177771,G__177772));
})();
var G__177712 = " (";
var G__177713 = (function (){var G__177773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__177774 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177773,G__177774) : tailrecursion.hoplon.span.call(null,G__177773,G__177774));
})();
var G__177714 = (function (){var G__177775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__177776 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177775,G__177776) : tailrecursion.hoplon.span.call(null,G__177775,G__177776));
})();
var G__177715 = " (";
var G__177716 = (function (){var G__177777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177778 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177777,G__177778) : tailrecursion.hoplon.span.call(null,G__177777,G__177778));
})();
var G__177717 = " ";
var G__177718 = (function (){var G__177779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177780 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177779,G__177780) : tailrecursion.hoplon.span.call(null,G__177779,G__177780));
})();
var G__177719 = "))\n                                     (";
var G__177720 = (function (){var G__177781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__177782 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177781,G__177782) : tailrecursion.hoplon.span.call(null,G__177781,G__177782));
})();
var G__177721 = (function (){var G__177783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__177784 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177783,G__177784) : tailrecursion.hoplon.span.call(null,G__177783,G__177784));
})();
var G__177722 = " (";
var G__177723 = (function (){var G__177785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__177786 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177785,G__177786) : tailrecursion.hoplon.span.call(null,G__177785,G__177786));
})();
var G__177724 = " ";
var G__177725 = (function (){var G__177787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__177788 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__177787,G__177788) : tailrecursion.hoplon.span.call(null,G__177787,G__177788));
})();
var G__177726 = ")))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$60(G__177667,G__177668,G__177669,G__177670,G__177671,G__177672,G__177673,G__177674,G__177675,G__177676,G__177677,G__177678,G__177679,G__177680,G__177681,G__177682,G__177683,G__177684,G__177685,G__177686,G__177687,G__177688,G__177689,G__177690,G__177691,G__177692,G__177693,G__177694,G__177695,G__177696,G__177697,G__177698,G__177699,G__177700,G__177701,G__177702,G__177703,G__177704,G__177705,G__177706,G__177707,G__177708,G__177709,G__177710,G__177711,G__177712,G__177713,G__177714,G__177715,G__177716,G__177717,G__177718,G__177719,G__177720,G__177721,G__177722,G__177723,G__177724,G__177725,G__177726) : tailrecursion.hoplon.pre.call(null,G__177667,G__177668,G__177669,G__177670,G__177671,G__177672,G__177673,G__177674,G__177675,G__177676,G__177677,G__177678,G__177679,G__177680,G__177681,G__177682,G__177683,G__177684,G__177685,G__177686,G__177687,G__177688,G__177689,G__177690,G__177691,G__177692,G__177693,G__177694,G__177695,G__177696,G__177697,G__177698,G__177699,G__177700,G__177701,G__177702,G__177703,G__177704,G__177705,G__177706,G__177707,G__177708,G__177709,G__177710,G__177711,G__177712,G__177713,G__177714,G__177715,G__177716,G__177717,G__177718,G__177719,G__177720,G__177721,G__177722,G__177723,G__177724,G__177725,G__177726));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__177665,G__177666) : tailrecursion.hoplon.div.call(null,G__177665,G__177666));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__177664) : tailrecursion.hoplon.div.call(null,G__177664));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_177539;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_177538;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_177537;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_177536;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_177789 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_177790 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_177791 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_177792 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__177793 = cljs.core.PersistentArrayMap.EMPTY;
var G__177794 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In passing, Ben also cryptically comments: ",(function (){var G__177795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__177796 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["By testing the signs of the endpoints of the intervals, it is possible to break mul-interval into nine cases, only one of which requires more than two multiplications."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__177795,G__177796) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__177795,G__177796));
})()," Rewrite this procedure using Ben",(function (){var G__177797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__177798 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__177797,G__177798) : tailrecursion.hoplon.markdown.simple_node.call(null,G__177797,G__177798));
})(),"s suggestion."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__177793,G__177794) : tailrecursion.hoplon.markdown.para_node.call(null,G__177793,G__177794));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_177792;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_177791;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_177790;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_177789;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_177799 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_177800 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_177801 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_177802 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__178472 = (function (){var G__178473 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__178474 = (function (){var G__178475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__178476 = "(";
var G__178477 = (function (){var G__178806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__178807 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178806,G__178807) : tailrecursion.hoplon.span.call(null,G__178806,G__178807));
})();
var G__178478 = (function (){var G__178808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178809 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178808,G__178809) : tailrecursion.hoplon.span.call(null,G__178808,G__178809));
})();
var G__178479 = " [";
var G__178480 = (function (){var G__178810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178811 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178810,G__178811) : tailrecursion.hoplon.span.call(null,G__178810,G__178811));
})();
var G__178481 = " ";
var G__178482 = (function (){var G__178812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178813 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178812,G__178813) : tailrecursion.hoplon.span.call(null,G__178812,G__178813));
})();
var G__178483 = "]\n  (";
var G__178484 = (function (){var G__178814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__178815 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178814,G__178815) : tailrecursion.hoplon.span.call(null,G__178814,G__178815));
})();
var G__178485 = "(";
var G__178486 = (function (){var G__178816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__178817 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178816,G__178817) : tailrecursion.hoplon.span.call(null,G__178816,G__178817));
})();
var G__178487 = "(";
var G__178488 = (function (){var G__178818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178819 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178818,G__178819) : tailrecursion.hoplon.span.call(null,G__178818,G__178819));
})();
var G__178489 = " ";
var G__178490 = (function (){var G__178820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178821 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178820,G__178821) : tailrecursion.hoplon.span.call(null,G__178820,G__178821));
})();
var G__178491 = ") ";
var G__178492 = (function (){var G__178822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__178823 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178822,G__178823) : tailrecursion.hoplon.span.call(null,G__178822,G__178823));
})();
var G__178493 = ")\n        (";
var G__178494 = (function (){var G__178824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__178825 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178824,G__178825) : tailrecursion.hoplon.span.call(null,G__178824,G__178825));
})();
var G__178495 = "(";
var G__178496 = (function (){var G__178826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__178827 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178826,G__178827) : tailrecursion.hoplon.span.call(null,G__178826,G__178827));
})();
var G__178497 = "(";
var G__178498 = (function (){var G__178828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178829 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178828,G__178829) : tailrecursion.hoplon.span.call(null,G__178828,G__178829));
})();
var G__178499 = " ";
var G__178500 = (function (){var G__178830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178831 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178830,G__178831) : tailrecursion.hoplon.span.call(null,G__178830,G__178831));
})();
var G__178501 = ") ";
var G__178502 = (function (){var G__178832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__178833 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178832,G__178833) : tailrecursion.hoplon.span.call(null,G__178832,G__178833));
})();
var G__178503 = ")\n              (";
var G__178504 = (function (){var G__178834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178835 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178834,G__178835) : tailrecursion.hoplon.span.call(null,G__178834,G__178835));
})();
var G__178505 = " (";
var G__178506 = (function (){var G__178836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__178837 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178836,G__178837) : tailrecursion.hoplon.span.call(null,G__178836,G__178837));
})();
var G__178507 = "(";
var G__178508 = (function (){var G__178838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178839 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178838,G__178839) : tailrecursion.hoplon.span.call(null,G__178838,G__178839));
})();
var G__178509 = " ";
var G__178510 = (function (){var G__178840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178841 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178840,G__178841) : tailrecursion.hoplon.span.call(null,G__178840,G__178841));
})();
var G__178511 = ")\n                                (";
var G__178512 = (function (){var G__178842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178843 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178842,G__178843) : tailrecursion.hoplon.span.call(null,G__178842,G__178843));
})();
var G__178513 = " ";
var G__178514 = (function (){var G__178844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178845 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178844,G__178845) : tailrecursion.hoplon.span.call(null,G__178844,G__178845));
})();
var G__178515 = "))\n                             (";
var G__178516 = (function (){var G__178846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__178847 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178846,G__178847) : tailrecursion.hoplon.span.call(null,G__178846,G__178847));
})();
var G__178517 = "(";
var G__178518 = (function (){var G__178848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178849 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178848,G__178849) : tailrecursion.hoplon.span.call(null,G__178848,G__178849));
})();
var G__178519 = " ";
var G__178520 = (function (){var G__178850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178851 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178850,G__178851) : tailrecursion.hoplon.span.call(null,G__178850,G__178851));
})();
var G__178521 = ")\n                                (";
var G__178522 = (function (){var G__178852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178853 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178852,G__178853) : tailrecursion.hoplon.span.call(null,G__178852,G__178853));
})();
var G__178523 = " ";
var G__178524 = (function (){var G__178854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178855 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178854,G__178855) : tailrecursion.hoplon.span.call(null,G__178854,G__178855));
})();
var G__178525 = ")))\n              (";
var G__178526 = (function (){var G__178856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__178857 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178856,G__178857) : tailrecursion.hoplon.span.call(null,G__178856,G__178857));
})();
var G__178527 = (function (){var G__178858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__178859 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178858,G__178859) : tailrecursion.hoplon.span.call(null,G__178858,G__178859));
})();
var G__178528 = " (";
var G__178529 = (function (){var G__178860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178861 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178860,G__178861) : tailrecursion.hoplon.span.call(null,G__178860,G__178861));
})();
var G__178530 = " ";
var G__178531 = (function (){var G__178862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178863 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178862,G__178863) : tailrecursion.hoplon.span.call(null,G__178862,G__178863));
})();
var G__178532 = "))\n              (";
var G__178533 = (function (){var G__178864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178865 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178864,G__178865) : tailrecursion.hoplon.span.call(null,G__178864,G__178865));
})();
var G__178534 = " (";
var G__178535 = (function (){var G__178866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__178867 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178866,G__178867) : tailrecursion.hoplon.span.call(null,G__178866,G__178867));
})();
var G__178536 = "(";
var G__178537 = (function (){var G__178868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178869 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178868,G__178869) : tailrecursion.hoplon.span.call(null,G__178868,G__178869));
})();
var G__178538 = " ";
var G__178539 = (function (){var G__178870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178871 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178870,G__178871) : tailrecursion.hoplon.span.call(null,G__178870,G__178871));
})();
var G__178540 = ")\n                                (";
var G__178541 = (function (){var G__178872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178873 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178872,G__178873) : tailrecursion.hoplon.span.call(null,G__178872,G__178873));
})();
var G__178542 = " ";
var G__178543 = (function (){var G__178874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178875 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178874,G__178875) : tailrecursion.hoplon.span.call(null,G__178874,G__178875));
})();
var G__178544 = "))\n                             (";
var G__178545 = (function (){var G__178876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__178877 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178876,G__178877) : tailrecursion.hoplon.span.call(null,G__178876,G__178877));
})();
var G__178546 = "(";
var G__178547 = (function (){var G__178878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178879 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178878,G__178879) : tailrecursion.hoplon.span.call(null,G__178878,G__178879));
})();
var G__178548 = " ";
var G__178549 = (function (){var G__178880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178881 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178880,G__178881) : tailrecursion.hoplon.span.call(null,G__178880,G__178881));
})();
var G__178550 = ")\n                                (";
var G__178551 = (function (){var G__178882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178883 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178882,G__178883) : tailrecursion.hoplon.span.call(null,G__178882,G__178883));
})();
var G__178552 = " ";
var G__178553 = (function (){var G__178884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178885 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178884,G__178885) : tailrecursion.hoplon.span.call(null,G__178884,G__178885));
})();
var G__178554 = ")))\n              ";
var G__178555 = (function (){var G__178886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178887 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178886,G__178887) : tailrecursion.hoplon.span.call(null,G__178886,G__178887));
})();
var G__178556 = " \n              (";
var G__178557 = (function (){var G__178888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178889 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178888,G__178889) : tailrecursion.hoplon.span.call(null,G__178888,G__178889));
})();
var G__178558 = " (";
var G__178559 = (function (){var G__178890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__178891 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178890,G__178891) : tailrecursion.hoplon.span.call(null,G__178890,G__178891));
})();
var G__178560 = "(";
var G__178561 = (function (){var G__178892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178893 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178892,G__178893) : tailrecursion.hoplon.span.call(null,G__178892,G__178893));
})();
var G__178562 = " ";
var G__178563 = (function (){var G__178894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178895 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178894,G__178895) : tailrecursion.hoplon.span.call(null,G__178894,G__178895));
})();
var G__178564 = ")\n                                (";
var G__178565 = (function (){var G__178896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178897 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178896,G__178897) : tailrecursion.hoplon.span.call(null,G__178896,G__178897));
})();
var G__178566 = " ";
var G__178567 = (function (){var G__178898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178899 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178898,G__178899) : tailrecursion.hoplon.span.call(null,G__178898,G__178899));
})();
var G__178568 = "))\n                             (";
var G__178569 = (function (){var G__178900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__178901 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178900,G__178901) : tailrecursion.hoplon.span.call(null,G__178900,G__178901));
})();
var G__178570 = "(";
var G__178571 = (function (){var G__178902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178903 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178902,G__178903) : tailrecursion.hoplon.span.call(null,G__178902,G__178903));
})();
var G__178572 = " ";
var G__178573 = (function (){var G__178904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178905 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178904,G__178905) : tailrecursion.hoplon.span.call(null,G__178904,G__178905));
})();
var G__178574 = ")\n                                (";
var G__178575 = (function (){var G__178906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178907 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178906,G__178907) : tailrecursion.hoplon.span.call(null,G__178906,G__178907));
})();
var G__178576 = " ";
var G__178577 = (function (){var G__178908 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178909 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178908,G__178909) : tailrecursion.hoplon.span.call(null,G__178908,G__178909));
})();
var G__178578 = "))))\n        (";
var G__178579 = (function (){var G__178910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__178911 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178910,G__178911) : tailrecursion.hoplon.span.call(null,G__178910,G__178911));
})();
var G__178580 = (function (){var G__178912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__178913 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178912,G__178913) : tailrecursion.hoplon.span.call(null,G__178912,G__178913));
})();
var G__178581 = " (";
var G__178582 = (function (){var G__178914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178915 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178914,G__178915) : tailrecursion.hoplon.span.call(null,G__178914,G__178915));
})();
var G__178583 = " ";
var G__178584 = (function (){var G__178916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178917 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178916,G__178917) : tailrecursion.hoplon.span.call(null,G__178916,G__178917));
})();
var G__178585 = "))\n        (";
var G__178586 = (function (){var G__178918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__178919 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178918,G__178919) : tailrecursion.hoplon.span.call(null,G__178918,G__178919));
})();
var G__178587 = "(";
var G__178588 = (function (){var G__178920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__178921 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178920,G__178921) : tailrecursion.hoplon.span.call(null,G__178920,G__178921));
})();
var G__178589 = "(";
var G__178590 = (function (){var G__178922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178923 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178922,G__178923) : tailrecursion.hoplon.span.call(null,G__178922,G__178923));
})();
var G__178591 = " ";
var G__178592 = (function (){var G__178924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178925 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178924,G__178925) : tailrecursion.hoplon.span.call(null,G__178924,G__178925));
})();
var G__178593 = ") ";
var G__178594 = (function (){var G__178926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__178927 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178926,G__178927) : tailrecursion.hoplon.span.call(null,G__178926,G__178927));
})();
var G__178595 = ")\n              (";
var G__178596 = (function (){var G__178928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178929 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178928,G__178929) : tailrecursion.hoplon.span.call(null,G__178928,G__178929));
})();
var G__178597 = " (";
var G__178598 = (function (){var G__178930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__178931 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178930,G__178931) : tailrecursion.hoplon.span.call(null,G__178930,G__178931));
})();
var G__178599 = "(";
var G__178600 = (function (){var G__178932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178933 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178932,G__178933) : tailrecursion.hoplon.span.call(null,G__178932,G__178933));
})();
var G__178601 = " ";
var G__178602 = (function (){var G__178934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178935 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178934,G__178935) : tailrecursion.hoplon.span.call(null,G__178934,G__178935));
})();
var G__178603 = ")\n                                (";
var G__178604 = (function (){var G__178936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178937 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178936,G__178937) : tailrecursion.hoplon.span.call(null,G__178936,G__178937));
})();
var G__178605 = " ";
var G__178606 = (function (){var G__178938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178939 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178938,G__178939) : tailrecursion.hoplon.span.call(null,G__178938,G__178939));
})();
var G__178607 = "))\n                             (";
var G__178608 = (function (){var G__178940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__178941 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178940,G__178941) : tailrecursion.hoplon.span.call(null,G__178940,G__178941));
})();
var G__178609 = "(";
var G__178610 = (function (){var G__178942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178943 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178942,G__178943) : tailrecursion.hoplon.span.call(null,G__178942,G__178943));
})();
var G__178611 = " ";
var G__178612 = (function (){var G__178944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178945 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178944,G__178945) : tailrecursion.hoplon.span.call(null,G__178944,G__178945));
})();
var G__178613 = ")\n                                (";
var G__178614 = (function (){var G__178946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178947 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178946,G__178947) : tailrecursion.hoplon.span.call(null,G__178946,G__178947));
})();
var G__178615 = " ";
var G__178616 = (function (){var G__178948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178949 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178948,G__178949) : tailrecursion.hoplon.span.call(null,G__178948,G__178949));
})();
var G__178617 = ")))\n              (";
var G__178618 = (function (){var G__178950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__178951 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178950,G__178951) : tailrecursion.hoplon.span.call(null,G__178950,G__178951));
})();
var G__178619 = (function (){var G__178952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__178953 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178952,G__178953) : tailrecursion.hoplon.span.call(null,G__178952,G__178953));
})();
var G__178620 = " (";
var G__178621 = (function (){var G__178954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178955 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178954,G__178955) : tailrecursion.hoplon.span.call(null,G__178954,G__178955));
})();
var G__178622 = " ";
var G__178623 = (function (){var G__178956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178957 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178956,G__178957) : tailrecursion.hoplon.span.call(null,G__178956,G__178957));
})();
var G__178624 = "))\n              (";
var G__178625 = (function (){var G__178958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178959 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178958,G__178959) : tailrecursion.hoplon.span.call(null,G__178958,G__178959));
})();
var G__178626 = " (";
var G__178627 = (function (){var G__178960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__178961 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178960,G__178961) : tailrecursion.hoplon.span.call(null,G__178960,G__178961));
})();
var G__178628 = "(";
var G__178629 = (function (){var G__178962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178963 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178962,G__178963) : tailrecursion.hoplon.span.call(null,G__178962,G__178963));
})();
var G__178630 = " ";
var G__178631 = (function (){var G__178964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178965 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178964,G__178965) : tailrecursion.hoplon.span.call(null,G__178964,G__178965));
})();
var G__178632 = ")\n                                (";
var G__178633 = (function (){var G__178966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178967 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178966,G__178967) : tailrecursion.hoplon.span.call(null,G__178966,G__178967));
})();
var G__178634 = " ";
var G__178635 = (function (){var G__178968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178969 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178968,G__178969) : tailrecursion.hoplon.span.call(null,G__178968,G__178969));
})();
var G__178636 = "))\n                             (";
var G__178637 = (function (){var G__178970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__178971 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178970,G__178971) : tailrecursion.hoplon.span.call(null,G__178970,G__178971));
})();
var G__178638 = "(";
var G__178639 = (function (){var G__178972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178973 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178972,G__178973) : tailrecursion.hoplon.span.call(null,G__178972,G__178973));
})();
var G__178640 = " ";
var G__178641 = (function (){var G__178974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178975 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178974,G__178975) : tailrecursion.hoplon.span.call(null,G__178974,G__178975));
})();
var G__178642 = ")\n                                (";
var G__178643 = (function (){var G__178976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178977 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178976,G__178977) : tailrecursion.hoplon.span.call(null,G__178976,G__178977));
})();
var G__178644 = " ";
var G__178645 = (function (){var G__178978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178979 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178978,G__178979) : tailrecursion.hoplon.span.call(null,G__178978,G__178979));
})();
var G__178646 = ")))\n              ";
var G__178647 = (function (){var G__178980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178981 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178980,G__178981) : tailrecursion.hoplon.span.call(null,G__178980,G__178981));
})();
var G__178648 = " \n              (";
var G__178649 = (function (){var G__178982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178983 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178982,G__178983) : tailrecursion.hoplon.span.call(null,G__178982,G__178983));
})();
var G__178650 = " (";
var G__178651 = (function (){var G__178984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__178985 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178984,G__178985) : tailrecursion.hoplon.span.call(null,G__178984,G__178985));
})();
var G__178652 = "(";
var G__178653 = (function (){var G__178986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178987 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178986,G__178987) : tailrecursion.hoplon.span.call(null,G__178986,G__178987));
})();
var G__178654 = " ";
var G__178655 = (function (){var G__178988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178989 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178988,G__178989) : tailrecursion.hoplon.span.call(null,G__178988,G__178989));
})();
var G__178656 = ")\n                                (";
var G__178657 = (function (){var G__178990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178991 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178990,G__178991) : tailrecursion.hoplon.span.call(null,G__178990,G__178991));
})();
var G__178658 = " ";
var G__178659 = (function (){var G__178992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178993 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178992,G__178993) : tailrecursion.hoplon.span.call(null,G__178992,G__178993));
})();
var G__178660 = "))\n                             (";
var G__178661 = (function (){var G__178994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__178995 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178994,G__178995) : tailrecursion.hoplon.span.call(null,G__178994,G__178995));
})();
var G__178662 = "(";
var G__178663 = (function (){var G__178996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__178997 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178996,G__178997) : tailrecursion.hoplon.span.call(null,G__178996,G__178997));
})();
var G__178664 = " ";
var G__178665 = (function (){var G__178998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__178999 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__178998,G__178999) : tailrecursion.hoplon.span.call(null,G__178998,G__178999));
})();
var G__178666 = ")\n                                (";
var G__178667 = (function (){var G__179000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179001 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179000,G__179001) : tailrecursion.hoplon.span.call(null,G__179000,G__179001));
})();
var G__178668 = " ";
var G__178669 = (function (){var G__179002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179003 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179002,G__179003) : tailrecursion.hoplon.span.call(null,G__179002,G__179003));
})();
var G__178670 = "))))\n        ";
var G__178671 = (function (){var G__179004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179005 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179004,G__179005) : tailrecursion.hoplon.span.call(null,G__179004,G__179005));
})();
var G__178672 = "\n        (";
var G__178673 = (function (){var G__179006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179007 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179006,G__179007) : tailrecursion.hoplon.span.call(null,G__179006,G__179007));
})();
var G__178674 = "(";
var G__178675 = (function (){var G__179008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179009 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179008,G__179009) : tailrecursion.hoplon.span.call(null,G__179008,G__179009));
})();
var G__178676 = "(";
var G__178677 = (function (){var G__179010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179011 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179010,G__179011) : tailrecursion.hoplon.span.call(null,G__179010,G__179011));
})();
var G__178678 = " ";
var G__178679 = (function (){var G__179012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179013 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179012,G__179013) : tailrecursion.hoplon.span.call(null,G__179012,G__179013));
})();
var G__178680 = ") ";
var G__178681 = (function (){var G__179014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__179015 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179014,G__179015) : tailrecursion.hoplon.span.call(null,G__179014,G__179015));
})();
var G__178682 = ")\n              (";
var G__178683 = (function (){var G__179016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179017 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179016,G__179017) : tailrecursion.hoplon.span.call(null,G__179016,G__179017));
})();
var G__178684 = " (";
var G__178685 = (function (){var G__179018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179019 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179018,G__179019) : tailrecursion.hoplon.span.call(null,G__179018,G__179019));
})();
var G__178686 = "(";
var G__178687 = (function (){var G__179020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179021 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179020,G__179021) : tailrecursion.hoplon.span.call(null,G__179020,G__179021));
})();
var G__178688 = " ";
var G__178689 = (function (){var G__179022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179023 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179022,G__179023) : tailrecursion.hoplon.span.call(null,G__179022,G__179023));
})();
var G__178690 = ")\n                                (";
var G__178691 = (function (){var G__179024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179025 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179024,G__179025) : tailrecursion.hoplon.span.call(null,G__179024,G__179025));
})();
var G__178692 = " ";
var G__178693 = (function (){var G__179026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179027 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179026,G__179027) : tailrecursion.hoplon.span.call(null,G__179026,G__179027));
})();
var G__178694 = "))\n                             (";
var G__178695 = (function (){var G__179028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179029 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179028,G__179029) : tailrecursion.hoplon.span.call(null,G__179028,G__179029));
})();
var G__178696 = "(";
var G__178697 = (function (){var G__179030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179031 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179030,G__179031) : tailrecursion.hoplon.span.call(null,G__179030,G__179031));
})();
var G__178698 = " ";
var G__178699 = (function (){var G__179032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179033 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179032,G__179033) : tailrecursion.hoplon.span.call(null,G__179032,G__179033));
})();
var G__178700 = ")\n                                (";
var G__178701 = (function (){var G__179034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179035 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179034,G__179035) : tailrecursion.hoplon.span.call(null,G__179034,G__179035));
})();
var G__178702 = " ";
var G__178703 = (function (){var G__179036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179037 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179036,G__179037) : tailrecursion.hoplon.span.call(null,G__179036,G__179037));
})();
var G__178704 = ")))\n              (";
var G__178705 = (function (){var G__179038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179039 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179038,G__179039) : tailrecursion.hoplon.span.call(null,G__179038,G__179039));
})();
var G__178706 = (function (){var G__179040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__179041 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179040,G__179041) : tailrecursion.hoplon.span.call(null,G__179040,G__179041));
})();
var G__178707 = " (";
var G__178708 = (function (){var G__179042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179043 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179042,G__179043) : tailrecursion.hoplon.span.call(null,G__179042,G__179043));
})();
var G__178709 = " ";
var G__178710 = (function (){var G__179044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179045 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179044,G__179045) : tailrecursion.hoplon.span.call(null,G__179044,G__179045));
})();
var G__178711 = "))\n              (";
var G__178712 = (function (){var G__179046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179047 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179046,G__179047) : tailrecursion.hoplon.span.call(null,G__179046,G__179047));
})();
var G__178713 = " (";
var G__178714 = (function (){var G__179048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179049 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179048,G__179049) : tailrecursion.hoplon.span.call(null,G__179048,G__179049));
})();
var G__178715 = "(";
var G__178716 = (function (){var G__179050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179051 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179050,G__179051) : tailrecursion.hoplon.span.call(null,G__179050,G__179051));
})();
var G__178717 = " ";
var G__178718 = (function (){var G__179052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179053 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179052,G__179053) : tailrecursion.hoplon.span.call(null,G__179052,G__179053));
})();
var G__178719 = ")\n                                (";
var G__178720 = (function (){var G__179054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179055 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179054,G__179055) : tailrecursion.hoplon.span.call(null,G__179054,G__179055));
})();
var G__178721 = " ";
var G__178722 = (function (){var G__179056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179057 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179056,G__179057) : tailrecursion.hoplon.span.call(null,G__179056,G__179057));
})();
var G__178723 = "))\n                             (";
var G__178724 = (function (){var G__179058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179059 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179058,G__179059) : tailrecursion.hoplon.span.call(null,G__179058,G__179059));
})();
var G__178725 = "(";
var G__178726 = (function (){var G__179060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179061 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179060,G__179061) : tailrecursion.hoplon.span.call(null,G__179060,G__179061));
})();
var G__178727 = " ";
var G__178728 = (function (){var G__179062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179063 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179062,G__179063) : tailrecursion.hoplon.span.call(null,G__179062,G__179063));
})();
var G__178729 = ")\n                                (";
var G__178730 = (function (){var G__179064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179065 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179064,G__179065) : tailrecursion.hoplon.span.call(null,G__179064,G__179065));
})();
var G__178731 = " ";
var G__178732 = (function (){var G__179066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179067 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179066,G__179067) : tailrecursion.hoplon.span.call(null,G__179066,G__179067));
})();
var G__178733 = ")))\n              ";
var G__178734 = (function (){var G__179068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179069 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179068,G__179069) : tailrecursion.hoplon.span.call(null,G__179068,G__179069));
})();
var G__178735 = " \n              (";
var G__178736 = (function (){var G__179070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__179071 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179070,G__179071) : tailrecursion.hoplon.span.call(null,G__179070,G__179071));
})();
var G__178737 = "[";
var G__178738 = (function (){var G__179072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179073 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179072,G__179073) : tailrecursion.hoplon.span.call(null,G__179072,G__179073));
})();
var G__178739 = " (";
var G__178740 = (function (){var G__179074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179075 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179074,G__179075) : tailrecursion.hoplon.span.call(null,G__179074,G__179075));
})();
var G__178741 = "(";
var G__178742 = (function (){var G__179076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179077 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179076,G__179077) : tailrecursion.hoplon.span.call(null,G__179076,G__179077));
})();
var G__178743 = " ";
var G__178744 = (function (){var G__179078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179079 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179078,G__179079) : tailrecursion.hoplon.span.call(null,G__179078,G__179079));
})();
var G__178745 = ")\n                         (";
var G__178746 = (function (){var G__179080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179081 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179080,G__179081) : tailrecursion.hoplon.span.call(null,G__179080,G__179081));
})();
var G__178747 = " ";
var G__178748 = (function (){var G__179082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179083 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179082,G__179083) : tailrecursion.hoplon.span.call(null,G__179082,G__179083));
})();
var G__178749 = "))\n                    ";
var G__178750 = (function (){var G__179084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179085 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179084,G__179085) : tailrecursion.hoplon.span.call(null,G__179084,G__179085));
})();
var G__178751 = " (";
var G__178752 = (function (){var G__179086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179087 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179086,G__179087) : tailrecursion.hoplon.span.call(null,G__179086,G__179087));
})();
var G__178753 = "(";
var G__178754 = (function (){var G__179088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179089 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179088,G__179089) : tailrecursion.hoplon.span.call(null,G__179088,G__179089));
})();
var G__178755 = " ";
var G__178756 = (function (){var G__179090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179091 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179090,G__179091) : tailrecursion.hoplon.span.call(null,G__179090,G__179091));
})();
var G__178757 = ")\n                         (";
var G__178758 = (function (){var G__179092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179093 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179092,G__179093) : tailrecursion.hoplon.span.call(null,G__179092,G__179093));
})();
var G__178759 = " ";
var G__178760 = (function (){var G__179094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179095 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179094,G__179095) : tailrecursion.hoplon.span.call(null,G__179094,G__179095));
})();
var G__178761 = "))\n                    ";
var G__178762 = (function (){var G__179096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179097 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179096,G__179097) : tailrecursion.hoplon.span.call(null,G__179096,G__179097));
})();
var G__178763 = " (";
var G__178764 = (function (){var G__179098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179099 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179098,G__179099) : tailrecursion.hoplon.span.call(null,G__179098,G__179099));
})();
var G__178765 = "(";
var G__178766 = (function (){var G__179100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179101 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179100,G__179101) : tailrecursion.hoplon.span.call(null,G__179100,G__179101));
})();
var G__178767 = " ";
var G__178768 = (function (){var G__179102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179103 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179102,G__179103) : tailrecursion.hoplon.span.call(null,G__179102,G__179103));
})();
var G__178769 = ")\n                         (";
var G__178770 = (function (){var G__179104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179105 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179104,G__179105) : tailrecursion.hoplon.span.call(null,G__179104,G__179105));
})();
var G__178771 = " ";
var G__178772 = (function (){var G__179106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179107 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179106,G__179107) : tailrecursion.hoplon.span.call(null,G__179106,G__179107));
})();
var G__178773 = "))\n                    ";
var G__178774 = (function (){var G__179108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179109 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179108,G__179109) : tailrecursion.hoplon.span.call(null,G__179108,G__179109));
})();
var G__178775 = " (";
var G__178776 = (function (){var G__179110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179111 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179110,G__179111) : tailrecursion.hoplon.span.call(null,G__179110,G__179111));
})();
var G__178777 = "(";
var G__178778 = (function (){var G__179112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179113 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179112,G__179113) : tailrecursion.hoplon.span.call(null,G__179112,G__179113));
})();
var G__178779 = " ";
var G__178780 = (function (){var G__179114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179115 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179114,G__179115) : tailrecursion.hoplon.span.call(null,G__179114,G__179115));
})();
var G__178781 = ")\n                         (";
var G__178782 = (function (){var G__179116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179117 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179116,G__179117) : tailrecursion.hoplon.span.call(null,G__179116,G__179117));
})();
var G__178783 = " ";
var G__178784 = (function (){var G__179118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179119 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179118,G__179119) : tailrecursion.hoplon.span.call(null,G__179118,G__179119));
})();
var G__178785 = "))]\n                (";
var G__178786 = (function (){var G__179120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179121 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179120,G__179121) : tailrecursion.hoplon.span.call(null,G__179120,G__179121));
})();
var G__178787 = " (";
var G__178788 = (function (){var G__179122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179123 = "min ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179122,G__179123) : tailrecursion.hoplon.span.call(null,G__179122,G__179123));
})();
var G__178789 = (function (){var G__179124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179125 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179124,G__179125) : tailrecursion.hoplon.span.call(null,G__179124,G__179125));
})();
var G__178790 = " ";
var G__178791 = (function (){var G__179126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179127 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179126,G__179127) : tailrecursion.hoplon.span.call(null,G__179126,G__179127));
})();
var G__178792 = " ";
var G__178793 = (function (){var G__179128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179129 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179128,G__179129) : tailrecursion.hoplon.span.call(null,G__179128,G__179129));
})();
var G__178794 = " ";
var G__178795 = (function (){var G__179130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179131 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179130,G__179131) : tailrecursion.hoplon.span.call(null,G__179130,G__179131));
})();
var G__178796 = ")\n                               (";
var G__178797 = (function (){var G__179132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179133 = "max ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179132,G__179133) : tailrecursion.hoplon.span.call(null,G__179132,G__179133));
})();
var G__178798 = (function (){var G__179134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179135 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179134,G__179135) : tailrecursion.hoplon.span.call(null,G__179134,G__179135));
})();
var G__178799 = " ";
var G__178800 = (function (){var G__179136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179137 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179136,G__179137) : tailrecursion.hoplon.span.call(null,G__179136,G__179137));
})();
var G__178801 = " ";
var G__178802 = (function (){var G__179138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179139 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179138,G__179139) : tailrecursion.hoplon.span.call(null,G__179138,G__179139));
})();
var G__178803 = " ";
var G__178804 = (function (){var G__179140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179141 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179140,G__179141) : tailrecursion.hoplon.span.call(null,G__179140,G__179141));
})();
var G__178805 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$331 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$331(G__178475,G__178476,G__178477,G__178478,G__178479,G__178480,G__178481,G__178482,G__178483,G__178484,G__178485,G__178486,G__178487,G__178488,G__178489,G__178490,G__178491,G__178492,G__178493,G__178494,G__178495,G__178496,G__178497,G__178498,G__178499,G__178500,G__178501,G__178502,G__178503,G__178504,G__178505,G__178506,G__178507,G__178508,G__178509,G__178510,G__178511,G__178512,G__178513,G__178514,G__178515,G__178516,G__178517,G__178518,G__178519,G__178520,G__178521,G__178522,G__178523,G__178524,G__178525,G__178526,G__178527,G__178528,G__178529,G__178530,G__178531,G__178532,G__178533,G__178534,G__178535,G__178536,G__178537,G__178538,G__178539,G__178540,G__178541,G__178542,G__178543,G__178544,G__178545,G__178546,G__178547,G__178548,G__178549,G__178550,G__178551,G__178552,G__178553,G__178554,G__178555,G__178556,G__178557,G__178558,G__178559,G__178560,G__178561,G__178562,G__178563,G__178564,G__178565,G__178566,G__178567,G__178568,G__178569,G__178570,G__178571,G__178572,G__178573,G__178574,G__178575,G__178576,G__178577,G__178578,G__178579,G__178580,G__178581,G__178582,G__178583,G__178584,G__178585,G__178586,G__178587,G__178588,G__178589,G__178590,G__178591,G__178592,G__178593,G__178594,G__178595,G__178596,G__178597,G__178598,G__178599,G__178600,G__178601,G__178602,G__178603,G__178604,G__178605,G__178606,G__178607,G__178608,G__178609,G__178610,G__178611,G__178612,G__178613,G__178614,G__178615,G__178616,G__178617,G__178618,G__178619,G__178620,G__178621,G__178622,G__178623,G__178624,G__178625,G__178626,G__178627,G__178628,G__178629,G__178630,G__178631,G__178632,G__178633,G__178634,G__178635,G__178636,G__178637,G__178638,G__178639,G__178640,G__178641,G__178642,G__178643,G__178644,G__178645,G__178646,G__178647,G__178648,G__178649,G__178650,G__178651,G__178652,G__178653,G__178654,G__178655,G__178656,G__178657,G__178658,G__178659,G__178660,G__178661,G__178662,G__178663,G__178664,G__178665,G__178666,G__178667,G__178668,G__178669,G__178670,G__178671,G__178672,G__178673,G__178674,G__178675,G__178676,G__178677,G__178678,G__178679,G__178680,G__178681,G__178682,G__178683,G__178684,G__178685,G__178686,G__178687,G__178688,G__178689,G__178690,G__178691,G__178692,G__178693,G__178694,G__178695,G__178696,G__178697,G__178698,G__178699,G__178700,G__178701,G__178702,G__178703,G__178704,G__178705,G__178706,G__178707,G__178708,G__178709,G__178710,G__178711,G__178712,G__178713,G__178714,G__178715,G__178716,G__178717,G__178718,G__178719,G__178720,G__178721,G__178722,G__178723,G__178724,G__178725,G__178726,G__178727,G__178728,G__178729,G__178730,G__178731,G__178732,G__178733,G__178734,G__178735,G__178736,G__178737,G__178738,G__178739,G__178740,G__178741,G__178742,G__178743,G__178744,G__178745,G__178746,G__178747,G__178748,G__178749,G__178750,G__178751,G__178752,G__178753,G__178754,G__178755,G__178756,G__178757,G__178758,G__178759,G__178760,G__178761,G__178762,G__178763,G__178764,G__178765,G__178766,G__178767,G__178768,G__178769,G__178770,G__178771,G__178772,G__178773,G__178774,G__178775,G__178776,G__178777,G__178778,G__178779,G__178780,G__178781,G__178782,G__178783,G__178784,G__178785,G__178786,G__178787,G__178788,G__178789,G__178790,G__178791,G__178792,G__178793,G__178794,G__178795,G__178796,G__178797,G__178798,G__178799,G__178800,G__178801,G__178802,G__178803,G__178804,G__178805) : tailrecursion.hoplon.pre.call(null,G__178475,G__178476,G__178477,G__178478,G__178479,G__178480,G__178481,G__178482,G__178483,G__178484,G__178485,G__178486,G__178487,G__178488,G__178489,G__178490,G__178491,G__178492,G__178493,G__178494,G__178495,G__178496,G__178497,G__178498,G__178499,G__178500,G__178501,G__178502,G__178503,G__178504,G__178505,G__178506,G__178507,G__178508,G__178509,G__178510,G__178511,G__178512,G__178513,G__178514,G__178515,G__178516,G__178517,G__178518,G__178519,G__178520,G__178521,G__178522,G__178523,G__178524,G__178525,G__178526,G__178527,G__178528,G__178529,G__178530,G__178531,G__178532,G__178533,G__178534,G__178535,G__178536,G__178537,G__178538,G__178539,G__178540,G__178541,G__178542,G__178543,G__178544,G__178545,G__178546,G__178547,G__178548,G__178549,G__178550,G__178551,G__178552,G__178553,G__178554,G__178555,G__178556,G__178557,G__178558,G__178559,G__178560,G__178561,G__178562,G__178563,G__178564,G__178565,G__178566,G__178567,G__178568,G__178569,G__178570,G__178571,G__178572,G__178573,G__178574,G__178575,G__178576,G__178577,G__178578,G__178579,G__178580,G__178581,G__178582,G__178583,G__178584,G__178585,G__178586,G__178587,G__178588,G__178589,G__178590,G__178591,G__178592,G__178593,G__178594,G__178595,G__178596,G__178597,G__178598,G__178599,G__178600,G__178601,G__178602,G__178603,G__178604,G__178605,G__178606,G__178607,G__178608,G__178609,G__178610,G__178611,G__178612,G__178613,G__178614,G__178615,G__178616,G__178617,G__178618,G__178619,G__178620,G__178621,G__178622,G__178623,G__178624,G__178625,G__178626,G__178627,G__178628,G__178629,G__178630,G__178631,G__178632,G__178633,G__178634,G__178635,G__178636,G__178637,G__178638,G__178639,G__178640,G__178641,G__178642,G__178643,G__178644,G__178645,G__178646,G__178647,G__178648,G__178649,G__178650,G__178651,G__178652,G__178653,G__178654,G__178655,G__178656,G__178657,G__178658,G__178659,G__178660,G__178661,G__178662,G__178663,G__178664,G__178665,G__178666,G__178667,G__178668,G__178669,G__178670,G__178671,G__178672,G__178673,G__178674,G__178675,G__178676,G__178677,G__178678,G__178679,G__178680,G__178681,G__178682,G__178683,G__178684,G__178685,G__178686,G__178687,G__178688,G__178689,G__178690,G__178691,G__178692,G__178693,G__178694,G__178695,G__178696,G__178697,G__178698,G__178699,G__178700,G__178701,G__178702,G__178703,G__178704,G__178705,G__178706,G__178707,G__178708,G__178709,G__178710,G__178711,G__178712,G__178713,G__178714,G__178715,G__178716,G__178717,G__178718,G__178719,G__178720,G__178721,G__178722,G__178723,G__178724,G__178725,G__178726,G__178727,G__178728,G__178729,G__178730,G__178731,G__178732,G__178733,G__178734,G__178735,G__178736,G__178737,G__178738,G__178739,G__178740,G__178741,G__178742,G__178743,G__178744,G__178745,G__178746,G__178747,G__178748,G__178749,G__178750,G__178751,G__178752,G__178753,G__178754,G__178755,G__178756,G__178757,G__178758,G__178759,G__178760,G__178761,G__178762,G__178763,G__178764,G__178765,G__178766,G__178767,G__178768,G__178769,G__178770,G__178771,G__178772,G__178773,G__178774,G__178775,G__178776,G__178777,G__178778,G__178779,G__178780,G__178781,G__178782,G__178783,G__178784,G__178785,G__178786,G__178787,G__178788,G__178789,G__178790,G__178791,G__178792,G__178793,G__178794,G__178795,G__178796,G__178797,G__178798,G__178799,G__178800,G__178801,G__178802,G__178803,G__178804,G__178805));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__178473,G__178474) : tailrecursion.hoplon.div.call(null,G__178473,G__178474));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__178472) : tailrecursion.hoplon.div.call(null,G__178472));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_177802;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_177801;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_177800;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_177799;
}})()], 0)),"",(function (){var _STAR_references_STAR_179142 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179143 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_179144 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179145 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__179146 = cljs.core.PersistentArrayMap.EMPTY;
var G__179147 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["After debugging her program, Alyssa shows it to a potential user, who complains that her program solves the wrong problem. He wants a program that can deal with numbers represented as a center value and an additive tolerance; for example, he wants to work with intervals such as 3.5\u00B1 0.15 rather than ",tailrecursion.hoplon.markdown.ref_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$separator_DASH_space,null,cljs.core.cst$kw$reference_DASH_key,null], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["3.35, 3.65"], null)], 0)),". Alyssa returns to her desk and fixes this problem by supplying an alternate constructor and alternate selectors:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179146,G__179147) : tailrecursion.hoplon.markdown.para_node.call(null,G__179146,G__179147));
})(),(function (){var G__179271 = (function (){var G__179272 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__179273 = (function (){var G__179274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__179275 = "(";
var G__179276 = (function (){var G__179333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__179334 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179333,G__179334) : tailrecursion.hoplon.span.call(null,G__179333,G__179334));
})();
var G__179277 = (function (){var G__179335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179336 = "make-center-width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179335,G__179336) : tailrecursion.hoplon.span.call(null,G__179335,G__179336));
})();
var G__179278 = " [";
var G__179279 = (function (){var G__179337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179338 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179337,G__179338) : tailrecursion.hoplon.span.call(null,G__179337,G__179338));
})();
var G__179280 = " ";
var G__179281 = (function (){var G__179339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179340 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179339,G__179340) : tailrecursion.hoplon.span.call(null,G__179339,G__179340));
})();
var G__179282 = "]\n  (";
var G__179283 = (function (){var G__179341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179342 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179341,G__179342) : tailrecursion.hoplon.span.call(null,G__179341,G__179342));
})();
var G__179284 = " (";
var G__179285 = (function (){var G__179343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179344 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179343,G__179344) : tailrecursion.hoplon.span.call(null,G__179343,G__179344));
})();
var G__179286 = (function (){var G__179345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179346 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179345,G__179346) : tailrecursion.hoplon.span.call(null,G__179345,G__179346));
})();
var G__179287 = " ";
var G__179288 = (function (){var G__179347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179348 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179347,G__179348) : tailrecursion.hoplon.span.call(null,G__179347,G__179348));
})();
var G__179289 = ") (";
var G__179290 = (function (){var G__179349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179350 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179349,G__179350) : tailrecursion.hoplon.span.call(null,G__179349,G__179350));
})();
var G__179291 = (function (){var G__179351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179352 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179351,G__179352) : tailrecursion.hoplon.span.call(null,G__179351,G__179352));
})();
var G__179292 = " ";
var G__179293 = (function (){var G__179353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179354 = "w";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179353,G__179354) : tailrecursion.hoplon.span.call(null,G__179353,G__179354));
})();
var G__179294 = ")))\n(";
var G__179295 = (function (){var G__179355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__179356 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179355,G__179356) : tailrecursion.hoplon.span.call(null,G__179355,G__179356));
})();
var G__179296 = (function (){var G__179357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179358 = "center";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179357,G__179358) : tailrecursion.hoplon.span.call(null,G__179357,G__179358));
})();
var G__179297 = " [";
var G__179298 = (function (){var G__179359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179360 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179359,G__179360) : tailrecursion.hoplon.span.call(null,G__179359,G__179360));
})();
var G__179299 = "]\n  (";
var G__179300 = (function (){var G__179361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179362 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179361,G__179362) : tailrecursion.hoplon.span.call(null,G__179361,G__179362));
})();
var G__179301 = "(";
var G__179302 = (function (){var G__179363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179364 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179363,G__179364) : tailrecursion.hoplon.span.call(null,G__179363,G__179364));
})();
var G__179303 = "(";
var G__179304 = (function (){var G__179365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179366 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179365,G__179366) : tailrecursion.hoplon.span.call(null,G__179365,G__179366));
})();
var G__179305 = " ";
var G__179306 = (function (){var G__179367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179368 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179367,G__179368) : tailrecursion.hoplon.span.call(null,G__179367,G__179368));
})();
var G__179307 = ") (";
var G__179308 = (function (){var G__179369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179370 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179369,G__179370) : tailrecursion.hoplon.span.call(null,G__179369,G__179370));
})();
var G__179309 = " ";
var G__179310 = (function (){var G__179371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179372 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179371,G__179372) : tailrecursion.hoplon.span.call(null,G__179371,G__179372));
})();
var G__179311 = ")) ";
var G__179312 = (function (){var G__179373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__179374 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179373,G__179374) : tailrecursion.hoplon.span.call(null,G__179373,G__179374));
})();
var G__179313 = "))\n(";
var G__179314 = (function (){var G__179375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__179376 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179375,G__179376) : tailrecursion.hoplon.span.call(null,G__179375,G__179376));
})();
var G__179315 = (function (){var G__179377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179378 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179377,G__179378) : tailrecursion.hoplon.span.call(null,G__179377,G__179378));
})();
var G__179316 = " [";
var G__179317 = (function (){var G__179379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179380 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179379,G__179380) : tailrecursion.hoplon.span.call(null,G__179379,G__179380));
})();
var G__179318 = "]\n  (";
var G__179319 = (function (){var G__179381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179382 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179381,G__179382) : tailrecursion.hoplon.span.call(null,G__179381,G__179382));
})();
var G__179320 = "(";
var G__179321 = (function (){var G__179383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179384 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179383,G__179384) : tailrecursion.hoplon.span.call(null,G__179383,G__179384));
})();
var G__179322 = "(";
var G__179323 = (function (){var G__179385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179386 = "upper-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179385,G__179386) : tailrecursion.hoplon.span.call(null,G__179385,G__179386));
})();
var G__179324 = " ";
var G__179325 = (function (){var G__179387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179388 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179387,G__179388) : tailrecursion.hoplon.span.call(null,G__179387,G__179388));
})();
var G__179326 = ") (";
var G__179327 = (function (){var G__179389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179390 = "lower-bound";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179389,G__179390) : tailrecursion.hoplon.span.call(null,G__179389,G__179390));
})();
var G__179328 = " ";
var G__179329 = (function (){var G__179391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179392 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179391,G__179392) : tailrecursion.hoplon.span.call(null,G__179391,G__179392));
})();
var G__179330 = ")) ";
var G__179331 = (function (){var G__179393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__179394 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179393,G__179394) : tailrecursion.hoplon.span.call(null,G__179393,G__179394));
})();
var G__179332 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$59(G__179274,G__179275,G__179276,G__179277,G__179278,G__179279,G__179280,G__179281,G__179282,G__179283,G__179284,G__179285,G__179286,G__179287,G__179288,G__179289,G__179290,G__179291,G__179292,G__179293,G__179294,G__179295,G__179296,G__179297,G__179298,G__179299,G__179300,G__179301,G__179302,G__179303,G__179304,G__179305,G__179306,G__179307,G__179308,G__179309,G__179310,G__179311,G__179312,G__179313,G__179314,G__179315,G__179316,G__179317,G__179318,G__179319,G__179320,G__179321,G__179322,G__179323,G__179324,G__179325,G__179326,G__179327,G__179328,G__179329,G__179330,G__179331,G__179332) : tailrecursion.hoplon.pre.call(null,G__179274,G__179275,G__179276,G__179277,G__179278,G__179279,G__179280,G__179281,G__179282,G__179283,G__179284,G__179285,G__179286,G__179287,G__179288,G__179289,G__179290,G__179291,G__179292,G__179293,G__179294,G__179295,G__179296,G__179297,G__179298,G__179299,G__179300,G__179301,G__179302,G__179303,G__179304,G__179305,G__179306,G__179307,G__179308,G__179309,G__179310,G__179311,G__179312,G__179313,G__179314,G__179315,G__179316,G__179317,G__179318,G__179319,G__179320,G__179321,G__179322,G__179323,G__179324,G__179325,G__179326,G__179327,G__179328,G__179329,G__179330,G__179331,G__179332));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__179272,G__179273) : tailrecursion.hoplon.div.call(null,G__179272,G__179273));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__179271) : tailrecursion.hoplon.div.call(null,G__179271));
})(),(function (){var G__179395 = cljs.core.PersistentArrayMap.EMPTY;
var G__179396 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Unfortunately, most of Alyssa",(function (){var G__179397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__179398 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__179397,G__179398) : tailrecursion.hoplon.markdown.simple_node.call(null,G__179397,G__179398));
})(),"s users are engineers. Real engineering situations usually involve measurements with only a small uncertainty, measured as the ratio of the width of the interval to the midpoint of the interval. Engineers usually specify percentage tolerances on the parameters of devices, as in the resistor specifications given earlier."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179395,G__179396) : tailrecursion.hoplon.markdown.para_node.call(null,G__179395,G__179396));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179145;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179144;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179143;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179142;
}})()], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_179399 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179400 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_179401 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179402 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__179403 = cljs.core.PersistentArrayMap.EMPTY;
var G__179404 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a constructor ",(function (){var G__179405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-center-percent"], null);
var G__179406 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__179405,G__179406) : tailrecursion.hoplon.markdown.code_node.call(null,G__179405,G__179406));
})()," that takes a center and a percentage tolerance and produces the desired interval. You must also define a selector ",(function (){var G__179407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"percent"], null);
var G__179408 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__179407,G__179408) : tailrecursion.hoplon.markdown.code_node.call(null,G__179407,G__179408));
})()," that produces the percentage tolerance for a given interval. The ",(function (){var G__179409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"center"], null);
var G__179410 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__179409,G__179410) : tailrecursion.hoplon.markdown.code_node.call(null,G__179409,G__179410));
})()," selector is the same as the one above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179403,G__179404) : tailrecursion.hoplon.markdown.para_node.call(null,G__179403,G__179404));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179402;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179401;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179400;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179399;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_179411 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179412 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_179413 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179414 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__179510 = (function (){var G__179511 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__179512 = (function (){var G__179513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__179514 = "(";
var G__179515 = (function (){var G__179558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__179559 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179558,G__179559) : tailrecursion.hoplon.span.call(null,G__179558,G__179559));
})();
var G__179516 = (function (){var G__179560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179561 = "make-center-percent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179560,G__179561) : tailrecursion.hoplon.span.call(null,G__179560,G__179561));
})();
var G__179517 = " [";
var G__179518 = (function (){var G__179562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179563 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179562,G__179563) : tailrecursion.hoplon.span.call(null,G__179562,G__179563));
})();
var G__179519 = " ";
var G__179520 = (function (){var G__179564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179565 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179564,G__179565) : tailrecursion.hoplon.span.call(null,G__179564,G__179565));
})();
var G__179521 = "]\n  (";
var G__179522 = (function (){var G__179566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__179567 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179566,G__179567) : tailrecursion.hoplon.span.call(null,G__179566,G__179567));
})();
var G__179523 = "[";
var G__179524 = (function (){var G__179568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179569 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179568,G__179569) : tailrecursion.hoplon.span.call(null,G__179568,G__179569));
})();
var G__179525 = " (";
var G__179526 = (function (){var G__179570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179571 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179570,G__179571) : tailrecursion.hoplon.span.call(null,G__179570,G__179571));
})();
var G__179527 = (function (){var G__179572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179573 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179572,G__179573) : tailrecursion.hoplon.span.call(null,G__179572,G__179573));
})();
var G__179528 = " ";
var G__179529 = (function (){var G__179574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179575 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179574,G__179575) : tailrecursion.hoplon.span.call(null,G__179574,G__179575));
})();
var G__179530 = ")]\n    (";
var G__179531 = (function (){var G__179576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179577 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179576,G__179577) : tailrecursion.hoplon.span.call(null,G__179576,G__179577));
})();
var G__179532 = " (";
var G__179533 = (function (){var G__179578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179579 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179578,G__179579) : tailrecursion.hoplon.span.call(null,G__179578,G__179579));
})();
var G__179534 = (function (){var G__179580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179581 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179580,G__179581) : tailrecursion.hoplon.span.call(null,G__179580,G__179581));
})();
var G__179535 = " ";
var G__179536 = (function (){var G__179582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179583 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179582,G__179583) : tailrecursion.hoplon.span.call(null,G__179582,G__179583));
})();
var G__179537 = ") (";
var G__179538 = (function (){var G__179584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179585 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179584,G__179585) : tailrecursion.hoplon.span.call(null,G__179584,G__179585));
})();
var G__179539 = (function (){var G__179586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179587 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179586,G__179587) : tailrecursion.hoplon.span.call(null,G__179586,G__179587));
})();
var G__179540 = " ";
var G__179541 = (function (){var G__179588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179589 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179588,G__179589) : tailrecursion.hoplon.span.call(null,G__179588,G__179589));
})();
var G__179542 = "))))\n(";
var G__179543 = (function (){var G__179590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__179591 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179590,G__179591) : tailrecursion.hoplon.span.call(null,G__179590,G__179591));
})();
var G__179544 = (function (){var G__179592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179593 = "percent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179592,G__179593) : tailrecursion.hoplon.span.call(null,G__179592,G__179593));
})();
var G__179545 = " [";
var G__179546 = (function (){var G__179594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179595 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179594,G__179595) : tailrecursion.hoplon.span.call(null,G__179594,G__179595));
})();
var G__179547 = "]\n  (";
var G__179548 = (function (){var G__179596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__179597 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179596,G__179597) : tailrecursion.hoplon.span.call(null,G__179596,G__179597));
})();
var G__179549 = "(";
var G__179550 = (function (){var G__179598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179599 = "width";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179598,G__179599) : tailrecursion.hoplon.span.call(null,G__179598,G__179599));
})();
var G__179551 = " ";
var G__179552 = (function (){var G__179600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179601 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179600,G__179601) : tailrecursion.hoplon.span.call(null,G__179600,G__179601));
})();
var G__179553 = ") (";
var G__179554 = (function (){var G__179602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179603 = "center";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179602,G__179603) : tailrecursion.hoplon.span.call(null,G__179602,G__179603));
})();
var G__179555 = " ";
var G__179556 = (function (){var G__179604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179605 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179604,G__179605) : tailrecursion.hoplon.span.call(null,G__179604,G__179605));
})();
var G__179557 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45(G__179513,G__179514,G__179515,G__179516,G__179517,G__179518,G__179519,G__179520,G__179521,G__179522,G__179523,G__179524,G__179525,G__179526,G__179527,G__179528,G__179529,G__179530,G__179531,G__179532,G__179533,G__179534,G__179535,G__179536,G__179537,G__179538,G__179539,G__179540,G__179541,G__179542,G__179543,G__179544,G__179545,G__179546,G__179547,G__179548,G__179549,G__179550,G__179551,G__179552,G__179553,G__179554,G__179555,G__179556,G__179557) : tailrecursion.hoplon.pre.call(null,G__179513,G__179514,G__179515,G__179516,G__179517,G__179518,G__179519,G__179520,G__179521,G__179522,G__179523,G__179524,G__179525,G__179526,G__179527,G__179528,G__179529,G__179530,G__179531,G__179532,G__179533,G__179534,G__179535,G__179536,G__179537,G__179538,G__179539,G__179540,G__179541,G__179542,G__179543,G__179544,G__179545,G__179546,G__179547,G__179548,G__179549,G__179550,G__179551,G__179552,G__179553,G__179554,G__179555,G__179556,G__179557));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__179511,G__179512) : tailrecursion.hoplon.div.call(null,G__179511,G__179512));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__179510) : tailrecursion.hoplon.div.call(null,G__179510));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179414;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179413;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179412;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179411;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_179606 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179607 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_179608 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179609 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__179610 = cljs.core.PersistentArrayMap.EMPTY;
var G__179611 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Show that under the assumption of small percentage tolerances there is a simple formula for the approximate percentage tolerance of the product of two intervals in terms of the tolerances of the factors. You may simplify the problem by assuming that all numbers are positive."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179610,G__179611) : tailrecursion.hoplon.markdown.para_node.call(null,G__179610,G__179611));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179609;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179608;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179607;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179606;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_179612 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179613 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_179614 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179615 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__179616 = cljs.core.PersistentArrayMap.EMPTY;
var G__179617 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__179618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__179619 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__179618,G__179619) : tailrecursion.hoplon.markdown.simple_node.call(null,G__179618,G__179619));
})(),"s take two intervals, \\((a-\\epsilon,a+\\epsilon)\\) and \\((b-\\delta,b+\\delta)\\), where \\(a,b\\) and \\(\\epsilon,\\delta\\) are positive numbers and \\(\\epsilon,\\delta\\) are small. Then, the product is given by,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179616,G__179617) : tailrecursion.hoplon.markdown.para_node.call(null,G__179616,G__179617));
})(),(function (){var G__179620 = cljs.core.PersistentArrayMap.EMPTY;
var G__179621 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}&\\left((a-\\epsilon)(b-\\delta),(a+\\epsilon)(b+\\delta)\\right) \\\\=&\\left(ab-a\\delta-b\\epsilon+\\epsilon\\delta,ab+a\\delta+b\\epsilon+\\epsilon\\delta\\right) \\\\=&\\left((ab+\\epsilon\\delta)-(a\\delta+b\\epsilon),(ab+\\epsilon\\delta)+(a\\delta+b\\epsilon)\\right)\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179620,G__179621) : tailrecursion.hoplon.markdown.para_node.call(null,G__179620,G__179621));
})(),(function (){var G__179622 = cljs.core.PersistentArrayMap.EMPTY;
var G__179623 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, we see that the width in question is, \\(a\\delta+b\\epsilon\\), and the center is \\(ab+\\epsilon\\delta\\). Hence, the percentage tolerance is,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179622,G__179623) : tailrecursion.hoplon.markdown.para_node.call(null,G__179622,G__179623));
})(),(function (){var G__179624 = cljs.core.PersistentArrayMap.EMPTY;
var G__179625 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{a\\delta+b\\epsilon}{ab+\\epsilon\\delta}\\approx& \\frac{a\\delta +b\\epsilon}{ab+0} \\\\=&\\frac{a\\delta+b\\epsilon}{ab} \\\\=&\\frac{\\delta}{b}+\\frac{\\epsilon}{a}\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179624,G__179625) : tailrecursion.hoplon.markdown.para_node.call(null,G__179624,G__179625));
})(),(function (){var G__179626 = cljs.core.PersistentArrayMap.EMPTY;
var G__179627 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Which is the sum of the respective percentages."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179626,G__179627) : tailrecursion.hoplon.markdown.para_node.call(null,G__179626,G__179627));
})(),(function (){var G__179628 = cljs.core.PersistentArrayMap.EMPTY;
var G__179629 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, as long as the percentages are small enough for their squares to become negligible, the percentage tolerance of a product of intervals is sum of the percentage tolerances of the two respective intervals."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179628,G__179629) : tailrecursion.hoplon.markdown.para_node.call(null,G__179628,G__179629));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179615;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179614;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179613;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179612;
}})()], 0)),"",(function (){var _STAR_references_STAR_179630 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179631 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_179632 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179633 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__179634 = cljs.core.PersistentArrayMap.EMPTY;
var G__179635 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["After considerable work, Alyssa P. Hacker delivers her finished system. Several years later, after she has forgotten all about it, she gets a frenzied call from an irate user, Lem E. Tweakit. It seems that Lem has noticed that the formula for parallel resistors can be written in two algebraically equivalent ways:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179634,G__179635) : tailrecursion.hoplon.markdown.para_node.call(null,G__179634,G__179635));
})(),(function (){var G__179636 = cljs.core.PersistentArrayMap.EMPTY;
var G__179637 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{R_1R_2}{R_1+R_2}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179636,G__179637) : tailrecursion.hoplon.markdown.para_node.call(null,G__179636,G__179637));
})(),(function (){var G__179638 = cljs.core.PersistentArrayMap.EMPTY;
var G__179639 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179638,G__179639) : tailrecursion.hoplon.markdown.para_node.call(null,G__179638,G__179639));
})(),(function (){var G__179640 = cljs.core.PersistentArrayMap.EMPTY;
var G__179641 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{1}{1/R_1+1/R_2}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179640,G__179641) : tailrecursion.hoplon.markdown.para_node.call(null,G__179640,G__179641));
})(),(function (){var G__179642 = cljs.core.PersistentArrayMap.EMPTY;
var G__179643 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["He has written the following two programs, each of which computes the parallel-resistors formula differently:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179642,G__179643) : tailrecursion.hoplon.markdown.para_node.call(null,G__179642,G__179643));
})(),(function (){var G__179762 = (function (){var G__179763 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__179764 = (function (){var G__179765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__179766 = "(";
var G__179767 = (function (){var G__179823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__179824 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179823,G__179824) : tailrecursion.hoplon.span.call(null,G__179823,G__179824));
})();
var G__179768 = (function (){var G__179825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179826 = "par1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179825,G__179826) : tailrecursion.hoplon.span.call(null,G__179825,G__179826));
})();
var G__179769 = " [";
var G__179770 = (function (){var G__179827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179828 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179827,G__179828) : tailrecursion.hoplon.span.call(null,G__179827,G__179828));
})();
var G__179771 = " ";
var G__179772 = (function (){var G__179829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179830 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179829,G__179830) : tailrecursion.hoplon.span.call(null,G__179829,G__179830));
})();
var G__179773 = "]\n  (";
var G__179774 = (function (){var G__179831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179832 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179831,G__179832) : tailrecursion.hoplon.span.call(null,G__179831,G__179832));
})();
var G__179775 = " (";
var G__179776 = (function (){var G__179833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179834 = "mul-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179833,G__179834) : tailrecursion.hoplon.span.call(null,G__179833,G__179834));
})();
var G__179777 = " ";
var G__179778 = (function (){var G__179835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179836 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179835,G__179836) : tailrecursion.hoplon.span.call(null,G__179835,G__179836));
})();
var G__179779 = " ";
var G__179780 = (function (){var G__179837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179838 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179837,G__179838) : tailrecursion.hoplon.span.call(null,G__179837,G__179838));
})();
var G__179781 = ")\n                (";
var G__179782 = (function (){var G__179839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179840 = "add-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179839,G__179840) : tailrecursion.hoplon.span.call(null,G__179839,G__179840));
})();
var G__179783 = " ";
var G__179784 = (function (){var G__179841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179842 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179841,G__179842) : tailrecursion.hoplon.span.call(null,G__179841,G__179842));
})();
var G__179785 = " ";
var G__179786 = (function (){var G__179843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179844 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179843,G__179844) : tailrecursion.hoplon.span.call(null,G__179843,G__179844));
})();
var G__179787 = ")))\n(";
var G__179788 = (function (){var G__179845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__179846 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179845,G__179846) : tailrecursion.hoplon.span.call(null,G__179845,G__179846));
})();
var G__179789 = (function (){var G__179847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179848 = "par2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179847,G__179848) : tailrecursion.hoplon.span.call(null,G__179847,G__179848));
})();
var G__179790 = " [";
var G__179791 = (function (){var G__179849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179850 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179849,G__179850) : tailrecursion.hoplon.span.call(null,G__179849,G__179850));
})();
var G__179792 = " ";
var G__179793 = (function (){var G__179851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179852 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179851,G__179852) : tailrecursion.hoplon.span.call(null,G__179851,G__179852));
})();
var G__179794 = "]\n  (";
var G__179795 = (function (){var G__179853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__179854 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179853,G__179854) : tailrecursion.hoplon.span.call(null,G__179853,G__179854));
})();
var G__179796 = "[";
var G__179797 = (function (){var G__179855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179856 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179855,G__179856) : tailrecursion.hoplon.span.call(null,G__179855,G__179856));
})();
var G__179798 = " (";
var G__179799 = (function (){var G__179857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179858 = "make-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179857,G__179858) : tailrecursion.hoplon.span.call(null,G__179857,G__179858));
})();
var G__179800 = " ";
var G__179801 = (function (){var G__179859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__179860 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179859,G__179860) : tailrecursion.hoplon.span.call(null,G__179859,G__179860));
})();
var G__179802 = " ";
var G__179803 = (function (){var G__179861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__179862 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179861,G__179862) : tailrecursion.hoplon.span.call(null,G__179861,G__179862));
})();
var G__179804 = ")]\n    (";
var G__179805 = (function (){var G__179863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179864 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179863,G__179864) : tailrecursion.hoplon.span.call(null,G__179863,G__179864));
})();
var G__179806 = " ";
var G__179807 = (function (){var G__179865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179866 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179865,G__179866) : tailrecursion.hoplon.span.call(null,G__179865,G__179866));
})();
var G__179808 = "\n                  (";
var G__179809 = (function (){var G__179867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179868 = "add-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179867,G__179868) : tailrecursion.hoplon.span.call(null,G__179867,G__179868));
})();
var G__179810 = " (";
var G__179811 = (function (){var G__179869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179870 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179869,G__179870) : tailrecursion.hoplon.span.call(null,G__179869,G__179870));
})();
var G__179812 = " ";
var G__179813 = (function (){var G__179871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179872 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179871,G__179872) : tailrecursion.hoplon.span.call(null,G__179871,G__179872));
})();
var G__179814 = " ";
var G__179815 = (function (){var G__179873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179874 = "r1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179873,G__179874) : tailrecursion.hoplon.span.call(null,G__179873,G__179874));
})();
var G__179816 = ")\n                                (";
var G__179817 = (function (){var G__179875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__179876 = "div-interval";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179875,G__179876) : tailrecursion.hoplon.span.call(null,G__179875,G__179876));
})();
var G__179818 = " ";
var G__179819 = (function (){var G__179877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179878 = "one";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179877,G__179878) : tailrecursion.hoplon.span.call(null,G__179877,G__179878));
})();
var G__179820 = " ";
var G__179821 = (function (){var G__179879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__179880 = "r2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__179879,G__179880) : tailrecursion.hoplon.span.call(null,G__179879,G__179880));
})();
var G__179822 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$58(G__179765,G__179766,G__179767,G__179768,G__179769,G__179770,G__179771,G__179772,G__179773,G__179774,G__179775,G__179776,G__179777,G__179778,G__179779,G__179780,G__179781,G__179782,G__179783,G__179784,G__179785,G__179786,G__179787,G__179788,G__179789,G__179790,G__179791,G__179792,G__179793,G__179794,G__179795,G__179796,G__179797,G__179798,G__179799,G__179800,G__179801,G__179802,G__179803,G__179804,G__179805,G__179806,G__179807,G__179808,G__179809,G__179810,G__179811,G__179812,G__179813,G__179814,G__179815,G__179816,G__179817,G__179818,G__179819,G__179820,G__179821,G__179822) : tailrecursion.hoplon.pre.call(null,G__179765,G__179766,G__179767,G__179768,G__179769,G__179770,G__179771,G__179772,G__179773,G__179774,G__179775,G__179776,G__179777,G__179778,G__179779,G__179780,G__179781,G__179782,G__179783,G__179784,G__179785,G__179786,G__179787,G__179788,G__179789,G__179790,G__179791,G__179792,G__179793,G__179794,G__179795,G__179796,G__179797,G__179798,G__179799,G__179800,G__179801,G__179802,G__179803,G__179804,G__179805,G__179806,G__179807,G__179808,G__179809,G__179810,G__179811,G__179812,G__179813,G__179814,G__179815,G__179816,G__179817,G__179818,G__179819,G__179820,G__179821,G__179822));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__179763,G__179764) : tailrecursion.hoplon.div.call(null,G__179763,G__179764));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__179762) : tailrecursion.hoplon.div.call(null,G__179762));
})(),(function (){var G__179881 = cljs.core.PersistentArrayMap.EMPTY;
var G__179882 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lem complains that Alyssa",(function (){var G__179883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__179884 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__179883,G__179884) : tailrecursion.hoplon.markdown.simple_node.call(null,G__179883,G__179884));
})(),"s program gives different answers for the two ways of computing. This is a serious complaint."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179881,G__179882) : tailrecursion.hoplon.markdown.para_node.call(null,G__179881,G__179882));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179633;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179632;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179631;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179630;
}})()], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_179885 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179886 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_179887 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179888 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__179889 = cljs.core.PersistentArrayMap.EMPTY;
var G__179890 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Demonstrate that Lem is right. Investigate the behavior of the system on a variety of arithmetic expressions. Make some intervals A and B, and use them in computing the expressions A/A and A/B. You will get the most insight by using intervals whose width is a small percentage of the center value. Examine the results of the computation in center-percent form (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/2/ex/12/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.12"], null)], 0)),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179889,G__179890) : tailrecursion.hoplon.markdown.para_node.call(null,G__179889,G__179890));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179888;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179887;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179886;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179885;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_179891 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179892 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_179893 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179894 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__179895 = cljs.core.PersistentArrayMap.EMPTY;
var G__179896 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If we define \\(A=(29.9,30.1)\\), and \\(B=(49.9,51.1)\\), what happens when we divide \\(A\\) by itself? \\(B\\) by itself? \\(A\\) by \\(B\\)? \\(B\\) by \\(A\\)?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179895,G__179896) : tailrecursion.hoplon.markdown.para_node.call(null,G__179895,G__179896));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179894;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179893;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179892;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179891;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_179897 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179898 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_179899 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179900 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__179901 = cljs.core.PersistentArrayMap.EMPTY;
var G__179902 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Eva Lu Ator, another user, has also noticed the different intervals computed by different but algebraically equivalent expressions. She says that a formula to compute with intervals using Alyssa",(function (){var G__179903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__179904 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__179903,G__179904) : tailrecursion.hoplon.markdown.simple_node.call(null,G__179903,G__179904));
})(),"s system will produce tighter error bounds if it can be written in such a form that no variable that represents an uncertain number is repeated. Thus, she says, ",(function (){var G__179905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"par2"], null);
var G__179906 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__179905,G__179906) : tailrecursion.hoplon.markdown.code_node.call(null,G__179905,G__179906));
})()," is a ",(function (){var G__179907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__179908 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["better"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__179907,G__179908) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__179907,G__179908));
})()," program for parallel resistances than ",(function (){var G__179909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"par1"], null);
var G__179910 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__179909,G__179910) : tailrecursion.hoplon.markdown.code_node.call(null,G__179909,G__179910));
})(),". Is she right? Why?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179901,G__179902) : tailrecursion.hoplon.markdown.para_node.call(null,G__179901,G__179902));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179900;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179899;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179898;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179897;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_179911 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179912 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_179913 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179914 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__179915 = cljs.core.PersistentArrayMap.EMPTY;
var G__179916 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["She is correct. The reason is, if we write an equation, \\(\\frac{x+1}{x}\\), for instance, the assumption is that both \\(x\\)s in the equation have the same value. If we do this with the interval arithmetic we",(function (){var G__179917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__179918 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__179917,G__179918) : tailrecursion.hoplon.markdown.simple_node.call(null,G__179917,G__179918));
})(),"ve defined here, that is not necessarily true. ie, if we define \\(A=(2,4)\\) then compute the above formula using our interval arithmetic assuming that \\(x\\) is in the interval \\(A\\), we get"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179915,G__179916) : tailrecursion.hoplon.markdown.para_node.call(null,G__179915,G__179916));
})(),(function (){var G__179919 = cljs.core.PersistentArrayMap.EMPTY;
var G__179920 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} \\frac{A+1}{A}=&\\frac{(3,5)}{(2.4)} \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179919,G__179920) : tailrecursion.hoplon.markdown.para_node.call(null,G__179919,G__179920));
})(),(function (){var G__179921 = cljs.core.PersistentArrayMap.EMPTY;
var G__179922 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["which is another way of saying, ",(function (){var G__179923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__179924 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the interval obtained by taking any number between 3 and 5 and dividing it by another number between 2 and 4."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__179923,G__179924) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__179923,G__179924));
})()," But then, 3/4, for instance, would be in that interval by letting the numerator be 3 and the denominator be 4. But the problem is, if the numerator is to be 4, then \\(x=2\\), which means the denominator would be 2 as well."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179921,G__179922) : tailrecursion.hoplon.markdown.para_node.call(null,G__179921,G__179922));
})(),(function (){var G__179925 = cljs.core.PersistentArrayMap.EMPTY;
var G__179926 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The issue we",(function (){var G__179927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__179928 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__179927,G__179928) : tailrecursion.hoplon.markdown.simple_node.call(null,G__179927,G__179928));
})(),"re arriving at is that different instances of the same variable can have different values (if we use our current system of interval arithmetic)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179925,G__179926) : tailrecursion.hoplon.markdown.para_node.call(null,G__179925,G__179926));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179914;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179913;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179912;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179911;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_179929 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179930 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_179931 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179932 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__179933 = cljs.core.PersistentArrayMap.EMPTY;
var G__179934 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Explain, in general, why equivalent algebraic expressions may lead to different answers. Can you devise an interval-arithmetic package that does not have this shortcoming, or is this task impossible? (Warning: This problem is very difficult.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179933,G__179934) : tailrecursion.hoplon.markdown.para_node.call(null,G__179933,G__179934));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179932;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179931;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179930;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179929;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_179935 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179936 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_179937 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_179938 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__179939 = cljs.core.PersistentArrayMap.EMPTY;
var G__179940 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I guess this would depend on what we mean by ",(function (){var G__179941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__179942 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["equivalent"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__179941,G__179942) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__179941,G__179942));
})(),". Already due to what we",(function (){var G__179943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__179944 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__179943,G__179944) : tailrecursion.hoplon.markdown.simple_node.call(null,G__179943,G__179944));
})(),"ve seen in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/15/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 2.15"], null)], 0)),", very strange things happen algebraically. For instance, our interval arithmetic does not have the distributive property. To show this, just observe that the distributive property states, \\(A(B+C)=AB+AC\\), but since \\(A\\) appears twice on the right hand side and there are no repeated variables on the left, by the previous exercise we know that the left hand side must have ",(function (){var G__179945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__179946 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tighter error bounds"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__179945,G__179946) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__179945,G__179946));
})(),". Hence the two sides cannot be equal unless there is no error in \\(A\\) (in which case \\(A\\) is not an interval, but a number)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179939,G__179940) : tailrecursion.hoplon.markdown.para_node.call(null,G__179939,G__179940));
})(),(function (){var G__179947 = cljs.core.PersistentArrayMap.EMPTY;
var G__179948 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, I",(function (){var G__179949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__179950 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__179949,G__179950) : tailrecursion.hoplon.markdown.simple_node.call(null,G__179949,G__179950));
})(),"m not too sure if this is possible, but when would we use this? If it is an engineering (or scientific) concern, then we are not really interested in intervals, but rather statistical probabilities, in which case we can use some theorems about error propagation to achieve our goal."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__179947,G__179948) : tailrecursion.hoplon.markdown.para_node.call(null,G__179947,G__179948));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179938;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179937;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_179936;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_179935;
}})()], 0))], 0))], 0));
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$22(G__170650,G__170651,G__170652,G__170653,G__170654,G__170655,G__170656,G__170657,G__170658,G__170659,G__170660,G__170661,G__170662,G__170663,G__170664,G__170665,G__170666,G__170667,G__170668,G__170669,G__170670,G__170671) : tailrecursion.hoplon.div.call(null,G__170650,G__170651,G__170652,G__170653,G__170654,G__170655,G__170656,G__170657,G__170658,G__170659,G__170660,G__170661,G__170662,G__170663,G__170664,G__170665,G__170666,G__170667,G__170668,G__170669,G__170670,G__170671));
};
var book$sicp$texts$ch2sect1$content = function (var_args){
var args__8262__auto__ = null;
if (arguments.length > 0) {
var G__179951__i = 0, G__179951__a = new Array(arguments.length -  0);
while (G__179951__i < G__179951__a.length) {G__179951__a[G__179951__i] = arguments[G__179951__i + 0]; ++G__179951__i;}
  args__8262__auto__ = new cljs.core.IndexedSeq(G__179951__a,0);
} 
return book$sicp$texts$ch2sect1$content__delegate.call(this,args__8262__auto__);};
book$sicp$texts$ch2sect1$content.cljs$lang$maxFixedArity = 0;
book$sicp$texts$ch2sect1$content.cljs$lang$applyTo = (function (arglist__179952){
var args__8262__auto__ = cljs.core.seq(arglist__179952);
return book$sicp$texts$ch2sect1$content__delegate(args__8262__auto__);
});
book$sicp$texts$ch2sect1$content.cljs$core$IFn$_invoke$arity$variadic = book$sicp$texts$ch2sect1$content__delegate;
return book$sicp$texts$ch2sect1$content;
})()
;
